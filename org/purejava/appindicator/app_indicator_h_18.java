// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class app_indicator_h_18 extends app_indicator_h_17 {

    public static MethodHandle gtk_print_settings_set_page_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2962.const$1,"gtk_print_settings_set_page_set");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_page_set(struct _GtkPrintSettings* settings, enum GtkPageSet page_set);
     * }
     */
    public static void gtk_print_settings_set_page_set(MemorySegment settings, int page_set) {
        var mh$ = gtk_print_settings_set_page_set$MH();
        try {
            mh$.invokeExact(settings, page_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_default_source$MH() {
        return RuntimeHelper.requireNonNull(constants$2962.const$2,"gtk_print_settings_get_default_source");
    }
    /**
     * {@snippet :
     * char* gtk_print_settings_get_default_source(struct _GtkPrintSettings* settings);
     * }
     */
    public static MemorySegment gtk_print_settings_get_default_source(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_default_source$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_default_source$MH() {
        return RuntimeHelper.requireNonNull(constants$2962.const$3,"gtk_print_settings_set_default_source");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_default_source(struct _GtkPrintSettings* settings, char* default_source);
     * }
     */
    public static void gtk_print_settings_set_default_source(MemorySegment settings, MemorySegment default_source) {
        var mh$ = gtk_print_settings_set_default_source$MH();
        try {
            mh$.invokeExact(settings, default_source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_media_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2962.const$4,"gtk_print_settings_get_media_type");
    }
    /**
     * {@snippet :
     * char* gtk_print_settings_get_media_type(struct _GtkPrintSettings* settings);
     * }
     */
    public static MemorySegment gtk_print_settings_get_media_type(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_media_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_media_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2962.const$5,"gtk_print_settings_set_media_type");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_media_type(struct _GtkPrintSettings* settings, char* media_type);
     * }
     */
    public static void gtk_print_settings_set_media_type(MemorySegment settings, MemorySegment media_type) {
        var mh$ = gtk_print_settings_set_media_type$MH();
        try {
            mh$.invokeExact(settings, media_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_dither$MH() {
        return RuntimeHelper.requireNonNull(constants$2963.const$0,"gtk_print_settings_get_dither");
    }
    /**
     * {@snippet :
     * char* gtk_print_settings_get_dither(struct _GtkPrintSettings* settings);
     * }
     */
    public static MemorySegment gtk_print_settings_get_dither(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_dither$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_dither$MH() {
        return RuntimeHelper.requireNonNull(constants$2963.const$1,"gtk_print_settings_set_dither");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_dither(struct _GtkPrintSettings* settings, char* dither);
     * }
     */
    public static void gtk_print_settings_set_dither(MemorySegment settings, MemorySegment dither) {
        var mh$ = gtk_print_settings_set_dither$MH();
        try {
            mh$.invokeExact(settings, dither);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_finishings$MH() {
        return RuntimeHelper.requireNonNull(constants$2963.const$2,"gtk_print_settings_get_finishings");
    }
    /**
     * {@snippet :
     * char* gtk_print_settings_get_finishings(struct _GtkPrintSettings* settings);
     * }
     */
    public static MemorySegment gtk_print_settings_get_finishings(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_finishings$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_finishings$MH() {
        return RuntimeHelper.requireNonNull(constants$2963.const$3,"gtk_print_settings_set_finishings");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_finishings(struct _GtkPrintSettings* settings, char* finishings);
     * }
     */
    public static void gtk_print_settings_set_finishings(MemorySegment settings, MemorySegment finishings) {
        var mh$ = gtk_print_settings_set_finishings$MH();
        try {
            mh$.invokeExact(settings, finishings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_output_bin$MH() {
        return RuntimeHelper.requireNonNull(constants$2963.const$4,"gtk_print_settings_get_output_bin");
    }
    /**
     * {@snippet :
     * char* gtk_print_settings_get_output_bin(struct _GtkPrintSettings* settings);
     * }
     */
    public static MemorySegment gtk_print_settings_get_output_bin(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_output_bin$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_output_bin$MH() {
        return RuntimeHelper.requireNonNull(constants$2963.const$5,"gtk_print_settings_set_output_bin");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_output_bin(struct _GtkPrintSettings* settings, char* output_bin);
     * }
     */
    public static void gtk_print_settings_set_output_bin(MemorySegment settings, MemorySegment output_bin) {
        var mh$ = gtk_print_settings_set_output_bin$MH();
        try {
            mh$.invokeExact(settings, output_bin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_to_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$2964.const$0,"gtk_print_settings_to_gvariant");
    }
    /**
     * {@snippet :
     * struct _GVariant* gtk_print_settings_to_gvariant(struct _GtkPrintSettings* settings);
     * }
     */
    public static MemorySegment gtk_print_settings_to_gvariant(MemorySegment settings) {
        var mh$ = gtk_print_settings_to_gvariant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_new_from_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$2964.const$1,"gtk_print_settings_new_from_gvariant");
    }
    /**
     * {@snippet :
     * struct _GtkPrintSettings* gtk_print_settings_new_from_gvariant(struct _GVariant* variant);
     * }
     */
    public static MemorySegment gtk_print_settings_new_from_gvariant(MemorySegment variant) {
        var mh$ = gtk_print_settings_new_from_gvariant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_preview_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2968.const$5,"gtk_print_operation_preview_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_print_operation_preview_get_type();
     * }
     */
    public static long gtk_print_operation_preview_get_type() {
        var mh$ = gtk_print_operation_preview_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_preview_render_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2969.const$0,"gtk_print_operation_preview_render_page");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_preview_render_page(struct _GtkPrintOperationPreview* preview, int page_nr);
     * }
     */
    public static void gtk_print_operation_preview_render_page(MemorySegment preview, int page_nr) {
        var mh$ = gtk_print_operation_preview_render_page$MH();
        try {
            mh$.invokeExact(preview, page_nr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_preview_end_preview$MH() {
        return RuntimeHelper.requireNonNull(constants$2969.const$1,"gtk_print_operation_preview_end_preview");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_preview_end_preview(struct _GtkPrintOperationPreview* preview);
     * }
     */
    public static void gtk_print_operation_preview_end_preview(MemorySegment preview) {
        var mh$ = gtk_print_operation_preview_end_preview$MH();
        try {
            mh$.invokeExact(preview);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_preview_is_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$2969.const$2,"gtk_print_operation_preview_is_selected");
    }
    /**
     * {@snippet :
     * int gtk_print_operation_preview_is_selected(struct _GtkPrintOperationPreview* preview, int page_nr);
     * }
     */
    public static int gtk_print_operation_preview_is_selected(MemorySegment preview, int page_nr) {
        var mh$ = gtk_print_operation_preview_is_selected$MH();
        try {
            return (int)mh$.invokeExact(preview, page_nr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkPrintStatus.GTK_PRINT_STATUS_INITIAL = 0;
     * }
     */
    public static int GTK_PRINT_STATUS_INITIAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkPrintStatus.GTK_PRINT_STATUS_PREPARING = 1;
     * }
     */
    public static int GTK_PRINT_STATUS_PREPARING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkPrintStatus.GTK_PRINT_STATUS_GENERATING_DATA = 2;
     * }
     */
    public static int GTK_PRINT_STATUS_GENERATING_DATA() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkPrintStatus.GTK_PRINT_STATUS_SENDING_DATA = 3;
     * }
     */
    public static int GTK_PRINT_STATUS_SENDING_DATA() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkPrintStatus.GTK_PRINT_STATUS_PENDING = 4;
     * }
     */
    public static int GTK_PRINT_STATUS_PENDING() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkPrintStatus.GTK_PRINT_STATUS_PENDING_ISSUE = 5;
     * }
     */
    public static int GTK_PRINT_STATUS_PENDING_ISSUE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkPrintStatus.GTK_PRINT_STATUS_PRINTING = 6;
     * }
     */
    public static int GTK_PRINT_STATUS_PRINTING() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GtkPrintStatus.GTK_PRINT_STATUS_FINISHED = 7;
     * }
     */
    public static int GTK_PRINT_STATUS_FINISHED() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GtkPrintStatus.GTK_PRINT_STATUS_FINISHED_ABORTED = 8;
     * }
     */
    public static int GTK_PRINT_STATUS_FINISHED_ABORTED() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GtkPrintOperationResult.GTK_PRINT_OPERATION_RESULT_ERROR = 0;
     * }
     */
    public static int GTK_PRINT_OPERATION_RESULT_ERROR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkPrintOperationResult.GTK_PRINT_OPERATION_RESULT_APPLY = 1;
     * }
     */
    public static int GTK_PRINT_OPERATION_RESULT_APPLY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkPrintOperationResult.GTK_PRINT_OPERATION_RESULT_CANCEL = 2;
     * }
     */
    public static int GTK_PRINT_OPERATION_RESULT_CANCEL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkPrintOperationResult.GTK_PRINT_OPERATION_RESULT_IN_PROGRESS = 3;
     * }
     */
    public static int GTK_PRINT_OPERATION_RESULT_IN_PROGRESS() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkPrintOperationAction.GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG = 0;
     * }
     */
    public static int GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkPrintOperationAction.GTK_PRINT_OPERATION_ACTION_PRINT = 1;
     * }
     */
    public static int GTK_PRINT_OPERATION_ACTION_PRINT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkPrintOperationAction.GTK_PRINT_OPERATION_ACTION_PREVIEW = 2;
     * }
     */
    public static int GTK_PRINT_OPERATION_ACTION_PREVIEW() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkPrintOperationAction.GTK_PRINT_OPERATION_ACTION_EXPORT = 3;
     * }
     */
    public static int GTK_PRINT_OPERATION_ACTION_EXPORT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkPrintError.GTK_PRINT_ERROR_GENERAL = 0;
     * }
     */
    public static int GTK_PRINT_ERROR_GENERAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkPrintError.GTK_PRINT_ERROR_INTERNAL_ERROR = 1;
     * }
     */
    public static int GTK_PRINT_ERROR_INTERNAL_ERROR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkPrintError.GTK_PRINT_ERROR_NOMEM = 2;
     * }
     */
    public static int GTK_PRINT_ERROR_NOMEM() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkPrintError.GTK_PRINT_ERROR_INVALID_FILE = 3;
     * }
     */
    public static int GTK_PRINT_ERROR_INVALID_FILE() {
        return (int)3L;
    }
    public static MethodHandle gtk_print_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$2976.const$2,"gtk_print_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int gtk_print_error_quark();
     * }
     */
    public static int gtk_print_error_quark() {
        var mh$ = gtk_print_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2976.const$3,"gtk_print_operation_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_print_operation_get_type();
     * }
     */
    public static long gtk_print_operation_get_type() {
        var mh$ = gtk_print_operation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2976.const$4,"gtk_print_operation_new");
    }
    /**
     * {@snippet :
     * struct _GtkPrintOperation* gtk_print_operation_new();
     * }
     */
    public static MemorySegment gtk_print_operation_new() {
        var mh$ = gtk_print_operation_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_default_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$2976.const$5,"gtk_print_operation_set_default_page_setup");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_default_page_setup(struct _GtkPrintOperation* op, struct _GtkPageSetup* default_page_setup);
     * }
     */
    public static void gtk_print_operation_set_default_page_setup(MemorySegment op, MemorySegment default_page_setup) {
        var mh$ = gtk_print_operation_set_default_page_setup$MH();
        try {
            mh$.invokeExact(op, default_page_setup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_default_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$2977.const$0,"gtk_print_operation_get_default_page_setup");
    }
    /**
     * {@snippet :
     * struct _GtkPageSetup* gtk_print_operation_get_default_page_setup(struct _GtkPrintOperation* op);
     * }
     */
    public static MemorySegment gtk_print_operation_get_default_page_setup(MemorySegment op) {
        var mh$ = gtk_print_operation_get_default_page_setup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_print_settings$MH() {
        return RuntimeHelper.requireNonNull(constants$2977.const$1,"gtk_print_operation_set_print_settings");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_print_settings(struct _GtkPrintOperation* op, struct _GtkPrintSettings* print_settings);
     * }
     */
    public static void gtk_print_operation_set_print_settings(MemorySegment op, MemorySegment print_settings) {
        var mh$ = gtk_print_operation_set_print_settings$MH();
        try {
            mh$.invokeExact(op, print_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_print_settings$MH() {
        return RuntimeHelper.requireNonNull(constants$2977.const$2,"gtk_print_operation_get_print_settings");
    }
    /**
     * {@snippet :
     * struct _GtkPrintSettings* gtk_print_operation_get_print_settings(struct _GtkPrintOperation* op);
     * }
     */
    public static MemorySegment gtk_print_operation_get_print_settings(MemorySegment op) {
        var mh$ = gtk_print_operation_get_print_settings$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_job_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2977.const$3,"gtk_print_operation_set_job_name");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_job_name(struct _GtkPrintOperation* op, char* job_name);
     * }
     */
    public static void gtk_print_operation_set_job_name(MemorySegment op, MemorySegment job_name) {
        var mh$ = gtk_print_operation_set_job_name$MH();
        try {
            mh$.invokeExact(op, job_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_n_pages$MH() {
        return RuntimeHelper.requireNonNull(constants$2977.const$4,"gtk_print_operation_set_n_pages");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_n_pages(struct _GtkPrintOperation* op, int n_pages);
     * }
     */
    public static void gtk_print_operation_set_n_pages(MemorySegment op, int n_pages) {
        var mh$ = gtk_print_operation_set_n_pages$MH();
        try {
            mh$.invokeExact(op, n_pages);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_current_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2977.const$5,"gtk_print_operation_set_current_page");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_current_page(struct _GtkPrintOperation* op, int current_page);
     * }
     */
    public static void gtk_print_operation_set_current_page(MemorySegment op, int current_page) {
        var mh$ = gtk_print_operation_set_current_page$MH();
        try {
            mh$.invokeExact(op, current_page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_use_full_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2978.const$0,"gtk_print_operation_set_use_full_page");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_use_full_page(struct _GtkPrintOperation* op, int full_page);
     * }
     */
    public static void gtk_print_operation_set_use_full_page(MemorySegment op, int full_page) {
        var mh$ = gtk_print_operation_set_use_full_page$MH();
        try {
            mh$.invokeExact(op, full_page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_unit$MH() {
        return RuntimeHelper.requireNonNull(constants$2978.const$1,"gtk_print_operation_set_unit");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_unit(struct _GtkPrintOperation* op, enum GtkUnit unit);
     * }
     */
    public static void gtk_print_operation_set_unit(MemorySegment op, int unit) {
        var mh$ = gtk_print_operation_set_unit$MH();
        try {
            mh$.invokeExact(op, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_export_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$2978.const$2,"gtk_print_operation_set_export_filename");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_export_filename(struct _GtkPrintOperation* op, char* filename);
     * }
     */
    public static void gtk_print_operation_set_export_filename(MemorySegment op, MemorySegment filename) {
        var mh$ = gtk_print_operation_set_export_filename$MH();
        try {
            mh$.invokeExact(op, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_track_print_status$MH() {
        return RuntimeHelper.requireNonNull(constants$2978.const$3,"gtk_print_operation_set_track_print_status");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_track_print_status(struct _GtkPrintOperation* op, int track_status);
     * }
     */
    public static void gtk_print_operation_set_track_print_status(MemorySegment op, int track_status) {
        var mh$ = gtk_print_operation_set_track_print_status$MH();
        try {
            mh$.invokeExact(op, track_status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_show_progress$MH() {
        return RuntimeHelper.requireNonNull(constants$2978.const$4,"gtk_print_operation_set_show_progress");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_show_progress(struct _GtkPrintOperation* op, int show_progress);
     * }
     */
    public static void gtk_print_operation_set_show_progress(MemorySegment op, int show_progress) {
        var mh$ = gtk_print_operation_set_show_progress$MH();
        try {
            mh$.invokeExact(op, show_progress);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_allow_async$MH() {
        return RuntimeHelper.requireNonNull(constants$2978.const$5,"gtk_print_operation_set_allow_async");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_allow_async(struct _GtkPrintOperation* op, int allow_async);
     * }
     */
    public static void gtk_print_operation_set_allow_async(MemorySegment op, int allow_async) {
        var mh$ = gtk_print_operation_set_allow_async$MH();
        try {
            mh$.invokeExact(op, allow_async);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_custom_tab_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2979.const$0,"gtk_print_operation_set_custom_tab_label");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_custom_tab_label(struct _GtkPrintOperation* op, char* label);
     * }
     */
    public static void gtk_print_operation_set_custom_tab_label(MemorySegment op, MemorySegment label) {
        var mh$ = gtk_print_operation_set_custom_tab_label$MH();
        try {
            mh$.invokeExact(op, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_run$MH() {
        return RuntimeHelper.requireNonNull(constants$2979.const$1,"gtk_print_operation_run");
    }
    /**
     * {@snippet :
     * enum GtkPrintOperationResult gtk_print_operation_run(struct _GtkPrintOperation* op, enum GtkPrintOperationAction action, struct _GtkWindow* parent, struct _GError** error);
     * }
     */
    public static int gtk_print_operation_run(MemorySegment op, int action, MemorySegment parent, MemorySegment error) {
        var mh$ = gtk_print_operation_run$MH();
        try {
            return (int)mh$.invokeExact(op, action, parent, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_error$MH() {
        return RuntimeHelper.requireNonNull(constants$2979.const$2,"gtk_print_operation_get_error");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_get_error(struct _GtkPrintOperation* op, struct _GError** error);
     * }
     */
    public static void gtk_print_operation_get_error(MemorySegment op, MemorySegment error) {
        var mh$ = gtk_print_operation_get_error$MH();
        try {
            mh$.invokeExact(op, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_status$MH() {
        return RuntimeHelper.requireNonNull(constants$2979.const$3,"gtk_print_operation_get_status");
    }
    /**
     * {@snippet :
     * enum GtkPrintStatus gtk_print_operation_get_status(struct _GtkPrintOperation* op);
     * }
     */
    public static int gtk_print_operation_get_status(MemorySegment op) {
        var mh$ = gtk_print_operation_get_status$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_status_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2979.const$4,"gtk_print_operation_get_status_string");
    }
    /**
     * {@snippet :
     * char* gtk_print_operation_get_status_string(struct _GtkPrintOperation* op);
     * }
     */
    public static MemorySegment gtk_print_operation_get_status_string(MemorySegment op) {
        var mh$ = gtk_print_operation_get_status_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_is_finished$MH() {
        return RuntimeHelper.requireNonNull(constants$2979.const$5,"gtk_print_operation_is_finished");
    }
    /**
     * {@snippet :
     * int gtk_print_operation_is_finished(struct _GtkPrintOperation* op);
     * }
     */
    public static int gtk_print_operation_is_finished(MemorySegment op) {
        var mh$ = gtk_print_operation_is_finished$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$2980.const$0,"gtk_print_operation_cancel");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_cancel(struct _GtkPrintOperation* op);
     * }
     */
    public static void gtk_print_operation_cancel(MemorySegment op) {
        var mh$ = gtk_print_operation_cancel$MH();
        try {
            mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_draw_page_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$2980.const$1,"gtk_print_operation_draw_page_finish");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_draw_page_finish(struct _GtkPrintOperation* op);
     * }
     */
    public static void gtk_print_operation_draw_page_finish(MemorySegment op) {
        var mh$ = gtk_print_operation_draw_page_finish$MH();
        try {
            mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_defer_drawing$MH() {
        return RuntimeHelper.requireNonNull(constants$2980.const$2,"gtk_print_operation_set_defer_drawing");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_defer_drawing(struct _GtkPrintOperation* op);
     * }
     */
    public static void gtk_print_operation_set_defer_drawing(MemorySegment op) {
        var mh$ = gtk_print_operation_set_defer_drawing$MH();
        try {
            mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_support_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2980.const$3,"gtk_print_operation_set_support_selection");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_support_selection(struct _GtkPrintOperation* op, int support_selection);
     * }
     */
    public static void gtk_print_operation_set_support_selection(MemorySegment op, int support_selection) {
        var mh$ = gtk_print_operation_set_support_selection$MH();
        try {
            mh$.invokeExact(op, support_selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_support_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2980.const$4,"gtk_print_operation_get_support_selection");
    }
    /**
     * {@snippet :
     * int gtk_print_operation_get_support_selection(struct _GtkPrintOperation* op);
     * }
     */
    public static int gtk_print_operation_get_support_selection(MemorySegment op) {
        var mh$ = gtk_print_operation_get_support_selection$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_has_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2980.const$5,"gtk_print_operation_set_has_selection");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_has_selection(struct _GtkPrintOperation* op, int has_selection);
     * }
     */
    public static void gtk_print_operation_set_has_selection(MemorySegment op, int has_selection) {
        var mh$ = gtk_print_operation_set_has_selection$MH();
        try {
            mh$.invokeExact(op, has_selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_has_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2981.const$0,"gtk_print_operation_get_has_selection");
    }
    /**
     * {@snippet :
     * int gtk_print_operation_get_has_selection(struct _GtkPrintOperation* op);
     * }
     */
    public static int gtk_print_operation_get_has_selection(MemorySegment op) {
        var mh$ = gtk_print_operation_get_has_selection$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_embed_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$2981.const$1,"gtk_print_operation_set_embed_page_setup");
    }
    /**
     * {@snippet :
     * void gtk_print_operation_set_embed_page_setup(struct _GtkPrintOperation* op, int embed);
     * }
     */
    public static void gtk_print_operation_set_embed_page_setup(MemorySegment op, int embed) {
        var mh$ = gtk_print_operation_set_embed_page_setup$MH();
        try {
            mh$.invokeExact(op, embed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_embed_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$2981.const$2,"gtk_print_operation_get_embed_page_setup");
    }
    /**
     * {@snippet :
     * int gtk_print_operation_get_embed_page_setup(struct _GtkPrintOperation* op);
     * }
     */
    public static int gtk_print_operation_get_embed_page_setup(MemorySegment op) {
        var mh$ = gtk_print_operation_get_embed_page_setup$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_n_pages_to_print$MH() {
        return RuntimeHelper.requireNonNull(constants$2981.const$3,"gtk_print_operation_get_n_pages_to_print");
    }
    /**
     * {@snippet :
     * int gtk_print_operation_get_n_pages_to_print(struct _GtkPrintOperation* op);
     * }
     */
    public static int gtk_print_operation_get_n_pages_to_print(MemorySegment op) {
        var mh$ = gtk_print_operation_get_n_pages_to_print$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_run_page_setup_dialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2981.const$4,"gtk_print_run_page_setup_dialog");
    }
    /**
     * {@snippet :
     * struct _GtkPageSetup* gtk_print_run_page_setup_dialog(struct _GtkWindow* parent, struct _GtkPageSetup* page_setup, struct _GtkPrintSettings* settings);
     * }
     */
    public static MemorySegment gtk_print_run_page_setup_dialog(MemorySegment parent, MemorySegment page_setup, MemorySegment settings) {
        var mh$ = gtk_print_run_page_setup_dialog$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parent, page_setup, settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_run_page_setup_dialog_async$MH() {
        return RuntimeHelper.requireNonNull(constants$2982.const$1,"gtk_print_run_page_setup_dialog_async");
    }
    /**
     * {@snippet :
     * void gtk_print_run_page_setup_dialog_async(struct _GtkWindow* parent, struct _GtkPageSetup* page_setup, struct _GtkPrintSettings* settings, void (*done_cb)(struct _GtkPageSetup*,void*), void* data);
     * }
     */
    public static void gtk_print_run_page_setup_dialog_async(MemorySegment parent, MemorySegment page_setup, MemorySegment settings, MemorySegment done_cb, MemorySegment data) {
        var mh$ = gtk_print_run_page_setup_dialog_async$MH();
        try {
            mh$.invokeExact(parent, page_setup, settings, done_cb, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2984.const$1,"gtk_progress_bar_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_progress_bar_get_type();
     * }
     */
    public static long gtk_progress_bar_get_type() {
        var mh$ = gtk_progress_bar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2984.const$2,"gtk_progress_bar_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_progress_bar_new();
     * }
     */
    public static MemorySegment gtk_progress_bar_new() {
        var mh$ = gtk_progress_bar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_pulse$MH() {
        return RuntimeHelper.requireNonNull(constants$2984.const$3,"gtk_progress_bar_pulse");
    }
    /**
     * {@snippet :
     * void gtk_progress_bar_pulse(struct _GtkProgressBar* pbar);
     * }
     */
    public static void gtk_progress_bar_pulse(MemorySegment pbar) {
        var mh$ = gtk_progress_bar_pulse$MH();
        try {
            mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2984.const$4,"gtk_progress_bar_set_text");
    }
    /**
     * {@snippet :
     * void gtk_progress_bar_set_text(struct _GtkProgressBar* pbar, char* text);
     * }
     */
    public static void gtk_progress_bar_set_text(MemorySegment pbar, MemorySegment text) {
        var mh$ = gtk_progress_bar_set_text$MH();
        try {
            mh$.invokeExact(pbar, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_set_fraction$MH() {
        return RuntimeHelper.requireNonNull(constants$2984.const$5,"gtk_progress_bar_set_fraction");
    }
    /**
     * {@snippet :
     * void gtk_progress_bar_set_fraction(struct _GtkProgressBar* pbar, double fraction);
     * }
     */
    public static void gtk_progress_bar_set_fraction(MemorySegment pbar, double fraction) {
        var mh$ = gtk_progress_bar_set_fraction$MH();
        try {
            mh$.invokeExact(pbar, fraction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_set_pulse_step$MH() {
        return RuntimeHelper.requireNonNull(constants$2985.const$0,"gtk_progress_bar_set_pulse_step");
    }
    /**
     * {@snippet :
     * void gtk_progress_bar_set_pulse_step(struct _GtkProgressBar* pbar, double fraction);
     * }
     */
    public static void gtk_progress_bar_set_pulse_step(MemorySegment pbar, double fraction) {
        var mh$ = gtk_progress_bar_set_pulse_step$MH();
        try {
            mh$.invokeExact(pbar, fraction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_set_inverted$MH() {
        return RuntimeHelper.requireNonNull(constants$2985.const$1,"gtk_progress_bar_set_inverted");
    }
    /**
     * {@snippet :
     * void gtk_progress_bar_set_inverted(struct _GtkProgressBar* pbar, int inverted);
     * }
     */
    public static void gtk_progress_bar_set_inverted(MemorySegment pbar, int inverted) {
        var mh$ = gtk_progress_bar_set_inverted$MH();
        try {
            mh$.invokeExact(pbar, inverted);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2985.const$2,"gtk_progress_bar_get_text");
    }
    /**
     * {@snippet :
     * char* gtk_progress_bar_get_text(struct _GtkProgressBar* pbar);
     * }
     */
    public static MemorySegment gtk_progress_bar_get_text(MemorySegment pbar) {
        var mh$ = gtk_progress_bar_get_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_fraction$MH() {
        return RuntimeHelper.requireNonNull(constants$2985.const$3,"gtk_progress_bar_get_fraction");
    }
    /**
     * {@snippet :
     * double gtk_progress_bar_get_fraction(struct _GtkProgressBar* pbar);
     * }
     */
    public static double gtk_progress_bar_get_fraction(MemorySegment pbar) {
        var mh$ = gtk_progress_bar_get_fraction$MH();
        try {
            return (double)mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_pulse_step$MH() {
        return RuntimeHelper.requireNonNull(constants$2985.const$4,"gtk_progress_bar_get_pulse_step");
    }
    /**
     * {@snippet :
     * double gtk_progress_bar_get_pulse_step(struct _GtkProgressBar* pbar);
     * }
     */
    public static double gtk_progress_bar_get_pulse_step(MemorySegment pbar) {
        var mh$ = gtk_progress_bar_get_pulse_step$MH();
        try {
            return (double)mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_inverted$MH() {
        return RuntimeHelper.requireNonNull(constants$2985.const$5,"gtk_progress_bar_get_inverted");
    }
    /**
     * {@snippet :
     * int gtk_progress_bar_get_inverted(struct _GtkProgressBar* pbar);
     * }
     */
    public static int gtk_progress_bar_get_inverted(MemorySegment pbar) {
        var mh$ = gtk_progress_bar_get_inverted$MH();
        try {
            return (int)mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_set_ellipsize$MH() {
        return RuntimeHelper.requireNonNull(constants$2986.const$0,"gtk_progress_bar_set_ellipsize");
    }
    /**
     * {@snippet :
     * void gtk_progress_bar_set_ellipsize(struct _GtkProgressBar* pbar, enum PangoEllipsizeMode mode);
     * }
     */
    public static void gtk_progress_bar_set_ellipsize(MemorySegment pbar, int mode) {
        var mh$ = gtk_progress_bar_set_ellipsize$MH();
        try {
            mh$.invokeExact(pbar, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_ellipsize$MH() {
        return RuntimeHelper.requireNonNull(constants$2986.const$1,"gtk_progress_bar_get_ellipsize");
    }
    /**
     * {@snippet :
     * enum PangoEllipsizeMode gtk_progress_bar_get_ellipsize(struct _GtkProgressBar* pbar);
     * }
     */
    public static int gtk_progress_bar_get_ellipsize(MemorySegment pbar) {
        var mh$ = gtk_progress_bar_get_ellipsize$MH();
        try {
            return (int)mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_set_show_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2986.const$2,"gtk_progress_bar_set_show_text");
    }
    /**
     * {@snippet :
     * void gtk_progress_bar_set_show_text(struct _GtkProgressBar* pbar, int show_text);
     * }
     */
    public static void gtk_progress_bar_set_show_text(MemorySegment pbar, int show_text) {
        var mh$ = gtk_progress_bar_set_show_text$MH();
        try {
            mh$.invokeExact(pbar, show_text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_show_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2986.const$3,"gtk_progress_bar_get_show_text");
    }
    /**
     * {@snippet :
     * int gtk_progress_bar_get_show_text(struct _GtkProgressBar* pbar);
     * }
     */
    public static int gtk_progress_bar_get_show_text(MemorySegment pbar) {
        var mh$ = gtk_progress_bar_get_show_text$MH();
        try {
            return (int)mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2988.const$5,"gtk_radio_button_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_radio_button_get_type();
     * }
     */
    public static long gtk_radio_button_get_type() {
        var mh$ = gtk_radio_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2989.const$0,"gtk_radio_button_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_radio_button_new(struct _GSList* group);
     * }
     */
    public static MemorySegment gtk_radio_button_new(MemorySegment group) {
        var mh$ = gtk_radio_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_button_new_from_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2989.const$1,"gtk_radio_button_new_from_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_radio_button_new_from_widget(struct _GtkRadioButton* radio_group_member);
     * }
     */
    public static MemorySegment gtk_radio_button_new_from_widget(MemorySegment radio_group_member) {
        var mh$ = gtk_radio_button_new_from_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(radio_group_member);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_button_new_with_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2989.const$2,"gtk_radio_button_new_with_label");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_radio_button_new_with_label(struct _GSList* group, char* label);
     * }
     */
    public static MemorySegment gtk_radio_button_new_with_label(MemorySegment group, MemorySegment label) {
        var mh$ = gtk_radio_button_new_with_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(group, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_button_new_with_label_from_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2989.const$3,"gtk_radio_button_new_with_label_from_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_radio_button_new_with_label_from_widget(struct _GtkRadioButton* radio_group_member, char* label);
     * }
     */
    public static MemorySegment gtk_radio_button_new_with_label_from_widget(MemorySegment radio_group_member, MemorySegment label) {
        var mh$ = gtk_radio_button_new_with_label_from_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(radio_group_member, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_button_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$2989.const$4,"gtk_radio_button_new_with_mnemonic");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_radio_button_new_with_mnemonic(struct _GSList* group, char* label);
     * }
     */
    public static MemorySegment gtk_radio_button_new_with_mnemonic(MemorySegment group, MemorySegment label) {
        var mh$ = gtk_radio_button_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(group, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_button_new_with_mnemonic_from_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2989.const$5,"gtk_radio_button_new_with_mnemonic_from_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_radio_button_new_with_mnemonic_from_widget(struct _GtkRadioButton* radio_group_member, char* label);
     * }
     */
    public static MemorySegment gtk_radio_button_new_with_mnemonic_from_widget(MemorySegment radio_group_member, MemorySegment label) {
        var mh$ = gtk_radio_button_new_with_mnemonic_from_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(radio_group_member, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_button_get_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2990.const$0,"gtk_radio_button_get_group");
    }
    /**
     * {@snippet :
     * struct _GSList* gtk_radio_button_get_group(struct _GtkRadioButton* radio_button);
     * }
     */
    public static MemorySegment gtk_radio_button_get_group(MemorySegment radio_button) {
        var mh$ = gtk_radio_button_get_group$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(radio_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_button_set_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2990.const$1,"gtk_radio_button_set_group");
    }
    /**
     * {@snippet :
     * void gtk_radio_button_set_group(struct _GtkRadioButton* radio_button, struct _GSList* group);
     * }
     */
    public static void gtk_radio_button_set_group(MemorySegment radio_button, MemorySegment group) {
        var mh$ = gtk_radio_button_set_group$MH();
        try {
            mh$.invokeExact(radio_button, group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_button_join_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2990.const$2,"gtk_radio_button_join_group");
    }
    /**
     * {@snippet :
     * void gtk_radio_button_join_group(struct _GtkRadioButton* radio_button, struct _GtkRadioButton* group_source);
     * }
     */
    public static void gtk_radio_button_join_group(MemorySegment radio_button, MemorySegment group_source) {
        var mh$ = gtk_radio_button_join_group$MH();
        try {
            mh$.invokeExact(radio_button, group_source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_menu_item_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2992.const$4,"gtk_radio_menu_item_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_radio_menu_item_get_type();
     * }
     */
    public static long gtk_radio_menu_item_get_type() {
        var mh$ = gtk_radio_menu_item_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_menu_item_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2992.const$5,"gtk_radio_menu_item_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_radio_menu_item_new(struct _GSList* group);
     * }
     */
    public static MemorySegment gtk_radio_menu_item_new(MemorySegment group) {
        var mh$ = gtk_radio_menu_item_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_menu_item_new_with_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2993.const$0,"gtk_radio_menu_item_new_with_label");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_radio_menu_item_new_with_label(struct _GSList* group, char* label);
     * }
     */
    public static MemorySegment gtk_radio_menu_item_new_with_label(MemorySegment group, MemorySegment label) {
        var mh$ = gtk_radio_menu_item_new_with_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(group, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_menu_item_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$2993.const$1,"gtk_radio_menu_item_new_with_mnemonic");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_radio_menu_item_new_with_mnemonic(struct _GSList* group, char* label);
     * }
     */
    public static MemorySegment gtk_radio_menu_item_new_with_mnemonic(MemorySegment group, MemorySegment label) {
        var mh$ = gtk_radio_menu_item_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(group, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_menu_item_new_from_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2993.const$2,"gtk_radio_menu_item_new_from_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_radio_menu_item_new_from_widget(struct _GtkRadioMenuItem* group);
     * }
     */
    public static MemorySegment gtk_radio_menu_item_new_from_widget(MemorySegment group) {
        var mh$ = gtk_radio_menu_item_new_from_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_menu_item_new_with_mnemonic_from_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2993.const$3,"gtk_radio_menu_item_new_with_mnemonic_from_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_radio_menu_item_new_with_mnemonic_from_widget(struct _GtkRadioMenuItem* group, char* label);
     * }
     */
    public static MemorySegment gtk_radio_menu_item_new_with_mnemonic_from_widget(MemorySegment group, MemorySegment label) {
        var mh$ = gtk_radio_menu_item_new_with_mnemonic_from_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(group, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_menu_item_new_with_label_from_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2993.const$4,"gtk_radio_menu_item_new_with_label_from_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_radio_menu_item_new_with_label_from_widget(struct _GtkRadioMenuItem* group, char* label);
     * }
     */
    public static MemorySegment gtk_radio_menu_item_new_with_label_from_widget(MemorySegment group, MemorySegment label) {
        var mh$ = gtk_radio_menu_item_new_with_label_from_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(group, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_menu_item_get_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2993.const$5,"gtk_radio_menu_item_get_group");
    }
    /**
     * {@snippet :
     * struct _GSList* gtk_radio_menu_item_get_group(struct _GtkRadioMenuItem* radio_menu_item);
     * }
     */
    public static MemorySegment gtk_radio_menu_item_get_group(MemorySegment radio_menu_item) {
        var mh$ = gtk_radio_menu_item_get_group$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(radio_menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_menu_item_set_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2994.const$0,"gtk_radio_menu_item_set_group");
    }
    /**
     * {@snippet :
     * void gtk_radio_menu_item_set_group(struct _GtkRadioMenuItem* radio_menu_item, struct _GSList* group);
     * }
     */
    public static void gtk_radio_menu_item_set_group(MemorySegment radio_menu_item, MemorySegment group) {
        var mh$ = gtk_radio_menu_item_set_group$MH();
        try {
            mh$.invokeExact(radio_menu_item, group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_menu_item_join_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2994.const$1,"gtk_radio_menu_item_join_group");
    }
    /**
     * {@snippet :
     * void gtk_radio_menu_item_join_group(struct _GtkRadioMenuItem* radio_menu_item, struct _GtkRadioMenuItem* group_source);
     * }
     */
    public static void gtk_radio_menu_item_join_group(MemorySegment radio_menu_item, MemorySegment group_source) {
        var mh$ = gtk_radio_menu_item_join_group$MH();
        try {
            mh$.invokeExact(radio_menu_item, group_source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_tool_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2996.const$3,"gtk_toggle_tool_button_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_toggle_tool_button_get_type();
     * }
     */
    public static long gtk_toggle_tool_button_get_type() {
        var mh$ = gtk_toggle_tool_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_tool_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2996.const$4,"gtk_toggle_tool_button_new");
    }
    /**
     * {@snippet :
     * struct _GtkToolItem* gtk_toggle_tool_button_new();
     * }
     */
    public static MemorySegment gtk_toggle_tool_button_new() {
        var mh$ = gtk_toggle_tool_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_tool_button_new_from_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$2996.const$5,"gtk_toggle_tool_button_new_from_stock");
    }
    /**
     * {@snippet :
     * struct _GtkToolItem* gtk_toggle_tool_button_new_from_stock(char* stock_id);
     * }
     */
    public static MemorySegment gtk_toggle_tool_button_new_from_stock(MemorySegment stock_id) {
        var mh$ = gtk_toggle_tool_button_new_from_stock$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_tool_button_set_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2997.const$0,"gtk_toggle_tool_button_set_active");
    }
    /**
     * {@snippet :
     * void gtk_toggle_tool_button_set_active(struct _GtkToggleToolButton* button, int is_active);
     * }
     */
    public static void gtk_toggle_tool_button_set_active(MemorySegment button, int is_active) {
        var mh$ = gtk_toggle_tool_button_set_active$MH();
        try {
            mh$.invokeExact(button, is_active);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_tool_button_get_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2997.const$1,"gtk_toggle_tool_button_get_active");
    }
    /**
     * {@snippet :
     * int gtk_toggle_tool_button_get_active(struct _GtkToggleToolButton* button);
     * }
     */
    public static int gtk_toggle_tool_button_get_active(MemorySegment button) {
        var mh$ = gtk_toggle_tool_button_get_active$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_tool_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2999.const$0,"gtk_radio_tool_button_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_radio_tool_button_get_type();
     * }
     */
    public static long gtk_radio_tool_button_get_type() {
        var mh$ = gtk_radio_tool_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_tool_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2999.const$1,"gtk_radio_tool_button_new");
    }
    /**
     * {@snippet :
     * struct _GtkToolItem* gtk_radio_tool_button_new(struct _GSList* group);
     * }
     */
    public static MemorySegment gtk_radio_tool_button_new(MemorySegment group) {
        var mh$ = gtk_radio_tool_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_tool_button_new_from_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$2999.const$2,"gtk_radio_tool_button_new_from_stock");
    }
    /**
     * {@snippet :
     * struct _GtkToolItem* gtk_radio_tool_button_new_from_stock(struct _GSList* group, char* stock_id);
     * }
     */
    public static MemorySegment gtk_radio_tool_button_new_from_stock(MemorySegment group, MemorySegment stock_id) {
        var mh$ = gtk_radio_tool_button_new_from_stock$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(group, stock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_tool_button_new_from_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2999.const$3,"gtk_radio_tool_button_new_from_widget");
    }
    /**
     * {@snippet :
     * struct _GtkToolItem* gtk_radio_tool_button_new_from_widget(struct _GtkRadioToolButton* group);
     * }
     */
    public static MemorySegment gtk_radio_tool_button_new_from_widget(MemorySegment group) {
        var mh$ = gtk_radio_tool_button_new_from_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_tool_button_new_with_stock_from_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2999.const$4,"gtk_radio_tool_button_new_with_stock_from_widget");
    }
    /**
     * {@snippet :
     * struct _GtkToolItem* gtk_radio_tool_button_new_with_stock_from_widget(struct _GtkRadioToolButton* group, char* stock_id);
     * }
     */
    public static MemorySegment gtk_radio_tool_button_new_with_stock_from_widget(MemorySegment group, MemorySegment stock_id) {
        var mh$ = gtk_radio_tool_button_new_with_stock_from_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(group, stock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_tool_button_get_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2999.const$5,"gtk_radio_tool_button_get_group");
    }
    /**
     * {@snippet :
     * struct _GSList* gtk_radio_tool_button_get_group(struct _GtkRadioToolButton* button);
     * }
     */
    public static MemorySegment gtk_radio_tool_button_get_group(MemorySegment button) {
        var mh$ = gtk_radio_tool_button_get_group$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_radio_tool_button_set_group$MH() {
        return RuntimeHelper.requireNonNull(constants$3000.const$0,"gtk_radio_tool_button_set_group");
    }
    /**
     * {@snippet :
     * void gtk_radio_tool_button_set_group(struct _GtkRadioToolButton* button, struct _GSList* group);
     * }
     */
    public static void gtk_radio_tool_button_set_group(MemorySegment button, MemorySegment group) {
        var mh$ = gtk_radio_tool_button_set_group$MH();
        try {
            mh$.invokeExact(button, group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3004.const$2,"gtk_range_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_range_get_type();
     * }
     */
    public static long gtk_range_get_type() {
        var mh$ = gtk_range_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3004.const$3,"gtk_range_set_adjustment");
    }
    /**
     * {@snippet :
     * void gtk_range_set_adjustment(struct _GtkRange* range, struct _GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_range_set_adjustment(MemorySegment range, MemorySegment adjustment) {
        var mh$ = gtk_range_set_adjustment$MH();
        try {
            mh$.invokeExact(range, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3004.const$4,"gtk_range_get_adjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_range_get_adjustment(struct _GtkRange* range);
     * }
     */
    public static MemorySegment gtk_range_get_adjustment(MemorySegment range) {
        var mh$ = gtk_range_get_adjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_inverted$MH() {
        return RuntimeHelper.requireNonNull(constants$3004.const$5,"gtk_range_set_inverted");
    }
    /**
     * {@snippet :
     * void gtk_range_set_inverted(struct _GtkRange* range, int setting);
     * }
     */
    public static void gtk_range_set_inverted(MemorySegment range, int setting) {
        var mh$ = gtk_range_set_inverted$MH();
        try {
            mh$.invokeExact(range, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_inverted$MH() {
        return RuntimeHelper.requireNonNull(constants$3005.const$0,"gtk_range_get_inverted");
    }
    /**
     * {@snippet :
     * int gtk_range_get_inverted(struct _GtkRange* range);
     * }
     */
    public static int gtk_range_get_inverted(MemorySegment range) {
        var mh$ = gtk_range_get_inverted$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_flippable$MH() {
        return RuntimeHelper.requireNonNull(constants$3005.const$1,"gtk_range_set_flippable");
    }
    /**
     * {@snippet :
     * void gtk_range_set_flippable(struct _GtkRange* range, int flippable);
     * }
     */
    public static void gtk_range_set_flippable(MemorySegment range, int flippable) {
        var mh$ = gtk_range_set_flippable$MH();
        try {
            mh$.invokeExact(range, flippable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_flippable$MH() {
        return RuntimeHelper.requireNonNull(constants$3005.const$2,"gtk_range_get_flippable");
    }
    /**
     * {@snippet :
     * int gtk_range_get_flippable(struct _GtkRange* range);
     * }
     */
    public static int gtk_range_get_flippable(MemorySegment range) {
        var mh$ = gtk_range_get_flippable$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_slider_size_fixed$MH() {
        return RuntimeHelper.requireNonNull(constants$3005.const$3,"gtk_range_set_slider_size_fixed");
    }
    /**
     * {@snippet :
     * void gtk_range_set_slider_size_fixed(struct _GtkRange* range, int size_fixed);
     * }
     */
    public static void gtk_range_set_slider_size_fixed(MemorySegment range, int size_fixed) {
        var mh$ = gtk_range_set_slider_size_fixed$MH();
        try {
            mh$.invokeExact(range, size_fixed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_slider_size_fixed$MH() {
        return RuntimeHelper.requireNonNull(constants$3005.const$4,"gtk_range_get_slider_size_fixed");
    }
    /**
     * {@snippet :
     * int gtk_range_get_slider_size_fixed(struct _GtkRange* range);
     * }
     */
    public static int gtk_range_get_slider_size_fixed(MemorySegment range) {
        var mh$ = gtk_range_get_slider_size_fixed$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_min_slider_size$MH() {
        return RuntimeHelper.requireNonNull(constants$3005.const$5,"gtk_range_set_min_slider_size");
    }
    /**
     * {@snippet :
     * void gtk_range_set_min_slider_size(struct _GtkRange* range, int min_size);
     * }
     */
    public static void gtk_range_set_min_slider_size(MemorySegment range, int min_size) {
        var mh$ = gtk_range_set_min_slider_size$MH();
        try {
            mh$.invokeExact(range, min_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_min_slider_size$MH() {
        return RuntimeHelper.requireNonNull(constants$3006.const$0,"gtk_range_get_min_slider_size");
    }
    /**
     * {@snippet :
     * int gtk_range_get_min_slider_size(struct _GtkRange* range);
     * }
     */
    public static int gtk_range_get_min_slider_size(MemorySegment range) {
        var mh$ = gtk_range_get_min_slider_size$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_range_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$3006.const$1,"gtk_range_get_range_rect");
    }
    /**
     * {@snippet :
     * void gtk_range_get_range_rect(struct _GtkRange* range, struct _cairo_rectangle_int* range_rect);
     * }
     */
    public static void gtk_range_get_range_rect(MemorySegment range, MemorySegment range_rect) {
        var mh$ = gtk_range_get_range_rect$MH();
        try {
            mh$.invokeExact(range, range_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_slider_range$MH() {
        return RuntimeHelper.requireNonNull(constants$3006.const$2,"gtk_range_get_slider_range");
    }
    /**
     * {@snippet :
     * void gtk_range_get_slider_range(struct _GtkRange* range, int* slider_start, int* slider_end);
     * }
     */
    public static void gtk_range_get_slider_range(MemorySegment range, MemorySegment slider_start, MemorySegment slider_end) {
        var mh$ = gtk_range_get_slider_range$MH();
        try {
            mh$.invokeExact(range, slider_start, slider_end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_lower_stepper_sensitivity$MH() {
        return RuntimeHelper.requireNonNull(constants$3006.const$3,"gtk_range_set_lower_stepper_sensitivity");
    }
    /**
     * {@snippet :
     * void gtk_range_set_lower_stepper_sensitivity(struct _GtkRange* range, enum GtkSensitivityType sensitivity);
     * }
     */
    public static void gtk_range_set_lower_stepper_sensitivity(MemorySegment range, int sensitivity) {
        var mh$ = gtk_range_set_lower_stepper_sensitivity$MH();
        try {
            mh$.invokeExact(range, sensitivity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_lower_stepper_sensitivity$MH() {
        return RuntimeHelper.requireNonNull(constants$3006.const$4,"gtk_range_get_lower_stepper_sensitivity");
    }
    /**
     * {@snippet :
     * enum GtkSensitivityType gtk_range_get_lower_stepper_sensitivity(struct _GtkRange* range);
     * }
     */
    public static int gtk_range_get_lower_stepper_sensitivity(MemorySegment range) {
        var mh$ = gtk_range_get_lower_stepper_sensitivity$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_upper_stepper_sensitivity$MH() {
        return RuntimeHelper.requireNonNull(constants$3006.const$5,"gtk_range_set_upper_stepper_sensitivity");
    }
    /**
     * {@snippet :
     * void gtk_range_set_upper_stepper_sensitivity(struct _GtkRange* range, enum GtkSensitivityType sensitivity);
     * }
     */
    public static void gtk_range_set_upper_stepper_sensitivity(MemorySegment range, int sensitivity) {
        var mh$ = gtk_range_set_upper_stepper_sensitivity$MH();
        try {
            mh$.invokeExact(range, sensitivity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_upper_stepper_sensitivity$MH() {
        return RuntimeHelper.requireNonNull(constants$3007.const$0,"gtk_range_get_upper_stepper_sensitivity");
    }
    /**
     * {@snippet :
     * enum GtkSensitivityType gtk_range_get_upper_stepper_sensitivity(struct _GtkRange* range);
     * }
     */
    public static int gtk_range_get_upper_stepper_sensitivity(MemorySegment range) {
        var mh$ = gtk_range_get_upper_stepper_sensitivity$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_increments$MH() {
        return RuntimeHelper.requireNonNull(constants$3007.const$1,"gtk_range_set_increments");
    }
    /**
     * {@snippet :
     * void gtk_range_set_increments(struct _GtkRange* range, double step, double page);
     * }
     */
    public static void gtk_range_set_increments(MemorySegment range, double step, double page) {
        var mh$ = gtk_range_set_increments$MH();
        try {
            mh$.invokeExact(range, step, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_range$MH() {
        return RuntimeHelper.requireNonNull(constants$3007.const$2,"gtk_range_set_range");
    }
    /**
     * {@snippet :
     * void gtk_range_set_range(struct _GtkRange* range, double min, double max);
     * }
     */
    public static void gtk_range_set_range(MemorySegment range, double min, double max) {
        var mh$ = gtk_range_set_range$MH();
        try {
            mh$.invokeExact(range, min, max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$3007.const$3,"gtk_range_set_value");
    }
    /**
     * {@snippet :
     * void gtk_range_set_value(struct _GtkRange* range, double value);
     * }
     */
    public static void gtk_range_set_value(MemorySegment range, double value) {
        var mh$ = gtk_range_set_value$MH();
        try {
            mh$.invokeExact(range, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$3007.const$4,"gtk_range_get_value");
    }
    /**
     * {@snippet :
     * double gtk_range_get_value(struct _GtkRange* range);
     * }
     */
    public static double gtk_range_get_value(MemorySegment range) {
        var mh$ = gtk_range_get_value$MH();
        try {
            return (double)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_show_fill_level$MH() {
        return RuntimeHelper.requireNonNull(constants$3007.const$5,"gtk_range_set_show_fill_level");
    }
    /**
     * {@snippet :
     * void gtk_range_set_show_fill_level(struct _GtkRange* range, int show_fill_level);
     * }
     */
    public static void gtk_range_set_show_fill_level(MemorySegment range, int show_fill_level) {
        var mh$ = gtk_range_set_show_fill_level$MH();
        try {
            mh$.invokeExact(range, show_fill_level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_show_fill_level$MH() {
        return RuntimeHelper.requireNonNull(constants$3008.const$0,"gtk_range_get_show_fill_level");
    }
    /**
     * {@snippet :
     * int gtk_range_get_show_fill_level(struct _GtkRange* range);
     * }
     */
    public static int gtk_range_get_show_fill_level(MemorySegment range) {
        var mh$ = gtk_range_get_show_fill_level$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_restrict_to_fill_level$MH() {
        return RuntimeHelper.requireNonNull(constants$3008.const$1,"gtk_range_set_restrict_to_fill_level");
    }
    /**
     * {@snippet :
     * void gtk_range_set_restrict_to_fill_level(struct _GtkRange* range, int restrict_to_fill_level);
     * }
     */
    public static void gtk_range_set_restrict_to_fill_level(MemorySegment range, int restrict_to_fill_level) {
        var mh$ = gtk_range_set_restrict_to_fill_level$MH();
        try {
            mh$.invokeExact(range, restrict_to_fill_level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_restrict_to_fill_level$MH() {
        return RuntimeHelper.requireNonNull(constants$3008.const$2,"gtk_range_get_restrict_to_fill_level");
    }
    /**
     * {@snippet :
     * int gtk_range_get_restrict_to_fill_level(struct _GtkRange* range);
     * }
     */
    public static int gtk_range_get_restrict_to_fill_level(MemorySegment range) {
        var mh$ = gtk_range_get_restrict_to_fill_level$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_fill_level$MH() {
        return RuntimeHelper.requireNonNull(constants$3008.const$3,"gtk_range_set_fill_level");
    }
    /**
     * {@snippet :
     * void gtk_range_set_fill_level(struct _GtkRange* range, double fill_level);
     * }
     */
    public static void gtk_range_set_fill_level(MemorySegment range, double fill_level) {
        var mh$ = gtk_range_set_fill_level$MH();
        try {
            mh$.invokeExact(range, fill_level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_fill_level$MH() {
        return RuntimeHelper.requireNonNull(constants$3008.const$4,"gtk_range_get_fill_level");
    }
    /**
     * {@snippet :
     * double gtk_range_get_fill_level(struct _GtkRange* range);
     * }
     */
    public static double gtk_range_get_fill_level(MemorySegment range) {
        var mh$ = gtk_range_get_fill_level$MH();
        try {
            return (double)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_round_digits$MH() {
        return RuntimeHelper.requireNonNull(constants$3008.const$5,"gtk_range_set_round_digits");
    }
    /**
     * {@snippet :
     * void gtk_range_set_round_digits(struct _GtkRange* range, int round_digits);
     * }
     */
    public static void gtk_range_set_round_digits(MemorySegment range, int round_digits) {
        var mh$ = gtk_range_set_round_digits$MH();
        try {
            mh$.invokeExact(range, round_digits);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_round_digits$MH() {
        return RuntimeHelper.requireNonNull(constants$3009.const$0,"gtk_range_get_round_digits");
    }
    /**
     * {@snippet :
     * int gtk_range_get_round_digits(struct _GtkRange* range);
     * }
     */
    public static int gtk_range_get_round_digits(MemorySegment range) {
        var mh$ = gtk_range_get_round_digits$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkRecentManagerError.GTK_RECENT_MANAGER_ERROR_NOT_FOUND = 0;
     * }
     */
    public static int GTK_RECENT_MANAGER_ERROR_NOT_FOUND() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkRecentManagerError.GTK_RECENT_MANAGER_ERROR_INVALID_URI = 1;
     * }
     */
    public static int GTK_RECENT_MANAGER_ERROR_INVALID_URI() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkRecentManagerError.GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING = 2;
     * }
     */
    public static int GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkRecentManagerError.GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED = 3;
     * }
     */
    public static int GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkRecentManagerError.GTK_RECENT_MANAGER_ERROR_READ = 4;
     * }
     */
    public static int GTK_RECENT_MANAGER_ERROR_READ() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkRecentManagerError.GTK_RECENT_MANAGER_ERROR_WRITE = 5;
     * }
     */
    public static int GTK_RECENT_MANAGER_ERROR_WRITE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkRecentManagerError.GTK_RECENT_MANAGER_ERROR_UNKNOWN = 6;
     * }
     */
    public static int GTK_RECENT_MANAGER_ERROR_UNKNOWN() {
        return (int)6L;
    }
    public static MethodHandle gtk_recent_manager_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$3012.const$4,"gtk_recent_manager_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int gtk_recent_manager_error_quark();
     * }
     */
    public static int gtk_recent_manager_error_quark() {
        var mh$ = gtk_recent_manager_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3012.const$5,"gtk_recent_manager_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_recent_manager_get_type();
     * }
     */
    public static long gtk_recent_manager_get_type() {
        var mh$ = gtk_recent_manager_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3013.const$0,"gtk_recent_manager_new");
    }
    /**
     * {@snippet :
     * struct _GtkRecentManager* gtk_recent_manager_new();
     * }
     */
    public static MemorySegment gtk_recent_manager_new() {
        var mh$ = gtk_recent_manager_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$3013.const$1,"gtk_recent_manager_get_default");
    }
    /**
     * {@snippet :
     * struct _GtkRecentManager* gtk_recent_manager_get_default();
     * }
     */
    public static MemorySegment gtk_recent_manager_get_default() {
        var mh$ = gtk_recent_manager_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_add_item$MH() {
        return RuntimeHelper.requireNonNull(constants$3013.const$2,"gtk_recent_manager_add_item");
    }
    /**
     * {@snippet :
     * int gtk_recent_manager_add_item(struct _GtkRecentManager* manager, char* uri);
     * }
     */
    public static int gtk_recent_manager_add_item(MemorySegment manager, MemorySegment uri) {
        var mh$ = gtk_recent_manager_add_item$MH();
        try {
            return (int)mh$.invokeExact(manager, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_add_full$MH() {
        return RuntimeHelper.requireNonNull(constants$3013.const$3,"gtk_recent_manager_add_full");
    }
    /**
     * {@snippet :
     * int gtk_recent_manager_add_full(struct _GtkRecentManager* manager, char* uri, struct _GtkRecentData* recent_data);
     * }
     */
    public static int gtk_recent_manager_add_full(MemorySegment manager, MemorySegment uri, MemorySegment recent_data) {
        var mh$ = gtk_recent_manager_add_full$MH();
        try {
            return (int)mh$.invokeExact(manager, uri, recent_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_remove_item$MH() {
        return RuntimeHelper.requireNonNull(constants$3013.const$4,"gtk_recent_manager_remove_item");
    }
    /**
     * {@snippet :
     * int gtk_recent_manager_remove_item(struct _GtkRecentManager* manager, char* uri, struct _GError** error);
     * }
     */
    public static int gtk_recent_manager_remove_item(MemorySegment manager, MemorySegment uri, MemorySegment error) {
        var mh$ = gtk_recent_manager_remove_item$MH();
        try {
            return (int)mh$.invokeExact(manager, uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_lookup_item$MH() {
        return RuntimeHelper.requireNonNull(constants$3013.const$5,"gtk_recent_manager_lookup_item");
    }
    /**
     * {@snippet :
     * struct _GtkRecentInfo* gtk_recent_manager_lookup_item(struct _GtkRecentManager* manager, char* uri, struct _GError** error);
     * }
     */
    public static MemorySegment gtk_recent_manager_lookup_item(MemorySegment manager, MemorySegment uri, MemorySegment error) {
        var mh$ = gtk_recent_manager_lookup_item$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(manager, uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_has_item$MH() {
        return RuntimeHelper.requireNonNull(constants$3014.const$0,"gtk_recent_manager_has_item");
    }
    /**
     * {@snippet :
     * int gtk_recent_manager_has_item(struct _GtkRecentManager* manager, char* uri);
     * }
     */
    public static int gtk_recent_manager_has_item(MemorySegment manager, MemorySegment uri) {
        var mh$ = gtk_recent_manager_has_item$MH();
        try {
            return (int)mh$.invokeExact(manager, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_move_item$MH() {
        return RuntimeHelper.requireNonNull(constants$3014.const$1,"gtk_recent_manager_move_item");
    }
    /**
     * {@snippet :
     * int gtk_recent_manager_move_item(struct _GtkRecentManager* manager, char* uri, char* new_uri, struct _GError** error);
     * }
     */
    public static int gtk_recent_manager_move_item(MemorySegment manager, MemorySegment uri, MemorySegment new_uri, MemorySegment error) {
        var mh$ = gtk_recent_manager_move_item$MH();
        try {
            return (int)mh$.invokeExact(manager, uri, new_uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_get_items$MH() {
        return RuntimeHelper.requireNonNull(constants$3014.const$2,"gtk_recent_manager_get_items");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_recent_manager_get_items(struct _GtkRecentManager* manager);
     * }
     */
    public static MemorySegment gtk_recent_manager_get_items(MemorySegment manager) {
        var mh$ = gtk_recent_manager_get_items$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_purge_items$MH() {
        return RuntimeHelper.requireNonNull(constants$3014.const$3,"gtk_recent_manager_purge_items");
    }
    /**
     * {@snippet :
     * int gtk_recent_manager_purge_items(struct _GtkRecentManager* manager, struct _GError** error);
     * }
     */
    public static int gtk_recent_manager_purge_items(MemorySegment manager, MemorySegment error) {
        var mh$ = gtk_recent_manager_purge_items$MH();
        try {
            return (int)mh$.invokeExact(manager, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3014.const$4,"gtk_recent_info_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_recent_info_get_type();
     * }
     */
    public static long gtk_recent_info_get_type() {
        var mh$ = gtk_recent_info_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$3014.const$5,"gtk_recent_info_ref");
    }
    /**
     * {@snippet :
     * struct _GtkRecentInfo* gtk_recent_info_ref(struct _GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_ref(MemorySegment info) {
        var mh$ = gtk_recent_info_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$3015.const$0,"gtk_recent_info_unref");
    }
    /**
     * {@snippet :
     * void gtk_recent_info_unref(struct _GtkRecentInfo* info);
     * }
     */
    public static void gtk_recent_info_unref(MemorySegment info) {
        var mh$ = gtk_recent_info_unref$MH();
        try {
            mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$3015.const$1,"gtk_recent_info_get_uri");
    }
    /**
     * {@snippet :
     * char* gtk_recent_info_get_uri(struct _GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_get_uri(MemorySegment info) {
        var mh$ = gtk_recent_info_get_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_display_name$MH() {
        return RuntimeHelper.requireNonNull(constants$3015.const$2,"gtk_recent_info_get_display_name");
    }
    /**
     * {@snippet :
     * char* gtk_recent_info_get_display_name(struct _GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_get_display_name(MemorySegment info) {
        var mh$ = gtk_recent_info_get_display_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$3015.const$3,"gtk_recent_info_get_description");
    }
    /**
     * {@snippet :
     * char* gtk_recent_info_get_description(struct _GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_get_description(MemorySegment info) {
        var mh$ = gtk_recent_info_get_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3015.const$4,"gtk_recent_info_get_mime_type");
    }
    /**
     * {@snippet :
     * char* gtk_recent_info_get_mime_type(struct _GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_get_mime_type(MemorySegment info) {
        var mh$ = gtk_recent_info_get_mime_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_added$MH() {
        return RuntimeHelper.requireNonNull(constants$3015.const$5,"gtk_recent_info_get_added");
    }
    /**
     * {@snippet :
     * long gtk_recent_info_get_added(struct _GtkRecentInfo* info);
     * }
     */
    public static long gtk_recent_info_get_added(MemorySegment info) {
        var mh$ = gtk_recent_info_get_added$MH();
        try {
            return (long)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_modified$MH() {
        return RuntimeHelper.requireNonNull(constants$3016.const$0,"gtk_recent_info_get_modified");
    }
    /**
     * {@snippet :
     * long gtk_recent_info_get_modified(struct _GtkRecentInfo* info);
     * }
     */
    public static long gtk_recent_info_get_modified(MemorySegment info) {
        var mh$ = gtk_recent_info_get_modified$MH();
        try {
            return (long)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_visited$MH() {
        return RuntimeHelper.requireNonNull(constants$3016.const$1,"gtk_recent_info_get_visited");
    }
    /**
     * {@snippet :
     * long gtk_recent_info_get_visited(struct _GtkRecentInfo* info);
     * }
     */
    public static long gtk_recent_info_get_visited(MemorySegment info) {
        var mh$ = gtk_recent_info_get_visited$MH();
        try {
            return (long)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_private_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$3016.const$2,"gtk_recent_info_get_private_hint");
    }
    /**
     * {@snippet :
     * int gtk_recent_info_get_private_hint(struct _GtkRecentInfo* info);
     * }
     */
    public static int gtk_recent_info_get_private_hint(MemorySegment info) {
        var mh$ = gtk_recent_info_get_private_hint$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_application_info$MH() {
        return RuntimeHelper.requireNonNull(constants$3016.const$3,"gtk_recent_info_get_application_info");
    }
    /**
     * {@snippet :
     * int gtk_recent_info_get_application_info(struct _GtkRecentInfo* info, char* app_name, char** app_exec, unsigned int* count, long* time_);
     * }
     */
    public static int gtk_recent_info_get_application_info(MemorySegment info, MemorySegment app_name, MemorySegment app_exec, MemorySegment count, MemorySegment time_) {
        var mh$ = gtk_recent_info_get_application_info$MH();
        try {
            return (int)mh$.invokeExact(info, app_name, app_exec, count, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_create_app_info$MH() {
        return RuntimeHelper.requireNonNull(constants$3016.const$4,"gtk_recent_info_create_app_info");
    }
    /**
     * {@snippet :
     * struct _GAppInfo* gtk_recent_info_create_app_info(struct _GtkRecentInfo* info, char* app_name, struct _GError** error);
     * }
     */
    public static MemorySegment gtk_recent_info_create_app_info(MemorySegment info, MemorySegment app_name, MemorySegment error) {
        var mh$ = gtk_recent_info_create_app_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info, app_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_applications$MH() {
        return RuntimeHelper.requireNonNull(constants$3016.const$5,"gtk_recent_info_get_applications");
    }
    /**
     * {@snippet :
     * char** gtk_recent_info_get_applications(struct _GtkRecentInfo* info, unsigned long* length);
     * }
     */
    public static MemorySegment gtk_recent_info_get_applications(MemorySegment info, MemorySegment length) {
        var mh$ = gtk_recent_info_get_applications$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_last_application$MH() {
        return RuntimeHelper.requireNonNull(constants$3017.const$0,"gtk_recent_info_last_application");
    }
    /**
     * {@snippet :
     * char* gtk_recent_info_last_application(struct _GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_last_application(MemorySegment info) {
        var mh$ = gtk_recent_info_last_application$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_has_application$MH() {
        return RuntimeHelper.requireNonNull(constants$3017.const$1,"gtk_recent_info_has_application");
    }
    /**
     * {@snippet :
     * int gtk_recent_info_has_application(struct _GtkRecentInfo* info, char* app_name);
     * }
     */
    public static int gtk_recent_info_has_application(MemorySegment info, MemorySegment app_name) {
        var mh$ = gtk_recent_info_has_application$MH();
        try {
            return (int)mh$.invokeExact(info, app_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_groups$MH() {
        return RuntimeHelper.requireNonNull(constants$3017.const$2,"gtk_recent_info_get_groups");
    }
    /**
     * {@snippet :
     * char** gtk_recent_info_get_groups(struct _GtkRecentInfo* info, unsigned long* length);
     * }
     */
    public static MemorySegment gtk_recent_info_get_groups(MemorySegment info, MemorySegment length) {
        var mh$ = gtk_recent_info_get_groups$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_has_group$MH() {
        return RuntimeHelper.requireNonNull(constants$3017.const$3,"gtk_recent_info_has_group");
    }
    /**
     * {@snippet :
     * int gtk_recent_info_has_group(struct _GtkRecentInfo* info, char* group_name);
     * }
     */
    public static int gtk_recent_info_has_group(MemorySegment info, MemorySegment group_name) {
        var mh$ = gtk_recent_info_has_group$MH();
        try {
            return (int)mh$.invokeExact(info, group_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$3017.const$4,"gtk_recent_info_get_icon");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_recent_info_get_icon(struct _GtkRecentInfo* info, int size);
     * }
     */
    public static MemorySegment gtk_recent_info_get_icon(MemorySegment info, int size) {
        var mh$ = gtk_recent_info_get_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$3017.const$5,"gtk_recent_info_get_gicon");
    }
    /**
     * {@snippet :
     * struct _GIcon* gtk_recent_info_get_gicon(struct _GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_get_gicon(MemorySegment info) {
        var mh$ = gtk_recent_info_get_gicon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_short_name$MH() {
        return RuntimeHelper.requireNonNull(constants$3018.const$0,"gtk_recent_info_get_short_name");
    }
    /**
     * {@snippet :
     * char* gtk_recent_info_get_short_name(struct _GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_get_short_name(MemorySegment info) {
        var mh$ = gtk_recent_info_get_short_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_uri_display$MH() {
        return RuntimeHelper.requireNonNull(constants$3018.const$1,"gtk_recent_info_get_uri_display");
    }
    /**
     * {@snippet :
     * char* gtk_recent_info_get_uri_display(struct _GtkRecentInfo* info);
     * }
     */
    public static MemorySegment gtk_recent_info_get_uri_display(MemorySegment info) {
        var mh$ = gtk_recent_info_get_uri_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_age$MH() {
        return RuntimeHelper.requireNonNull(constants$3018.const$2,"gtk_recent_info_get_age");
    }
    /**
     * {@snippet :
     * int gtk_recent_info_get_age(struct _GtkRecentInfo* info);
     * }
     */
    public static int gtk_recent_info_get_age(MemorySegment info) {
        var mh$ = gtk_recent_info_get_age$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_is_local$MH() {
        return RuntimeHelper.requireNonNull(constants$3018.const$3,"gtk_recent_info_is_local");
    }
    /**
     * {@snippet :
     * int gtk_recent_info_is_local(struct _GtkRecentInfo* info);
     * }
     */
    public static int gtk_recent_info_is_local(MemorySegment info) {
        var mh$ = gtk_recent_info_is_local$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_exists$MH() {
        return RuntimeHelper.requireNonNull(constants$3018.const$4,"gtk_recent_info_exists");
    }
    /**
     * {@snippet :
     * int gtk_recent_info_exists(struct _GtkRecentInfo* info);
     * }
     */
    public static int gtk_recent_info_exists(MemorySegment info) {
        var mh$ = gtk_recent_info_exists$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_match$MH() {
        return RuntimeHelper.requireNonNull(constants$3018.const$5,"gtk_recent_info_match");
    }
    /**
     * {@snippet :
     * int gtk_recent_info_match(struct _GtkRecentInfo* info_a, struct _GtkRecentInfo* info_b);
     * }
     */
    public static int gtk_recent_info_match(MemorySegment info_a, MemorySegment info_b) {
        var mh$ = gtk_recent_info_match$MH();
        try {
            return (int)mh$.invokeExact(info_a, info_b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_recent_manager_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$3019.const$0,"_gtk_recent_manager_sync");
    }
    /**
     * {@snippet :
     * void _gtk_recent_manager_sync();
     * }
     */
    public static void _gtk_recent_manager_sync() {
        var mh$ = _gtk_recent_manager_sync$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkRecentFilterFlags.GTK_RECENT_FILTER_URI = 1;
     * }
     */
    public static int GTK_RECENT_FILTER_URI() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkRecentFilterFlags.GTK_RECENT_FILTER_DISPLAY_NAME = 2;
     * }
     */
    public static int GTK_RECENT_FILTER_DISPLAY_NAME() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkRecentFilterFlags.GTK_RECENT_FILTER_MIME_TYPE = 4;
     * }
     */
    public static int GTK_RECENT_FILTER_MIME_TYPE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkRecentFilterFlags.GTK_RECENT_FILTER_APPLICATION = 8;
     * }
     */
    public static int GTK_RECENT_FILTER_APPLICATION() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GtkRecentFilterFlags.GTK_RECENT_FILTER_GROUP = 16;
     * }
     */
    public static int GTK_RECENT_FILTER_GROUP() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GtkRecentFilterFlags.GTK_RECENT_FILTER_AGE = 32;
     * }
     */
    public static int GTK_RECENT_FILTER_AGE() {
        return (int)32L;
    }
    public static MethodHandle gtk_recent_filter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3020.const$4,"gtk_recent_filter_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_recent_filter_get_type();
     * }
     */
    public static long gtk_recent_filter_get_type() {
        var mh$ = gtk_recent_filter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_filter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3020.const$5,"gtk_recent_filter_new");
    }
    /**
     * {@snippet :
     * struct _GtkRecentFilter* gtk_recent_filter_new();
     * }
     */
    public static MemorySegment gtk_recent_filter_new() {
        var mh$ = gtk_recent_filter_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_filter_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$3021.const$0,"gtk_recent_filter_set_name");
    }
    /**
     * {@snippet :
     * void gtk_recent_filter_set_name(struct _GtkRecentFilter* filter, char* name);
     * }
     */
    public static void gtk_recent_filter_set_name(MemorySegment filter, MemorySegment name) {
        var mh$ = gtk_recent_filter_set_name$MH();
        try {
            mh$.invokeExact(filter, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_filter_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$3021.const$1,"gtk_recent_filter_get_name");
    }
    /**
     * {@snippet :
     * char* gtk_recent_filter_get_name(struct _GtkRecentFilter* filter);
     * }
     */
    public static MemorySegment gtk_recent_filter_get_name(MemorySegment filter) {
        var mh$ = gtk_recent_filter_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_filter_add_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3021.const$2,"gtk_recent_filter_add_mime_type");
    }
    /**
     * {@snippet :
     * void gtk_recent_filter_add_mime_type(struct _GtkRecentFilter* filter, char* mime_type);
     * }
     */
    public static void gtk_recent_filter_add_mime_type(MemorySegment filter, MemorySegment mime_type) {
        var mh$ = gtk_recent_filter_add_mime_type$MH();
        try {
            mh$.invokeExact(filter, mime_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_filter_add_pattern$MH() {
        return RuntimeHelper.requireNonNull(constants$3021.const$3,"gtk_recent_filter_add_pattern");
    }
    /**
     * {@snippet :
     * void gtk_recent_filter_add_pattern(struct _GtkRecentFilter* filter, char* pattern);
     * }
     */
    public static void gtk_recent_filter_add_pattern(MemorySegment filter, MemorySegment pattern) {
        var mh$ = gtk_recent_filter_add_pattern$MH();
        try {
            mh$.invokeExact(filter, pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_filter_add_pixbuf_formats$MH() {
        return RuntimeHelper.requireNonNull(constants$3021.const$4,"gtk_recent_filter_add_pixbuf_formats");
    }
    /**
     * {@snippet :
     * void gtk_recent_filter_add_pixbuf_formats(struct _GtkRecentFilter* filter);
     * }
     */
    public static void gtk_recent_filter_add_pixbuf_formats(MemorySegment filter) {
        var mh$ = gtk_recent_filter_add_pixbuf_formats$MH();
        try {
            mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_filter_add_application$MH() {
        return RuntimeHelper.requireNonNull(constants$3021.const$5,"gtk_recent_filter_add_application");
    }
    /**
     * {@snippet :
     * void gtk_recent_filter_add_application(struct _GtkRecentFilter* filter, char* application);
     * }
     */
    public static void gtk_recent_filter_add_application(MemorySegment filter, MemorySegment application) {
        var mh$ = gtk_recent_filter_add_application$MH();
        try {
            mh$.invokeExact(filter, application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_filter_add_group$MH() {
        return RuntimeHelper.requireNonNull(constants$3022.const$0,"gtk_recent_filter_add_group");
    }
    /**
     * {@snippet :
     * void gtk_recent_filter_add_group(struct _GtkRecentFilter* filter, char* group);
     * }
     */
    public static void gtk_recent_filter_add_group(MemorySegment filter, MemorySegment group) {
        var mh$ = gtk_recent_filter_add_group$MH();
        try {
            mh$.invokeExact(filter, group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_filter_add_age$MH() {
        return RuntimeHelper.requireNonNull(constants$3022.const$1,"gtk_recent_filter_add_age");
    }
    /**
     * {@snippet :
     * void gtk_recent_filter_add_age(struct _GtkRecentFilter* filter, int days);
     * }
     */
    public static void gtk_recent_filter_add_age(MemorySegment filter, int days) {
        var mh$ = gtk_recent_filter_add_age$MH();
        try {
            mh$.invokeExact(filter, days);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_filter_add_custom$MH() {
        return RuntimeHelper.requireNonNull(constants$3022.const$4,"gtk_recent_filter_add_custom");
    }
    /**
     * {@snippet :
     * void gtk_recent_filter_add_custom(struct _GtkRecentFilter* filter, enum GtkRecentFilterFlags needed, int (*func)(struct _GtkRecentFilterInfo*,void*), void* data, void (*data_destroy)(void*));
     * }
     */
    public static void gtk_recent_filter_add_custom(MemorySegment filter, int needed, MemorySegment func, MemorySegment data, MemorySegment data_destroy) {
        var mh$ = gtk_recent_filter_add_custom$MH();
        try {
            mh$.invokeExact(filter, needed, func, data, data_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_filter_get_needed$MH() {
        return RuntimeHelper.requireNonNull(constants$3022.const$5,"gtk_recent_filter_get_needed");
    }
    /**
     * {@snippet :
     * enum GtkRecentFilterFlags gtk_recent_filter_get_needed(struct _GtkRecentFilter* filter);
     * }
     */
    public static int gtk_recent_filter_get_needed(MemorySegment filter) {
        var mh$ = gtk_recent_filter_get_needed$MH();
        try {
            return (int)mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_filter_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$3023.const$0,"gtk_recent_filter_filter");
    }
    /**
     * {@snippet :
     * int gtk_recent_filter_filter(struct _GtkRecentFilter* filter, struct _GtkRecentFilterInfo* filter_info);
     * }
     */
    public static int gtk_recent_filter_filter(MemorySegment filter, MemorySegment filter_info) {
        var mh$ = gtk_recent_filter_filter$MH();
        try {
            return (int)mh$.invokeExact(filter, filter_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkRecentSortType.GTK_RECENT_SORT_NONE = 0;
     * }
     */
    public static int GTK_RECENT_SORT_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkRecentSortType.GTK_RECENT_SORT_MRU = 1;
     * }
     */
    public static int GTK_RECENT_SORT_MRU() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkRecentSortType.GTK_RECENT_SORT_LRU = 2;
     * }
     */
    public static int GTK_RECENT_SORT_LRU() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkRecentSortType.GTK_RECENT_SORT_CUSTOM = 3;
     * }
     */
    public static int GTK_RECENT_SORT_CUSTOM() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkRecentChooserError.GTK_RECENT_CHOOSER_ERROR_NOT_FOUND = 0;
     * }
     */
    public static int GTK_RECENT_CHOOSER_ERROR_NOT_FOUND() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkRecentChooserError.GTK_RECENT_CHOOSER_ERROR_INVALID_URI = 1;
     * }
     */
    public static int GTK_RECENT_CHOOSER_ERROR_INVALID_URI() {
        return (int)1L;
    }
    public static MethodHandle gtk_recent_chooser_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$3023.const$2,"gtk_recent_chooser_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int gtk_recent_chooser_error_quark();
     * }
     */
    public static int gtk_recent_chooser_error_quark() {
        var mh$ = gtk_recent_chooser_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3028.const$2,"gtk_recent_chooser_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_recent_chooser_get_type();
     * }
     */
    public static long gtk_recent_chooser_get_type() {
        var mh$ = gtk_recent_chooser_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_set_show_private$MH() {
        return RuntimeHelper.requireNonNull(constants$3028.const$3,"gtk_recent_chooser_set_show_private");
    }
    /**
     * {@snippet :
     * void gtk_recent_chooser_set_show_private(struct _GtkRecentChooser* chooser, int show_private);
     * }
     */
    public static void gtk_recent_chooser_set_show_private(MemorySegment chooser, int show_private) {
        var mh$ = gtk_recent_chooser_set_show_private$MH();
        try {
            mh$.invokeExact(chooser, show_private);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_get_show_private$MH() {
        return RuntimeHelper.requireNonNull(constants$3028.const$4,"gtk_recent_chooser_get_show_private");
    }
    /**
     * {@snippet :
     * int gtk_recent_chooser_get_show_private(struct _GtkRecentChooser* chooser);
     * }
     */
    public static int gtk_recent_chooser_get_show_private(MemorySegment chooser) {
        var mh$ = gtk_recent_chooser_get_show_private$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_set_show_not_found$MH() {
        return RuntimeHelper.requireNonNull(constants$3028.const$5,"gtk_recent_chooser_set_show_not_found");
    }
    /**
     * {@snippet :
     * void gtk_recent_chooser_set_show_not_found(struct _GtkRecentChooser* chooser, int show_not_found);
     * }
     */
    public static void gtk_recent_chooser_set_show_not_found(MemorySegment chooser, int show_not_found) {
        var mh$ = gtk_recent_chooser_set_show_not_found$MH();
        try {
            mh$.invokeExact(chooser, show_not_found);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_get_show_not_found$MH() {
        return RuntimeHelper.requireNonNull(constants$3029.const$0,"gtk_recent_chooser_get_show_not_found");
    }
    /**
     * {@snippet :
     * int gtk_recent_chooser_get_show_not_found(struct _GtkRecentChooser* chooser);
     * }
     */
    public static int gtk_recent_chooser_get_show_not_found(MemorySegment chooser) {
        var mh$ = gtk_recent_chooser_get_show_not_found$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_set_select_multiple$MH() {
        return RuntimeHelper.requireNonNull(constants$3029.const$1,"gtk_recent_chooser_set_select_multiple");
    }
    /**
     * {@snippet :
     * void gtk_recent_chooser_set_select_multiple(struct _GtkRecentChooser* chooser, int select_multiple);
     * }
     */
    public static void gtk_recent_chooser_set_select_multiple(MemorySegment chooser, int select_multiple) {
        var mh$ = gtk_recent_chooser_set_select_multiple$MH();
        try {
            mh$.invokeExact(chooser, select_multiple);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_get_select_multiple$MH() {
        return RuntimeHelper.requireNonNull(constants$3029.const$2,"gtk_recent_chooser_get_select_multiple");
    }
    /**
     * {@snippet :
     * int gtk_recent_chooser_get_select_multiple(struct _GtkRecentChooser* chooser);
     * }
     */
    public static int gtk_recent_chooser_get_select_multiple(MemorySegment chooser) {
        var mh$ = gtk_recent_chooser_get_select_multiple$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_set_limit$MH() {
        return RuntimeHelper.requireNonNull(constants$3029.const$3,"gtk_recent_chooser_set_limit");
    }
    /**
     * {@snippet :
     * void gtk_recent_chooser_set_limit(struct _GtkRecentChooser* chooser, int limit);
     * }
     */
    public static void gtk_recent_chooser_set_limit(MemorySegment chooser, int limit) {
        var mh$ = gtk_recent_chooser_set_limit$MH();
        try {
            mh$.invokeExact(chooser, limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_get_limit$MH() {
        return RuntimeHelper.requireNonNull(constants$3029.const$4,"gtk_recent_chooser_get_limit");
    }
    /**
     * {@snippet :
     * int gtk_recent_chooser_get_limit(struct _GtkRecentChooser* chooser);
     * }
     */
    public static int gtk_recent_chooser_get_limit(MemorySegment chooser) {
        var mh$ = gtk_recent_chooser_get_limit$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_set_local_only$MH() {
        return RuntimeHelper.requireNonNull(constants$3029.const$5,"gtk_recent_chooser_set_local_only");
    }
    /**
     * {@snippet :
     * void gtk_recent_chooser_set_local_only(struct _GtkRecentChooser* chooser, int local_only);
     * }
     */
    public static void gtk_recent_chooser_set_local_only(MemorySegment chooser, int local_only) {
        var mh$ = gtk_recent_chooser_set_local_only$MH();
        try {
            mh$.invokeExact(chooser, local_only);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_get_local_only$MH() {
        return RuntimeHelper.requireNonNull(constants$3030.const$0,"gtk_recent_chooser_get_local_only");
    }
    /**
     * {@snippet :
     * int gtk_recent_chooser_get_local_only(struct _GtkRecentChooser* chooser);
     * }
     */
    public static int gtk_recent_chooser_get_local_only(MemorySegment chooser) {
        var mh$ = gtk_recent_chooser_get_local_only$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_set_show_tips$MH() {
        return RuntimeHelper.requireNonNull(constants$3030.const$1,"gtk_recent_chooser_set_show_tips");
    }
    /**
     * {@snippet :
     * void gtk_recent_chooser_set_show_tips(struct _GtkRecentChooser* chooser, int show_tips);
     * }
     */
    public static void gtk_recent_chooser_set_show_tips(MemorySegment chooser, int show_tips) {
        var mh$ = gtk_recent_chooser_set_show_tips$MH();
        try {
            mh$.invokeExact(chooser, show_tips);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_get_show_tips$MH() {
        return RuntimeHelper.requireNonNull(constants$3030.const$2,"gtk_recent_chooser_get_show_tips");
    }
    /**
     * {@snippet :
     * int gtk_recent_chooser_get_show_tips(struct _GtkRecentChooser* chooser);
     * }
     */
    public static int gtk_recent_chooser_get_show_tips(MemorySegment chooser) {
        var mh$ = gtk_recent_chooser_get_show_tips$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_set_show_icons$MH() {
        return RuntimeHelper.requireNonNull(constants$3030.const$3,"gtk_recent_chooser_set_show_icons");
    }
    /**
     * {@snippet :
     * void gtk_recent_chooser_set_show_icons(struct _GtkRecentChooser* chooser, int show_icons);
     * }
     */
    public static void gtk_recent_chooser_set_show_icons(MemorySegment chooser, int show_icons) {
        var mh$ = gtk_recent_chooser_set_show_icons$MH();
        try {
            mh$.invokeExact(chooser, show_icons);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_get_show_icons$MH() {
        return RuntimeHelper.requireNonNull(constants$3030.const$4,"gtk_recent_chooser_get_show_icons");
    }
    /**
     * {@snippet :
     * int gtk_recent_chooser_get_show_icons(struct _GtkRecentChooser* chooser);
     * }
     */
    public static int gtk_recent_chooser_get_show_icons(MemorySegment chooser) {
        var mh$ = gtk_recent_chooser_get_show_icons$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_set_sort_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3030.const$5,"gtk_recent_chooser_set_sort_type");
    }
    /**
     * {@snippet :
     * void gtk_recent_chooser_set_sort_type(struct _GtkRecentChooser* chooser, enum GtkRecentSortType sort_type);
     * }
     */
    public static void gtk_recent_chooser_set_sort_type(MemorySegment chooser, int sort_type) {
        var mh$ = gtk_recent_chooser_set_sort_type$MH();
        try {
            mh$.invokeExact(chooser, sort_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_get_sort_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3031.const$0,"gtk_recent_chooser_get_sort_type");
    }
    /**
     * {@snippet :
     * enum GtkRecentSortType gtk_recent_chooser_get_sort_type(struct _GtkRecentChooser* chooser);
     * }
     */
    public static int gtk_recent_chooser_get_sort_type(MemorySegment chooser) {
        var mh$ = gtk_recent_chooser_get_sort_type$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_set_sort_func$MH() {
        return RuntimeHelper.requireNonNull(constants$3031.const$3,"gtk_recent_chooser_set_sort_func");
    }
    /**
     * {@snippet :
     * void gtk_recent_chooser_set_sort_func(struct _GtkRecentChooser* chooser, int (*sort_func)(struct _GtkRecentInfo*,struct _GtkRecentInfo*,void*), void* sort_data, void (*data_destroy)(void*));
     * }
     */
    public static void gtk_recent_chooser_set_sort_func(MemorySegment chooser, MemorySegment sort_func, MemorySegment sort_data, MemorySegment data_destroy) {
        var mh$ = gtk_recent_chooser_set_sort_func$MH();
        try {
            mh$.invokeExact(chooser, sort_func, sort_data, data_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_set_current_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$3031.const$4,"gtk_recent_chooser_set_current_uri");
    }
    /**
     * {@snippet :
     * int gtk_recent_chooser_set_current_uri(struct _GtkRecentChooser* chooser, char* uri, struct _GError** error);
     * }
     */
    public static int gtk_recent_chooser_set_current_uri(MemorySegment chooser, MemorySegment uri, MemorySegment error) {
        var mh$ = gtk_recent_chooser_set_current_uri$MH();
        try {
            return (int)mh$.invokeExact(chooser, uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_get_current_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$3031.const$5,"gtk_recent_chooser_get_current_uri");
    }
    /**
     * {@snippet :
     * char* gtk_recent_chooser_get_current_uri(struct _GtkRecentChooser* chooser);
     * }
     */
    public static MemorySegment gtk_recent_chooser_get_current_uri(MemorySegment chooser) {
        var mh$ = gtk_recent_chooser_get_current_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_get_current_item$MH() {
        return RuntimeHelper.requireNonNull(constants$3032.const$0,"gtk_recent_chooser_get_current_item");
    }
    /**
     * {@snippet :
     * struct _GtkRecentInfo* gtk_recent_chooser_get_current_item(struct _GtkRecentChooser* chooser);
     * }
     */
    public static MemorySegment gtk_recent_chooser_get_current_item(MemorySegment chooser) {
        var mh$ = gtk_recent_chooser_get_current_item$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_select_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$3032.const$1,"gtk_recent_chooser_select_uri");
    }
    /**
     * {@snippet :
     * int gtk_recent_chooser_select_uri(struct _GtkRecentChooser* chooser, char* uri, struct _GError** error);
     * }
     */
    public static int gtk_recent_chooser_select_uri(MemorySegment chooser, MemorySegment uri, MemorySegment error) {
        var mh$ = gtk_recent_chooser_select_uri$MH();
        try {
            return (int)mh$.invokeExact(chooser, uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_unselect_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$3032.const$2,"gtk_recent_chooser_unselect_uri");
    }
    /**
     * {@snippet :
     * void gtk_recent_chooser_unselect_uri(struct _GtkRecentChooser* chooser, char* uri);
     * }
     */
    public static void gtk_recent_chooser_unselect_uri(MemorySegment chooser, MemorySegment uri) {
        var mh$ = gtk_recent_chooser_unselect_uri$MH();
        try {
            mh$.invokeExact(chooser, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_select_all$MH() {
        return RuntimeHelper.requireNonNull(constants$3032.const$3,"gtk_recent_chooser_select_all");
    }
    /**
     * {@snippet :
     * void gtk_recent_chooser_select_all(struct _GtkRecentChooser* chooser);
     * }
     */
    public static void gtk_recent_chooser_select_all(MemorySegment chooser) {
        var mh$ = gtk_recent_chooser_select_all$MH();
        try {
            mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_unselect_all$MH() {
        return RuntimeHelper.requireNonNull(constants$3032.const$4,"gtk_recent_chooser_unselect_all");
    }
    /**
     * {@snippet :
     * void gtk_recent_chooser_unselect_all(struct _GtkRecentChooser* chooser);
     * }
     */
    public static void gtk_recent_chooser_unselect_all(MemorySegment chooser) {
        var mh$ = gtk_recent_chooser_unselect_all$MH();
        try {
            mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_get_items$MH() {
        return RuntimeHelper.requireNonNull(constants$3032.const$5,"gtk_recent_chooser_get_items");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_recent_chooser_get_items(struct _GtkRecentChooser* chooser);
     * }
     */
    public static MemorySegment gtk_recent_chooser_get_items(MemorySegment chooser) {
        var mh$ = gtk_recent_chooser_get_items$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_get_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$3033.const$0,"gtk_recent_chooser_get_uris");
    }
    /**
     * {@snippet :
     * char** gtk_recent_chooser_get_uris(struct _GtkRecentChooser* chooser, unsigned long* length);
     * }
     */
    public static MemorySegment gtk_recent_chooser_get_uris(MemorySegment chooser, MemorySegment length) {
        var mh$ = gtk_recent_chooser_get_uris$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_add_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$3033.const$1,"gtk_recent_chooser_add_filter");
    }
    /**
     * {@snippet :
     * void gtk_recent_chooser_add_filter(struct _GtkRecentChooser* chooser, struct _GtkRecentFilter* filter);
     * }
     */
    public static void gtk_recent_chooser_add_filter(MemorySegment chooser, MemorySegment filter) {
        var mh$ = gtk_recent_chooser_add_filter$MH();
        try {
            mh$.invokeExact(chooser, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_remove_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$3033.const$2,"gtk_recent_chooser_remove_filter");
    }
    /**
     * {@snippet :
     * void gtk_recent_chooser_remove_filter(struct _GtkRecentChooser* chooser, struct _GtkRecentFilter* filter);
     * }
     */
    public static void gtk_recent_chooser_remove_filter(MemorySegment chooser, MemorySegment filter) {
        var mh$ = gtk_recent_chooser_remove_filter$MH();
        try {
            mh$.invokeExact(chooser, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_list_filters$MH() {
        return RuntimeHelper.requireNonNull(constants$3033.const$3,"gtk_recent_chooser_list_filters");
    }
    /**
     * {@snippet :
     * struct _GSList* gtk_recent_chooser_list_filters(struct _GtkRecentChooser* chooser);
     * }
     */
    public static MemorySegment gtk_recent_chooser_list_filters(MemorySegment chooser) {
        var mh$ = gtk_recent_chooser_list_filters$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_set_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$3033.const$4,"gtk_recent_chooser_set_filter");
    }
    /**
     * {@snippet :
     * void gtk_recent_chooser_set_filter(struct _GtkRecentChooser* chooser, struct _GtkRecentFilter* filter);
     * }
     */
    public static void gtk_recent_chooser_set_filter(MemorySegment chooser, MemorySegment filter) {
        var mh$ = gtk_recent_chooser_set_filter$MH();
        try {
            mh$.invokeExact(chooser, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_get_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$3033.const$5,"gtk_recent_chooser_get_filter");
    }
    /**
     * {@snippet :
     * struct _GtkRecentFilter* gtk_recent_chooser_get_filter(struct _GtkRecentChooser* chooser);
     * }
     */
    public static MemorySegment gtk_recent_chooser_get_filter(MemorySegment chooser) {
        var mh$ = gtk_recent_chooser_get_filter$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3035.const$5,"gtk_recent_chooser_dialog_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_recent_chooser_dialog_get_type();
     * }
     */
    public static long gtk_recent_chooser_dialog_get_type() {
        var mh$ = gtk_recent_chooser_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3036.const$0,"gtk_recent_chooser_dialog_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_recent_chooser_dialog_new(char* title, struct _GtkWindow* parent, char* first_button_text,...);
     * }
     */
    public static MemorySegment gtk_recent_chooser_dialog_new(MemorySegment title, MemorySegment parent, MemorySegment first_button_text, Object... x3) {
        var mh$ = gtk_recent_chooser_dialog_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(title, parent, first_button_text, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_dialog_new_for_manager$MH() {
        return RuntimeHelper.requireNonNull(constants$3036.const$1,"gtk_recent_chooser_dialog_new_for_manager");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_recent_chooser_dialog_new_for_manager(char* title, struct _GtkWindow* parent, struct _GtkRecentManager* manager, char* first_button_text,...);
     * }
     */
    public static MemorySegment gtk_recent_chooser_dialog_new_for_manager(MemorySegment title, MemorySegment parent, MemorySegment manager, MemorySegment first_button_text, Object... x4) {
        var mh$ = gtk_recent_chooser_dialog_new_for_manager$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(title, parent, manager, first_button_text, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_menu_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3038.const$1,"gtk_recent_chooser_menu_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_recent_chooser_menu_get_type();
     * }
     */
    public static long gtk_recent_chooser_menu_get_type() {
        var mh$ = gtk_recent_chooser_menu_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_menu_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3038.const$2,"gtk_recent_chooser_menu_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_recent_chooser_menu_new();
     * }
     */
    public static MemorySegment gtk_recent_chooser_menu_new() {
        var mh$ = gtk_recent_chooser_menu_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_menu_new_for_manager$MH() {
        return RuntimeHelper.requireNonNull(constants$3038.const$3,"gtk_recent_chooser_menu_new_for_manager");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_recent_chooser_menu_new_for_manager(struct _GtkRecentManager* manager);
     * }
     */
    public static MemorySegment gtk_recent_chooser_menu_new_for_manager(MemorySegment manager) {
        var mh$ = gtk_recent_chooser_menu_new_for_manager$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_menu_get_show_numbers$MH() {
        return RuntimeHelper.requireNonNull(constants$3038.const$4,"gtk_recent_chooser_menu_get_show_numbers");
    }
    /**
     * {@snippet :
     * int gtk_recent_chooser_menu_get_show_numbers(struct _GtkRecentChooserMenu* menu);
     * }
     */
    public static int gtk_recent_chooser_menu_get_show_numbers(MemorySegment menu) {
        var mh$ = gtk_recent_chooser_menu_get_show_numbers$MH();
        try {
            return (int)mh$.invokeExact(menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_menu_set_show_numbers$MH() {
        return RuntimeHelper.requireNonNull(constants$3038.const$5,"gtk_recent_chooser_menu_set_show_numbers");
    }
    /**
     * {@snippet :
     * void gtk_recent_chooser_menu_set_show_numbers(struct _GtkRecentChooserMenu* menu, int show_numbers);
     * }
     */
    public static void gtk_recent_chooser_menu_set_show_numbers(MemorySegment menu, int show_numbers) {
        var mh$ = gtk_recent_chooser_menu_set_show_numbers$MH();
        try {
            mh$.invokeExact(menu, show_numbers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_widget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3040.const$5,"gtk_recent_chooser_widget_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_recent_chooser_widget_get_type();
     * }
     */
    public static long gtk_recent_chooser_widget_get_type() {
        var mh$ = gtk_recent_chooser_widget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_widget_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3041.const$0,"gtk_recent_chooser_widget_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_recent_chooser_widget_new();
     * }
     */
    public static MemorySegment gtk_recent_chooser_widget_new() {
        var mh$ = gtk_recent_chooser_widget_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_widget_new_for_manager$MH() {
        return RuntimeHelper.requireNonNull(constants$3041.const$1,"gtk_recent_chooser_widget_new_for_manager");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_recent_chooser_widget_new_for_manager(struct _GtkRecentManager* manager);
     * }
     */
    public static MemorySegment gtk_recent_chooser_widget_new_for_manager(MemorySegment manager) {
        var mh$ = gtk_recent_chooser_widget_new_for_manager$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_check$MH() {
        return RuntimeHelper.requireNonNull(constants$3041.const$3,"gtk_render_check");
    }
    /**
     * {@snippet :
     * void gtk_render_check(struct _GtkStyleContext* context, struct _cairo* cr, double x, double y, double width, double height);
     * }
     */
    public static void gtk_render_check(MemorySegment context, MemorySegment cr, double x, double y, double width, double height) {
        var mh$ = gtk_render_check$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_option$MH() {
        return RuntimeHelper.requireNonNull(constants$3041.const$4,"gtk_render_option");
    }
    /**
     * {@snippet :
     * void gtk_render_option(struct _GtkStyleContext* context, struct _cairo* cr, double x, double y, double width, double height);
     * }
     */
    public static void gtk_render_option(MemorySegment context, MemorySegment cr, double x, double y, double width, double height) {
        var mh$ = gtk_render_option$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_arrow$MH() {
        return RuntimeHelper.requireNonNull(constants$3041.const$5,"gtk_render_arrow");
    }
    /**
     * {@snippet :
     * void gtk_render_arrow(struct _GtkStyleContext* context, struct _cairo* cr, double angle, double x, double y, double size);
     * }
     */
    public static void gtk_render_arrow(MemorySegment context, MemorySegment cr, double angle, double x, double y, double size) {
        var mh$ = gtk_render_arrow$MH();
        try {
            mh$.invokeExact(context, cr, angle, x, y, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_background$MH() {
        return RuntimeHelper.requireNonNull(constants$3042.const$0,"gtk_render_background");
    }
    /**
     * {@snippet :
     * void gtk_render_background(struct _GtkStyleContext* context, struct _cairo* cr, double x, double y, double width, double height);
     * }
     */
    public static void gtk_render_background(MemorySegment context, MemorySegment cr, double x, double y, double width, double height) {
        var mh$ = gtk_render_background$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_background_get_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$3042.const$2,"gtk_render_background_get_clip");
    }
    /**
     * {@snippet :
     * void gtk_render_background_get_clip(struct _GtkStyleContext* context, double x, double y, double width, double height, struct _cairo_rectangle_int* out_clip);
     * }
     */
    public static void gtk_render_background_get_clip(MemorySegment context, double x, double y, double width, double height, MemorySegment out_clip) {
        var mh$ = gtk_render_background_get_clip$MH();
        try {
            mh$.invokeExact(context, x, y, width, height, out_clip);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$3042.const$3,"gtk_render_frame");
    }
    /**
     * {@snippet :
     * void gtk_render_frame(struct _GtkStyleContext* context, struct _cairo* cr, double x, double y, double width, double height);
     * }
     */
    public static void gtk_render_frame(MemorySegment context, MemorySegment cr, double x, double y, double width, double height) {
        var mh$ = gtk_render_frame$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_expander$MH() {
        return RuntimeHelper.requireNonNull(constants$3042.const$4,"gtk_render_expander");
    }
    /**
     * {@snippet :
     * void gtk_render_expander(struct _GtkStyleContext* context, struct _cairo* cr, double x, double y, double width, double height);
     * }
     */
    public static void gtk_render_expander(MemorySegment context, MemorySegment cr, double x, double y, double width, double height) {
        var mh$ = gtk_render_expander$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$3042.const$5,"gtk_render_focus");
    }
    /**
     * {@snippet :
     * void gtk_render_focus(struct _GtkStyleContext* context, struct _cairo* cr, double x, double y, double width, double height);
     * }
     */
    public static void gtk_render_focus(MemorySegment context, MemorySegment cr, double x, double y, double width, double height) {
        var mh$ = gtk_render_focus$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$3043.const$1,"gtk_render_layout");
    }
    /**
     * {@snippet :
     * void gtk_render_layout(struct _GtkStyleContext* context, struct _cairo* cr, double x, double y, struct _PangoLayout* layout);
     * }
     */
    public static void gtk_render_layout(MemorySegment context, MemorySegment cr, double x, double y, MemorySegment layout) {
        var mh$ = gtk_render_layout$MH();
        try {
            mh$.invokeExact(context, cr, x, y, layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_line$MH() {
        return RuntimeHelper.requireNonNull(constants$3043.const$2,"gtk_render_line");
    }
    /**
     * {@snippet :
     * void gtk_render_line(struct _GtkStyleContext* context, struct _cairo* cr, double x0, double y0, double x1, double y1);
     * }
     */
    public static void gtk_render_line(MemorySegment context, MemorySegment cr, double x0, double y0, double x1, double y1) {
        var mh$ = gtk_render_line$MH();
        try {
            mh$.invokeExact(context, cr, x0, y0, x1, y1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_slider$MH() {
        return RuntimeHelper.requireNonNull(constants$3043.const$4,"gtk_render_slider");
    }
    /**
     * {@snippet :
     * void gtk_render_slider(struct _GtkStyleContext* context, struct _cairo* cr, double x, double y, double width, double height, enum GtkOrientation orientation);
     * }
     */
    public static void gtk_render_slider(MemorySegment context, MemorySegment cr, double x, double y, double width, double height, int orientation) {
        var mh$ = gtk_render_slider$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_frame_gap$MH() {
        return RuntimeHelper.requireNonNull(constants$3043.const$6,"gtk_render_frame_gap");
    }
    /**
     * {@snippet :
     * void gtk_render_frame_gap(struct _GtkStyleContext* context, struct _cairo* cr, double x, double y, double width, double height, enum GtkPositionType gap_side, double xy0_gap, double xy1_gap);
     * }
     */
    public static void gtk_render_frame_gap(MemorySegment context, MemorySegment cr, double x, double y, double width, double height, int gap_side, double xy0_gap, double xy1_gap) {
        var mh$ = gtk_render_frame_gap$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height, gap_side, xy0_gap, xy1_gap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_extension$MH() {
        return RuntimeHelper.requireNonNull(constants$3044.const$0,"gtk_render_extension");
    }
    /**
     * {@snippet :
     * void gtk_render_extension(struct _GtkStyleContext* context, struct _cairo* cr, double x, double y, double width, double height, enum GtkPositionType gap_side);
     * }
     */
    public static void gtk_render_extension(MemorySegment context, MemorySegment cr, double x, double y, double width, double height, int gap_side) {
        var mh$ = gtk_render_extension$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height, gap_side);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_handle$MH() {
        return RuntimeHelper.requireNonNull(constants$3044.const$1,"gtk_render_handle");
    }
    /**
     * {@snippet :
     * void gtk_render_handle(struct _GtkStyleContext* context, struct _cairo* cr, double x, double y, double width, double height);
     * }
     */
    public static void gtk_render_handle(MemorySegment context, MemorySegment cr, double x, double y, double width, double height) {
        var mh$ = gtk_render_handle$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_activity$MH() {
        return RuntimeHelper.requireNonNull(constants$3044.const$2,"gtk_render_activity");
    }
    /**
     * {@snippet :
     * void gtk_render_activity(struct _GtkStyleContext* context, struct _cairo* cr, double x, double y, double width, double height);
     * }
     */
    public static void gtk_render_activity(MemorySegment context, MemorySegment cr, double x, double y, double width, double height) {
        var mh$ = gtk_render_activity$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_icon_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$3044.const$3,"gtk_render_icon_pixbuf");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_render_icon_pixbuf(struct _GtkStyleContext* context, struct _GtkIconSource* source, enum GtkIconSize size);
     * }
     */
    public static MemorySegment gtk_render_icon_pixbuf(MemorySegment context, MemorySegment source, int size) {
        var mh$ = gtk_render_icon_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, source, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$3044.const$5,"gtk_render_icon");
    }
    /**
     * {@snippet :
     * void gtk_render_icon(struct _GtkStyleContext* context, struct _cairo* cr, struct _GdkPixbuf* pixbuf, double x, double y);
     * }
     */
    public static void gtk_render_icon(MemorySegment context, MemorySegment cr, MemorySegment pixbuf, double x, double y) {
        var mh$ = gtk_render_icon$MH();
        try {
            mh$.invokeExact(context, cr, pixbuf, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_icon_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$3045.const$0,"gtk_render_icon_surface");
    }
    /**
     * {@snippet :
     * void gtk_render_icon_surface(struct _GtkStyleContext* context, struct _cairo* cr, struct _cairo_surface* surface, double x, double y);
     * }
     */
    public static void gtk_render_icon_surface(MemorySegment context, MemorySegment cr, MemorySegment surface, double x, double y) {
        var mh$ = gtk_render_icon_surface$MH();
        try {
            mh$.invokeExact(context, cr, surface, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkRevealerTransitionType.GTK_REVEALER_TRANSITION_TYPE_NONE = 0;
     * }
     */
    public static int GTK_REVEALER_TRANSITION_TYPE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkRevealerTransitionType.GTK_REVEALER_TRANSITION_TYPE_CROSSFADE = 1;
     * }
     */
    public static int GTK_REVEALER_TRANSITION_TYPE_CROSSFADE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkRevealerTransitionType.GTK_REVEALER_TRANSITION_TYPE_SLIDE_RIGHT = 2;
     * }
     */
    public static int GTK_REVEALER_TRANSITION_TYPE_SLIDE_RIGHT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkRevealerTransitionType.GTK_REVEALER_TRANSITION_TYPE_SLIDE_LEFT = 3;
     * }
     */
    public static int GTK_REVEALER_TRANSITION_TYPE_SLIDE_LEFT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkRevealerTransitionType.GTK_REVEALER_TRANSITION_TYPE_SLIDE_UP = 4;
     * }
     */
    public static int GTK_REVEALER_TRANSITION_TYPE_SLIDE_UP() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkRevealerTransitionType.GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN = 5;
     * }
     */
    public static int GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN() {
        return (int)5L;
    }
    public static MethodHandle gtk_revealer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3045.const$3,"gtk_revealer_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_revealer_get_type();
     * }
     */
    public static long gtk_revealer_get_type() {
        var mh$ = gtk_revealer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3045.const$4,"gtk_revealer_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_revealer_new();
     * }
     */
    public static MemorySegment gtk_revealer_new() {
        var mh$ = gtk_revealer_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_get_reveal_child$MH() {
        return RuntimeHelper.requireNonNull(constants$3045.const$5,"gtk_revealer_get_reveal_child");
    }
    /**
     * {@snippet :
     * int gtk_revealer_get_reveal_child(struct _GtkRevealer* revealer);
     * }
     */
    public static int gtk_revealer_get_reveal_child(MemorySegment revealer) {
        var mh$ = gtk_revealer_get_reveal_child$MH();
        try {
            return (int)mh$.invokeExact(revealer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_set_reveal_child$MH() {
        return RuntimeHelper.requireNonNull(constants$3046.const$0,"gtk_revealer_set_reveal_child");
    }
    /**
     * {@snippet :
     * void gtk_revealer_set_reveal_child(struct _GtkRevealer* revealer, int reveal_child);
     * }
     */
    public static void gtk_revealer_set_reveal_child(MemorySegment revealer, int reveal_child) {
        var mh$ = gtk_revealer_set_reveal_child$MH();
        try {
            mh$.invokeExact(revealer, reveal_child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_get_child_revealed$MH() {
        return RuntimeHelper.requireNonNull(constants$3046.const$1,"gtk_revealer_get_child_revealed");
    }
    /**
     * {@snippet :
     * int gtk_revealer_get_child_revealed(struct _GtkRevealer* revealer);
     * }
     */
    public static int gtk_revealer_get_child_revealed(MemorySegment revealer) {
        var mh$ = gtk_revealer_get_child_revealed$MH();
        try {
            return (int)mh$.invokeExact(revealer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_get_transition_duration$MH() {
        return RuntimeHelper.requireNonNull(constants$3046.const$2,"gtk_revealer_get_transition_duration");
    }
    /**
     * {@snippet :
     * unsigned int gtk_revealer_get_transition_duration(struct _GtkRevealer* revealer);
     * }
     */
    public static int gtk_revealer_get_transition_duration(MemorySegment revealer) {
        var mh$ = gtk_revealer_get_transition_duration$MH();
        try {
            return (int)mh$.invokeExact(revealer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_set_transition_duration$MH() {
        return RuntimeHelper.requireNonNull(constants$3046.const$3,"gtk_revealer_set_transition_duration");
    }
    /**
     * {@snippet :
     * void gtk_revealer_set_transition_duration(struct _GtkRevealer* revealer, unsigned int duration);
     * }
     */
    public static void gtk_revealer_set_transition_duration(MemorySegment revealer, int duration) {
        var mh$ = gtk_revealer_set_transition_duration$MH();
        try {
            mh$.invokeExact(revealer, duration);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_set_transition_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3046.const$4,"gtk_revealer_set_transition_type");
    }
    /**
     * {@snippet :
     * void gtk_revealer_set_transition_type(struct _GtkRevealer* revealer, enum GtkRevealerTransitionType transition);
     * }
     */
    public static void gtk_revealer_set_transition_type(MemorySegment revealer, int transition) {
        var mh$ = gtk_revealer_set_transition_type$MH();
        try {
            mh$.invokeExact(revealer, transition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_get_transition_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3046.const$5,"gtk_revealer_get_transition_type");
    }
    /**
     * {@snippet :
     * enum GtkRevealerTransitionType gtk_revealer_get_transition_type(struct _GtkRevealer* revealer);
     * }
     */
    public static int gtk_revealer_get_transition_type(MemorySegment revealer) {
        var mh$ = gtk_revealer_get_transition_type$MH();
        try {
            return (int)mh$.invokeExact(revealer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3050.const$0,"gtk_scale_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_scale_get_type();
     * }
     */
    public static long gtk_scale_get_type() {
        var mh$ = gtk_scale_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3050.const$1,"gtk_scale_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_scale_new(enum GtkOrientation orientation, struct _GtkAdjustment* adjustment);
     * }
     */
    public static MemorySegment gtk_scale_new(int orientation, MemorySegment adjustment) {
        var mh$ = gtk_scale_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(orientation, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_new_with_range$MH() {
        return RuntimeHelper.requireNonNull(constants$3050.const$3,"gtk_scale_new_with_range");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_scale_new_with_range(enum GtkOrientation orientation, double min, double max, double step);
     * }
     */
    public static MemorySegment gtk_scale_new_with_range(int orientation, double min, double max, double step) {
        var mh$ = gtk_scale_new_with_range$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(orientation, min, max, step);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_set_digits$MH() {
        return RuntimeHelper.requireNonNull(constants$3050.const$4,"gtk_scale_set_digits");
    }
    /**
     * {@snippet :
     * void gtk_scale_set_digits(struct _GtkScale* scale, int digits);
     * }
     */
    public static void gtk_scale_set_digits(MemorySegment scale, int digits) {
        var mh$ = gtk_scale_set_digits$MH();
        try {
            mh$.invokeExact(scale, digits);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_digits$MH() {
        return RuntimeHelper.requireNonNull(constants$3050.const$5,"gtk_scale_get_digits");
    }
    /**
     * {@snippet :
     * int gtk_scale_get_digits(struct _GtkScale* scale);
     * }
     */
    public static int gtk_scale_get_digits(MemorySegment scale) {
        var mh$ = gtk_scale_get_digits$MH();
        try {
            return (int)mh$.invokeExact(scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_set_draw_value$MH() {
        return RuntimeHelper.requireNonNull(constants$3051.const$0,"gtk_scale_set_draw_value");
    }
    /**
     * {@snippet :
     * void gtk_scale_set_draw_value(struct _GtkScale* scale, int draw_value);
     * }
     */
    public static void gtk_scale_set_draw_value(MemorySegment scale, int draw_value) {
        var mh$ = gtk_scale_set_draw_value$MH();
        try {
            mh$.invokeExact(scale, draw_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_draw_value$MH() {
        return RuntimeHelper.requireNonNull(constants$3051.const$1,"gtk_scale_get_draw_value");
    }
    /**
     * {@snippet :
     * int gtk_scale_get_draw_value(struct _GtkScale* scale);
     * }
     */
    public static int gtk_scale_get_draw_value(MemorySegment scale) {
        var mh$ = gtk_scale_get_draw_value$MH();
        try {
            return (int)mh$.invokeExact(scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_set_has_origin$MH() {
        return RuntimeHelper.requireNonNull(constants$3051.const$2,"gtk_scale_set_has_origin");
    }
    /**
     * {@snippet :
     * void gtk_scale_set_has_origin(struct _GtkScale* scale, int has_origin);
     * }
     */
    public static void gtk_scale_set_has_origin(MemorySegment scale, int has_origin) {
        var mh$ = gtk_scale_set_has_origin$MH();
        try {
            mh$.invokeExact(scale, has_origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_has_origin$MH() {
        return RuntimeHelper.requireNonNull(constants$3051.const$3,"gtk_scale_get_has_origin");
    }
    /**
     * {@snippet :
     * int gtk_scale_get_has_origin(struct _GtkScale* scale);
     * }
     */
    public static int gtk_scale_get_has_origin(MemorySegment scale) {
        var mh$ = gtk_scale_get_has_origin$MH();
        try {
            return (int)mh$.invokeExact(scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_set_value_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$3051.const$4,"gtk_scale_set_value_pos");
    }
    /**
     * {@snippet :
     * void gtk_scale_set_value_pos(struct _GtkScale* scale, enum GtkPositionType pos);
     * }
     */
    public static void gtk_scale_set_value_pos(MemorySegment scale, int pos) {
        var mh$ = gtk_scale_set_value_pos$MH();
        try {
            mh$.invokeExact(scale, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_value_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$3051.const$5,"gtk_scale_get_value_pos");
    }
    /**
     * {@snippet :
     * enum GtkPositionType gtk_scale_get_value_pos(struct _GtkScale* scale);
     * }
     */
    public static int gtk_scale_get_value_pos(MemorySegment scale) {
        var mh$ = gtk_scale_get_value_pos$MH();
        try {
            return (int)mh$.invokeExact(scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$3052.const$0,"gtk_scale_get_layout");
    }
    /**
     * {@snippet :
     * struct _PangoLayout* gtk_scale_get_layout(struct _GtkScale* scale);
     * }
     */
    public static MemorySegment gtk_scale_get_layout(MemorySegment scale) {
        var mh$ = gtk_scale_get_layout$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_layout_offsets$MH() {
        return RuntimeHelper.requireNonNull(constants$3052.const$1,"gtk_scale_get_layout_offsets");
    }
    /**
     * {@snippet :
     * void gtk_scale_get_layout_offsets(struct _GtkScale* scale, int* x, int* y);
     * }
     */
    public static void gtk_scale_get_layout_offsets(MemorySegment scale, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_scale_get_layout_offsets$MH();
        try {
            mh$.invokeExact(scale, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_add_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$3052.const$3,"gtk_scale_add_mark");
    }
    /**
     * {@snippet :
     * void gtk_scale_add_mark(struct _GtkScale* scale, double value, enum GtkPositionType position, char* markup);
     * }
     */
    public static void gtk_scale_add_mark(MemorySegment scale, double value, int position, MemorySegment markup) {
        var mh$ = gtk_scale_add_mark$MH();
        try {
            mh$.invokeExact(scale, value, position, markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_clear_marks$MH() {
        return RuntimeHelper.requireNonNull(constants$3052.const$4,"gtk_scale_clear_marks");
    }
    /**
     * {@snippet :
     * void gtk_scale_clear_marks(struct _GtkScale* scale);
     * }
     */
    public static void gtk_scale_clear_marks(MemorySegment scale) {
        var mh$ = gtk_scale_clear_marks$MH();
        try {
            mh$.invokeExact(scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3055.const$0,"gtk_scale_button_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_scale_button_get_type();
     * }
     */
    public static long gtk_scale_button_get_type() {
        var mh$ = gtk_scale_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3055.const$2,"gtk_scale_button_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_scale_button_new(enum GtkIconSize size, double min, double max, double step, char** icons);
     * }
     */
    public static MemorySegment gtk_scale_button_new(int size, double min, double max, double step, MemorySegment icons) {
        var mh$ = gtk_scale_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(size, min, max, step, icons);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_set_icons$MH() {
        return RuntimeHelper.requireNonNull(constants$3055.const$3,"gtk_scale_button_set_icons");
    }
    /**
     * {@snippet :
     * void gtk_scale_button_set_icons(struct _GtkScaleButton* button, char** icons);
     * }
     */
    public static void gtk_scale_button_set_icons(MemorySegment button, MemorySegment icons) {
        var mh$ = gtk_scale_button_set_icons$MH();
        try {
            mh$.invokeExact(button, icons);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$3055.const$4,"gtk_scale_button_get_value");
    }
    /**
     * {@snippet :
     * double gtk_scale_button_get_value(struct _GtkScaleButton* button);
     * }
     */
    public static double gtk_scale_button_get_value(MemorySegment button) {
        var mh$ = gtk_scale_button_get_value$MH();
        try {
            return (double)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$3055.const$5,"gtk_scale_button_set_value");
    }
    /**
     * {@snippet :
     * void gtk_scale_button_set_value(struct _GtkScaleButton* button, double value);
     * }
     */
    public static void gtk_scale_button_set_value(MemorySegment button, double value) {
        var mh$ = gtk_scale_button_set_value$MH();
        try {
            mh$.invokeExact(button, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_get_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3056.const$0,"gtk_scale_button_get_adjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_scale_button_get_adjustment(struct _GtkScaleButton* button);
     * }
     */
    public static MemorySegment gtk_scale_button_get_adjustment(MemorySegment button) {
        var mh$ = gtk_scale_button_get_adjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_set_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3056.const$1,"gtk_scale_button_set_adjustment");
    }
    /**
     * {@snippet :
     * void gtk_scale_button_set_adjustment(struct _GtkScaleButton* button, struct _GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_scale_button_set_adjustment(MemorySegment button, MemorySegment adjustment) {
        var mh$ = gtk_scale_button_set_adjustment$MH();
        try {
            mh$.invokeExact(button, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_get_plus_button$MH() {
        return RuntimeHelper.requireNonNull(constants$3056.const$2,"gtk_scale_button_get_plus_button");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_scale_button_get_plus_button(struct _GtkScaleButton* button);
     * }
     */
    public static MemorySegment gtk_scale_button_get_plus_button(MemorySegment button) {
        var mh$ = gtk_scale_button_get_plus_button$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_get_minus_button$MH() {
        return RuntimeHelper.requireNonNull(constants$3056.const$3,"gtk_scale_button_get_minus_button");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_scale_button_get_minus_button(struct _GtkScaleButton* button);
     * }
     */
    public static MemorySegment gtk_scale_button_get_minus_button(MemorySegment button) {
        var mh$ = gtk_scale_button_get_minus_button$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_get_popup$MH() {
        return RuntimeHelper.requireNonNull(constants$3056.const$4,"gtk_scale_button_get_popup");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_scale_button_get_popup(struct _GtkScaleButton* button);
     * }
     */
    public static MemorySegment gtk_scale_button_get_popup(MemorySegment button) {
        var mh$ = gtk_scale_button_get_popup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3057.const$2,"gtk_scrollable_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_scrollable_get_type();
     * }
     */
    public static long gtk_scrollable_get_type() {
        var mh$ = gtk_scrollable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_get_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3057.const$3,"gtk_scrollable_get_hadjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_scrollable_get_hadjustment(struct _GtkScrollable* scrollable);
     * }
     */
    public static MemorySegment gtk_scrollable_get_hadjustment(MemorySegment scrollable) {
        var mh$ = gtk_scrollable_get_hadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scrollable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_set_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3057.const$4,"gtk_scrollable_set_hadjustment");
    }
    /**
     * {@snippet :
     * void gtk_scrollable_set_hadjustment(struct _GtkScrollable* scrollable, struct _GtkAdjustment* hadjustment);
     * }
     */
    public static void gtk_scrollable_set_hadjustment(MemorySegment scrollable, MemorySegment hadjustment) {
        var mh$ = gtk_scrollable_set_hadjustment$MH();
        try {
            mh$.invokeExact(scrollable, hadjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_get_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3057.const$5,"gtk_scrollable_get_vadjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_scrollable_get_vadjustment(struct _GtkScrollable* scrollable);
     * }
     */
    public static MemorySegment gtk_scrollable_get_vadjustment(MemorySegment scrollable) {
        var mh$ = gtk_scrollable_get_vadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scrollable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_set_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3058.const$0,"gtk_scrollable_set_vadjustment");
    }
    /**
     * {@snippet :
     * void gtk_scrollable_set_vadjustment(struct _GtkScrollable* scrollable, struct _GtkAdjustment* vadjustment);
     * }
     */
    public static void gtk_scrollable_set_vadjustment(MemorySegment scrollable, MemorySegment vadjustment) {
        var mh$ = gtk_scrollable_set_vadjustment$MH();
        try {
            mh$.invokeExact(scrollable, vadjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_get_hscroll_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$3058.const$1,"gtk_scrollable_get_hscroll_policy");
    }
    /**
     * {@snippet :
     * enum GtkScrollablePolicy gtk_scrollable_get_hscroll_policy(struct _GtkScrollable* scrollable);
     * }
     */
    public static int gtk_scrollable_get_hscroll_policy(MemorySegment scrollable) {
        var mh$ = gtk_scrollable_get_hscroll_policy$MH();
        try {
            return (int)mh$.invokeExact(scrollable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_set_hscroll_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$3058.const$2,"gtk_scrollable_set_hscroll_policy");
    }
    /**
     * {@snippet :
     * void gtk_scrollable_set_hscroll_policy(struct _GtkScrollable* scrollable, enum GtkScrollablePolicy policy);
     * }
     */
    public static void gtk_scrollable_set_hscroll_policy(MemorySegment scrollable, int policy) {
        var mh$ = gtk_scrollable_set_hscroll_policy$MH();
        try {
            mh$.invokeExact(scrollable, policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_get_vscroll_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$3058.const$3,"gtk_scrollable_get_vscroll_policy");
    }
    /**
     * {@snippet :
     * enum GtkScrollablePolicy gtk_scrollable_get_vscroll_policy(struct _GtkScrollable* scrollable);
     * }
     */
    public static int gtk_scrollable_get_vscroll_policy(MemorySegment scrollable) {
        var mh$ = gtk_scrollable_get_vscroll_policy$MH();
        try {
            return (int)mh$.invokeExact(scrollable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_set_vscroll_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$3058.const$4,"gtk_scrollable_set_vscroll_policy");
    }
    /**
     * {@snippet :
     * void gtk_scrollable_set_vscroll_policy(struct _GtkScrollable* scrollable, enum GtkScrollablePolicy policy);
     * }
     */
    public static void gtk_scrollable_set_vscroll_policy(MemorySegment scrollable, int policy) {
        var mh$ = gtk_scrollable_set_vscroll_policy$MH();
        try {
            mh$.invokeExact(scrollable, policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_get_border$MH() {
        return RuntimeHelper.requireNonNull(constants$3058.const$5,"gtk_scrollable_get_border");
    }
    /**
     * {@snippet :
     * int gtk_scrollable_get_border(struct _GtkScrollable* scrollable, struct _GtkBorder* border);
     * }
     */
    public static int gtk_scrollable_get_border(MemorySegment scrollable, MemorySegment border) {
        var mh$ = gtk_scrollable_get_border$MH();
        try {
            return (int)mh$.invokeExact(scrollable, border);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollbar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3060.const$4,"gtk_scrollbar_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_scrollbar_get_type();
     * }
     */
    public static long gtk_scrollbar_get_type() {
        var mh$ = gtk_scrollbar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollbar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3060.const$5,"gtk_scrollbar_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_scrollbar_new(enum GtkOrientation orientation, struct _GtkAdjustment* adjustment);
     * }
     */
    public static MemorySegment gtk_scrollbar_new(int orientation, MemorySegment adjustment) {
        var mh$ = gtk_scrollbar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(orientation, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkCornerType.GTK_CORNER_TOP_LEFT = 0;
     * }
     */
    public static int GTK_CORNER_TOP_LEFT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkCornerType.GTK_CORNER_BOTTOM_LEFT = 1;
     * }
     */
    public static int GTK_CORNER_BOTTOM_LEFT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkCornerType.GTK_CORNER_TOP_RIGHT = 2;
     * }
     */
    public static int GTK_CORNER_TOP_RIGHT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkCornerType.GTK_CORNER_BOTTOM_RIGHT = 3;
     * }
     */
    public static int GTK_CORNER_BOTTOM_RIGHT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkPolicyType.GTK_POLICY_ALWAYS = 0;
     * }
     */
    public static int GTK_POLICY_ALWAYS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkPolicyType.GTK_POLICY_AUTOMATIC = 1;
     * }
     */
    public static int GTK_POLICY_AUTOMATIC() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkPolicyType.GTK_POLICY_NEVER = 2;
     * }
     */
    public static int GTK_POLICY_NEVER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkPolicyType.GTK_POLICY_EXTERNAL = 3;
     * }
     */
    public static int GTK_POLICY_EXTERNAL() {
        return (int)3L;
    }
    public static MethodHandle gtk_scrolled_window_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3063.const$4,"gtk_scrolled_window_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_scrolled_window_get_type();
     * }
     */
    public static long gtk_scrolled_window_get_type() {
        var mh$ = gtk_scrolled_window_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3063.const$5,"gtk_scrolled_window_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_scrolled_window_new(struct _GtkAdjustment* hadjustment, struct _GtkAdjustment* vadjustment);
     * }
     */
    public static MemorySegment gtk_scrolled_window_new(MemorySegment hadjustment, MemorySegment vadjustment) {
        var mh$ = gtk_scrolled_window_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hadjustment, vadjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3064.const$0,"gtk_scrolled_window_set_hadjustment");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_hadjustment(struct _GtkScrolledWindow* scrolled_window, struct _GtkAdjustment* hadjustment);
     * }
     */
    public static void gtk_scrolled_window_set_hadjustment(MemorySegment scrolled_window, MemorySegment hadjustment) {
        var mh$ = gtk_scrolled_window_set_hadjustment$MH();
        try {
            mh$.invokeExact(scrolled_window, hadjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3064.const$1,"gtk_scrolled_window_set_vadjustment");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_vadjustment(struct _GtkScrolledWindow* scrolled_window, struct _GtkAdjustment* vadjustment);
     * }
     */
    public static void gtk_scrolled_window_set_vadjustment(MemorySegment scrolled_window, MemorySegment vadjustment) {
        var mh$ = gtk_scrolled_window_set_vadjustment$MH();
        try {
            mh$.invokeExact(scrolled_window, vadjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3064.const$2,"gtk_scrolled_window_get_hadjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_scrolled_window_get_hadjustment(struct _GtkScrolledWindow* scrolled_window);
     * }
     */
    public static MemorySegment gtk_scrolled_window_get_hadjustment(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_hadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3064.const$3,"gtk_scrolled_window_get_vadjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_scrolled_window_get_vadjustment(struct _GtkScrolledWindow* scrolled_window);
     * }
     */
    public static MemorySegment gtk_scrolled_window_get_vadjustment(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_vadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_hscrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$3064.const$4,"gtk_scrolled_window_get_hscrollbar");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_scrolled_window_get_hscrollbar(struct _GtkScrolledWindow* scrolled_window);
     * }
     */
    public static MemorySegment gtk_scrolled_window_get_hscrollbar(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_hscrollbar$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_vscrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$3064.const$5,"gtk_scrolled_window_get_vscrollbar");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_scrolled_window_get_vscrollbar(struct _GtkScrolledWindow* scrolled_window);
     * }
     */
    public static MemorySegment gtk_scrolled_window_get_vscrollbar(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_vscrollbar$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$3065.const$0,"gtk_scrolled_window_set_policy");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_policy(struct _GtkScrolledWindow* scrolled_window, enum GtkPolicyType hscrollbar_policy, enum GtkPolicyType vscrollbar_policy);
     * }
     */
    public static void gtk_scrolled_window_set_policy(MemorySegment scrolled_window, int hscrollbar_policy, int vscrollbar_policy) {
        var mh$ = gtk_scrolled_window_set_policy$MH();
        try {
            mh$.invokeExact(scrolled_window, hscrollbar_policy, vscrollbar_policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$3065.const$1,"gtk_scrolled_window_get_policy");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_get_policy(struct _GtkScrolledWindow* scrolled_window, enum GtkPolicyType* hscrollbar_policy, enum GtkPolicyType* vscrollbar_policy);
     * }
     */
    public static void gtk_scrolled_window_get_policy(MemorySegment scrolled_window, MemorySegment hscrollbar_policy, MemorySegment vscrollbar_policy) {
        var mh$ = gtk_scrolled_window_get_policy$MH();
        try {
            mh$.invokeExact(scrolled_window, hscrollbar_policy, vscrollbar_policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_placement$MH() {
        return RuntimeHelper.requireNonNull(constants$3065.const$2,"gtk_scrolled_window_set_placement");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_placement(struct _GtkScrolledWindow* scrolled_window, enum GtkCornerType window_placement);
     * }
     */
    public static void gtk_scrolled_window_set_placement(MemorySegment scrolled_window, int window_placement) {
        var mh$ = gtk_scrolled_window_set_placement$MH();
        try {
            mh$.invokeExact(scrolled_window, window_placement);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_unset_placement$MH() {
        return RuntimeHelper.requireNonNull(constants$3065.const$3,"gtk_scrolled_window_unset_placement");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_unset_placement(struct _GtkScrolledWindow* scrolled_window);
     * }
     */
    public static void gtk_scrolled_window_unset_placement(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_unset_placement$MH();
        try {
            mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_placement$MH() {
        return RuntimeHelper.requireNonNull(constants$3065.const$4,"gtk_scrolled_window_get_placement");
    }
    /**
     * {@snippet :
     * enum GtkCornerType gtk_scrolled_window_get_placement(struct _GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_placement(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_placement$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_shadow_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3065.const$5,"gtk_scrolled_window_set_shadow_type");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_shadow_type(struct _GtkScrolledWindow* scrolled_window, enum GtkShadowType type);
     * }
     */
    public static void gtk_scrolled_window_set_shadow_type(MemorySegment scrolled_window, int type) {
        var mh$ = gtk_scrolled_window_set_shadow_type$MH();
        try {
            mh$.invokeExact(scrolled_window, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_shadow_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3066.const$0,"gtk_scrolled_window_get_shadow_type");
    }
    /**
     * {@snippet :
     * enum GtkShadowType gtk_scrolled_window_get_shadow_type(struct _GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_shadow_type(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_shadow_type$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_add_with_viewport$MH() {
        return RuntimeHelper.requireNonNull(constants$3066.const$1,"gtk_scrolled_window_add_with_viewport");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_add_with_viewport(struct _GtkScrolledWindow* scrolled_window, struct _GtkWidget* child);
     * }
     */
    public static void gtk_scrolled_window_add_with_viewport(MemorySegment scrolled_window, MemorySegment child) {
        var mh$ = gtk_scrolled_window_add_with_viewport$MH();
        try {
            mh$.invokeExact(scrolled_window, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_min_content_width$MH() {
        return RuntimeHelper.requireNonNull(constants$3066.const$2,"gtk_scrolled_window_get_min_content_width");
    }
    /**
     * {@snippet :
     * int gtk_scrolled_window_get_min_content_width(struct _GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_min_content_width(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_min_content_width$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_min_content_width$MH() {
        return RuntimeHelper.requireNonNull(constants$3066.const$3,"gtk_scrolled_window_set_min_content_width");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_min_content_width(struct _GtkScrolledWindow* scrolled_window, int width);
     * }
     */
    public static void gtk_scrolled_window_set_min_content_width(MemorySegment scrolled_window, int width) {
        var mh$ = gtk_scrolled_window_set_min_content_width$MH();
        try {
            mh$.invokeExact(scrolled_window, width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_min_content_height$MH() {
        return RuntimeHelper.requireNonNull(constants$3066.const$4,"gtk_scrolled_window_get_min_content_height");
    }
    /**
     * {@snippet :
     * int gtk_scrolled_window_get_min_content_height(struct _GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_min_content_height(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_min_content_height$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_min_content_height$MH() {
        return RuntimeHelper.requireNonNull(constants$3066.const$5,"gtk_scrolled_window_set_min_content_height");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_min_content_height(struct _GtkScrolledWindow* scrolled_window, int height);
     * }
     */
    public static void gtk_scrolled_window_set_min_content_height(MemorySegment scrolled_window, int height) {
        var mh$ = gtk_scrolled_window_set_min_content_height$MH();
        try {
            mh$.invokeExact(scrolled_window, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_kinetic_scrolling$MH() {
        return RuntimeHelper.requireNonNull(constants$3067.const$0,"gtk_scrolled_window_set_kinetic_scrolling");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_kinetic_scrolling(struct _GtkScrolledWindow* scrolled_window, int kinetic_scrolling);
     * }
     */
    public static void gtk_scrolled_window_set_kinetic_scrolling(MemorySegment scrolled_window, int kinetic_scrolling) {
        var mh$ = gtk_scrolled_window_set_kinetic_scrolling$MH();
        try {
            mh$.invokeExact(scrolled_window, kinetic_scrolling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_kinetic_scrolling$MH() {
        return RuntimeHelper.requireNonNull(constants$3067.const$1,"gtk_scrolled_window_get_kinetic_scrolling");
    }
    /**
     * {@snippet :
     * int gtk_scrolled_window_get_kinetic_scrolling(struct _GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_kinetic_scrolling(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_kinetic_scrolling$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_capture_button_press$MH() {
        return RuntimeHelper.requireNonNull(constants$3067.const$2,"gtk_scrolled_window_set_capture_button_press");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_capture_button_press(struct _GtkScrolledWindow* scrolled_window, int capture_button_press);
     * }
     */
    public static void gtk_scrolled_window_set_capture_button_press(MemorySegment scrolled_window, int capture_button_press) {
        var mh$ = gtk_scrolled_window_set_capture_button_press$MH();
        try {
            mh$.invokeExact(scrolled_window, capture_button_press);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_capture_button_press$MH() {
        return RuntimeHelper.requireNonNull(constants$3067.const$3,"gtk_scrolled_window_get_capture_button_press");
    }
    /**
     * {@snippet :
     * int gtk_scrolled_window_get_capture_button_press(struct _GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_capture_button_press(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_capture_button_press$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_overlay_scrolling$MH() {
        return RuntimeHelper.requireNonNull(constants$3067.const$4,"gtk_scrolled_window_set_overlay_scrolling");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_overlay_scrolling(struct _GtkScrolledWindow* scrolled_window, int overlay_scrolling);
     * }
     */
    public static void gtk_scrolled_window_set_overlay_scrolling(MemorySegment scrolled_window, int overlay_scrolling) {
        var mh$ = gtk_scrolled_window_set_overlay_scrolling$MH();
        try {
            mh$.invokeExact(scrolled_window, overlay_scrolling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_overlay_scrolling$MH() {
        return RuntimeHelper.requireNonNull(constants$3067.const$5,"gtk_scrolled_window_get_overlay_scrolling");
    }
    /**
     * {@snippet :
     * int gtk_scrolled_window_get_overlay_scrolling(struct _GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_overlay_scrolling(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_overlay_scrolling$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_max_content_width$MH() {
        return RuntimeHelper.requireNonNull(constants$3068.const$0,"gtk_scrolled_window_set_max_content_width");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_max_content_width(struct _GtkScrolledWindow* scrolled_window, int width);
     * }
     */
    public static void gtk_scrolled_window_set_max_content_width(MemorySegment scrolled_window, int width) {
        var mh$ = gtk_scrolled_window_set_max_content_width$MH();
        try {
            mh$.invokeExact(scrolled_window, width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_max_content_width$MH() {
        return RuntimeHelper.requireNonNull(constants$3068.const$1,"gtk_scrolled_window_get_max_content_width");
    }
    /**
     * {@snippet :
     * int gtk_scrolled_window_get_max_content_width(struct _GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_max_content_width(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_max_content_width$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_max_content_height$MH() {
        return RuntimeHelper.requireNonNull(constants$3068.const$2,"gtk_scrolled_window_set_max_content_height");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_max_content_height(struct _GtkScrolledWindow* scrolled_window, int height);
     * }
     */
    public static void gtk_scrolled_window_set_max_content_height(MemorySegment scrolled_window, int height) {
        var mh$ = gtk_scrolled_window_set_max_content_height$MH();
        try {
            mh$.invokeExact(scrolled_window, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_max_content_height$MH() {
        return RuntimeHelper.requireNonNull(constants$3068.const$3,"gtk_scrolled_window_get_max_content_height");
    }
    /**
     * {@snippet :
     * int gtk_scrolled_window_get_max_content_height(struct _GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_max_content_height(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_max_content_height$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_propagate_natural_width$MH() {
        return RuntimeHelper.requireNonNull(constants$3068.const$4,"gtk_scrolled_window_set_propagate_natural_width");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_propagate_natural_width(struct _GtkScrolledWindow* scrolled_window, int propagate);
     * }
     */
    public static void gtk_scrolled_window_set_propagate_natural_width(MemorySegment scrolled_window, int propagate) {
        var mh$ = gtk_scrolled_window_set_propagate_natural_width$MH();
        try {
            mh$.invokeExact(scrolled_window, propagate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_propagate_natural_width$MH() {
        return RuntimeHelper.requireNonNull(constants$3068.const$5,"gtk_scrolled_window_get_propagate_natural_width");
    }
    /**
     * {@snippet :
     * int gtk_scrolled_window_get_propagate_natural_width(struct _GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_propagate_natural_width(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_propagate_natural_width$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_propagate_natural_height$MH() {
        return RuntimeHelper.requireNonNull(constants$3069.const$0,"gtk_scrolled_window_set_propagate_natural_height");
    }
    /**
     * {@snippet :
     * void gtk_scrolled_window_set_propagate_natural_height(struct _GtkScrolledWindow* scrolled_window, int propagate);
     * }
     */
    public static void gtk_scrolled_window_set_propagate_natural_height(MemorySegment scrolled_window, int propagate) {
        var mh$ = gtk_scrolled_window_set_propagate_natural_height$MH();
        try {
            mh$.invokeExact(scrolled_window, propagate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_propagate_natural_height$MH() {
        return RuntimeHelper.requireNonNull(constants$3069.const$1,"gtk_scrolled_window_get_propagate_natural_height");
    }
    /**
     * {@snippet :
     * int gtk_scrolled_window_get_propagate_natural_height(struct _GtkScrolledWindow* scrolled_window);
     * }
     */
    public static int gtk_scrolled_window_get_propagate_natural_height(MemorySegment scrolled_window) {
        var mh$ = gtk_scrolled_window_get_propagate_natural_height$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3071.const$0,"gtk_search_bar_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_search_bar_get_type();
     * }
     */
    public static long gtk_search_bar_get_type() {
        var mh$ = gtk_search_bar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3071.const$1,"gtk_search_bar_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_search_bar_new();
     * }
     */
    public static MemorySegment gtk_search_bar_new() {
        var mh$ = gtk_search_bar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_connect_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$3071.const$2,"gtk_search_bar_connect_entry");
    }
    /**
     * {@snippet :
     * void gtk_search_bar_connect_entry(struct _GtkSearchBar* bar, struct _GtkEntry* entry);
     * }
     */
    public static void gtk_search_bar_connect_entry(MemorySegment bar, MemorySegment entry) {
        var mh$ = gtk_search_bar_connect_entry$MH();
        try {
            mh$.invokeExact(bar, entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_get_search_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$3071.const$3,"gtk_search_bar_get_search_mode");
    }
    /**
     * {@snippet :
     * int gtk_search_bar_get_search_mode(struct _GtkSearchBar* bar);
     * }
     */
    public static int gtk_search_bar_get_search_mode(MemorySegment bar) {
        var mh$ = gtk_search_bar_get_search_mode$MH();
        try {
            return (int)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_set_search_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$3071.const$4,"gtk_search_bar_set_search_mode");
    }
    /**
     * {@snippet :
     * void gtk_search_bar_set_search_mode(struct _GtkSearchBar* bar, int search_mode);
     * }
     */
    public static void gtk_search_bar_set_search_mode(MemorySegment bar, int search_mode) {
        var mh$ = gtk_search_bar_set_search_mode$MH();
        try {
            mh$.invokeExact(bar, search_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_get_show_close_button$MH() {
        return RuntimeHelper.requireNonNull(constants$3071.const$5,"gtk_search_bar_get_show_close_button");
    }
    /**
     * {@snippet :
     * int gtk_search_bar_get_show_close_button(struct _GtkSearchBar* bar);
     * }
     */
    public static int gtk_search_bar_get_show_close_button(MemorySegment bar) {
        var mh$ = gtk_search_bar_get_show_close_button$MH();
        try {
            return (int)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_set_show_close_button$MH() {
        return RuntimeHelper.requireNonNull(constants$3072.const$0,"gtk_search_bar_set_show_close_button");
    }
    /**
     * {@snippet :
     * void gtk_search_bar_set_show_close_button(struct _GtkSearchBar* bar, int visible);
     * }
     */
    public static void gtk_search_bar_set_show_close_button(MemorySegment bar, int visible) {
        var mh$ = gtk_search_bar_set_show_close_button$MH();
        try {
            mh$.invokeExact(bar, visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_handle_event$MH() {
        return RuntimeHelper.requireNonNull(constants$3072.const$1,"gtk_search_bar_handle_event");
    }
    /**
     * {@snippet :
     * int gtk_search_bar_handle_event(struct _GtkSearchBar* bar, union _GdkEvent* event);
     * }
     */
    public static int gtk_search_bar_handle_event(MemorySegment bar, MemorySegment event) {
        var mh$ = gtk_search_bar_handle_event$MH();
        try {
            return (int)mh$.invokeExact(bar, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_entry_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3074.const$0,"gtk_search_entry_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_search_entry_get_type();
     * }
     */
    public static long gtk_search_entry_get_type() {
        var mh$ = gtk_search_entry_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_entry_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3074.const$1,"gtk_search_entry_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_search_entry_new();
     * }
     */
    public static MemorySegment gtk_search_entry_new() {
        var mh$ = gtk_search_entry_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_entry_handle_event$MH() {
        return RuntimeHelper.requireNonNull(constants$3074.const$2,"gtk_search_entry_handle_event");
    }
    /**
     * {@snippet :
     * int gtk_search_entry_handle_event(struct _GtkSearchEntry* entry, union _GdkEvent* event);
     * }
     */
    public static int gtk_search_entry_handle_event(MemorySegment entry, MemorySegment event) {
        var mh$ = gtk_search_entry_handle_event$MH();
        try {
            return (int)mh$.invokeExact(entry, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_separator_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3076.const$2,"gtk_separator_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_separator_get_type();
     * }
     */
    public static long gtk_separator_get_type() {
        var mh$ = gtk_separator_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_separator_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3076.const$3,"gtk_separator_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_separator_new(enum GtkOrientation orientation);
     * }
     */
    public static MemorySegment gtk_separator_new(int orientation) {
        var mh$ = gtk_separator_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_separator_menu_item_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3078.const$2,"gtk_separator_menu_item_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_separator_menu_item_get_type();
     * }
     */
    public static long gtk_separator_menu_item_get_type() {
        var mh$ = gtk_separator_menu_item_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_separator_menu_item_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3078.const$3,"gtk_separator_menu_item_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_separator_menu_item_new();
     * }
     */
    public static MemorySegment gtk_separator_menu_item_new() {
        var mh$ = gtk_separator_menu_item_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_separator_tool_item_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3080.const$3,"gtk_separator_tool_item_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_separator_tool_item_get_type();
     * }
     */
    public static long gtk_separator_tool_item_get_type() {
        var mh$ = gtk_separator_tool_item_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_separator_tool_item_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3080.const$4,"gtk_separator_tool_item_new");
    }
    /**
     * {@snippet :
     * struct _GtkToolItem* gtk_separator_tool_item_new();
     * }
     */
    public static MemorySegment gtk_separator_tool_item_new() {
        var mh$ = gtk_separator_tool_item_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_separator_tool_item_get_draw$MH() {
        return RuntimeHelper.requireNonNull(constants$3080.const$5,"gtk_separator_tool_item_get_draw");
    }
    /**
     * {@snippet :
     * int gtk_separator_tool_item_get_draw(struct _GtkSeparatorToolItem* item);
     * }
     */
    public static int gtk_separator_tool_item_get_draw(MemorySegment item) {
        var mh$ = gtk_separator_tool_item_get_draw$MH();
        try {
            return (int)mh$.invokeExact(item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_separator_tool_item_set_draw$MH() {
        return RuntimeHelper.requireNonNull(constants$3081.const$0,"gtk_separator_tool_item_set_draw");
    }
    /**
     * {@snippet :
     * void gtk_separator_tool_item_set_draw(struct _GtkSeparatorToolItem* item, int draw);
     * }
     */
    public static void gtk_separator_tool_item_set_draw(MemorySegment item, int draw) {
        var mh$ = gtk_separator_tool_item_set_draw$MH();
        try {
            mh$.invokeExact(item, draw);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_settings_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3083.const$2,"gtk_settings_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_settings_get_type();
     * }
     */
    public static long gtk_settings_get_type() {
        var mh$ = gtk_settings_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_settings_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$3083.const$3,"gtk_settings_get_default");
    }
    /**
     * {@snippet :
     * struct _GtkSettings* gtk_settings_get_default();
     * }
     */
    public static MemorySegment gtk_settings_get_default() {
        var mh$ = gtk_settings_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_settings_get_for_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$3083.const$4,"gtk_settings_get_for_screen");
    }
    /**
     * {@snippet :
     * struct _GtkSettings* gtk_settings_get_for_screen(struct _GdkScreen* screen);
     * }
     */
    public static MemorySegment gtk_settings_get_for_screen(MemorySegment screen) {
        var mh$ = gtk_settings_get_for_screen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_settings_install_property$MH() {
        return RuntimeHelper.requireNonNull(constants$3083.const$5,"gtk_settings_install_property");
    }
    /**
     * {@snippet :
     * void gtk_settings_install_property(struct _GParamSpec* pspec);
     * }
     */
    public static void gtk_settings_install_property(MemorySegment pspec) {
        var mh$ = gtk_settings_install_property$MH();
        try {
            mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_settings_install_property_parser$MH() {
        return RuntimeHelper.requireNonNull(constants$3084.const$1,"gtk_settings_install_property_parser");
    }
    /**
     * {@snippet :
     * void gtk_settings_install_property_parser(struct _GParamSpec* pspec, int (*parser)(struct _GParamSpec*,struct _GString*,struct _GValue*));
     * }
     */
    public static void gtk_settings_install_property_parser(MemorySegment pspec, MemorySegment parser) {
        var mh$ = gtk_settings_install_property_parser$MH();
        try {
            mh$.invokeExact(pspec, parser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_rc_property_parse_color$MH() {
        return RuntimeHelper.requireNonNull(constants$3084.const$2,"gtk_rc_property_parse_color");
    }
    /**
     * {@snippet :
     * int gtk_rc_property_parse_color(struct _GParamSpec* pspec, struct _GString* gstring, struct _GValue* property_value);
     * }
     */
    public static int gtk_rc_property_parse_color(MemorySegment pspec, MemorySegment gstring, MemorySegment property_value) {
        var mh$ = gtk_rc_property_parse_color$MH();
        try {
            return (int)mh$.invokeExact(pspec, gstring, property_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_rc_property_parse_enum$MH() {
        return RuntimeHelper.requireNonNull(constants$3084.const$3,"gtk_rc_property_parse_enum");
    }
    /**
     * {@snippet :
     * int gtk_rc_property_parse_enum(struct _GParamSpec* pspec, struct _GString* gstring, struct _GValue* property_value);
     * }
     */
    public static int gtk_rc_property_parse_enum(MemorySegment pspec, MemorySegment gstring, MemorySegment property_value) {
        var mh$ = gtk_rc_property_parse_enum$MH();
        try {
            return (int)mh$.invokeExact(pspec, gstring, property_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_rc_property_parse_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$3084.const$4,"gtk_rc_property_parse_flags");
    }
    /**
     * {@snippet :
     * int gtk_rc_property_parse_flags(struct _GParamSpec* pspec, struct _GString* gstring, struct _GValue* property_value);
     * }
     */
    public static int gtk_rc_property_parse_flags(MemorySegment pspec, MemorySegment gstring, MemorySegment property_value) {
        var mh$ = gtk_rc_property_parse_flags$MH();
        try {
            return (int)mh$.invokeExact(pspec, gstring, property_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_rc_property_parse_requisition$MH() {
        return RuntimeHelper.requireNonNull(constants$3084.const$5,"gtk_rc_property_parse_requisition");
    }
    /**
     * {@snippet :
     * int gtk_rc_property_parse_requisition(struct _GParamSpec* pspec, struct _GString* gstring, struct _GValue* property_value);
     * }
     */
    public static int gtk_rc_property_parse_requisition(MemorySegment pspec, MemorySegment gstring, MemorySegment property_value) {
        var mh$ = gtk_rc_property_parse_requisition$MH();
        try {
            return (int)mh$.invokeExact(pspec, gstring, property_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_rc_property_parse_border$MH() {
        return RuntimeHelper.requireNonNull(constants$3085.const$0,"gtk_rc_property_parse_border");
    }
    /**
     * {@snippet :
     * int gtk_rc_property_parse_border(struct _GParamSpec* pspec, struct _GString* gstring, struct _GValue* property_value);
     * }
     */
    public static int gtk_rc_property_parse_border(MemorySegment pspec, MemorySegment gstring, MemorySegment property_value) {
        var mh$ = gtk_rc_property_parse_border$MH();
        try {
            return (int)mh$.invokeExact(pspec, gstring, property_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_settings_set_property_value$MH() {
        return RuntimeHelper.requireNonNull(constants$3085.const$1,"gtk_settings_set_property_value");
    }
    /**
     * {@snippet :
     * void gtk_settings_set_property_value(struct _GtkSettings* settings, char* name, struct _GtkSettingsValue* svalue);
     * }
     */
    public static void gtk_settings_set_property_value(MemorySegment settings, MemorySegment name, MemorySegment svalue) {
        var mh$ = gtk_settings_set_property_value$MH();
        try {
            mh$.invokeExact(settings, name, svalue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_settings_set_string_property$MH() {
        return RuntimeHelper.requireNonNull(constants$3085.const$2,"gtk_settings_set_string_property");
    }
    /**
     * {@snippet :
     * void gtk_settings_set_string_property(struct _GtkSettings* settings, char* name, char* v_string, char* origin);
     * }
     */
    public static void gtk_settings_set_string_property(MemorySegment settings, MemorySegment name, MemorySegment v_string, MemorySegment origin) {
        var mh$ = gtk_settings_set_string_property$MH();
        try {
            mh$.invokeExact(settings, name, v_string, origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_settings_set_long_property$MH() {
        return RuntimeHelper.requireNonNull(constants$3085.const$3,"gtk_settings_set_long_property");
    }
    /**
     * {@snippet :
     * void gtk_settings_set_long_property(struct _GtkSettings* settings, char* name, long v_long, char* origin);
     * }
     */
    public static void gtk_settings_set_long_property(MemorySegment settings, MemorySegment name, long v_long, MemorySegment origin) {
        var mh$ = gtk_settings_set_long_property$MH();
        try {
            mh$.invokeExact(settings, name, v_long, origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_settings_set_double_property$MH() {
        return RuntimeHelper.requireNonNull(constants$3085.const$5,"gtk_settings_set_double_property");
    }
    /**
     * {@snippet :
     * void gtk_settings_set_double_property(struct _GtkSettings* settings, char* name, double v_double, char* origin);
     * }
     */
    public static void gtk_settings_set_double_property(MemorySegment settings, MemorySegment name, double v_double, MemorySegment origin) {
        var mh$ = gtk_settings_set_double_property$MH();
        try {
            mh$.invokeExact(settings, name, v_double, origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_settings_reset_property$MH() {
        return RuntimeHelper.requireNonNull(constants$3086.const$0,"gtk_settings_reset_property");
    }
    /**
     * {@snippet :
     * void gtk_settings_reset_property(struct _GtkSettings* settings, char* name);
     * }
     */
    public static void gtk_settings_reset_property(MemorySegment settings, MemorySegment name) {
        var mh$ = gtk_settings_reset_property$MH();
        try {
            mh$.invokeExact(settings, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_label_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3086.const$1,"gtk_shortcut_label_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_shortcut_label_get_type();
     * }
     */
    public static long gtk_shortcut_label_get_type() {
        var mh$ = gtk_shortcut_label_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_label_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3086.const$2,"gtk_shortcut_label_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_shortcut_label_new(char* accelerator);
     * }
     */
    public static MemorySegment gtk_shortcut_label_new(MemorySegment accelerator) {
        var mh$ = gtk_shortcut_label_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accelerator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_label_get_accelerator$MH() {
        return RuntimeHelper.requireNonNull(constants$3086.const$3,"gtk_shortcut_label_get_accelerator");
    }
    /**
     * {@snippet :
     * char* gtk_shortcut_label_get_accelerator(struct _GtkShortcutLabel* self);
     * }
     */
    public static MemorySegment gtk_shortcut_label_get_accelerator(MemorySegment self) {
        var mh$ = gtk_shortcut_label_get_accelerator$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_label_set_accelerator$MH() {
        return RuntimeHelper.requireNonNull(constants$3086.const$4,"gtk_shortcut_label_set_accelerator");
    }
    /**
     * {@snippet :
     * void gtk_shortcut_label_set_accelerator(struct _GtkShortcutLabel* self, char* accelerator);
     * }
     */
    public static void gtk_shortcut_label_set_accelerator(MemorySegment self, MemorySegment accelerator) {
        var mh$ = gtk_shortcut_label_set_accelerator$MH();
        try {
            mh$.invokeExact(self, accelerator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_label_get_disabled_text$MH() {
        return RuntimeHelper.requireNonNull(constants$3086.const$5,"gtk_shortcut_label_get_disabled_text");
    }
    /**
     * {@snippet :
     * char* gtk_shortcut_label_get_disabled_text(struct _GtkShortcutLabel* self);
     * }
     */
    public static MemorySegment gtk_shortcut_label_get_disabled_text(MemorySegment self) {
        var mh$ = gtk_shortcut_label_get_disabled_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_label_set_disabled_text$MH() {
        return RuntimeHelper.requireNonNull(constants$3087.const$0,"gtk_shortcut_label_set_disabled_text");
    }
    /**
     * {@snippet :
     * void gtk_shortcut_label_set_disabled_text(struct _GtkShortcutLabel* self, char* disabled_text);
     * }
     */
    public static void gtk_shortcut_label_set_disabled_text(MemorySegment self, MemorySegment disabled_text) {
        var mh$ = gtk_shortcut_label_set_disabled_text$MH();
        try {
            mh$.invokeExact(self, disabled_text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcuts_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3087.const$1,"gtk_shortcuts_group_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_shortcuts_group_get_type();
     * }
     */
    public static long gtk_shortcuts_group_get_type() {
        var mh$ = gtk_shortcuts_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcuts_section_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3087.const$2,"gtk_shortcuts_section_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_shortcuts_section_get_type();
     * }
     */
    public static long gtk_shortcuts_section_get_type() {
        var mh$ = gtk_shortcuts_section_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkShortcutType.GTK_SHORTCUT_ACCELERATOR = 0;
     * }
     */
    public static int GTK_SHORTCUT_ACCELERATOR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkShortcutType.GTK_SHORTCUT_GESTURE_PINCH = 1;
     * }
     */
    public static int GTK_SHORTCUT_GESTURE_PINCH() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkShortcutType.GTK_SHORTCUT_GESTURE_STRETCH = 2;
     * }
     */
    public static int GTK_SHORTCUT_GESTURE_STRETCH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkShortcutType.GTK_SHORTCUT_GESTURE_ROTATE_CLOCKWISE = 3;
     * }
     */
    public static int GTK_SHORTCUT_GESTURE_ROTATE_CLOCKWISE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkShortcutType.GTK_SHORTCUT_GESTURE_ROTATE_COUNTERCLOCKWISE = 4;
     * }
     */
    public static int GTK_SHORTCUT_GESTURE_ROTATE_COUNTERCLOCKWISE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkShortcutType.GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_LEFT = 5;
     * }
     */
    public static int GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_LEFT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkShortcutType.GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_RIGHT = 6;
     * }
     */
    public static int GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_RIGHT() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GtkShortcutType.GTK_SHORTCUT_GESTURE = 7;
     * }
     */
    public static int GTK_SHORTCUT_GESTURE() {
        return (int)7L;
    }
    public static MethodHandle gtk_shortcuts_shortcut_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3087.const$3,"gtk_shortcuts_shortcut_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_shortcuts_shortcut_get_type();
     * }
     */
    public static long gtk_shortcuts_shortcut_get_type() {
        var mh$ = gtk_shortcuts_shortcut_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_show_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$3087.const$4,"gtk_show_uri");
    }
    /**
     * {@snippet :
     * int gtk_show_uri(struct _GdkScreen* screen, char* uri, unsigned int timestamp, struct _GError** error);
     * }
     */
    public static int gtk_show_uri(MemorySegment screen, MemorySegment uri, int timestamp, MemorySegment error) {
        var mh$ = gtk_show_uri$MH();
        try {
            return (int)mh$.invokeExact(screen, uri, timestamp, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_show_uri_on_window$MH() {
        return RuntimeHelper.requireNonNull(constants$3087.const$5,"gtk_show_uri_on_window");
    }
    /**
     * {@snippet :
     * int gtk_show_uri_on_window(struct _GtkWindow* parent, char* uri, unsigned int timestamp, struct _GError** error);
     * }
     */
    public static int gtk_show_uri_on_window(MemorySegment parent, MemorySegment uri, int timestamp, MemorySegment error) {
        var mh$ = gtk_show_uri_on_window$MH();
        try {
            return (int)mh$.invokeExact(parent, uri, timestamp, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_NONE = 0;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_CROSSFADE = 1;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_CROSSFADE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_SLIDE_RIGHT = 2;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_SLIDE_RIGHT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT = 3;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_SLIDE_UP = 4;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_SLIDE_UP() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_SLIDE_DOWN = 5;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_SLIDE_DOWN() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT_RIGHT = 6;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT_RIGHT() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_SLIDE_UP_DOWN = 7;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_SLIDE_UP_DOWN() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_OVER_UP = 8;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_OVER_UP() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_OVER_DOWN = 9;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_OVER_DOWN() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_OVER_LEFT = 10;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_OVER_LEFT() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_OVER_RIGHT = 11;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_OVER_RIGHT() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_UNDER_UP = 12;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_UNDER_UP() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_UNDER_DOWN = 13;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_UNDER_DOWN() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_UNDER_LEFT = 14;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_UNDER_LEFT() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_UNDER_RIGHT = 15;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_UNDER_RIGHT() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_OVER_UP_DOWN = 16;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_OVER_UP_DOWN() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_OVER_DOWN_UP = 17;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_OVER_DOWN_UP() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_OVER_LEFT_RIGHT = 18;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_OVER_LEFT_RIGHT() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType.GTK_STACK_TRANSITION_TYPE_OVER_RIGHT_LEFT = 19;
     * }
     */
    public static int GTK_STACK_TRANSITION_TYPE_OVER_RIGHT_LEFT() {
        return (int)19L;
    }
    public static MethodHandle gtk_stack_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3088.const$2,"gtk_stack_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_stack_get_type();
     * }
     */
    public static long gtk_stack_get_type() {
        var mh$ = gtk_stack_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3088.const$3,"gtk_stack_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_stack_new();
     * }
     */
    public static MemorySegment gtk_stack_new() {
        var mh$ = gtk_stack_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_add_named$MH() {
        return RuntimeHelper.requireNonNull(constants$3088.const$4,"gtk_stack_add_named");
    }
    /**
     * {@snippet :
     * void gtk_stack_add_named(struct _GtkStack* stack, struct _GtkWidget* child, char* name);
     * }
     */
    public static void gtk_stack_add_named(MemorySegment stack, MemorySegment child, MemorySegment name) {
        var mh$ = gtk_stack_add_named$MH();
        try {
            mh$.invokeExact(stack, child, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_add_titled$MH() {
        return RuntimeHelper.requireNonNull(constants$3088.const$5,"gtk_stack_add_titled");
    }
    /**
     * {@snippet :
     * void gtk_stack_add_titled(struct _GtkStack* stack, struct _GtkWidget* child, char* name, char* title);
     * }
     */
    public static void gtk_stack_add_titled(MemorySegment stack, MemorySegment child, MemorySegment name, MemorySegment title) {
        var mh$ = gtk_stack_add_titled$MH();
        try {
            mh$.invokeExact(stack, child, name, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_child_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$3089.const$0,"gtk_stack_get_child_by_name");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_stack_get_child_by_name(struct _GtkStack* stack, char* name);
     * }
     */
    public static MemorySegment gtk_stack_get_child_by_name(MemorySegment stack, MemorySegment name) {
        var mh$ = gtk_stack_get_child_by_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stack, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_visible_child$MH() {
        return RuntimeHelper.requireNonNull(constants$3089.const$1,"gtk_stack_set_visible_child");
    }
    /**
     * {@snippet :
     * void gtk_stack_set_visible_child(struct _GtkStack* stack, struct _GtkWidget* child);
     * }
     */
    public static void gtk_stack_set_visible_child(MemorySegment stack, MemorySegment child) {
        var mh$ = gtk_stack_set_visible_child$MH();
        try {
            mh$.invokeExact(stack, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_visible_child$MH() {
        return RuntimeHelper.requireNonNull(constants$3089.const$2,"gtk_stack_get_visible_child");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_stack_get_visible_child(struct _GtkStack* stack);
     * }
     */
    public static MemorySegment gtk_stack_get_visible_child(MemorySegment stack) {
        var mh$ = gtk_stack_get_visible_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_visible_child_name$MH() {
        return RuntimeHelper.requireNonNull(constants$3089.const$3,"gtk_stack_set_visible_child_name");
    }
    /**
     * {@snippet :
     * void gtk_stack_set_visible_child_name(struct _GtkStack* stack, char* name);
     * }
     */
    public static void gtk_stack_set_visible_child_name(MemorySegment stack, MemorySegment name) {
        var mh$ = gtk_stack_set_visible_child_name$MH();
        try {
            mh$.invokeExact(stack, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_visible_child_name$MH() {
        return RuntimeHelper.requireNonNull(constants$3089.const$4,"gtk_stack_get_visible_child_name");
    }
    /**
     * {@snippet :
     * char* gtk_stack_get_visible_child_name(struct _GtkStack* stack);
     * }
     */
    public static MemorySegment gtk_stack_get_visible_child_name(MemorySegment stack) {
        var mh$ = gtk_stack_get_visible_child_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_visible_child_full$MH() {
        return RuntimeHelper.requireNonNull(constants$3089.const$5,"gtk_stack_set_visible_child_full");
    }
    /**
     * {@snippet :
     * void gtk_stack_set_visible_child_full(struct _GtkStack* stack, char* name, enum GtkStackTransitionType transition);
     * }
     */
    public static void gtk_stack_set_visible_child_full(MemorySegment stack, MemorySegment name, int transition) {
        var mh$ = gtk_stack_set_visible_child_full$MH();
        try {
            mh$.invokeExact(stack, name, transition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$3090.const$0,"gtk_stack_set_homogeneous");
    }
    /**
     * {@snippet :
     * void gtk_stack_set_homogeneous(struct _GtkStack* stack, int homogeneous);
     * }
     */
    public static void gtk_stack_set_homogeneous(MemorySegment stack, int homogeneous) {
        var mh$ = gtk_stack_set_homogeneous$MH();
        try {
            mh$.invokeExact(stack, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$3090.const$1,"gtk_stack_get_homogeneous");
    }
    /**
     * {@snippet :
     * int gtk_stack_get_homogeneous(struct _GtkStack* stack);
     * }
     */
    public static int gtk_stack_get_homogeneous(MemorySegment stack) {
        var mh$ = gtk_stack_get_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_hhomogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$3090.const$2,"gtk_stack_set_hhomogeneous");
    }
    /**
     * {@snippet :
     * void gtk_stack_set_hhomogeneous(struct _GtkStack* stack, int hhomogeneous);
     * }
     */
    public static void gtk_stack_set_hhomogeneous(MemorySegment stack, int hhomogeneous) {
        var mh$ = gtk_stack_set_hhomogeneous$MH();
        try {
            mh$.invokeExact(stack, hhomogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_hhomogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$3090.const$3,"gtk_stack_get_hhomogeneous");
    }
    /**
     * {@snippet :
     * int gtk_stack_get_hhomogeneous(struct _GtkStack* stack);
     * }
     */
    public static int gtk_stack_get_hhomogeneous(MemorySegment stack) {
        var mh$ = gtk_stack_get_hhomogeneous$MH();
        try {
            return (int)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_vhomogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$3090.const$4,"gtk_stack_set_vhomogeneous");
    }
    /**
     * {@snippet :
     * void gtk_stack_set_vhomogeneous(struct _GtkStack* stack, int vhomogeneous);
     * }
     */
    public static void gtk_stack_set_vhomogeneous(MemorySegment stack, int vhomogeneous) {
        var mh$ = gtk_stack_set_vhomogeneous$MH();
        try {
            mh$.invokeExact(stack, vhomogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_vhomogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$3090.const$5,"gtk_stack_get_vhomogeneous");
    }
    /**
     * {@snippet :
     * int gtk_stack_get_vhomogeneous(struct _GtkStack* stack);
     * }
     */
    public static int gtk_stack_get_vhomogeneous(MemorySegment stack) {
        var mh$ = gtk_stack_get_vhomogeneous$MH();
        try {
            return (int)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_transition_duration$MH() {
        return RuntimeHelper.requireNonNull(constants$3091.const$0,"gtk_stack_set_transition_duration");
    }
    /**
     * {@snippet :
     * void gtk_stack_set_transition_duration(struct _GtkStack* stack, unsigned int duration);
     * }
     */
    public static void gtk_stack_set_transition_duration(MemorySegment stack, int duration) {
        var mh$ = gtk_stack_set_transition_duration$MH();
        try {
            mh$.invokeExact(stack, duration);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_transition_duration$MH() {
        return RuntimeHelper.requireNonNull(constants$3091.const$1,"gtk_stack_get_transition_duration");
    }
    /**
     * {@snippet :
     * unsigned int gtk_stack_get_transition_duration(struct _GtkStack* stack);
     * }
     */
    public static int gtk_stack_get_transition_duration(MemorySegment stack) {
        var mh$ = gtk_stack_get_transition_duration$MH();
        try {
            return (int)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_transition_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3091.const$2,"gtk_stack_set_transition_type");
    }
    /**
     * {@snippet :
     * void gtk_stack_set_transition_type(struct _GtkStack* stack, enum GtkStackTransitionType transition);
     * }
     */
    public static void gtk_stack_set_transition_type(MemorySegment stack, int transition) {
        var mh$ = gtk_stack_set_transition_type$MH();
        try {
            mh$.invokeExact(stack, transition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_transition_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3091.const$3,"gtk_stack_get_transition_type");
    }
    /**
     * {@snippet :
     * enum GtkStackTransitionType gtk_stack_get_transition_type(struct _GtkStack* stack);
     * }
     */
    public static int gtk_stack_get_transition_type(MemorySegment stack) {
        var mh$ = gtk_stack_get_transition_type$MH();
        try {
            return (int)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_transition_running$MH() {
        return RuntimeHelper.requireNonNull(constants$3091.const$4,"gtk_stack_get_transition_running");
    }
    /**
     * {@snippet :
     * int gtk_stack_get_transition_running(struct _GtkStack* stack);
     * }
     */
    public static int gtk_stack_get_transition_running(MemorySegment stack) {
        var mh$ = gtk_stack_get_transition_running$MH();
        try {
            return (int)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_interpolate_size$MH() {
        return RuntimeHelper.requireNonNull(constants$3091.const$5,"gtk_stack_set_interpolate_size");
    }
    /**
     * {@snippet :
     * void gtk_stack_set_interpolate_size(struct _GtkStack* stack, int interpolate_size);
     * }
     */
    public static void gtk_stack_set_interpolate_size(MemorySegment stack, int interpolate_size) {
        var mh$ = gtk_stack_set_interpolate_size$MH();
        try {
            mh$.invokeExact(stack, interpolate_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_interpolate_size$MH() {
        return RuntimeHelper.requireNonNull(constants$3092.const$0,"gtk_stack_get_interpolate_size");
    }
    /**
     * {@snippet :
     * int gtk_stack_get_interpolate_size(struct _GtkStack* stack);
     * }
     */
    public static int gtk_stack_get_interpolate_size(MemorySegment stack) {
        var mh$ = gtk_stack_get_interpolate_size$MH();
        try {
            return (int)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_sidebar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3093.const$5,"gtk_stack_sidebar_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_stack_sidebar_get_type();
     * }
     */
    public static long gtk_stack_sidebar_get_type() {
        var mh$ = gtk_stack_sidebar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_sidebar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3094.const$0,"gtk_stack_sidebar_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_stack_sidebar_new();
     * }
     */
    public static MemorySegment gtk_stack_sidebar_new() {
        var mh$ = gtk_stack_sidebar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_sidebar_set_stack$MH() {
        return RuntimeHelper.requireNonNull(constants$3094.const$1,"gtk_stack_sidebar_set_stack");
    }
    /**
     * {@snippet :
     * void gtk_stack_sidebar_set_stack(struct _GtkStackSidebar* sidebar, struct _GtkStack* stack);
     * }
     */
    public static void gtk_stack_sidebar_set_stack(MemorySegment sidebar, MemorySegment stack) {
        var mh$ = gtk_stack_sidebar_set_stack$MH();
        try {
            mh$.invokeExact(sidebar, stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_sidebar_get_stack$MH() {
        return RuntimeHelper.requireNonNull(constants$3094.const$2,"gtk_stack_sidebar_get_stack");
    }
    /**
     * {@snippet :
     * struct _GtkStack* gtk_stack_sidebar_get_stack(struct _GtkStackSidebar* sidebar);
     * }
     */
    public static MemorySegment gtk_stack_sidebar_get_stack(MemorySegment sidebar) {
        var mh$ = gtk_stack_sidebar_get_stack$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(sidebar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_distribute_natural_allocation$MH() {
        return RuntimeHelper.requireNonNull(constants$3095.const$1,"gtk_distribute_natural_allocation");
    }
    /**
     * {@snippet :
     * int gtk_distribute_natural_allocation(int extra_space, unsigned int n_requested_sizes, struct _GtkRequestedSize* sizes);
     * }
     */
    public static int gtk_distribute_natural_allocation(int extra_space, int n_requested_sizes, MemorySegment sizes) {
        var mh$ = gtk_distribute_natural_allocation$MH();
        try {
            return (int)mh$.invokeExact(extra_space, n_requested_sizes, sizes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkSpinButtonUpdatePolicy.GTK_UPDATE_ALWAYS = 0;
     * }
     */
    public static int GTK_UPDATE_ALWAYS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkSpinButtonUpdatePolicy.GTK_UPDATE_IF_VALID = 1;
     * }
     */
    public static int GTK_UPDATE_IF_VALID() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkSpinType.GTK_SPIN_STEP_FORWARD = 0;
     * }
     */
    public static int GTK_SPIN_STEP_FORWARD() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkSpinType.GTK_SPIN_STEP_BACKWARD = 1;
     * }
     */
    public static int GTK_SPIN_STEP_BACKWARD() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkSpinType.GTK_SPIN_PAGE_FORWARD = 2;
     * }
     */
    public static int GTK_SPIN_PAGE_FORWARD() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkSpinType.GTK_SPIN_PAGE_BACKWARD = 3;
     * }
     */
    public static int GTK_SPIN_PAGE_BACKWARD() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkSpinType.GTK_SPIN_HOME = 4;
     * }
     */
    public static int GTK_SPIN_HOME() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkSpinType.GTK_SPIN_END = 5;
     * }
     */
    public static int GTK_SPIN_END() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkSpinType.GTK_SPIN_USER_DEFINED = 6;
     * }
     */
    public static int GTK_SPIN_USER_DEFINED() {
        return (int)6L;
    }
    public static MethodHandle gtk_spin_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3098.const$5,"gtk_spin_button_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_spin_button_get_type();
     * }
     */
    public static long gtk_spin_button_get_type() {
        var mh$ = gtk_spin_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_configure$MH() {
        return RuntimeHelper.requireNonNull(constants$3099.const$0,"gtk_spin_button_configure");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_configure(struct _GtkSpinButton* spin_button, struct _GtkAdjustment* adjustment, double climb_rate, unsigned int digits);
     * }
     */
    public static void gtk_spin_button_configure(MemorySegment spin_button, MemorySegment adjustment, double climb_rate, int digits) {
        var mh$ = gtk_spin_button_configure$MH();
        try {
            mh$.invokeExact(spin_button, adjustment, climb_rate, digits);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3099.const$2,"gtk_spin_button_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_spin_button_new(struct _GtkAdjustment* adjustment, double climb_rate, unsigned int digits);
     * }
     */
    public static MemorySegment gtk_spin_button_new(MemorySegment adjustment, double climb_rate, int digits) {
        var mh$ = gtk_spin_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(adjustment, climb_rate, digits);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_new_with_range$MH() {
        return RuntimeHelper.requireNonNull(constants$3099.const$3,"gtk_spin_button_new_with_range");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_spin_button_new_with_range(double min, double max, double step);
     * }
     */
    public static MemorySegment gtk_spin_button_new_with_range(double min, double max, double step) {
        var mh$ = gtk_spin_button_new_with_range$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(min, max, step);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3099.const$4,"gtk_spin_button_set_adjustment");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_set_adjustment(struct _GtkSpinButton* spin_button, struct _GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_spin_button_set_adjustment(MemorySegment spin_button, MemorySegment adjustment) {
        var mh$ = gtk_spin_button_set_adjustment$MH();
        try {
            mh$.invokeExact(spin_button, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3099.const$5,"gtk_spin_button_get_adjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_spin_button_get_adjustment(struct _GtkSpinButton* spin_button);
     * }
     */
    public static MemorySegment gtk_spin_button_get_adjustment(MemorySegment spin_button) {
        var mh$ = gtk_spin_button_get_adjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_digits$MH() {
        return RuntimeHelper.requireNonNull(constants$3100.const$0,"gtk_spin_button_set_digits");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_set_digits(struct _GtkSpinButton* spin_button, unsigned int digits);
     * }
     */
    public static void gtk_spin_button_set_digits(MemorySegment spin_button, int digits) {
        var mh$ = gtk_spin_button_set_digits$MH();
        try {
            mh$.invokeExact(spin_button, digits);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_digits$MH() {
        return RuntimeHelper.requireNonNull(constants$3100.const$1,"gtk_spin_button_get_digits");
    }
    /**
     * {@snippet :
     * unsigned int gtk_spin_button_get_digits(struct _GtkSpinButton* spin_button);
     * }
     */
    public static int gtk_spin_button_get_digits(MemorySegment spin_button) {
        var mh$ = gtk_spin_button_get_digits$MH();
        try {
            return (int)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_increments$MH() {
        return RuntimeHelper.requireNonNull(constants$3100.const$2,"gtk_spin_button_set_increments");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_set_increments(struct _GtkSpinButton* spin_button, double step, double page);
     * }
     */
    public static void gtk_spin_button_set_increments(MemorySegment spin_button, double step, double page) {
        var mh$ = gtk_spin_button_set_increments$MH();
        try {
            mh$.invokeExact(spin_button, step, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_increments$MH() {
        return RuntimeHelper.requireNonNull(constants$3100.const$3,"gtk_spin_button_get_increments");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_get_increments(struct _GtkSpinButton* spin_button, double* step, double* page);
     * }
     */
    public static void gtk_spin_button_get_increments(MemorySegment spin_button, MemorySegment step, MemorySegment page) {
        var mh$ = gtk_spin_button_get_increments$MH();
        try {
            mh$.invokeExact(spin_button, step, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_range$MH() {
        return RuntimeHelper.requireNonNull(constants$3100.const$4,"gtk_spin_button_set_range");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_set_range(struct _GtkSpinButton* spin_button, double min, double max);
     * }
     */
    public static void gtk_spin_button_set_range(MemorySegment spin_button, double min, double max) {
        var mh$ = gtk_spin_button_set_range$MH();
        try {
            mh$.invokeExact(spin_button, min, max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_range$MH() {
        return RuntimeHelper.requireNonNull(constants$3100.const$5,"gtk_spin_button_get_range");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_get_range(struct _GtkSpinButton* spin_button, double* min, double* max);
     * }
     */
    public static void gtk_spin_button_get_range(MemorySegment spin_button, MemorySegment min, MemorySegment max) {
        var mh$ = gtk_spin_button_get_range$MH();
        try {
            mh$.invokeExact(spin_button, min, max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$3101.const$0,"gtk_spin_button_get_value");
    }
    /**
     * {@snippet :
     * double gtk_spin_button_get_value(struct _GtkSpinButton* spin_button);
     * }
     */
    public static double gtk_spin_button_get_value(MemorySegment spin_button) {
        var mh$ = gtk_spin_button_get_value$MH();
        try {
            return (double)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_value_as_int$MH() {
        return RuntimeHelper.requireNonNull(constants$3101.const$1,"gtk_spin_button_get_value_as_int");
    }
    /**
     * {@snippet :
     * int gtk_spin_button_get_value_as_int(struct _GtkSpinButton* spin_button);
     * }
     */
    public static int gtk_spin_button_get_value_as_int(MemorySegment spin_button) {
        var mh$ = gtk_spin_button_get_value_as_int$MH();
        try {
            return (int)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$3101.const$2,"gtk_spin_button_set_value");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_set_value(struct _GtkSpinButton* spin_button, double value);
     * }
     */
    public static void gtk_spin_button_set_value(MemorySegment spin_button, double value) {
        var mh$ = gtk_spin_button_set_value$MH();
        try {
            mh$.invokeExact(spin_button, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_update_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$3101.const$3,"gtk_spin_button_set_update_policy");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_set_update_policy(struct _GtkSpinButton* spin_button, enum GtkSpinButtonUpdatePolicy policy);
     * }
     */
    public static void gtk_spin_button_set_update_policy(MemorySegment spin_button, int policy) {
        var mh$ = gtk_spin_button_set_update_policy$MH();
        try {
            mh$.invokeExact(spin_button, policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_update_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$3101.const$4,"gtk_spin_button_get_update_policy");
    }
    /**
     * {@snippet :
     * enum GtkSpinButtonUpdatePolicy gtk_spin_button_get_update_policy(struct _GtkSpinButton* spin_button);
     * }
     */
    public static int gtk_spin_button_get_update_policy(MemorySegment spin_button) {
        var mh$ = gtk_spin_button_get_update_policy$MH();
        try {
            return (int)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_numeric$MH() {
        return RuntimeHelper.requireNonNull(constants$3101.const$5,"gtk_spin_button_set_numeric");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_set_numeric(struct _GtkSpinButton* spin_button, int numeric);
     * }
     */
    public static void gtk_spin_button_set_numeric(MemorySegment spin_button, int numeric) {
        var mh$ = gtk_spin_button_set_numeric$MH();
        try {
            mh$.invokeExact(spin_button, numeric);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_numeric$MH() {
        return RuntimeHelper.requireNonNull(constants$3102.const$0,"gtk_spin_button_get_numeric");
    }
    /**
     * {@snippet :
     * int gtk_spin_button_get_numeric(struct _GtkSpinButton* spin_button);
     * }
     */
    public static int gtk_spin_button_get_numeric(MemorySegment spin_button) {
        var mh$ = gtk_spin_button_get_numeric$MH();
        try {
            return (int)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_spin$MH() {
        return RuntimeHelper.requireNonNull(constants$3102.const$2,"gtk_spin_button_spin");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_spin(struct _GtkSpinButton* spin_button, enum GtkSpinType direction, double increment);
     * }
     */
    public static void gtk_spin_button_spin(MemorySegment spin_button, int direction, double increment) {
        var mh$ = gtk_spin_button_spin$MH();
        try {
            mh$.invokeExact(spin_button, direction, increment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_wrap$MH() {
        return RuntimeHelper.requireNonNull(constants$3102.const$3,"gtk_spin_button_set_wrap");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_set_wrap(struct _GtkSpinButton* spin_button, int wrap);
     * }
     */
    public static void gtk_spin_button_set_wrap(MemorySegment spin_button, int wrap) {
        var mh$ = gtk_spin_button_set_wrap$MH();
        try {
            mh$.invokeExact(spin_button, wrap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_wrap$MH() {
        return RuntimeHelper.requireNonNull(constants$3102.const$4,"gtk_spin_button_get_wrap");
    }
    /**
     * {@snippet :
     * int gtk_spin_button_get_wrap(struct _GtkSpinButton* spin_button);
     * }
     */
    public static int gtk_spin_button_get_wrap(MemorySegment spin_button) {
        var mh$ = gtk_spin_button_get_wrap$MH();
        try {
            return (int)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_snap_to_ticks$MH() {
        return RuntimeHelper.requireNonNull(constants$3102.const$5,"gtk_spin_button_set_snap_to_ticks");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_set_snap_to_ticks(struct _GtkSpinButton* spin_button, int snap_to_ticks);
     * }
     */
    public static void gtk_spin_button_set_snap_to_ticks(MemorySegment spin_button, int snap_to_ticks) {
        var mh$ = gtk_spin_button_set_snap_to_ticks$MH();
        try {
            mh$.invokeExact(spin_button, snap_to_ticks);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_snap_to_ticks$MH() {
        return RuntimeHelper.requireNonNull(constants$3103.const$0,"gtk_spin_button_get_snap_to_ticks");
    }
    /**
     * {@snippet :
     * int gtk_spin_button_get_snap_to_ticks(struct _GtkSpinButton* spin_button);
     * }
     */
    public static int gtk_spin_button_get_snap_to_ticks(MemorySegment spin_button) {
        var mh$ = gtk_spin_button_get_snap_to_ticks$MH();
        try {
            return (int)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_update$MH() {
        return RuntimeHelper.requireNonNull(constants$3103.const$1,"gtk_spin_button_update");
    }
    /**
     * {@snippet :
     * void gtk_spin_button_update(struct _GtkSpinButton* spin_button);
     * }
     */
    public static void gtk_spin_button_update(MemorySegment spin_button) {
        var mh$ = gtk_spin_button_update$MH();
        try {
            mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_spin_button_get_panels$MH() {
        return RuntimeHelper.requireNonNull(constants$3103.const$2,"_gtk_spin_button_get_panels");
    }
    /**
     * {@snippet :
     * void _gtk_spin_button_get_panels(struct _GtkSpinButton* spin_button, struct _GdkWindow** down_panel, struct _GdkWindow** up_panel);
     * }
     */
    public static void _gtk_spin_button_get_panels(MemorySegment spin_button, MemorySegment down_panel, MemorySegment up_panel) {
        var mh$ = _gtk_spin_button_get_panels$MH();
        try {
            mh$.invokeExact(spin_button, down_panel, up_panel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spinner_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3105.const$2,"gtk_spinner_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_spinner_get_type();
     * }
     */
    public static long gtk_spinner_get_type() {
        var mh$ = gtk_spinner_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spinner_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3105.const$3,"gtk_spinner_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_spinner_new();
     * }
     */
    public static MemorySegment gtk_spinner_new() {
        var mh$ = gtk_spinner_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spinner_start$MH() {
        return RuntimeHelper.requireNonNull(constants$3105.const$4,"gtk_spinner_start");
    }
    /**
     * {@snippet :
     * void gtk_spinner_start(struct _GtkSpinner* spinner);
     * }
     */
    public static void gtk_spinner_start(MemorySegment spinner) {
        var mh$ = gtk_spinner_start$MH();
        try {
            mh$.invokeExact(spinner);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spinner_stop$MH() {
        return RuntimeHelper.requireNonNull(constants$3105.const$5,"gtk_spinner_stop");
    }
    /**
     * {@snippet :
     * void gtk_spinner_stop(struct _GtkSpinner* spinner);
     * }
     */
    public static void gtk_spinner_stop(MemorySegment spinner) {
        var mh$ = gtk_spinner_stop$MH();
        try {
            mh$.invokeExact(spinner);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_switcher_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3107.const$4,"gtk_stack_switcher_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_stack_switcher_get_type();
     * }
     */
    public static long gtk_stack_switcher_get_type() {
        var mh$ = gtk_stack_switcher_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_switcher_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3107.const$5,"gtk_stack_switcher_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_stack_switcher_new();
     * }
     */
    public static MemorySegment gtk_stack_switcher_new() {
        var mh$ = gtk_stack_switcher_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_switcher_set_stack$MH() {
        return RuntimeHelper.requireNonNull(constants$3108.const$0,"gtk_stack_switcher_set_stack");
    }
    /**
     * {@snippet :
     * void gtk_stack_switcher_set_stack(struct _GtkStackSwitcher* switcher, struct _GtkStack* stack);
     * }
     */
    public static void gtk_stack_switcher_set_stack(MemorySegment switcher, MemorySegment stack) {
        var mh$ = gtk_stack_switcher_set_stack$MH();
        try {
            mh$.invokeExact(switcher, stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_switcher_get_stack$MH() {
        return RuntimeHelper.requireNonNull(constants$3108.const$1,"gtk_stack_switcher_get_stack");
    }
    /**
     * {@snippet :
     * struct _GtkStack* gtk_stack_switcher_get_stack(struct _GtkStackSwitcher* switcher);
     * }
     */
    public static MemorySegment gtk_stack_switcher_get_stack(MemorySegment switcher) {
        var mh$ = gtk_stack_switcher_get_stack$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(switcher);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3111.const$0,"gtk_statusbar_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_statusbar_get_type();
     * }
     */
    public static long gtk_statusbar_get_type() {
        var mh$ = gtk_statusbar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3111.const$1,"gtk_statusbar_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_statusbar_new();
     * }
     */
    public static MemorySegment gtk_statusbar_new() {
        var mh$ = gtk_statusbar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_get_context_id$MH() {
        return RuntimeHelper.requireNonNull(constants$3111.const$2,"gtk_statusbar_get_context_id");
    }
    /**
     * {@snippet :
     * unsigned int gtk_statusbar_get_context_id(struct _GtkStatusbar* statusbar, char* context_description);
     * }
     */
    public static int gtk_statusbar_get_context_id(MemorySegment statusbar, MemorySegment context_description) {
        var mh$ = gtk_statusbar_get_context_id$MH();
        try {
            return (int)mh$.invokeExact(statusbar, context_description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_push$MH() {
        return RuntimeHelper.requireNonNull(constants$3111.const$3,"gtk_statusbar_push");
    }
    /**
     * {@snippet :
     * unsigned int gtk_statusbar_push(struct _GtkStatusbar* statusbar, unsigned int context_id, char* text);
     * }
     */
    public static int gtk_statusbar_push(MemorySegment statusbar, int context_id, MemorySegment text) {
        var mh$ = gtk_statusbar_push$MH();
        try {
            return (int)mh$.invokeExact(statusbar, context_id, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$3111.const$4,"gtk_statusbar_pop");
    }
    /**
     * {@snippet :
     * void gtk_statusbar_pop(struct _GtkStatusbar* statusbar, unsigned int context_id);
     * }
     */
    public static void gtk_statusbar_pop(MemorySegment statusbar, int context_id) {
        var mh$ = gtk_statusbar_pop$MH();
        try {
            mh$.invokeExact(statusbar, context_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$3111.const$5,"gtk_statusbar_remove");
    }
    /**
     * {@snippet :
     * void gtk_statusbar_remove(struct _GtkStatusbar* statusbar, unsigned int context_id, unsigned int message_id);
     * }
     */
    public static void gtk_statusbar_remove(MemorySegment statusbar, int context_id, int message_id) {
        var mh$ = gtk_statusbar_remove$MH();
        try {
            mh$.invokeExact(statusbar, context_id, message_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_remove_all$MH() {
        return RuntimeHelper.requireNonNull(constants$3112.const$0,"gtk_statusbar_remove_all");
    }
    /**
     * {@snippet :
     * void gtk_statusbar_remove_all(struct _GtkStatusbar* statusbar, unsigned int context_id);
     * }
     */
    public static void gtk_statusbar_remove_all(MemorySegment statusbar, int context_id) {
        var mh$ = gtk_statusbar_remove_all$MH();
        try {
            mh$.invokeExact(statusbar, context_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_get_message_area$MH() {
        return RuntimeHelper.requireNonNull(constants$3112.const$1,"gtk_statusbar_get_message_area");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_statusbar_get_message_area(struct _GtkStatusbar* statusbar);
     * }
     */
    public static MemorySegment gtk_statusbar_get_message_area(MemorySegment statusbar) {
        var mh$ = gtk_statusbar_get_message_area$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(statusbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_switch_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3115.const$1,"gtk_switch_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_switch_get_type();
     * }
     */
    public static long gtk_switch_get_type() {
        var mh$ = gtk_switch_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_switch_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3115.const$2,"gtk_switch_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_switch_new();
     * }
     */
    public static MemorySegment gtk_switch_new() {
        var mh$ = gtk_switch_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_switch_set_active$MH() {
        return RuntimeHelper.requireNonNull(constants$3115.const$3,"gtk_switch_set_active");
    }
    /**
     * {@snippet :
     * void gtk_switch_set_active(struct _GtkSwitch* sw, int is_active);
     * }
     */
    public static void gtk_switch_set_active(MemorySegment sw, int is_active) {
        var mh$ = gtk_switch_set_active$MH();
        try {
            mh$.invokeExact(sw, is_active);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_switch_get_active$MH() {
        return RuntimeHelper.requireNonNull(constants$3115.const$4,"gtk_switch_get_active");
    }
    /**
     * {@snippet :
     * int gtk_switch_get_active(struct _GtkSwitch* sw);
     * }
     */
    public static int gtk_switch_get_active(MemorySegment sw) {
        var mh$ = gtk_switch_get_active$MH();
        try {
            return (int)mh$.invokeExact(sw);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_switch_set_state$MH() {
        return RuntimeHelper.requireNonNull(constants$3115.const$5,"gtk_switch_set_state");
    }
    /**
     * {@snippet :
     * void gtk_switch_set_state(struct _GtkSwitch* sw, int state);
     * }
     */
    public static void gtk_switch_set_state(MemorySegment sw, int state) {
        var mh$ = gtk_switch_set_state$MH();
        try {
            mh$.invokeExact(sw, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_switch_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$3116.const$0,"gtk_switch_get_state");
    }
    /**
     * {@snippet :
     * int gtk_switch_get_state(struct _GtkSwitch* sw);
     * }
     */
    public static int gtk_switch_get_state(MemorySegment sw) {
        var mh$ = gtk_switch_get_state$MH();
        try {
            return (int)mh$.invokeExact(sw);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3119.const$1,"gtk_text_tag_table_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_text_tag_table_get_type();
     * }
     */
    public static long gtk_text_tag_table_get_type() {
        var mh$ = gtk_text_tag_table_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3119.const$2,"gtk_text_tag_table_new");
    }
    /**
     * {@snippet :
     * struct _GtkTextTagTable* gtk_text_tag_table_new();
     * }
     */
    public static MemorySegment gtk_text_tag_table_new() {
        var mh$ = gtk_text_tag_table_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_add$MH() {
        return RuntimeHelper.requireNonNull(constants$3119.const$3,"gtk_text_tag_table_add");
    }
    /**
     * {@snippet :
     * int gtk_text_tag_table_add(struct _GtkTextTagTable* table, struct _GtkTextTag* tag);
     * }
     */
    public static int gtk_text_tag_table_add(MemorySegment table, MemorySegment tag) {
        var mh$ = gtk_text_tag_table_add$MH();
        try {
            return (int)mh$.invokeExact(table, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$3119.const$4,"gtk_text_tag_table_remove");
    }
    /**
     * {@snippet :
     * void gtk_text_tag_table_remove(struct _GtkTextTagTable* table, struct _GtkTextTag* tag);
     * }
     */
    public static void gtk_text_tag_table_remove(MemorySegment table, MemorySegment tag) {
        var mh$ = gtk_text_tag_table_remove$MH();
        try {
            mh$.invokeExact(table, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$3119.const$5,"gtk_text_tag_table_lookup");
    }
    /**
     * {@snippet :
     * struct _GtkTextTag* gtk_text_tag_table_lookup(struct _GtkTextTagTable* table, char* name);
     * }
     */
    public static MemorySegment gtk_text_tag_table_lookup(MemorySegment table, MemorySegment name) {
        var mh$ = gtk_text_tag_table_lookup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(table, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$3120.const$1,"gtk_text_tag_table_foreach");
    }
    /**
     * {@snippet :
     * void gtk_text_tag_table_foreach(struct _GtkTextTagTable* table, void (*func)(struct _GtkTextTag*,void*), void* data);
     * }
     */
    public static void gtk_text_tag_table_foreach(MemorySegment table, MemorySegment func, MemorySegment data) {
        var mh$ = gtk_text_tag_table_foreach$MH();
        try {
            mh$.invokeExact(table, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$3120.const$2,"gtk_text_tag_table_get_size");
    }
    /**
     * {@snippet :
     * int gtk_text_tag_table_get_size(struct _GtkTextTagTable* table);
     * }
     */
    public static int gtk_text_tag_table_get_size(MemorySegment table) {
        var mh$ = gtk_text_tag_table_get_size$MH();
        try {
            return (int)mh$.invokeExact(table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3122.const$2,"gtk_text_mark_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_text_mark_get_type();
     * }
     */
    public static long gtk_text_mark_get_type() {
        var mh$ = gtk_text_mark_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3122.const$3,"gtk_text_mark_new");
    }
    /**
     * {@snippet :
     * struct _GtkTextMark* gtk_text_mark_new(char* name, int left_gravity);
     * }
     */
    public static MemorySegment gtk_text_mark_new(MemorySegment name, int left_gravity) {
        var mh$ = gtk_text_mark_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, left_gravity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_set_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$3122.const$4,"gtk_text_mark_set_visible");
    }
    /**
     * {@snippet :
     * void gtk_text_mark_set_visible(struct _GtkTextMark* mark, int setting);
     * }
     */
    public static void gtk_text_mark_set_visible(MemorySegment mark, int setting) {
        var mh$ = gtk_text_mark_set_visible$MH();
        try {
            mh$.invokeExact(mark, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_get_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$3122.const$5,"gtk_text_mark_get_visible");
    }
    /**
     * {@snippet :
     * int gtk_text_mark_get_visible(struct _GtkTextMark* mark);
     * }
     */
    public static int gtk_text_mark_get_visible(MemorySegment mark) {
        var mh$ = gtk_text_mark_get_visible$MH();
        try {
            return (int)mh$.invokeExact(mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$3123.const$0,"gtk_text_mark_get_name");
    }
    /**
     * {@snippet :
     * char* gtk_text_mark_get_name(struct _GtkTextMark* mark);
     * }
     */
    public static MemorySegment gtk_text_mark_get_name(MemorySegment mark) {
        var mh$ = gtk_text_mark_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_get_deleted$MH() {
        return RuntimeHelper.requireNonNull(constants$3123.const$1,"gtk_text_mark_get_deleted");
    }
    /**
     * {@snippet :
     * int gtk_text_mark_get_deleted(struct _GtkTextMark* mark);
     * }
     */
    public static int gtk_text_mark_get_deleted(MemorySegment mark) {
        var mh$ = gtk_text_mark_get_deleted$MH();
        try {
            return (int)mh$.invokeExact(mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_get_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$3123.const$2,"gtk_text_mark_get_buffer");
    }
    /**
     * {@snippet :
     * struct _GtkTextBuffer* gtk_text_mark_get_buffer(struct _GtkTextMark* mark);
     * }
     */
    public static MemorySegment gtk_text_mark_get_buffer(MemorySegment mark) {
        var mh$ = gtk_text_mark_get_buffer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_get_left_gravity$MH() {
        return RuntimeHelper.requireNonNull(constants$3123.const$3,"gtk_text_mark_get_left_gravity");
    }
    /**
     * {@snippet :
     * int gtk_text_mark_get_left_gravity(struct _GtkTextMark* mark);
     * }
     */
    public static int gtk_text_mark_get_left_gravity(MemorySegment mark) {
        var mh$ = gtk_text_mark_get_left_gravity$MH();
        try {
            return (int)mh$.invokeExact(mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkTextBufferTargetInfo.GTK_TEXT_BUFFER_TARGET_INFO_BUFFER_CONTENTS = -1;
     * }
     */
    public static int GTK_TEXT_BUFFER_TARGET_INFO_BUFFER_CONTENTS() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * enum GtkTextBufferTargetInfo.GTK_TEXT_BUFFER_TARGET_INFO_RICH_TEXT = -2;
     * }
     */
    public static int GTK_TEXT_BUFFER_TARGET_INFO_RICH_TEXT() {
        return (int)-2L;
    }
    /**
     * {@snippet :
     * enum GtkTextBufferTargetInfo.GTK_TEXT_BUFFER_TARGET_INFO_TEXT = -3;
     * }
     */
    public static int GTK_TEXT_BUFFER_TARGET_INFO_TEXT() {
        return (int)-3L;
    }
    public static MethodHandle gtk_text_buffer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3129.const$5,"gtk_text_buffer_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_text_buffer_get_type();
     * }
     */
    public static long gtk_text_buffer_get_type() {
        var mh$ = gtk_text_buffer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3130.const$0,"gtk_text_buffer_new");
    }
    /**
     * {@snippet :
     * struct _GtkTextBuffer* gtk_text_buffer_new(struct _GtkTextTagTable* table);
     * }
     */
    public static MemorySegment gtk_text_buffer_new(MemorySegment table) {
        var mh$ = gtk_text_buffer_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_line_count$MH() {
        return RuntimeHelper.requireNonNull(constants$3130.const$1,"gtk_text_buffer_get_line_count");
    }
    /**
     * {@snippet :
     * int gtk_text_buffer_get_line_count(struct _GtkTextBuffer* buffer);
     * }
     */
    public static int gtk_text_buffer_get_line_count(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_line_count$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_char_count$MH() {
        return RuntimeHelper.requireNonNull(constants$3130.const$2,"gtk_text_buffer_get_char_count");
    }
    /**
     * {@snippet :
     * int gtk_text_buffer_get_char_count(struct _GtkTextBuffer* buffer);
     * }
     */
    public static int gtk_text_buffer_get_char_count(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_char_count$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_tag_table$MH() {
        return RuntimeHelper.requireNonNull(constants$3130.const$3,"gtk_text_buffer_get_tag_table");
    }
    /**
     * {@snippet :
     * struct _GtkTextTagTable* gtk_text_buffer_get_tag_table(struct _GtkTextBuffer* buffer);
     * }
     */
    public static MemorySegment gtk_text_buffer_get_tag_table(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_tag_table$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$3130.const$4,"gtk_text_buffer_set_text");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_set_text(struct _GtkTextBuffer* buffer, char* text, int len);
     * }
     */
    public static void gtk_text_buffer_set_text(MemorySegment buffer, MemorySegment text, int len) {
        var mh$ = gtk_text_buffer_set_text$MH();
        try {
            mh$.invokeExact(buffer, text, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$3130.const$5,"gtk_text_buffer_insert");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_insert(struct _GtkTextBuffer* buffer, struct _GtkTextIter* iter, char* text, int len);
     * }
     */
    public static void gtk_text_buffer_insert(MemorySegment buffer, MemorySegment iter, MemorySegment text, int len) {
        var mh$ = gtk_text_buffer_insert$MH();
        try {
            mh$.invokeExact(buffer, iter, text, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_at_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$3131.const$0,"gtk_text_buffer_insert_at_cursor");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_insert_at_cursor(struct _GtkTextBuffer* buffer, char* text, int len);
     * }
     */
    public static void gtk_text_buffer_insert_at_cursor(MemorySegment buffer, MemorySegment text, int len) {
        var mh$ = gtk_text_buffer_insert_at_cursor$MH();
        try {
            mh$.invokeExact(buffer, text, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_interactive$MH() {
        return RuntimeHelper.requireNonNull(constants$3131.const$1,"gtk_text_buffer_insert_interactive");
    }
    /**
     * {@snippet :
     * int gtk_text_buffer_insert_interactive(struct _GtkTextBuffer* buffer, struct _GtkTextIter* iter, char* text, int len, int default_editable);
     * }
     */
    public static int gtk_text_buffer_insert_interactive(MemorySegment buffer, MemorySegment iter, MemorySegment text, int len, int default_editable) {
        var mh$ = gtk_text_buffer_insert_interactive$MH();
        try {
            return (int)mh$.invokeExact(buffer, iter, text, len, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_interactive_at_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$3131.const$2,"gtk_text_buffer_insert_interactive_at_cursor");
    }
    /**
     * {@snippet :
     * int gtk_text_buffer_insert_interactive_at_cursor(struct _GtkTextBuffer* buffer, char* text, int len, int default_editable);
     * }
     */
    public static int gtk_text_buffer_insert_interactive_at_cursor(MemorySegment buffer, MemorySegment text, int len, int default_editable) {
        var mh$ = gtk_text_buffer_insert_interactive_at_cursor$MH();
        try {
            return (int)mh$.invokeExact(buffer, text, len, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_range$MH() {
        return RuntimeHelper.requireNonNull(constants$3131.const$3,"gtk_text_buffer_insert_range");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_insert_range(struct _GtkTextBuffer* buffer, struct _GtkTextIter* iter, struct _GtkTextIter* start, struct _GtkTextIter* end);
     * }
     */
    public static void gtk_text_buffer_insert_range(MemorySegment buffer, MemorySegment iter, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_buffer_insert_range$MH();
        try {
            mh$.invokeExact(buffer, iter, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_range_interactive$MH() {
        return RuntimeHelper.requireNonNull(constants$3131.const$4,"gtk_text_buffer_insert_range_interactive");
    }
    /**
     * {@snippet :
     * int gtk_text_buffer_insert_range_interactive(struct _GtkTextBuffer* buffer, struct _GtkTextIter* iter, struct _GtkTextIter* start, struct _GtkTextIter* end, int default_editable);
     * }
     */
    public static int gtk_text_buffer_insert_range_interactive(MemorySegment buffer, MemorySegment iter, MemorySegment start, MemorySegment end, int default_editable) {
        var mh$ = gtk_text_buffer_insert_range_interactive$MH();
        try {
            return (int)mh$.invokeExact(buffer, iter, start, end, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_with_tags$MH() {
        return RuntimeHelper.requireNonNull(constants$3131.const$5,"gtk_text_buffer_insert_with_tags");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_insert_with_tags(struct _GtkTextBuffer* buffer, struct _GtkTextIter* iter, char* text, int len, struct _GtkTextTag* first_tag,...);
     * }
     */
    public static void gtk_text_buffer_insert_with_tags(MemorySegment buffer, MemorySegment iter, MemorySegment text, int len, MemorySegment first_tag, Object... x5) {
        var mh$ = gtk_text_buffer_insert_with_tags$MH();
        try {
            mh$.invokeExact(buffer, iter, text, len, first_tag, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_with_tags_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$3132.const$0,"gtk_text_buffer_insert_with_tags_by_name");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_insert_with_tags_by_name(struct _GtkTextBuffer* buffer, struct _GtkTextIter* iter, char* text, int len, char* first_tag_name,...);
     * }
     */
    public static void gtk_text_buffer_insert_with_tags_by_name(MemorySegment buffer, MemorySegment iter, MemorySegment text, int len, MemorySegment first_tag_name, Object... x5) {
        var mh$ = gtk_text_buffer_insert_with_tags_by_name$MH();
        try {
            mh$.invokeExact(buffer, iter, text, len, first_tag_name, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$3132.const$1,"gtk_text_buffer_insert_markup");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_insert_markup(struct _GtkTextBuffer* buffer, struct _GtkTextIter* iter, char* markup, int len);
     * }
     */
    public static void gtk_text_buffer_insert_markup(MemorySegment buffer, MemorySegment iter, MemorySegment markup, int len) {
        var mh$ = gtk_text_buffer_insert_markup$MH();
        try {
            mh$.invokeExact(buffer, iter, markup, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$3132.const$2,"gtk_text_buffer_delete");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_delete(struct _GtkTextBuffer* buffer, struct _GtkTextIter* start, struct _GtkTextIter* end);
     * }
     */
    public static void gtk_text_buffer_delete(MemorySegment buffer, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_buffer_delete$MH();
        try {
            mh$.invokeExact(buffer, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_delete_interactive$MH() {
        return RuntimeHelper.requireNonNull(constants$3132.const$3,"gtk_text_buffer_delete_interactive");
    }
    /**
     * {@snippet :
     * int gtk_text_buffer_delete_interactive(struct _GtkTextBuffer* buffer, struct _GtkTextIter* start_iter, struct _GtkTextIter* end_iter, int default_editable);
     * }
     */
    public static int gtk_text_buffer_delete_interactive(MemorySegment buffer, MemorySegment start_iter, MemorySegment end_iter, int default_editable) {
        var mh$ = gtk_text_buffer_delete_interactive$MH();
        try {
            return (int)mh$.invokeExact(buffer, start_iter, end_iter, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_backspace$MH() {
        return RuntimeHelper.requireNonNull(constants$3132.const$4,"gtk_text_buffer_backspace");
    }
    /**
     * {@snippet :
     * int gtk_text_buffer_backspace(struct _GtkTextBuffer* buffer, struct _GtkTextIter* iter, int interactive, int default_editable);
     * }
     */
    public static int gtk_text_buffer_backspace(MemorySegment buffer, MemorySegment iter, int interactive, int default_editable) {
        var mh$ = gtk_text_buffer_backspace$MH();
        try {
            return (int)mh$.invokeExact(buffer, iter, interactive, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$3132.const$5,"gtk_text_buffer_get_text");
    }
    /**
     * {@snippet :
     * char* gtk_text_buffer_get_text(struct _GtkTextBuffer* buffer, struct _GtkTextIter* start, struct _GtkTextIter* end, int include_hidden_chars);
     * }
     */
    public static MemorySegment gtk_text_buffer_get_text(MemorySegment buffer, MemorySegment start, MemorySegment end, int include_hidden_chars) {
        var mh$ = gtk_text_buffer_get_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, start, end, include_hidden_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_slice$MH() {
        return RuntimeHelper.requireNonNull(constants$3133.const$0,"gtk_text_buffer_get_slice");
    }
    /**
     * {@snippet :
     * char* gtk_text_buffer_get_slice(struct _GtkTextBuffer* buffer, struct _GtkTextIter* start, struct _GtkTextIter* end, int include_hidden_chars);
     * }
     */
    public static MemorySegment gtk_text_buffer_get_slice(MemorySegment buffer, MemorySegment start, MemorySegment end, int include_hidden_chars) {
        var mh$ = gtk_text_buffer_get_slice$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, start, end, include_hidden_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$3133.const$1,"gtk_text_buffer_insert_pixbuf");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_insert_pixbuf(struct _GtkTextBuffer* buffer, struct _GtkTextIter* iter, struct _GdkPixbuf* pixbuf);
     * }
     */
    public static void gtk_text_buffer_insert_pixbuf(MemorySegment buffer, MemorySegment iter, MemorySegment pixbuf) {
        var mh$ = gtk_text_buffer_insert_pixbuf$MH();
        try {
            mh$.invokeExact(buffer, iter, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_child_anchor$MH() {
        return RuntimeHelper.requireNonNull(constants$3133.const$2,"gtk_text_buffer_insert_child_anchor");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_insert_child_anchor(struct _GtkTextBuffer* buffer, struct _GtkTextIter* iter, struct _GtkTextChildAnchor* anchor);
     * }
     */
    public static void gtk_text_buffer_insert_child_anchor(MemorySegment buffer, MemorySegment iter, MemorySegment anchor) {
        var mh$ = gtk_text_buffer_insert_child_anchor$MH();
        try {
            mh$.invokeExact(buffer, iter, anchor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_create_child_anchor$MH() {
        return RuntimeHelper.requireNonNull(constants$3133.const$3,"gtk_text_buffer_create_child_anchor");
    }
    /**
     * {@snippet :
     * struct _GtkTextChildAnchor* gtk_text_buffer_create_child_anchor(struct _GtkTextBuffer* buffer, struct _GtkTextIter* iter);
     * }
     */
    public static MemorySegment gtk_text_buffer_create_child_anchor(MemorySegment buffer, MemorySegment iter) {
        var mh$ = gtk_text_buffer_create_child_anchor$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_add_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$3133.const$4,"gtk_text_buffer_add_mark");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_add_mark(struct _GtkTextBuffer* buffer, struct _GtkTextMark* mark, struct _GtkTextIter* where);
     * }
     */
    public static void gtk_text_buffer_add_mark(MemorySegment buffer, MemorySegment mark, MemorySegment where) {
        var mh$ = gtk_text_buffer_add_mark$MH();
        try {
            mh$.invokeExact(buffer, mark, where);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_create_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$3133.const$5,"gtk_text_buffer_create_mark");
    }
    /**
     * {@snippet :
     * struct _GtkTextMark* gtk_text_buffer_create_mark(struct _GtkTextBuffer* buffer, char* mark_name, struct _GtkTextIter* where, int left_gravity);
     * }
     */
    public static MemorySegment gtk_text_buffer_create_mark(MemorySegment buffer, MemorySegment mark_name, MemorySegment where, int left_gravity) {
        var mh$ = gtk_text_buffer_create_mark$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, mark_name, where, left_gravity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_move_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$3134.const$0,"gtk_text_buffer_move_mark");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_move_mark(struct _GtkTextBuffer* buffer, struct _GtkTextMark* mark, struct _GtkTextIter* where);
     * }
     */
    public static void gtk_text_buffer_move_mark(MemorySegment buffer, MemorySegment mark, MemorySegment where) {
        var mh$ = gtk_text_buffer_move_mark$MH();
        try {
            mh$.invokeExact(buffer, mark, where);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_delete_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$3134.const$1,"gtk_text_buffer_delete_mark");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_delete_mark(struct _GtkTextBuffer* buffer, struct _GtkTextMark* mark);
     * }
     */
    public static void gtk_text_buffer_delete_mark(MemorySegment buffer, MemorySegment mark) {
        var mh$ = gtk_text_buffer_delete_mark$MH();
        try {
            mh$.invokeExact(buffer, mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$3134.const$2,"gtk_text_buffer_get_mark");
    }
    /**
     * {@snippet :
     * struct _GtkTextMark* gtk_text_buffer_get_mark(struct _GtkTextBuffer* buffer, char* name);
     * }
     */
    public static MemorySegment gtk_text_buffer_get_mark(MemorySegment buffer, MemorySegment name) {
        var mh$ = gtk_text_buffer_get_mark$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_move_mark_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$3134.const$3,"gtk_text_buffer_move_mark_by_name");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_move_mark_by_name(struct _GtkTextBuffer* buffer, char* name, struct _GtkTextIter* where);
     * }
     */
    public static void gtk_text_buffer_move_mark_by_name(MemorySegment buffer, MemorySegment name, MemorySegment where) {
        var mh$ = gtk_text_buffer_move_mark_by_name$MH();
        try {
            mh$.invokeExact(buffer, name, where);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_delete_mark_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$3134.const$4,"gtk_text_buffer_delete_mark_by_name");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_delete_mark_by_name(struct _GtkTextBuffer* buffer, char* name);
     * }
     */
    public static void gtk_text_buffer_delete_mark_by_name(MemorySegment buffer, MemorySegment name) {
        var mh$ = gtk_text_buffer_delete_mark_by_name$MH();
        try {
            mh$.invokeExact(buffer, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$3134.const$5,"gtk_text_buffer_get_insert");
    }
    /**
     * {@snippet :
     * struct _GtkTextMark* gtk_text_buffer_get_insert(struct _GtkTextBuffer* buffer);
     * }
     */
    public static MemorySegment gtk_text_buffer_get_insert(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_insert$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_selection_bound$MH() {
        return RuntimeHelper.requireNonNull(constants$3135.const$0,"gtk_text_buffer_get_selection_bound");
    }
    /**
     * {@snippet :
     * struct _GtkTextMark* gtk_text_buffer_get_selection_bound(struct _GtkTextBuffer* buffer);
     * }
     */
    public static MemorySegment gtk_text_buffer_get_selection_bound(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_selection_bound$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_place_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$3135.const$1,"gtk_text_buffer_place_cursor");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_place_cursor(struct _GtkTextBuffer* buffer, struct _GtkTextIter* where);
     * }
     */
    public static void gtk_text_buffer_place_cursor(MemorySegment buffer, MemorySegment where) {
        var mh$ = gtk_text_buffer_place_cursor$MH();
        try {
            mh$.invokeExact(buffer, where);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_select_range$MH() {
        return RuntimeHelper.requireNonNull(constants$3135.const$2,"gtk_text_buffer_select_range");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_select_range(struct _GtkTextBuffer* buffer, struct _GtkTextIter* ins, struct _GtkTextIter* bound);
     * }
     */
    public static void gtk_text_buffer_select_range(MemorySegment buffer, MemorySegment ins, MemorySegment bound) {
        var mh$ = gtk_text_buffer_select_range$MH();
        try {
            mh$.invokeExact(buffer, ins, bound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_apply_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$3135.const$3,"gtk_text_buffer_apply_tag");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_apply_tag(struct _GtkTextBuffer* buffer, struct _GtkTextTag* tag, struct _GtkTextIter* start, struct _GtkTextIter* end);
     * }
     */
    public static void gtk_text_buffer_apply_tag(MemorySegment buffer, MemorySegment tag, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_buffer_apply_tag$MH();
        try {
            mh$.invokeExact(buffer, tag, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_remove_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$3135.const$4,"gtk_text_buffer_remove_tag");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_remove_tag(struct _GtkTextBuffer* buffer, struct _GtkTextTag* tag, struct _GtkTextIter* start, struct _GtkTextIter* end);
     * }
     */
    public static void gtk_text_buffer_remove_tag(MemorySegment buffer, MemorySegment tag, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_buffer_remove_tag$MH();
        try {
            mh$.invokeExact(buffer, tag, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_apply_tag_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$3135.const$5,"gtk_text_buffer_apply_tag_by_name");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_apply_tag_by_name(struct _GtkTextBuffer* buffer, char* name, struct _GtkTextIter* start, struct _GtkTextIter* end);
     * }
     */
    public static void gtk_text_buffer_apply_tag_by_name(MemorySegment buffer, MemorySegment name, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_buffer_apply_tag_by_name$MH();
        try {
            mh$.invokeExact(buffer, name, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_remove_tag_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$3136.const$0,"gtk_text_buffer_remove_tag_by_name");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_remove_tag_by_name(struct _GtkTextBuffer* buffer, char* name, struct _GtkTextIter* start, struct _GtkTextIter* end);
     * }
     */
    public static void gtk_text_buffer_remove_tag_by_name(MemorySegment buffer, MemorySegment name, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_buffer_remove_tag_by_name$MH();
        try {
            mh$.invokeExact(buffer, name, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_remove_all_tags$MH() {
        return RuntimeHelper.requireNonNull(constants$3136.const$1,"gtk_text_buffer_remove_all_tags");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_remove_all_tags(struct _GtkTextBuffer* buffer, struct _GtkTextIter* start, struct _GtkTextIter* end);
     * }
     */
    public static void gtk_text_buffer_remove_all_tags(MemorySegment buffer, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_buffer_remove_all_tags$MH();
        try {
            mh$.invokeExact(buffer, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_create_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$3136.const$2,"gtk_text_buffer_create_tag");
    }
    /**
     * {@snippet :
     * struct _GtkTextTag* gtk_text_buffer_create_tag(struct _GtkTextBuffer* buffer, char* tag_name, char* first_property_name,...);
     * }
     */
    public static MemorySegment gtk_text_buffer_create_tag(MemorySegment buffer, MemorySegment tag_name, MemorySegment first_property_name, Object... x3) {
        var mh$ = gtk_text_buffer_create_tag$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, tag_name, first_property_name, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_iter_at_line_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$3136.const$3,"gtk_text_buffer_get_iter_at_line_offset");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_get_iter_at_line_offset(struct _GtkTextBuffer* buffer, struct _GtkTextIter* iter, int line_number, int char_offset);
     * }
     */
    public static void gtk_text_buffer_get_iter_at_line_offset(MemorySegment buffer, MemorySegment iter, int line_number, int char_offset) {
        var mh$ = gtk_text_buffer_get_iter_at_line_offset$MH();
        try {
            mh$.invokeExact(buffer, iter, line_number, char_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_iter_at_line_index$MH() {
        return RuntimeHelper.requireNonNull(constants$3136.const$4,"gtk_text_buffer_get_iter_at_line_index");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_get_iter_at_line_index(struct _GtkTextBuffer* buffer, struct _GtkTextIter* iter, int line_number, int byte_index);
     * }
     */
    public static void gtk_text_buffer_get_iter_at_line_index(MemorySegment buffer, MemorySegment iter, int line_number, int byte_index) {
        var mh$ = gtk_text_buffer_get_iter_at_line_index$MH();
        try {
            mh$.invokeExact(buffer, iter, line_number, byte_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_iter_at_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$3136.const$5,"gtk_text_buffer_get_iter_at_offset");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_get_iter_at_offset(struct _GtkTextBuffer* buffer, struct _GtkTextIter* iter, int char_offset);
     * }
     */
    public static void gtk_text_buffer_get_iter_at_offset(MemorySegment buffer, MemorySegment iter, int char_offset) {
        var mh$ = gtk_text_buffer_get_iter_at_offset$MH();
        try {
            mh$.invokeExact(buffer, iter, char_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_iter_at_line$MH() {
        return RuntimeHelper.requireNonNull(constants$3137.const$0,"gtk_text_buffer_get_iter_at_line");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_get_iter_at_line(struct _GtkTextBuffer* buffer, struct _GtkTextIter* iter, int line_number);
     * }
     */
    public static void gtk_text_buffer_get_iter_at_line(MemorySegment buffer, MemorySegment iter, int line_number) {
        var mh$ = gtk_text_buffer_get_iter_at_line$MH();
        try {
            mh$.invokeExact(buffer, iter, line_number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_start_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$3137.const$1,"gtk_text_buffer_get_start_iter");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_get_start_iter(struct _GtkTextBuffer* buffer, struct _GtkTextIter* iter);
     * }
     */
    public static void gtk_text_buffer_get_start_iter(MemorySegment buffer, MemorySegment iter) {
        var mh$ = gtk_text_buffer_get_start_iter$MH();
        try {
            mh$.invokeExact(buffer, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_end_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$3137.const$2,"gtk_text_buffer_get_end_iter");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_get_end_iter(struct _GtkTextBuffer* buffer, struct _GtkTextIter* iter);
     * }
     */
    public static void gtk_text_buffer_get_end_iter(MemorySegment buffer, MemorySegment iter) {
        var mh$ = gtk_text_buffer_get_end_iter$MH();
        try {
            mh$.invokeExact(buffer, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$3137.const$3,"gtk_text_buffer_get_bounds");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_get_bounds(struct _GtkTextBuffer* buffer, struct _GtkTextIter* start, struct _GtkTextIter* end);
     * }
     */
    public static void gtk_text_buffer_get_bounds(MemorySegment buffer, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_buffer_get_bounds$MH();
        try {
            mh$.invokeExact(buffer, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_iter_at_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$3137.const$4,"gtk_text_buffer_get_iter_at_mark");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_get_iter_at_mark(struct _GtkTextBuffer* buffer, struct _GtkTextIter* iter, struct _GtkTextMark* mark);
     * }
     */
    public static void gtk_text_buffer_get_iter_at_mark(MemorySegment buffer, MemorySegment iter, MemorySegment mark) {
        var mh$ = gtk_text_buffer_get_iter_at_mark$MH();
        try {
            mh$.invokeExact(buffer, iter, mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_iter_at_child_anchor$MH() {
        return RuntimeHelper.requireNonNull(constants$3137.const$5,"gtk_text_buffer_get_iter_at_child_anchor");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_get_iter_at_child_anchor(struct _GtkTextBuffer* buffer, struct _GtkTextIter* iter, struct _GtkTextChildAnchor* anchor);
     * }
     */
    public static void gtk_text_buffer_get_iter_at_child_anchor(MemorySegment buffer, MemorySegment iter, MemorySegment anchor) {
        var mh$ = gtk_text_buffer_get_iter_at_child_anchor$MH();
        try {
            mh$.invokeExact(buffer, iter, anchor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_modified$MH() {
        return RuntimeHelper.requireNonNull(constants$3138.const$0,"gtk_text_buffer_get_modified");
    }
    /**
     * {@snippet :
     * int gtk_text_buffer_get_modified(struct _GtkTextBuffer* buffer);
     * }
     */
    public static int gtk_text_buffer_get_modified(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_modified$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_set_modified$MH() {
        return RuntimeHelper.requireNonNull(constants$3138.const$1,"gtk_text_buffer_set_modified");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_set_modified(struct _GtkTextBuffer* buffer, int setting);
     * }
     */
    public static void gtk_text_buffer_set_modified(MemorySegment buffer, int setting) {
        var mh$ = gtk_text_buffer_set_modified$MH();
        try {
            mh$.invokeExact(buffer, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_has_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$3138.const$2,"gtk_text_buffer_get_has_selection");
    }
    /**
     * {@snippet :
     * int gtk_text_buffer_get_has_selection(struct _GtkTextBuffer* buffer);
     * }
     */
    public static int gtk_text_buffer_get_has_selection(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_has_selection$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_add_selection_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$3138.const$3,"gtk_text_buffer_add_selection_clipboard");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_add_selection_clipboard(struct _GtkTextBuffer* buffer, struct _GtkClipboard* clipboard);
     * }
     */
    public static void gtk_text_buffer_add_selection_clipboard(MemorySegment buffer, MemorySegment clipboard) {
        var mh$ = gtk_text_buffer_add_selection_clipboard$MH();
        try {
            mh$.invokeExact(buffer, clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_remove_selection_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$3138.const$4,"gtk_text_buffer_remove_selection_clipboard");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_remove_selection_clipboard(struct _GtkTextBuffer* buffer, struct _GtkClipboard* clipboard);
     * }
     */
    public static void gtk_text_buffer_remove_selection_clipboard(MemorySegment buffer, MemorySegment clipboard) {
        var mh$ = gtk_text_buffer_remove_selection_clipboard$MH();
        try {
            mh$.invokeExact(buffer, clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_cut_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$3138.const$5,"gtk_text_buffer_cut_clipboard");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_cut_clipboard(struct _GtkTextBuffer* buffer, struct _GtkClipboard* clipboard, int default_editable);
     * }
     */
    public static void gtk_text_buffer_cut_clipboard(MemorySegment buffer, MemorySegment clipboard, int default_editable) {
        var mh$ = gtk_text_buffer_cut_clipboard$MH();
        try {
            mh$.invokeExact(buffer, clipboard, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_copy_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$3139.const$0,"gtk_text_buffer_copy_clipboard");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_copy_clipboard(struct _GtkTextBuffer* buffer, struct _GtkClipboard* clipboard);
     * }
     */
    public static void gtk_text_buffer_copy_clipboard(MemorySegment buffer, MemorySegment clipboard) {
        var mh$ = gtk_text_buffer_copy_clipboard$MH();
        try {
            mh$.invokeExact(buffer, clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_paste_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$3139.const$1,"gtk_text_buffer_paste_clipboard");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_paste_clipboard(struct _GtkTextBuffer* buffer, struct _GtkClipboard* clipboard, struct _GtkTextIter* override_location, int default_editable);
     * }
     */
    public static void gtk_text_buffer_paste_clipboard(MemorySegment buffer, MemorySegment clipboard, MemorySegment override_location, int default_editable) {
        var mh$ = gtk_text_buffer_paste_clipboard$MH();
        try {
            mh$.invokeExact(buffer, clipboard, override_location, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_selection_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$3139.const$2,"gtk_text_buffer_get_selection_bounds");
    }
    /**
     * {@snippet :
     * int gtk_text_buffer_get_selection_bounds(struct _GtkTextBuffer* buffer, struct _GtkTextIter* start, struct _GtkTextIter* end);
     * }
     */
    public static int gtk_text_buffer_get_selection_bounds(MemorySegment buffer, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_buffer_get_selection_bounds$MH();
        try {
            return (int)mh$.invokeExact(buffer, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_delete_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$3139.const$3,"gtk_text_buffer_delete_selection");
    }
    /**
     * {@snippet :
     * int gtk_text_buffer_delete_selection(struct _GtkTextBuffer* buffer, int interactive, int default_editable);
     * }
     */
    public static int gtk_text_buffer_delete_selection(MemorySegment buffer, int interactive, int default_editable) {
        var mh$ = gtk_text_buffer_delete_selection$MH();
        try {
            return (int)mh$.invokeExact(buffer, interactive, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_begin_user_action$MH() {
        return RuntimeHelper.requireNonNull(constants$3139.const$4,"gtk_text_buffer_begin_user_action");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_begin_user_action(struct _GtkTextBuffer* buffer);
     * }
     */
    public static void gtk_text_buffer_begin_user_action(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_begin_user_action$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_end_user_action$MH() {
        return RuntimeHelper.requireNonNull(constants$3139.const$5,"gtk_text_buffer_end_user_action");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_end_user_action(struct _GtkTextBuffer* buffer);
     * }
     */
    public static void gtk_text_buffer_end_user_action(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_end_user_action$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_copy_target_list$MH() {
        return RuntimeHelper.requireNonNull(constants$3140.const$0,"gtk_text_buffer_get_copy_target_list");
    }
    /**
     * {@snippet :
     * struct _GtkTargetList* gtk_text_buffer_get_copy_target_list(struct _GtkTextBuffer* buffer);
     * }
     */
    public static MemorySegment gtk_text_buffer_get_copy_target_list(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_copy_target_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_paste_target_list$MH() {
        return RuntimeHelper.requireNonNull(constants$3140.const$1,"gtk_text_buffer_get_paste_target_list");
    }
    /**
     * {@snippet :
     * struct _GtkTargetList* gtk_text_buffer_get_paste_target_list(struct _GtkTextBuffer* buffer);
     * }
     */
    public static MemorySegment gtk_text_buffer_get_paste_target_list(MemorySegment buffer) {
        var mh$ = gtk_text_buffer_get_paste_target_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_register_serialize_format$MH() {
        return RuntimeHelper.requireNonNull(constants$3141.const$3,"gtk_text_buffer_register_serialize_format");
    }
    /**
     * {@snippet :
     * struct _GdkAtom* gtk_text_buffer_register_serialize_format(struct _GtkTextBuffer* buffer, char* mime_type, unsigned char* (*function)(struct _GtkTextBuffer*,struct _GtkTextBuffer*,struct _GtkTextIter*,struct _GtkTextIter*,unsigned long*,void*), void* user_data, void (*user_data_destroy)(void*));
     * }
     */
    public static MemorySegment gtk_text_buffer_register_serialize_format(MemorySegment buffer, MemorySegment mime_type, MemorySegment function, MemorySegment user_data, MemorySegment user_data_destroy) {
        var mh$ = gtk_text_buffer_register_serialize_format$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, mime_type, function, user_data, user_data_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_register_serialize_tagset$MH() {
        return RuntimeHelper.requireNonNull(constants$3141.const$4,"gtk_text_buffer_register_serialize_tagset");
    }
    /**
     * {@snippet :
     * struct _GdkAtom* gtk_text_buffer_register_serialize_tagset(struct _GtkTextBuffer* buffer, char* tagset_name);
     * }
     */
    public static MemorySegment gtk_text_buffer_register_serialize_tagset(MemorySegment buffer, MemorySegment tagset_name) {
        var mh$ = gtk_text_buffer_register_serialize_tagset$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, tagset_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_register_deserialize_format$MH() {
        return RuntimeHelper.requireNonNull(constants$3142.const$1,"gtk_text_buffer_register_deserialize_format");
    }
    /**
     * {@snippet :
     * struct _GdkAtom* gtk_text_buffer_register_deserialize_format(struct _GtkTextBuffer* buffer, char* mime_type, int (*function)(struct _GtkTextBuffer*,struct _GtkTextBuffer*,struct _GtkTextIter*,unsigned char*,unsigned long,int,void*,struct _GError**), void* user_data, void (*user_data_destroy)(void*));
     * }
     */
    public static MemorySegment gtk_text_buffer_register_deserialize_format(MemorySegment buffer, MemorySegment mime_type, MemorySegment function, MemorySegment user_data, MemorySegment user_data_destroy) {
        var mh$ = gtk_text_buffer_register_deserialize_format$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, mime_type, function, user_data, user_data_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_register_deserialize_tagset$MH() {
        return RuntimeHelper.requireNonNull(constants$3142.const$2,"gtk_text_buffer_register_deserialize_tagset");
    }
    /**
     * {@snippet :
     * struct _GdkAtom* gtk_text_buffer_register_deserialize_tagset(struct _GtkTextBuffer* buffer, char* tagset_name);
     * }
     */
    public static MemorySegment gtk_text_buffer_register_deserialize_tagset(MemorySegment buffer, MemorySegment tagset_name) {
        var mh$ = gtk_text_buffer_register_deserialize_tagset$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, tagset_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_unregister_serialize_format$MH() {
        return RuntimeHelper.requireNonNull(constants$3142.const$3,"gtk_text_buffer_unregister_serialize_format");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_unregister_serialize_format(struct _GtkTextBuffer* buffer, struct _GdkAtom* format);
     * }
     */
    public static void gtk_text_buffer_unregister_serialize_format(MemorySegment buffer, MemorySegment format) {
        var mh$ = gtk_text_buffer_unregister_serialize_format$MH();
        try {
            mh$.invokeExact(buffer, format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_unregister_deserialize_format$MH() {
        return RuntimeHelper.requireNonNull(constants$3142.const$4,"gtk_text_buffer_unregister_deserialize_format");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_unregister_deserialize_format(struct _GtkTextBuffer* buffer, struct _GdkAtom* format);
     * }
     */
    public static void gtk_text_buffer_unregister_deserialize_format(MemorySegment buffer, MemorySegment format) {
        var mh$ = gtk_text_buffer_unregister_deserialize_format$MH();
        try {
            mh$.invokeExact(buffer, format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_deserialize_set_can_create_tags$MH() {
        return RuntimeHelper.requireNonNull(constants$3142.const$5,"gtk_text_buffer_deserialize_set_can_create_tags");
    }
    /**
     * {@snippet :
     * void gtk_text_buffer_deserialize_set_can_create_tags(struct _GtkTextBuffer* buffer, struct _GdkAtom* format, int can_create_tags);
     * }
     */
    public static void gtk_text_buffer_deserialize_set_can_create_tags(MemorySegment buffer, MemorySegment format, int can_create_tags) {
        var mh$ = gtk_text_buffer_deserialize_set_can_create_tags$MH();
        try {
            mh$.invokeExact(buffer, format, can_create_tags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_deserialize_get_can_create_tags$MH() {
        return RuntimeHelper.requireNonNull(constants$3143.const$0,"gtk_text_buffer_deserialize_get_can_create_tags");
    }
    /**
     * {@snippet :
     * int gtk_text_buffer_deserialize_get_can_create_tags(struct _GtkTextBuffer* buffer, struct _GdkAtom* format);
     * }
     */
    public static int gtk_text_buffer_deserialize_get_can_create_tags(MemorySegment buffer, MemorySegment format) {
        var mh$ = gtk_text_buffer_deserialize_get_can_create_tags$MH();
        try {
            return (int)mh$.invokeExact(buffer, format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_serialize_formats$MH() {
        return RuntimeHelper.requireNonNull(constants$3143.const$1,"gtk_text_buffer_get_serialize_formats");
    }
    /**
     * {@snippet :
     * struct _GdkAtom** gtk_text_buffer_get_serialize_formats(struct _GtkTextBuffer* buffer, int* n_formats);
     * }
     */
    public static MemorySegment gtk_text_buffer_get_serialize_formats(MemorySegment buffer, MemorySegment n_formats) {
        var mh$ = gtk_text_buffer_get_serialize_formats$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, n_formats);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_deserialize_formats$MH() {
        return RuntimeHelper.requireNonNull(constants$3143.const$2,"gtk_text_buffer_get_deserialize_formats");
    }
    /**
     * {@snippet :
     * struct _GdkAtom** gtk_text_buffer_get_deserialize_formats(struct _GtkTextBuffer* buffer, int* n_formats);
     * }
     */
    public static MemorySegment gtk_text_buffer_get_deserialize_formats(MemorySegment buffer, MemorySegment n_formats) {
        var mh$ = gtk_text_buffer_get_deserialize_formats$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, n_formats);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_serialize$MH() {
        return RuntimeHelper.requireNonNull(constants$3143.const$3,"gtk_text_buffer_serialize");
    }
    /**
     * {@snippet :
     * unsigned char* gtk_text_buffer_serialize(struct _GtkTextBuffer* register_buffer, struct _GtkTextBuffer* content_buffer, struct _GdkAtom* format, struct _GtkTextIter* start, struct _GtkTextIter* end, unsigned long* length);
     * }
     */
    public static MemorySegment gtk_text_buffer_serialize(MemorySegment register_buffer, MemorySegment content_buffer, MemorySegment format, MemorySegment start, MemorySegment end, MemorySegment length) {
        var mh$ = gtk_text_buffer_serialize$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(register_buffer, content_buffer, format, start, end, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_deserialize$MH() {
        return RuntimeHelper.requireNonNull(constants$3143.const$5,"gtk_text_buffer_deserialize");
    }
    /**
     * {@snippet :
     * int gtk_text_buffer_deserialize(struct _GtkTextBuffer* register_buffer, struct _GtkTextBuffer* content_buffer, struct _GdkAtom* format, struct _GtkTextIter* iter, unsigned char* data, unsigned long length, struct _GError** error);
     * }
     */
    public static int gtk_text_buffer_deserialize(MemorySegment register_buffer, MemorySegment content_buffer, MemorySegment format, MemorySegment iter, MemorySegment data, long length, MemorySegment error) {
        var mh$ = gtk_text_buffer_deserialize$MH();
        try {
            return (int)mh$.invokeExact(register_buffer, content_buffer, format, iter, data, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkTextWindowType.GTK_TEXT_WINDOW_PRIVATE = 0;
     * }
     */
    public static int GTK_TEXT_WINDOW_PRIVATE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkTextWindowType.GTK_TEXT_WINDOW_WIDGET = 1;
     * }
     */
    public static int GTK_TEXT_WINDOW_WIDGET() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkTextWindowType.GTK_TEXT_WINDOW_TEXT = 2;
     * }
     */
    public static int GTK_TEXT_WINDOW_TEXT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkTextWindowType.GTK_TEXT_WINDOW_LEFT = 3;
     * }
     */
    public static int GTK_TEXT_WINDOW_LEFT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkTextWindowType.GTK_TEXT_WINDOW_RIGHT = 4;
     * }
     */
    public static int GTK_TEXT_WINDOW_RIGHT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkTextWindowType.GTK_TEXT_WINDOW_TOP = 5;
     * }
     */
    public static int GTK_TEXT_WINDOW_TOP() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkTextWindowType.GTK_TEXT_WINDOW_BOTTOM = 6;
     * }
     */
    public static int GTK_TEXT_WINDOW_BOTTOM() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GtkTextViewLayer.GTK_TEXT_VIEW_LAYER_BELOW = 0;
     * }
     */
    public static int GTK_TEXT_VIEW_LAYER_BELOW() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkTextViewLayer.GTK_TEXT_VIEW_LAYER_ABOVE = 1;
     * }
     */
    public static int GTK_TEXT_VIEW_LAYER_ABOVE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkTextViewLayer.GTK_TEXT_VIEW_LAYER_BELOW_TEXT = 2;
     * }
     */
    public static int GTK_TEXT_VIEW_LAYER_BELOW_TEXT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkTextViewLayer.GTK_TEXT_VIEW_LAYER_ABOVE_TEXT = 3;
     * }
     */
    public static int GTK_TEXT_VIEW_LAYER_ABOVE_TEXT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkTextExtendSelection.GTK_TEXT_EXTEND_SELECTION_WORD = 0;
     * }
     */
    public static int GTK_TEXT_EXTEND_SELECTION_WORD() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkTextExtendSelection.GTK_TEXT_EXTEND_SELECTION_LINE = 1;
     * }
     */
    public static int GTK_TEXT_EXTEND_SELECTION_LINE() {
        return (int)1L;
    }
    public static MethodHandle gtk_text_view_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3150.const$3,"gtk_text_view_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_text_view_get_type();
     * }
     */
    public static long gtk_text_view_get_type() {
        var mh$ = gtk_text_view_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3150.const$4,"gtk_text_view_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_text_view_new();
     * }
     */
    public static MemorySegment gtk_text_view_new() {
        var mh$ = gtk_text_view_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_new_with_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$3150.const$5,"gtk_text_view_new_with_buffer");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_text_view_new_with_buffer(struct _GtkTextBuffer* buffer);
     * }
     */
    public static MemorySegment gtk_text_view_new_with_buffer(MemorySegment buffer) {
        var mh$ = gtk_text_view_new_with_buffer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$3151.const$0,"gtk_text_view_set_buffer");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_buffer(struct _GtkTextView* text_view, struct _GtkTextBuffer* buffer);
     * }
     */
    public static void gtk_text_view_set_buffer(MemorySegment text_view, MemorySegment buffer) {
        var mh$ = gtk_text_view_set_buffer$MH();
        try {
            mh$.invokeExact(text_view, buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$3151.const$1,"gtk_text_view_get_buffer");
    }
    /**
     * {@snippet :
     * struct _GtkTextBuffer* gtk_text_view_get_buffer(struct _GtkTextView* text_view);
     * }
     */
    public static MemorySegment gtk_text_view_get_buffer(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_buffer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_scroll_to_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$3151.const$3,"gtk_text_view_scroll_to_iter");
    }
    /**
     * {@snippet :
     * int gtk_text_view_scroll_to_iter(struct _GtkTextView* text_view, struct _GtkTextIter* iter, double within_margin, int use_align, double xalign, double yalign);
     * }
     */
    public static int gtk_text_view_scroll_to_iter(MemorySegment text_view, MemorySegment iter, double within_margin, int use_align, double xalign, double yalign) {
        var mh$ = gtk_text_view_scroll_to_iter$MH();
        try {
            return (int)mh$.invokeExact(text_view, iter, within_margin, use_align, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_scroll_to_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$3151.const$5,"gtk_text_view_scroll_to_mark");
    }
    /**
     * {@snippet :
     * void gtk_text_view_scroll_to_mark(struct _GtkTextView* text_view, struct _GtkTextMark* mark, double within_margin, int use_align, double xalign, double yalign);
     * }
     */
    public static void gtk_text_view_scroll_to_mark(MemorySegment text_view, MemorySegment mark, double within_margin, int use_align, double xalign, double yalign) {
        var mh$ = gtk_text_view_scroll_to_mark$MH();
        try {
            mh$.invokeExact(text_view, mark, within_margin, use_align, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_scroll_mark_onscreen$MH() {
        return RuntimeHelper.requireNonNull(constants$3152.const$0,"gtk_text_view_scroll_mark_onscreen");
    }
    /**
     * {@snippet :
     * void gtk_text_view_scroll_mark_onscreen(struct _GtkTextView* text_view, struct _GtkTextMark* mark);
     * }
     */
    public static void gtk_text_view_scroll_mark_onscreen(MemorySegment text_view, MemorySegment mark) {
        var mh$ = gtk_text_view_scroll_mark_onscreen$MH();
        try {
            mh$.invokeExact(text_view, mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_move_mark_onscreen$MH() {
        return RuntimeHelper.requireNonNull(constants$3152.const$1,"gtk_text_view_move_mark_onscreen");
    }
    /**
     * {@snippet :
     * int gtk_text_view_move_mark_onscreen(struct _GtkTextView* text_view, struct _GtkTextMark* mark);
     * }
     */
    public static int gtk_text_view_move_mark_onscreen(MemorySegment text_view, MemorySegment mark) {
        var mh$ = gtk_text_view_move_mark_onscreen$MH();
        try {
            return (int)mh$.invokeExact(text_view, mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_place_cursor_onscreen$MH() {
        return RuntimeHelper.requireNonNull(constants$3152.const$2,"gtk_text_view_place_cursor_onscreen");
    }
    /**
     * {@snippet :
     * int gtk_text_view_place_cursor_onscreen(struct _GtkTextView* text_view);
     * }
     */
    public static int gtk_text_view_place_cursor_onscreen(MemorySegment text_view) {
        var mh$ = gtk_text_view_place_cursor_onscreen$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_visible_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$3152.const$3,"gtk_text_view_get_visible_rect");
    }
    /**
     * {@snippet :
     * void gtk_text_view_get_visible_rect(struct _GtkTextView* text_view, struct _cairo_rectangle_int* visible_rect);
     * }
     */
    public static void gtk_text_view_get_visible_rect(MemorySegment text_view, MemorySegment visible_rect) {
        var mh$ = gtk_text_view_get_visible_rect$MH();
        try {
            mh$.invokeExact(text_view, visible_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_cursor_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$3152.const$4,"gtk_text_view_set_cursor_visible");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_cursor_visible(struct _GtkTextView* text_view, int setting);
     * }
     */
    public static void gtk_text_view_set_cursor_visible(MemorySegment text_view, int setting) {
        var mh$ = gtk_text_view_set_cursor_visible$MH();
        try {
            mh$.invokeExact(text_view, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_cursor_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$3152.const$5,"gtk_text_view_get_cursor_visible");
    }
    /**
     * {@snippet :
     * int gtk_text_view_get_cursor_visible(struct _GtkTextView* text_view);
     * }
     */
    public static int gtk_text_view_get_cursor_visible(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_cursor_visible$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_reset_cursor_blink$MH() {
        return RuntimeHelper.requireNonNull(constants$3153.const$0,"gtk_text_view_reset_cursor_blink");
    }
    /**
     * {@snippet :
     * void gtk_text_view_reset_cursor_blink(struct _GtkTextView* text_view);
     * }
     */
    public static void gtk_text_view_reset_cursor_blink(MemorySegment text_view) {
        var mh$ = gtk_text_view_reset_cursor_blink$MH();
        try {
            mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_cursor_locations$MH() {
        return RuntimeHelper.requireNonNull(constants$3153.const$1,"gtk_text_view_get_cursor_locations");
    }
    /**
     * {@snippet :
     * void gtk_text_view_get_cursor_locations(struct _GtkTextView* text_view, struct _GtkTextIter* iter, struct _cairo_rectangle_int* strong, struct _cairo_rectangle_int* weak);
     * }
     */
    public static void gtk_text_view_get_cursor_locations(MemorySegment text_view, MemorySegment iter, MemorySegment strong, MemorySegment weak) {
        var mh$ = gtk_text_view_get_cursor_locations$MH();
        try {
            mh$.invokeExact(text_view, iter, strong, weak);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_iter_location$MH() {
        return RuntimeHelper.requireNonNull(constants$3153.const$2,"gtk_text_view_get_iter_location");
    }
    /**
     * {@snippet :
     * void gtk_text_view_get_iter_location(struct _GtkTextView* text_view, struct _GtkTextIter* iter, struct _cairo_rectangle_int* location);
     * }
     */
    public static void gtk_text_view_get_iter_location(MemorySegment text_view, MemorySegment iter, MemorySegment location) {
        var mh$ = gtk_text_view_get_iter_location$MH();
        try {
            mh$.invokeExact(text_view, iter, location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_iter_at_location$MH() {
        return RuntimeHelper.requireNonNull(constants$3153.const$3,"gtk_text_view_get_iter_at_location");
    }
    /**
     * {@snippet :
     * int gtk_text_view_get_iter_at_location(struct _GtkTextView* text_view, struct _GtkTextIter* iter, int x, int y);
     * }
     */
    public static int gtk_text_view_get_iter_at_location(MemorySegment text_view, MemorySegment iter, int x, int y) {
        var mh$ = gtk_text_view_get_iter_at_location$MH();
        try {
            return (int)mh$.invokeExact(text_view, iter, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_iter_at_position$MH() {
        return RuntimeHelper.requireNonNull(constants$3153.const$4,"gtk_text_view_get_iter_at_position");
    }
    /**
     * {@snippet :
     * int gtk_text_view_get_iter_at_position(struct _GtkTextView* text_view, struct _GtkTextIter* iter, int* trailing, int x, int y);
     * }
     */
    public static int gtk_text_view_get_iter_at_position(MemorySegment text_view, MemorySegment iter, MemorySegment trailing, int x, int y) {
        var mh$ = gtk_text_view_get_iter_at_position$MH();
        try {
            return (int)mh$.invokeExact(text_view, iter, trailing, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_line_yrange$MH() {
        return RuntimeHelper.requireNonNull(constants$3153.const$5,"gtk_text_view_get_line_yrange");
    }
    /**
     * {@snippet :
     * void gtk_text_view_get_line_yrange(struct _GtkTextView* text_view, struct _GtkTextIter* iter, int* y, int* height);
     * }
     */
    public static void gtk_text_view_get_line_yrange(MemorySegment text_view, MemorySegment iter, MemorySegment y, MemorySegment height) {
        var mh$ = gtk_text_view_get_line_yrange$MH();
        try {
            mh$.invokeExact(text_view, iter, y, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_line_at_y$MH() {
        return RuntimeHelper.requireNonNull(constants$3154.const$0,"gtk_text_view_get_line_at_y");
    }
    /**
     * {@snippet :
     * void gtk_text_view_get_line_at_y(struct _GtkTextView* text_view, struct _GtkTextIter* target_iter, int y, int* line_top);
     * }
     */
    public static void gtk_text_view_get_line_at_y(MemorySegment text_view, MemorySegment target_iter, int y, MemorySegment line_top) {
        var mh$ = gtk_text_view_get_line_at_y$MH();
        try {
            mh$.invokeExact(text_view, target_iter, y, line_top);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_buffer_to_window_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$3154.const$1,"gtk_text_view_buffer_to_window_coords");
    }
    /**
     * {@snippet :
     * void gtk_text_view_buffer_to_window_coords(struct _GtkTextView* text_view, enum GtkTextWindowType win, int buffer_x, int buffer_y, int* window_x, int* window_y);
     * }
     */
    public static void gtk_text_view_buffer_to_window_coords(MemorySegment text_view, int win, int buffer_x, int buffer_y, MemorySegment window_x, MemorySegment window_y) {
        var mh$ = gtk_text_view_buffer_to_window_coords$MH();
        try {
            mh$.invokeExact(text_view, win, buffer_x, buffer_y, window_x, window_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_window_to_buffer_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$3154.const$2,"gtk_text_view_window_to_buffer_coords");
    }
    /**
     * {@snippet :
     * void gtk_text_view_window_to_buffer_coords(struct _GtkTextView* text_view, enum GtkTextWindowType win, int window_x, int window_y, int* buffer_x, int* buffer_y);
     * }
     */
    public static void gtk_text_view_window_to_buffer_coords(MemorySegment text_view, int win, int window_x, int window_y, MemorySegment buffer_x, MemorySegment buffer_y) {
        var mh$ = gtk_text_view_window_to_buffer_coords$MH();
        try {
            mh$.invokeExact(text_view, win, window_x, window_y, buffer_x, buffer_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3154.const$3,"gtk_text_view_get_hadjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_text_view_get_hadjustment(struct _GtkTextView* text_view);
     * }
     */
    public static MemorySegment gtk_text_view_get_hadjustment(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_hadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3154.const$4,"gtk_text_view_get_vadjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_text_view_get_vadjustment(struct _GtkTextView* text_view);
     * }
     */
    public static MemorySegment gtk_text_view_get_vadjustment(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_vadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_window$MH() {
        return RuntimeHelper.requireNonNull(constants$3154.const$5,"gtk_text_view_get_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gtk_text_view_get_window(struct _GtkTextView* text_view, enum GtkTextWindowType win);
     * }
     */
    public static MemorySegment gtk_text_view_get_window(MemorySegment text_view, int win) {
        var mh$ = gtk_text_view_get_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text_view, win);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_window_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3155.const$0,"gtk_text_view_get_window_type");
    }
    /**
     * {@snippet :
     * enum GtkTextWindowType gtk_text_view_get_window_type(struct _GtkTextView* text_view, struct _GdkWindow* window);
     * }
     */
    public static int gtk_text_view_get_window_type(MemorySegment text_view, MemorySegment window) {
        var mh$ = gtk_text_view_get_window_type$MH();
        try {
            return (int)mh$.invokeExact(text_view, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_border_window_size$MH() {
        return RuntimeHelper.requireNonNull(constants$3155.const$1,"gtk_text_view_set_border_window_size");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_border_window_size(struct _GtkTextView* text_view, enum GtkTextWindowType type, int size);
     * }
     */
    public static void gtk_text_view_set_border_window_size(MemorySegment text_view, int type, int size) {
        var mh$ = gtk_text_view_set_border_window_size$MH();
        try {
            mh$.invokeExact(text_view, type, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_border_window_size$MH() {
        return RuntimeHelper.requireNonNull(constants$3155.const$2,"gtk_text_view_get_border_window_size");
    }
    /**
     * {@snippet :
     * int gtk_text_view_get_border_window_size(struct _GtkTextView* text_view, enum GtkTextWindowType type);
     * }
     */
    public static int gtk_text_view_get_border_window_size(MemorySegment text_view, int type) {
        var mh$ = gtk_text_view_get_border_window_size$MH();
        try {
            return (int)mh$.invokeExact(text_view, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_forward_display_line$MH() {
        return RuntimeHelper.requireNonNull(constants$3155.const$3,"gtk_text_view_forward_display_line");
    }
    /**
     * {@snippet :
     * int gtk_text_view_forward_display_line(struct _GtkTextView* text_view, struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_view_forward_display_line(MemorySegment text_view, MemorySegment iter) {
        var mh$ = gtk_text_view_forward_display_line$MH();
        try {
            return (int)mh$.invokeExact(text_view, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_backward_display_line$MH() {
        return RuntimeHelper.requireNonNull(constants$3155.const$4,"gtk_text_view_backward_display_line");
    }
    /**
     * {@snippet :
     * int gtk_text_view_backward_display_line(struct _GtkTextView* text_view, struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_view_backward_display_line(MemorySegment text_view, MemorySegment iter) {
        var mh$ = gtk_text_view_backward_display_line$MH();
        try {
            return (int)mh$.invokeExact(text_view, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_forward_display_line_end$MH() {
        return RuntimeHelper.requireNonNull(constants$3155.const$5,"gtk_text_view_forward_display_line_end");
    }
    /**
     * {@snippet :
     * int gtk_text_view_forward_display_line_end(struct _GtkTextView* text_view, struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_view_forward_display_line_end(MemorySegment text_view, MemorySegment iter) {
        var mh$ = gtk_text_view_forward_display_line_end$MH();
        try {
            return (int)mh$.invokeExact(text_view, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_backward_display_line_start$MH() {
        return RuntimeHelper.requireNonNull(constants$3156.const$0,"gtk_text_view_backward_display_line_start");
    }
    /**
     * {@snippet :
     * int gtk_text_view_backward_display_line_start(struct _GtkTextView* text_view, struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_view_backward_display_line_start(MemorySegment text_view, MemorySegment iter) {
        var mh$ = gtk_text_view_backward_display_line_start$MH();
        try {
            return (int)mh$.invokeExact(text_view, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_starts_display_line$MH() {
        return RuntimeHelper.requireNonNull(constants$3156.const$1,"gtk_text_view_starts_display_line");
    }
    /**
     * {@snippet :
     * int gtk_text_view_starts_display_line(struct _GtkTextView* text_view, struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_view_starts_display_line(MemorySegment text_view, MemorySegment iter) {
        var mh$ = gtk_text_view_starts_display_line$MH();
        try {
            return (int)mh$.invokeExact(text_view, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_move_visually$MH() {
        return RuntimeHelper.requireNonNull(constants$3156.const$2,"gtk_text_view_move_visually");
    }
    /**
     * {@snippet :
     * int gtk_text_view_move_visually(struct _GtkTextView* text_view, struct _GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_view_move_visually(MemorySegment text_view, MemorySegment iter, int count) {
        var mh$ = gtk_text_view_move_visually$MH();
        try {
            return (int)mh$.invokeExact(text_view, iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_im_context_filter_keypress$MH() {
        return RuntimeHelper.requireNonNull(constants$3156.const$3,"gtk_text_view_im_context_filter_keypress");
    }
    /**
     * {@snippet :
     * int gtk_text_view_im_context_filter_keypress(struct _GtkTextView* text_view, struct _GdkEventKey* event);
     * }
     */
    public static int gtk_text_view_im_context_filter_keypress(MemorySegment text_view, MemorySegment event) {
        var mh$ = gtk_text_view_im_context_filter_keypress$MH();
        try {
            return (int)mh$.invokeExact(text_view, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_reset_im_context$MH() {
        return RuntimeHelper.requireNonNull(constants$3156.const$4,"gtk_text_view_reset_im_context");
    }
    /**
     * {@snippet :
     * void gtk_text_view_reset_im_context(struct _GtkTextView* text_view);
     * }
     */
    public static void gtk_text_view_reset_im_context(MemorySegment text_view) {
        var mh$ = gtk_text_view_reset_im_context$MH();
        try {
            mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_add_child_at_anchor$MH() {
        return RuntimeHelper.requireNonNull(constants$3156.const$5,"gtk_text_view_add_child_at_anchor");
    }
    /**
     * {@snippet :
     * void gtk_text_view_add_child_at_anchor(struct _GtkTextView* text_view, struct _GtkWidget* child, struct _GtkTextChildAnchor* anchor);
     * }
     */
    public static void gtk_text_view_add_child_at_anchor(MemorySegment text_view, MemorySegment child, MemorySegment anchor) {
        var mh$ = gtk_text_view_add_child_at_anchor$MH();
        try {
            mh$.invokeExact(text_view, child, anchor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_add_child_in_window$MH() {
        return RuntimeHelper.requireNonNull(constants$3157.const$0,"gtk_text_view_add_child_in_window");
    }
    /**
     * {@snippet :
     * void gtk_text_view_add_child_in_window(struct _GtkTextView* text_view, struct _GtkWidget* child, enum GtkTextWindowType which_window, int xpos, int ypos);
     * }
     */
    public static void gtk_text_view_add_child_in_window(MemorySegment text_view, MemorySegment child, int which_window, int xpos, int ypos) {
        var mh$ = gtk_text_view_add_child_in_window$MH();
        try {
            mh$.invokeExact(text_view, child, which_window, xpos, ypos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_move_child$MH() {
        return RuntimeHelper.requireNonNull(constants$3157.const$1,"gtk_text_view_move_child");
    }
    /**
     * {@snippet :
     * void gtk_text_view_move_child(struct _GtkTextView* text_view, struct _GtkWidget* child, int xpos, int ypos);
     * }
     */
    public static void gtk_text_view_move_child(MemorySegment text_view, MemorySegment child, int xpos, int ypos) {
        var mh$ = gtk_text_view_move_child$MH();
        try {
            mh$.invokeExact(text_view, child, xpos, ypos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_wrap_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$3157.const$2,"gtk_text_view_set_wrap_mode");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_wrap_mode(struct _GtkTextView* text_view, enum GtkWrapMode wrap_mode);
     * }
     */
    public static void gtk_text_view_set_wrap_mode(MemorySegment text_view, int wrap_mode) {
        var mh$ = gtk_text_view_set_wrap_mode$MH();
        try {
            mh$.invokeExact(text_view, wrap_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_wrap_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$3157.const$3,"gtk_text_view_get_wrap_mode");
    }
    /**
     * {@snippet :
     * enum GtkWrapMode gtk_text_view_get_wrap_mode(struct _GtkTextView* text_view);
     * }
     */
    public static int gtk_text_view_get_wrap_mode(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_wrap_mode$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_editable$MH() {
        return RuntimeHelper.requireNonNull(constants$3157.const$4,"gtk_text_view_set_editable");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_editable(struct _GtkTextView* text_view, int setting);
     * }
     */
    public static void gtk_text_view_set_editable(MemorySegment text_view, int setting) {
        var mh$ = gtk_text_view_set_editable$MH();
        try {
            mh$.invokeExact(text_view, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_editable$MH() {
        return RuntimeHelper.requireNonNull(constants$3157.const$5,"gtk_text_view_get_editable");
    }
    /**
     * {@snippet :
     * int gtk_text_view_get_editable(struct _GtkTextView* text_view);
     * }
     */
    public static int gtk_text_view_get_editable(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_editable$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_overwrite$MH() {
        return RuntimeHelper.requireNonNull(constants$3158.const$0,"gtk_text_view_set_overwrite");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_overwrite(struct _GtkTextView* text_view, int overwrite);
     * }
     */
    public static void gtk_text_view_set_overwrite(MemorySegment text_view, int overwrite) {
        var mh$ = gtk_text_view_set_overwrite$MH();
        try {
            mh$.invokeExact(text_view, overwrite);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_overwrite$MH() {
        return RuntimeHelper.requireNonNull(constants$3158.const$1,"gtk_text_view_get_overwrite");
    }
    /**
     * {@snippet :
     * int gtk_text_view_get_overwrite(struct _GtkTextView* text_view);
     * }
     */
    public static int gtk_text_view_get_overwrite(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_overwrite$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_accepts_tab$MH() {
        return RuntimeHelper.requireNonNull(constants$3158.const$2,"gtk_text_view_set_accepts_tab");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_accepts_tab(struct _GtkTextView* text_view, int accepts_tab);
     * }
     */
    public static void gtk_text_view_set_accepts_tab(MemorySegment text_view, int accepts_tab) {
        var mh$ = gtk_text_view_set_accepts_tab$MH();
        try {
            mh$.invokeExact(text_view, accepts_tab);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_accepts_tab$MH() {
        return RuntimeHelper.requireNonNull(constants$3158.const$3,"gtk_text_view_get_accepts_tab");
    }
    /**
     * {@snippet :
     * int gtk_text_view_get_accepts_tab(struct _GtkTextView* text_view);
     * }
     */
    public static int gtk_text_view_get_accepts_tab(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_accepts_tab$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_pixels_above_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$3158.const$4,"gtk_text_view_set_pixels_above_lines");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_pixels_above_lines(struct _GtkTextView* text_view, int pixels_above_lines);
     * }
     */
    public static void gtk_text_view_set_pixels_above_lines(MemorySegment text_view, int pixels_above_lines) {
        var mh$ = gtk_text_view_set_pixels_above_lines$MH();
        try {
            mh$.invokeExact(text_view, pixels_above_lines);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_pixels_above_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$3158.const$5,"gtk_text_view_get_pixels_above_lines");
    }
    /**
     * {@snippet :
     * int gtk_text_view_get_pixels_above_lines(struct _GtkTextView* text_view);
     * }
     */
    public static int gtk_text_view_get_pixels_above_lines(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_pixels_above_lines$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_pixels_below_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$3159.const$0,"gtk_text_view_set_pixels_below_lines");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_pixels_below_lines(struct _GtkTextView* text_view, int pixels_below_lines);
     * }
     */
    public static void gtk_text_view_set_pixels_below_lines(MemorySegment text_view, int pixels_below_lines) {
        var mh$ = gtk_text_view_set_pixels_below_lines$MH();
        try {
            mh$.invokeExact(text_view, pixels_below_lines);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_pixels_below_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$3159.const$1,"gtk_text_view_get_pixels_below_lines");
    }
    /**
     * {@snippet :
     * int gtk_text_view_get_pixels_below_lines(struct _GtkTextView* text_view);
     * }
     */
    public static int gtk_text_view_get_pixels_below_lines(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_pixels_below_lines$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_pixels_inside_wrap$MH() {
        return RuntimeHelper.requireNonNull(constants$3159.const$2,"gtk_text_view_set_pixels_inside_wrap");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_pixels_inside_wrap(struct _GtkTextView* text_view, int pixels_inside_wrap);
     * }
     */
    public static void gtk_text_view_set_pixels_inside_wrap(MemorySegment text_view, int pixels_inside_wrap) {
        var mh$ = gtk_text_view_set_pixels_inside_wrap$MH();
        try {
            mh$.invokeExact(text_view, pixels_inside_wrap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_pixels_inside_wrap$MH() {
        return RuntimeHelper.requireNonNull(constants$3159.const$3,"gtk_text_view_get_pixels_inside_wrap");
    }
    /**
     * {@snippet :
     * int gtk_text_view_get_pixels_inside_wrap(struct _GtkTextView* text_view);
     * }
     */
    public static int gtk_text_view_get_pixels_inside_wrap(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_pixels_inside_wrap$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_justification$MH() {
        return RuntimeHelper.requireNonNull(constants$3159.const$4,"gtk_text_view_set_justification");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_justification(struct _GtkTextView* text_view, enum GtkJustification justification);
     * }
     */
    public static void gtk_text_view_set_justification(MemorySegment text_view, int justification) {
        var mh$ = gtk_text_view_set_justification$MH();
        try {
            mh$.invokeExact(text_view, justification);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_justification$MH() {
        return RuntimeHelper.requireNonNull(constants$3159.const$5,"gtk_text_view_get_justification");
    }
    /**
     * {@snippet :
     * enum GtkJustification gtk_text_view_get_justification(struct _GtkTextView* text_view);
     * }
     */
    public static int gtk_text_view_get_justification(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_justification$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_left_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$3160.const$0,"gtk_text_view_set_left_margin");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_left_margin(struct _GtkTextView* text_view, int left_margin);
     * }
     */
    public static void gtk_text_view_set_left_margin(MemorySegment text_view, int left_margin) {
        var mh$ = gtk_text_view_set_left_margin$MH();
        try {
            mh$.invokeExact(text_view, left_margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_left_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$3160.const$1,"gtk_text_view_get_left_margin");
    }
    /**
     * {@snippet :
     * int gtk_text_view_get_left_margin(struct _GtkTextView* text_view);
     * }
     */
    public static int gtk_text_view_get_left_margin(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_left_margin$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_right_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$3160.const$2,"gtk_text_view_set_right_margin");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_right_margin(struct _GtkTextView* text_view, int right_margin);
     * }
     */
    public static void gtk_text_view_set_right_margin(MemorySegment text_view, int right_margin) {
        var mh$ = gtk_text_view_set_right_margin$MH();
        try {
            mh$.invokeExact(text_view, right_margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_right_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$3160.const$3,"gtk_text_view_get_right_margin");
    }
    /**
     * {@snippet :
     * int gtk_text_view_get_right_margin(struct _GtkTextView* text_view);
     * }
     */
    public static int gtk_text_view_get_right_margin(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_right_margin$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_top_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$3160.const$4,"gtk_text_view_set_top_margin");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_top_margin(struct _GtkTextView* text_view, int top_margin);
     * }
     */
    public static void gtk_text_view_set_top_margin(MemorySegment text_view, int top_margin) {
        var mh$ = gtk_text_view_set_top_margin$MH();
        try {
            mh$.invokeExact(text_view, top_margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_top_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$3160.const$5,"gtk_text_view_get_top_margin");
    }
    /**
     * {@snippet :
     * int gtk_text_view_get_top_margin(struct _GtkTextView* text_view);
     * }
     */
    public static int gtk_text_view_get_top_margin(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_top_margin$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_bottom_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$3161.const$0,"gtk_text_view_set_bottom_margin");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_bottom_margin(struct _GtkTextView* text_view, int bottom_margin);
     * }
     */
    public static void gtk_text_view_set_bottom_margin(MemorySegment text_view, int bottom_margin) {
        var mh$ = gtk_text_view_set_bottom_margin$MH();
        try {
            mh$.invokeExact(text_view, bottom_margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_bottom_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$3161.const$1,"gtk_text_view_get_bottom_margin");
    }
    /**
     * {@snippet :
     * int gtk_text_view_get_bottom_margin(struct _GtkTextView* text_view);
     * }
     */
    public static int gtk_text_view_get_bottom_margin(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_bottom_margin$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_indent$MH() {
        return RuntimeHelper.requireNonNull(constants$3161.const$2,"gtk_text_view_set_indent");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_indent(struct _GtkTextView* text_view, int indent);
     * }
     */
    public static void gtk_text_view_set_indent(MemorySegment text_view, int indent) {
        var mh$ = gtk_text_view_set_indent$MH();
        try {
            mh$.invokeExact(text_view, indent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_indent$MH() {
        return RuntimeHelper.requireNonNull(constants$3161.const$3,"gtk_text_view_get_indent");
    }
    /**
     * {@snippet :
     * int gtk_text_view_get_indent(struct _GtkTextView* text_view);
     * }
     */
    public static int gtk_text_view_get_indent(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_indent$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$3161.const$4,"gtk_text_view_set_tabs");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_tabs(struct _GtkTextView* text_view, struct _PangoTabArray* tabs);
     * }
     */
    public static void gtk_text_view_set_tabs(MemorySegment text_view, MemorySegment tabs) {
        var mh$ = gtk_text_view_set_tabs$MH();
        try {
            mh$.invokeExact(text_view, tabs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$3161.const$5,"gtk_text_view_get_tabs");
    }
    /**
     * {@snippet :
     * struct _PangoTabArray* gtk_text_view_get_tabs(struct _GtkTextView* text_view);
     * }
     */
    public static MemorySegment gtk_text_view_get_tabs(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_tabs$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_default_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$3162.const$0,"gtk_text_view_get_default_attributes");
    }
    /**
     * {@snippet :
     * struct _GtkTextAttributes* gtk_text_view_get_default_attributes(struct _GtkTextView* text_view);
     * }
     */
    public static MemorySegment gtk_text_view_get_default_attributes(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_default_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_input_purpose$MH() {
        return RuntimeHelper.requireNonNull(constants$3162.const$1,"gtk_text_view_set_input_purpose");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_input_purpose(struct _GtkTextView* text_view, enum GtkInputPurpose purpose);
     * }
     */
    public static void gtk_text_view_set_input_purpose(MemorySegment text_view, int purpose) {
        var mh$ = gtk_text_view_set_input_purpose$MH();
        try {
            mh$.invokeExact(text_view, purpose);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_input_purpose$MH() {
        return RuntimeHelper.requireNonNull(constants$3162.const$2,"gtk_text_view_get_input_purpose");
    }
    /**
     * {@snippet :
     * enum GtkInputPurpose gtk_text_view_get_input_purpose(struct _GtkTextView* text_view);
     * }
     */
    public static int gtk_text_view_get_input_purpose(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_input_purpose$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_input_hints$MH() {
        return RuntimeHelper.requireNonNull(constants$3162.const$3,"gtk_text_view_set_input_hints");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_input_hints(struct _GtkTextView* text_view, enum GtkInputHints hints);
     * }
     */
    public static void gtk_text_view_set_input_hints(MemorySegment text_view, int hints) {
        var mh$ = gtk_text_view_set_input_hints$MH();
        try {
            mh$.invokeExact(text_view, hints);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_input_hints$MH() {
        return RuntimeHelper.requireNonNull(constants$3162.const$4,"gtk_text_view_get_input_hints");
    }
    /**
     * {@snippet :
     * enum GtkInputHints gtk_text_view_get_input_hints(struct _GtkTextView* text_view);
     * }
     */
    public static int gtk_text_view_get_input_hints(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_input_hints$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_monospace$MH() {
        return RuntimeHelper.requireNonNull(constants$3162.const$5,"gtk_text_view_set_monospace");
    }
    /**
     * {@snippet :
     * void gtk_text_view_set_monospace(struct _GtkTextView* text_view, int monospace);
     * }
     */
    public static void gtk_text_view_set_monospace(MemorySegment text_view, int monospace) {
        var mh$ = gtk_text_view_set_monospace$MH();
        try {
            mh$.invokeExact(text_view, monospace);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_monospace$MH() {
        return RuntimeHelper.requireNonNull(constants$3163.const$0,"gtk_text_view_get_monospace");
    }
    /**
     * {@snippet :
     * int gtk_text_view_get_monospace(struct _GtkTextView* text_view);
     * }
     */
    public static int gtk_text_view_get_monospace(MemorySegment text_view) {
        var mh$ = gtk_text_view_get_monospace$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkToolbarSpaceStyle.GTK_TOOLBAR_SPACE_EMPTY = 0;
     * }
     */
    public static int GTK_TOOLBAR_SPACE_EMPTY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkToolbarSpaceStyle.GTK_TOOLBAR_SPACE_LINE = 1;
     * }
     */
    public static int GTK_TOOLBAR_SPACE_LINE() {
        return (int)1L;
    }
    public static MethodHandle gtk_toolbar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3166.const$0,"gtk_toolbar_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_toolbar_get_type();
     * }
     */
    public static long gtk_toolbar_get_type() {
        var mh$ = gtk_toolbar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toolbar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3166.const$1,"gtk_toolbar_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_toolbar_new();
     * }
     */
    public static MemorySegment gtk_toolbar_new() {
        var mh$ = gtk_toolbar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toolbar_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$3166.const$2,"gtk_toolbar_insert");
    }
    /**
     * {@snippet :
     * void gtk_toolbar_insert(struct _GtkToolbar* toolbar, struct _GtkToolItem* item, int pos);
     * }
     */
    public static void gtk_toolbar_insert(MemorySegment toolbar, MemorySegment item, int pos) {
        var mh$ = gtk_toolbar_insert$MH();
        try {
            mh$.invokeExact(toolbar, item, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toolbar_get_item_index$MH() {
        return RuntimeHelper.requireNonNull(constants$3166.const$3,"gtk_toolbar_get_item_index");
    }
    /**
     * {@snippet :
     * int gtk_toolbar_get_item_index(struct _GtkToolbar* toolbar, struct _GtkToolItem* item);
     * }
     */
    public static int gtk_toolbar_get_item_index(MemorySegment toolbar, MemorySegment item) {
        var mh$ = gtk_toolbar_get_item_index$MH();
        try {
            return (int)mh$.invokeExact(toolbar, item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toolbar_get_n_items$MH() {
        return RuntimeHelper.requireNonNull(constants$3166.const$4,"gtk_toolbar_get_n_items");
    }
    /**
     * {@snippet :
     * int gtk_toolbar_get_n_items(struct _GtkToolbar* toolbar);
     * }
     */
    public static int gtk_toolbar_get_n_items(MemorySegment toolbar) {
        var mh$ = gtk_toolbar_get_n_items$MH();
        try {
            return (int)mh$.invokeExact(toolbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toolbar_get_nth_item$MH() {
        return RuntimeHelper.requireNonNull(constants$3166.const$5,"gtk_toolbar_get_nth_item");
    }
    /**
     * {@snippet :
     * struct _GtkToolItem* gtk_toolbar_get_nth_item(struct _GtkToolbar* toolbar, int n);
     * }
     */
    public static MemorySegment gtk_toolbar_get_nth_item(MemorySegment toolbar, int n) {
        var mh$ = gtk_toolbar_get_nth_item$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(toolbar, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toolbar_get_show_arrow$MH() {
        return RuntimeHelper.requireNonNull(constants$3167.const$0,"gtk_toolbar_get_show_arrow");
    }
    /**
     * {@snippet :
     * int gtk_toolbar_get_show_arrow(struct _GtkToolbar* toolbar);
     * }
     */
    public static int gtk_toolbar_get_show_arrow(MemorySegment toolbar) {
        var mh$ = gtk_toolbar_get_show_arrow$MH();
        try {
            return (int)mh$.invokeExact(toolbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toolbar_set_show_arrow$MH() {
        return RuntimeHelper.requireNonNull(constants$3167.const$1,"gtk_toolbar_set_show_arrow");
    }
    /**
     * {@snippet :
     * void gtk_toolbar_set_show_arrow(struct _GtkToolbar* toolbar, int show_arrow);
     * }
     */
    public static void gtk_toolbar_set_show_arrow(MemorySegment toolbar, int show_arrow) {
        var mh$ = gtk_toolbar_set_show_arrow$MH();
        try {
            mh$.invokeExact(toolbar, show_arrow);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toolbar_get_style$MH() {
        return RuntimeHelper.requireNonNull(constants$3167.const$2,"gtk_toolbar_get_style");
    }
    /**
     * {@snippet :
     * enum GtkToolbarStyle gtk_toolbar_get_style(struct _GtkToolbar* toolbar);
     * }
     */
    public static int gtk_toolbar_get_style(MemorySegment toolbar) {
        var mh$ = gtk_toolbar_get_style$MH();
        try {
            return (int)mh$.invokeExact(toolbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toolbar_set_style$MH() {
        return RuntimeHelper.requireNonNull(constants$3167.const$3,"gtk_toolbar_set_style");
    }
    /**
     * {@snippet :
     * void gtk_toolbar_set_style(struct _GtkToolbar* toolbar, enum GtkToolbarStyle style);
     * }
     */
    public static void gtk_toolbar_set_style(MemorySegment toolbar, int style) {
        var mh$ = gtk_toolbar_set_style$MH();
        try {
            mh$.invokeExact(toolbar, style);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toolbar_unset_style$MH() {
        return RuntimeHelper.requireNonNull(constants$3167.const$4,"gtk_toolbar_unset_style");
    }
    /**
     * {@snippet :
     * void gtk_toolbar_unset_style(struct _GtkToolbar* toolbar);
     * }
     */
    public static void gtk_toolbar_unset_style(MemorySegment toolbar) {
        var mh$ = gtk_toolbar_unset_style$MH();
        try {
            mh$.invokeExact(toolbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toolbar_get_icon_size$MH() {
        return RuntimeHelper.requireNonNull(constants$3167.const$5,"gtk_toolbar_get_icon_size");
    }
    /**
     * {@snippet :
     * enum GtkIconSize gtk_toolbar_get_icon_size(struct _GtkToolbar* toolbar);
     * }
     */
    public static int gtk_toolbar_get_icon_size(MemorySegment toolbar) {
        var mh$ = gtk_toolbar_get_icon_size$MH();
        try {
            return (int)mh$.invokeExact(toolbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toolbar_set_icon_size$MH() {
        return RuntimeHelper.requireNonNull(constants$3168.const$0,"gtk_toolbar_set_icon_size");
    }
    /**
     * {@snippet :
     * void gtk_toolbar_set_icon_size(struct _GtkToolbar* toolbar, enum GtkIconSize icon_size);
     * }
     */
    public static void gtk_toolbar_set_icon_size(MemorySegment toolbar, int icon_size) {
        var mh$ = gtk_toolbar_set_icon_size$MH();
        try {
            mh$.invokeExact(toolbar, icon_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toolbar_unset_icon_size$MH() {
        return RuntimeHelper.requireNonNull(constants$3168.const$1,"gtk_toolbar_unset_icon_size");
    }
    /**
     * {@snippet :
     * void gtk_toolbar_unset_icon_size(struct _GtkToolbar* toolbar);
     * }
     */
    public static void gtk_toolbar_unset_icon_size(MemorySegment toolbar) {
        var mh$ = gtk_toolbar_unset_icon_size$MH();
        try {
            mh$.invokeExact(toolbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toolbar_get_relief_style$MH() {
        return RuntimeHelper.requireNonNull(constants$3168.const$2,"gtk_toolbar_get_relief_style");
    }
    /**
     * {@snippet :
     * enum GtkReliefStyle gtk_toolbar_get_relief_style(struct _GtkToolbar* toolbar);
     * }
     */
    public static int gtk_toolbar_get_relief_style(MemorySegment toolbar) {
        var mh$ = gtk_toolbar_get_relief_style$MH();
        try {
            return (int)mh$.invokeExact(toolbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toolbar_get_drop_index$MH() {
        return RuntimeHelper.requireNonNull(constants$3168.const$3,"gtk_toolbar_get_drop_index");
    }
    /**
     * {@snippet :
     * int gtk_toolbar_get_drop_index(struct _GtkToolbar* toolbar, int x, int y);
     * }
     */
    public static int gtk_toolbar_get_drop_index(MemorySegment toolbar, int x, int y) {
        var mh$ = gtk_toolbar_get_drop_index$MH();
        try {
            return (int)mh$.invokeExact(toolbar, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toolbar_set_drop_highlight_item$MH() {
        return RuntimeHelper.requireNonNull(constants$3168.const$4,"gtk_toolbar_set_drop_highlight_item");
    }
    /**
     * {@snippet :
     * void gtk_toolbar_set_drop_highlight_item(struct _GtkToolbar* toolbar, struct _GtkToolItem* tool_item, int index_);
     * }
     */
    public static void gtk_toolbar_set_drop_highlight_item(MemorySegment toolbar, MemorySegment tool_item, int index_) {
        var mh$ = gtk_toolbar_set_drop_highlight_item$MH();
        try {
            mh$.invokeExact(toolbar, tool_item, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3170.const$4,"gtk_tool_item_group_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tool_item_group_get_type();
     * }
     */
    public static long gtk_tool_item_group_get_type() {
        var mh$ = gtk_tool_item_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_group_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3170.const$5,"gtk_tool_item_group_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_tool_item_group_new(char* label);
     * }
     */
    public static MemorySegment gtk_tool_item_group_new(MemorySegment label) {
        var mh$ = gtk_tool_item_group_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_group_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$3171.const$0,"gtk_tool_item_group_set_label");
    }
    /**
     * {@snippet :
     * void gtk_tool_item_group_set_label(struct _GtkToolItemGroup* group, char* label);
     * }
     */
    public static void gtk_tool_item_group_set_label(MemorySegment group, MemorySegment label) {
        var mh$ = gtk_tool_item_group_set_label$MH();
        try {
            mh$.invokeExact(group, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_group_set_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$3171.const$1,"gtk_tool_item_group_set_label_widget");
    }
    /**
     * {@snippet :
     * void gtk_tool_item_group_set_label_widget(struct _GtkToolItemGroup* group, struct _GtkWidget* label_widget);
     * }
     */
    public static void gtk_tool_item_group_set_label_widget(MemorySegment group, MemorySegment label_widget) {
        var mh$ = gtk_tool_item_group_set_label_widget$MH();
        try {
            mh$.invokeExact(group, label_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_group_set_collapsed$MH() {
        return RuntimeHelper.requireNonNull(constants$3171.const$2,"gtk_tool_item_group_set_collapsed");
    }
    /**
     * {@snippet :
     * void gtk_tool_item_group_set_collapsed(struct _GtkToolItemGroup* group, int collapsed);
     * }
     */
    public static void gtk_tool_item_group_set_collapsed(MemorySegment group, int collapsed) {
        var mh$ = gtk_tool_item_group_set_collapsed$MH();
        try {
            mh$.invokeExact(group, collapsed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_group_set_ellipsize$MH() {
        return RuntimeHelper.requireNonNull(constants$3171.const$3,"gtk_tool_item_group_set_ellipsize");
    }
    /**
     * {@snippet :
     * void gtk_tool_item_group_set_ellipsize(struct _GtkToolItemGroup* group, enum PangoEllipsizeMode ellipsize);
     * }
     */
    public static void gtk_tool_item_group_set_ellipsize(MemorySegment group, int ellipsize) {
        var mh$ = gtk_tool_item_group_set_ellipsize$MH();
        try {
            mh$.invokeExact(group, ellipsize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_group_set_header_relief$MH() {
        return RuntimeHelper.requireNonNull(constants$3171.const$4,"gtk_tool_item_group_set_header_relief");
    }
    /**
     * {@snippet :
     * void gtk_tool_item_group_set_header_relief(struct _GtkToolItemGroup* group, enum GtkReliefStyle style);
     * }
     */
    public static void gtk_tool_item_group_set_header_relief(MemorySegment group, int style) {
        var mh$ = gtk_tool_item_group_set_header_relief$MH();
        try {
            mh$.invokeExact(group, style);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_group_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$3171.const$5,"gtk_tool_item_group_get_label");
    }
    /**
     * {@snippet :
     * char* gtk_tool_item_group_get_label(struct _GtkToolItemGroup* group);
     * }
     */
    public static MemorySegment gtk_tool_item_group_get_label(MemorySegment group) {
        var mh$ = gtk_tool_item_group_get_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_group_get_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$3172.const$0,"gtk_tool_item_group_get_label_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_tool_item_group_get_label_widget(struct _GtkToolItemGroup* group);
     * }
     */
    public static MemorySegment gtk_tool_item_group_get_label_widget(MemorySegment group) {
        var mh$ = gtk_tool_item_group_get_label_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_group_get_collapsed$MH() {
        return RuntimeHelper.requireNonNull(constants$3172.const$1,"gtk_tool_item_group_get_collapsed");
    }
    /**
     * {@snippet :
     * int gtk_tool_item_group_get_collapsed(struct _GtkToolItemGroup* group);
     * }
     */
    public static int gtk_tool_item_group_get_collapsed(MemorySegment group) {
        var mh$ = gtk_tool_item_group_get_collapsed$MH();
        try {
            return (int)mh$.invokeExact(group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_group_get_ellipsize$MH() {
        return RuntimeHelper.requireNonNull(constants$3172.const$2,"gtk_tool_item_group_get_ellipsize");
    }
    /**
     * {@snippet :
     * enum PangoEllipsizeMode gtk_tool_item_group_get_ellipsize(struct _GtkToolItemGroup* group);
     * }
     */
    public static int gtk_tool_item_group_get_ellipsize(MemorySegment group) {
        var mh$ = gtk_tool_item_group_get_ellipsize$MH();
        try {
            return (int)mh$.invokeExact(group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_group_get_header_relief$MH() {
        return RuntimeHelper.requireNonNull(constants$3172.const$3,"gtk_tool_item_group_get_header_relief");
    }
    /**
     * {@snippet :
     * enum GtkReliefStyle gtk_tool_item_group_get_header_relief(struct _GtkToolItemGroup* group);
     * }
     */
    public static int gtk_tool_item_group_get_header_relief(MemorySegment group) {
        var mh$ = gtk_tool_item_group_get_header_relief$MH();
        try {
            return (int)mh$.invokeExact(group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_group_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$3172.const$4,"gtk_tool_item_group_insert");
    }
    /**
     * {@snippet :
     * void gtk_tool_item_group_insert(struct _GtkToolItemGroup* group, struct _GtkToolItem* item, int position);
     * }
     */
    public static void gtk_tool_item_group_insert(MemorySegment group, MemorySegment item, int position) {
        var mh$ = gtk_tool_item_group_insert$MH();
        try {
            mh$.invokeExact(group, item, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_group_set_item_position$MH() {
        return RuntimeHelper.requireNonNull(constants$3172.const$5,"gtk_tool_item_group_set_item_position");
    }
    /**
     * {@snippet :
     * void gtk_tool_item_group_set_item_position(struct _GtkToolItemGroup* group, struct _GtkToolItem* item, int position);
     * }
     */
    public static void gtk_tool_item_group_set_item_position(MemorySegment group, MemorySegment item, int position) {
        var mh$ = gtk_tool_item_group_set_item_position$MH();
        try {
            mh$.invokeExact(group, item, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_group_get_item_position$MH() {
        return RuntimeHelper.requireNonNull(constants$3173.const$0,"gtk_tool_item_group_get_item_position");
    }
    /**
     * {@snippet :
     * int gtk_tool_item_group_get_item_position(struct _GtkToolItemGroup* group, struct _GtkToolItem* item);
     * }
     */
    public static int gtk_tool_item_group_get_item_position(MemorySegment group, MemorySegment item) {
        var mh$ = gtk_tool_item_group_get_item_position$MH();
        try {
            return (int)mh$.invokeExact(group, item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_group_get_n_items$MH() {
        return RuntimeHelper.requireNonNull(constants$3173.const$1,"gtk_tool_item_group_get_n_items");
    }
    /**
     * {@snippet :
     * unsigned int gtk_tool_item_group_get_n_items(struct _GtkToolItemGroup* group);
     * }
     */
    public static int gtk_tool_item_group_get_n_items(MemorySegment group) {
        var mh$ = gtk_tool_item_group_get_n_items$MH();
        try {
            return (int)mh$.invokeExact(group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_group_get_nth_item$MH() {
        return RuntimeHelper.requireNonNull(constants$3173.const$2,"gtk_tool_item_group_get_nth_item");
    }
    /**
     * {@snippet :
     * struct _GtkToolItem* gtk_tool_item_group_get_nth_item(struct _GtkToolItemGroup* group, unsigned int index);
     * }
     */
    public static MemorySegment gtk_tool_item_group_get_nth_item(MemorySegment group, int index) {
        var mh$ = gtk_tool_item_group_get_nth_item$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(group, index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_group_get_drop_item$MH() {
        return RuntimeHelper.requireNonNull(constants$3173.const$3,"gtk_tool_item_group_get_drop_item");
    }
    /**
     * {@snippet :
     * struct _GtkToolItem* gtk_tool_item_group_get_drop_item(struct _GtkToolItemGroup* group, int x, int y);
     * }
     */
    public static MemorySegment gtk_tool_item_group_get_drop_item(MemorySegment group, int x, int y) {
        var mh$ = gtk_tool_item_group_get_drop_item$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(group, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkToolPaletteDragTargets.GTK_TOOL_PALETTE_DRAG_ITEMS = 1;
     * }
     */
    public static int GTK_TOOL_PALETTE_DRAG_ITEMS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkToolPaletteDragTargets.GTK_TOOL_PALETTE_DRAG_GROUPS = 2;
     * }
     */
    public static int GTK_TOOL_PALETTE_DRAG_GROUPS() {
        return (int)2L;
    }
    public static MethodHandle gtk_tool_palette_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3175.const$3,"gtk_tool_palette_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tool_palette_get_type();
     * }
     */
    public static long gtk_tool_palette_get_type() {
        var mh$ = gtk_tool_palette_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3175.const$4,"gtk_tool_palette_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_tool_palette_new();
     * }
     */
    public static MemorySegment gtk_tool_palette_new() {
        var mh$ = gtk_tool_palette_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_set_group_position$MH() {
        return RuntimeHelper.requireNonNull(constants$3175.const$5,"gtk_tool_palette_set_group_position");
    }
    /**
     * {@snippet :
     * void gtk_tool_palette_set_group_position(struct _GtkToolPalette* palette, struct _GtkToolItemGroup* group, int position);
     * }
     */
    public static void gtk_tool_palette_set_group_position(MemorySegment palette, MemorySegment group, int position) {
        var mh$ = gtk_tool_palette_set_group_position$MH();
        try {
            mh$.invokeExact(palette, group, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_set_exclusive$MH() {
        return RuntimeHelper.requireNonNull(constants$3176.const$0,"gtk_tool_palette_set_exclusive");
    }
    /**
     * {@snippet :
     * void gtk_tool_palette_set_exclusive(struct _GtkToolPalette* palette, struct _GtkToolItemGroup* group, int exclusive);
     * }
     */
    public static void gtk_tool_palette_set_exclusive(MemorySegment palette, MemorySegment group, int exclusive) {
        var mh$ = gtk_tool_palette_set_exclusive$MH();
        try {
            mh$.invokeExact(palette, group, exclusive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_set_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$3176.const$1,"gtk_tool_palette_set_expand");
    }
    /**
     * {@snippet :
     * void gtk_tool_palette_set_expand(struct _GtkToolPalette* palette, struct _GtkToolItemGroup* group, int expand);
     * }
     */
    public static void gtk_tool_palette_set_expand(MemorySegment palette, MemorySegment group, int expand) {
        var mh$ = gtk_tool_palette_set_expand$MH();
        try {
            mh$.invokeExact(palette, group, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_get_group_position$MH() {
        return RuntimeHelper.requireNonNull(constants$3176.const$2,"gtk_tool_palette_get_group_position");
    }
    /**
     * {@snippet :
     * int gtk_tool_palette_get_group_position(struct _GtkToolPalette* palette, struct _GtkToolItemGroup* group);
     * }
     */
    public static int gtk_tool_palette_get_group_position(MemorySegment palette, MemorySegment group) {
        var mh$ = gtk_tool_palette_get_group_position$MH();
        try {
            return (int)mh$.invokeExact(palette, group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_get_exclusive$MH() {
        return RuntimeHelper.requireNonNull(constants$3176.const$3,"gtk_tool_palette_get_exclusive");
    }
    /**
     * {@snippet :
     * int gtk_tool_palette_get_exclusive(struct _GtkToolPalette* palette, struct _GtkToolItemGroup* group);
     * }
     */
    public static int gtk_tool_palette_get_exclusive(MemorySegment palette, MemorySegment group) {
        var mh$ = gtk_tool_palette_get_exclusive$MH();
        try {
            return (int)mh$.invokeExact(palette, group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_get_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$3176.const$4,"gtk_tool_palette_get_expand");
    }
    /**
     * {@snippet :
     * int gtk_tool_palette_get_expand(struct _GtkToolPalette* palette, struct _GtkToolItemGroup* group);
     * }
     */
    public static int gtk_tool_palette_get_expand(MemorySegment palette, MemorySegment group) {
        var mh$ = gtk_tool_palette_get_expand$MH();
        try {
            return (int)mh$.invokeExact(palette, group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_set_icon_size$MH() {
        return RuntimeHelper.requireNonNull(constants$3176.const$5,"gtk_tool_palette_set_icon_size");
    }
    /**
     * {@snippet :
     * void gtk_tool_palette_set_icon_size(struct _GtkToolPalette* palette, enum GtkIconSize icon_size);
     * }
     */
    public static void gtk_tool_palette_set_icon_size(MemorySegment palette, int icon_size) {
        var mh$ = gtk_tool_palette_set_icon_size$MH();
        try {
            mh$.invokeExact(palette, icon_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_unset_icon_size$MH() {
        return RuntimeHelper.requireNonNull(constants$3177.const$0,"gtk_tool_palette_unset_icon_size");
    }
    /**
     * {@snippet :
     * void gtk_tool_palette_unset_icon_size(struct _GtkToolPalette* palette);
     * }
     */
    public static void gtk_tool_palette_unset_icon_size(MemorySegment palette) {
        var mh$ = gtk_tool_palette_unset_icon_size$MH();
        try {
            mh$.invokeExact(palette);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_set_style$MH() {
        return RuntimeHelper.requireNonNull(constants$3177.const$1,"gtk_tool_palette_set_style");
    }
    /**
     * {@snippet :
     * void gtk_tool_palette_set_style(struct _GtkToolPalette* palette, enum GtkToolbarStyle style);
     * }
     */
    public static void gtk_tool_palette_set_style(MemorySegment palette, int style) {
        var mh$ = gtk_tool_palette_set_style$MH();
        try {
            mh$.invokeExact(palette, style);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_unset_style$MH() {
        return RuntimeHelper.requireNonNull(constants$3177.const$2,"gtk_tool_palette_unset_style");
    }
    /**
     * {@snippet :
     * void gtk_tool_palette_unset_style(struct _GtkToolPalette* palette);
     * }
     */
    public static void gtk_tool_palette_unset_style(MemorySegment palette) {
        var mh$ = gtk_tool_palette_unset_style$MH();
        try {
            mh$.invokeExact(palette);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_get_icon_size$MH() {
        return RuntimeHelper.requireNonNull(constants$3177.const$3,"gtk_tool_palette_get_icon_size");
    }
    /**
     * {@snippet :
     * enum GtkIconSize gtk_tool_palette_get_icon_size(struct _GtkToolPalette* palette);
     * }
     */
    public static int gtk_tool_palette_get_icon_size(MemorySegment palette) {
        var mh$ = gtk_tool_palette_get_icon_size$MH();
        try {
            return (int)mh$.invokeExact(palette);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_get_style$MH() {
        return RuntimeHelper.requireNonNull(constants$3177.const$4,"gtk_tool_palette_get_style");
    }
    /**
     * {@snippet :
     * enum GtkToolbarStyle gtk_tool_palette_get_style(struct _GtkToolPalette* palette);
     * }
     */
    public static int gtk_tool_palette_get_style(MemorySegment palette) {
        var mh$ = gtk_tool_palette_get_style$MH();
        try {
            return (int)mh$.invokeExact(palette);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_get_drop_item$MH() {
        return RuntimeHelper.requireNonNull(constants$3177.const$5,"gtk_tool_palette_get_drop_item");
    }
    /**
     * {@snippet :
     * struct _GtkToolItem* gtk_tool_palette_get_drop_item(struct _GtkToolPalette* palette, int x, int y);
     * }
     */
    public static MemorySegment gtk_tool_palette_get_drop_item(MemorySegment palette, int x, int y) {
        var mh$ = gtk_tool_palette_get_drop_item$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(palette, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_get_drop_group$MH() {
        return RuntimeHelper.requireNonNull(constants$3178.const$0,"gtk_tool_palette_get_drop_group");
    }
    /**
     * {@snippet :
     * struct _GtkToolItemGroup* gtk_tool_palette_get_drop_group(struct _GtkToolPalette* palette, int x, int y);
     * }
     */
    public static MemorySegment gtk_tool_palette_get_drop_group(MemorySegment palette, int x, int y) {
        var mh$ = gtk_tool_palette_get_drop_group$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(palette, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_get_drag_item$MH() {
        return RuntimeHelper.requireNonNull(constants$3178.const$1,"gtk_tool_palette_get_drag_item");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_tool_palette_get_drag_item(struct _GtkToolPalette* palette, struct _GtkSelectionData* selection);
     * }
     */
    public static MemorySegment gtk_tool_palette_get_drag_item(MemorySegment palette, MemorySegment selection) {
        var mh$ = gtk_tool_palette_get_drag_item$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(palette, selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_set_drag_source$MH() {
        return RuntimeHelper.requireNonNull(constants$3178.const$2,"gtk_tool_palette_set_drag_source");
    }
    /**
     * {@snippet :
     * void gtk_tool_palette_set_drag_source(struct _GtkToolPalette* palette, enum GtkToolPaletteDragTargets targets);
     * }
     */
    public static void gtk_tool_palette_set_drag_source(MemorySegment palette, int targets) {
        var mh$ = gtk_tool_palette_set_drag_source$MH();
        try {
            mh$.invokeExact(palette, targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_add_drag_dest$MH() {
        return RuntimeHelper.requireNonNull(constants$3178.const$3,"gtk_tool_palette_add_drag_dest");
    }
    /**
     * {@snippet :
     * void gtk_tool_palette_add_drag_dest(struct _GtkToolPalette* palette, struct _GtkWidget* widget, enum GtkDestDefaults flags, enum GtkToolPaletteDragTargets targets, enum GdkDragAction actions);
     * }
     */
    public static void gtk_tool_palette_add_drag_dest(MemorySegment palette, MemorySegment widget, int flags, int targets, int actions) {
        var mh$ = gtk_tool_palette_add_drag_dest$MH();
        try {
            mh$.invokeExact(palette, widget, flags, targets, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_get_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3178.const$4,"gtk_tool_palette_get_hadjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_tool_palette_get_hadjustment(struct _GtkToolPalette* palette);
     * }
     */
    public static MemorySegment gtk_tool_palette_get_hadjustment(MemorySegment palette) {
        var mh$ = gtk_tool_palette_get_hadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(palette);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_get_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3178.const$5,"gtk_tool_palette_get_vadjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_tool_palette_get_vadjustment(struct _GtkToolPalette* palette);
     * }
     */
    public static MemorySegment gtk_tool_palette_get_vadjustment(MemorySegment palette) {
        var mh$ = gtk_tool_palette_get_vadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(palette);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_get_drag_target_item$MH() {
        return RuntimeHelper.requireNonNull(constants$3179.const$0,"gtk_tool_palette_get_drag_target_item");
    }
    /**
     * {@snippet :
     * struct _GtkTargetEntry* gtk_tool_palette_get_drag_target_item();
     * }
     */
    public static MemorySegment gtk_tool_palette_get_drag_target_item() {
        var mh$ = gtk_tool_palette_get_drag_target_item$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_get_drag_target_group$MH() {
        return RuntimeHelper.requireNonNull(constants$3179.const$1,"gtk_tool_palette_get_drag_target_group");
    }
    /**
     * {@snippet :
     * struct _GtkTargetEntry* gtk_tool_palette_get_drag_target_group();
     * }
     */
    public static MemorySegment gtk_tool_palette_get_drag_target_group() {
        var mh$ = gtk_tool_palette_get_drag_target_group$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_shell_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3182.const$4,"gtk_tool_shell_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tool_shell_get_type();
     * }
     */
    public static long gtk_tool_shell_get_type() {
        var mh$ = gtk_tool_shell_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_shell_get_icon_size$MH() {
        return RuntimeHelper.requireNonNull(constants$3182.const$5,"gtk_tool_shell_get_icon_size");
    }
    /**
     * {@snippet :
     * enum GtkIconSize gtk_tool_shell_get_icon_size(struct _GtkToolShell* shell);
     * }
     */
    public static int gtk_tool_shell_get_icon_size(MemorySegment shell) {
        var mh$ = gtk_tool_shell_get_icon_size$MH();
        try {
            return (int)mh$.invokeExact(shell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_shell_get_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$3183.const$0,"gtk_tool_shell_get_orientation");
    }
    /**
     * {@snippet :
     * enum GtkOrientation gtk_tool_shell_get_orientation(struct _GtkToolShell* shell);
     * }
     */
    public static int gtk_tool_shell_get_orientation(MemorySegment shell) {
        var mh$ = gtk_tool_shell_get_orientation$MH();
        try {
            return (int)mh$.invokeExact(shell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_shell_get_style$MH() {
        return RuntimeHelper.requireNonNull(constants$3183.const$1,"gtk_tool_shell_get_style");
    }
    /**
     * {@snippet :
     * enum GtkToolbarStyle gtk_tool_shell_get_style(struct _GtkToolShell* shell);
     * }
     */
    public static int gtk_tool_shell_get_style(MemorySegment shell) {
        var mh$ = gtk_tool_shell_get_style$MH();
        try {
            return (int)mh$.invokeExact(shell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_shell_get_relief_style$MH() {
        return RuntimeHelper.requireNonNull(constants$3183.const$2,"gtk_tool_shell_get_relief_style");
    }
    /**
     * {@snippet :
     * enum GtkReliefStyle gtk_tool_shell_get_relief_style(struct _GtkToolShell* shell);
     * }
     */
    public static int gtk_tool_shell_get_relief_style(MemorySegment shell) {
        var mh$ = gtk_tool_shell_get_relief_style$MH();
        try {
            return (int)mh$.invokeExact(shell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_shell_rebuild_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$3183.const$3,"gtk_tool_shell_rebuild_menu");
    }
    /**
     * {@snippet :
     * void gtk_tool_shell_rebuild_menu(struct _GtkToolShell* shell);
     * }
     */
    public static void gtk_tool_shell_rebuild_menu(MemorySegment shell) {
        var mh$ = gtk_tool_shell_rebuild_menu$MH();
        try {
            mh$.invokeExact(shell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_shell_get_text_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$3183.const$4,"gtk_tool_shell_get_text_orientation");
    }
    /**
     * {@snippet :
     * enum GtkOrientation gtk_tool_shell_get_text_orientation(struct _GtkToolShell* shell);
     * }
     */
    public static int gtk_tool_shell_get_text_orientation(MemorySegment shell) {
        var mh$ = gtk_tool_shell_get_text_orientation$MH();
        try {
            return (int)mh$.invokeExact(shell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_shell_get_text_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$3183.const$5,"gtk_tool_shell_get_text_alignment");
    }
    /**
     * {@snippet :
     * float gtk_tool_shell_get_text_alignment(struct _GtkToolShell* shell);
     * }
     */
    public static float gtk_tool_shell_get_text_alignment(MemorySegment shell) {
        var mh$ = gtk_tool_shell_get_text_alignment$MH();
        try {
            return (float)mh$.invokeExact(shell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_shell_get_ellipsize_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$3184.const$0,"gtk_tool_shell_get_ellipsize_mode");
    }
    /**
     * {@snippet :
     * enum PangoEllipsizeMode gtk_tool_shell_get_ellipsize_mode(struct _GtkToolShell* shell);
     * }
     */
    public static int gtk_tool_shell_get_ellipsize_mode(MemorySegment shell) {
        var mh$ = gtk_tool_shell_get_ellipsize_mode$MH();
        try {
            return (int)mh$.invokeExact(shell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_shell_get_text_size_group$MH() {
        return RuntimeHelper.requireNonNull(constants$3184.const$1,"gtk_tool_shell_get_text_size_group");
    }
    /**
     * {@snippet :
     * struct _GtkSizeGroup* gtk_tool_shell_get_text_size_group(struct _GtkToolShell* shell);
     * }
     */
    public static MemorySegment gtk_tool_shell_get_text_size_group(MemorySegment shell) {
        var mh$ = gtk_tool_shell_get_text_size_group$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(shell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_init$MH() {
        return RuntimeHelper.requireNonNull(constants$3184.const$2,"gtk_test_init");
    }
    /**
     * {@snippet :
     * void gtk_test_init(int* argcp, char*** argvp,...);
     * }
     */
    public static void gtk_test_init(MemorySegment argcp, MemorySegment argvp, Object... x2) {
        var mh$ = gtk_test_init$MH();
        try {
            mh$.invokeExact(argcp, argvp, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_register_all_types$MH() {
        return RuntimeHelper.requireNonNull(constants$3184.const$3,"gtk_test_register_all_types");
    }
    /**
     * {@snippet :
     * void gtk_test_register_all_types();
     * }
     */
    public static void gtk_test_register_all_types() {
        var mh$ = gtk_test_register_all_types$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_list_all_types$MH() {
        return RuntimeHelper.requireNonNull(constants$3184.const$4,"gtk_test_list_all_types");
    }
    /**
     * {@snippet :
     * unsigned long* gtk_test_list_all_types(unsigned int* n_types);
     * }
     */
    public static MemorySegment gtk_test_list_all_types(MemorySegment n_types) {
        var mh$ = gtk_test_list_all_types$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(n_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_find_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$3184.const$5,"gtk_test_find_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_test_find_widget(struct _GtkWidget* widget, char* label_pattern, unsigned long widget_type);
     * }
     */
    public static MemorySegment gtk_test_find_widget(MemorySegment widget, MemorySegment label_pattern, long widget_type) {
        var mh$ = gtk_test_find_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, label_pattern, widget_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_create_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$3185.const$0,"gtk_test_create_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_test_create_widget(unsigned long widget_type, char* first_property_name,...);
     * }
     */
    public static MemorySegment gtk_test_create_widget(long widget_type, MemorySegment first_property_name, Object... x2) {
        var mh$ = gtk_test_create_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget_type, first_property_name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_create_simple_window$MH() {
        return RuntimeHelper.requireNonNull(constants$3185.const$1,"gtk_test_create_simple_window");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_test_create_simple_window(char* window_title, char* dialog_text);
     * }
     */
    public static MemorySegment gtk_test_create_simple_window(MemorySegment window_title, MemorySegment dialog_text) {
        var mh$ = gtk_test_create_simple_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window_title, dialog_text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_display_button_window$MH() {
        return RuntimeHelper.requireNonNull(constants$3185.const$2,"gtk_test_display_button_window");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_test_display_button_window(char* window_title, char* dialog_text,...);
     * }
     */
    public static MemorySegment gtk_test_display_button_window(MemorySegment window_title, MemorySegment dialog_text, Object... x2) {
        var mh$ = gtk_test_display_button_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window_title, dialog_text, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_slider_set_perc$MH() {
        return RuntimeHelper.requireNonNull(constants$3185.const$3,"gtk_test_slider_set_perc");
    }
    /**
     * {@snippet :
     * void gtk_test_slider_set_perc(struct _GtkWidget* widget, double percentage);
     * }
     */
    public static void gtk_test_slider_set_perc(MemorySegment widget, double percentage) {
        var mh$ = gtk_test_slider_set_perc$MH();
        try {
            mh$.invokeExact(widget, percentage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_slider_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$3185.const$4,"gtk_test_slider_get_value");
    }
    /**
     * {@snippet :
     * double gtk_test_slider_get_value(struct _GtkWidget* widget);
     * }
     */
    public static double gtk_test_slider_get_value(MemorySegment widget) {
        var mh$ = gtk_test_slider_get_value$MH();
        try {
            return (double)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_spin_button_click$MH() {
        return RuntimeHelper.requireNonNull(constants$3185.const$5,"gtk_test_spin_button_click");
    }
    /**
     * {@snippet :
     * int gtk_test_spin_button_click(struct _GtkSpinButton* spinner, unsigned int button, int upwards);
     * }
     */
    public static int gtk_test_spin_button_click(MemorySegment spinner, int button, int upwards) {
        var mh$ = gtk_test_spin_button_click$MH();
        try {
            return (int)mh$.invokeExact(spinner, button, upwards);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_widget_wait_for_draw$MH() {
        return RuntimeHelper.requireNonNull(constants$3186.const$0,"gtk_test_widget_wait_for_draw");
    }
    /**
     * {@snippet :
     * void gtk_test_widget_wait_for_draw(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_test_widget_wait_for_draw(MemorySegment widget) {
        var mh$ = gtk_test_widget_wait_for_draw$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_widget_click$MH() {
        return RuntimeHelper.requireNonNull(constants$3186.const$1,"gtk_test_widget_click");
    }
    /**
     * {@snippet :
     * int gtk_test_widget_click(struct _GtkWidget* widget, unsigned int button, enum GdkModifierType modifiers);
     * }
     */
    public static int gtk_test_widget_click(MemorySegment widget, int button, int modifiers) {
        var mh$ = gtk_test_widget_click$MH();
        try {
            return (int)mh$.invokeExact(widget, button, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_widget_send_key$MH() {
        return RuntimeHelper.requireNonNull(constants$3186.const$2,"gtk_test_widget_send_key");
    }
    /**
     * {@snippet :
     * int gtk_test_widget_send_key(struct _GtkWidget* widget, unsigned int keyval, enum GdkModifierType modifiers);
     * }
     */
    public static int gtk_test_widget_send_key(MemorySegment widget, int keyval, int modifiers) {
        var mh$ = gtk_test_widget_send_key$MH();
        try {
            return (int)mh$.invokeExact(widget, keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_text_set$MH() {
        return RuntimeHelper.requireNonNull(constants$3186.const$3,"gtk_test_text_set");
    }
    /**
     * {@snippet :
     * void gtk_test_text_set(struct _GtkWidget* widget, char* string);
     * }
     */
    public static void gtk_test_text_set(MemorySegment widget, MemorySegment string) {
        var mh$ = gtk_test_text_set$MH();
        try {
            mh$.invokeExact(widget, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_text_get$MH() {
        return RuntimeHelper.requireNonNull(constants$3186.const$4,"gtk_test_text_get");
    }
    /**
     * {@snippet :
     * char* gtk_test_text_get(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_test_text_get(MemorySegment widget) {
        var mh$ = gtk_test_text_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_find_sibling$MH() {
        return RuntimeHelper.requireNonNull(constants$3186.const$5,"gtk_test_find_sibling");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_test_find_sibling(struct _GtkWidget* base_widget, unsigned long widget_type);
     * }
     */
    public static MemorySegment gtk_test_find_sibling(MemorySegment base_widget, long widget_type) {
        var mh$ = gtk_test_find_sibling$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(base_widget, widget_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_find_label$MH() {
        return RuntimeHelper.requireNonNull(constants$3187.const$0,"gtk_test_find_label");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_test_find_label(struct _GtkWidget* widget, char* label_pattern);
     * }
     */
    public static MemorySegment gtk_test_find_label(MemorySegment widget, MemorySegment label_pattern) {
        var mh$ = gtk_test_find_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, label_pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_drag_source_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3188.const$2,"gtk_tree_drag_source_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tree_drag_source_get_type();
     * }
     */
    public static long gtk_tree_drag_source_get_type() {
        var mh$ = gtk_tree_drag_source_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_drag_source_row_draggable$MH() {
        return RuntimeHelper.requireNonNull(constants$3188.const$3,"gtk_tree_drag_source_row_draggable");
    }
    /**
     * {@snippet :
     * int gtk_tree_drag_source_row_draggable(struct _GtkTreeDragSource* drag_source, struct _GtkTreePath* path);
     * }
     */
    public static int gtk_tree_drag_source_row_draggable(MemorySegment drag_source, MemorySegment path) {
        var mh$ = gtk_tree_drag_source_row_draggable$MH();
        try {
            return (int)mh$.invokeExact(drag_source, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_drag_source_drag_data_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$3188.const$4,"gtk_tree_drag_source_drag_data_delete");
    }
    /**
     * {@snippet :
     * int gtk_tree_drag_source_drag_data_delete(struct _GtkTreeDragSource* drag_source, struct _GtkTreePath* path);
     * }
     */
    public static int gtk_tree_drag_source_drag_data_delete(MemorySegment drag_source, MemorySegment path) {
        var mh$ = gtk_tree_drag_source_drag_data_delete$MH();
        try {
            return (int)mh$.invokeExact(drag_source, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_drag_source_drag_data_get$MH() {
        return RuntimeHelper.requireNonNull(constants$3188.const$5,"gtk_tree_drag_source_drag_data_get");
    }
    /**
     * {@snippet :
     * int gtk_tree_drag_source_drag_data_get(struct _GtkTreeDragSource* drag_source, struct _GtkTreePath* path, struct _GtkSelectionData* selection_data);
     * }
     */
    public static int gtk_tree_drag_source_drag_data_get(MemorySegment drag_source, MemorySegment path, MemorySegment selection_data) {
        var mh$ = gtk_tree_drag_source_drag_data_get$MH();
        try {
            return (int)mh$.invokeExact(drag_source, path, selection_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_drag_dest_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3189.const$5,"gtk_tree_drag_dest_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tree_drag_dest_get_type();
     * }
     */
    public static long gtk_tree_drag_dest_get_type() {
        var mh$ = gtk_tree_drag_dest_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_drag_dest_drag_data_received$MH() {
        return RuntimeHelper.requireNonNull(constants$3190.const$0,"gtk_tree_drag_dest_drag_data_received");
    }
    /**
     * {@snippet :
     * int gtk_tree_drag_dest_drag_data_received(struct _GtkTreeDragDest* drag_dest, struct _GtkTreePath* dest, struct _GtkSelectionData* selection_data);
     * }
     */
    public static int gtk_tree_drag_dest_drag_data_received(MemorySegment drag_dest, MemorySegment dest, MemorySegment selection_data) {
        var mh$ = gtk_tree_drag_dest_drag_data_received$MH();
        try {
            return (int)mh$.invokeExact(drag_dest, dest, selection_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_drag_dest_row_drop_possible$MH() {
        return RuntimeHelper.requireNonNull(constants$3190.const$1,"gtk_tree_drag_dest_row_drop_possible");
    }
    /**
     * {@snippet :
     * int gtk_tree_drag_dest_row_drop_possible(struct _GtkTreeDragDest* drag_dest, struct _GtkTreePath* dest_path, struct _GtkSelectionData* selection_data);
     * }
     */
    public static int gtk_tree_drag_dest_row_drop_possible(MemorySegment drag_dest, MemorySegment dest_path, MemorySegment selection_data) {
        var mh$ = gtk_tree_drag_dest_row_drop_possible$MH();
        try {
            return (int)mh$.invokeExact(drag_dest, dest_path, selection_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_set_row_drag_data$MH() {
        return RuntimeHelper.requireNonNull(constants$3190.const$2,"gtk_tree_set_row_drag_data");
    }
    /**
     * {@snippet :
     * int gtk_tree_set_row_drag_data(struct _GtkSelectionData* selection_data, struct _GtkTreeModel* tree_model, struct _GtkTreePath* path);
     * }
     */
    public static int gtk_tree_set_row_drag_data(MemorySegment selection_data, MemorySegment tree_model, MemorySegment path) {
        var mh$ = gtk_tree_set_row_drag_data$MH();
        try {
            return (int)mh$.invokeExact(selection_data, tree_model, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_get_row_drag_data$MH() {
        return RuntimeHelper.requireNonNull(constants$3190.const$3,"gtk_tree_get_row_drag_data");
    }
    /**
     * {@snippet :
     * int gtk_tree_get_row_drag_data(struct _GtkSelectionData* selection_data, struct _GtkTreeModel** tree_model, struct _GtkTreePath** path);
     * }
     */
    public static int gtk_tree_get_row_drag_data(MemorySegment selection_data, MemorySegment tree_model, MemorySegment path) {
        var mh$ = gtk_tree_get_row_drag_data$MH();
        try {
            return (int)mh$.invokeExact(selection_data, tree_model, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3192.const$3,"gtk_tree_model_sort_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tree_model_sort_get_type();
     * }
     */
    public static long gtk_tree_model_sort_get_type() {
        var mh$ = gtk_tree_model_sort_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_new_with_model$MH() {
        return RuntimeHelper.requireNonNull(constants$3192.const$4,"gtk_tree_model_sort_new_with_model");
    }
    /**
     * {@snippet :
     * struct _GtkTreeModel* gtk_tree_model_sort_new_with_model(struct _GtkTreeModel* child_model);
     * }
     */
    public static MemorySegment gtk_tree_model_sort_new_with_model(MemorySegment child_model) {
        var mh$ = gtk_tree_model_sort_new_with_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(child_model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$3192.const$5,"gtk_tree_model_sort_get_model");
    }
    /**
     * {@snippet :
     * struct _GtkTreeModel* gtk_tree_model_sort_get_model(struct _GtkTreeModelSort* tree_model);
     * }
     */
    public static MemorySegment gtk_tree_model_sort_get_model(MemorySegment tree_model) {
        var mh$ = gtk_tree_model_sort_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_convert_child_path_to_path$MH() {
        return RuntimeHelper.requireNonNull(constants$3193.const$0,"gtk_tree_model_sort_convert_child_path_to_path");
    }
    /**
     * {@snippet :
     * struct _GtkTreePath* gtk_tree_model_sort_convert_child_path_to_path(struct _GtkTreeModelSort* tree_model_sort, struct _GtkTreePath* child_path);
     * }
     */
    public static MemorySegment gtk_tree_model_sort_convert_child_path_to_path(MemorySegment tree_model_sort, MemorySegment child_path) {
        var mh$ = gtk_tree_model_sort_convert_child_path_to_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_model_sort, child_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_convert_child_iter_to_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$3193.const$1,"gtk_tree_model_sort_convert_child_iter_to_iter");
    }
    /**
     * {@snippet :
     * int gtk_tree_model_sort_convert_child_iter_to_iter(struct _GtkTreeModelSort* tree_model_sort, struct _GtkTreeIter* sort_iter, struct _GtkTreeIter* child_iter);
     * }
     */
    public static int gtk_tree_model_sort_convert_child_iter_to_iter(MemorySegment tree_model_sort, MemorySegment sort_iter, MemorySegment child_iter) {
        var mh$ = gtk_tree_model_sort_convert_child_iter_to_iter$MH();
        try {
            return (int)mh$.invokeExact(tree_model_sort, sort_iter, child_iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_convert_path_to_child_path$MH() {
        return RuntimeHelper.requireNonNull(constants$3193.const$2,"gtk_tree_model_sort_convert_path_to_child_path");
    }
    /**
     * {@snippet :
     * struct _GtkTreePath* gtk_tree_model_sort_convert_path_to_child_path(struct _GtkTreeModelSort* tree_model_sort, struct _GtkTreePath* sorted_path);
     * }
     */
    public static MemorySegment gtk_tree_model_sort_convert_path_to_child_path(MemorySegment tree_model_sort, MemorySegment sorted_path) {
        var mh$ = gtk_tree_model_sort_convert_path_to_child_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_model_sort, sorted_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_convert_iter_to_child_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$3193.const$3,"gtk_tree_model_sort_convert_iter_to_child_iter");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_sort_convert_iter_to_child_iter(struct _GtkTreeModelSort* tree_model_sort, struct _GtkTreeIter* child_iter, struct _GtkTreeIter* sorted_iter);
     * }
     */
    public static void gtk_tree_model_sort_convert_iter_to_child_iter(MemorySegment tree_model_sort, MemorySegment child_iter, MemorySegment sorted_iter) {
        var mh$ = gtk_tree_model_sort_convert_iter_to_child_iter$MH();
        try {
            mh$.invokeExact(tree_model_sort, child_iter, sorted_iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_reset_default_sort_func$MH() {
        return RuntimeHelper.requireNonNull(constants$3193.const$4,"gtk_tree_model_sort_reset_default_sort_func");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_sort_reset_default_sort_func(struct _GtkTreeModelSort* tree_model_sort);
     * }
     */
    public static void gtk_tree_model_sort_reset_default_sort_func(MemorySegment tree_model_sort) {
        var mh$ = gtk_tree_model_sort_reset_default_sort_func$MH();
        try {
            mh$.invokeExact(tree_model_sort);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_clear_cache$MH() {
        return RuntimeHelper.requireNonNull(constants$3193.const$5,"gtk_tree_model_sort_clear_cache");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_sort_clear_cache(struct _GtkTreeModelSort* tree_model_sort);
     * }
     */
    public static void gtk_tree_model_sort_clear_cache(MemorySegment tree_model_sort) {
        var mh$ = gtk_tree_model_sort_clear_cache$MH();
        try {
            mh$.invokeExact(tree_model_sort);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_iter_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$3194.const$0,"gtk_tree_model_sort_iter_is_valid");
    }
    /**
     * {@snippet :
     * int gtk_tree_model_sort_iter_is_valid(struct _GtkTreeModelSort* tree_model_sort, struct _GtkTreeIter* iter);
     * }
     */
    public static int gtk_tree_model_sort_iter_is_valid(MemorySegment tree_model_sort, MemorySegment iter) {
        var mh$ = gtk_tree_model_sort_iter_is_valid$MH();
        try {
            return (int)mh$.invokeExact(tree_model_sort, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3196.const$5,"gtk_tree_selection_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tree_selection_get_type();
     * }
     */
    public static long gtk_tree_selection_get_type() {
        var mh$ = gtk_tree_selection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_set_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$3197.const$0,"gtk_tree_selection_set_mode");
    }
    /**
     * {@snippet :
     * void gtk_tree_selection_set_mode(struct _GtkTreeSelection* selection, enum GtkSelectionMode type);
     * }
     */
    public static void gtk_tree_selection_set_mode(MemorySegment selection, int type) {
        var mh$ = gtk_tree_selection_set_mode$MH();
        try {
            mh$.invokeExact(selection, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_get_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$3197.const$1,"gtk_tree_selection_get_mode");
    }
    /**
     * {@snippet :
     * enum GtkSelectionMode gtk_tree_selection_get_mode(struct _GtkTreeSelection* selection);
     * }
     */
    public static int gtk_tree_selection_get_mode(MemorySegment selection) {
        var mh$ = gtk_tree_selection_get_mode$MH();
        try {
            return (int)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_set_select_function$MH() {
        return RuntimeHelper.requireNonNull(constants$3197.const$4,"gtk_tree_selection_set_select_function");
    }
    /**
     * {@snippet :
     * void gtk_tree_selection_set_select_function(struct _GtkTreeSelection* selection, int (*func)(struct _GtkTreeSelection*,struct _GtkTreeModel*,struct _GtkTreePath*,int,void*), void* data, void (*destroy)(void*));
     * }
     */
    public static void gtk_tree_selection_set_select_function(MemorySegment selection, MemorySegment func, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_tree_selection_set_select_function$MH();
        try {
            mh$.invokeExact(selection, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$3197.const$5,"gtk_tree_selection_get_user_data");
    }
    /**
     * {@snippet :
     * void* gtk_tree_selection_get_user_data(struct _GtkTreeSelection* selection);
     * }
     */
    public static MemorySegment gtk_tree_selection_get_user_data(MemorySegment selection) {
        var mh$ = gtk_tree_selection_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_get_tree_view$MH() {
        return RuntimeHelper.requireNonNull(constants$3198.const$0,"gtk_tree_selection_get_tree_view");
    }
    /**
     * {@snippet :
     * struct _GtkTreeView* gtk_tree_selection_get_tree_view(struct _GtkTreeSelection* selection);
     * }
     */
    public static MemorySegment gtk_tree_selection_get_tree_view(MemorySegment selection) {
        var mh$ = gtk_tree_selection_get_tree_view$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_get_select_function$MH() {
        return RuntimeHelper.requireNonNull(constants$3198.const$2,"gtk_tree_selection_get_select_function");
    }
    /**
     * {@snippet :
     * int (*gtk_tree_selection_get_select_function(struct _GtkTreeSelection* selection))(struct _GtkTreeSelection*,struct _GtkTreeModel*,struct _GtkTreePath*,int,void*);
     * }
     */
    public static MemorySegment gtk_tree_selection_get_select_function(MemorySegment selection) {
        var mh$ = gtk_tree_selection_get_select_function$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_get_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$3198.const$3,"gtk_tree_selection_get_selected");
    }
    /**
     * {@snippet :
     * int gtk_tree_selection_get_selected(struct _GtkTreeSelection* selection, struct _GtkTreeModel** model, struct _GtkTreeIter* iter);
     * }
     */
    public static int gtk_tree_selection_get_selected(MemorySegment selection, MemorySegment model, MemorySegment iter) {
        var mh$ = gtk_tree_selection_get_selected$MH();
        try {
            return (int)mh$.invokeExact(selection, model, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_get_selected_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$3198.const$4,"gtk_tree_selection_get_selected_rows");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_tree_selection_get_selected_rows(struct _GtkTreeSelection* selection, struct _GtkTreeModel** model);
     * }
     */
    public static MemorySegment gtk_tree_selection_get_selected_rows(MemorySegment selection, MemorySegment model) {
        var mh$ = gtk_tree_selection_get_selected_rows$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(selection, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_count_selected_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$3198.const$5,"gtk_tree_selection_count_selected_rows");
    }
    /**
     * {@snippet :
     * int gtk_tree_selection_count_selected_rows(struct _GtkTreeSelection* selection);
     * }
     */
    public static int gtk_tree_selection_count_selected_rows(MemorySegment selection) {
        var mh$ = gtk_tree_selection_count_selected_rows$MH();
        try {
            return (int)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_selected_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$3199.const$1,"gtk_tree_selection_selected_foreach");
    }
    /**
     * {@snippet :
     * void gtk_tree_selection_selected_foreach(struct _GtkTreeSelection* selection, void (*func)(struct _GtkTreeModel*,struct _GtkTreePath*,struct _GtkTreeIter*,void*), void* data);
     * }
     */
    public static void gtk_tree_selection_selected_foreach(MemorySegment selection, MemorySegment func, MemorySegment data) {
        var mh$ = gtk_tree_selection_selected_foreach$MH();
        try {
            mh$.invokeExact(selection, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_select_path$MH() {
        return RuntimeHelper.requireNonNull(constants$3199.const$2,"gtk_tree_selection_select_path");
    }
    /**
     * {@snippet :
     * void gtk_tree_selection_select_path(struct _GtkTreeSelection* selection, struct _GtkTreePath* path);
     * }
     */
    public static void gtk_tree_selection_select_path(MemorySegment selection, MemorySegment path) {
        var mh$ = gtk_tree_selection_select_path$MH();
        try {
            mh$.invokeExact(selection, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_unselect_path$MH() {
        return RuntimeHelper.requireNonNull(constants$3199.const$3,"gtk_tree_selection_unselect_path");
    }
    /**
     * {@snippet :
     * void gtk_tree_selection_unselect_path(struct _GtkTreeSelection* selection, struct _GtkTreePath* path);
     * }
     */
    public static void gtk_tree_selection_unselect_path(MemorySegment selection, MemorySegment path) {
        var mh$ = gtk_tree_selection_unselect_path$MH();
        try {
            mh$.invokeExact(selection, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_select_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$3199.const$4,"gtk_tree_selection_select_iter");
    }
    /**
     * {@snippet :
     * void gtk_tree_selection_select_iter(struct _GtkTreeSelection* selection, struct _GtkTreeIter* iter);
     * }
     */
    public static void gtk_tree_selection_select_iter(MemorySegment selection, MemorySegment iter) {
        var mh$ = gtk_tree_selection_select_iter$MH();
        try {
            mh$.invokeExact(selection, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_unselect_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$3199.const$5,"gtk_tree_selection_unselect_iter");
    }
    /**
     * {@snippet :
     * void gtk_tree_selection_unselect_iter(struct _GtkTreeSelection* selection, struct _GtkTreeIter* iter);
     * }
     */
    public static void gtk_tree_selection_unselect_iter(MemorySegment selection, MemorySegment iter) {
        var mh$ = gtk_tree_selection_unselect_iter$MH();
        try {
            mh$.invokeExact(selection, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_path_is_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$3200.const$0,"gtk_tree_selection_path_is_selected");
    }
    /**
     * {@snippet :
     * int gtk_tree_selection_path_is_selected(struct _GtkTreeSelection* selection, struct _GtkTreePath* path);
     * }
     */
    public static int gtk_tree_selection_path_is_selected(MemorySegment selection, MemorySegment path) {
        var mh$ = gtk_tree_selection_path_is_selected$MH();
        try {
            return (int)mh$.invokeExact(selection, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_iter_is_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$3200.const$1,"gtk_tree_selection_iter_is_selected");
    }
    /**
     * {@snippet :
     * int gtk_tree_selection_iter_is_selected(struct _GtkTreeSelection* selection, struct _GtkTreeIter* iter);
     * }
     */
    public static int gtk_tree_selection_iter_is_selected(MemorySegment selection, MemorySegment iter) {
        var mh$ = gtk_tree_selection_iter_is_selected$MH();
        try {
            return (int)mh$.invokeExact(selection, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_select_all$MH() {
        return RuntimeHelper.requireNonNull(constants$3200.const$2,"gtk_tree_selection_select_all");
    }
    /**
     * {@snippet :
     * void gtk_tree_selection_select_all(struct _GtkTreeSelection* selection);
     * }
     */
    public static void gtk_tree_selection_select_all(MemorySegment selection) {
        var mh$ = gtk_tree_selection_select_all$MH();
        try {
            mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_unselect_all$MH() {
        return RuntimeHelper.requireNonNull(constants$3200.const$3,"gtk_tree_selection_unselect_all");
    }
    /**
     * {@snippet :
     * void gtk_tree_selection_unselect_all(struct _GtkTreeSelection* selection);
     * }
     */
    public static void gtk_tree_selection_unselect_all(MemorySegment selection) {
        var mh$ = gtk_tree_selection_unselect_all$MH();
        try {
            mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_select_range$MH() {
        return RuntimeHelper.requireNonNull(constants$3200.const$4,"gtk_tree_selection_select_range");
    }
    /**
     * {@snippet :
     * void gtk_tree_selection_select_range(struct _GtkTreeSelection* selection, struct _GtkTreePath* start_path, struct _GtkTreePath* end_path);
     * }
     */
    public static void gtk_tree_selection_select_range(MemorySegment selection, MemorySegment start_path, MemorySegment end_path) {
        var mh$ = gtk_tree_selection_select_range$MH();
        try {
            mh$.invokeExact(selection, start_path, end_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_unselect_range$MH() {
        return RuntimeHelper.requireNonNull(constants$3200.const$5,"gtk_tree_selection_unselect_range");
    }
    /**
     * {@snippet :
     * void gtk_tree_selection_unselect_range(struct _GtkTreeSelection* selection, struct _GtkTreePath* start_path, struct _GtkTreePath* end_path);
     * }
     */
    public static void gtk_tree_selection_unselect_range(MemorySegment selection, MemorySegment start_path, MemorySegment end_path) {
        var mh$ = gtk_tree_selection_unselect_range$MH();
        try {
            mh$.invokeExact(selection, start_path, end_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3202.const$5,"gtk_tree_store_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tree_store_get_type();
     * }
     */
    public static long gtk_tree_store_get_type() {
        var mh$ = gtk_tree_store_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3203.const$0,"gtk_tree_store_new");
    }
    /**
     * {@snippet :
     * struct _GtkTreeStore* gtk_tree_store_new(int n_columns,...);
     * }
     */
    public static MemorySegment gtk_tree_store_new(int n_columns, Object... x1) {
        var mh$ = gtk_tree_store_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(n_columns, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$3203.const$1,"gtk_tree_store_newv");
    }
    /**
     * {@snippet :
     * struct _GtkTreeStore* gtk_tree_store_newv(int n_columns, unsigned long* types);
     * }
     */
    public static MemorySegment gtk_tree_store_newv(int n_columns, MemorySegment types) {
        var mh$ = gtk_tree_store_newv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(n_columns, types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_set_column_types$MH() {
        return RuntimeHelper.requireNonNull(constants$3203.const$2,"gtk_tree_store_set_column_types");
    }
    /**
     * {@snippet :
     * void gtk_tree_store_set_column_types(struct _GtkTreeStore* tree_store, int n_columns, unsigned long* types);
     * }
     */
    public static void gtk_tree_store_set_column_types(MemorySegment tree_store, int n_columns, MemorySegment types) {
        var mh$ = gtk_tree_store_set_column_types$MH();
        try {
            mh$.invokeExact(tree_store, n_columns, types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$3203.const$3,"gtk_tree_store_set_value");
    }
    /**
     * {@snippet :
     * void gtk_tree_store_set_value(struct _GtkTreeStore* tree_store, struct _GtkTreeIter* iter, int column, struct _GValue* value);
     * }
     */
    public static void gtk_tree_store_set_value(MemorySegment tree_store, MemorySegment iter, int column, MemorySegment value) {
        var mh$ = gtk_tree_store_set_value$MH();
        try {
            mh$.invokeExact(tree_store, iter, column, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_set$MH() {
        return RuntimeHelper.requireNonNull(constants$3203.const$4,"gtk_tree_store_set");
    }
    /**
     * {@snippet :
     * void gtk_tree_store_set(struct _GtkTreeStore* tree_store, struct _GtkTreeIter* iter,...);
     * }
     */
    public static void gtk_tree_store_set(MemorySegment tree_store, MemorySegment iter, Object... x2) {
        var mh$ = gtk_tree_store_set$MH();
        try {
            mh$.invokeExact(tree_store, iter, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_set_valuesv$MH() {
        return RuntimeHelper.requireNonNull(constants$3203.const$5,"gtk_tree_store_set_valuesv");
    }
    /**
     * {@snippet :
     * void gtk_tree_store_set_valuesv(struct _GtkTreeStore* tree_store, struct _GtkTreeIter* iter, int* columns, struct _GValue* values, int n_values);
     * }
     */
    public static void gtk_tree_store_set_valuesv(MemorySegment tree_store, MemorySegment iter, MemorySegment columns, MemorySegment values, int n_values) {
        var mh$ = gtk_tree_store_set_valuesv$MH();
        try {
            mh$.invokeExact(tree_store, iter, columns, values, n_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_set_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$3204.const$0,"gtk_tree_store_set_valist");
    }
    /**
     * {@snippet :
     * void gtk_tree_store_set_valist(struct _GtkTreeStore* tree_store, struct _GtkTreeIter* iter, struct __va_list var_args);
     * }
     */
    public static void gtk_tree_store_set_valist(MemorySegment tree_store, MemorySegment iter, MemorySegment var_args) {
        var mh$ = gtk_tree_store_set_valist$MH();
        try {
            mh$.invokeExact(tree_store, iter, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$3204.const$1,"gtk_tree_store_remove");
    }
    /**
     * {@snippet :
     * int gtk_tree_store_remove(struct _GtkTreeStore* tree_store, struct _GtkTreeIter* iter);
     * }
     */
    public static int gtk_tree_store_remove(MemorySegment tree_store, MemorySegment iter) {
        var mh$ = gtk_tree_store_remove$MH();
        try {
            return (int)mh$.invokeExact(tree_store, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$3204.const$2,"gtk_tree_store_insert");
    }
    /**
     * {@snippet :
     * void gtk_tree_store_insert(struct _GtkTreeStore* tree_store, struct _GtkTreeIter* iter, struct _GtkTreeIter* parent, int position);
     * }
     */
    public static void gtk_tree_store_insert(MemorySegment tree_store, MemorySegment iter, MemorySegment parent, int position) {
        var mh$ = gtk_tree_store_insert$MH();
        try {
            mh$.invokeExact(tree_store, iter, parent, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_insert_before$MH() {
        return RuntimeHelper.requireNonNull(constants$3204.const$3,"gtk_tree_store_insert_before");
    }
    /**
     * {@snippet :
     * void gtk_tree_store_insert_before(struct _GtkTreeStore* tree_store, struct _GtkTreeIter* iter, struct _GtkTreeIter* parent, struct _GtkTreeIter* sibling);
     * }
     */
    public static void gtk_tree_store_insert_before(MemorySegment tree_store, MemorySegment iter, MemorySegment parent, MemorySegment sibling) {
        var mh$ = gtk_tree_store_insert_before$MH();
        try {
            mh$.invokeExact(tree_store, iter, parent, sibling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_insert_after$MH() {
        return RuntimeHelper.requireNonNull(constants$3204.const$4,"gtk_tree_store_insert_after");
    }
    /**
     * {@snippet :
     * void gtk_tree_store_insert_after(struct _GtkTreeStore* tree_store, struct _GtkTreeIter* iter, struct _GtkTreeIter* parent, struct _GtkTreeIter* sibling);
     * }
     */
    public static void gtk_tree_store_insert_after(MemorySegment tree_store, MemorySegment iter, MemorySegment parent, MemorySegment sibling) {
        var mh$ = gtk_tree_store_insert_after$MH();
        try {
            mh$.invokeExact(tree_store, iter, parent, sibling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_insert_with_values$MH() {
        return RuntimeHelper.requireNonNull(constants$3204.const$5,"gtk_tree_store_insert_with_values");
    }
    /**
     * {@snippet :
     * void gtk_tree_store_insert_with_values(struct _GtkTreeStore* tree_store, struct _GtkTreeIter* iter, struct _GtkTreeIter* parent, int position,...);
     * }
     */
    public static void gtk_tree_store_insert_with_values(MemorySegment tree_store, MemorySegment iter, MemorySegment parent, int position, Object... x4) {
        var mh$ = gtk_tree_store_insert_with_values$MH();
        try {
            mh$.invokeExact(tree_store, iter, parent, position, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_insert_with_valuesv$MH() {
        return RuntimeHelper.requireNonNull(constants$3205.const$1,"gtk_tree_store_insert_with_valuesv");
    }
    /**
     * {@snippet :
     * void gtk_tree_store_insert_with_valuesv(struct _GtkTreeStore* tree_store, struct _GtkTreeIter* iter, struct _GtkTreeIter* parent, int position, int* columns, struct _GValue* values, int n_values);
     * }
     */
    public static void gtk_tree_store_insert_with_valuesv(MemorySegment tree_store, MemorySegment iter, MemorySegment parent, int position, MemorySegment columns, MemorySegment values, int n_values) {
        var mh$ = gtk_tree_store_insert_with_valuesv$MH();
        try {
            mh$.invokeExact(tree_store, iter, parent, position, columns, values, n_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$3205.const$2,"gtk_tree_store_prepend");
    }
    /**
     * {@snippet :
     * void gtk_tree_store_prepend(struct _GtkTreeStore* tree_store, struct _GtkTreeIter* iter, struct _GtkTreeIter* parent);
     * }
     */
    public static void gtk_tree_store_prepend(MemorySegment tree_store, MemorySegment iter, MemorySegment parent) {
        var mh$ = gtk_tree_store_prepend$MH();
        try {
            mh$.invokeExact(tree_store, iter, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_append$MH() {
        return RuntimeHelper.requireNonNull(constants$3205.const$3,"gtk_tree_store_append");
    }
    /**
     * {@snippet :
     * void gtk_tree_store_append(struct _GtkTreeStore* tree_store, struct _GtkTreeIter* iter, struct _GtkTreeIter* parent);
     * }
     */
    public static void gtk_tree_store_append(MemorySegment tree_store, MemorySegment iter, MemorySegment parent) {
        var mh$ = gtk_tree_store_append$MH();
        try {
            mh$.invokeExact(tree_store, iter, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_is_ancestor$MH() {
        return RuntimeHelper.requireNonNull(constants$3205.const$4,"gtk_tree_store_is_ancestor");
    }
    /**
     * {@snippet :
     * int gtk_tree_store_is_ancestor(struct _GtkTreeStore* tree_store, struct _GtkTreeIter* iter, struct _GtkTreeIter* descendant);
     * }
     */
    public static int gtk_tree_store_is_ancestor(MemorySegment tree_store, MemorySegment iter, MemorySegment descendant) {
        var mh$ = gtk_tree_store_is_ancestor$MH();
        try {
            return (int)mh$.invokeExact(tree_store, iter, descendant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_iter_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$3205.const$5,"gtk_tree_store_iter_depth");
    }
    /**
     * {@snippet :
     * int gtk_tree_store_iter_depth(struct _GtkTreeStore* tree_store, struct _GtkTreeIter* iter);
     * }
     */
    public static int gtk_tree_store_iter_depth(MemorySegment tree_store, MemorySegment iter) {
        var mh$ = gtk_tree_store_iter_depth$MH();
        try {
            return (int)mh$.invokeExact(tree_store, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$3206.const$0,"gtk_tree_store_clear");
    }
    /**
     * {@snippet :
     * void gtk_tree_store_clear(struct _GtkTreeStore* tree_store);
     * }
     */
    public static void gtk_tree_store_clear(MemorySegment tree_store) {
        var mh$ = gtk_tree_store_clear$MH();
        try {
            mh$.invokeExact(tree_store);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_iter_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$3206.const$1,"gtk_tree_store_iter_is_valid");
    }
    /**
     * {@snippet :
     * int gtk_tree_store_iter_is_valid(struct _GtkTreeStore* tree_store, struct _GtkTreeIter* iter);
     * }
     */
    public static int gtk_tree_store_iter_is_valid(MemorySegment tree_store, MemorySegment iter) {
        var mh$ = gtk_tree_store_iter_is_valid$MH();
        try {
            return (int)mh$.invokeExact(tree_store, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_reorder$MH() {
        return RuntimeHelper.requireNonNull(constants$3206.const$2,"gtk_tree_store_reorder");
    }
    /**
     * {@snippet :
     * void gtk_tree_store_reorder(struct _GtkTreeStore* tree_store, struct _GtkTreeIter* parent, int* new_order);
     * }
     */
    public static void gtk_tree_store_reorder(MemorySegment tree_store, MemorySegment parent, MemorySegment new_order) {
        var mh$ = gtk_tree_store_reorder$MH();
        try {
            mh$.invokeExact(tree_store, parent, new_order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_swap$MH() {
        return RuntimeHelper.requireNonNull(constants$3206.const$3,"gtk_tree_store_swap");
    }
    /**
     * {@snippet :
     * void gtk_tree_store_swap(struct _GtkTreeStore* tree_store, struct _GtkTreeIter* a, struct _GtkTreeIter* b);
     * }
     */
    public static void gtk_tree_store_swap(MemorySegment tree_store, MemorySegment a, MemorySegment b) {
        var mh$ = gtk_tree_store_swap$MH();
        try {
            mh$.invokeExact(tree_store, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_move_before$MH() {
        return RuntimeHelper.requireNonNull(constants$3206.const$4,"gtk_tree_store_move_before");
    }
    /**
     * {@snippet :
     * void gtk_tree_store_move_before(struct _GtkTreeStore* tree_store, struct _GtkTreeIter* iter, struct _GtkTreeIter* position);
     * }
     */
    public static void gtk_tree_store_move_before(MemorySegment tree_store, MemorySegment iter, MemorySegment position) {
        var mh$ = gtk_tree_store_move_before$MH();
        try {
            mh$.invokeExact(tree_store, iter, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_move_after$MH() {
        return RuntimeHelper.requireNonNull(constants$3206.const$5,"gtk_tree_store_move_after");
    }
    /**
     * {@snippet :
     * void gtk_tree_store_move_after(struct _GtkTreeStore* tree_store, struct _GtkTreeIter* iter, struct _GtkTreeIter* position);
     * }
     */
    public static void gtk_tree_store_move_after(MemorySegment tree_store, MemorySegment iter, MemorySegment position) {
        var mh$ = gtk_tree_store_move_after$MH();
        try {
            mh$.invokeExact(tree_store, iter, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_rc_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3207.const$0,"gtk_rc_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_rc_flags_get_type();
     * }
     */
    public static long gtk_rc_flags_get_type() {
        var mh$ = gtk_rc_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_rc_token_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3207.const$1,"gtk_rc_token_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_rc_token_type_get_type();
     * }
     */
    public static long gtk_rc_token_type_get_type() {
        var mh$ = gtk_rc_token_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_path_priority_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3207.const$2,"gtk_path_priority_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_path_priority_type_get_type();
     * }
     */
    public static long gtk_path_priority_type_get_type() {
        var mh$ = gtk_path_priority_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_path_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3207.const$3,"gtk_path_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_path_type_get_type();
     * }
     */
    public static long gtk_path_type_get_type() {
        var mh$ = gtk_path_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_style_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3207.const$4,"gtk_expander_style_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_expander_style_get_type();
     * }
     */
    public static long gtk_expander_style_get_type() {
        var mh$ = gtk_expander_style_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_attach_options_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3207.const$5,"gtk_attach_options_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_attach_options_get_type();
     * }
     */
    public static long gtk_attach_options_get_type() {
        var mh$ = gtk_attach_options_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_ui_manager_item_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3208.const$0,"gtk_ui_manager_item_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_ui_manager_item_type_get_type();
     * }
     */
    public static long gtk_ui_manager_item_type_get_type() {
        var mh$ = gtk_ui_manager_item_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_license_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3208.const$1,"gtk_license_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_license_get_type();
     * }
     */
    public static long gtk_license_get_type() {
        var mh$ = gtk_license_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3208.const$2,"gtk_accel_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_accel_flags_get_type();
     * }
     */
    public static long gtk_accel_flags_get_type() {
        var mh$ = gtk_accel_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_inhibit_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3208.const$3,"gtk_application_inhibit_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_application_inhibit_flags_get_type();
     * }
     */
    public static long gtk_application_inhibit_flags_get_type() {
        var mh$ = gtk_application_inhibit_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_page_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3208.const$4,"gtk_assistant_page_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_assistant_page_type_get_type();
     * }
     */
    public static long gtk_assistant_page_type_get_type() {
        var mh$ = gtk_assistant_page_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_style_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3208.const$5,"gtk_button_box_style_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_button_box_style_get_type();
     * }
     */
    public static long gtk_button_box_style_get_type() {
        var mh$ = gtk_button_box_style_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3209.const$0,"gtk_builder_error_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_builder_error_get_type();
     * }
     */
    public static long gtk_builder_error_get_type() {
        var mh$ = gtk_builder_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_display_options_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3209.const$1,"gtk_calendar_display_options_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_calendar_display_options_get_type();
     * }
     */
    public static long gtk_calendar_display_options_get_type() {
        var mh$ = gtk_calendar_display_options_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_state_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3209.const$2,"gtk_cell_renderer_state_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_cell_renderer_state_get_type();
     * }
     */
    public static long gtk_cell_renderer_state_get_type() {
        var mh$ = gtk_cell_renderer_state_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3209.const$3,"gtk_cell_renderer_mode_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_cell_renderer_mode_get_type();
     * }
     */
    public static long gtk_cell_renderer_mode_get_type() {
        var mh$ = gtk_cell_renderer_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_accel_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3209.const$4,"gtk_cell_renderer_accel_mode_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_cell_renderer_accel_mode_get_type();
     * }
     */
    public static long gtk_cell_renderer_accel_mode_get_type() {
        var mh$ = gtk_cell_renderer_accel_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_resize_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3209.const$5,"gtk_resize_mode_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_resize_mode_get_type();
     * }
     */
    public static long gtk_resize_mode_get_type() {
        var mh$ = gtk_resize_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3210.const$0,"gtk_css_provider_error_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_css_provider_error_get_type();
     * }
     */
    public static long gtk_css_provider_error_get_type() {
        var mh$ = gtk_css_provider_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3210.const$1,"gtk_css_section_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_css_section_type_get_type();
     * }
     */
    public static long gtk_css_section_type_get_type() {
        var mh$ = gtk_css_section_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_debug_flag_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3210.const$2,"gtk_debug_flag_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_debug_flag_get_type();
     * }
     */
    public static long gtk_debug_flag_get_type() {
        var mh$ = gtk_debug_flag_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_dialog_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3210.const$3,"gtk_dialog_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_dialog_flags_get_type();
     * }
     */
    public static long gtk_dialog_flags_get_type() {
        var mh$ = gtk_dialog_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_response_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3210.const$4,"gtk_response_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_response_type_get_type();
     * }
     */
    public static long gtk_response_type_get_type() {
        var mh$ = gtk_response_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_dest_defaults_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3210.const$5,"gtk_dest_defaults_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_dest_defaults_get_type();
     * }
     */
    public static long gtk_dest_defaults_get_type() {
        var mh$ = gtk_dest_defaults_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_icon_position_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3211.const$0,"gtk_entry_icon_position_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_entry_icon_position_get_type();
     * }
     */
    public static long gtk_entry_icon_position_get_type() {
        var mh$ = gtk_entry_icon_position_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_align_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3211.const$1,"gtk_align_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_align_get_type();
     * }
     */
    public static long gtk_align_get_type() {
        var mh$ = gtk_align_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_arrow_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3211.const$2,"gtk_arrow_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_arrow_type_get_type();
     * }
     */
    public static long gtk_arrow_type_get_type() {
        var mh$ = gtk_arrow_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_baseline_position_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3211.const$3,"gtk_baseline_position_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_baseline_position_get_type();
     * }
     */
    public static long gtk_baseline_position_get_type() {
        var mh$ = gtk_baseline_position_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_delete_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3211.const$4,"gtk_delete_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_delete_type_get_type();
     * }
     */
    public static long gtk_delete_type_get_type() {
        var mh$ = gtk_delete_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_direction_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3211.const$5,"gtk_direction_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_direction_type_get_type();
     * }
     */
    public static long gtk_direction_type_get_type() {
        var mh$ = gtk_direction_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_size_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3212.const$0,"gtk_icon_size_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_icon_size_get_type();
     * }
     */
    public static long gtk_icon_size_get_type() {
        var mh$ = gtk_icon_size_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_sensitivity_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3212.const$1,"gtk_sensitivity_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_sensitivity_type_get_type();
     * }
     */
    public static long gtk_sensitivity_type_get_type() {
        var mh$ = gtk_sensitivity_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_direction_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3212.const$2,"gtk_text_direction_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_text_direction_get_type();
     * }
     */
    public static long gtk_text_direction_get_type() {
        var mh$ = gtk_text_direction_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_justification_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3212.const$3,"gtk_justification_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_justification_get_type();
     * }
     */
    public static long gtk_justification_get_type() {
        var mh$ = gtk_justification_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_direction_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3212.const$4,"gtk_menu_direction_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_menu_direction_type_get_type();
     * }
     */
    public static long gtk_menu_direction_type_get_type() {
        var mh$ = gtk_menu_direction_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_message_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3212.const$5,"gtk_message_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_message_type_get_type();
     * }
     */
    public static long gtk_message_type_get_type() {
        var mh$ = gtk_message_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_movement_step_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3213.const$0,"gtk_movement_step_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_movement_step_get_type();
     * }
     */
    public static long gtk_movement_step_get_type() {
        var mh$ = gtk_movement_step_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scroll_step_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3213.const$1,"gtk_scroll_step_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_scroll_step_get_type();
     * }
     */
    public static long gtk_scroll_step_get_type() {
        var mh$ = gtk_scroll_step_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_orientation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3213.const$2,"gtk_orientation_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_orientation_get_type();
     * }
     */
    public static long gtk_orientation_get_type() {
        var mh$ = gtk_orientation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_pack_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3213.const$3,"gtk_pack_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_pack_type_get_type();
     * }
     */
    public static long gtk_pack_type_get_type() {
        var mh$ = gtk_pack_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_position_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3213.const$4,"gtk_position_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_position_type_get_type();
     * }
     */
    public static long gtk_position_type_get_type() {
        var mh$ = gtk_position_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_relief_style_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3213.const$5,"gtk_relief_style_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_relief_style_get_type();
     * }
     */
    public static long gtk_relief_style_get_type() {
        var mh$ = gtk_relief_style_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scroll_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3214.const$0,"gtk_scroll_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_scroll_type_get_type();
     * }
     */
    public static long gtk_scroll_type_get_type() {
        var mh$ = gtk_scroll_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3214.const$1,"gtk_selection_mode_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_selection_mode_get_type();
     * }
     */
    public static long gtk_selection_mode_get_type() {
        var mh$ = gtk_selection_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shadow_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3214.const$2,"gtk_shadow_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_shadow_type_get_type();
     * }
     */
    public static long gtk_shadow_type_get_type() {
        var mh$ = gtk_shadow_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_state_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3214.const$3,"gtk_state_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_state_type_get_type();
     * }
     */
    public static long gtk_state_type_get_type() {
        var mh$ = gtk_state_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toolbar_style_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3214.const$4,"gtk_toolbar_style_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_toolbar_style_get_type();
     * }
     */
    public static long gtk_toolbar_style_get_type() {
        var mh$ = gtk_toolbar_style_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_wrap_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3214.const$5,"gtk_wrap_mode_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_wrap_mode_get_type();
     * }
     */
    public static long gtk_wrap_mode_get_type() {
        var mh$ = gtk_wrap_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_sort_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3215.const$0,"gtk_sort_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_sort_type_get_type();
     * }
     */
    public static long gtk_sort_type_get_type() {
        var mh$ = gtk_sort_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_preedit_style_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3215.const$1,"gtk_im_preedit_style_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_im_preedit_style_get_type();
     * }
     */
    public static long gtk_im_preedit_style_get_type() {
        var mh$ = gtk_im_preedit_style_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_status_style_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3215.const$2,"gtk_im_status_style_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_im_status_style_get_type();
     * }
     */
    public static long gtk_im_status_style_get_type() {
        var mh$ = gtk_im_status_style_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_pack_direction_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3215.const$3,"gtk_pack_direction_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_pack_direction_get_type();
     * }
     */
    public static long gtk_pack_direction_get_type() {
        var mh$ = gtk_pack_direction_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_pages_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3215.const$4,"gtk_print_pages_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_print_pages_get_type();
     * }
     */
    public static long gtk_print_pages_get_type() {
        var mh$ = gtk_print_pages_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_set_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3215.const$5,"gtk_page_set_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_page_set_get_type();
     * }
     */
    public static long gtk_page_set_get_type() {
        var mh$ = gtk_page_set_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_number_up_layout_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3216.const$0,"gtk_number_up_layout_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_number_up_layout_get_type();
     * }
     */
    public static long gtk_number_up_layout_get_type() {
        var mh$ = gtk_number_up_layout_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_orientation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3216.const$1,"gtk_page_orientation_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_page_orientation_get_type();
     * }
     */
    public static long gtk_page_orientation_get_type() {
        var mh$ = gtk_page_orientation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_quality_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3216.const$2,"gtk_print_quality_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_print_quality_get_type();
     * }
     */
    public static long gtk_print_quality_get_type() {
        var mh$ = gtk_print_quality_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_duplex_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3216.const$3,"gtk_print_duplex_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_print_duplex_get_type();
     * }
     */
    public static long gtk_print_duplex_get_type() {
        var mh$ = gtk_print_duplex_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_unit_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3216.const$4,"gtk_unit_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_unit_get_type();
     * }
     */
    public static long gtk_unit_get_type() {
        var mh$ = gtk_unit_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_grid_lines_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3216.const$5,"gtk_tree_view_grid_lines_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tree_view_grid_lines_get_type();
     * }
     */
    public static long gtk_tree_view_grid_lines_get_type() {
        var mh$ = gtk_tree_view_grid_lines_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_result_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3217.const$0,"gtk_drag_result_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_drag_result_get_type();
     * }
     */
    public static long gtk_drag_result_get_type() {
        var mh$ = gtk_drag_result_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3217.const$1,"gtk_size_group_mode_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_size_group_mode_get_type();
     * }
     */
    public static long gtk_size_group_mode_get_type() {
        var mh$ = gtk_size_group_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_request_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3217.const$2,"gtk_size_request_mode_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_size_request_mode_get_type();
     * }
     */
    public static long gtk_size_request_mode_get_type() {
        var mh$ = gtk_size_request_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_policy_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3217.const$3,"gtk_scrollable_policy_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_scrollable_policy_get_type();
     * }
     */
    public static long gtk_scrollable_policy_get_type() {
        var mh$ = gtk_scrollable_policy_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_state_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3217.const$4,"gtk_state_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_state_flags_get_type();
     * }
     */
    public static long gtk_state_flags_get_type() {
        var mh$ = gtk_state_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_region_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3217.const$5,"gtk_region_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_region_flags_get_type();
     * }
     */
    public static long gtk_region_flags_get_type() {
        var mh$ = gtk_region_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_junction_sides_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3218.const$0,"gtk_junction_sides_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_junction_sides_get_type();
     * }
     */
    public static long gtk_junction_sides_get_type() {
        var mh$ = gtk_junction_sides_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_border_style_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3218.const$1,"gtk_border_style_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_border_style_get_type();
     * }
     */
    public static long gtk_border_style_get_type() {
        var mh$ = gtk_border_style_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3218.const$2,"gtk_level_bar_mode_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_level_bar_mode_get_type();
     * }
     */
    public static long gtk_level_bar_mode_get_type() {
        var mh$ = gtk_level_bar_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_input_purpose_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3218.const$3,"gtk_input_purpose_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_input_purpose_get_type();
     * }
     */
    public static long gtk_input_purpose_get_type() {
        var mh$ = gtk_input_purpose_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_input_hints_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3218.const$4,"gtk_input_hints_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_input_hints_get_type();
     * }
     */
    public static long gtk_input_hints_get_type() {
        var mh$ = gtk_input_hints_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_propagation_phase_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3218.const$5,"gtk_propagation_phase_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_propagation_phase_get_type();
     * }
     */
    public static long gtk_propagation_phase_get_type() {
        var mh$ = gtk_propagation_phase_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_sequence_state_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3219.const$0,"gtk_event_sequence_state_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_event_sequence_state_get_type();
     * }
     */
    public static long gtk_event_sequence_state_get_type() {
        var mh$ = gtk_event_sequence_state_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_pan_direction_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3219.const$1,"gtk_pan_direction_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_pan_direction_get_type();
     * }
     */
    public static long gtk_pan_direction_get_type() {
        var mh$ = gtk_pan_direction_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_constraint_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3219.const$2,"gtk_popover_constraint_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_popover_constraint_get_type();
     * }
     */
    public static long gtk_popover_constraint_get_type() {
        var mh$ = gtk_popover_constraint_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_scroll_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3219.const$3,"gtk_event_controller_scroll_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_event_controller_scroll_flags_get_type();
     * }
     */
    public static long gtk_event_controller_scroll_flags_get_type() {
        var mh$ = gtk_event_controller_scroll_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3219.const$4,"gtk_file_chooser_action_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_file_chooser_action_get_type();
     * }
     */
    public static long gtk_file_chooser_action_get_type() {
        var mh$ = gtk_file_chooser_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_confirmation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3219.const$5,"gtk_file_chooser_confirmation_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_file_chooser_confirmation_get_type();
     * }
     */
    public static long gtk_file_chooser_confirmation_get_type() {
        var mh$ = gtk_file_chooser_confirmation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3220.const$0,"gtk_file_chooser_error_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_file_chooser_error_get_type();
     * }
     */
    public static long gtk_file_chooser_error_get_type() {
        var mh$ = gtk_file_chooser_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3220.const$1,"gtk_file_filter_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_file_filter_flags_get_type();
     * }
     */
    public static long gtk_file_filter_flags_get_type() {
        var mh$ = gtk_file_filter_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_level_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3220.const$2,"gtk_font_chooser_level_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_font_chooser_level_get_type();
     * }
     */
    public static long gtk_font_chooser_level_get_type() {
        var mh$ = gtk_font_chooser_level_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_lookup_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3220.const$3,"gtk_icon_lookup_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_icon_lookup_flags_get_type();
     * }
     */
    public static long gtk_icon_lookup_flags_get_type() {
        var mh$ = gtk_icon_lookup_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3220.const$4,"gtk_icon_theme_error_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_icon_theme_error_get_type();
     * }
     */
    public static long gtk_icon_theme_error_get_type() {
        var mh$ = gtk_icon_theme_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_drop_position_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3220.const$5,"gtk_icon_view_drop_position_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_icon_view_drop_position_get_type();
     * }
     */
    public static long gtk_icon_view_drop_position_get_type() {
        var mh$ = gtk_icon_view_drop_position_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3221.const$0,"gtk_image_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_image_type_get_type();
     * }
     */
    public static long gtk_image_type_get_type() {
        var mh$ = gtk_image_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_arrow_placement_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3221.const$1,"gtk_arrow_placement_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_arrow_placement_get_type();
     * }
     */
    public static long gtk_arrow_placement_get_type() {
        var mh$ = gtk_arrow_placement_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buttons_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3221.const$2,"gtk_buttons_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_buttons_type_get_type();
     * }
     */
    public static long gtk_buttons_type_get_type() {
        var mh$ = gtk_buttons_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_role_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3221.const$3,"gtk_button_role_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_button_role_get_type();
     * }
     */
    public static long gtk_button_role_get_type() {
        var mh$ = gtk_button_role_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_tab_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3221.const$4,"gtk_notebook_tab_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_notebook_tab_get_type();
     * }
     */
    public static long gtk_notebook_tab_get_type() {
        var mh$ = gtk_notebook_tab_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_pad_action_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3221.const$5,"gtk_pad_action_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_pad_action_type_get_type();
     * }
     */
    public static long gtk_pad_action_type_get_type() {
        var mh$ = gtk_pad_action_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_open_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3222.const$0,"gtk_places_open_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_places_open_flags_get_type();
     * }
     */
    public static long gtk_places_open_flags_get_type() {
        var mh$ = gtk_places_open_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_status_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3222.const$1,"gtk_print_status_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_print_status_get_type();
     * }
     */
    public static long gtk_print_status_get_type() {
        var mh$ = gtk_print_status_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_result_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3222.const$2,"gtk_print_operation_result_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_print_operation_result_get_type();
     * }
     */
    public static long gtk_print_operation_result_get_type() {
        var mh$ = gtk_print_operation_result_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3222.const$3,"gtk_print_operation_action_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_print_operation_action_get_type();
     * }
     */
    public static long gtk_print_operation_action_get_type() {
        var mh$ = gtk_print_operation_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3222.const$4,"gtk_print_error_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_print_error_get_type();
     * }
     */
    public static long gtk_print_error_get_type() {
        var mh$ = gtk_print_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_sort_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3222.const$5,"gtk_recent_sort_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_recent_sort_type_get_type();
     * }
     */
    public static long gtk_recent_sort_type_get_type() {
        var mh$ = gtk_recent_sort_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_chooser_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3223.const$0,"gtk_recent_chooser_error_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_recent_chooser_error_get_type();
     * }
     */
    public static long gtk_recent_chooser_error_get_type() {
        var mh$ = gtk_recent_chooser_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_filter_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3223.const$1,"gtk_recent_filter_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_recent_filter_flags_get_type();
     * }
     */
    public static long gtk_recent_filter_flags_get_type() {
        var mh$ = gtk_recent_filter_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3223.const$2,"gtk_recent_manager_error_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_recent_manager_error_get_type();
     * }
     */
    public static long gtk_recent_manager_error_get_type() {
        var mh$ = gtk_recent_manager_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_transition_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3223.const$3,"gtk_revealer_transition_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_revealer_transition_type_get_type();
     * }
     */
    public static long gtk_revealer_transition_type_get_type() {
        var mh$ = gtk_revealer_transition_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_corner_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3223.const$4,"gtk_corner_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_corner_type_get_type();
     * }
     */
    public static long gtk_corner_type_get_type() {
        var mh$ = gtk_corner_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_policy_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3223.const$5,"gtk_policy_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_policy_type_get_type();
     * }
     */
    public static long gtk_policy_type_get_type() {
        var mh$ = gtk_policy_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_target_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3224.const$0,"gtk_target_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_target_flags_get_type();
     * }
     */
    public static long gtk_target_flags_get_type() {
        var mh$ = gtk_target_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3224.const$1,"gtk_shortcut_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_shortcut_type_get_type();
     * }
     */
    public static long gtk_shortcut_type_get_type() {
        var mh$ = gtk_shortcut_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_update_policy_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3224.const$2,"gtk_spin_button_update_policy_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_spin_button_update_policy_get_type();
     * }
     */
    public static long gtk_spin_button_update_policy_get_type() {
        var mh$ = gtk_spin_button_update_policy_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3224.const$3,"gtk_spin_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_spin_type_get_type();
     * }
     */
    public static long gtk_spin_type_get_type() {
        var mh$ = gtk_spin_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_transition_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3224.const$4,"gtk_stack_transition_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_stack_transition_type_get_type();
     * }
     */
    public static long gtk_stack_transition_type_get_type() {
        var mh$ = gtk_stack_transition_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_print_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3224.const$5,"gtk_style_context_print_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_style_context_print_flags_get_type();
     * }
     */
    public static long gtk_style_context_print_flags_get_type() {
        var mh$ = gtk_style_context_print_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_target_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3225.const$0,"gtk_text_buffer_target_info_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_text_buffer_target_info_get_type();
     * }
     */
    public static long gtk_text_buffer_target_info_get_type() {
        var mh$ = gtk_text_buffer_target_info_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_search_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3225.const$1,"gtk_text_search_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_text_search_flags_get_type();
     * }
     */
    public static long gtk_text_search_flags_get_type() {
        var mh$ = gtk_text_search_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_window_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3225.const$2,"gtk_text_window_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_text_window_type_get_type();
     * }
     */
    public static long gtk_text_window_type_get_type() {
        var mh$ = gtk_text_window_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_layer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3225.const$3,"gtk_text_view_layer_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_text_view_layer_get_type();
     * }
     */
    public static long gtk_text_view_layer_get_type() {
        var mh$ = gtk_text_view_layer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_extend_selection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3225.const$4,"gtk_text_extend_selection_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_text_extend_selection_get_type();
     * }
     */
    public static long gtk_text_extend_selection_get_type() {
        var mh$ = gtk_text_extend_selection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toolbar_space_style_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3225.const$5,"gtk_toolbar_space_style_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_toolbar_space_style_get_type();
     * }
     */
    public static long gtk_toolbar_space_style_get_type() {
        var mh$ = gtk_toolbar_space_style_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_palette_drag_targets_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3226.const$0,"gtk_tool_palette_drag_targets_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tool_palette_drag_targets_get_type();
     * }
     */
    public static long gtk_tool_palette_drag_targets_get_type() {
        var mh$ = gtk_tool_palette_drag_targets_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3226.const$1,"gtk_tree_model_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tree_model_flags_get_type();
     * }
     */
    public static long gtk_tree_model_flags_get_type() {
        var mh$ = gtk_tree_model_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_drop_position_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3226.const$2,"gtk_tree_view_drop_position_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tree_view_drop_position_get_type();
     * }
     */
    public static long gtk_tree_view_drop_position_get_type() {
        var mh$ = gtk_tree_view_drop_position_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_sizing_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3226.const$3,"gtk_tree_view_column_sizing_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tree_view_column_sizing_get_type();
     * }
     */
    public static long gtk_tree_view_column_sizing_get_type() {
        var mh$ = gtk_tree_view_column_sizing_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_help_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3226.const$4,"gtk_widget_help_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_widget_help_type_get_type();
     * }
     */
    public static long gtk_widget_help_type_get_type() {
        var mh$ = gtk_widget_help_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3226.const$5,"gtk_window_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_window_type_get_type();
     * }
     */
    public static long gtk_window_type_get_type() {
        var mh$ = gtk_window_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_position_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3227.const$0,"gtk_window_position_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_window_position_get_type();
     * }
     */
    public static long gtk_window_position_get_type() {
        var mh$ = gtk_window_position_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_viewport_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3229.const$0,"gtk_viewport_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_viewport_get_type();
     * }
     */
    public static long gtk_viewport_get_type() {
        var mh$ = gtk_viewport_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_viewport_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3229.const$1,"gtk_viewport_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_viewport_new(struct _GtkAdjustment* hadjustment, struct _GtkAdjustment* vadjustment);
     * }
     */
    public static MemorySegment gtk_viewport_new(MemorySegment hadjustment, MemorySegment vadjustment) {
        var mh$ = gtk_viewport_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hadjustment, vadjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_viewport_get_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3229.const$2,"gtk_viewport_get_hadjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_viewport_get_hadjustment(struct _GtkViewport* viewport);
     * }
     */
    public static MemorySegment gtk_viewport_get_hadjustment(MemorySegment viewport) {
        var mh$ = gtk_viewport_get_hadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(viewport);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_viewport_get_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3229.const$3,"gtk_viewport_get_vadjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_viewport_get_vadjustment(struct _GtkViewport* viewport);
     * }
     */
    public static MemorySegment gtk_viewport_get_vadjustment(MemorySegment viewport) {
        var mh$ = gtk_viewport_get_vadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(viewport);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_viewport_set_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3229.const$4,"gtk_viewport_set_hadjustment");
    }
    /**
     * {@snippet :
     * void gtk_viewport_set_hadjustment(struct _GtkViewport* viewport, struct _GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_viewport_set_hadjustment(MemorySegment viewport, MemorySegment adjustment) {
        var mh$ = gtk_viewport_set_hadjustment$MH();
        try {
            mh$.invokeExact(viewport, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_viewport_set_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$3229.const$5,"gtk_viewport_set_vadjustment");
    }
    /**
     * {@snippet :
     * void gtk_viewport_set_vadjustment(struct _GtkViewport* viewport, struct _GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_viewport_set_vadjustment(MemorySegment viewport, MemorySegment adjustment) {
        var mh$ = gtk_viewport_set_vadjustment$MH();
        try {
            mh$.invokeExact(viewport, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_viewport_set_shadow_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3230.const$0,"gtk_viewport_set_shadow_type");
    }
    /**
     * {@snippet :
     * void gtk_viewport_set_shadow_type(struct _GtkViewport* viewport, enum GtkShadowType type);
     * }
     */
    public static void gtk_viewport_set_shadow_type(MemorySegment viewport, int type) {
        var mh$ = gtk_viewport_set_shadow_type$MH();
        try {
            mh$.invokeExact(viewport, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_viewport_get_shadow_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3230.const$1,"gtk_viewport_get_shadow_type");
    }
    /**
     * {@snippet :
     * enum GtkShadowType gtk_viewport_get_shadow_type(struct _GtkViewport* viewport);
     * }
     */
    public static int gtk_viewport_get_shadow_type(MemorySegment viewport) {
        var mh$ = gtk_viewport_get_shadow_type$MH();
        try {
            return (int)mh$.invokeExact(viewport);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_viewport_get_bin_window$MH() {
        return RuntimeHelper.requireNonNull(constants$3230.const$2,"gtk_viewport_get_bin_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gtk_viewport_get_bin_window(struct _GtkViewport* viewport);
     * }
     */
    public static MemorySegment gtk_viewport_get_bin_window(MemorySegment viewport) {
        var mh$ = gtk_viewport_get_bin_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(viewport);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_viewport_get_view_window$MH() {
        return RuntimeHelper.requireNonNull(constants$3230.const$3,"gtk_viewport_get_view_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gtk_viewport_get_view_window(struct _GtkViewport* viewport);
     * }
     */
    public static MemorySegment gtk_viewport_get_view_window(MemorySegment viewport) {
        var mh$ = gtk_viewport_get_view_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(viewport);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_volume_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3232.const$2,"gtk_volume_button_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_volume_button_get_type();
     * }
     */
    public static long gtk_volume_button_get_type() {
        var mh$ = gtk_volume_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_volume_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3232.const$3,"gtk_volume_button_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_volume_button_new();
     * }
     */
    public static MemorySegment gtk_volume_button_new() {
        var mh$ = gtk_volume_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_path_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$3232.const$4,"gtk_widget_path_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_widget_path_get_type();
     * }
     */
    public static long gtk_widget_path_get_type() {
        var mh$ = gtk_widget_path_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


