// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * enum _cairo_status (*cairo_user_font_face_get_text_to_glyphs_func$return)(struct _cairo_scaled_font*,char*,int,struct cairo_glyph_t**,int*,struct cairo_text_cluster_t**,int*,enum _cairo_text_cluster_flags*);
 * }
 */
public interface cairo_user_font_face_get_text_to_glyphs_func$return {

    int apply(java.lang.foreign.MemorySegment scaled_font, java.lang.foreign.MemorySegment utf8, int utf8_len, java.lang.foreign.MemorySegment glyphs, java.lang.foreign.MemorySegment num_glyphs, java.lang.foreign.MemorySegment clusters, java.lang.foreign.MemorySegment num_clusters, java.lang.foreign.MemorySegment cluster_flags);
    static MemorySegment allocate(cairo_user_font_face_get_text_to_glyphs_func$return fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$1714.const$4, fi, constants$1711.const$2, scope);
    }
    static cairo_user_font_face_get_text_to_glyphs_func$return ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _scaled_font, java.lang.foreign.MemorySegment _utf8, int _utf8_len, java.lang.foreign.MemorySegment _glyphs, java.lang.foreign.MemorySegment _num_glyphs, java.lang.foreign.MemorySegment _clusters, java.lang.foreign.MemorySegment _num_clusters, java.lang.foreign.MemorySegment _cluster_flags) -> {
            try {
                return (int)constants$1711.const$4.invokeExact(symbol, _scaled_font, _utf8, _utf8_len, _glyphs, _num_glyphs, _clusters, _num_clusters, _cluster_flags);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


