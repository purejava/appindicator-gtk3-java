// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _GtkBindingSet {
 *     char* set_name;
 *     int priority;
 *     struct _GSList* widget_path_pspecs;
 *     struct _GSList* widget_class_pspecs;
 *     struct _GSList* class_branch_pspecs;
 *     struct _GtkBindingEntry* entries;
 *     struct _GtkBindingEntry* current;
 *      *     unsigned int parsed;
 * };
 * }
 */
public class _GtkBindingSet {

    public static MemoryLayout $LAYOUT() {
        return constants$2528.const$2;
    }
    public static VarHandle set_name$VH() {
        return constants$2528.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* set_name;
     * }
     */
    public static MemorySegment set_name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2528.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* set_name;
     * }
     */
    public static void set_name$set(MemorySegment seg, MemorySegment x) {
        constants$2528.const$3.set(seg, x);
    }
    public static MemorySegment set_name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2528.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void set_name$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2528.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle priority$VH() {
        return constants$2528.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int priority;
     * }
     */
    public static int priority$get(MemorySegment seg) {
        return (int)constants$2528.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int priority;
     * }
     */
    public static void priority$set(MemorySegment seg, int x) {
        constants$2528.const$4.set(seg, x);
    }
    public static int priority$get(MemorySegment seg, long index) {
        return (int)constants$2528.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void priority$set(MemorySegment seg, long index, int x) {
        constants$2528.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle widget_path_pspecs$VH() {
        return constants$2528.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _GSList* widget_path_pspecs;
     * }
     */
    public static MemorySegment widget_path_pspecs$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2528.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _GSList* widget_path_pspecs;
     * }
     */
    public static void widget_path_pspecs$set(MemorySegment seg, MemorySegment x) {
        constants$2528.const$5.set(seg, x);
    }
    public static MemorySegment widget_path_pspecs$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2528.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void widget_path_pspecs$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2528.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle widget_class_pspecs$VH() {
        return constants$2529.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _GSList* widget_class_pspecs;
     * }
     */
    public static MemorySegment widget_class_pspecs$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2529.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _GSList* widget_class_pspecs;
     * }
     */
    public static void widget_class_pspecs$set(MemorySegment seg, MemorySegment x) {
        constants$2529.const$0.set(seg, x);
    }
    public static MemorySegment widget_class_pspecs$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2529.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void widget_class_pspecs$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2529.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle class_branch_pspecs$VH() {
        return constants$2529.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _GSList* class_branch_pspecs;
     * }
     */
    public static MemorySegment class_branch_pspecs$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2529.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _GSList* class_branch_pspecs;
     * }
     */
    public static void class_branch_pspecs$set(MemorySegment seg, MemorySegment x) {
        constants$2529.const$1.set(seg, x);
    }
    public static MemorySegment class_branch_pspecs$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2529.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void class_branch_pspecs$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2529.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle entries$VH() {
        return constants$2529.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _GtkBindingEntry* entries;
     * }
     */
    public static MemorySegment entries$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2529.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _GtkBindingEntry* entries;
     * }
     */
    public static void entries$set(MemorySegment seg, MemorySegment x) {
        constants$2529.const$2.set(seg, x);
    }
    public static MemorySegment entries$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2529.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void entries$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2529.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle current$VH() {
        return constants$2529.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _GtkBindingEntry* current;
     * }
     */
    public static MemorySegment current$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2529.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _GtkBindingEntry* current;
     * }
     */
    public static void current$set(MemorySegment seg, MemorySegment x) {
        constants$2529.const$3.set(seg, x);
    }
    public static MemorySegment current$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2529.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void current$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2529.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


