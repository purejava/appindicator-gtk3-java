// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class app_indicator_h_14 extends app_indicator_h_13 {

    /**
     * {@snippet :
     * enum GtkBorderStyle.GTK_BORDER_STYLE_DOTTED = 5;
     * }
     */
    public static int GTK_BORDER_STYLE_DOTTED() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkBorderStyle.GTK_BORDER_STYLE_DASHED = 6;
     * }
     */
    public static int GTK_BORDER_STYLE_DASHED() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GtkBorderStyle.GTK_BORDER_STYLE_DOUBLE = 7;
     * }
     */
    public static int GTK_BORDER_STYLE_DOUBLE() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GtkBorderStyle.GTK_BORDER_STYLE_GROOVE = 8;
     * }
     */
    public static int GTK_BORDER_STYLE_GROOVE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GtkBorderStyle.GTK_BORDER_STYLE_RIDGE = 9;
     * }
     */
    public static int GTK_BORDER_STYLE_RIDGE() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum GtkLevelBarMode.GTK_LEVEL_BAR_MODE_CONTINUOUS = 0;
     * }
     */
    public static int GTK_LEVEL_BAR_MODE_CONTINUOUS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkLevelBarMode.GTK_LEVEL_BAR_MODE_DISCRETE = 1;
     * }
     */
    public static int GTK_LEVEL_BAR_MODE_DISCRETE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkInputPurpose.GTK_INPUT_PURPOSE_FREE_FORM = 0;
     * }
     */
    public static int GTK_INPUT_PURPOSE_FREE_FORM() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkInputPurpose.GTK_INPUT_PURPOSE_ALPHA = 1;
     * }
     */
    public static int GTK_INPUT_PURPOSE_ALPHA() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkInputPurpose.GTK_INPUT_PURPOSE_DIGITS = 2;
     * }
     */
    public static int GTK_INPUT_PURPOSE_DIGITS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkInputPurpose.GTK_INPUT_PURPOSE_NUMBER = 3;
     * }
     */
    public static int GTK_INPUT_PURPOSE_NUMBER() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkInputPurpose.GTK_INPUT_PURPOSE_PHONE = 4;
     * }
     */
    public static int GTK_INPUT_PURPOSE_PHONE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkInputPurpose.GTK_INPUT_PURPOSE_URL = 5;
     * }
     */
    public static int GTK_INPUT_PURPOSE_URL() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkInputPurpose.GTK_INPUT_PURPOSE_EMAIL = 6;
     * }
     */
    public static int GTK_INPUT_PURPOSE_EMAIL() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GtkInputPurpose.GTK_INPUT_PURPOSE_NAME = 7;
     * }
     */
    public static int GTK_INPUT_PURPOSE_NAME() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GtkInputPurpose.GTK_INPUT_PURPOSE_PASSWORD = 8;
     * }
     */
    public static int GTK_INPUT_PURPOSE_PASSWORD() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GtkInputPurpose.GTK_INPUT_PURPOSE_PIN = 9;
     * }
     */
    public static int GTK_INPUT_PURPOSE_PIN() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum GtkInputPurpose.GTK_INPUT_PURPOSE_TERMINAL = 10;
     * }
     */
    public static int GTK_INPUT_PURPOSE_TERMINAL() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum GtkInputHints.GTK_INPUT_HINT_NONE = 0;
     * }
     */
    public static int GTK_INPUT_HINT_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkInputHints.GTK_INPUT_HINT_SPELLCHECK = 1;
     * }
     */
    public static int GTK_INPUT_HINT_SPELLCHECK() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkInputHints.GTK_INPUT_HINT_NO_SPELLCHECK = 2;
     * }
     */
    public static int GTK_INPUT_HINT_NO_SPELLCHECK() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkInputHints.GTK_INPUT_HINT_WORD_COMPLETION = 4;
     * }
     */
    public static int GTK_INPUT_HINT_WORD_COMPLETION() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkInputHints.GTK_INPUT_HINT_LOWERCASE = 8;
     * }
     */
    public static int GTK_INPUT_HINT_LOWERCASE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GtkInputHints.GTK_INPUT_HINT_UPPERCASE_CHARS = 16;
     * }
     */
    public static int GTK_INPUT_HINT_UPPERCASE_CHARS() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GtkInputHints.GTK_INPUT_HINT_UPPERCASE_WORDS = 32;
     * }
     */
    public static int GTK_INPUT_HINT_UPPERCASE_WORDS() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GtkInputHints.GTK_INPUT_HINT_UPPERCASE_SENTENCES = 64;
     * }
     */
    public static int GTK_INPUT_HINT_UPPERCASE_SENTENCES() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum GtkInputHints.GTK_INPUT_HINT_INHIBIT_OSK = 128;
     * }
     */
    public static int GTK_INPUT_HINT_INHIBIT_OSK() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum GtkInputHints.GTK_INPUT_HINT_VERTICAL_WRITING = 256;
     * }
     */
    public static int GTK_INPUT_HINT_VERTICAL_WRITING() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum GtkInputHints.GTK_INPUT_HINT_EMOJI = 512;
     * }
     */
    public static int GTK_INPUT_HINT_EMOJI() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * enum GtkInputHints.GTK_INPUT_HINT_NO_EMOJI = 1024;
     * }
     */
    public static int GTK_INPUT_HINT_NO_EMOJI() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * enum GtkPropagationPhase.GTK_PHASE_NONE = 0;
     * }
     */
    public static int GTK_PHASE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkPropagationPhase.GTK_PHASE_CAPTURE = 1;
     * }
     */
    public static int GTK_PHASE_CAPTURE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkPropagationPhase.GTK_PHASE_BUBBLE = 2;
     * }
     */
    public static int GTK_PHASE_BUBBLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkPropagationPhase.GTK_PHASE_TARGET = 3;
     * }
     */
    public static int GTK_PHASE_TARGET() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkEventSequenceState.GTK_EVENT_SEQUENCE_NONE = 0;
     * }
     */
    public static int GTK_EVENT_SEQUENCE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkEventSequenceState.GTK_EVENT_SEQUENCE_CLAIMED = 1;
     * }
     */
    public static int GTK_EVENT_SEQUENCE_CLAIMED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkEventSequenceState.GTK_EVENT_SEQUENCE_DENIED = 2;
     * }
     */
    public static int GTK_EVENT_SEQUENCE_DENIED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkPanDirection.GTK_PAN_DIRECTION_LEFT = 0;
     * }
     */
    public static int GTK_PAN_DIRECTION_LEFT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkPanDirection.GTK_PAN_DIRECTION_RIGHT = 1;
     * }
     */
    public static int GTK_PAN_DIRECTION_RIGHT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkPanDirection.GTK_PAN_DIRECTION_UP = 2;
     * }
     */
    public static int GTK_PAN_DIRECTION_UP() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkPanDirection.GTK_PAN_DIRECTION_DOWN = 3;
     * }
     */
    public static int GTK_PAN_DIRECTION_DOWN() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkPopoverConstraint.GTK_POPOVER_CONSTRAINT_NONE = 0;
     * }
     */
    public static int GTK_POPOVER_CONSTRAINT_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkPopoverConstraint.GTK_POPOVER_CONSTRAINT_WINDOW = 1;
     * }
     */
    public static int GTK_POPOVER_CONSTRAINT_WINDOW() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkAccelFlags.GTK_ACCEL_VISIBLE = 1;
     * }
     */
    public static int GTK_ACCEL_VISIBLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkAccelFlags.GTK_ACCEL_LOCKED = 2;
     * }
     */
    public static int GTK_ACCEL_LOCKED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkAccelFlags.GTK_ACCEL_MASK = 7;
     * }
     */
    public static int GTK_ACCEL_MASK() {
        return (int)7L;
    }
    public static MethodHandle gtk_accel_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1953.const$1,"gtk_accel_group_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_accel_group_get_type();
     * }
     */
    public static long gtk_accel_group_get_type() {
        var mh$ = gtk_accel_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1953.const$2,"gtk_accel_group_new");
    }
    /**
     * {@snippet :
     * struct _GtkAccelGroup* gtk_accel_group_new();
     * }
     */
    public static MemorySegment gtk_accel_group_new() {
        var mh$ = gtk_accel_group_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_get_is_locked$MH() {
        return RuntimeHelper.requireNonNull(constants$1953.const$3,"gtk_accel_group_get_is_locked");
    }
    /**
     * {@snippet :
     * int gtk_accel_group_get_is_locked(struct _GtkAccelGroup* accel_group);
     * }
     */
    public static int gtk_accel_group_get_is_locked(MemorySegment accel_group) {
        var mh$ = gtk_accel_group_get_is_locked$MH();
        try {
            return (int)mh$.invokeExact(accel_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_get_modifier_mask$MH() {
        return RuntimeHelper.requireNonNull(constants$1953.const$4,"gtk_accel_group_get_modifier_mask");
    }
    /**
     * {@snippet :
     * enum GdkModifierType gtk_accel_group_get_modifier_mask(struct _GtkAccelGroup* accel_group);
     * }
     */
    public static int gtk_accel_group_get_modifier_mask(MemorySegment accel_group) {
        var mh$ = gtk_accel_group_get_modifier_mask$MH();
        try {
            return (int)mh$.invokeExact(accel_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_lock$MH() {
        return RuntimeHelper.requireNonNull(constants$1953.const$5,"gtk_accel_group_lock");
    }
    /**
     * {@snippet :
     * void gtk_accel_group_lock(struct _GtkAccelGroup* accel_group);
     * }
     */
    public static void gtk_accel_group_lock(MemorySegment accel_group) {
        var mh$ = gtk_accel_group_lock$MH();
        try {
            mh$.invokeExact(accel_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_unlock$MH() {
        return RuntimeHelper.requireNonNull(constants$1954.const$0,"gtk_accel_group_unlock");
    }
    /**
     * {@snippet :
     * void gtk_accel_group_unlock(struct _GtkAccelGroup* accel_group);
     * }
     */
    public static void gtk_accel_group_unlock(MemorySegment accel_group) {
        var mh$ = gtk_accel_group_unlock$MH();
        try {
            mh$.invokeExact(accel_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$1954.const$2,"gtk_accel_group_connect");
    }
    /**
     * {@snippet :
     * void gtk_accel_group_connect(struct _GtkAccelGroup* accel_group, unsigned int accel_key, enum GdkModifierType accel_mods, enum GtkAccelFlags accel_flags, struct _GClosure* closure);
     * }
     */
    public static void gtk_accel_group_connect(MemorySegment accel_group, int accel_key, int accel_mods, int accel_flags, MemorySegment closure) {
        var mh$ = gtk_accel_group_connect$MH();
        try {
            mh$.invokeExact(accel_group, accel_key, accel_mods, accel_flags, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_connect_by_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1954.const$3,"gtk_accel_group_connect_by_path");
    }
    /**
     * {@snippet :
     * void gtk_accel_group_connect_by_path(struct _GtkAccelGroup* accel_group, char* accel_path, struct _GClosure* closure);
     * }
     */
    public static void gtk_accel_group_connect_by_path(MemorySegment accel_group, MemorySegment accel_path, MemorySegment closure) {
        var mh$ = gtk_accel_group_connect_by_path$MH();
        try {
            mh$.invokeExact(accel_group, accel_path, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$1954.const$4,"gtk_accel_group_disconnect");
    }
    /**
     * {@snippet :
     * int gtk_accel_group_disconnect(struct _GtkAccelGroup* accel_group, struct _GClosure* closure);
     * }
     */
    public static int gtk_accel_group_disconnect(MemorySegment accel_group, MemorySegment closure) {
        var mh$ = gtk_accel_group_disconnect$MH();
        try {
            return (int)mh$.invokeExact(accel_group, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_disconnect_key$MH() {
        return RuntimeHelper.requireNonNull(constants$1954.const$5,"gtk_accel_group_disconnect_key");
    }
    /**
     * {@snippet :
     * int gtk_accel_group_disconnect_key(struct _GtkAccelGroup* accel_group, unsigned int accel_key, enum GdkModifierType accel_mods);
     * }
     */
    public static int gtk_accel_group_disconnect_key(MemorySegment accel_group, int accel_key, int accel_mods) {
        var mh$ = gtk_accel_group_disconnect_key$MH();
        try {
            return (int)mh$.invokeExact(accel_group, accel_key, accel_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1955.const$1,"gtk_accel_group_activate");
    }
    /**
     * {@snippet :
     * int gtk_accel_group_activate(struct _GtkAccelGroup* accel_group, unsigned int accel_quark, struct _GObject* acceleratable, unsigned int accel_key, enum GdkModifierType accel_mods);
     * }
     */
    public static int gtk_accel_group_activate(MemorySegment accel_group, int accel_quark, MemorySegment acceleratable, int accel_key, int accel_mods) {
        var mh$ = gtk_accel_group_activate$MH();
        try {
            return (int)mh$.invokeExact(accel_group, accel_quark, acceleratable, accel_key, accel_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_accel_group_attach$MH() {
        return RuntimeHelper.requireNonNull(constants$1955.const$2,"_gtk_accel_group_attach");
    }
    /**
     * {@snippet :
     * void _gtk_accel_group_attach(struct _GtkAccelGroup* accel_group, struct _GObject* object);
     * }
     */
    public static void _gtk_accel_group_attach(MemorySegment accel_group, MemorySegment object) {
        var mh$ = _gtk_accel_group_attach$MH();
        try {
            mh$.invokeExact(accel_group, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_accel_group_detach$MH() {
        return RuntimeHelper.requireNonNull(constants$1955.const$3,"_gtk_accel_group_detach");
    }
    /**
     * {@snippet :
     * void _gtk_accel_group_detach(struct _GtkAccelGroup* accel_group, struct _GObject* object);
     * }
     */
    public static void _gtk_accel_group_detach(MemorySegment accel_group, MemorySegment object) {
        var mh$ = _gtk_accel_group_detach$MH();
        try {
            mh$.invokeExact(accel_group, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_groups_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1955.const$4,"gtk_accel_groups_activate");
    }
    /**
     * {@snippet :
     * int gtk_accel_groups_activate(struct _GObject* object, unsigned int accel_key, enum GdkModifierType accel_mods);
     * }
     */
    public static int gtk_accel_groups_activate(MemorySegment object, int accel_key, int accel_mods) {
        var mh$ = gtk_accel_groups_activate$MH();
        try {
            return (int)mh$.invokeExact(object, accel_key, accel_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_groups_from_object$MH() {
        return RuntimeHelper.requireNonNull(constants$1955.const$5,"gtk_accel_groups_from_object");
    }
    /**
     * {@snippet :
     * struct _GSList* gtk_accel_groups_from_object(struct _GObject* object);
     * }
     */
    public static MemorySegment gtk_accel_groups_from_object(MemorySegment object) {
        var mh$ = gtk_accel_groups_from_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_find$MH() {
        return RuntimeHelper.requireNonNull(constants$1956.const$1,"gtk_accel_group_find");
    }
    /**
     * {@snippet :
     * struct _GtkAccelKey* gtk_accel_group_find(struct _GtkAccelGroup* accel_group, int (*find_func)(struct _GtkAccelKey*,struct _GClosure*,void*), void* data);
     * }
     */
    public static MemorySegment gtk_accel_group_find(MemorySegment accel_group, MemorySegment find_func, MemorySegment data) {
        var mh$ = gtk_accel_group_find$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accel_group, find_func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_from_accel_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$1956.const$2,"gtk_accel_group_from_accel_closure");
    }
    /**
     * {@snippet :
     * struct _GtkAccelGroup* gtk_accel_group_from_accel_closure(struct _GClosure* closure);
     * }
     */
    public static MemorySegment gtk_accel_group_from_accel_closure(MemorySegment closure) {
        var mh$ = gtk_accel_group_from_accel_closure$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$1956.const$3,"gtk_accelerator_valid");
    }
    /**
     * {@snippet :
     * int gtk_accelerator_valid(unsigned int keyval, enum GdkModifierType modifiers);
     * }
     */
    public static int gtk_accelerator_valid(int keyval, int modifiers) {
        var mh$ = gtk_accelerator_valid$MH();
        try {
            return (int)mh$.invokeExact(keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_parse$MH() {
        return RuntimeHelper.requireNonNull(constants$1956.const$4,"gtk_accelerator_parse");
    }
    /**
     * {@snippet :
     * void gtk_accelerator_parse(char* accelerator, unsigned int* accelerator_key, enum GdkModifierType* accelerator_mods);
     * }
     */
    public static void gtk_accelerator_parse(MemorySegment accelerator, MemorySegment accelerator_key, MemorySegment accelerator_mods) {
        var mh$ = gtk_accelerator_parse$MH();
        try {
            mh$.invokeExact(accelerator, accelerator_key, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_parse_with_keycode$MH() {
        return RuntimeHelper.requireNonNull(constants$1956.const$5,"gtk_accelerator_parse_with_keycode");
    }
    /**
     * {@snippet :
     * void gtk_accelerator_parse_with_keycode(char* accelerator, unsigned int* accelerator_key, unsigned int** accelerator_codes, enum GdkModifierType* accelerator_mods);
     * }
     */
    public static void gtk_accelerator_parse_with_keycode(MemorySegment accelerator, MemorySegment accelerator_key, MemorySegment accelerator_codes, MemorySegment accelerator_mods) {
        var mh$ = gtk_accelerator_parse_with_keycode$MH();
        try {
            mh$.invokeExact(accelerator, accelerator_key, accelerator_codes, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1957.const$0,"gtk_accelerator_name");
    }
    /**
     * {@snippet :
     * char* gtk_accelerator_name(unsigned int accelerator_key, enum GdkModifierType accelerator_mods);
     * }
     */
    public static MemorySegment gtk_accelerator_name(int accelerator_key, int accelerator_mods) {
        var mh$ = gtk_accelerator_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accelerator_key, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_name_with_keycode$MH() {
        return RuntimeHelper.requireNonNull(constants$1957.const$1,"gtk_accelerator_name_with_keycode");
    }
    /**
     * {@snippet :
     * char* gtk_accelerator_name_with_keycode(struct _GdkDisplay* display, unsigned int accelerator_key, unsigned int keycode, enum GdkModifierType accelerator_mods);
     * }
     */
    public static MemorySegment gtk_accelerator_name_with_keycode(MemorySegment display, int accelerator_key, int keycode, int accelerator_mods) {
        var mh$ = gtk_accelerator_name_with_keycode$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display, accelerator_key, keycode, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1957.const$2,"gtk_accelerator_get_label");
    }
    /**
     * {@snippet :
     * char* gtk_accelerator_get_label(unsigned int accelerator_key, enum GdkModifierType accelerator_mods);
     * }
     */
    public static MemorySegment gtk_accelerator_get_label(int accelerator_key, int accelerator_mods) {
        var mh$ = gtk_accelerator_get_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accelerator_key, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_get_label_with_keycode$MH() {
        return RuntimeHelper.requireNonNull(constants$1957.const$3,"gtk_accelerator_get_label_with_keycode");
    }
    /**
     * {@snippet :
     * char* gtk_accelerator_get_label_with_keycode(struct _GdkDisplay* display, unsigned int accelerator_key, unsigned int keycode, enum GdkModifierType accelerator_mods);
     * }
     */
    public static MemorySegment gtk_accelerator_get_label_with_keycode(MemorySegment display, int accelerator_key, int keycode, int accelerator_mods) {
        var mh$ = gtk_accelerator_get_label_with_keycode$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display, accelerator_key, keycode, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_set_default_mod_mask$MH() {
        return RuntimeHelper.requireNonNull(constants$1957.const$4,"gtk_accelerator_set_default_mod_mask");
    }
    /**
     * {@snippet :
     * void gtk_accelerator_set_default_mod_mask(enum GdkModifierType default_mod_mask);
     * }
     */
    public static void gtk_accelerator_set_default_mod_mask(int default_mod_mask) {
        var mh$ = gtk_accelerator_set_default_mod_mask$MH();
        try {
            mh$.invokeExact(default_mod_mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_get_default_mod_mask$MH() {
        return RuntimeHelper.requireNonNull(constants$1957.const$5,"gtk_accelerator_get_default_mod_mask");
    }
    /**
     * {@snippet :
     * enum GdkModifierType gtk_accelerator_get_default_mod_mask();
     * }
     */
    public static int gtk_accelerator_get_default_mod_mask() {
        var mh$ = gtk_accelerator_get_default_mod_mask$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_group_query$MH() {
        return RuntimeHelper.requireNonNull(constants$1958.const$0,"gtk_accel_group_query");
    }
    /**
     * {@snippet :
     * struct _GtkAccelGroupEntry* gtk_accel_group_query(struct _GtkAccelGroup* accel_group, unsigned int accel_key, enum GdkModifierType accel_mods, unsigned int* n_entries);
     * }
     */
    public static MemorySegment gtk_accel_group_query(MemorySegment accel_group, int accel_key, int accel_mods, MemorySegment n_entries) {
        var mh$ = gtk_accel_group_query$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accel_group, accel_key, accel_mods, n_entries);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkAccelGroup* GtkAccelGroup_autoptr;
     * }
     */
    public static final AddressLayout GtkAccelGroup_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkAccelGroup_listautoptr;
     * }
     */
    public static final AddressLayout GtkAccelGroup_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkAccelGroup_slistautoptr;
     * }
     */
    public static final AddressLayout GtkAccelGroup_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkAccelGroup_queueautoptr;
     * }
     */
    public static final AddressLayout GtkAccelGroup_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle gtk_border_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1959.const$3,"gtk_border_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_border_get_type();
     * }
     */
    public static long gtk_border_get_type() {
        var mh$ = gtk_border_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_border_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1959.const$4,"gtk_border_new");
    }
    /**
     * {@snippet :
     * struct _GtkBorder* gtk_border_new();
     * }
     */
    public static MemorySegment gtk_border_new() {
        var mh$ = gtk_border_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_border_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1959.const$5,"gtk_border_copy");
    }
    /**
     * {@snippet :
     * struct _GtkBorder* gtk_border_copy(struct _GtkBorder* border_);
     * }
     */
    public static MemorySegment gtk_border_copy(MemorySegment border_) {
        var mh$ = gtk_border_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(border_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_border_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1960.const$0,"gtk_border_free");
    }
    /**
     * {@snippet :
     * void gtk_border_free(struct _GtkBorder* border_);
     * }
     */
    public static void gtk_border_free(MemorySegment border_) {
        var mh$ = gtk_border_free$MH();
        try {
            mh$.invokeExact(border_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkBorder* GtkBorder_autoptr;
     * }
     */
    public static final AddressLayout GtkBorder_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkBorder_listautoptr;
     * }
     */
    public static final AddressLayout GtkBorder_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkBorder_slistautoptr;
     * }
     */
    public static final AddressLayout GtkBorder_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkBorder_queueautoptr;
     * }
     */
    public static final AddressLayout GtkBorder_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle atk_get_major_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1960.const$5,"atk_get_major_version");
    }
    /**
     * {@snippet :
     * unsigned int atk_get_major_version();
     * }
     */
    public static int atk_get_major_version() {
        var mh$ = atk_get_major_version$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_minor_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1961.const$0,"atk_get_minor_version");
    }
    /**
     * {@snippet :
     * unsigned int atk_get_minor_version();
     * }
     */
    public static int atk_get_minor_version() {
        var mh$ = atk_get_minor_version$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_micro_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1961.const$1,"atk_get_micro_version");
    }
    /**
     * {@snippet :
     * unsigned int atk_get_micro_version();
     * }
     */
    public static int atk_get_micro_version() {
        var mh$ = atk_get_micro_version$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_binary_age$MH() {
        return RuntimeHelper.requireNonNull(constants$1961.const$2,"atk_get_binary_age");
    }
    /**
     * {@snippet :
     * unsigned int atk_get_binary_age();
     * }
     */
    public static int atk_get_binary_age() {
        var mh$ = atk_get_binary_age$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_interface_age$MH() {
        return RuntimeHelper.requireNonNull(constants$1961.const$3,"atk_get_interface_age");
    }
    /**
     * {@snippet :
     * unsigned int atk_get_interface_age();
     * }
     */
    public static int atk_get_interface_age() {
        var mh$ = atk_get_interface_age$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_scroll_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1961.const$4,"atk_scroll_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_scroll_type_get_type();
     * }
     */
    public static long atk_scroll_type_get_type() {
        var mh$ = atk_scroll_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_state_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1961.const$5,"atk_hyperlink_state_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_hyperlink_state_flags_get_type();
     * }
     */
    public static long atk_hyperlink_state_flags_get_type() {
        var mh$ = atk_hyperlink_state_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_role_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1962.const$0,"atk_role_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_role_get_type();
     * }
     */
    public static long atk_role_get_type() {
        var mh$ = atk_role_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_layer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1962.const$1,"atk_layer_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_layer_get_type();
     * }
     */
    public static long atk_layer_get_type() {
        var mh$ = atk_layer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1962.const$2,"atk_relation_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_relation_type_get_type();
     * }
     */
    public static long atk_relation_type_get_type() {
        var mh$ = atk_relation_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1962.const$3,"atk_state_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_state_type_get_type();
     * }
     */
    public static long atk_state_type_get_type() {
        var mh$ = atk_state_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_attribute_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1962.const$4,"atk_text_attribute_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_text_attribute_get_type();
     * }
     */
    public static long atk_text_attribute_get_type() {
        var mh$ = atk_text_attribute_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_boundary_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1962.const$5,"atk_text_boundary_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_text_boundary_get_type();
     * }
     */
    public static long atk_text_boundary_get_type() {
        var mh$ = atk_text_boundary_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_granularity_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1963.const$0,"atk_text_granularity_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_text_granularity_get_type();
     * }
     */
    public static long atk_text_granularity_get_type() {
        var mh$ = atk_text_granularity_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_clip_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1963.const$1,"atk_text_clip_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_text_clip_type_get_type();
     * }
     */
    public static long atk_text_clip_type_get_type() {
        var mh$ = atk_text_clip_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_key_event_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1963.const$2,"atk_key_event_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_key_event_type_get_type();
     * }
     */
    public static long atk_key_event_type_get_type() {
        var mh$ = atk_key_event_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_coord_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1963.const$3,"atk_coord_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_coord_type_get_type();
     * }
     */
    public static long atk_coord_type_get_type() {
        var mh$ = atk_coord_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1963.const$4,"atk_value_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_value_type_get_type();
     * }
     */
    public static long atk_value_type_get_type() {
        var mh$ = atk_value_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_NULL = 0;
     * }
     */
    public static int ATK_RELATION_NULL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_CONTROLLED_BY = 1;
     * }
     */
    public static int ATK_RELATION_CONTROLLED_BY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_CONTROLLER_FOR = 2;
     * }
     */
    public static int ATK_RELATION_CONTROLLER_FOR() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_LABEL_FOR = 3;
     * }
     */
    public static int ATK_RELATION_LABEL_FOR() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_LABELLED_BY = 4;
     * }
     */
    public static int ATK_RELATION_LABELLED_BY() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_MEMBER_OF = 5;
     * }
     */
    public static int ATK_RELATION_MEMBER_OF() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_NODE_CHILD_OF = 6;
     * }
     */
    public static int ATK_RELATION_NODE_CHILD_OF() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_FLOWS_TO = 7;
     * }
     */
    public static int ATK_RELATION_FLOWS_TO() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_FLOWS_FROM = 8;
     * }
     */
    public static int ATK_RELATION_FLOWS_FROM() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_SUBWINDOW_OF = 9;
     * }
     */
    public static int ATK_RELATION_SUBWINDOW_OF() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_EMBEDS = 10;
     * }
     */
    public static int ATK_RELATION_EMBEDS() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_EMBEDDED_BY = 11;
     * }
     */
    public static int ATK_RELATION_EMBEDDED_BY() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_POPUP_FOR = 12;
     * }
     */
    public static int ATK_RELATION_POPUP_FOR() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_PARENT_WINDOW_OF = 13;
     * }
     */
    public static int ATK_RELATION_PARENT_WINDOW_OF() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_DESCRIBED_BY = 14;
     * }
     */
    public static int ATK_RELATION_DESCRIBED_BY() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_DESCRIPTION_FOR = 15;
     * }
     */
    public static int ATK_RELATION_DESCRIPTION_FOR() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_NODE_PARENT_OF = 16;
     * }
     */
    public static int ATK_RELATION_NODE_PARENT_OF() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_DETAILS = 17;
     * }
     */
    public static int ATK_RELATION_DETAILS() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_DETAILS_FOR = 18;
     * }
     */
    public static int ATK_RELATION_DETAILS_FOR() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_ERROR_MESSAGE = 19;
     * }
     */
    public static int ATK_RELATION_ERROR_MESSAGE() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_ERROR_FOR = 20;
     * }
     */
    public static int ATK_RELATION_ERROR_FOR() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum AtkRelationType.ATK_RELATION_LAST_DEFINED = 21;
     * }
     */
    public static int ATK_RELATION_LAST_DEFINED() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_INVALID = 0;
     * }
     */
    public static int ATK_STATE_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_ACTIVE = 1;
     * }
     */
    public static int ATK_STATE_ACTIVE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_ARMED = 2;
     * }
     */
    public static int ATK_STATE_ARMED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_BUSY = 3;
     * }
     */
    public static int ATK_STATE_BUSY() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_CHECKED = 4;
     * }
     */
    public static int ATK_STATE_CHECKED() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_DEFUNCT = 5;
     * }
     */
    public static int ATK_STATE_DEFUNCT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_EDITABLE = 6;
     * }
     */
    public static int ATK_STATE_EDITABLE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_ENABLED = 7;
     * }
     */
    public static int ATK_STATE_ENABLED() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_EXPANDABLE = 8;
     * }
     */
    public static int ATK_STATE_EXPANDABLE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_EXPANDED = 9;
     * }
     */
    public static int ATK_STATE_EXPANDED() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_FOCUSABLE = 10;
     * }
     */
    public static int ATK_STATE_FOCUSABLE() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_FOCUSED = 11;
     * }
     */
    public static int ATK_STATE_FOCUSED() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_HORIZONTAL = 12;
     * }
     */
    public static int ATK_STATE_HORIZONTAL() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_ICONIFIED = 13;
     * }
     */
    public static int ATK_STATE_ICONIFIED() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_MODAL = 14;
     * }
     */
    public static int ATK_STATE_MODAL() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_MULTI_LINE = 15;
     * }
     */
    public static int ATK_STATE_MULTI_LINE() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_MULTISELECTABLE = 16;
     * }
     */
    public static int ATK_STATE_MULTISELECTABLE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_OPAQUE = 17;
     * }
     */
    public static int ATK_STATE_OPAQUE() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_PRESSED = 18;
     * }
     */
    public static int ATK_STATE_PRESSED() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_RESIZABLE = 19;
     * }
     */
    public static int ATK_STATE_RESIZABLE() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_SELECTABLE = 20;
     * }
     */
    public static int ATK_STATE_SELECTABLE() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_SELECTED = 21;
     * }
     */
    public static int ATK_STATE_SELECTED() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_SENSITIVE = 22;
     * }
     */
    public static int ATK_STATE_SENSITIVE() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_SHOWING = 23;
     * }
     */
    public static int ATK_STATE_SHOWING() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_SINGLE_LINE = 24;
     * }
     */
    public static int ATK_STATE_SINGLE_LINE() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_STALE = 25;
     * }
     */
    public static int ATK_STATE_STALE() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_TRANSIENT = 26;
     * }
     */
    public static int ATK_STATE_TRANSIENT() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_VERTICAL = 27;
     * }
     */
    public static int ATK_STATE_VERTICAL() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_VISIBLE = 28;
     * }
     */
    public static int ATK_STATE_VISIBLE() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_MANAGES_DESCENDANTS = 29;
     * }
     */
    public static int ATK_STATE_MANAGES_DESCENDANTS() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_INDETERMINATE = 30;
     * }
     */
    public static int ATK_STATE_INDETERMINATE() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_TRUNCATED = 31;
     * }
     */
    public static int ATK_STATE_TRUNCATED() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_REQUIRED = 32;
     * }
     */
    public static int ATK_STATE_REQUIRED() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_INVALID_ENTRY = 33;
     * }
     */
    public static int ATK_STATE_INVALID_ENTRY() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_SUPPORTS_AUTOCOMPLETION = 34;
     * }
     */
    public static int ATK_STATE_SUPPORTS_AUTOCOMPLETION() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_SELECTABLE_TEXT = 35;
     * }
     */
    public static int ATK_STATE_SELECTABLE_TEXT() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_DEFAULT = 36;
     * }
     */
    public static int ATK_STATE_DEFAULT() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_ANIMATED = 37;
     * }
     */
    public static int ATK_STATE_ANIMATED() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_VISITED = 38;
     * }
     */
    public static int ATK_STATE_VISITED() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_CHECKABLE = 39;
     * }
     */
    public static int ATK_STATE_CHECKABLE() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_HAS_POPUP = 40;
     * }
     */
    public static int ATK_STATE_HAS_POPUP() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_HAS_TOOLTIP = 41;
     * }
     */
    public static int ATK_STATE_HAS_TOOLTIP() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_READ_ONLY = 42;
     * }
     */
    public static int ATK_STATE_READ_ONLY() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_COLLAPSED = 43;
     * }
     */
    public static int ATK_STATE_COLLAPSED() {
        return (int)43L;
    }
    /**
     * {@snippet :
     * enum AtkStateType.ATK_STATE_LAST_DEFINED = 44;
     * }
     */
    public static int ATK_STATE_LAST_DEFINED() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * typedef unsigned long AtkState;
     * }
     */
    public static final OfLong AtkState = JAVA_LONG;
    public static MethodHandle atk_state_type_register$MH() {
        return RuntimeHelper.requireNonNull(constants$1963.const$5,"atk_state_type_register");
    }
    /**
     * {@snippet :
     * enum AtkStateType atk_state_type_register(char* name);
     * }
     */
    public static int atk_state_type_register(MemorySegment name) {
        var mh$ = atk_state_type_register$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_type_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1964.const$0,"atk_state_type_get_name");
    }
    /**
     * {@snippet :
     * char* atk_state_type_get_name(enum AtkStateType type);
     * }
     */
    public static MemorySegment atk_state_type_get_name(int type) {
        var mh$ = atk_state_type_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_type_for_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1964.const$1,"atk_state_type_for_name");
    }
    /**
     * {@snippet :
     * enum AtkStateType atk_state_type_for_name(char* name);
     * }
     */
    public static int atk_state_type_for_name(MemorySegment name) {
        var mh$ = atk_state_type_for_name$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_INVALID = 0;
     * }
     */
    public static int ATK_ROLE_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_ACCEL_LABEL = 1;
     * }
     */
    public static int ATK_ROLE_ACCEL_LABEL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_ALERT = 2;
     * }
     */
    public static int ATK_ROLE_ALERT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_ANIMATION = 3;
     * }
     */
    public static int ATK_ROLE_ANIMATION() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_ARROW = 4;
     * }
     */
    public static int ATK_ROLE_ARROW() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_CALENDAR = 5;
     * }
     */
    public static int ATK_ROLE_CALENDAR() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_CANVAS = 6;
     * }
     */
    public static int ATK_ROLE_CANVAS() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_CHECK_BOX = 7;
     * }
     */
    public static int ATK_ROLE_CHECK_BOX() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_CHECK_MENU_ITEM = 8;
     * }
     */
    public static int ATK_ROLE_CHECK_MENU_ITEM() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_COLOR_CHOOSER = 9;
     * }
     */
    public static int ATK_ROLE_COLOR_CHOOSER() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_COLUMN_HEADER = 10;
     * }
     */
    public static int ATK_ROLE_COLUMN_HEADER() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_COMBO_BOX = 11;
     * }
     */
    public static int ATK_ROLE_COMBO_BOX() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_DATE_EDITOR = 12;
     * }
     */
    public static int ATK_ROLE_DATE_EDITOR() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_DESKTOP_ICON = 13;
     * }
     */
    public static int ATK_ROLE_DESKTOP_ICON() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_DESKTOP_FRAME = 14;
     * }
     */
    public static int ATK_ROLE_DESKTOP_FRAME() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_DIAL = 15;
     * }
     */
    public static int ATK_ROLE_DIAL() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_DIALOG = 16;
     * }
     */
    public static int ATK_ROLE_DIALOG() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_DIRECTORY_PANE = 17;
     * }
     */
    public static int ATK_ROLE_DIRECTORY_PANE() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_DRAWING_AREA = 18;
     * }
     */
    public static int ATK_ROLE_DRAWING_AREA() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_FILE_CHOOSER = 19;
     * }
     */
    public static int ATK_ROLE_FILE_CHOOSER() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_FILLER = 20;
     * }
     */
    public static int ATK_ROLE_FILLER() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_FONT_CHOOSER = 21;
     * }
     */
    public static int ATK_ROLE_FONT_CHOOSER() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_FRAME = 22;
     * }
     */
    public static int ATK_ROLE_FRAME() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_GLASS_PANE = 23;
     * }
     */
    public static int ATK_ROLE_GLASS_PANE() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_HTML_CONTAINER = 24;
     * }
     */
    public static int ATK_ROLE_HTML_CONTAINER() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_ICON = 25;
     * }
     */
    public static int ATK_ROLE_ICON() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_IMAGE = 26;
     * }
     */
    public static int ATK_ROLE_IMAGE() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_INTERNAL_FRAME = 27;
     * }
     */
    public static int ATK_ROLE_INTERNAL_FRAME() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_LABEL = 28;
     * }
     */
    public static int ATK_ROLE_LABEL() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_LAYERED_PANE = 29;
     * }
     */
    public static int ATK_ROLE_LAYERED_PANE() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_LIST = 30;
     * }
     */
    public static int ATK_ROLE_LIST() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_LIST_ITEM = 31;
     * }
     */
    public static int ATK_ROLE_LIST_ITEM() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_MENU = 32;
     * }
     */
    public static int ATK_ROLE_MENU() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_MENU_BAR = 33;
     * }
     */
    public static int ATK_ROLE_MENU_BAR() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_MENU_ITEM = 34;
     * }
     */
    public static int ATK_ROLE_MENU_ITEM() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_OPTION_PANE = 35;
     * }
     */
    public static int ATK_ROLE_OPTION_PANE() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_PAGE_TAB = 36;
     * }
     */
    public static int ATK_ROLE_PAGE_TAB() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_PAGE_TAB_LIST = 37;
     * }
     */
    public static int ATK_ROLE_PAGE_TAB_LIST() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_PANEL = 38;
     * }
     */
    public static int ATK_ROLE_PANEL() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_PASSWORD_TEXT = 39;
     * }
     */
    public static int ATK_ROLE_PASSWORD_TEXT() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_POPUP_MENU = 40;
     * }
     */
    public static int ATK_ROLE_POPUP_MENU() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_PROGRESS_BAR = 41;
     * }
     */
    public static int ATK_ROLE_PROGRESS_BAR() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_PUSH_BUTTON = 42;
     * }
     */
    public static int ATK_ROLE_PUSH_BUTTON() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_RADIO_BUTTON = 43;
     * }
     */
    public static int ATK_ROLE_RADIO_BUTTON() {
        return (int)43L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_RADIO_MENU_ITEM = 44;
     * }
     */
    public static int ATK_ROLE_RADIO_MENU_ITEM() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_ROOT_PANE = 45;
     * }
     */
    public static int ATK_ROLE_ROOT_PANE() {
        return (int)45L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_ROW_HEADER = 46;
     * }
     */
    public static int ATK_ROLE_ROW_HEADER() {
        return (int)46L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_SCROLL_BAR = 47;
     * }
     */
    public static int ATK_ROLE_SCROLL_BAR() {
        return (int)47L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_SCROLL_PANE = 48;
     * }
     */
    public static int ATK_ROLE_SCROLL_PANE() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_SEPARATOR = 49;
     * }
     */
    public static int ATK_ROLE_SEPARATOR() {
        return (int)49L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_SLIDER = 50;
     * }
     */
    public static int ATK_ROLE_SLIDER() {
        return (int)50L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_SPLIT_PANE = 51;
     * }
     */
    public static int ATK_ROLE_SPLIT_PANE() {
        return (int)51L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_SPIN_BUTTON = 52;
     * }
     */
    public static int ATK_ROLE_SPIN_BUTTON() {
        return (int)52L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_STATUSBAR = 53;
     * }
     */
    public static int ATK_ROLE_STATUSBAR() {
        return (int)53L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_TABLE = 54;
     * }
     */
    public static int ATK_ROLE_TABLE() {
        return (int)54L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_TABLE_CELL = 55;
     * }
     */
    public static int ATK_ROLE_TABLE_CELL() {
        return (int)55L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_TABLE_COLUMN_HEADER = 56;
     * }
     */
    public static int ATK_ROLE_TABLE_COLUMN_HEADER() {
        return (int)56L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_TABLE_ROW_HEADER = 57;
     * }
     */
    public static int ATK_ROLE_TABLE_ROW_HEADER() {
        return (int)57L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_TEAR_OFF_MENU_ITEM = 58;
     * }
     */
    public static int ATK_ROLE_TEAR_OFF_MENU_ITEM() {
        return (int)58L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_TERMINAL = 59;
     * }
     */
    public static int ATK_ROLE_TERMINAL() {
        return (int)59L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_TEXT = 60;
     * }
     */
    public static int ATK_ROLE_TEXT() {
        return (int)60L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_TOGGLE_BUTTON = 61;
     * }
     */
    public static int ATK_ROLE_TOGGLE_BUTTON() {
        return (int)61L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_TOOL_BAR = 62;
     * }
     */
    public static int ATK_ROLE_TOOL_BAR() {
        return (int)62L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_TOOL_TIP = 63;
     * }
     */
    public static int ATK_ROLE_TOOL_TIP() {
        return (int)63L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_TREE = 64;
     * }
     */
    public static int ATK_ROLE_TREE() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_TREE_TABLE = 65;
     * }
     */
    public static int ATK_ROLE_TREE_TABLE() {
        return (int)65L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_UNKNOWN = 66;
     * }
     */
    public static int ATK_ROLE_UNKNOWN() {
        return (int)66L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_VIEWPORT = 67;
     * }
     */
    public static int ATK_ROLE_VIEWPORT() {
        return (int)67L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_WINDOW = 68;
     * }
     */
    public static int ATK_ROLE_WINDOW() {
        return (int)68L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_HEADER = 69;
     * }
     */
    public static int ATK_ROLE_HEADER() {
        return (int)69L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_FOOTER = 70;
     * }
     */
    public static int ATK_ROLE_FOOTER() {
        return (int)70L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_PARAGRAPH = 71;
     * }
     */
    public static int ATK_ROLE_PARAGRAPH() {
        return (int)71L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_RULER = 72;
     * }
     */
    public static int ATK_ROLE_RULER() {
        return (int)72L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_APPLICATION = 73;
     * }
     */
    public static int ATK_ROLE_APPLICATION() {
        return (int)73L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_AUTOCOMPLETE = 74;
     * }
     */
    public static int ATK_ROLE_AUTOCOMPLETE() {
        return (int)74L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_EDITBAR = 75;
     * }
     */
    public static int ATK_ROLE_EDITBAR() {
        return (int)75L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_EMBEDDED = 76;
     * }
     */
    public static int ATK_ROLE_EMBEDDED() {
        return (int)76L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_ENTRY = 77;
     * }
     */
    public static int ATK_ROLE_ENTRY() {
        return (int)77L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_CHART = 78;
     * }
     */
    public static int ATK_ROLE_CHART() {
        return (int)78L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_CAPTION = 79;
     * }
     */
    public static int ATK_ROLE_CAPTION() {
        return (int)79L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_DOCUMENT_FRAME = 80;
     * }
     */
    public static int ATK_ROLE_DOCUMENT_FRAME() {
        return (int)80L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_HEADING = 81;
     * }
     */
    public static int ATK_ROLE_HEADING() {
        return (int)81L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_PAGE = 82;
     * }
     */
    public static int ATK_ROLE_PAGE() {
        return (int)82L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_SECTION = 83;
     * }
     */
    public static int ATK_ROLE_SECTION() {
        return (int)83L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_REDUNDANT_OBJECT = 84;
     * }
     */
    public static int ATK_ROLE_REDUNDANT_OBJECT() {
        return (int)84L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_FORM = 85;
     * }
     */
    public static int ATK_ROLE_FORM() {
        return (int)85L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_LINK = 86;
     * }
     */
    public static int ATK_ROLE_LINK() {
        return (int)86L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_INPUT_METHOD_WINDOW = 87;
     * }
     */
    public static int ATK_ROLE_INPUT_METHOD_WINDOW() {
        return (int)87L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_TABLE_ROW = 88;
     * }
     */
    public static int ATK_ROLE_TABLE_ROW() {
        return (int)88L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_TREE_ITEM = 89;
     * }
     */
    public static int ATK_ROLE_TREE_ITEM() {
        return (int)89L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_DOCUMENT_SPREADSHEET = 90;
     * }
     */
    public static int ATK_ROLE_DOCUMENT_SPREADSHEET() {
        return (int)90L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_DOCUMENT_PRESENTATION = 91;
     * }
     */
    public static int ATK_ROLE_DOCUMENT_PRESENTATION() {
        return (int)91L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_DOCUMENT_TEXT = 92;
     * }
     */
    public static int ATK_ROLE_DOCUMENT_TEXT() {
        return (int)92L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_DOCUMENT_WEB = 93;
     * }
     */
    public static int ATK_ROLE_DOCUMENT_WEB() {
        return (int)93L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_DOCUMENT_EMAIL = 94;
     * }
     */
    public static int ATK_ROLE_DOCUMENT_EMAIL() {
        return (int)94L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_COMMENT = 95;
     * }
     */
    public static int ATK_ROLE_COMMENT() {
        return (int)95L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_LIST_BOX = 96;
     * }
     */
    public static int ATK_ROLE_LIST_BOX() {
        return (int)96L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_GROUPING = 97;
     * }
     */
    public static int ATK_ROLE_GROUPING() {
        return (int)97L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_IMAGE_MAP = 98;
     * }
     */
    public static int ATK_ROLE_IMAGE_MAP() {
        return (int)98L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_NOTIFICATION = 99;
     * }
     */
    public static int ATK_ROLE_NOTIFICATION() {
        return (int)99L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_INFO_BAR = 100;
     * }
     */
    public static int ATK_ROLE_INFO_BAR() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_LEVEL_BAR = 101;
     * }
     */
    public static int ATK_ROLE_LEVEL_BAR() {
        return (int)101L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_TITLE_BAR = 102;
     * }
     */
    public static int ATK_ROLE_TITLE_BAR() {
        return (int)102L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_BLOCK_QUOTE = 103;
     * }
     */
    public static int ATK_ROLE_BLOCK_QUOTE() {
        return (int)103L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_AUDIO = 104;
     * }
     */
    public static int ATK_ROLE_AUDIO() {
        return (int)104L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_VIDEO = 105;
     * }
     */
    public static int ATK_ROLE_VIDEO() {
        return (int)105L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_DEFINITION = 106;
     * }
     */
    public static int ATK_ROLE_DEFINITION() {
        return (int)106L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_ARTICLE = 107;
     * }
     */
    public static int ATK_ROLE_ARTICLE() {
        return (int)107L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_LANDMARK = 108;
     * }
     */
    public static int ATK_ROLE_LANDMARK() {
        return (int)108L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_LOG = 109;
     * }
     */
    public static int ATK_ROLE_LOG() {
        return (int)109L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_MARQUEE = 110;
     * }
     */
    public static int ATK_ROLE_MARQUEE() {
        return (int)110L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_MATH = 111;
     * }
     */
    public static int ATK_ROLE_MATH() {
        return (int)111L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_RATING = 112;
     * }
     */
    public static int ATK_ROLE_RATING() {
        return (int)112L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_TIMER = 113;
     * }
     */
    public static int ATK_ROLE_TIMER() {
        return (int)113L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_DESCRIPTION_LIST = 114;
     * }
     */
    public static int ATK_ROLE_DESCRIPTION_LIST() {
        return (int)114L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_DESCRIPTION_TERM = 115;
     * }
     */
    public static int ATK_ROLE_DESCRIPTION_TERM() {
        return (int)115L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_DESCRIPTION_VALUE = 116;
     * }
     */
    public static int ATK_ROLE_DESCRIPTION_VALUE() {
        return (int)116L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_STATIC = 117;
     * }
     */
    public static int ATK_ROLE_STATIC() {
        return (int)117L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_MATH_FRACTION = 118;
     * }
     */
    public static int ATK_ROLE_MATH_FRACTION() {
        return (int)118L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_MATH_ROOT = 119;
     * }
     */
    public static int ATK_ROLE_MATH_ROOT() {
        return (int)119L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_SUBSCRIPT = 120;
     * }
     */
    public static int ATK_ROLE_SUBSCRIPT() {
        return (int)120L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_SUPERSCRIPT = 121;
     * }
     */
    public static int ATK_ROLE_SUPERSCRIPT() {
        return (int)121L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_FOOTNOTE = 122;
     * }
     */
    public static int ATK_ROLE_FOOTNOTE() {
        return (int)122L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_CONTENT_DELETION = 123;
     * }
     */
    public static int ATK_ROLE_CONTENT_DELETION() {
        return (int)123L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_CONTENT_INSERTION = 124;
     * }
     */
    public static int ATK_ROLE_CONTENT_INSERTION() {
        return (int)124L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_MARK = 125;
     * }
     */
    public static int ATK_ROLE_MARK() {
        return (int)125L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_SUGGESTION = 126;
     * }
     */
    public static int ATK_ROLE_SUGGESTION() {
        return (int)126L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_PUSH_BUTTON_MENU = 127;
     * }
     */
    public static int ATK_ROLE_PUSH_BUTTON_MENU() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * enum AtkRole.ATK_ROLE_LAST_DEFINED = 128;
     * }
     */
    public static int ATK_ROLE_LAST_DEFINED() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum AtkLayer.ATK_LAYER_INVALID = 0;
     * }
     */
    public static int ATK_LAYER_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum AtkLayer.ATK_LAYER_BACKGROUND = 1;
     * }
     */
    public static int ATK_LAYER_BACKGROUND() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum AtkLayer.ATK_LAYER_CANVAS = 2;
     * }
     */
    public static int ATK_LAYER_CANVAS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum AtkLayer.ATK_LAYER_WIDGET = 3;
     * }
     */
    public static int ATK_LAYER_WIDGET() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum AtkLayer.ATK_LAYER_MDI = 4;
     * }
     */
    public static int ATK_LAYER_MDI() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum AtkLayer.ATK_LAYER_POPUP = 5;
     * }
     */
    public static int ATK_LAYER_POPUP() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum AtkLayer.ATK_LAYER_OVERLAY = 6;
     * }
     */
    public static int ATK_LAYER_OVERLAY() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum AtkLayer.ATK_LAYER_WINDOW = 7;
     * }
     */
    public static int ATK_LAYER_WINDOW() {
        return (int)7L;
    }
    public static MethodHandle atk_object_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1975.const$5,"atk_object_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_object_get_type();
     * }
     */
    public static long atk_object_get_type() {
        var mh$ = atk_object_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_implementor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1976.const$3,"atk_implementor_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_implementor_get_type();
     * }
     */
    public static long atk_implementor_get_type() {
        var mh$ = atk_implementor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_implementor_ref_accessible$MH() {
        return RuntimeHelper.requireNonNull(constants$1976.const$4,"atk_implementor_ref_accessible");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_implementor_ref_accessible(struct _AtkImplementor* implementor);
     * }
     */
    public static MemorySegment atk_implementor_ref_accessible(MemorySegment implementor) {
        var mh$ = atk_implementor_ref_accessible$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(implementor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1976.const$5,"atk_object_get_name");
    }
    /**
     * {@snippet :
     * char* atk_object_get_name(struct _AtkObject* accessible);
     * }
     */
    public static MemorySegment atk_object_get_name(MemorySegment accessible) {
        var mh$ = atk_object_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1977.const$0,"atk_object_get_description");
    }
    /**
     * {@snippet :
     * char* atk_object_get_description(struct _AtkObject* accessible);
     * }
     */
    public static MemorySegment atk_object_get_description(MemorySegment accessible) {
        var mh$ = atk_object_get_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1977.const$1,"atk_object_get_parent");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_object_get_parent(struct _AtkObject* accessible);
     * }
     */
    public static MemorySegment atk_object_get_parent(MemorySegment accessible) {
        var mh$ = atk_object_get_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_peek_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1977.const$2,"atk_object_peek_parent");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_object_peek_parent(struct _AtkObject* accessible);
     * }
     */
    public static MemorySegment atk_object_peek_parent(MemorySegment accessible) {
        var mh$ = atk_object_peek_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_n_accessible_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1977.const$3,"atk_object_get_n_accessible_children");
    }
    /**
     * {@snippet :
     * int atk_object_get_n_accessible_children(struct _AtkObject* accessible);
     * }
     */
    public static int atk_object_get_n_accessible_children(MemorySegment accessible) {
        var mh$ = atk_object_get_n_accessible_children$MH();
        try {
            return (int)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_ref_accessible_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1977.const$4,"atk_object_ref_accessible_child");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_object_ref_accessible_child(struct _AtkObject* accessible, int i);
     * }
     */
    public static MemorySegment atk_object_ref_accessible_child(MemorySegment accessible, int i) {
        var mh$ = atk_object_ref_accessible_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_ref_relation_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1977.const$5,"atk_object_ref_relation_set");
    }
    /**
     * {@snippet :
     * struct _AtkRelationSet* atk_object_ref_relation_set(struct _AtkObject* accessible);
     * }
     */
    public static MemorySegment atk_object_ref_relation_set(MemorySegment accessible) {
        var mh$ = atk_object_ref_relation_set$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_role$MH() {
        return RuntimeHelper.requireNonNull(constants$1978.const$0,"atk_object_get_role");
    }
    /**
     * {@snippet :
     * enum AtkRole atk_object_get_role(struct _AtkObject* accessible);
     * }
     */
    public static int atk_object_get_role(MemorySegment accessible) {
        var mh$ = atk_object_get_role$MH();
        try {
            return (int)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_layer$MH() {
        return RuntimeHelper.requireNonNull(constants$1978.const$1,"atk_object_get_layer");
    }
    /**
     * {@snippet :
     * enum AtkLayer atk_object_get_layer(struct _AtkObject* accessible);
     * }
     */
    public static int atk_object_get_layer(MemorySegment accessible) {
        var mh$ = atk_object_get_layer$MH();
        try {
            return (int)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_mdi_zorder$MH() {
        return RuntimeHelper.requireNonNull(constants$1978.const$2,"atk_object_get_mdi_zorder");
    }
    /**
     * {@snippet :
     * int atk_object_get_mdi_zorder(struct _AtkObject* accessible);
     * }
     */
    public static int atk_object_get_mdi_zorder(MemorySegment accessible) {
        var mh$ = atk_object_get_mdi_zorder$MH();
        try {
            return (int)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1978.const$3,"atk_object_get_attributes");
    }
    /**
     * {@snippet :
     * struct _GSList* atk_object_get_attributes(struct _AtkObject* accessible);
     * }
     */
    public static MemorySegment atk_object_get_attributes(MemorySegment accessible) {
        var mh$ = atk_object_get_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_ref_state_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1978.const$4,"atk_object_ref_state_set");
    }
    /**
     * {@snippet :
     * struct _AtkStateSet* atk_object_ref_state_set(struct _AtkObject* accessible);
     * }
     */
    public static MemorySegment atk_object_ref_state_set(MemorySegment accessible) {
        var mh$ = atk_object_ref_state_set$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_index_in_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1978.const$5,"atk_object_get_index_in_parent");
    }
    /**
     * {@snippet :
     * int atk_object_get_index_in_parent(struct _AtkObject* accessible);
     * }
     */
    public static int atk_object_get_index_in_parent(MemorySegment accessible) {
        var mh$ = atk_object_get_index_in_parent$MH();
        try {
            return (int)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1979.const$0,"atk_object_set_name");
    }
    /**
     * {@snippet :
     * void atk_object_set_name(struct _AtkObject* accessible, char* name);
     * }
     */
    public static void atk_object_set_name(MemorySegment accessible, MemorySegment name) {
        var mh$ = atk_object_set_name$MH();
        try {
            mh$.invokeExact(accessible, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_set_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1979.const$1,"atk_object_set_description");
    }
    /**
     * {@snippet :
     * void atk_object_set_description(struct _AtkObject* accessible, char* description);
     * }
     */
    public static void atk_object_set_description(MemorySegment accessible, MemorySegment description) {
        var mh$ = atk_object_set_description$MH();
        try {
            mh$.invokeExact(accessible, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_set_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1979.const$2,"atk_object_set_parent");
    }
    /**
     * {@snippet :
     * void atk_object_set_parent(struct _AtkObject* accessible, struct _AtkObject* parent);
     * }
     */
    public static void atk_object_set_parent(MemorySegment accessible, MemorySegment parent) {
        var mh$ = atk_object_set_parent$MH();
        try {
            mh$.invokeExact(accessible, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_set_role$MH() {
        return RuntimeHelper.requireNonNull(constants$1979.const$3,"atk_object_set_role");
    }
    /**
     * {@snippet :
     * void atk_object_set_role(struct _AtkObject* accessible, enum AtkRole role);
     * }
     */
    public static void atk_object_set_role(MemorySegment accessible, int role) {
        var mh$ = atk_object_set_role$MH();
        try {
            mh$.invokeExact(accessible, role);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_connect_property_change_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$1979.const$5,"atk_object_connect_property_change_handler");
    }
    /**
     * {@snippet :
     * unsigned int atk_object_connect_property_change_handler(struct _AtkObject* accessible, void (**handler)(struct _AtkObject*,struct _AtkPropertyValues*));
     * }
     */
    public static int atk_object_connect_property_change_handler(MemorySegment accessible, MemorySegment handler) {
        var mh$ = atk_object_connect_property_change_handler$MH();
        try {
            return (int)mh$.invokeExact(accessible, handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_remove_property_change_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$1980.const$0,"atk_object_remove_property_change_handler");
    }
    /**
     * {@snippet :
     * void atk_object_remove_property_change_handler(struct _AtkObject* accessible, unsigned int handler_id);
     * }
     */
    public static void atk_object_remove_property_change_handler(MemorySegment accessible, int handler_id) {
        var mh$ = atk_object_remove_property_change_handler$MH();
        try {
            mh$.invokeExact(accessible, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_notify_state_change$MH() {
        return RuntimeHelper.requireNonNull(constants$1980.const$1,"atk_object_notify_state_change");
    }
    /**
     * {@snippet :
     * void atk_object_notify_state_change(struct _AtkObject* accessible, unsigned long state, int value);
     * }
     */
    public static void atk_object_notify_state_change(MemorySegment accessible, long state, int value) {
        var mh$ = atk_object_notify_state_change$MH();
        try {
            mh$.invokeExact(accessible, state, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_initialize$MH() {
        return RuntimeHelper.requireNonNull(constants$1980.const$2,"atk_object_initialize");
    }
    /**
     * {@snippet :
     * void atk_object_initialize(struct _AtkObject* accessible, void* data);
     * }
     */
    public static void atk_object_initialize(MemorySegment accessible, MemorySegment data) {
        var mh$ = atk_object_initialize$MH();
        try {
            mh$.invokeExact(accessible, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_role_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1980.const$3,"atk_role_get_name");
    }
    /**
     * {@snippet :
     * char* atk_role_get_name(enum AtkRole role);
     * }
     */
    public static MemorySegment atk_role_get_name(int role) {
        var mh$ = atk_role_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(role);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_role_for_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1980.const$4,"atk_role_for_name");
    }
    /**
     * {@snippet :
     * enum AtkRole atk_role_for_name(char* name);
     * }
     */
    public static int atk_role_for_name(MemorySegment name) {
        var mh$ = atk_role_for_name$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_add_relationship$MH() {
        return RuntimeHelper.requireNonNull(constants$1980.const$5,"atk_object_add_relationship");
    }
    /**
     * {@snippet :
     * int atk_object_add_relationship(struct _AtkObject* object, enum AtkRelationType relationship, struct _AtkObject* target);
     * }
     */
    public static int atk_object_add_relationship(MemorySegment object, int relationship, MemorySegment target) {
        var mh$ = atk_object_add_relationship$MH();
        try {
            return (int)mh$.invokeExact(object, relationship, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_remove_relationship$MH() {
        return RuntimeHelper.requireNonNull(constants$1981.const$0,"atk_object_remove_relationship");
    }
    /**
     * {@snippet :
     * int atk_object_remove_relationship(struct _AtkObject* object, enum AtkRelationType relationship, struct _AtkObject* target);
     * }
     */
    public static int atk_object_remove_relationship(MemorySegment object, int relationship, MemorySegment target) {
        var mh$ = atk_object_remove_relationship$MH();
        try {
            return (int)mh$.invokeExact(object, relationship, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_role_get_localized_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1981.const$1,"atk_role_get_localized_name");
    }
    /**
     * {@snippet :
     * char* atk_role_get_localized_name(enum AtkRole role);
     * }
     */
    public static MemorySegment atk_role_get_localized_name(int role) {
        var mh$ = atk_role_get_localized_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(role);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_role_register$MH() {
        return RuntimeHelper.requireNonNull(constants$1981.const$2,"atk_role_register");
    }
    /**
     * {@snippet :
     * enum AtkRole atk_role_register(char* name);
     * }
     */
    public static int atk_role_register(MemorySegment name) {
        var mh$ = atk_role_register$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_object_locale$MH() {
        return RuntimeHelper.requireNonNull(constants$1981.const$3,"atk_object_get_object_locale");
    }
    /**
     * {@snippet :
     * char* atk_object_get_object_locale(struct _AtkObject* accessible);
     * }
     */
    public static MemorySegment atk_object_get_object_locale(MemorySegment accessible) {
        var mh$ = atk_object_get_object_locale$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_accessible_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1981.const$4,"atk_object_get_accessible_id");
    }
    /**
     * {@snippet :
     * char* atk_object_get_accessible_id(struct _AtkObject* accessible);
     * }
     */
    public static MemorySegment atk_object_get_accessible_id(MemorySegment accessible) {
        var mh$ = atk_object_get_accessible_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_set_accessible_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1981.const$5,"atk_object_set_accessible_id");
    }
    /**
     * {@snippet :
     * void atk_object_set_accessible_id(struct _AtkObject* accessible, char* name);
     * }
     */
    public static void atk_object_set_accessible_id(MemorySegment accessible, MemorySegment name) {
        var mh$ = atk_object_set_accessible_id$MH();
        try {
            mh$.invokeExact(accessible, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1984.const$3,"atk_action_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_action_get_type();
     * }
     */
    public static long atk_action_get_type() {
        var mh$ = atk_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_do_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1984.const$4,"atk_action_do_action");
    }
    /**
     * {@snippet :
     * int atk_action_do_action(struct _AtkAction* action, int i);
     * }
     */
    public static int atk_action_do_action(MemorySegment action, int i) {
        var mh$ = atk_action_do_action$MH();
        try {
            return (int)mh$.invokeExact(action, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_get_n_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$1984.const$5,"atk_action_get_n_actions");
    }
    /**
     * {@snippet :
     * int atk_action_get_n_actions(struct _AtkAction* action);
     * }
     */
    public static int atk_action_get_n_actions(MemorySegment action) {
        var mh$ = atk_action_get_n_actions$MH();
        try {
            return (int)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1985.const$0,"atk_action_get_description");
    }
    /**
     * {@snippet :
     * char* atk_action_get_description(struct _AtkAction* action, int i);
     * }
     */
    public static MemorySegment atk_action_get_description(MemorySegment action, int i) {
        var mh$ = atk_action_get_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1985.const$1,"atk_action_get_name");
    }
    /**
     * {@snippet :
     * char* atk_action_get_name(struct _AtkAction* action, int i);
     * }
     */
    public static MemorySegment atk_action_get_name(MemorySegment action, int i) {
        var mh$ = atk_action_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_get_keybinding$MH() {
        return RuntimeHelper.requireNonNull(constants$1985.const$2,"atk_action_get_keybinding");
    }
    /**
     * {@snippet :
     * char* atk_action_get_keybinding(struct _AtkAction* action, int i);
     * }
     */
    public static MemorySegment atk_action_get_keybinding(MemorySegment action, int i) {
        var mh$ = atk_action_get_keybinding$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_set_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1985.const$3,"atk_action_set_description");
    }
    /**
     * {@snippet :
     * int atk_action_set_description(struct _AtkAction* action, int i, char* desc);
     * }
     */
    public static int atk_action_set_description(MemorySegment action, int i, MemorySegment desc) {
        var mh$ = atk_action_set_description$MH();
        try {
            return (int)mh$.invokeExact(action, i, desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_get_localized_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1985.const$4,"atk_action_get_localized_name");
    }
    /**
     * {@snippet :
     * char* atk_action_get_localized_name(struct _AtkAction* action, int i);
     * }
     */
    public static MemorySegment atk_action_get_localized_name(MemorySegment action, int i) {
        var mh$ = atk_action_get_localized_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum AtkKeyEventType.ATK_KEY_EVENT_PRESS = 0;
     * }
     */
    public static int ATK_KEY_EVENT_PRESS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum AtkKeyEventType.ATK_KEY_EVENT_RELEASE = 1;
     * }
     */
    public static int ATK_KEY_EVENT_RELEASE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum AtkKeyEventType.ATK_KEY_EVENT_LAST_DEFINED = 2;
     * }
     */
    public static int ATK_KEY_EVENT_LAST_DEFINED() {
        return (int)2L;
    }
    public static MethodHandle atk_util_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1990.const$2,"atk_util_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_util_get_type();
     * }
     */
    public static long atk_util_get_type() {
        var mh$ = atk_util_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum AtkCoordType.ATK_XY_SCREEN = 0;
     * }
     */
    public static int ATK_XY_SCREEN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum AtkCoordType.ATK_XY_WINDOW = 1;
     * }
     */
    public static int ATK_XY_WINDOW() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum AtkCoordType.ATK_XY_PARENT = 2;
     * }
     */
    public static int ATK_XY_PARENT() {
        return (int)2L;
    }
    public static MethodHandle atk_add_focus_tracker$MH() {
        return RuntimeHelper.requireNonNull(constants$1990.const$4,"atk_add_focus_tracker");
    }
    /**
     * {@snippet :
     * unsigned int atk_add_focus_tracker(void (*focus_tracker)(struct _AtkObject*));
     * }
     */
    public static int atk_add_focus_tracker(MemorySegment focus_tracker) {
        var mh$ = atk_add_focus_tracker$MH();
        try {
            return (int)mh$.invokeExact(focus_tracker);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_remove_focus_tracker$MH() {
        return RuntimeHelper.requireNonNull(constants$1990.const$5,"atk_remove_focus_tracker");
    }
    /**
     * {@snippet :
     * void atk_remove_focus_tracker(unsigned int tracker_id);
     * }
     */
    public static void atk_remove_focus_tracker(int tracker_id) {
        var mh$ = atk_remove_focus_tracker$MH();
        try {
            mh$.invokeExact(tracker_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_focus_tracker_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1991.const$1,"atk_focus_tracker_init");
    }
    /**
     * {@snippet :
     * void atk_focus_tracker_init(void (*init)());
     * }
     */
    public static void atk_focus_tracker_init(MemorySegment init) {
        var mh$ = atk_focus_tracker_init$MH();
        try {
            mh$.invokeExact(init);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_focus_tracker_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$1991.const$2,"atk_focus_tracker_notify");
    }
    /**
     * {@snippet :
     * void atk_focus_tracker_notify(struct _AtkObject* object);
     * }
     */
    public static void atk_focus_tracker_notify(MemorySegment object) {
        var mh$ = atk_focus_tracker_notify$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_add_global_event_listener$MH() {
        return RuntimeHelper.requireNonNull(constants$1991.const$4,"atk_add_global_event_listener");
    }
    /**
     * {@snippet :
     * unsigned int atk_add_global_event_listener(int (*listener)(struct _GSignalInvocationHint*,unsigned int,struct _GValue*,void*), char* event_type);
     * }
     */
    public static int atk_add_global_event_listener(MemorySegment listener, MemorySegment event_type) {
        var mh$ = atk_add_global_event_listener$MH();
        try {
            return (int)mh$.invokeExact(listener, event_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_remove_global_event_listener$MH() {
        return RuntimeHelper.requireNonNull(constants$1991.const$5,"atk_remove_global_event_listener");
    }
    /**
     * {@snippet :
     * void atk_remove_global_event_listener(unsigned int listener_id);
     * }
     */
    public static void atk_remove_global_event_listener(int listener_id) {
        var mh$ = atk_remove_global_event_listener$MH();
        try {
            mh$.invokeExact(listener_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_add_key_event_listener$MH() {
        return RuntimeHelper.requireNonNull(constants$1992.const$1,"atk_add_key_event_listener");
    }
    /**
     * {@snippet :
     * unsigned int atk_add_key_event_listener(int (*listener)(struct _AtkKeyEventStruct*,void*), void* data);
     * }
     */
    public static int atk_add_key_event_listener(MemorySegment listener, MemorySegment data) {
        var mh$ = atk_add_key_event_listener$MH();
        try {
            return (int)mh$.invokeExact(listener, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_remove_key_event_listener$MH() {
        return RuntimeHelper.requireNonNull(constants$1992.const$2,"atk_remove_key_event_listener");
    }
    /**
     * {@snippet :
     * void atk_remove_key_event_listener(unsigned int listener_id);
     * }
     */
    public static void atk_remove_key_event_listener(int listener_id) {
        var mh$ = atk_remove_key_event_listener$MH();
        try {
            mh$.invokeExact(listener_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_root$MH() {
        return RuntimeHelper.requireNonNull(constants$1992.const$3,"atk_get_root");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_get_root();
     * }
     */
    public static MemorySegment atk_get_root() {
        var mh$ = atk_get_root$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_focus_object$MH() {
        return RuntimeHelper.requireNonNull(constants$1992.const$4,"atk_get_focus_object");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_get_focus_object();
     * }
     */
    public static MemorySegment atk_get_focus_object() {
        var mh$ = atk_get_focus_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_toolkit_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1992.const$5,"atk_get_toolkit_name");
    }
    /**
     * {@snippet :
     * char* atk_get_toolkit_name();
     * }
     */
    public static MemorySegment atk_get_toolkit_name() {
        var mh$ = atk_get_toolkit_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_toolkit_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1993.const$0,"atk_get_toolkit_version");
    }
    /**
     * {@snippet :
     * char* atk_get_toolkit_version();
     * }
     */
    public static MemorySegment atk_get_toolkit_version() {
        var mh$ = atk_get_toolkit_version$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1993.const$1,"atk_get_version");
    }
    /**
     * {@snippet :
     * char* atk_get_version();
     * }
     */
    public static MemorySegment atk_get_version() {
        var mh$ = atk_get_version$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum AtkScrollType.ATK_SCROLL_TOP_LEFT = 0;
     * }
     */
    public static int ATK_SCROLL_TOP_LEFT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum AtkScrollType.ATK_SCROLL_BOTTOM_RIGHT = 1;
     * }
     */
    public static int ATK_SCROLL_BOTTOM_RIGHT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum AtkScrollType.ATK_SCROLL_TOP_EDGE = 2;
     * }
     */
    public static int ATK_SCROLL_TOP_EDGE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum AtkScrollType.ATK_SCROLL_BOTTOM_EDGE = 3;
     * }
     */
    public static int ATK_SCROLL_BOTTOM_EDGE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum AtkScrollType.ATK_SCROLL_LEFT_EDGE = 4;
     * }
     */
    public static int ATK_SCROLL_LEFT_EDGE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum AtkScrollType.ATK_SCROLL_RIGHT_EDGE = 5;
     * }
     */
    public static int ATK_SCROLL_RIGHT_EDGE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum AtkScrollType.ATK_SCROLL_ANYWHERE = 6;
     * }
     */
    public static int ATK_SCROLL_ANYWHERE() {
        return (int)6L;
    }
    public static MethodHandle atk_rectangle_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1994.const$2,"atk_rectangle_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_rectangle_get_type();
     * }
     */
    public static long atk_rectangle_get_type() {
        var mh$ = atk_rectangle_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2001.const$1,"atk_component_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_component_get_type();
     * }
     */
    public static long atk_component_get_type() {
        var mh$ = atk_component_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_add_focus_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$2001.const$3,"atk_component_add_focus_handler");
    }
    /**
     * {@snippet :
     * unsigned int atk_component_add_focus_handler(struct _AtkComponent* component, void (*handler)(struct _AtkObject*,int));
     * }
     */
    public static int atk_component_add_focus_handler(MemorySegment component, MemorySegment handler) {
        var mh$ = atk_component_add_focus_handler$MH();
        try {
            return (int)mh$.invokeExact(component, handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_contains$MH() {
        return RuntimeHelper.requireNonNull(constants$2001.const$4,"atk_component_contains");
    }
    /**
     * {@snippet :
     * int atk_component_contains(struct _AtkComponent* component, int x, int y, enum AtkCoordType coord_type);
     * }
     */
    public static int atk_component_contains(MemorySegment component, int x, int y, int coord_type) {
        var mh$ = atk_component_contains$MH();
        try {
            return (int)mh$.invokeExact(component, x, y, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_ref_accessible_at_point$MH() {
        return RuntimeHelper.requireNonNull(constants$2001.const$5,"atk_component_ref_accessible_at_point");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_component_ref_accessible_at_point(struct _AtkComponent* component, int x, int y, enum AtkCoordType coord_type);
     * }
     */
    public static MemorySegment atk_component_ref_accessible_at_point(MemorySegment component, int x, int y, int coord_type) {
        var mh$ = atk_component_ref_accessible_at_point$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(component, x, y, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$2002.const$0,"atk_component_get_extents");
    }
    /**
     * {@snippet :
     * void atk_component_get_extents(struct _AtkComponent* component, int* x, int* y, int* width, int* height, enum AtkCoordType coord_type);
     * }
     */
    public static void atk_component_get_extents(MemorySegment component, MemorySegment x, MemorySegment y, MemorySegment width, MemorySegment height, int coord_type) {
        var mh$ = atk_component_get_extents$MH();
        try {
            mh$.invokeExact(component, x, y, width, height, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2002.const$1,"atk_component_get_position");
    }
    /**
     * {@snippet :
     * void atk_component_get_position(struct _AtkComponent* component, int* x, int* y, enum AtkCoordType coord_type);
     * }
     */
    public static void atk_component_get_position(MemorySegment component, MemorySegment x, MemorySegment y, int coord_type) {
        var mh$ = atk_component_get_position$MH();
        try {
            mh$.invokeExact(component, x, y, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2002.const$2,"atk_component_get_size");
    }
    /**
     * {@snippet :
     * void atk_component_get_size(struct _AtkComponent* component, int* width, int* height);
     * }
     */
    public static void atk_component_get_size(MemorySegment component, MemorySegment width, MemorySegment height) {
        var mh$ = atk_component_get_size$MH();
        try {
            mh$.invokeExact(component, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_layer$MH() {
        return RuntimeHelper.requireNonNull(constants$2002.const$3,"atk_component_get_layer");
    }
    /**
     * {@snippet :
     * enum AtkLayer atk_component_get_layer(struct _AtkComponent* component);
     * }
     */
    public static int atk_component_get_layer(MemorySegment component) {
        var mh$ = atk_component_get_layer$MH();
        try {
            return (int)mh$.invokeExact(component);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_mdi_zorder$MH() {
        return RuntimeHelper.requireNonNull(constants$2002.const$4,"atk_component_get_mdi_zorder");
    }
    /**
     * {@snippet :
     * int atk_component_get_mdi_zorder(struct _AtkComponent* component);
     * }
     */
    public static int atk_component_get_mdi_zorder(MemorySegment component) {
        var mh$ = atk_component_get_mdi_zorder$MH();
        try {
            return (int)mh$.invokeExact(component);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_grab_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2002.const$5,"atk_component_grab_focus");
    }
    /**
     * {@snippet :
     * int atk_component_grab_focus(struct _AtkComponent* component);
     * }
     */
    public static int atk_component_grab_focus(MemorySegment component) {
        var mh$ = atk_component_grab_focus$MH();
        try {
            return (int)mh$.invokeExact(component);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_remove_focus_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$2003.const$0,"atk_component_remove_focus_handler");
    }
    /**
     * {@snippet :
     * void atk_component_remove_focus_handler(struct _AtkComponent* component, unsigned int handler_id);
     * }
     */
    public static void atk_component_remove_focus_handler(MemorySegment component, int handler_id) {
        var mh$ = atk_component_remove_focus_handler$MH();
        try {
            mh$.invokeExact(component, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_set_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$2003.const$1,"atk_component_set_extents");
    }
    /**
     * {@snippet :
     * int atk_component_set_extents(struct _AtkComponent* component, int x, int y, int width, int height, enum AtkCoordType coord_type);
     * }
     */
    public static int atk_component_set_extents(MemorySegment component, int x, int y, int width, int height, int coord_type) {
        var mh$ = atk_component_set_extents$MH();
        try {
            return (int)mh$.invokeExact(component, x, y, width, height, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_set_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2003.const$2,"atk_component_set_position");
    }
    /**
     * {@snippet :
     * int atk_component_set_position(struct _AtkComponent* component, int x, int y, enum AtkCoordType coord_type);
     * }
     */
    public static int atk_component_set_position(MemorySegment component, int x, int y, int coord_type) {
        var mh$ = atk_component_set_position$MH();
        try {
            return (int)mh$.invokeExact(component, x, y, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_set_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2003.const$3,"atk_component_set_size");
    }
    /**
     * {@snippet :
     * int atk_component_set_size(struct _AtkComponent* component, int width, int height);
     * }
     */
    public static int atk_component_set_size(MemorySegment component, int width, int height) {
        var mh$ = atk_component_set_size$MH();
        try {
            return (int)mh$.invokeExact(component, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$2003.const$4,"atk_component_get_alpha");
    }
    /**
     * {@snippet :
     * double atk_component_get_alpha(struct _AtkComponent* component);
     * }
     */
    public static double atk_component_get_alpha(MemorySegment component) {
        var mh$ = atk_component_get_alpha$MH();
        try {
            return (double)mh$.invokeExact(component);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_scroll_to$MH() {
        return RuntimeHelper.requireNonNull(constants$2003.const$5,"atk_component_scroll_to");
    }
    /**
     * {@snippet :
     * int atk_component_scroll_to(struct _AtkComponent* component, enum AtkScrollType type);
     * }
     */
    public static int atk_component_scroll_to(MemorySegment component, int type) {
        var mh$ = atk_component_scroll_to$MH();
        try {
            return (int)mh$.invokeExact(component, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_scroll_to_point$MH() {
        return RuntimeHelper.requireNonNull(constants$2004.const$0,"atk_component_scroll_to_point");
    }
    /**
     * {@snippet :
     * int atk_component_scroll_to_point(struct _AtkComponent* component, enum AtkCoordType coords, int x, int y);
     * }
     */
    public static int atk_component_scroll_to_point(MemorySegment component, int coords, int x, int y) {
        var mh$ = atk_component_scroll_to_point$MH();
        try {
            return (int)mh$.invokeExact(component, coords, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2007.const$0,"atk_document_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_document_get_type();
     * }
     */
    public static long atk_document_get_type() {
        var mh$ = atk_document_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_document_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2007.const$1,"atk_document_get_document_type");
    }
    /**
     * {@snippet :
     * char* atk_document_get_document_type(struct _AtkDocument* document);
     * }
     */
    public static MemorySegment atk_document_get_document_type(MemorySegment document) {
        var mh$ = atk_document_get_document_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(document);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_document$MH() {
        return RuntimeHelper.requireNonNull(constants$2007.const$2,"atk_document_get_document");
    }
    /**
     * {@snippet :
     * void* atk_document_get_document(struct _AtkDocument* document);
     * }
     */
    public static MemorySegment atk_document_get_document(MemorySegment document) {
        var mh$ = atk_document_get_document$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(document);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_locale$MH() {
        return RuntimeHelper.requireNonNull(constants$2007.const$3,"atk_document_get_locale");
    }
    /**
     * {@snippet :
     * char* atk_document_get_locale(struct _AtkDocument* document);
     * }
     */
    public static MemorySegment atk_document_get_locale(MemorySegment document) {
        var mh$ = atk_document_get_locale$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(document);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2007.const$4,"atk_document_get_attributes");
    }
    /**
     * {@snippet :
     * struct _GSList* atk_document_get_attributes(struct _AtkDocument* document);
     * }
     */
    public static MemorySegment atk_document_get_attributes(MemorySegment document) {
        var mh$ = atk_document_get_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(document);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_attribute_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2007.const$5,"atk_document_get_attribute_value");
    }
    /**
     * {@snippet :
     * char* atk_document_get_attribute_value(struct _AtkDocument* document, char* attribute_name);
     * }
     */
    public static MemorySegment atk_document_get_attribute_value(MemorySegment document, MemorySegment attribute_name) {
        var mh$ = atk_document_get_attribute_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(document, attribute_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_set_attribute_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2008.const$0,"atk_document_set_attribute_value");
    }
    /**
     * {@snippet :
     * int atk_document_set_attribute_value(struct _AtkDocument* document, char* attribute_name, char* attribute_value);
     * }
     */
    public static int atk_document_set_attribute_value(MemorySegment document, MemorySegment attribute_name, MemorySegment attribute_value) {
        var mh$ = atk_document_set_attribute_value$MH();
        try {
            return (int)mh$.invokeExact(document, attribute_name, attribute_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_current_page_number$MH() {
        return RuntimeHelper.requireNonNull(constants$2008.const$1,"atk_document_get_current_page_number");
    }
    /**
     * {@snippet :
     * int atk_document_get_current_page_number(struct _AtkDocument* document);
     * }
     */
    public static int atk_document_get_current_page_number(MemorySegment document) {
        var mh$ = atk_document_get_current_page_number$MH();
        try {
            return (int)mh$.invokeExact(document);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_page_count$MH() {
        return RuntimeHelper.requireNonNull(constants$2008.const$2,"atk_document_get_page_count");
    }
    /**
     * {@snippet :
     * int atk_document_get_page_count(struct _AtkDocument* document);
     * }
     */
    public static int atk_document_get_page_count(MemorySegment document) {
        var mh$ = atk_document_get_page_count$MH();
        try {
            return (int)mh$.invokeExact(document);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_INVALID = 0;
     * }
     */
    public static int ATK_TEXT_ATTR_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_LEFT_MARGIN = 1;
     * }
     */
    public static int ATK_TEXT_ATTR_LEFT_MARGIN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_RIGHT_MARGIN = 2;
     * }
     */
    public static int ATK_TEXT_ATTR_RIGHT_MARGIN() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_INDENT = 3;
     * }
     */
    public static int ATK_TEXT_ATTR_INDENT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_INVISIBLE = 4;
     * }
     */
    public static int ATK_TEXT_ATTR_INVISIBLE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_EDITABLE = 5;
     * }
     */
    public static int ATK_TEXT_ATTR_EDITABLE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_PIXELS_ABOVE_LINES = 6;
     * }
     */
    public static int ATK_TEXT_ATTR_PIXELS_ABOVE_LINES() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_PIXELS_BELOW_LINES = 7;
     * }
     */
    public static int ATK_TEXT_ATTR_PIXELS_BELOW_LINES() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_PIXELS_INSIDE_WRAP = 8;
     * }
     */
    public static int ATK_TEXT_ATTR_PIXELS_INSIDE_WRAP() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_BG_FULL_HEIGHT = 9;
     * }
     */
    public static int ATK_TEXT_ATTR_BG_FULL_HEIGHT() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_RISE = 10;
     * }
     */
    public static int ATK_TEXT_ATTR_RISE() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_UNDERLINE = 11;
     * }
     */
    public static int ATK_TEXT_ATTR_UNDERLINE() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_STRIKETHROUGH = 12;
     * }
     */
    public static int ATK_TEXT_ATTR_STRIKETHROUGH() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_SIZE = 13;
     * }
     */
    public static int ATK_TEXT_ATTR_SIZE() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_SCALE = 14;
     * }
     */
    public static int ATK_TEXT_ATTR_SCALE() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_WEIGHT = 15;
     * }
     */
    public static int ATK_TEXT_ATTR_WEIGHT() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_LANGUAGE = 16;
     * }
     */
    public static int ATK_TEXT_ATTR_LANGUAGE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_FAMILY_NAME = 17;
     * }
     */
    public static int ATK_TEXT_ATTR_FAMILY_NAME() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_BG_COLOR = 18;
     * }
     */
    public static int ATK_TEXT_ATTR_BG_COLOR() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_FG_COLOR = 19;
     * }
     */
    public static int ATK_TEXT_ATTR_FG_COLOR() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_BG_STIPPLE = 20;
     * }
     */
    public static int ATK_TEXT_ATTR_BG_STIPPLE() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_FG_STIPPLE = 21;
     * }
     */
    public static int ATK_TEXT_ATTR_FG_STIPPLE() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_WRAP_MODE = 22;
     * }
     */
    public static int ATK_TEXT_ATTR_WRAP_MODE() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_DIRECTION = 23;
     * }
     */
    public static int ATK_TEXT_ATTR_DIRECTION() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_JUSTIFICATION = 24;
     * }
     */
    public static int ATK_TEXT_ATTR_JUSTIFICATION() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_STRETCH = 25;
     * }
     */
    public static int ATK_TEXT_ATTR_STRETCH() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_VARIANT = 26;
     * }
     */
    public static int ATK_TEXT_ATTR_VARIANT() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_STYLE = 27;
     * }
     */
    public static int ATK_TEXT_ATTR_STYLE() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_TEXT_POSITION = 28;
     * }
     */
    public static int ATK_TEXT_ATTR_TEXT_POSITION() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute.ATK_TEXT_ATTR_LAST_DEFINED = 29;
     * }
     */
    public static int ATK_TEXT_ATTR_LAST_DEFINED() {
        return (int)29L;
    }
    public static MethodHandle atk_text_attribute_register$MH() {
        return RuntimeHelper.requireNonNull(constants$2008.const$3,"atk_text_attribute_register");
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute atk_text_attribute_register(char* name);
     * }
     */
    public static int atk_text_attribute_register(MemorySegment name) {
        var mh$ = atk_text_attribute_register$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum AtkTextBoundary.ATK_TEXT_BOUNDARY_CHAR = 0;
     * }
     */
    public static int ATK_TEXT_BOUNDARY_CHAR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum AtkTextBoundary.ATK_TEXT_BOUNDARY_WORD_START = 1;
     * }
     */
    public static int ATK_TEXT_BOUNDARY_WORD_START() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum AtkTextBoundary.ATK_TEXT_BOUNDARY_WORD_END = 2;
     * }
     */
    public static int ATK_TEXT_BOUNDARY_WORD_END() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum AtkTextBoundary.ATK_TEXT_BOUNDARY_SENTENCE_START = 3;
     * }
     */
    public static int ATK_TEXT_BOUNDARY_SENTENCE_START() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum AtkTextBoundary.ATK_TEXT_BOUNDARY_SENTENCE_END = 4;
     * }
     */
    public static int ATK_TEXT_BOUNDARY_SENTENCE_END() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum AtkTextBoundary.ATK_TEXT_BOUNDARY_LINE_START = 5;
     * }
     */
    public static int ATK_TEXT_BOUNDARY_LINE_START() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum AtkTextBoundary.ATK_TEXT_BOUNDARY_LINE_END = 6;
     * }
     */
    public static int ATK_TEXT_BOUNDARY_LINE_END() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum AtkTextGranularity.ATK_TEXT_GRANULARITY_CHAR = 0;
     * }
     */
    public static int ATK_TEXT_GRANULARITY_CHAR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum AtkTextGranularity.ATK_TEXT_GRANULARITY_WORD = 1;
     * }
     */
    public static int ATK_TEXT_GRANULARITY_WORD() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum AtkTextGranularity.ATK_TEXT_GRANULARITY_SENTENCE = 2;
     * }
     */
    public static int ATK_TEXT_GRANULARITY_SENTENCE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum AtkTextGranularity.ATK_TEXT_GRANULARITY_LINE = 3;
     * }
     */
    public static int ATK_TEXT_GRANULARITY_LINE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum AtkTextGranularity.ATK_TEXT_GRANULARITY_PARAGRAPH = 4;
     * }
     */
    public static int ATK_TEXT_GRANULARITY_PARAGRAPH() {
        return (int)4L;
    }
    public static MethodHandle atk_text_range_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2010.const$1,"atk_text_range_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_text_range_get_type();
     * }
     */
    public static long atk_text_range_get_type() {
        var mh$ = atk_text_range_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum AtkTextClipType.ATK_TEXT_CLIP_NONE = 0;
     * }
     */
    public static int ATK_TEXT_CLIP_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum AtkTextClipType.ATK_TEXT_CLIP_MIN = 1;
     * }
     */
    public static int ATK_TEXT_CLIP_MIN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum AtkTextClipType.ATK_TEXT_CLIP_MAX = 2;
     * }
     */
    public static int ATK_TEXT_CLIP_MAX() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum AtkTextClipType.ATK_TEXT_CLIP_BOTH = 3;
     * }
     */
    public static int ATK_TEXT_CLIP_BOTH() {
        return (int)3L;
    }
    public static MethodHandle atk_text_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2020.const$0,"atk_text_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_text_get_type();
     * }
     */
    public static long atk_text_get_type() {
        var mh$ = atk_text_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2020.const$1,"atk_text_get_text");
    }
    /**
     * {@snippet :
     * char* atk_text_get_text(struct _AtkText* text, int start_offset, int end_offset);
     * }
     */
    public static MemorySegment atk_text_get_text(MemorySegment text, int start_offset, int end_offset) {
        var mh$ = atk_text_get_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_character_at_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2020.const$2,"atk_text_get_character_at_offset");
    }
    /**
     * {@snippet :
     * unsigned int atk_text_get_character_at_offset(struct _AtkText* text, int offset);
     * }
     */
    public static int atk_text_get_character_at_offset(MemorySegment text, int offset) {
        var mh$ = atk_text_get_character_at_offset$MH();
        try {
            return (int)mh$.invokeExact(text, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_text_after_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2020.const$3,"atk_text_get_text_after_offset");
    }
    /**
     * {@snippet :
     * char* atk_text_get_text_after_offset(struct _AtkText* text, int offset, enum AtkTextBoundary boundary_type, int* start_offset, int* end_offset);
     * }
     */
    public static MemorySegment atk_text_get_text_after_offset(MemorySegment text, int offset, int boundary_type, MemorySegment start_offset, MemorySegment end_offset) {
        var mh$ = atk_text_get_text_after_offset$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text, offset, boundary_type, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_text_at_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2020.const$4,"atk_text_get_text_at_offset");
    }
    /**
     * {@snippet :
     * char* atk_text_get_text_at_offset(struct _AtkText* text, int offset, enum AtkTextBoundary boundary_type, int* start_offset, int* end_offset);
     * }
     */
    public static MemorySegment atk_text_get_text_at_offset(MemorySegment text, int offset, int boundary_type, MemorySegment start_offset, MemorySegment end_offset) {
        var mh$ = atk_text_get_text_at_offset$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text, offset, boundary_type, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_text_before_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2020.const$5,"atk_text_get_text_before_offset");
    }
    /**
     * {@snippet :
     * char* atk_text_get_text_before_offset(struct _AtkText* text, int offset, enum AtkTextBoundary boundary_type, int* start_offset, int* end_offset);
     * }
     */
    public static MemorySegment atk_text_get_text_before_offset(MemorySegment text, int offset, int boundary_type, MemorySegment start_offset, MemorySegment end_offset) {
        var mh$ = atk_text_get_text_before_offset$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text, offset, boundary_type, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_string_at_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2021.const$0,"atk_text_get_string_at_offset");
    }
    /**
     * {@snippet :
     * char* atk_text_get_string_at_offset(struct _AtkText* text, int offset, enum AtkTextGranularity granularity, int* start_offset, int* end_offset);
     * }
     */
    public static MemorySegment atk_text_get_string_at_offset(MemorySegment text, int offset, int granularity, MemorySegment start_offset, MemorySegment end_offset) {
        var mh$ = atk_text_get_string_at_offset$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text, offset, granularity, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_caret_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2021.const$1,"atk_text_get_caret_offset");
    }
    /**
     * {@snippet :
     * int atk_text_get_caret_offset(struct _AtkText* text);
     * }
     */
    public static int atk_text_get_caret_offset(MemorySegment text) {
        var mh$ = atk_text_get_caret_offset$MH();
        try {
            return (int)mh$.invokeExact(text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_character_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$2021.const$2,"atk_text_get_character_extents");
    }
    /**
     * {@snippet :
     * void atk_text_get_character_extents(struct _AtkText* text, int offset, int* x, int* y, int* width, int* height, enum AtkCoordType coords);
     * }
     */
    public static void atk_text_get_character_extents(MemorySegment text, int offset, MemorySegment x, MemorySegment y, MemorySegment width, MemorySegment height, int coords) {
        var mh$ = atk_text_get_character_extents$MH();
        try {
            mh$.invokeExact(text, offset, x, y, width, height, coords);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_run_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2021.const$3,"atk_text_get_run_attributes");
    }
    /**
     * {@snippet :
     * struct _GSList* atk_text_get_run_attributes(struct _AtkText* text, int offset, int* start_offset, int* end_offset);
     * }
     */
    public static MemorySegment atk_text_get_run_attributes(MemorySegment text, int offset, MemorySegment start_offset, MemorySegment end_offset) {
        var mh$ = atk_text_get_run_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text, offset, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_default_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2021.const$4,"atk_text_get_default_attributes");
    }
    /**
     * {@snippet :
     * struct _GSList* atk_text_get_default_attributes(struct _AtkText* text);
     * }
     */
    public static MemorySegment atk_text_get_default_attributes(MemorySegment text) {
        var mh$ = atk_text_get_default_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_character_count$MH() {
        return RuntimeHelper.requireNonNull(constants$2021.const$5,"atk_text_get_character_count");
    }
    /**
     * {@snippet :
     * int atk_text_get_character_count(struct _AtkText* text);
     * }
     */
    public static int atk_text_get_character_count(MemorySegment text) {
        var mh$ = atk_text_get_character_count$MH();
        try {
            return (int)mh$.invokeExact(text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_offset_at_point$MH() {
        return RuntimeHelper.requireNonNull(constants$2022.const$0,"atk_text_get_offset_at_point");
    }
    /**
     * {@snippet :
     * int atk_text_get_offset_at_point(struct _AtkText* text, int x, int y, enum AtkCoordType coords);
     * }
     */
    public static int atk_text_get_offset_at_point(MemorySegment text, int x, int y, int coords) {
        var mh$ = atk_text_get_offset_at_point$MH();
        try {
            return (int)mh$.invokeExact(text, x, y, coords);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_n_selections$MH() {
        return RuntimeHelper.requireNonNull(constants$2022.const$1,"atk_text_get_n_selections");
    }
    /**
     * {@snippet :
     * int atk_text_get_n_selections(struct _AtkText* text);
     * }
     */
    public static int atk_text_get_n_selections(MemorySegment text) {
        var mh$ = atk_text_get_n_selections$MH();
        try {
            return (int)mh$.invokeExact(text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2022.const$2,"atk_text_get_selection");
    }
    /**
     * {@snippet :
     * char* atk_text_get_selection(struct _AtkText* text, int selection_num, int* start_offset, int* end_offset);
     * }
     */
    public static MemorySegment atk_text_get_selection(MemorySegment text, int selection_num, MemorySegment start_offset, MemorySegment end_offset) {
        var mh$ = atk_text_get_selection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text, selection_num, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_add_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2022.const$3,"atk_text_add_selection");
    }
    /**
     * {@snippet :
     * int atk_text_add_selection(struct _AtkText* text, int start_offset, int end_offset);
     * }
     */
    public static int atk_text_add_selection(MemorySegment text, int start_offset, int end_offset) {
        var mh$ = atk_text_add_selection$MH();
        try {
            return (int)mh$.invokeExact(text, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_remove_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2022.const$4,"atk_text_remove_selection");
    }
    /**
     * {@snippet :
     * int atk_text_remove_selection(struct _AtkText* text, int selection_num);
     * }
     */
    public static int atk_text_remove_selection(MemorySegment text, int selection_num) {
        var mh$ = atk_text_remove_selection$MH();
        try {
            return (int)mh$.invokeExact(text, selection_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_set_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2022.const$5,"atk_text_set_selection");
    }
    /**
     * {@snippet :
     * int atk_text_set_selection(struct _AtkText* text, int selection_num, int start_offset, int end_offset);
     * }
     */
    public static int atk_text_set_selection(MemorySegment text, int selection_num, int start_offset, int end_offset) {
        var mh$ = atk_text_set_selection$MH();
        try {
            return (int)mh$.invokeExact(text, selection_num, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_set_caret_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2023.const$0,"atk_text_set_caret_offset");
    }
    /**
     * {@snippet :
     * int atk_text_set_caret_offset(struct _AtkText* text, int offset);
     * }
     */
    public static int atk_text_set_caret_offset(MemorySegment text, int offset) {
        var mh$ = atk_text_set_caret_offset$MH();
        try {
            return (int)mh$.invokeExact(text, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_range_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$2023.const$1,"atk_text_get_range_extents");
    }
    /**
     * {@snippet :
     * void atk_text_get_range_extents(struct _AtkText* text, int start_offset, int end_offset, enum AtkCoordType coord_type, struct _AtkTextRectangle* rect);
     * }
     */
    public static void atk_text_get_range_extents(MemorySegment text, int start_offset, int end_offset, int coord_type, MemorySegment rect) {
        var mh$ = atk_text_get_range_extents$MH();
        try {
            mh$.invokeExact(text, start_offset, end_offset, coord_type, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_bounded_ranges$MH() {
        return RuntimeHelper.requireNonNull(constants$2023.const$2,"atk_text_get_bounded_ranges");
    }
    /**
     * {@snippet :
     * struct _AtkTextRange** atk_text_get_bounded_ranges(struct _AtkText* text, struct _AtkTextRectangle* rect, enum AtkCoordType coord_type, enum AtkTextClipType x_clip_type, enum AtkTextClipType y_clip_type);
     * }
     */
    public static MemorySegment atk_text_get_bounded_ranges(MemorySegment text, MemorySegment rect, int coord_type, int x_clip_type, int y_clip_type) {
        var mh$ = atk_text_get_bounded_ranges$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text, rect, coord_type, x_clip_type, y_clip_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_free_ranges$MH() {
        return RuntimeHelper.requireNonNull(constants$2023.const$3,"atk_text_free_ranges");
    }
    /**
     * {@snippet :
     * void atk_text_free_ranges(struct _AtkTextRange** ranges);
     * }
     */
    public static void atk_text_free_ranges(MemorySegment ranges) {
        var mh$ = atk_text_free_ranges$MH();
        try {
            mh$.invokeExact(ranges);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_attribute_set_free$MH() {
        return RuntimeHelper.requireNonNull(constants$2023.const$4,"atk_attribute_set_free");
    }
    /**
     * {@snippet :
     * void atk_attribute_set_free(struct _GSList* attrib_set);
     * }
     */
    public static void atk_attribute_set_free(MemorySegment attrib_set) {
        var mh$ = atk_attribute_set_free$MH();
        try {
            mh$.invokeExact(attrib_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_attribute_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2023.const$5,"atk_text_attribute_get_name");
    }
    /**
     * {@snippet :
     * char* atk_text_attribute_get_name(enum AtkTextAttribute attr);
     * }
     */
    public static MemorySegment atk_text_attribute_get_name(int attr) {
        var mh$ = atk_text_attribute_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_attribute_for_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2024.const$0,"atk_text_attribute_for_name");
    }
    /**
     * {@snippet :
     * enum AtkTextAttribute atk_text_attribute_for_name(char* name);
     * }
     */
    public static int atk_text_attribute_for_name(MemorySegment name) {
        var mh$ = atk_text_attribute_for_name$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_attribute_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2024.const$1,"atk_text_attribute_get_value");
    }
    /**
     * {@snippet :
     * char* atk_text_attribute_get_value(enum AtkTextAttribute attr, int index_);
     * }
     */
    public static MemorySegment atk_text_attribute_get_value(int attr, int index_) {
        var mh$ = atk_text_attribute_get_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(attr, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_scroll_substring_to$MH() {
        return RuntimeHelper.requireNonNull(constants$2024.const$2,"atk_text_scroll_substring_to");
    }
    /**
     * {@snippet :
     * int atk_text_scroll_substring_to(struct _AtkText* text, int start_offset, int end_offset, enum AtkScrollType type);
     * }
     */
    public static int atk_text_scroll_substring_to(MemorySegment text, int start_offset, int end_offset, int type) {
        var mh$ = atk_text_scroll_substring_to$MH();
        try {
            return (int)mh$.invokeExact(text, start_offset, end_offset, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_scroll_substring_to_point$MH() {
        return RuntimeHelper.requireNonNull(constants$2024.const$3,"atk_text_scroll_substring_to_point");
    }
    /**
     * {@snippet :
     * int atk_text_scroll_substring_to_point(struct _AtkText* text, int start_offset, int end_offset, enum AtkCoordType coords, int x, int y);
     * }
     */
    public static int atk_text_scroll_substring_to_point(MemorySegment text, int start_offset, int end_offset, int coords, int x, int y) {
        var mh$ = atk_text_scroll_substring_to_point$MH();
        try {
            return (int)mh$.invokeExact(text, start_offset, end_offset, coords, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2027.const$1,"atk_editable_text_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_editable_text_get_type();
     * }
     */
    public static long atk_editable_text_get_type() {
        var mh$ = atk_editable_text_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_set_run_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2027.const$2,"atk_editable_text_set_run_attributes");
    }
    /**
     * {@snippet :
     * int atk_editable_text_set_run_attributes(struct _AtkEditableText* text, struct _GSList* attrib_set, int start_offset, int end_offset);
     * }
     */
    public static int atk_editable_text_set_run_attributes(MemorySegment text, MemorySegment attrib_set, int start_offset, int end_offset) {
        var mh$ = atk_editable_text_set_run_attributes$MH();
        try {
            return (int)mh$.invokeExact(text, attrib_set, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_set_text_contents$MH() {
        return RuntimeHelper.requireNonNull(constants$2027.const$3,"atk_editable_text_set_text_contents");
    }
    /**
     * {@snippet :
     * void atk_editable_text_set_text_contents(struct _AtkEditableText* text, char* string);
     * }
     */
    public static void atk_editable_text_set_text_contents(MemorySegment text, MemorySegment string) {
        var mh$ = atk_editable_text_set_text_contents$MH();
        try {
            mh$.invokeExact(text, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_insert_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2027.const$4,"atk_editable_text_insert_text");
    }
    /**
     * {@snippet :
     * void atk_editable_text_insert_text(struct _AtkEditableText* text, char* string, int length, int* position);
     * }
     */
    public static void atk_editable_text_insert_text(MemorySegment text, MemorySegment string, int length, MemorySegment position) {
        var mh$ = atk_editable_text_insert_text$MH();
        try {
            mh$.invokeExact(text, string, length, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_copy_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2027.const$5,"atk_editable_text_copy_text");
    }
    /**
     * {@snippet :
     * void atk_editable_text_copy_text(struct _AtkEditableText* text, int start_pos, int end_pos);
     * }
     */
    public static void atk_editable_text_copy_text(MemorySegment text, int start_pos, int end_pos) {
        var mh$ = atk_editable_text_copy_text$MH();
        try {
            mh$.invokeExact(text, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_cut_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2028.const$0,"atk_editable_text_cut_text");
    }
    /**
     * {@snippet :
     * void atk_editable_text_cut_text(struct _AtkEditableText* text, int start_pos, int end_pos);
     * }
     */
    public static void atk_editable_text_cut_text(MemorySegment text, int start_pos, int end_pos) {
        var mh$ = atk_editable_text_cut_text$MH();
        try {
            mh$.invokeExact(text, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_delete_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2028.const$1,"atk_editable_text_delete_text");
    }
    /**
     * {@snippet :
     * void atk_editable_text_delete_text(struct _AtkEditableText* text, int start_pos, int end_pos);
     * }
     */
    public static void atk_editable_text_delete_text(MemorySegment text, int start_pos, int end_pos) {
        var mh$ = atk_editable_text_delete_text$MH();
        try {
            mh$.invokeExact(text, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_paste_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2028.const$2,"atk_editable_text_paste_text");
    }
    /**
     * {@snippet :
     * void atk_editable_text_paste_text(struct _AtkEditableText* text, int position);
     * }
     */
    public static void atk_editable_text_paste_text(MemorySegment text, int position) {
        var mh$ = atk_editable_text_paste_text$MH();
        try {
            mh$.invokeExact(text, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_gobject_accessible_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2028.const$4,"atk_gobject_accessible_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_gobject_accessible_get_type();
     * }
     */
    public static long atk_gobject_accessible_get_type() {
        var mh$ = atk_gobject_accessible_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_gobject_accessible_for_object$MH() {
        return RuntimeHelper.requireNonNull(constants$2029.const$4,"atk_gobject_accessible_for_object");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_gobject_accessible_for_object(struct _GObject* obj);
     * }
     */
    public static MemorySegment atk_gobject_accessible_for_object(MemorySegment obj) {
        var mh$ = atk_gobject_accessible_for_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_gobject_accessible_get_object$MH() {
        return RuntimeHelper.requireNonNull(constants$2029.const$5,"atk_gobject_accessible_get_object");
    }
    /**
     * {@snippet :
     * struct _GObject* atk_gobject_accessible_get_object(struct _AtkGObjectAccessible* obj);
     * }
     */
    public static MemorySegment atk_gobject_accessible_get_object(MemorySegment obj) {
        var mh$ = atk_gobject_accessible_get_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum AtkHyperlinkStateFlags.ATK_HYPERLINK_IS_INLINE = 1;
     * }
     */
    public static int ATK_HYPERLINK_IS_INLINE() {
        return (int)1L;
    }
    public static MethodHandle atk_hyperlink_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2033.const$4,"atk_hyperlink_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_hyperlink_get_type();
     * }
     */
    public static long atk_hyperlink_get_type() {
        var mh$ = atk_hyperlink_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_get_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$2033.const$5,"atk_hyperlink_get_uri");
    }
    /**
     * {@snippet :
     * char* atk_hyperlink_get_uri(struct _AtkHyperlink* link_, int i);
     * }
     */
    public static MemorySegment atk_hyperlink_get_uri(MemorySegment link_, int i) {
        var mh$ = atk_hyperlink_get_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(link_, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_get_object$MH() {
        return RuntimeHelper.requireNonNull(constants$2034.const$0,"atk_hyperlink_get_object");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_hyperlink_get_object(struct _AtkHyperlink* link_, int i);
     * }
     */
    public static MemorySegment atk_hyperlink_get_object(MemorySegment link_, int i) {
        var mh$ = atk_hyperlink_get_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(link_, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_get_end_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2034.const$1,"atk_hyperlink_get_end_index");
    }
    /**
     * {@snippet :
     * int atk_hyperlink_get_end_index(struct _AtkHyperlink* link_);
     * }
     */
    public static int atk_hyperlink_get_end_index(MemorySegment link_) {
        var mh$ = atk_hyperlink_get_end_index$MH();
        try {
            return (int)mh$.invokeExact(link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_get_start_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2034.const$2,"atk_hyperlink_get_start_index");
    }
    /**
     * {@snippet :
     * int atk_hyperlink_get_start_index(struct _AtkHyperlink* link_);
     * }
     */
    public static int atk_hyperlink_get_start_index(MemorySegment link_) {
        var mh$ = atk_hyperlink_get_start_index$MH();
        try {
            return (int)mh$.invokeExact(link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$2034.const$3,"atk_hyperlink_is_valid");
    }
    /**
     * {@snippet :
     * int atk_hyperlink_is_valid(struct _AtkHyperlink* link_);
     * }
     */
    public static int atk_hyperlink_is_valid(MemorySegment link_) {
        var mh$ = atk_hyperlink_is_valid$MH();
        try {
            return (int)mh$.invokeExact(link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_is_inline$MH() {
        return RuntimeHelper.requireNonNull(constants$2034.const$4,"atk_hyperlink_is_inline");
    }
    /**
     * {@snippet :
     * int atk_hyperlink_is_inline(struct _AtkHyperlink* link_);
     * }
     */
    public static int atk_hyperlink_is_inline(MemorySegment link_) {
        var mh$ = atk_hyperlink_is_inline$MH();
        try {
            return (int)mh$.invokeExact(link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_get_n_anchors$MH() {
        return RuntimeHelper.requireNonNull(constants$2034.const$5,"atk_hyperlink_get_n_anchors");
    }
    /**
     * {@snippet :
     * int atk_hyperlink_get_n_anchors(struct _AtkHyperlink* link_);
     * }
     */
    public static int atk_hyperlink_get_n_anchors(MemorySegment link_) {
        var mh$ = atk_hyperlink_get_n_anchors$MH();
        try {
            return (int)mh$.invokeExact(link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_is_selected_link$MH() {
        return RuntimeHelper.requireNonNull(constants$2035.const$0,"atk_hyperlink_is_selected_link");
    }
    /**
     * {@snippet :
     * int atk_hyperlink_is_selected_link(struct _AtkHyperlink* link_);
     * }
     */
    public static int atk_hyperlink_is_selected_link(MemorySegment link_) {
        var mh$ = atk_hyperlink_is_selected_link$MH();
        try {
            return (int)mh$.invokeExact(link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_impl_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2035.const$4,"atk_hyperlink_impl_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_hyperlink_impl_get_type();
     * }
     */
    public static long atk_hyperlink_impl_get_type() {
        var mh$ = atk_hyperlink_impl_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_impl_get_hyperlink$MH() {
        return RuntimeHelper.requireNonNull(constants$2035.const$5,"atk_hyperlink_impl_get_hyperlink");
    }
    /**
     * {@snippet :
     * struct _AtkHyperlink* atk_hyperlink_impl_get_hyperlink(struct _AtkHyperlinkImpl* impl);
     * }
     */
    public static MemorySegment atk_hyperlink_impl_get_hyperlink(MemorySegment impl) {
        var mh$ = atk_hyperlink_impl_get_hyperlink$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(impl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hypertext_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2037.const$3,"atk_hypertext_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_hypertext_get_type();
     * }
     */
    public static long atk_hypertext_get_type() {
        var mh$ = atk_hypertext_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hypertext_get_link$MH() {
        return RuntimeHelper.requireNonNull(constants$2037.const$4,"atk_hypertext_get_link");
    }
    /**
     * {@snippet :
     * struct _AtkHyperlink* atk_hypertext_get_link(struct _AtkHypertext* hypertext, int link_index);
     * }
     */
    public static MemorySegment atk_hypertext_get_link(MemorySegment hypertext, int link_index) {
        var mh$ = atk_hypertext_get_link$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hypertext, link_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hypertext_get_n_links$MH() {
        return RuntimeHelper.requireNonNull(constants$2037.const$5,"atk_hypertext_get_n_links");
    }
    /**
     * {@snippet :
     * int atk_hypertext_get_n_links(struct _AtkHypertext* hypertext);
     * }
     */
    public static int atk_hypertext_get_n_links(MemorySegment hypertext) {
        var mh$ = atk_hypertext_get_n_links$MH();
        try {
            return (int)mh$.invokeExact(hypertext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hypertext_get_link_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2038.const$0,"atk_hypertext_get_link_index");
    }
    /**
     * {@snippet :
     * int atk_hypertext_get_link_index(struct _AtkHypertext* hypertext, int char_index);
     * }
     */
    public static int atk_hypertext_get_link_index(MemorySegment hypertext, int char_index) {
        var mh$ = atk_hypertext_get_link_index$MH();
        try {
            return (int)mh$.invokeExact(hypertext, char_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_image_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2040.const$0,"atk_image_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_image_get_type();
     * }
     */
    public static long atk_image_get_type() {
        var mh$ = atk_image_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_image_get_image_description$MH() {
        return RuntimeHelper.requireNonNull(constants$2040.const$1,"atk_image_get_image_description");
    }
    /**
     * {@snippet :
     * char* atk_image_get_image_description(struct _AtkImage* image);
     * }
     */
    public static MemorySegment atk_image_get_image_description(MemorySegment image) {
        var mh$ = atk_image_get_image_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_image_get_image_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2040.const$2,"atk_image_get_image_size");
    }
    /**
     * {@snippet :
     * void atk_image_get_image_size(struct _AtkImage* image, int* width, int* height);
     * }
     */
    public static void atk_image_get_image_size(MemorySegment image, MemorySegment width, MemorySegment height) {
        var mh$ = atk_image_get_image_size$MH();
        try {
            mh$.invokeExact(image, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_image_set_image_description$MH() {
        return RuntimeHelper.requireNonNull(constants$2040.const$3,"atk_image_set_image_description");
    }
    /**
     * {@snippet :
     * int atk_image_set_image_description(struct _AtkImage* image, char* description);
     * }
     */
    public static int atk_image_set_image_description(MemorySegment image, MemorySegment description) {
        var mh$ = atk_image_set_image_description$MH();
        try {
            return (int)mh$.invokeExact(image, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_image_get_image_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2040.const$4,"atk_image_get_image_position");
    }
    /**
     * {@snippet :
     * void atk_image_get_image_position(struct _AtkImage* image, int* x, int* y, enum AtkCoordType coord_type);
     * }
     */
    public static void atk_image_get_image_position(MemorySegment image, MemorySegment x, MemorySegment y, int coord_type) {
        var mh$ = atk_image_get_image_position$MH();
        try {
            mh$.invokeExact(image, x, y, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_image_get_image_locale$MH() {
        return RuntimeHelper.requireNonNull(constants$2040.const$5,"atk_image_get_image_locale");
    }
    /**
     * {@snippet :
     * char* atk_image_get_image_locale(struct _AtkImage* image);
     * }
     */
    public static MemorySegment atk_image_get_image_locale(MemorySegment image) {
        var mh$ = atk_image_get_image_locale$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout atk_misc_instance$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle atk_misc_instance$VH() {
        return constants$211.const$1;
    }
    public static MemorySegment atk_misc_instance$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2041.const$1,"atk_misc_instance");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * struct _AtkMisc* atk_misc_instance;
     * }
     */
    public static MemorySegment atk_misc_instance$get() {
        return (java.lang.foreign.MemorySegment) constants$211.const$1.get(RuntimeHelper.requireNonNull(constants$2041.const$1, "atk_misc_instance"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * struct _AtkMisc* atk_misc_instance;
     * }
     */
    public static void atk_misc_instance$set(MemorySegment x) {
        constants$211.const$1.set(RuntimeHelper.requireNonNull(constants$2041.const$1, "atk_misc_instance"), x);
    }
    public static MethodHandle atk_misc_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2042.const$1,"atk_misc_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_misc_get_type();
     * }
     */
    public static long atk_misc_get_type() {
        var mh$ = atk_misc_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_misc_threads_enter$MH() {
        return RuntimeHelper.requireNonNull(constants$2042.const$2,"atk_misc_threads_enter");
    }
    /**
     * {@snippet :
     * void atk_misc_threads_enter(struct _AtkMisc* misc);
     * }
     */
    public static void atk_misc_threads_enter(MemorySegment misc) {
        var mh$ = atk_misc_threads_enter$MH();
        try {
            mh$.invokeExact(misc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_misc_threads_leave$MH() {
        return RuntimeHelper.requireNonNull(constants$2042.const$3,"atk_misc_threads_leave");
    }
    /**
     * {@snippet :
     * void atk_misc_threads_leave(struct _AtkMisc* misc);
     * }
     */
    public static void atk_misc_threads_leave(MemorySegment misc) {
        var mh$ = atk_misc_threads_leave$MH();
        try {
            mh$.invokeExact(misc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_misc_get_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$2042.const$4,"atk_misc_get_instance");
    }
    /**
     * {@snippet :
     * struct _AtkMisc* atk_misc_get_instance();
     * }
     */
    public static MemorySegment atk_misc_get_instance() {
        var mh$ = atk_misc_get_instance$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_no_op_object_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2043.const$0,"atk_no_op_object_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_no_op_object_get_type();
     * }
     */
    public static long atk_no_op_object_get_type() {
        var mh$ = atk_no_op_object_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_no_op_object_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2043.const$2,"atk_no_op_object_new");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_no_op_object_new(struct _GObject* obj);
     * }
     */
    public static MemorySegment atk_no_op_object_new(MemorySegment obj) {
        var mh$ = atk_no_op_object_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_factory_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2045.const$3,"atk_object_factory_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_object_factory_get_type();
     * }
     */
    public static long atk_object_factory_get_type() {
        var mh$ = atk_object_factory_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_factory_create_accessible$MH() {
        return RuntimeHelper.requireNonNull(constants$2045.const$4,"atk_object_factory_create_accessible");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_object_factory_create_accessible(struct _AtkObjectFactory* factory, struct _GObject* obj);
     * }
     */
    public static MemorySegment atk_object_factory_create_accessible(MemorySegment factory, MemorySegment obj) {
        var mh$ = atk_object_factory_create_accessible$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(factory, obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_factory_invalidate$MH() {
        return RuntimeHelper.requireNonNull(constants$2045.const$5,"atk_object_factory_invalidate");
    }
    /**
     * {@snippet :
     * void atk_object_factory_invalidate(struct _AtkObjectFactory* factory);
     * }
     */
    public static void atk_object_factory_invalidate(MemorySegment factory) {
        var mh$ = atk_object_factory_invalidate$MH();
        try {
            mh$.invokeExact(factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_factory_get_accessible_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2046.const$0,"atk_object_factory_get_accessible_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_object_factory_get_accessible_type(struct _AtkObjectFactory* factory);
     * }
     */
    public static long atk_object_factory_get_accessible_type(MemorySegment factory) {
        var mh$ = atk_object_factory_get_accessible_type$MH();
        try {
            return (long)mh$.invokeExact(factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_no_op_object_factory_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2046.const$3,"atk_no_op_object_factory_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_no_op_object_factory_get_type();
     * }
     */
    public static long atk_no_op_object_factory_get_type() {
        var mh$ = atk_no_op_object_factory_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_no_op_object_factory_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2046.const$4,"atk_no_op_object_factory_new");
    }
    /**
     * {@snippet :
     * struct _AtkObjectFactory* atk_no_op_object_factory_new();
     * }
     */
    public static MemorySegment atk_no_op_object_factory_new() {
        var mh$ = atk_no_op_object_factory_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_plug_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2047.const$0,"atk_plug_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_plug_get_type();
     * }
     */
    public static long atk_plug_get_type() {
        var mh$ = atk_plug_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_plug_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2047.const$4,"atk_plug_new");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_plug_new();
     * }
     */
    public static MemorySegment atk_plug_new() {
        var mh$ = atk_plug_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_plug_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2047.const$5,"atk_plug_set_child");
    }
    /**
     * {@snippet :
     * void atk_plug_set_child(struct _AtkPlug* plug, struct _AtkObject* child);
     * }
     */
    public static void atk_plug_set_child(MemorySegment plug, MemorySegment child) {
        var mh$ = atk_plug_set_child$MH();
        try {
            mh$.invokeExact(plug, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_plug_get_id$MH() {
        return RuntimeHelper.requireNonNull(constants$2048.const$0,"atk_plug_get_id");
    }
    /**
     * {@snippet :
     * char* atk_plug_get_id(struct _AtkPlug* plug);
     * }
     */
    public static MemorySegment atk_plug_get_id(MemorySegment plug) {
        var mh$ = atk_plug_get_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(plug);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2048.const$1,"atk_range_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_range_get_type();
     * }
     */
    public static long atk_range_get_type() {
        var mh$ = atk_range_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$2048.const$2,"atk_range_copy");
    }
    /**
     * {@snippet :
     * struct _AtkRange* atk_range_copy(struct _AtkRange* src);
     * }
     */
    public static MemorySegment atk_range_copy(MemorySegment src) {
        var mh$ = atk_range_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_free$MH() {
        return RuntimeHelper.requireNonNull(constants$2048.const$3,"atk_range_free");
    }
    /**
     * {@snippet :
     * void atk_range_free(struct _AtkRange* range);
     * }
     */
    public static void atk_range_free(MemorySegment range) {
        var mh$ = atk_range_free$MH();
        try {
            mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_get_lower_limit$MH() {
        return RuntimeHelper.requireNonNull(constants$2048.const$4,"atk_range_get_lower_limit");
    }
    /**
     * {@snippet :
     * double atk_range_get_lower_limit(struct _AtkRange* range);
     * }
     */
    public static double atk_range_get_lower_limit(MemorySegment range) {
        var mh$ = atk_range_get_lower_limit$MH();
        try {
            return (double)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_get_upper_limit$MH() {
        return RuntimeHelper.requireNonNull(constants$2048.const$5,"atk_range_get_upper_limit");
    }
    /**
     * {@snippet :
     * double atk_range_get_upper_limit(struct _AtkRange* range);
     * }
     */
    public static double atk_range_get_upper_limit(MemorySegment range) {
        var mh$ = atk_range_get_upper_limit$MH();
        try {
            return (double)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$2049.const$0,"atk_range_get_description");
    }
    /**
     * {@snippet :
     * char* atk_range_get_description(struct _AtkRange* range);
     * }
     */
    public static MemorySegment atk_range_get_description(MemorySegment range) {
        var mh$ = atk_range_get_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2049.const$2,"atk_range_new");
    }
    /**
     * {@snippet :
     * struct _AtkRange* atk_range_new(double lower_limit, double upper_limit, char* description);
     * }
     */
    public static MemorySegment atk_range_new(double lower_limit, double upper_limit, MemorySegment description) {
        var mh$ = atk_range_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(lower_limit, upper_limit, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_registry_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2050.const$1,"atk_registry_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_registry_get_type();
     * }
     */
    public static long atk_registry_get_type() {
        var mh$ = atk_registry_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_registry_set_factory_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2050.const$2,"atk_registry_set_factory_type");
    }
    /**
     * {@snippet :
     * void atk_registry_set_factory_type(struct _AtkRegistry* registry, unsigned long type, unsigned long factory_type);
     * }
     */
    public static void atk_registry_set_factory_type(MemorySegment registry, long type, long factory_type) {
        var mh$ = atk_registry_set_factory_type$MH();
        try {
            mh$.invokeExact(registry, type, factory_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_registry_get_factory_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2050.const$3,"atk_registry_get_factory_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_registry_get_factory_type(struct _AtkRegistry* registry, unsigned long type);
     * }
     */
    public static long atk_registry_get_factory_type(MemorySegment registry, long type) {
        var mh$ = atk_registry_get_factory_type$MH();
        try {
            return (long)mh$.invokeExact(registry, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_registry_get_factory$MH() {
        return RuntimeHelper.requireNonNull(constants$2050.const$4,"atk_registry_get_factory");
    }
    /**
     * {@snippet :
     * struct _AtkObjectFactory* atk_registry_get_factory(struct _AtkRegistry* registry, unsigned long type);
     * }
     */
    public static MemorySegment atk_registry_get_factory(MemorySegment registry, long type) {
        var mh$ = atk_registry_get_factory$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(registry, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_default_registry$MH() {
        return RuntimeHelper.requireNonNull(constants$2050.const$5,"atk_get_default_registry");
    }
    /**
     * {@snippet :
     * struct _AtkRegistry* atk_get_default_registry();
     * }
     */
    public static MemorySegment atk_get_default_registry() {
        var mh$ = atk_get_default_registry$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2051.const$4,"atk_relation_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_relation_get_type();
     * }
     */
    public static long atk_relation_get_type() {
        var mh$ = atk_relation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_type_register$MH() {
        return RuntimeHelper.requireNonNull(constants$2051.const$5,"atk_relation_type_register");
    }
    /**
     * {@snippet :
     * enum AtkRelationType atk_relation_type_register(char* name);
     * }
     */
    public static int atk_relation_type_register(MemorySegment name) {
        var mh$ = atk_relation_type_register$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_type_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2052.const$0,"atk_relation_type_get_name");
    }
    /**
     * {@snippet :
     * char* atk_relation_type_get_name(enum AtkRelationType type);
     * }
     */
    public static MemorySegment atk_relation_type_get_name(int type) {
        var mh$ = atk_relation_type_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_type_for_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2052.const$1,"atk_relation_type_for_name");
    }
    /**
     * {@snippet :
     * enum AtkRelationType atk_relation_type_for_name(char* name);
     * }
     */
    public static int atk_relation_type_for_name(MemorySegment name) {
        var mh$ = atk_relation_type_for_name$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2052.const$2,"atk_relation_new");
    }
    /**
     * {@snippet :
     * struct _AtkRelation* atk_relation_new(struct _AtkObject** targets, int n_targets, enum AtkRelationType relationship);
     * }
     */
    public static MemorySegment atk_relation_new(MemorySegment targets, int n_targets, int relationship) {
        var mh$ = atk_relation_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(targets, n_targets, relationship);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_get_relation_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2052.const$3,"atk_relation_get_relation_type");
    }
    /**
     * {@snippet :
     * enum AtkRelationType atk_relation_get_relation_type(struct _AtkRelation* relation);
     * }
     */
    public static int atk_relation_get_relation_type(MemorySegment relation) {
        var mh$ = atk_relation_get_relation_type$MH();
        try {
            return (int)mh$.invokeExact(relation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_get_target$MH() {
        return RuntimeHelper.requireNonNull(constants$2052.const$4,"atk_relation_get_target");
    }
    /**
     * {@snippet :
     * struct _GPtrArray* atk_relation_get_target(struct _AtkRelation* relation);
     * }
     */
    public static MemorySegment atk_relation_get_target(MemorySegment relation) {
        var mh$ = atk_relation_get_target$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(relation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_add_target$MH() {
        return RuntimeHelper.requireNonNull(constants$2052.const$5,"atk_relation_add_target");
    }
    /**
     * {@snippet :
     * void atk_relation_add_target(struct _AtkRelation* relation, struct _AtkObject* target);
     * }
     */
    public static void atk_relation_add_target(MemorySegment relation, MemorySegment target) {
        var mh$ = atk_relation_add_target$MH();
        try {
            mh$.invokeExact(relation, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_remove_target$MH() {
        return RuntimeHelper.requireNonNull(constants$2053.const$0,"atk_relation_remove_target");
    }
    /**
     * {@snippet :
     * int atk_relation_remove_target(struct _AtkRelation* relation, struct _AtkObject* target);
     * }
     */
    public static int atk_relation_remove_target(MemorySegment relation, MemorySegment target) {
        var mh$ = atk_relation_remove_target$MH();
        try {
            return (int)mh$.invokeExact(relation, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2054.const$2,"atk_relation_set_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_relation_set_get_type();
     * }
     */
    public static long atk_relation_set_get_type() {
        var mh$ = atk_relation_set_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2054.const$3,"atk_relation_set_new");
    }
    /**
     * {@snippet :
     * struct _AtkRelationSet* atk_relation_set_new();
     * }
     */
    public static MemorySegment atk_relation_set_new() {
        var mh$ = atk_relation_set_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_contains$MH() {
        return RuntimeHelper.requireNonNull(constants$2054.const$4,"atk_relation_set_contains");
    }
    /**
     * {@snippet :
     * int atk_relation_set_contains(struct _AtkRelationSet* set, enum AtkRelationType relationship);
     * }
     */
    public static int atk_relation_set_contains(MemorySegment set, int relationship) {
        var mh$ = atk_relation_set_contains$MH();
        try {
            return (int)mh$.invokeExact(set, relationship);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_contains_target$MH() {
        return RuntimeHelper.requireNonNull(constants$2054.const$5,"atk_relation_set_contains_target");
    }
    /**
     * {@snippet :
     * int atk_relation_set_contains_target(struct _AtkRelationSet* set, enum AtkRelationType relationship, struct _AtkObject* target);
     * }
     */
    public static int atk_relation_set_contains_target(MemorySegment set, int relationship, MemorySegment target) {
        var mh$ = atk_relation_set_contains_target$MH();
        try {
            return (int)mh$.invokeExact(set, relationship, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2055.const$0,"atk_relation_set_remove");
    }
    /**
     * {@snippet :
     * void atk_relation_set_remove(struct _AtkRelationSet* set, struct _AtkRelation* relation);
     * }
     */
    public static void atk_relation_set_remove(MemorySegment set, MemorySegment relation) {
        var mh$ = atk_relation_set_remove$MH();
        try {
            mh$.invokeExact(set, relation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_add$MH() {
        return RuntimeHelper.requireNonNull(constants$2055.const$1,"atk_relation_set_add");
    }
    /**
     * {@snippet :
     * void atk_relation_set_add(struct _AtkRelationSet* set, struct _AtkRelation* relation);
     * }
     */
    public static void atk_relation_set_add(MemorySegment set, MemorySegment relation) {
        var mh$ = atk_relation_set_add$MH();
        try {
            mh$.invokeExact(set, relation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_get_n_relations$MH() {
        return RuntimeHelper.requireNonNull(constants$2055.const$2,"atk_relation_set_get_n_relations");
    }
    /**
     * {@snippet :
     * int atk_relation_set_get_n_relations(struct _AtkRelationSet* set);
     * }
     */
    public static int atk_relation_set_get_n_relations(MemorySegment set) {
        var mh$ = atk_relation_set_get_n_relations$MH();
        try {
            return (int)mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_get_relation$MH() {
        return RuntimeHelper.requireNonNull(constants$2055.const$3,"atk_relation_set_get_relation");
    }
    /**
     * {@snippet :
     * struct _AtkRelation* atk_relation_set_get_relation(struct _AtkRelationSet* set, int i);
     * }
     */
    public static MemorySegment atk_relation_set_get_relation(MemorySegment set, int i) {
        var mh$ = atk_relation_set_get_relation$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(set, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_get_relation_by_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2055.const$4,"atk_relation_set_get_relation_by_type");
    }
    /**
     * {@snippet :
     * struct _AtkRelation* atk_relation_set_get_relation_by_type(struct _AtkRelationSet* set, enum AtkRelationType relationship);
     * }
     */
    public static MemorySegment atk_relation_set_get_relation_by_type(MemorySegment set, int relationship) {
        var mh$ = atk_relation_set_get_relation_by_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(set, relationship);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_add_relation_by_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2055.const$5,"atk_relation_set_add_relation_by_type");
    }
    /**
     * {@snippet :
     * void atk_relation_set_add_relation_by_type(struct _AtkRelationSet* set, enum AtkRelationType relationship, struct _AtkObject* target);
     * }
     */
    public static void atk_relation_set_add_relation_by_type(MemorySegment set, int relationship, MemorySegment target) {
        var mh$ = atk_relation_set_add_relation_by_type$MH();
        try {
            mh$.invokeExact(set, relationship, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2058.const$5,"atk_selection_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_selection_get_type();
     * }
     */
    public static long atk_selection_get_type() {
        var mh$ = atk_selection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_add_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2059.const$0,"atk_selection_add_selection");
    }
    /**
     * {@snippet :
     * int atk_selection_add_selection(struct _AtkSelection* selection, int i);
     * }
     */
    public static int atk_selection_add_selection(MemorySegment selection, int i) {
        var mh$ = atk_selection_add_selection$MH();
        try {
            return (int)mh$.invokeExact(selection, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_clear_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2059.const$1,"atk_selection_clear_selection");
    }
    /**
     * {@snippet :
     * int atk_selection_clear_selection(struct _AtkSelection* selection);
     * }
     */
    public static int atk_selection_clear_selection(MemorySegment selection) {
        var mh$ = atk_selection_clear_selection$MH();
        try {
            return (int)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_ref_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2059.const$2,"atk_selection_ref_selection");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_selection_ref_selection(struct _AtkSelection* selection, int i);
     * }
     */
    public static MemorySegment atk_selection_ref_selection(MemorySegment selection, int i) {
        var mh$ = atk_selection_ref_selection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(selection, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_get_selection_count$MH() {
        return RuntimeHelper.requireNonNull(constants$2059.const$3,"atk_selection_get_selection_count");
    }
    /**
     * {@snippet :
     * int atk_selection_get_selection_count(struct _AtkSelection* selection);
     * }
     */
    public static int atk_selection_get_selection_count(MemorySegment selection) {
        var mh$ = atk_selection_get_selection_count$MH();
        try {
            return (int)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_is_child_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$2059.const$4,"atk_selection_is_child_selected");
    }
    /**
     * {@snippet :
     * int atk_selection_is_child_selected(struct _AtkSelection* selection, int i);
     * }
     */
    public static int atk_selection_is_child_selected(MemorySegment selection, int i) {
        var mh$ = atk_selection_is_child_selected$MH();
        try {
            return (int)mh$.invokeExact(selection, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_remove_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2059.const$5,"atk_selection_remove_selection");
    }
    /**
     * {@snippet :
     * int atk_selection_remove_selection(struct _AtkSelection* selection, int i);
     * }
     */
    public static int atk_selection_remove_selection(MemorySegment selection, int i) {
        var mh$ = atk_selection_remove_selection$MH();
        try {
            return (int)mh$.invokeExact(selection, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_select_all_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2060.const$0,"atk_selection_select_all_selection");
    }
    /**
     * {@snippet :
     * int atk_selection_select_all_selection(struct _AtkSelection* selection);
     * }
     */
    public static int atk_selection_select_all_selection(MemorySegment selection) {
        var mh$ = atk_selection_select_all_selection$MH();
        try {
            return (int)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_socket_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2060.const$3,"atk_socket_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_socket_get_type();
     * }
     */
    public static long atk_socket_get_type() {
        var mh$ = atk_socket_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_socket_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2061.const$1,"atk_socket_new");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_socket_new();
     * }
     */
    public static MemorySegment atk_socket_new() {
        var mh$ = atk_socket_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_socket_embed$MH() {
        return RuntimeHelper.requireNonNull(constants$2061.const$2,"atk_socket_embed");
    }
    /**
     * {@snippet :
     * void atk_socket_embed(struct _AtkSocket* obj, char* plug_id);
     * }
     */
    public static void atk_socket_embed(MemorySegment obj, MemorySegment plug_id) {
        var mh$ = atk_socket_embed$MH();
        try {
            mh$.invokeExact(obj, plug_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_socket_is_occupied$MH() {
        return RuntimeHelper.requireNonNull(constants$2061.const$3,"atk_socket_is_occupied");
    }
    /**
     * {@snippet :
     * int atk_socket_is_occupied(struct _AtkSocket* obj);
     * }
     */
    public static int atk_socket_is_occupied(MemorySegment obj) {
        var mh$ = atk_socket_is_occupied$MH();
        try {
            return (int)mh$.invokeExact(obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2062.const$0,"atk_state_set_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_state_set_get_type();
     * }
     */
    public static long atk_state_set_get_type() {
        var mh$ = atk_state_set_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2062.const$1,"atk_state_set_new");
    }
    /**
     * {@snippet :
     * struct _AtkStateSet* atk_state_set_new();
     * }
     */
    public static MemorySegment atk_state_set_new() {
        var mh$ = atk_state_set_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_is_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$2062.const$2,"atk_state_set_is_empty");
    }
    /**
     * {@snippet :
     * int atk_state_set_is_empty(struct _AtkStateSet* set);
     * }
     */
    public static int atk_state_set_is_empty(MemorySegment set) {
        var mh$ = atk_state_set_is_empty$MH();
        try {
            return (int)mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_add_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2062.const$3,"atk_state_set_add_state");
    }
    /**
     * {@snippet :
     * int atk_state_set_add_state(struct _AtkStateSet* set, enum AtkStateType type);
     * }
     */
    public static int atk_state_set_add_state(MemorySegment set, int type) {
        var mh$ = atk_state_set_add_state$MH();
        try {
            return (int)mh$.invokeExact(set, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_add_states$MH() {
        return RuntimeHelper.requireNonNull(constants$2062.const$4,"atk_state_set_add_states");
    }
    /**
     * {@snippet :
     * void atk_state_set_add_states(struct _AtkStateSet* set, enum AtkStateType* types, int n_types);
     * }
     */
    public static void atk_state_set_add_states(MemorySegment set, MemorySegment types, int n_types) {
        var mh$ = atk_state_set_add_states$MH();
        try {
            mh$.invokeExact(set, types, n_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_clear_states$MH() {
        return RuntimeHelper.requireNonNull(constants$2062.const$5,"atk_state_set_clear_states");
    }
    /**
     * {@snippet :
     * void atk_state_set_clear_states(struct _AtkStateSet* set);
     * }
     */
    public static void atk_state_set_clear_states(MemorySegment set) {
        var mh$ = atk_state_set_clear_states$MH();
        try {
            mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_contains_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2063.const$0,"atk_state_set_contains_state");
    }
    /**
     * {@snippet :
     * int atk_state_set_contains_state(struct _AtkStateSet* set, enum AtkStateType type);
     * }
     */
    public static int atk_state_set_contains_state(MemorySegment set, int type) {
        var mh$ = atk_state_set_contains_state$MH();
        try {
            return (int)mh$.invokeExact(set, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_contains_states$MH() {
        return RuntimeHelper.requireNonNull(constants$2063.const$1,"atk_state_set_contains_states");
    }
    /**
     * {@snippet :
     * int atk_state_set_contains_states(struct _AtkStateSet* set, enum AtkStateType* types, int n_types);
     * }
     */
    public static int atk_state_set_contains_states(MemorySegment set, MemorySegment types, int n_types) {
        var mh$ = atk_state_set_contains_states$MH();
        try {
            return (int)mh$.invokeExact(set, types, n_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_remove_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2063.const$2,"atk_state_set_remove_state");
    }
    /**
     * {@snippet :
     * int atk_state_set_remove_state(struct _AtkStateSet* set, enum AtkStateType type);
     * }
     */
    public static int atk_state_set_remove_state(MemorySegment set, int type) {
        var mh$ = atk_state_set_remove_state$MH();
        try {
            return (int)mh$.invokeExact(set, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_and_sets$MH() {
        return RuntimeHelper.requireNonNull(constants$2063.const$3,"atk_state_set_and_sets");
    }
    /**
     * {@snippet :
     * struct _AtkStateSet* atk_state_set_and_sets(struct _AtkStateSet* set, struct _AtkStateSet* compare_set);
     * }
     */
    public static MemorySegment atk_state_set_and_sets(MemorySegment set, MemorySegment compare_set) {
        var mh$ = atk_state_set_and_sets$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(set, compare_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_or_sets$MH() {
        return RuntimeHelper.requireNonNull(constants$2063.const$4,"atk_state_set_or_sets");
    }
    /**
     * {@snippet :
     * struct _AtkStateSet* atk_state_set_or_sets(struct _AtkStateSet* set, struct _AtkStateSet* compare_set);
     * }
     */
    public static MemorySegment atk_state_set_or_sets(MemorySegment set, MemorySegment compare_set) {
        var mh$ = atk_state_set_or_sets$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(set, compare_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_xor_sets$MH() {
        return RuntimeHelper.requireNonNull(constants$2063.const$5,"atk_state_set_xor_sets");
    }
    /**
     * {@snippet :
     * struct _AtkStateSet* atk_state_set_xor_sets(struct _AtkStateSet* set, struct _AtkStateSet* compare_set);
     * }
     */
    public static MemorySegment atk_state_set_xor_sets(MemorySegment set, MemorySegment compare_set) {
        var mh$ = atk_state_set_xor_sets$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(set, compare_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_streamable_content_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2066.const$3,"atk_streamable_content_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_streamable_content_get_type();
     * }
     */
    public static long atk_streamable_content_get_type() {
        var mh$ = atk_streamable_content_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_streamable_content_get_n_mime_types$MH() {
        return RuntimeHelper.requireNonNull(constants$2066.const$4,"atk_streamable_content_get_n_mime_types");
    }
    /**
     * {@snippet :
     * int atk_streamable_content_get_n_mime_types(struct _AtkStreamableContent* streamable);
     * }
     */
    public static int atk_streamable_content_get_n_mime_types(MemorySegment streamable) {
        var mh$ = atk_streamable_content_get_n_mime_types$MH();
        try {
            return (int)mh$.invokeExact(streamable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_streamable_content_get_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2066.const$5,"atk_streamable_content_get_mime_type");
    }
    /**
     * {@snippet :
     * char* atk_streamable_content_get_mime_type(struct _AtkStreamableContent* streamable, int i);
     * }
     */
    public static MemorySegment atk_streamable_content_get_mime_type(MemorySegment streamable, int i) {
        var mh$ = atk_streamable_content_get_mime_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(streamable, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_streamable_content_get_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$2067.const$0,"atk_streamable_content_get_stream");
    }
    /**
     * {@snippet :
     * struct _GIOChannel* atk_streamable_content_get_stream(struct _AtkStreamableContent* streamable, char* mime_type);
     * }
     */
    public static MemorySegment atk_streamable_content_get_stream(MemorySegment streamable, MemorySegment mime_type) {
        var mh$ = atk_streamable_content_get_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(streamable, mime_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_streamable_content_get_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$2067.const$1,"atk_streamable_content_get_uri");
    }
    /**
     * {@snippet :
     * char* atk_streamable_content_get_uri(struct _AtkStreamableContent* streamable, char* mime_type);
     * }
     */
    public static MemorySegment atk_streamable_content_get_uri(MemorySegment streamable, MemorySegment mime_type) {
        var mh$ = atk_streamable_content_get_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(streamable, mime_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2079.const$3,"atk_table_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_table_get_type();
     * }
     */
    public static long atk_table_get_type() {
        var mh$ = atk_table_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_ref_at$MH() {
        return RuntimeHelper.requireNonNull(constants$2079.const$4,"atk_table_ref_at");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_table_ref_at(struct _AtkTable* table, int row, int column);
     * }
     */
    public static MemorySegment atk_table_ref_at(MemorySegment table, int row, int column) {
        var mh$ = atk_table_ref_at$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(table, row, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_index_at$MH() {
        return RuntimeHelper.requireNonNull(constants$2079.const$5,"atk_table_get_index_at");
    }
    /**
     * {@snippet :
     * int atk_table_get_index_at(struct _AtkTable* table, int row, int column);
     * }
     */
    public static int atk_table_get_index_at(MemorySegment table, int row, int column) {
        var mh$ = atk_table_get_index_at$MH();
        try {
            return (int)mh$.invokeExact(table, row, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_column_at_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2080.const$0,"atk_table_get_column_at_index");
    }
    /**
     * {@snippet :
     * int atk_table_get_column_at_index(struct _AtkTable* table, int index_);
     * }
     */
    public static int atk_table_get_column_at_index(MemorySegment table, int index_) {
        var mh$ = atk_table_get_column_at_index$MH();
        try {
            return (int)mh$.invokeExact(table, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_row_at_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2080.const$1,"atk_table_get_row_at_index");
    }
    /**
     * {@snippet :
     * int atk_table_get_row_at_index(struct _AtkTable* table, int index_);
     * }
     */
    public static int atk_table_get_row_at_index(MemorySegment table, int index_) {
        var mh$ = atk_table_get_row_at_index$MH();
        try {
            return (int)mh$.invokeExact(table, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_n_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$2080.const$2,"atk_table_get_n_columns");
    }
    /**
     * {@snippet :
     * int atk_table_get_n_columns(struct _AtkTable* table);
     * }
     */
    public static int atk_table_get_n_columns(MemorySegment table) {
        var mh$ = atk_table_get_n_columns$MH();
        try {
            return (int)mh$.invokeExact(table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_n_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$2080.const$3,"atk_table_get_n_rows");
    }
    /**
     * {@snippet :
     * int atk_table_get_n_rows(struct _AtkTable* table);
     * }
     */
    public static int atk_table_get_n_rows(MemorySegment table) {
        var mh$ = atk_table_get_n_rows$MH();
        try {
            return (int)mh$.invokeExact(table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_column_extent_at$MH() {
        return RuntimeHelper.requireNonNull(constants$2080.const$4,"atk_table_get_column_extent_at");
    }
    /**
     * {@snippet :
     * int atk_table_get_column_extent_at(struct _AtkTable* table, int row, int column);
     * }
     */
    public static int atk_table_get_column_extent_at(MemorySegment table, int row, int column) {
        var mh$ = atk_table_get_column_extent_at$MH();
        try {
            return (int)mh$.invokeExact(table, row, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_row_extent_at$MH() {
        return RuntimeHelper.requireNonNull(constants$2080.const$5,"atk_table_get_row_extent_at");
    }
    /**
     * {@snippet :
     * int atk_table_get_row_extent_at(struct _AtkTable* table, int row, int column);
     * }
     */
    public static int atk_table_get_row_extent_at(MemorySegment table, int row, int column) {
        var mh$ = atk_table_get_row_extent_at$MH();
        try {
            return (int)mh$.invokeExact(table, row, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_caption$MH() {
        return RuntimeHelper.requireNonNull(constants$2081.const$0,"atk_table_get_caption");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_table_get_caption(struct _AtkTable* table);
     * }
     */
    public static MemorySegment atk_table_get_caption(MemorySegment table) {
        var mh$ = atk_table_get_caption$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_column_description$MH() {
        return RuntimeHelper.requireNonNull(constants$2081.const$1,"atk_table_get_column_description");
    }
    /**
     * {@snippet :
     * char* atk_table_get_column_description(struct _AtkTable* table, int column);
     * }
     */
    public static MemorySegment atk_table_get_column_description(MemorySegment table, int column) {
        var mh$ = atk_table_get_column_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(table, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_column_header$MH() {
        return RuntimeHelper.requireNonNull(constants$2081.const$2,"atk_table_get_column_header");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_table_get_column_header(struct _AtkTable* table, int column);
     * }
     */
    public static MemorySegment atk_table_get_column_header(MemorySegment table, int column) {
        var mh$ = atk_table_get_column_header$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(table, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_row_description$MH() {
        return RuntimeHelper.requireNonNull(constants$2081.const$3,"atk_table_get_row_description");
    }
    /**
     * {@snippet :
     * char* atk_table_get_row_description(struct _AtkTable* table, int row);
     * }
     */
    public static MemorySegment atk_table_get_row_description(MemorySegment table, int row) {
        var mh$ = atk_table_get_row_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(table, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_row_header$MH() {
        return RuntimeHelper.requireNonNull(constants$2081.const$4,"atk_table_get_row_header");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_table_get_row_header(struct _AtkTable* table, int row);
     * }
     */
    public static MemorySegment atk_table_get_row_header(MemorySegment table, int row) {
        var mh$ = atk_table_get_row_header$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(table, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_summary$MH() {
        return RuntimeHelper.requireNonNull(constants$2081.const$5,"atk_table_get_summary");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_table_get_summary(struct _AtkTable* table);
     * }
     */
    public static MemorySegment atk_table_get_summary(MemorySegment table) {
        var mh$ = atk_table_get_summary$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_set_caption$MH() {
        return RuntimeHelper.requireNonNull(constants$2082.const$0,"atk_table_set_caption");
    }
    /**
     * {@snippet :
     * void atk_table_set_caption(struct _AtkTable* table, struct _AtkObject* caption);
     * }
     */
    public static void atk_table_set_caption(MemorySegment table, MemorySegment caption) {
        var mh$ = atk_table_set_caption$MH();
        try {
            mh$.invokeExact(table, caption);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_set_column_description$MH() {
        return RuntimeHelper.requireNonNull(constants$2082.const$1,"atk_table_set_column_description");
    }
    /**
     * {@snippet :
     * void atk_table_set_column_description(struct _AtkTable* table, int column, char* description);
     * }
     */
    public static void atk_table_set_column_description(MemorySegment table, int column, MemorySegment description) {
        var mh$ = atk_table_set_column_description$MH();
        try {
            mh$.invokeExact(table, column, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_set_column_header$MH() {
        return RuntimeHelper.requireNonNull(constants$2082.const$2,"atk_table_set_column_header");
    }
    /**
     * {@snippet :
     * void atk_table_set_column_header(struct _AtkTable* table, int column, struct _AtkObject* header);
     * }
     */
    public static void atk_table_set_column_header(MemorySegment table, int column, MemorySegment header) {
        var mh$ = atk_table_set_column_header$MH();
        try {
            mh$.invokeExact(table, column, header);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_set_row_description$MH() {
        return RuntimeHelper.requireNonNull(constants$2082.const$3,"atk_table_set_row_description");
    }
    /**
     * {@snippet :
     * void atk_table_set_row_description(struct _AtkTable* table, int row, char* description);
     * }
     */
    public static void atk_table_set_row_description(MemorySegment table, int row, MemorySegment description) {
        var mh$ = atk_table_set_row_description$MH();
        try {
            mh$.invokeExact(table, row, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_set_row_header$MH() {
        return RuntimeHelper.requireNonNull(constants$2082.const$4,"atk_table_set_row_header");
    }
    /**
     * {@snippet :
     * void atk_table_set_row_header(struct _AtkTable* table, int row, struct _AtkObject* header);
     * }
     */
    public static void atk_table_set_row_header(MemorySegment table, int row, MemorySegment header) {
        var mh$ = atk_table_set_row_header$MH();
        try {
            mh$.invokeExact(table, row, header);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_set_summary$MH() {
        return RuntimeHelper.requireNonNull(constants$2082.const$5,"atk_table_set_summary");
    }
    /**
     * {@snippet :
     * void atk_table_set_summary(struct _AtkTable* table, struct _AtkObject* accessible);
     * }
     */
    public static void atk_table_set_summary(MemorySegment table, MemorySegment accessible) {
        var mh$ = atk_table_set_summary$MH();
        try {
            mh$.invokeExact(table, accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_selected_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$2083.const$0,"atk_table_get_selected_columns");
    }
    /**
     * {@snippet :
     * int atk_table_get_selected_columns(struct _AtkTable* table, int** selected);
     * }
     */
    public static int atk_table_get_selected_columns(MemorySegment table, MemorySegment selected) {
        var mh$ = atk_table_get_selected_columns$MH();
        try {
            return (int)mh$.invokeExact(table, selected);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_selected_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$2083.const$1,"atk_table_get_selected_rows");
    }
    /**
     * {@snippet :
     * int atk_table_get_selected_rows(struct _AtkTable* table, int** selected);
     * }
     */
    public static int atk_table_get_selected_rows(MemorySegment table, MemorySegment selected) {
        var mh$ = atk_table_get_selected_rows$MH();
        try {
            return (int)mh$.invokeExact(table, selected);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_is_column_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$2083.const$2,"atk_table_is_column_selected");
    }
    /**
     * {@snippet :
     * int atk_table_is_column_selected(struct _AtkTable* table, int column);
     * }
     */
    public static int atk_table_is_column_selected(MemorySegment table, int column) {
        var mh$ = atk_table_is_column_selected$MH();
        try {
            return (int)mh$.invokeExact(table, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_is_row_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$2083.const$3,"atk_table_is_row_selected");
    }
    /**
     * {@snippet :
     * int atk_table_is_row_selected(struct _AtkTable* table, int row);
     * }
     */
    public static int atk_table_is_row_selected(MemorySegment table, int row) {
        var mh$ = atk_table_is_row_selected$MH();
        try {
            return (int)mh$.invokeExact(table, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_is_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$2083.const$4,"atk_table_is_selected");
    }
    /**
     * {@snippet :
     * int atk_table_is_selected(struct _AtkTable* table, int row, int column);
     * }
     */
    public static int atk_table_is_selected(MemorySegment table, int row, int column) {
        var mh$ = atk_table_is_selected$MH();
        try {
            return (int)mh$.invokeExact(table, row, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_add_row_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2083.const$5,"atk_table_add_row_selection");
    }
    /**
     * {@snippet :
     * int atk_table_add_row_selection(struct _AtkTable* table, int row);
     * }
     */
    public static int atk_table_add_row_selection(MemorySegment table, int row) {
        var mh$ = atk_table_add_row_selection$MH();
        try {
            return (int)mh$.invokeExact(table, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_remove_row_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2084.const$0,"atk_table_remove_row_selection");
    }
    /**
     * {@snippet :
     * int atk_table_remove_row_selection(struct _AtkTable* table, int row);
     * }
     */
    public static int atk_table_remove_row_selection(MemorySegment table, int row) {
        var mh$ = atk_table_remove_row_selection$MH();
        try {
            return (int)mh$.invokeExact(table, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_add_column_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2084.const$1,"atk_table_add_column_selection");
    }
    /**
     * {@snippet :
     * int atk_table_add_column_selection(struct _AtkTable* table, int column);
     * }
     */
    public static int atk_table_add_column_selection(MemorySegment table, int column) {
        var mh$ = atk_table_add_column_selection$MH();
        try {
            return (int)mh$.invokeExact(table, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_remove_column_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2084.const$2,"atk_table_remove_column_selection");
    }
    /**
     * {@snippet :
     * int atk_table_remove_column_selection(struct _AtkTable* table, int column);
     * }
     */
    public static int atk_table_remove_column_selection(MemorySegment table, int column) {
        var mh$ = atk_table_remove_column_selection$MH();
        try {
            return (int)mh$.invokeExact(table, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_cell_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2087.const$1,"atk_table_cell_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_table_cell_get_type();
     * }
     */
    public static long atk_table_cell_get_type() {
        var mh$ = atk_table_cell_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_cell_get_column_span$MH() {
        return RuntimeHelper.requireNonNull(constants$2087.const$2,"atk_table_cell_get_column_span");
    }
    /**
     * {@snippet :
     * int atk_table_cell_get_column_span(struct _AtkTableCell* cell);
     * }
     */
    public static int atk_table_cell_get_column_span(MemorySegment cell) {
        var mh$ = atk_table_cell_get_column_span$MH();
        try {
            return (int)mh$.invokeExact(cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_cell_get_column_header_cells$MH() {
        return RuntimeHelper.requireNonNull(constants$2087.const$3,"atk_table_cell_get_column_header_cells");
    }
    /**
     * {@snippet :
     * struct _GPtrArray* atk_table_cell_get_column_header_cells(struct _AtkTableCell* cell);
     * }
     */
    public static MemorySegment atk_table_cell_get_column_header_cells(MemorySegment cell) {
        var mh$ = atk_table_cell_get_column_header_cells$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_cell_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2087.const$4,"atk_table_cell_get_position");
    }
    /**
     * {@snippet :
     * int atk_table_cell_get_position(struct _AtkTableCell* cell, int* row, int* column);
     * }
     */
    public static int atk_table_cell_get_position(MemorySegment cell, MemorySegment row, MemorySegment column) {
        var mh$ = atk_table_cell_get_position$MH();
        try {
            return (int)mh$.invokeExact(cell, row, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_cell_get_row_span$MH() {
        return RuntimeHelper.requireNonNull(constants$2087.const$5,"atk_table_cell_get_row_span");
    }
    /**
     * {@snippet :
     * int atk_table_cell_get_row_span(struct _AtkTableCell* cell);
     * }
     */
    public static int atk_table_cell_get_row_span(MemorySegment cell) {
        var mh$ = atk_table_cell_get_row_span$MH();
        try {
            return (int)mh$.invokeExact(cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_cell_get_row_header_cells$MH() {
        return RuntimeHelper.requireNonNull(constants$2088.const$0,"atk_table_cell_get_row_header_cells");
    }
    /**
     * {@snippet :
     * struct _GPtrArray* atk_table_cell_get_row_header_cells(struct _AtkTableCell* cell);
     * }
     */
    public static MemorySegment atk_table_cell_get_row_header_cells(MemorySegment cell) {
        var mh$ = atk_table_cell_get_row_header_cells$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_cell_get_row_column_span$MH() {
        return RuntimeHelper.requireNonNull(constants$2088.const$1,"atk_table_cell_get_row_column_span");
    }
    /**
     * {@snippet :
     * int atk_table_cell_get_row_column_span(struct _AtkTableCell* cell, int* row, int* column, int* row_span, int* column_span);
     * }
     */
    public static int atk_table_cell_get_row_column_span(MemorySegment cell, MemorySegment row, MemorySegment column, MemorySegment row_span, MemorySegment column_span) {
        var mh$ = atk_table_cell_get_row_column_span$MH();
        try {
            return (int)mh$.invokeExact(cell, row, column, row_span, column_span);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_cell_get_table$MH() {
        return RuntimeHelper.requireNonNull(constants$2088.const$2,"atk_table_cell_get_table");
    }
    /**
     * {@snippet :
     * struct _AtkObject* atk_table_cell_get_table(struct _AtkTableCell* cell);
     * }
     */
    public static MemorySegment atk_table_cell_get_table(MemorySegment cell) {
        var mh$ = atk_table_cell_get_table$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum AtkValueType.ATK_VALUE_VERY_WEAK = 0;
     * }
     */
    public static int ATK_VALUE_VERY_WEAK() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum AtkValueType.ATK_VALUE_WEAK = 1;
     * }
     */
    public static int ATK_VALUE_WEAK() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum AtkValueType.ATK_VALUE_ACCEPTABLE = 2;
     * }
     */
    public static int ATK_VALUE_ACCEPTABLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum AtkValueType.ATK_VALUE_STRONG = 3;
     * }
     */
    public static int ATK_VALUE_STRONG() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum AtkValueType.ATK_VALUE_VERY_STRONG = 4;
     * }
     */
    public static int ATK_VALUE_VERY_STRONG() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum AtkValueType.ATK_VALUE_VERY_LOW = 5;
     * }
     */
    public static int ATK_VALUE_VERY_LOW() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum AtkValueType.ATK_VALUE_LOW = 6;
     * }
     */
    public static int ATK_VALUE_LOW() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum AtkValueType.ATK_VALUE_MEDIUM = 7;
     * }
     */
    public static int ATK_VALUE_MEDIUM() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum AtkValueType.ATK_VALUE_HIGH = 8;
     * }
     */
    public static int ATK_VALUE_HIGH() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum AtkValueType.ATK_VALUE_VERY_HIGH = 9;
     * }
     */
    public static int ATK_VALUE_VERY_HIGH() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum AtkValueType.ATK_VALUE_VERY_BAD = 10;
     * }
     */
    public static int ATK_VALUE_VERY_BAD() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum AtkValueType.ATK_VALUE_BAD = 11;
     * }
     */
    public static int ATK_VALUE_BAD() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum AtkValueType.ATK_VALUE_GOOD = 12;
     * }
     */
    public static int ATK_VALUE_GOOD() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum AtkValueType.ATK_VALUE_VERY_GOOD = 13;
     * }
     */
    public static int ATK_VALUE_VERY_GOOD() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum AtkValueType.ATK_VALUE_BEST = 14;
     * }
     */
    public static int ATK_VALUE_BEST() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum AtkValueType.ATK_VALUE_LAST_DEFINED = 15;
     * }
     */
    public static int ATK_VALUE_LAST_DEFINED() {
        return (int)15L;
    }
    public static MethodHandle atk_value_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2092.const$1,"atk_value_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_value_get_type();
     * }
     */
    public static long atk_value_get_type() {
        var mh$ = atk_value_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_get_current_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2092.const$2,"atk_value_get_current_value");
    }
    /**
     * {@snippet :
     * void atk_value_get_current_value(struct _AtkValue* obj, struct _GValue* value);
     * }
     */
    public static void atk_value_get_current_value(MemorySegment obj, MemorySegment value) {
        var mh$ = atk_value_get_current_value$MH();
        try {
            mh$.invokeExact(obj, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_get_maximum_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2092.const$3,"atk_value_get_maximum_value");
    }
    /**
     * {@snippet :
     * void atk_value_get_maximum_value(struct _AtkValue* obj, struct _GValue* value);
     * }
     */
    public static void atk_value_get_maximum_value(MemorySegment obj, MemorySegment value) {
        var mh$ = atk_value_get_maximum_value$MH();
        try {
            mh$.invokeExact(obj, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_get_minimum_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2092.const$4,"atk_value_get_minimum_value");
    }
    /**
     * {@snippet :
     * void atk_value_get_minimum_value(struct _AtkValue* obj, struct _GValue* value);
     * }
     */
    public static void atk_value_get_minimum_value(MemorySegment obj, MemorySegment value) {
        var mh$ = atk_value_get_minimum_value$MH();
        try {
            mh$.invokeExact(obj, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_set_current_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2092.const$5,"atk_value_set_current_value");
    }
    /**
     * {@snippet :
     * int atk_value_set_current_value(struct _AtkValue* obj, struct _GValue* value);
     * }
     */
    public static int atk_value_set_current_value(MemorySegment obj, MemorySegment value) {
        var mh$ = atk_value_set_current_value$MH();
        try {
            return (int)mh$.invokeExact(obj, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_get_minimum_increment$MH() {
        return RuntimeHelper.requireNonNull(constants$2093.const$0,"atk_value_get_minimum_increment");
    }
    /**
     * {@snippet :
     * void atk_value_get_minimum_increment(struct _AtkValue* obj, struct _GValue* value);
     * }
     */
    public static void atk_value_get_minimum_increment(MemorySegment obj, MemorySegment value) {
        var mh$ = atk_value_get_minimum_increment$MH();
        try {
            mh$.invokeExact(obj, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_get_value_and_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2093.const$1,"atk_value_get_value_and_text");
    }
    /**
     * {@snippet :
     * void atk_value_get_value_and_text(struct _AtkValue* obj, double* value, char** text);
     * }
     */
    public static void atk_value_get_value_and_text(MemorySegment obj, MemorySegment value, MemorySegment text) {
        var mh$ = atk_value_get_value_and_text$MH();
        try {
            mh$.invokeExact(obj, value, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_get_range$MH() {
        return RuntimeHelper.requireNonNull(constants$2093.const$2,"atk_value_get_range");
    }
    /**
     * {@snippet :
     * struct _AtkRange* atk_value_get_range(struct _AtkValue* obj);
     * }
     */
    public static MemorySegment atk_value_get_range(MemorySegment obj) {
        var mh$ = atk_value_get_range$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_get_increment$MH() {
        return RuntimeHelper.requireNonNull(constants$2093.const$3,"atk_value_get_increment");
    }
    /**
     * {@snippet :
     * double atk_value_get_increment(struct _AtkValue* obj);
     * }
     */
    public static double atk_value_get_increment(MemorySegment obj) {
        var mh$ = atk_value_get_increment$MH();
        try {
            return (double)mh$.invokeExact(obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_get_sub_ranges$MH() {
        return RuntimeHelper.requireNonNull(constants$2093.const$4,"atk_value_get_sub_ranges");
    }
    /**
     * {@snippet :
     * struct _GSList* atk_value_get_sub_ranges(struct _AtkValue* obj);
     * }
     */
    public static MemorySegment atk_value_get_sub_ranges(MemorySegment obj) {
        var mh$ = atk_value_get_sub_ranges$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2093.const$5,"atk_value_set_value");
    }
    /**
     * {@snippet :
     * void atk_value_set_value(struct _AtkValue* obj, double new_value);
     * }
     */
    public static void atk_value_set_value(MemorySegment obj, double new_value) {
        var mh$ = atk_value_set_value$MH();
        try {
            mh$.invokeExact(obj, new_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_type_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2094.const$0,"atk_value_type_get_name");
    }
    /**
     * {@snippet :
     * char* atk_value_type_get_name(enum AtkValueType value_type);
     * }
     */
    public static MemorySegment atk_value_type_get_name(int value_type) {
        var mh$ = atk_value_type_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_type_get_localized_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2094.const$1,"atk_value_type_get_localized_name");
    }
    /**
     * {@snippet :
     * char* atk_value_type_get_localized_name(enum AtkValueType value_type);
     * }
     */
    public static MemorySegment atk_value_type_get_localized_name(int value_type) {
        var mh$ = atk_value_type_get_localized_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_window_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2094.const$3,"atk_window_get_type");
    }
    /**
     * {@snippet :
     * unsigned long atk_window_get_type();
     * }
     */
    public static long atk_window_get_type() {
        var mh$ = atk_window_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _AtkAction* AtkAction_autoptr;
     * }
     */
    public static final AddressLayout AtkAction_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkAction_listautoptr;
     * }
     */
    public static final AddressLayout AtkAction_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkAction_slistautoptr;
     * }
     */
    public static final AddressLayout AtkAction_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkAction_queueautoptr;
     * }
     */
    public static final AddressLayout AtkAction_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkComponent* AtkComponent_autoptr;
     * }
     */
    public static final AddressLayout AtkComponent_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkComponent_listautoptr;
     * }
     */
    public static final AddressLayout AtkComponent_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkComponent_slistautoptr;
     * }
     */
    public static final AddressLayout AtkComponent_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkComponent_queueautoptr;
     * }
     */
    public static final AddressLayout AtkComponent_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkDocument* AtkDocument_autoptr;
     * }
     */
    public static final AddressLayout AtkDocument_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkDocument_listautoptr;
     * }
     */
    public static final AddressLayout AtkDocument_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkDocument_slistautoptr;
     * }
     */
    public static final AddressLayout AtkDocument_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkDocument_queueautoptr;
     * }
     */
    public static final AddressLayout AtkDocument_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkEditableText* AtkEditableText_autoptr;
     * }
     */
    public static final AddressLayout AtkEditableText_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkEditableText_listautoptr;
     * }
     */
    public static final AddressLayout AtkEditableText_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkEditableText_slistautoptr;
     * }
     */
    public static final AddressLayout AtkEditableText_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkEditableText_queueautoptr;
     * }
     */
    public static final AddressLayout AtkEditableText_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkGObjectAccessible* AtkGObjectAccessible_autoptr;
     * }
     */
    public static final AddressLayout AtkGObjectAccessible_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkGObjectAccessible_listautoptr;
     * }
     */
    public static final AddressLayout AtkGObjectAccessible_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkGObjectAccessible_slistautoptr;
     * }
     */
    public static final AddressLayout AtkGObjectAccessible_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkGObjectAccessible_queueautoptr;
     * }
     */
    public static final AddressLayout AtkGObjectAccessible_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkHyperlink* AtkHyperlink_autoptr;
     * }
     */
    public static final AddressLayout AtkHyperlink_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkHyperlink_listautoptr;
     * }
     */
    public static final AddressLayout AtkHyperlink_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkHyperlink_slistautoptr;
     * }
     */
    public static final AddressLayout AtkHyperlink_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkHyperlink_queueautoptr;
     * }
     */
    public static final AddressLayout AtkHyperlink_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkHyperlinkImpl* AtkHyperlinkImpl_autoptr;
     * }
     */
    public static final AddressLayout AtkHyperlinkImpl_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkHyperlinkImpl_listautoptr;
     * }
     */
    public static final AddressLayout AtkHyperlinkImpl_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkHyperlinkImpl_slistautoptr;
     * }
     */
    public static final AddressLayout AtkHyperlinkImpl_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkHyperlinkImpl_queueautoptr;
     * }
     */
    public static final AddressLayout AtkHyperlinkImpl_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkHypertext* AtkHypertext_autoptr;
     * }
     */
    public static final AddressLayout AtkHypertext_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkHypertext_listautoptr;
     * }
     */
    public static final AddressLayout AtkHypertext_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkHypertext_slistautoptr;
     * }
     */
    public static final AddressLayout AtkHypertext_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkHypertext_queueautoptr;
     * }
     */
    public static final AddressLayout AtkHypertext_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkImage* AtkImage_autoptr;
     * }
     */
    public static final AddressLayout AtkImage_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkImage_listautoptr;
     * }
     */
    public static final AddressLayout AtkImage_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkImage_slistautoptr;
     * }
     */
    public static final AddressLayout AtkImage_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkImage_queueautoptr;
     * }
     */
    public static final AddressLayout AtkImage_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkImplementor* AtkImplementor_autoptr;
     * }
     */
    public static final AddressLayout AtkImplementor_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkImplementor_listautoptr;
     * }
     */
    public static final AddressLayout AtkImplementor_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkImplementor_slistautoptr;
     * }
     */
    public static final AddressLayout AtkImplementor_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkImplementor_queueautoptr;
     * }
     */
    public static final AddressLayout AtkImplementor_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkMisc* AtkMisc_autoptr;
     * }
     */
    public static final AddressLayout AtkMisc_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkMisc_listautoptr;
     * }
     */
    public static final AddressLayout AtkMisc_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkMisc_slistautoptr;
     * }
     */
    public static final AddressLayout AtkMisc_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkMisc_queueautoptr;
     * }
     */
    public static final AddressLayout AtkMisc_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkNoOpObjectFactory* AtkNoOpObjectFactory_autoptr;
     * }
     */
    public static final AddressLayout AtkNoOpObjectFactory_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkNoOpObjectFactory_listautoptr;
     * }
     */
    public static final AddressLayout AtkNoOpObjectFactory_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkNoOpObjectFactory_slistautoptr;
     * }
     */
    public static final AddressLayout AtkNoOpObjectFactory_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkNoOpObjectFactory_queueautoptr;
     * }
     */
    public static final AddressLayout AtkNoOpObjectFactory_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkNoOpObject* AtkNoOpObject_autoptr;
     * }
     */
    public static final AddressLayout AtkNoOpObject_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkNoOpObject_listautoptr;
     * }
     */
    public static final AddressLayout AtkNoOpObject_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkNoOpObject_slistautoptr;
     * }
     */
    public static final AddressLayout AtkNoOpObject_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkNoOpObject_queueautoptr;
     * }
     */
    public static final AddressLayout AtkNoOpObject_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkObjectFactory* AtkObjectFactory_autoptr;
     * }
     */
    public static final AddressLayout AtkObjectFactory_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkObjectFactory_listautoptr;
     * }
     */
    public static final AddressLayout AtkObjectFactory_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkObjectFactory_slistautoptr;
     * }
     */
    public static final AddressLayout AtkObjectFactory_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkObjectFactory_queueautoptr;
     * }
     */
    public static final AddressLayout AtkObjectFactory_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkObject* AtkObject_autoptr;
     * }
     */
    public static final AddressLayout AtkObject_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkObject_listautoptr;
     * }
     */
    public static final AddressLayout AtkObject_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkObject_slistautoptr;
     * }
     */
    public static final AddressLayout AtkObject_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkObject_queueautoptr;
     * }
     */
    public static final AddressLayout AtkObject_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkPlug* AtkPlug_autoptr;
     * }
     */
    public static final AddressLayout AtkPlug_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkPlug_listautoptr;
     * }
     */
    public static final AddressLayout AtkPlug_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkPlug_slistautoptr;
     * }
     */
    public static final AddressLayout AtkPlug_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkPlug_queueautoptr;
     * }
     */
    public static final AddressLayout AtkPlug_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkRegistry* AtkRegistry_autoptr;
     * }
     */
    public static final AddressLayout AtkRegistry_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkRegistry_listautoptr;
     * }
     */
    public static final AddressLayout AtkRegistry_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkRegistry_slistautoptr;
     * }
     */
    public static final AddressLayout AtkRegistry_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkRegistry_queueautoptr;
     * }
     */
    public static final AddressLayout AtkRegistry_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkRelationSet* AtkRelationSet_autoptr;
     * }
     */
    public static final AddressLayout AtkRelationSet_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkRelationSet_listautoptr;
     * }
     */
    public static final AddressLayout AtkRelationSet_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkRelationSet_slistautoptr;
     * }
     */
    public static final AddressLayout AtkRelationSet_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkRelationSet_queueautoptr;
     * }
     */
    public static final AddressLayout AtkRelationSet_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkRelation* AtkRelation_autoptr;
     * }
     */
    public static final AddressLayout AtkRelation_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkRelation_listautoptr;
     * }
     */
    public static final AddressLayout AtkRelation_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkRelation_slistautoptr;
     * }
     */
    public static final AddressLayout AtkRelation_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkRelation_queueautoptr;
     * }
     */
    public static final AddressLayout AtkRelation_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkSelection* AtkSelection_autoptr;
     * }
     */
    public static final AddressLayout AtkSelection_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkSelection_listautoptr;
     * }
     */
    public static final AddressLayout AtkSelection_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkSelection_slistautoptr;
     * }
     */
    public static final AddressLayout AtkSelection_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkSelection_queueautoptr;
     * }
     */
    public static final AddressLayout AtkSelection_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkSocket* AtkSocket_autoptr;
     * }
     */
    public static final AddressLayout AtkSocket_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkSocket_listautoptr;
     * }
     */
    public static final AddressLayout AtkSocket_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkSocket_slistautoptr;
     * }
     */
    public static final AddressLayout AtkSocket_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkSocket_queueautoptr;
     * }
     */
    public static final AddressLayout AtkSocket_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkStateSet* AtkStateSet_autoptr;
     * }
     */
    public static final AddressLayout AtkStateSet_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkStateSet_listautoptr;
     * }
     */
    public static final AddressLayout AtkStateSet_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkStateSet_slistautoptr;
     * }
     */
    public static final AddressLayout AtkStateSet_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkStateSet_queueautoptr;
     * }
     */
    public static final AddressLayout AtkStateSet_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkStreamableContent* AtkStreamableContent_autoptr;
     * }
     */
    public static final AddressLayout AtkStreamableContent_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkStreamableContent_listautoptr;
     * }
     */
    public static final AddressLayout AtkStreamableContent_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkStreamableContent_slistautoptr;
     * }
     */
    public static final AddressLayout AtkStreamableContent_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkStreamableContent_queueautoptr;
     * }
     */
    public static final AddressLayout AtkStreamableContent_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkTableCell* AtkTableCell_autoptr;
     * }
     */
    public static final AddressLayout AtkTableCell_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkTableCell_listautoptr;
     * }
     */
    public static final AddressLayout AtkTableCell_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkTableCell_slistautoptr;
     * }
     */
    public static final AddressLayout AtkTableCell_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkTableCell_queueautoptr;
     * }
     */
    public static final AddressLayout AtkTableCell_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkTable* AtkTable_autoptr;
     * }
     */
    public static final AddressLayout AtkTable_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkTable_listautoptr;
     * }
     */
    public static final AddressLayout AtkTable_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkTable_slistautoptr;
     * }
     */
    public static final AddressLayout AtkTable_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkTable_queueautoptr;
     * }
     */
    public static final AddressLayout AtkTable_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkText* AtkText_autoptr;
     * }
     */
    public static final AddressLayout AtkText_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkText_listautoptr;
     * }
     */
    public static final AddressLayout AtkText_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkText_slistautoptr;
     * }
     */
    public static final AddressLayout AtkText_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkText_queueautoptr;
     * }
     */
    public static final AddressLayout AtkText_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkUtil* AtkUtil_autoptr;
     * }
     */
    public static final AddressLayout AtkUtil_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkUtil_listautoptr;
     * }
     */
    public static final AddressLayout AtkUtil_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkUtil_slistautoptr;
     * }
     */
    public static final AddressLayout AtkUtil_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkUtil_queueautoptr;
     * }
     */
    public static final AddressLayout AtkUtil_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkValue* AtkValue_autoptr;
     * }
     */
    public static final AddressLayout AtkValue_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkValue_listautoptr;
     * }
     */
    public static final AddressLayout AtkValue_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkValue_slistautoptr;
     * }
     */
    public static final AddressLayout AtkValue_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkValue_queueautoptr;
     * }
     */
    public static final AddressLayout AtkValue_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AtkWindow* AtkWindow_autoptr;
     * }
     */
    public static final AddressLayout AtkWindow_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* AtkWindow_listautoptr;
     * }
     */
    public static final AddressLayout AtkWindow_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkWindow_slistautoptr;
     * }
     */
    public static final AddressLayout AtkWindow_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkWindow_queueautoptr;
     * }
     */
    public static final AddressLayout AtkWindow_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum GtkWidgetHelpType.GTK_WIDGET_HELP_TOOLTIP = 0;
     * }
     */
    public static int GTK_WIDGET_HELP_TOOLTIP() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkWidgetHelpType.GTK_WIDGET_HELP_WHATS_THIS = 1;
     * }
     */
    public static int GTK_WIDGET_HELP_WHATS_THIS() {
        return (int)1L;
    }
    public static MethodHandle gtk_widget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2125.const$1,"gtk_widget_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_widget_get_type();
     * }
     */
    public static long gtk_widget_get_type() {
        var mh$ = gtk_widget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2125.const$2,"gtk_widget_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_widget_new(unsigned long type, char* first_property_name,...);
     * }
     */
    public static MemorySegment gtk_widget_new(long type, MemorySegment first_property_name, Object... x2) {
        var mh$ = gtk_widget_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type, first_property_name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$2125.const$3,"gtk_widget_destroy");
    }
    /**
     * {@snippet :
     * void gtk_widget_destroy(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_destroy(MemorySegment widget) {
        var mh$ = gtk_widget_destroy$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_destroyed$MH() {
        return RuntimeHelper.requireNonNull(constants$2125.const$4,"gtk_widget_destroyed");
    }
    /**
     * {@snippet :
     * void gtk_widget_destroyed(struct _GtkWidget* widget, struct _GtkWidget** widget_pointer);
     * }
     */
    public static void gtk_widget_destroyed(MemorySegment widget, MemorySegment widget_pointer) {
        var mh$ = gtk_widget_destroyed$MH();
        try {
            mh$.invokeExact(widget, widget_pointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_unparent$MH() {
        return RuntimeHelper.requireNonNull(constants$2125.const$5,"gtk_widget_unparent");
    }
    /**
     * {@snippet :
     * void gtk_widget_unparent(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_unparent(MemorySegment widget) {
        var mh$ = gtk_widget_unparent$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_show$MH() {
        return RuntimeHelper.requireNonNull(constants$2126.const$0,"gtk_widget_show");
    }
    /**
     * {@snippet :
     * void gtk_widget_show(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_show(MemorySegment widget) {
        var mh$ = gtk_widget_show$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_hide$MH() {
        return RuntimeHelper.requireNonNull(constants$2126.const$1,"gtk_widget_hide");
    }
    /**
     * {@snippet :
     * void gtk_widget_hide(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_hide(MemorySegment widget) {
        var mh$ = gtk_widget_hide$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_show_now$MH() {
        return RuntimeHelper.requireNonNull(constants$2126.const$2,"gtk_widget_show_now");
    }
    /**
     * {@snippet :
     * void gtk_widget_show_now(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_show_now(MemorySegment widget) {
        var mh$ = gtk_widget_show_now$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_show_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2126.const$3,"gtk_widget_show_all");
    }
    /**
     * {@snippet :
     * void gtk_widget_show_all(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_show_all(MemorySegment widget) {
        var mh$ = gtk_widget_show_all$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_no_show_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2126.const$4,"gtk_widget_set_no_show_all");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_no_show_all(struct _GtkWidget* widget, int no_show_all);
     * }
     */
    public static void gtk_widget_set_no_show_all(MemorySegment widget, int no_show_all) {
        var mh$ = gtk_widget_set_no_show_all$MH();
        try {
            mh$.invokeExact(widget, no_show_all);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_no_show_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2126.const$5,"gtk_widget_get_no_show_all");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_no_show_all(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_no_show_all(MemorySegment widget) {
        var mh$ = gtk_widget_get_no_show_all$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_map$MH() {
        return RuntimeHelper.requireNonNull(constants$2127.const$0,"gtk_widget_map");
    }
    /**
     * {@snippet :
     * void gtk_widget_map(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_map(MemorySegment widget) {
        var mh$ = gtk_widget_map$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_unmap$MH() {
        return RuntimeHelper.requireNonNull(constants$2127.const$1,"gtk_widget_unmap");
    }
    /**
     * {@snippet :
     * void gtk_widget_unmap(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_unmap(MemorySegment widget) {
        var mh$ = gtk_widget_unmap$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_realize$MH() {
        return RuntimeHelper.requireNonNull(constants$2127.const$2,"gtk_widget_realize");
    }
    /**
     * {@snippet :
     * void gtk_widget_realize(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_realize(MemorySegment widget) {
        var mh$ = gtk_widget_realize$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_unrealize$MH() {
        return RuntimeHelper.requireNonNull(constants$2127.const$3,"gtk_widget_unrealize");
    }
    /**
     * {@snippet :
     * void gtk_widget_unrealize(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_unrealize(MemorySegment widget) {
        var mh$ = gtk_widget_unrealize$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_draw$MH() {
        return RuntimeHelper.requireNonNull(constants$2127.const$4,"gtk_widget_draw");
    }
    /**
     * {@snippet :
     * void gtk_widget_draw(struct _GtkWidget* widget, struct _cairo* cr);
     * }
     */
    public static void gtk_widget_draw(MemorySegment widget, MemorySegment cr) {
        var mh$ = gtk_widget_draw$MH();
        try {
            mh$.invokeExact(widget, cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_draw$MH() {
        return RuntimeHelper.requireNonNull(constants$2127.const$5,"gtk_widget_queue_draw");
    }
    /**
     * {@snippet :
     * void gtk_widget_queue_draw(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_queue_draw(MemorySegment widget) {
        var mh$ = gtk_widget_queue_draw$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_draw_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2128.const$0,"gtk_widget_queue_draw_area");
    }
    /**
     * {@snippet :
     * void gtk_widget_queue_draw_area(struct _GtkWidget* widget, int x, int y, int width, int height);
     * }
     */
    public static void gtk_widget_queue_draw_area(MemorySegment widget, int x, int y, int width, int height) {
        var mh$ = gtk_widget_queue_draw_area$MH();
        try {
            mh$.invokeExact(widget, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_draw_region$MH() {
        return RuntimeHelper.requireNonNull(constants$2128.const$1,"gtk_widget_queue_draw_region");
    }
    /**
     * {@snippet :
     * void gtk_widget_queue_draw_region(struct _GtkWidget* widget, struct _cairo_region* region);
     * }
     */
    public static void gtk_widget_queue_draw_region(MemorySegment widget, MemorySegment region) {
        var mh$ = gtk_widget_queue_draw_region$MH();
        try {
            mh$.invokeExact(widget, region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_resize$MH() {
        return RuntimeHelper.requireNonNull(constants$2128.const$2,"gtk_widget_queue_resize");
    }
    /**
     * {@snippet :
     * void gtk_widget_queue_resize(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_queue_resize(MemorySegment widget) {
        var mh$ = gtk_widget_queue_resize$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_resize_no_redraw$MH() {
        return RuntimeHelper.requireNonNull(constants$2128.const$3,"gtk_widget_queue_resize_no_redraw");
    }
    /**
     * {@snippet :
     * void gtk_widget_queue_resize_no_redraw(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_queue_resize_no_redraw(MemorySegment widget) {
        var mh$ = gtk_widget_queue_resize_no_redraw$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$2128.const$4,"gtk_widget_queue_allocate");
    }
    /**
     * {@snippet :
     * void gtk_widget_queue_allocate(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_queue_allocate(MemorySegment widget) {
        var mh$ = gtk_widget_queue_allocate$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_frame_clock$MH() {
        return RuntimeHelper.requireNonNull(constants$2128.const$5,"gtk_widget_get_frame_clock");
    }
    /**
     * {@snippet :
     * struct _GdkFrameClock* gtk_widget_get_frame_clock(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_frame_clock(MemorySegment widget) {
        var mh$ = gtk_widget_get_frame_clock$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_size_request$MH() {
        return RuntimeHelper.requireNonNull(constants$2129.const$0,"gtk_widget_size_request");
    }
    /**
     * {@snippet :
     * void gtk_widget_size_request(struct _GtkWidget* widget, struct _GtkRequisition* requisition);
     * }
     */
    public static void gtk_widget_size_request(MemorySegment widget, MemorySegment requisition) {
        var mh$ = gtk_widget_size_request$MH();
        try {
            mh$.invokeExact(widget, requisition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_size_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$2129.const$1,"gtk_widget_size_allocate");
    }
    /**
     * {@snippet :
     * void gtk_widget_size_allocate(struct _GtkWidget* widget, struct _cairo_rectangle_int* allocation);
     * }
     */
    public static void gtk_widget_size_allocate(MemorySegment widget, MemorySegment allocation) {
        var mh$ = gtk_widget_size_allocate$MH();
        try {
            mh$.invokeExact(widget, allocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_size_allocate_with_baseline$MH() {
        return RuntimeHelper.requireNonNull(constants$2129.const$2,"gtk_widget_size_allocate_with_baseline");
    }
    /**
     * {@snippet :
     * void gtk_widget_size_allocate_with_baseline(struct _GtkWidget* widget, struct _cairo_rectangle_int* allocation, int baseline);
     * }
     */
    public static void gtk_widget_size_allocate_with_baseline(MemorySegment widget, MemorySegment allocation, int baseline) {
        var mh$ = gtk_widget_size_allocate_with_baseline$MH();
        try {
            mh$.invokeExact(widget, allocation, baseline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_request_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2129.const$3,"gtk_widget_get_request_mode");
    }
    /**
     * {@snippet :
     * enum GtkSizeRequestMode gtk_widget_get_request_mode(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_request_mode(MemorySegment widget) {
        var mh$ = gtk_widget_get_request_mode$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_preferred_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2129.const$4,"gtk_widget_get_preferred_width");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_preferred_width(struct _GtkWidget* widget, int* minimum_width, int* natural_width);
     * }
     */
    public static void gtk_widget_get_preferred_width(MemorySegment widget, MemorySegment minimum_width, MemorySegment natural_width) {
        var mh$ = gtk_widget_get_preferred_width$MH();
        try {
            mh$.invokeExact(widget, minimum_width, natural_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_preferred_height_for_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2129.const$5,"gtk_widget_get_preferred_height_for_width");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_preferred_height_for_width(struct _GtkWidget* widget, int width, int* minimum_height, int* natural_height);
     * }
     */
    public static void gtk_widget_get_preferred_height_for_width(MemorySegment widget, int width, MemorySegment minimum_height, MemorySegment natural_height) {
        var mh$ = gtk_widget_get_preferred_height_for_width$MH();
        try {
            mh$.invokeExact(widget, width, minimum_height, natural_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_preferred_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2130.const$0,"gtk_widget_get_preferred_height");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_preferred_height(struct _GtkWidget* widget, int* minimum_height, int* natural_height);
     * }
     */
    public static void gtk_widget_get_preferred_height(MemorySegment widget, MemorySegment minimum_height, MemorySegment natural_height) {
        var mh$ = gtk_widget_get_preferred_height$MH();
        try {
            mh$.invokeExact(widget, minimum_height, natural_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_preferred_width_for_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2130.const$1,"gtk_widget_get_preferred_width_for_height");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_preferred_width_for_height(struct _GtkWidget* widget, int height, int* minimum_width, int* natural_width);
     * }
     */
    public static void gtk_widget_get_preferred_width_for_height(MemorySegment widget, int height, MemorySegment minimum_width, MemorySegment natural_width) {
        var mh$ = gtk_widget_get_preferred_width_for_height$MH();
        try {
            mh$.invokeExact(widget, height, minimum_width, natural_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_preferred_height_and_baseline_for_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2130.const$2,"gtk_widget_get_preferred_height_and_baseline_for_width");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_preferred_height_and_baseline_for_width(struct _GtkWidget* widget, int width, int* minimum_height, int* natural_height, int* minimum_baseline, int* natural_baseline);
     * }
     */
    public static void gtk_widget_get_preferred_height_and_baseline_for_width(MemorySegment widget, int width, MemorySegment minimum_height, MemorySegment natural_height, MemorySegment minimum_baseline, MemorySegment natural_baseline) {
        var mh$ = gtk_widget_get_preferred_height_and_baseline_for_width$MH();
        try {
            mh$.invokeExact(widget, width, minimum_height, natural_height, minimum_baseline, natural_baseline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_preferred_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2130.const$3,"gtk_widget_get_preferred_size");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_preferred_size(struct _GtkWidget* widget, struct _GtkRequisition* minimum_size, struct _GtkRequisition* natural_size);
     * }
     */
    public static void gtk_widget_get_preferred_size(MemorySegment widget, MemorySegment minimum_size, MemorySegment natural_size) {
        var mh$ = gtk_widget_get_preferred_size$MH();
        try {
            mh$.invokeExact(widget, minimum_size, natural_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_child_requisition$MH() {
        return RuntimeHelper.requireNonNull(constants$2130.const$4,"gtk_widget_get_child_requisition");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_child_requisition(struct _GtkWidget* widget, struct _GtkRequisition* requisition);
     * }
     */
    public static void gtk_widget_get_child_requisition(MemorySegment widget, MemorySegment requisition) {
        var mh$ = gtk_widget_get_child_requisition$MH();
        try {
            mh$.invokeExact(widget, requisition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_add_accelerator$MH() {
        return RuntimeHelper.requireNonNull(constants$2130.const$6,"gtk_widget_add_accelerator");
    }
    /**
     * {@snippet :
     * void gtk_widget_add_accelerator(struct _GtkWidget* widget, char* accel_signal, struct _GtkAccelGroup* accel_group, unsigned int accel_key, enum GdkModifierType accel_mods, enum GtkAccelFlags accel_flags);
     * }
     */
    public static void gtk_widget_add_accelerator(MemorySegment widget, MemorySegment accel_signal, MemorySegment accel_group, int accel_key, int accel_mods, int accel_flags) {
        var mh$ = gtk_widget_add_accelerator$MH();
        try {
            mh$.invokeExact(widget, accel_signal, accel_group, accel_key, accel_mods, accel_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_remove_accelerator$MH() {
        return RuntimeHelper.requireNonNull(constants$2131.const$0,"gtk_widget_remove_accelerator");
    }
    /**
     * {@snippet :
     * int gtk_widget_remove_accelerator(struct _GtkWidget* widget, struct _GtkAccelGroup* accel_group, unsigned int accel_key, enum GdkModifierType accel_mods);
     * }
     */
    public static int gtk_widget_remove_accelerator(MemorySegment widget, MemorySegment accel_group, int accel_key, int accel_mods) {
        var mh$ = gtk_widget_remove_accelerator$MH();
        try {
            return (int)mh$.invokeExact(widget, accel_group, accel_key, accel_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_accel_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2131.const$1,"gtk_widget_set_accel_path");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_accel_path(struct _GtkWidget* widget, char* accel_path, struct _GtkAccelGroup* accel_group);
     * }
     */
    public static void gtk_widget_set_accel_path(MemorySegment widget, MemorySegment accel_path, MemorySegment accel_group) {
        var mh$ = gtk_widget_set_accel_path$MH();
        try {
            mh$.invokeExact(widget, accel_path, accel_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_list_accel_closures$MH() {
        return RuntimeHelper.requireNonNull(constants$2131.const$2,"gtk_widget_list_accel_closures");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_widget_list_accel_closures(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_list_accel_closures(MemorySegment widget) {
        var mh$ = gtk_widget_list_accel_closures$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_can_activate_accel$MH() {
        return RuntimeHelper.requireNonNull(constants$2131.const$3,"gtk_widget_can_activate_accel");
    }
    /**
     * {@snippet :
     * int gtk_widget_can_activate_accel(struct _GtkWidget* widget, unsigned int signal_id);
     * }
     */
    public static int gtk_widget_can_activate_accel(MemorySegment widget, int signal_id) {
        var mh$ = gtk_widget_can_activate_accel$MH();
        try {
            return (int)mh$.invokeExact(widget, signal_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_mnemonic_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$2131.const$4,"gtk_widget_mnemonic_activate");
    }
    /**
     * {@snippet :
     * int gtk_widget_mnemonic_activate(struct _GtkWidget* widget, int group_cycling);
     * }
     */
    public static int gtk_widget_mnemonic_activate(MemorySegment widget, int group_cycling) {
        var mh$ = gtk_widget_mnemonic_activate$MH();
        try {
            return (int)mh$.invokeExact(widget, group_cycling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_event$MH() {
        return RuntimeHelper.requireNonNull(constants$2131.const$5,"gtk_widget_event");
    }
    /**
     * {@snippet :
     * int gtk_widget_event(struct _GtkWidget* widget, union _GdkEvent* event);
     * }
     */
    public static int gtk_widget_event(MemorySegment widget, MemorySegment event) {
        var mh$ = gtk_widget_event$MH();
        try {
            return (int)mh$.invokeExact(widget, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_send_expose$MH() {
        return RuntimeHelper.requireNonNull(constants$2132.const$0,"gtk_widget_send_expose");
    }
    /**
     * {@snippet :
     * int gtk_widget_send_expose(struct _GtkWidget* widget, union _GdkEvent* event);
     * }
     */
    public static int gtk_widget_send_expose(MemorySegment widget, MemorySegment event) {
        var mh$ = gtk_widget_send_expose$MH();
        try {
            return (int)mh$.invokeExact(widget, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_send_focus_change$MH() {
        return RuntimeHelper.requireNonNull(constants$2132.const$1,"gtk_widget_send_focus_change");
    }
    /**
     * {@snippet :
     * int gtk_widget_send_focus_change(struct _GtkWidget* widget, union _GdkEvent* event);
     * }
     */
    public static int gtk_widget_send_focus_change(MemorySegment widget, MemorySegment event) {
        var mh$ = gtk_widget_send_focus_change$MH();
        try {
            return (int)mh$.invokeExact(widget, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$2132.const$2,"gtk_widget_activate");
    }
    /**
     * {@snippet :
     * int gtk_widget_activate(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_activate(MemorySegment widget) {
        var mh$ = gtk_widget_activate$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_reparent$MH() {
        return RuntimeHelper.requireNonNull(constants$2132.const$3,"gtk_widget_reparent");
    }
    /**
     * {@snippet :
     * void gtk_widget_reparent(struct _GtkWidget* widget, struct _GtkWidget* new_parent);
     * }
     */
    public static void gtk_widget_reparent(MemorySegment widget, MemorySegment new_parent) {
        var mh$ = gtk_widget_reparent$MH();
        try {
            mh$.invokeExact(widget, new_parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_intersect$MH() {
        return RuntimeHelper.requireNonNull(constants$2132.const$4,"gtk_widget_intersect");
    }
    /**
     * {@snippet :
     * int gtk_widget_intersect(struct _GtkWidget* widget, struct _cairo_rectangle_int* area, struct _cairo_rectangle_int* intersection);
     * }
     */
    public static int gtk_widget_intersect(MemorySegment widget, MemorySegment area, MemorySegment intersection) {
        var mh$ = gtk_widget_intersect$MH();
        try {
            return (int)mh$.invokeExact(widget, area, intersection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_region_intersect$MH() {
        return RuntimeHelper.requireNonNull(constants$2132.const$5,"gtk_widget_region_intersect");
    }
    /**
     * {@snippet :
     * struct _cairo_region* gtk_widget_region_intersect(struct _GtkWidget* widget, struct _cairo_region* region);
     * }
     */
    public static MemorySegment gtk_widget_region_intersect(MemorySegment widget, MemorySegment region) {
        var mh$ = gtk_widget_region_intersect$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_freeze_child_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$2133.const$0,"gtk_widget_freeze_child_notify");
    }
    /**
     * {@snippet :
     * void gtk_widget_freeze_child_notify(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_freeze_child_notify(MemorySegment widget) {
        var mh$ = gtk_widget_freeze_child_notify$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_child_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$2133.const$1,"gtk_widget_child_notify");
    }
    /**
     * {@snippet :
     * void gtk_widget_child_notify(struct _GtkWidget* widget, char* child_property);
     * }
     */
    public static void gtk_widget_child_notify(MemorySegment widget, MemorySegment child_property) {
        var mh$ = gtk_widget_child_notify$MH();
        try {
            mh$.invokeExact(widget, child_property);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_thaw_child_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$2133.const$2,"gtk_widget_thaw_child_notify");
    }
    /**
     * {@snippet :
     * void gtk_widget_thaw_child_notify(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_thaw_child_notify(MemorySegment widget) {
        var mh$ = gtk_widget_thaw_child_notify$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_can_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2133.const$3,"gtk_widget_set_can_focus");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_can_focus(struct _GtkWidget* widget, int can_focus);
     * }
     */
    public static void gtk_widget_set_can_focus(MemorySegment widget, int can_focus) {
        var mh$ = gtk_widget_set_can_focus$MH();
        try {
            mh$.invokeExact(widget, can_focus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_can_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2133.const$4,"gtk_widget_get_can_focus");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_can_focus(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_can_focus(MemorySegment widget) {
        var mh$ = gtk_widget_get_can_focus$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_has_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2133.const$5,"gtk_widget_has_focus");
    }
    /**
     * {@snippet :
     * int gtk_widget_has_focus(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_has_focus(MemorySegment widget) {
        var mh$ = gtk_widget_has_focus$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_is_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2134.const$0,"gtk_widget_is_focus");
    }
    /**
     * {@snippet :
     * int gtk_widget_is_focus(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_is_focus(MemorySegment widget) {
        var mh$ = gtk_widget_is_focus$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_has_visible_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2134.const$1,"gtk_widget_has_visible_focus");
    }
    /**
     * {@snippet :
     * int gtk_widget_has_visible_focus(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_has_visible_focus(MemorySegment widget) {
        var mh$ = gtk_widget_has_visible_focus$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_grab_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2134.const$2,"gtk_widget_grab_focus");
    }
    /**
     * {@snippet :
     * void gtk_widget_grab_focus(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_grab_focus(MemorySegment widget) {
        var mh$ = gtk_widget_grab_focus$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2134.const$3,"gtk_widget_set_focus_on_click");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_focus_on_click(struct _GtkWidget* widget, int focus_on_click);
     * }
     */
    public static void gtk_widget_set_focus_on_click(MemorySegment widget, int focus_on_click) {
        var mh$ = gtk_widget_set_focus_on_click$MH();
        try {
            mh$.invokeExact(widget, focus_on_click);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2134.const$4,"gtk_widget_get_focus_on_click");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_focus_on_click(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_focus_on_click(MemorySegment widget) {
        var mh$ = gtk_widget_get_focus_on_click$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_can_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2134.const$5,"gtk_widget_set_can_default");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_can_default(struct _GtkWidget* widget, int can_default);
     * }
     */
    public static void gtk_widget_set_can_default(MemorySegment widget, int can_default) {
        var mh$ = gtk_widget_set_can_default$MH();
        try {
            mh$.invokeExact(widget, can_default);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_can_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2135.const$0,"gtk_widget_get_can_default");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_can_default(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_can_default(MemorySegment widget) {
        var mh$ = gtk_widget_get_can_default$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_has_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2135.const$1,"gtk_widget_has_default");
    }
    /**
     * {@snippet :
     * int gtk_widget_has_default(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_has_default(MemorySegment widget) {
        var mh$ = gtk_widget_has_default$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_grab_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2135.const$2,"gtk_widget_grab_default");
    }
    /**
     * {@snippet :
     * void gtk_widget_grab_default(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_grab_default(MemorySegment widget) {
        var mh$ = gtk_widget_grab_default$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_receives_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2135.const$3,"gtk_widget_set_receives_default");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_receives_default(struct _GtkWidget* widget, int receives_default);
     * }
     */
    public static void gtk_widget_set_receives_default(MemorySegment widget, int receives_default) {
        var mh$ = gtk_widget_set_receives_default$MH();
        try {
            mh$.invokeExact(widget, receives_default);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_receives_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2135.const$4,"gtk_widget_get_receives_default");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_receives_default(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_receives_default(MemorySegment widget) {
        var mh$ = gtk_widget_get_receives_default$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_has_grab$MH() {
        return RuntimeHelper.requireNonNull(constants$2135.const$5,"gtk_widget_has_grab");
    }
    /**
     * {@snippet :
     * int gtk_widget_has_grab(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_has_grab(MemorySegment widget) {
        var mh$ = gtk_widget_has_grab$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_device_is_shadowed$MH() {
        return RuntimeHelper.requireNonNull(constants$2136.const$0,"gtk_widget_device_is_shadowed");
    }
    /**
     * {@snippet :
     * int gtk_widget_device_is_shadowed(struct _GtkWidget* widget, struct _GdkDevice* device);
     * }
     */
    public static int gtk_widget_device_is_shadowed(MemorySegment widget, MemorySegment device) {
        var mh$ = gtk_widget_device_is_shadowed$MH();
        try {
            return (int)mh$.invokeExact(widget, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2136.const$1,"gtk_widget_set_name");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_name(struct _GtkWidget* widget, char* name);
     * }
     */
    public static void gtk_widget_set_name(MemorySegment widget, MemorySegment name) {
        var mh$ = gtk_widget_set_name$MH();
        try {
            mh$.invokeExact(widget, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2136.const$2,"gtk_widget_get_name");
    }
    /**
     * {@snippet :
     * char* gtk_widget_get_name(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_name(MemorySegment widget) {
        var mh$ = gtk_widget_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2136.const$3,"gtk_widget_set_state");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_state(struct _GtkWidget* widget, enum GtkStateType state);
     * }
     */
    public static void gtk_widget_set_state(MemorySegment widget, int state) {
        var mh$ = gtk_widget_set_state$MH();
        try {
            mh$.invokeExact(widget, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2136.const$4,"gtk_widget_get_state");
    }
    /**
     * {@snippet :
     * enum GtkStateType gtk_widget_get_state(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_state(MemorySegment widget) {
        var mh$ = gtk_widget_get_state$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_state_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$2136.const$5,"gtk_widget_set_state_flags");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_state_flags(struct _GtkWidget* widget, enum GtkStateFlags flags, int clear);
     * }
     */
    public static void gtk_widget_set_state_flags(MemorySegment widget, int flags, int clear) {
        var mh$ = gtk_widget_set_state_flags$MH();
        try {
            mh$.invokeExact(widget, flags, clear);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_unset_state_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$2137.const$0,"gtk_widget_unset_state_flags");
    }
    /**
     * {@snippet :
     * void gtk_widget_unset_state_flags(struct _GtkWidget* widget, enum GtkStateFlags flags);
     * }
     */
    public static void gtk_widget_unset_state_flags(MemorySegment widget, int flags) {
        var mh$ = gtk_widget_unset_state_flags$MH();
        try {
            mh$.invokeExact(widget, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_state_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$2137.const$1,"gtk_widget_get_state_flags");
    }
    /**
     * {@snippet :
     * enum GtkStateFlags gtk_widget_get_state_flags(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_state_flags(MemorySegment widget) {
        var mh$ = gtk_widget_get_state_flags$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$2137.const$2,"gtk_widget_set_sensitive");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_sensitive(struct _GtkWidget* widget, int sensitive);
     * }
     */
    public static void gtk_widget_set_sensitive(MemorySegment widget, int sensitive) {
        var mh$ = gtk_widget_set_sensitive$MH();
        try {
            mh$.invokeExact(widget, sensitive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$2137.const$3,"gtk_widget_get_sensitive");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_sensitive(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_sensitive(MemorySegment widget) {
        var mh$ = gtk_widget_get_sensitive$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_is_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$2137.const$4,"gtk_widget_is_sensitive");
    }
    /**
     * {@snippet :
     * int gtk_widget_is_sensitive(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_is_sensitive(MemorySegment widget) {
        var mh$ = gtk_widget_is_sensitive$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2137.const$5,"gtk_widget_set_visible");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_visible(struct _GtkWidget* widget, int visible);
     * }
     */
    public static void gtk_widget_set_visible(MemorySegment widget, int visible) {
        var mh$ = gtk_widget_set_visible$MH();
        try {
            mh$.invokeExact(widget, visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2138.const$0,"gtk_widget_get_visible");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_visible(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_visible(MemorySegment widget) {
        var mh$ = gtk_widget_get_visible$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_is_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2138.const$1,"gtk_widget_is_visible");
    }
    /**
     * {@snippet :
     * int gtk_widget_is_visible(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_is_visible(MemorySegment widget) {
        var mh$ = gtk_widget_is_visible$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_has_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2138.const$2,"gtk_widget_set_has_window");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_has_window(struct _GtkWidget* widget, int has_window);
     * }
     */
    public static void gtk_widget_set_has_window(MemorySegment widget, int has_window) {
        var mh$ = gtk_widget_set_has_window$MH();
        try {
            mh$.invokeExact(widget, has_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_has_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2138.const$3,"gtk_widget_get_has_window");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_has_window(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_has_window(MemorySegment widget) {
        var mh$ = gtk_widget_get_has_window$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_is_toplevel$MH() {
        return RuntimeHelper.requireNonNull(constants$2138.const$4,"gtk_widget_is_toplevel");
    }
    /**
     * {@snippet :
     * int gtk_widget_is_toplevel(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_is_toplevel(MemorySegment widget) {
        var mh$ = gtk_widget_is_toplevel$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_is_drawable$MH() {
        return RuntimeHelper.requireNonNull(constants$2138.const$5,"gtk_widget_is_drawable");
    }
    /**
     * {@snippet :
     * int gtk_widget_is_drawable(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_is_drawable(MemorySegment widget) {
        var mh$ = gtk_widget_is_drawable$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_realized$MH() {
        return RuntimeHelper.requireNonNull(constants$2139.const$0,"gtk_widget_set_realized");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_realized(struct _GtkWidget* widget, int realized);
     * }
     */
    public static void gtk_widget_set_realized(MemorySegment widget, int realized) {
        var mh$ = gtk_widget_set_realized$MH();
        try {
            mh$.invokeExact(widget, realized);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_realized$MH() {
        return RuntimeHelper.requireNonNull(constants$2139.const$1,"gtk_widget_get_realized");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_realized(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_realized(MemorySegment widget) {
        var mh$ = gtk_widget_get_realized$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_mapped$MH() {
        return RuntimeHelper.requireNonNull(constants$2139.const$2,"gtk_widget_set_mapped");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_mapped(struct _GtkWidget* widget, int mapped);
     * }
     */
    public static void gtk_widget_set_mapped(MemorySegment widget, int mapped) {
        var mh$ = gtk_widget_set_mapped$MH();
        try {
            mh$.invokeExact(widget, mapped);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_mapped$MH() {
        return RuntimeHelper.requireNonNull(constants$2139.const$3,"gtk_widget_get_mapped");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_mapped(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_mapped(MemorySegment widget) {
        var mh$ = gtk_widget_get_mapped$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_app_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2139.const$4,"gtk_widget_set_app_paintable");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_app_paintable(struct _GtkWidget* widget, int app_paintable);
     * }
     */
    public static void gtk_widget_set_app_paintable(MemorySegment widget, int app_paintable) {
        var mh$ = gtk_widget_set_app_paintable$MH();
        try {
            mh$.invokeExact(widget, app_paintable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_app_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2139.const$5,"gtk_widget_get_app_paintable");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_app_paintable(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_app_paintable(MemorySegment widget) {
        var mh$ = gtk_widget_get_app_paintable$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_double_buffered$MH() {
        return RuntimeHelper.requireNonNull(constants$2140.const$0,"gtk_widget_set_double_buffered");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_double_buffered(struct _GtkWidget* widget, int double_buffered);
     * }
     */
    public static void gtk_widget_set_double_buffered(MemorySegment widget, int double_buffered) {
        var mh$ = gtk_widget_set_double_buffered$MH();
        try {
            mh$.invokeExact(widget, double_buffered);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_double_buffered$MH() {
        return RuntimeHelper.requireNonNull(constants$2140.const$1,"gtk_widget_get_double_buffered");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_double_buffered(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_double_buffered(MemorySegment widget) {
        var mh$ = gtk_widget_get_double_buffered$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_redraw_on_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$2140.const$2,"gtk_widget_set_redraw_on_allocate");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_redraw_on_allocate(struct _GtkWidget* widget, int redraw_on_allocate);
     * }
     */
    public static void gtk_widget_set_redraw_on_allocate(MemorySegment widget, int redraw_on_allocate) {
        var mh$ = gtk_widget_set_redraw_on_allocate$MH();
        try {
            mh$.invokeExact(widget, redraw_on_allocate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$2140.const$3,"gtk_widget_set_parent");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_parent(struct _GtkWidget* widget, struct _GtkWidget* parent);
     * }
     */
    public static void gtk_widget_set_parent(MemorySegment widget, MemorySegment parent) {
        var mh$ = gtk_widget_set_parent$MH();
        try {
            mh$.invokeExact(widget, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$2140.const$4,"gtk_widget_get_parent");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_widget_get_parent(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_parent(MemorySegment widget) {
        var mh$ = gtk_widget_get_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_parent_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2140.const$5,"gtk_widget_set_parent_window");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_parent_window(struct _GtkWidget* widget, struct _GdkWindow* parent_window);
     * }
     */
    public static void gtk_widget_set_parent_window(MemorySegment widget, MemorySegment parent_window) {
        var mh$ = gtk_widget_set_parent_window$MH();
        try {
            mh$.invokeExact(widget, parent_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_parent_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2141.const$0,"gtk_widget_get_parent_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gtk_widget_get_parent_window(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_parent_window(MemorySegment widget) {
        var mh$ = gtk_widget_get_parent_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_child_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2141.const$1,"gtk_widget_set_child_visible");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_child_visible(struct _GtkWidget* widget, int is_visible);
     * }
     */
    public static void gtk_widget_set_child_visible(MemorySegment widget, int is_visible) {
        var mh$ = gtk_widget_set_child_visible$MH();
        try {
            mh$.invokeExact(widget, is_visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_child_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2141.const$2,"gtk_widget_get_child_visible");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_child_visible(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_child_visible(MemorySegment widget) {
        var mh$ = gtk_widget_get_child_visible$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2141.const$3,"gtk_widget_set_window");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_window(struct _GtkWidget* widget, struct _GdkWindow* window);
     * }
     */
    public static void gtk_widget_set_window(MemorySegment widget, MemorySegment window) {
        var mh$ = gtk_widget_set_window$MH();
        try {
            mh$.invokeExact(widget, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2141.const$4,"gtk_widget_get_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gtk_widget_get_window(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_window(MemorySegment widget) {
        var mh$ = gtk_widget_get_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_register_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2141.const$5,"gtk_widget_register_window");
    }
    /**
     * {@snippet :
     * void gtk_widget_register_window(struct _GtkWidget* widget, struct _GdkWindow* window);
     * }
     */
    public static void gtk_widget_register_window(MemorySegment widget, MemorySegment window) {
        var mh$ = gtk_widget_register_window$MH();
        try {
            mh$.invokeExact(widget, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_unregister_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2142.const$0,"gtk_widget_unregister_window");
    }
    /**
     * {@snippet :
     * void gtk_widget_unregister_window(struct _GtkWidget* widget, struct _GdkWindow* window);
     * }
     */
    public static void gtk_widget_unregister_window(MemorySegment widget, MemorySegment window) {
        var mh$ = gtk_widget_unregister_window$MH();
        try {
            mh$.invokeExact(widget, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_allocated_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2142.const$1,"gtk_widget_get_allocated_width");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_allocated_width(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_allocated_width(MemorySegment widget) {
        var mh$ = gtk_widget_get_allocated_width$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_allocated_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2142.const$2,"gtk_widget_get_allocated_height");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_allocated_height(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_allocated_height(MemorySegment widget) {
        var mh$ = gtk_widget_get_allocated_height$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_allocated_baseline$MH() {
        return RuntimeHelper.requireNonNull(constants$2142.const$3,"gtk_widget_get_allocated_baseline");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_allocated_baseline(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_allocated_baseline(MemorySegment widget) {
        var mh$ = gtk_widget_get_allocated_baseline$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_allocated_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2142.const$4,"gtk_widget_get_allocated_size");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_allocated_size(struct _GtkWidget* widget, struct _cairo_rectangle_int* allocation, int* baseline);
     * }
     */
    public static void gtk_widget_get_allocated_size(MemorySegment widget, MemorySegment allocation, MemorySegment baseline) {
        var mh$ = gtk_widget_get_allocated_size$MH();
        try {
            mh$.invokeExact(widget, allocation, baseline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_allocation$MH() {
        return RuntimeHelper.requireNonNull(constants$2142.const$5,"gtk_widget_get_allocation");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_allocation(struct _GtkWidget* widget, struct _cairo_rectangle_int* allocation);
     * }
     */
    public static void gtk_widget_get_allocation(MemorySegment widget, MemorySegment allocation) {
        var mh$ = gtk_widget_get_allocation$MH();
        try {
            mh$.invokeExact(widget, allocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_allocation$MH() {
        return RuntimeHelper.requireNonNull(constants$2143.const$0,"gtk_widget_set_allocation");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_allocation(struct _GtkWidget* widget, struct _cairo_rectangle_int* allocation);
     * }
     */
    public static void gtk_widget_set_allocation(MemorySegment widget, MemorySegment allocation) {
        var mh$ = gtk_widget_set_allocation$MH();
        try {
            mh$.invokeExact(widget, allocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$2143.const$1,"gtk_widget_set_clip");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_clip(struct _GtkWidget* widget, struct _cairo_rectangle_int* clip);
     * }
     */
    public static void gtk_widget_set_clip(MemorySegment widget, MemorySegment clip) {
        var mh$ = gtk_widget_set_clip$MH();
        try {
            mh$.invokeExact(widget, clip);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$2143.const$2,"gtk_widget_get_clip");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_clip(struct _GtkWidget* widget, struct _cairo_rectangle_int* clip);
     * }
     */
    public static void gtk_widget_get_clip(MemorySegment widget, MemorySegment clip) {
        var mh$ = gtk_widget_get_clip$MH();
        try {
            mh$.invokeExact(widget, clip);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_requisition$MH() {
        return RuntimeHelper.requireNonNull(constants$2143.const$3,"gtk_widget_get_requisition");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_requisition(struct _GtkWidget* widget, struct _GtkRequisition* requisition);
     * }
     */
    public static void gtk_widget_get_requisition(MemorySegment widget, MemorySegment requisition) {
        var mh$ = gtk_widget_get_requisition$MH();
        try {
            mh$.invokeExact(widget, requisition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_child_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2143.const$4,"gtk_widget_child_focus");
    }
    /**
     * {@snippet :
     * int gtk_widget_child_focus(struct _GtkWidget* widget, enum GtkDirectionType direction);
     * }
     */
    public static int gtk_widget_child_focus(MemorySegment widget, int direction) {
        var mh$ = gtk_widget_child_focus$MH();
        try {
            return (int)mh$.invokeExact(widget, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_keynav_failed$MH() {
        return RuntimeHelper.requireNonNull(constants$2143.const$5,"gtk_widget_keynav_failed");
    }
    /**
     * {@snippet :
     * int gtk_widget_keynav_failed(struct _GtkWidget* widget, enum GtkDirectionType direction);
     * }
     */
    public static int gtk_widget_keynav_failed(MemorySegment widget, int direction) {
        var mh$ = gtk_widget_keynav_failed$MH();
        try {
            return (int)mh$.invokeExact(widget, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_error_bell$MH() {
        return RuntimeHelper.requireNonNull(constants$2144.const$0,"gtk_widget_error_bell");
    }
    /**
     * {@snippet :
     * void gtk_widget_error_bell(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_error_bell(MemorySegment widget) {
        var mh$ = gtk_widget_error_bell$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_size_request$MH() {
        return RuntimeHelper.requireNonNull(constants$2144.const$1,"gtk_widget_set_size_request");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_size_request(struct _GtkWidget* widget, int width, int height);
     * }
     */
    public static void gtk_widget_set_size_request(MemorySegment widget, int width, int height) {
        var mh$ = gtk_widget_set_size_request$MH();
        try {
            mh$.invokeExact(widget, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_size_request$MH() {
        return RuntimeHelper.requireNonNull(constants$2144.const$2,"gtk_widget_get_size_request");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_size_request(struct _GtkWidget* widget, int* width, int* height);
     * }
     */
    public static void gtk_widget_get_size_request(MemorySegment widget, MemorySegment width, MemorySegment height) {
        var mh$ = gtk_widget_get_size_request$MH();
        try {
            mh$.invokeExact(widget, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_events$MH() {
        return RuntimeHelper.requireNonNull(constants$2144.const$3,"gtk_widget_set_events");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_events(struct _GtkWidget* widget, int events);
     * }
     */
    public static void gtk_widget_set_events(MemorySegment widget, int events) {
        var mh$ = gtk_widget_set_events$MH();
        try {
            mh$.invokeExact(widget, events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_add_events$MH() {
        return RuntimeHelper.requireNonNull(constants$2144.const$4,"gtk_widget_add_events");
    }
    /**
     * {@snippet :
     * void gtk_widget_add_events(struct _GtkWidget* widget, int events);
     * }
     */
    public static void gtk_widget_add_events(MemorySegment widget, int events) {
        var mh$ = gtk_widget_add_events$MH();
        try {
            mh$.invokeExact(widget, events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_device_events$MH() {
        return RuntimeHelper.requireNonNull(constants$2144.const$5,"gtk_widget_set_device_events");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_device_events(struct _GtkWidget* widget, struct _GdkDevice* device, enum GdkEventMask events);
     * }
     */
    public static void gtk_widget_set_device_events(MemorySegment widget, MemorySegment device, int events) {
        var mh$ = gtk_widget_set_device_events$MH();
        try {
            mh$.invokeExact(widget, device, events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_add_device_events$MH() {
        return RuntimeHelper.requireNonNull(constants$2145.const$0,"gtk_widget_add_device_events");
    }
    /**
     * {@snippet :
     * void gtk_widget_add_device_events(struct _GtkWidget* widget, struct _GdkDevice* device, enum GdkEventMask events);
     * }
     */
    public static void gtk_widget_add_device_events(MemorySegment widget, MemorySegment device, int events) {
        var mh$ = gtk_widget_add_device_events$MH();
        try {
            mh$.invokeExact(widget, device, events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_opacity$MH() {
        return RuntimeHelper.requireNonNull(constants$2145.const$1,"gtk_widget_set_opacity");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_opacity(struct _GtkWidget* widget, double opacity);
     * }
     */
    public static void gtk_widget_set_opacity(MemorySegment widget, double opacity) {
        var mh$ = gtk_widget_set_opacity$MH();
        try {
            mh$.invokeExact(widget, opacity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_opacity$MH() {
        return RuntimeHelper.requireNonNull(constants$2145.const$2,"gtk_widget_get_opacity");
    }
    /**
     * {@snippet :
     * double gtk_widget_get_opacity(struct _GtkWidget* widget);
     * }
     */
    public static double gtk_widget_get_opacity(MemorySegment widget) {
        var mh$ = gtk_widget_get_opacity$MH();
        try {
            return (double)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_device_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$2145.const$3,"gtk_widget_set_device_enabled");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_device_enabled(struct _GtkWidget* widget, struct _GdkDevice* device, int enabled);
     * }
     */
    public static void gtk_widget_set_device_enabled(MemorySegment widget, MemorySegment device, int enabled) {
        var mh$ = gtk_widget_set_device_enabled$MH();
        try {
            mh$.invokeExact(widget, device, enabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_device_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$2145.const$4,"gtk_widget_get_device_enabled");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_device_enabled(struct _GtkWidget* widget, struct _GdkDevice* device);
     * }
     */
    public static int gtk_widget_get_device_enabled(MemorySegment widget, MemorySegment device) {
        var mh$ = gtk_widget_get_device_enabled$MH();
        try {
            return (int)mh$.invokeExact(widget, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_toplevel$MH() {
        return RuntimeHelper.requireNonNull(constants$2145.const$5,"gtk_widget_get_toplevel");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_widget_get_toplevel(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_toplevel(MemorySegment widget) {
        var mh$ = gtk_widget_get_toplevel$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_ancestor$MH() {
        return RuntimeHelper.requireNonNull(constants$2146.const$0,"gtk_widget_get_ancestor");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_widget_get_ancestor(struct _GtkWidget* widget, unsigned long widget_type);
     * }
     */
    public static MemorySegment gtk_widget_get_ancestor(MemorySegment widget, long widget_type) {
        var mh$ = gtk_widget_get_ancestor$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, widget_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_visual$MH() {
        return RuntimeHelper.requireNonNull(constants$2146.const$1,"gtk_widget_get_visual");
    }
    /**
     * {@snippet :
     * struct _GdkVisual* gtk_widget_get_visual(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_visual(MemorySegment widget) {
        var mh$ = gtk_widget_get_visual$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_visual$MH() {
        return RuntimeHelper.requireNonNull(constants$2146.const$2,"gtk_widget_set_visual");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_visual(struct _GtkWidget* widget, struct _GdkVisual* visual);
     * }
     */
    public static void gtk_widget_set_visual(MemorySegment widget, MemorySegment visual) {
        var mh$ = gtk_widget_set_visual$MH();
        try {
            mh$.invokeExact(widget, visual);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$2146.const$3,"gtk_widget_get_screen");
    }
    /**
     * {@snippet :
     * struct _GdkScreen* gtk_widget_get_screen(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_screen(MemorySegment widget) {
        var mh$ = gtk_widget_get_screen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_has_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$2146.const$4,"gtk_widget_has_screen");
    }
    /**
     * {@snippet :
     * int gtk_widget_has_screen(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_has_screen(MemorySegment widget) {
        var mh$ = gtk_widget_has_screen$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_scale_factor$MH() {
        return RuntimeHelper.requireNonNull(constants$2146.const$5,"gtk_widget_get_scale_factor");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_scale_factor(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_scale_factor(MemorySegment widget) {
        var mh$ = gtk_widget_get_scale_factor$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$2147.const$0,"gtk_widget_get_display");
    }
    /**
     * {@snippet :
     * struct _GdkDisplay* gtk_widget_get_display(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_display(MemorySegment widget) {
        var mh$ = gtk_widget_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_root_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2147.const$1,"gtk_widget_get_root_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gtk_widget_get_root_window(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_root_window(MemorySegment widget) {
        var mh$ = gtk_widget_get_root_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_settings$MH() {
        return RuntimeHelper.requireNonNull(constants$2147.const$2,"gtk_widget_get_settings");
    }
    /**
     * {@snippet :
     * struct _GtkSettings* gtk_widget_get_settings(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_settings(MemorySegment widget) {
        var mh$ = gtk_widget_get_settings$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$2147.const$3,"gtk_widget_get_clipboard");
    }
    /**
     * {@snippet :
     * struct _GtkClipboard* gtk_widget_get_clipboard(struct _GtkWidget* widget, struct _GdkAtom* selection);
     * }
     */
    public static MemorySegment gtk_widget_get_clipboard(MemorySegment widget, MemorySegment selection) {
        var mh$ = gtk_widget_get_clipboard$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_hexpand$MH() {
        return RuntimeHelper.requireNonNull(constants$2147.const$4,"gtk_widget_get_hexpand");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_hexpand(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_hexpand(MemorySegment widget) {
        var mh$ = gtk_widget_get_hexpand$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_hexpand$MH() {
        return RuntimeHelper.requireNonNull(constants$2147.const$5,"gtk_widget_set_hexpand");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_hexpand(struct _GtkWidget* widget, int expand);
     * }
     */
    public static void gtk_widget_set_hexpand(MemorySegment widget, int expand) {
        var mh$ = gtk_widget_set_hexpand$MH();
        try {
            mh$.invokeExact(widget, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_hexpand_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2148.const$0,"gtk_widget_get_hexpand_set");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_hexpand_set(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_hexpand_set(MemorySegment widget) {
        var mh$ = gtk_widget_get_hexpand_set$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_hexpand_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2148.const$1,"gtk_widget_set_hexpand_set");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_hexpand_set(struct _GtkWidget* widget, int set);
     * }
     */
    public static void gtk_widget_set_hexpand_set(MemorySegment widget, int set) {
        var mh$ = gtk_widget_set_hexpand_set$MH();
        try {
            mh$.invokeExact(widget, set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_vexpand$MH() {
        return RuntimeHelper.requireNonNull(constants$2148.const$2,"gtk_widget_get_vexpand");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_vexpand(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_vexpand(MemorySegment widget) {
        var mh$ = gtk_widget_get_vexpand$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_vexpand$MH() {
        return RuntimeHelper.requireNonNull(constants$2148.const$3,"gtk_widget_set_vexpand");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_vexpand(struct _GtkWidget* widget, int expand);
     * }
     */
    public static void gtk_widget_set_vexpand(MemorySegment widget, int expand) {
        var mh$ = gtk_widget_set_vexpand$MH();
        try {
            mh$.invokeExact(widget, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_vexpand_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2148.const$4,"gtk_widget_get_vexpand_set");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_vexpand_set(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_vexpand_set(MemorySegment widget) {
        var mh$ = gtk_widget_get_vexpand_set$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_vexpand_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2148.const$5,"gtk_widget_set_vexpand_set");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_vexpand_set(struct _GtkWidget* widget, int set);
     * }
     */
    public static void gtk_widget_set_vexpand_set(MemorySegment widget, int set) {
        var mh$ = gtk_widget_set_vexpand_set$MH();
        try {
            mh$.invokeExact(widget, set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_compute_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$2149.const$0,"gtk_widget_queue_compute_expand");
    }
    /**
     * {@snippet :
     * void gtk_widget_queue_compute_expand(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_queue_compute_expand(MemorySegment widget) {
        var mh$ = gtk_widget_queue_compute_expand$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_compute_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$2149.const$1,"gtk_widget_compute_expand");
    }
    /**
     * {@snippet :
     * int gtk_widget_compute_expand(struct _GtkWidget* widget, enum GtkOrientation orientation);
     * }
     */
    public static int gtk_widget_compute_expand(MemorySegment widget, int orientation) {
        var mh$ = gtk_widget_compute_expand$MH();
        try {
            return (int)mh$.invokeExact(widget, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_support_multidevice$MH() {
        return RuntimeHelper.requireNonNull(constants$2149.const$2,"gtk_widget_get_support_multidevice");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_support_multidevice(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_support_multidevice(MemorySegment widget) {
        var mh$ = gtk_widget_get_support_multidevice$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_support_multidevice$MH() {
        return RuntimeHelper.requireNonNull(constants$2149.const$3,"gtk_widget_set_support_multidevice");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_support_multidevice(struct _GtkWidget* widget, int support_multidevice);
     * }
     */
    public static void gtk_widget_set_support_multidevice(MemorySegment widget, int support_multidevice) {
        var mh$ = gtk_widget_set_support_multidevice$MH();
        try {
            mh$.invokeExact(widget, support_multidevice);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_accessible_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2149.const$4,"gtk_widget_class_set_accessible_type");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_accessible_type(struct _GtkWidgetClass* widget_class, unsigned long type);
     * }
     */
    public static void gtk_widget_class_set_accessible_type(MemorySegment widget_class, long type) {
        var mh$ = gtk_widget_class_set_accessible_type$MH();
        try {
            mh$.invokeExact(widget_class, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_accessible_role$MH() {
        return RuntimeHelper.requireNonNull(constants$2149.const$5,"gtk_widget_class_set_accessible_role");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_accessible_role(struct _GtkWidgetClass* widget_class, enum AtkRole role);
     * }
     */
    public static void gtk_widget_class_set_accessible_role(MemorySegment widget_class, int role) {
        var mh$ = gtk_widget_class_set_accessible_role$MH();
        try {
            mh$.invokeExact(widget_class, role);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_accessible$MH() {
        return RuntimeHelper.requireNonNull(constants$2150.const$0,"gtk_widget_get_accessible");
    }
    /**
     * {@snippet :
     * struct _AtkObject* gtk_widget_get_accessible(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_accessible(MemorySegment widget) {
        var mh$ = gtk_widget_get_accessible$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_halign$MH() {
        return RuntimeHelper.requireNonNull(constants$2150.const$1,"gtk_widget_get_halign");
    }
    /**
     * {@snippet :
     * enum GtkAlign gtk_widget_get_halign(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_halign(MemorySegment widget) {
        var mh$ = gtk_widget_get_halign$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_halign$MH() {
        return RuntimeHelper.requireNonNull(constants$2150.const$2,"gtk_widget_set_halign");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_halign(struct _GtkWidget* widget, enum GtkAlign align);
     * }
     */
    public static void gtk_widget_set_halign(MemorySegment widget, int align) {
        var mh$ = gtk_widget_set_halign$MH();
        try {
            mh$.invokeExact(widget, align);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_valign$MH() {
        return RuntimeHelper.requireNonNull(constants$2150.const$3,"gtk_widget_get_valign");
    }
    /**
     * {@snippet :
     * enum GtkAlign gtk_widget_get_valign(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_valign(MemorySegment widget) {
        var mh$ = gtk_widget_get_valign$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_valign_with_baseline$MH() {
        return RuntimeHelper.requireNonNull(constants$2150.const$4,"gtk_widget_get_valign_with_baseline");
    }
    /**
     * {@snippet :
     * enum GtkAlign gtk_widget_get_valign_with_baseline(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_valign_with_baseline(MemorySegment widget) {
        var mh$ = gtk_widget_get_valign_with_baseline$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_valign$MH() {
        return RuntimeHelper.requireNonNull(constants$2150.const$5,"gtk_widget_set_valign");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_valign(struct _GtkWidget* widget, enum GtkAlign align);
     * }
     */
    public static void gtk_widget_set_valign(MemorySegment widget, int align) {
        var mh$ = gtk_widget_set_valign$MH();
        try {
            mh$.invokeExact(widget, align);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_margin_left$MH() {
        return RuntimeHelper.requireNonNull(constants$2151.const$0,"gtk_widget_get_margin_left");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_margin_left(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_margin_left(MemorySegment widget) {
        var mh$ = gtk_widget_get_margin_left$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_margin_left$MH() {
        return RuntimeHelper.requireNonNull(constants$2151.const$1,"gtk_widget_set_margin_left");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_margin_left(struct _GtkWidget* widget, int margin);
     * }
     */
    public static void gtk_widget_set_margin_left(MemorySegment widget, int margin) {
        var mh$ = gtk_widget_set_margin_left$MH();
        try {
            mh$.invokeExact(widget, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_margin_right$MH() {
        return RuntimeHelper.requireNonNull(constants$2151.const$2,"gtk_widget_get_margin_right");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_margin_right(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_margin_right(MemorySegment widget) {
        var mh$ = gtk_widget_get_margin_right$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_margin_right$MH() {
        return RuntimeHelper.requireNonNull(constants$2151.const$3,"gtk_widget_set_margin_right");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_margin_right(struct _GtkWidget* widget, int margin);
     * }
     */
    public static void gtk_widget_set_margin_right(MemorySegment widget, int margin) {
        var mh$ = gtk_widget_set_margin_right$MH();
        try {
            mh$.invokeExact(widget, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_margin_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2151.const$4,"gtk_widget_get_margin_start");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_margin_start(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_margin_start(MemorySegment widget) {
        var mh$ = gtk_widget_get_margin_start$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_margin_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2151.const$5,"gtk_widget_set_margin_start");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_margin_start(struct _GtkWidget* widget, int margin);
     * }
     */
    public static void gtk_widget_set_margin_start(MemorySegment widget, int margin) {
        var mh$ = gtk_widget_set_margin_start$MH();
        try {
            mh$.invokeExact(widget, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_margin_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2152.const$0,"gtk_widget_get_margin_end");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_margin_end(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_margin_end(MemorySegment widget) {
        var mh$ = gtk_widget_get_margin_end$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_margin_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2152.const$1,"gtk_widget_set_margin_end");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_margin_end(struct _GtkWidget* widget, int margin);
     * }
     */
    public static void gtk_widget_set_margin_end(MemorySegment widget, int margin) {
        var mh$ = gtk_widget_set_margin_end$MH();
        try {
            mh$.invokeExact(widget, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_margin_top$MH() {
        return RuntimeHelper.requireNonNull(constants$2152.const$2,"gtk_widget_get_margin_top");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_margin_top(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_margin_top(MemorySegment widget) {
        var mh$ = gtk_widget_get_margin_top$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_margin_top$MH() {
        return RuntimeHelper.requireNonNull(constants$2152.const$3,"gtk_widget_set_margin_top");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_margin_top(struct _GtkWidget* widget, int margin);
     * }
     */
    public static void gtk_widget_set_margin_top(MemorySegment widget, int margin) {
        var mh$ = gtk_widget_set_margin_top$MH();
        try {
            mh$.invokeExact(widget, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_margin_bottom$MH() {
        return RuntimeHelper.requireNonNull(constants$2152.const$4,"gtk_widget_get_margin_bottom");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_margin_bottom(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_margin_bottom(MemorySegment widget) {
        var mh$ = gtk_widget_get_margin_bottom$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_margin_bottom$MH() {
        return RuntimeHelper.requireNonNull(constants$2152.const$5,"gtk_widget_set_margin_bottom");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_margin_bottom(struct _GtkWidget* widget, int margin);
     * }
     */
    public static void gtk_widget_set_margin_bottom(MemorySegment widget, int margin) {
        var mh$ = gtk_widget_set_margin_bottom$MH();
        try {
            mh$.invokeExact(widget, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_events$MH() {
        return RuntimeHelper.requireNonNull(constants$2153.const$0,"gtk_widget_get_events");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_events(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_events(MemorySegment widget) {
        var mh$ = gtk_widget_get_events$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_device_events$MH() {
        return RuntimeHelper.requireNonNull(constants$2153.const$1,"gtk_widget_get_device_events");
    }
    /**
     * {@snippet :
     * enum GdkEventMask gtk_widget_get_device_events(struct _GtkWidget* widget, struct _GdkDevice* device);
     * }
     */
    public static int gtk_widget_get_device_events(MemorySegment widget, MemorySegment device) {
        var mh$ = gtk_widget_get_device_events$MH();
        try {
            return (int)mh$.invokeExact(widget, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$2153.const$2,"gtk_widget_get_pointer");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_pointer(struct _GtkWidget* widget, int* x, int* y);
     * }
     */
    public static void gtk_widget_get_pointer(MemorySegment widget, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_widget_get_pointer$MH();
        try {
            mh$.invokeExact(widget, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_is_ancestor$MH() {
        return RuntimeHelper.requireNonNull(constants$2153.const$3,"gtk_widget_is_ancestor");
    }
    /**
     * {@snippet :
     * int gtk_widget_is_ancestor(struct _GtkWidget* widget, struct _GtkWidget* ancestor);
     * }
     */
    public static int gtk_widget_is_ancestor(MemorySegment widget, MemorySegment ancestor) {
        var mh$ = gtk_widget_is_ancestor$MH();
        try {
            return (int)mh$.invokeExact(widget, ancestor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_translate_coordinates$MH() {
        return RuntimeHelper.requireNonNull(constants$2153.const$4,"gtk_widget_translate_coordinates");
    }
    /**
     * {@snippet :
     * int gtk_widget_translate_coordinates(struct _GtkWidget* src_widget, struct _GtkWidget* dest_widget, int src_x, int src_y, int* dest_x, int* dest_y);
     * }
     */
    public static int gtk_widget_translate_coordinates(MemorySegment src_widget, MemorySegment dest_widget, int src_x, int src_y, MemorySegment dest_x, MemorySegment dest_y) {
        var mh$ = gtk_widget_translate_coordinates$MH();
        try {
            return (int)mh$.invokeExact(src_widget, dest_widget, src_x, src_y, dest_x, dest_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_hide_on_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$2153.const$5,"gtk_widget_hide_on_delete");
    }
    /**
     * {@snippet :
     * int gtk_widget_hide_on_delete(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_hide_on_delete(MemorySegment widget) {
        var mh$ = gtk_widget_hide_on_delete$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_override_color$MH() {
        return RuntimeHelper.requireNonNull(constants$2154.const$0,"gtk_widget_override_color");
    }
    /**
     * {@snippet :
     * void gtk_widget_override_color(struct _GtkWidget* widget, enum GtkStateFlags state, struct _GdkRGBA* color);
     * }
     */
    public static void gtk_widget_override_color(MemorySegment widget, int state, MemorySegment color) {
        var mh$ = gtk_widget_override_color$MH();
        try {
            mh$.invokeExact(widget, state, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_override_background_color$MH() {
        return RuntimeHelper.requireNonNull(constants$2154.const$1,"gtk_widget_override_background_color");
    }
    /**
     * {@snippet :
     * void gtk_widget_override_background_color(struct _GtkWidget* widget, enum GtkStateFlags state, struct _GdkRGBA* color);
     * }
     */
    public static void gtk_widget_override_background_color(MemorySegment widget, int state, MemorySegment color) {
        var mh$ = gtk_widget_override_background_color$MH();
        try {
            mh$.invokeExact(widget, state, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_override_font$MH() {
        return RuntimeHelper.requireNonNull(constants$2154.const$2,"gtk_widget_override_font");
    }
    /**
     * {@snippet :
     * void gtk_widget_override_font(struct _GtkWidget* widget, struct _PangoFontDescription* font_desc);
     * }
     */
    public static void gtk_widget_override_font(MemorySegment widget, MemorySegment font_desc) {
        var mh$ = gtk_widget_override_font$MH();
        try {
            mh$.invokeExact(widget, font_desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_override_symbolic_color$MH() {
        return RuntimeHelper.requireNonNull(constants$2154.const$3,"gtk_widget_override_symbolic_color");
    }
    /**
     * {@snippet :
     * void gtk_widget_override_symbolic_color(struct _GtkWidget* widget, char* name, struct _GdkRGBA* color);
     * }
     */
    public static void gtk_widget_override_symbolic_color(MemorySegment widget, MemorySegment name, MemorySegment color) {
        var mh$ = gtk_widget_override_symbolic_color$MH();
        try {
            mh$.invokeExact(widget, name, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_override_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$2154.const$4,"gtk_widget_override_cursor");
    }
    /**
     * {@snippet :
     * void gtk_widget_override_cursor(struct _GtkWidget* widget, struct _GdkRGBA* cursor, struct _GdkRGBA* secondary_cursor);
     * }
     */
    public static void gtk_widget_override_cursor(MemorySegment widget, MemorySegment cursor, MemorySegment secondary_cursor) {
        var mh$ = gtk_widget_override_cursor$MH();
        try {
            mh$.invokeExact(widget, cursor, secondary_cursor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_reset_style$MH() {
        return RuntimeHelper.requireNonNull(constants$2154.const$5,"gtk_widget_reset_style");
    }
    /**
     * {@snippet :
     * void gtk_widget_reset_style(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_reset_style(MemorySegment widget) {
        var mh$ = gtk_widget_reset_style$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_create_pango_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2155.const$0,"gtk_widget_create_pango_context");
    }
    /**
     * {@snippet :
     * struct _PangoContext* gtk_widget_create_pango_context(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_create_pango_context(MemorySegment widget) {
        var mh$ = gtk_widget_create_pango_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_pango_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2155.const$1,"gtk_widget_get_pango_context");
    }
    /**
     * {@snippet :
     * struct _PangoContext* gtk_widget_get_pango_context(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_pango_context(MemorySegment widget) {
        var mh$ = gtk_widget_get_pango_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$2155.const$2,"gtk_widget_set_font_options");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_font_options(struct _GtkWidget* widget, struct _cairo_font_options* options);
     * }
     */
    public static void gtk_widget_set_font_options(MemorySegment widget, MemorySegment options) {
        var mh$ = gtk_widget_set_font_options$MH();
        try {
            mh$.invokeExact(widget, options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$2155.const$3,"gtk_widget_get_font_options");
    }
    /**
     * {@snippet :
     * struct _cairo_font_options* gtk_widget_get_font_options(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_font_options(MemorySegment widget) {
        var mh$ = gtk_widget_get_font_options$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_create_pango_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$2155.const$4,"gtk_widget_create_pango_layout");
    }
    /**
     * {@snippet :
     * struct _PangoLayout* gtk_widget_create_pango_layout(struct _GtkWidget* widget, char* text);
     * }
     */
    public static MemorySegment gtk_widget_create_pango_layout(MemorySegment widget, MemorySegment text) {
        var mh$ = gtk_widget_create_pango_layout$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_render_icon_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2155.const$5,"gtk_widget_render_icon_pixbuf");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_widget_render_icon_pixbuf(struct _GtkWidget* widget, char* stock_id, enum GtkIconSize size);
     * }
     */
    public static MemorySegment gtk_widget_render_icon_pixbuf(MemorySegment widget, MemorySegment stock_id, int size) {
        var mh$ = gtk_widget_render_icon_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, stock_id, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_composite_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2156.const$0,"gtk_widget_set_composite_name");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_composite_name(struct _GtkWidget* widget, char* name);
     * }
     */
    public static void gtk_widget_set_composite_name(MemorySegment widget, MemorySegment name) {
        var mh$ = gtk_widget_set_composite_name$MH();
        try {
            mh$.invokeExact(widget, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_composite_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2156.const$1,"gtk_widget_get_composite_name");
    }
    /**
     * {@snippet :
     * char* gtk_widget_get_composite_name(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_composite_name(MemorySegment widget) {
        var mh$ = gtk_widget_get_composite_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_push_composite_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2156.const$2,"gtk_widget_push_composite_child");
    }
    /**
     * {@snippet :
     * void gtk_widget_push_composite_child();
     * }
     */
    public static void gtk_widget_push_composite_child() {
        var mh$ = gtk_widget_push_composite_child$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_pop_composite_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2156.const$3,"gtk_widget_pop_composite_child");
    }
    /**
     * {@snippet :
     * void gtk_widget_pop_composite_child();
     * }
     */
    public static void gtk_widget_pop_composite_child() {
        var mh$ = gtk_widget_pop_composite_child$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_install_style_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2156.const$4,"gtk_widget_class_install_style_property");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_install_style_property(struct _GtkWidgetClass* klass, struct _GParamSpec* pspec);
     * }
     */
    public static void gtk_widget_class_install_style_property(MemorySegment klass, MemorySegment pspec) {
        var mh$ = gtk_widget_class_install_style_property$MH();
        try {
            mh$.invokeExact(klass, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_install_style_property_parser$MH() {
        return RuntimeHelper.requireNonNull(constants$2157.const$0,"gtk_widget_class_install_style_property_parser");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_install_style_property_parser(struct _GtkWidgetClass* klass, struct _GParamSpec* pspec, int (*parser)(struct _GParamSpec*,struct _GString*,struct _GValue*));
     * }
     */
    public static void gtk_widget_class_install_style_property_parser(MemorySegment klass, MemorySegment pspec, MemorySegment parser) {
        var mh$ = gtk_widget_class_install_style_property_parser$MH();
        try {
            mh$.invokeExact(klass, pspec, parser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_find_style_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2157.const$1,"gtk_widget_class_find_style_property");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* gtk_widget_class_find_style_property(struct _GtkWidgetClass* klass, char* property_name);
     * }
     */
    public static MemorySegment gtk_widget_class_find_style_property(MemorySegment klass, MemorySegment property_name) {
        var mh$ = gtk_widget_class_find_style_property$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(klass, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_list_style_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$2157.const$2,"gtk_widget_class_list_style_properties");
    }
    /**
     * {@snippet :
     * struct _GParamSpec** gtk_widget_class_list_style_properties(struct _GtkWidgetClass* klass, unsigned int* n_properties);
     * }
     */
    public static MemorySegment gtk_widget_class_list_style_properties(MemorySegment klass, MemorySegment n_properties) {
        var mh$ = gtk_widget_class_list_style_properties$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(klass, n_properties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_style_get_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2157.const$3,"gtk_widget_style_get_property");
    }
    /**
     * {@snippet :
     * void gtk_widget_style_get_property(struct _GtkWidget* widget, char* property_name, struct _GValue* value);
     * }
     */
    public static void gtk_widget_style_get_property(MemorySegment widget, MemorySegment property_name, MemorySegment value) {
        var mh$ = gtk_widget_style_get_property$MH();
        try {
            mh$.invokeExact(widget, property_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_style_get_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$2157.const$4,"gtk_widget_style_get_valist");
    }
    /**
     * {@snippet :
     * void gtk_widget_style_get_valist(struct _GtkWidget* widget, char* first_property_name, struct __va_list var_args);
     * }
     */
    public static void gtk_widget_style_get_valist(MemorySegment widget, MemorySegment first_property_name, MemorySegment var_args) {
        var mh$ = gtk_widget_style_get_valist$MH();
        try {
            mh$.invokeExact(widget, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_style_get$MH() {
        return RuntimeHelper.requireNonNull(constants$2157.const$5,"gtk_widget_style_get");
    }
    /**
     * {@snippet :
     * void gtk_widget_style_get(struct _GtkWidget* widget, char* first_property_name,...);
     * }
     */
    public static void gtk_widget_style_get(MemorySegment widget, MemorySegment first_property_name, Object... x2) {
        var mh$ = gtk_widget_style_get$MH();
        try {
            mh$.invokeExact(widget, first_property_name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$2158.const$0,"gtk_widget_set_direction");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_direction(struct _GtkWidget* widget, enum GtkTextDirection dir);
     * }
     */
    public static void gtk_widget_set_direction(MemorySegment widget, int dir) {
        var mh$ = gtk_widget_set_direction$MH();
        try {
            mh$.invokeExact(widget, dir);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$2158.const$1,"gtk_widget_get_direction");
    }
    /**
     * {@snippet :
     * enum GtkTextDirection gtk_widget_get_direction(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_direction(MemorySegment widget) {
        var mh$ = gtk_widget_get_direction$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_default_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$2158.const$2,"gtk_widget_set_default_direction");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_default_direction(enum GtkTextDirection dir);
     * }
     */
    public static void gtk_widget_set_default_direction(int dir) {
        var mh$ = gtk_widget_set_default_direction$MH();
        try {
            mh$.invokeExact(dir);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_default_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$2158.const$3,"gtk_widget_get_default_direction");
    }
    /**
     * {@snippet :
     * enum GtkTextDirection gtk_widget_get_default_direction();
     * }
     */
    public static int gtk_widget_get_default_direction() {
        var mh$ = gtk_widget_get_default_direction$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_is_composited$MH() {
        return RuntimeHelper.requireNonNull(constants$2158.const$4,"gtk_widget_is_composited");
    }
    /**
     * {@snippet :
     * int gtk_widget_is_composited(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_is_composited(MemorySegment widget) {
        var mh$ = gtk_widget_is_composited$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_shape_combine_region$MH() {
        return RuntimeHelper.requireNonNull(constants$2158.const$5,"gtk_widget_shape_combine_region");
    }
    /**
     * {@snippet :
     * void gtk_widget_shape_combine_region(struct _GtkWidget* widget, struct _cairo_region* region);
     * }
     */
    public static void gtk_widget_shape_combine_region(MemorySegment widget, MemorySegment region) {
        var mh$ = gtk_widget_shape_combine_region$MH();
        try {
            mh$.invokeExact(widget, region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_input_shape_combine_region$MH() {
        return RuntimeHelper.requireNonNull(constants$2159.const$0,"gtk_widget_input_shape_combine_region");
    }
    /**
     * {@snippet :
     * void gtk_widget_input_shape_combine_region(struct _GtkWidget* widget, struct _cairo_region* region);
     * }
     */
    public static void gtk_widget_input_shape_combine_region(MemorySegment widget, MemorySegment region) {
        var mh$ = gtk_widget_input_shape_combine_region$MH();
        try {
            mh$.invokeExact(widget, region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_list_mnemonic_labels$MH() {
        return RuntimeHelper.requireNonNull(constants$2159.const$1,"gtk_widget_list_mnemonic_labels");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_widget_list_mnemonic_labels(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_list_mnemonic_labels(MemorySegment widget) {
        var mh$ = gtk_widget_list_mnemonic_labels$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_add_mnemonic_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2159.const$2,"gtk_widget_add_mnemonic_label");
    }
    /**
     * {@snippet :
     * void gtk_widget_add_mnemonic_label(struct _GtkWidget* widget, struct _GtkWidget* label);
     * }
     */
    public static void gtk_widget_add_mnemonic_label(MemorySegment widget, MemorySegment label) {
        var mh$ = gtk_widget_add_mnemonic_label$MH();
        try {
            mh$.invokeExact(widget, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_remove_mnemonic_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2159.const$3,"gtk_widget_remove_mnemonic_label");
    }
    /**
     * {@snippet :
     * void gtk_widget_remove_mnemonic_label(struct _GtkWidget* widget, struct _GtkWidget* label);
     * }
     */
    public static void gtk_widget_remove_mnemonic_label(MemorySegment widget, MemorySegment label) {
        var mh$ = gtk_widget_remove_mnemonic_label$MH();
        try {
            mh$.invokeExact(widget, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_tooltip_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2159.const$4,"gtk_widget_set_tooltip_window");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_tooltip_window(struct _GtkWidget* widget, struct _GtkWindow* custom_window);
     * }
     */
    public static void gtk_widget_set_tooltip_window(MemorySegment widget, MemorySegment custom_window) {
        var mh$ = gtk_widget_set_tooltip_window$MH();
        try {
            mh$.invokeExact(widget, custom_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_tooltip_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2159.const$5,"gtk_widget_get_tooltip_window");
    }
    /**
     * {@snippet :
     * struct _GtkWindow* gtk_widget_get_tooltip_window(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_tooltip_window(MemorySegment widget) {
        var mh$ = gtk_widget_get_tooltip_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_trigger_tooltip_query$MH() {
        return RuntimeHelper.requireNonNull(constants$2160.const$0,"gtk_widget_trigger_tooltip_query");
    }
    /**
     * {@snippet :
     * void gtk_widget_trigger_tooltip_query(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_trigger_tooltip_query(MemorySegment widget) {
        var mh$ = gtk_widget_trigger_tooltip_query$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_tooltip_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2160.const$1,"gtk_widget_set_tooltip_text");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_tooltip_text(struct _GtkWidget* widget, char* text);
     * }
     */
    public static void gtk_widget_set_tooltip_text(MemorySegment widget, MemorySegment text) {
        var mh$ = gtk_widget_set_tooltip_text$MH();
        try {
            mh$.invokeExact(widget, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_tooltip_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2160.const$2,"gtk_widget_get_tooltip_text");
    }
    /**
     * {@snippet :
     * char* gtk_widget_get_tooltip_text(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_tooltip_text(MemorySegment widget) {
        var mh$ = gtk_widget_get_tooltip_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_tooltip_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2160.const$3,"gtk_widget_set_tooltip_markup");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_tooltip_markup(struct _GtkWidget* widget, char* markup);
     * }
     */
    public static void gtk_widget_set_tooltip_markup(MemorySegment widget, MemorySegment markup) {
        var mh$ = gtk_widget_set_tooltip_markup$MH();
        try {
            mh$.invokeExact(widget, markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_tooltip_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2160.const$4,"gtk_widget_get_tooltip_markup");
    }
    /**
     * {@snippet :
     * char* gtk_widget_get_tooltip_markup(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_tooltip_markup(MemorySegment widget) {
        var mh$ = gtk_widget_get_tooltip_markup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_has_tooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$2160.const$5,"gtk_widget_set_has_tooltip");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_has_tooltip(struct _GtkWidget* widget, int has_tooltip);
     * }
     */
    public static void gtk_widget_set_has_tooltip(MemorySegment widget, int has_tooltip) {
        var mh$ = gtk_widget_set_has_tooltip$MH();
        try {
            mh$.invokeExact(widget, has_tooltip);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_has_tooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$2161.const$0,"gtk_widget_get_has_tooltip");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_has_tooltip(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_has_tooltip(MemorySegment widget) {
        var mh$ = gtk_widget_get_has_tooltip$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cairo_should_draw_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2161.const$1,"gtk_cairo_should_draw_window");
    }
    /**
     * {@snippet :
     * int gtk_cairo_should_draw_window(struct _cairo* cr, struct _GdkWindow* window);
     * }
     */
    public static int gtk_cairo_should_draw_window(MemorySegment cr, MemorySegment window) {
        var mh$ = gtk_cairo_should_draw_window$MH();
        try {
            return (int)mh$.invokeExact(cr, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cairo_transform_to_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2161.const$2,"gtk_cairo_transform_to_window");
    }
    /**
     * {@snippet :
     * void gtk_cairo_transform_to_window(struct _cairo* cr, struct _GtkWidget* widget, struct _GdkWindow* window);
     * }
     */
    public static void gtk_cairo_transform_to_window(MemorySegment cr, MemorySegment widget, MemorySegment window) {
        var mh$ = gtk_cairo_transform_to_window$MH();
        try {
            mh$.invokeExact(cr, widget, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_requisition_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2161.const$3,"gtk_requisition_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_requisition_get_type();
     * }
     */
    public static long gtk_requisition_get_type() {
        var mh$ = gtk_requisition_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_requisition_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2161.const$4,"gtk_requisition_new");
    }
    /**
     * {@snippet :
     * struct _GtkRequisition* gtk_requisition_new();
     * }
     */
    public static MemorySegment gtk_requisition_new() {
        var mh$ = gtk_requisition_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_requisition_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$2161.const$5,"gtk_requisition_copy");
    }
    /**
     * {@snippet :
     * struct _GtkRequisition* gtk_requisition_copy(struct _GtkRequisition* requisition);
     * }
     */
    public static MemorySegment gtk_requisition_copy(MemorySegment requisition) {
        var mh$ = gtk_requisition_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(requisition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_requisition_free$MH() {
        return RuntimeHelper.requireNonNull(constants$2162.const$0,"gtk_requisition_free");
    }
    /**
     * {@snippet :
     * void gtk_requisition_free(struct _GtkRequisition* requisition);
     * }
     */
    public static void gtk_requisition_free(MemorySegment requisition) {
        var mh$ = gtk_requisition_free$MH();
        try {
            mh$.invokeExact(requisition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_in_destruction$MH() {
        return RuntimeHelper.requireNonNull(constants$2162.const$1,"gtk_widget_in_destruction");
    }
    /**
     * {@snippet :
     * int gtk_widget_in_destruction(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_widget_in_destruction(MemorySegment widget) {
        var mh$ = gtk_widget_in_destruction$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


