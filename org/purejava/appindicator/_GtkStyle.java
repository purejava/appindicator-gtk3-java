// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _GtkStyle {
 *     struct _GObject parent_instance;
 *     struct _GdkColor fg[5];
 *     struct _GdkColor bg[5];
 *     struct _GdkColor light[5];
 *     struct _GdkColor dark[5];
 *     struct _GdkColor mid[5];
 *     struct _GdkColor text[5];
 *     struct _GdkColor base[5];
 *     struct _GdkColor text_aa[5];
 *     struct _GdkColor black;
 *     struct _GdkColor white;
 *     struct _PangoFontDescription* font_desc;
 *     int xthickness;
 *     int ythickness;
 *     struct _cairo_pattern* background[5];
 *     int attach_count;
 *     struct _GdkVisual* visual;
 *     struct _PangoFontDescription* private_font_desc;
 *     struct _GtkRcStyle* rc_style;
 *     struct _GSList* styles;
 *     struct _GArray* property_cache;
 *     struct _GSList* icon_factories;
 * };
 * }
 */
public class _GtkStyle {

    public static MemoryLayout $LAYOUT() {
        return constants$3343.const$3;
    }
    public static MemorySegment parent_instance$slice(MemorySegment seg) {
        return seg.asSlice(0, 24);
    }
    public static MemorySegment fg$slice(MemorySegment seg) {
        return seg.asSlice(24, 60);
    }
    public static MemorySegment bg$slice(MemorySegment seg) {
        return seg.asSlice(84, 60);
    }
    public static MemorySegment light$slice(MemorySegment seg) {
        return seg.asSlice(144, 60);
    }
    public static MemorySegment dark$slice(MemorySegment seg) {
        return seg.asSlice(204, 60);
    }
    public static MemorySegment mid$slice(MemorySegment seg) {
        return seg.asSlice(264, 60);
    }
    public static MemorySegment text$slice(MemorySegment seg) {
        return seg.asSlice(324, 60);
    }
    public static MemorySegment base$slice(MemorySegment seg) {
        return seg.asSlice(384, 60);
    }
    public static MemorySegment text_aa$slice(MemorySegment seg) {
        return seg.asSlice(444, 60);
    }
    public static MemorySegment black$slice(MemorySegment seg) {
        return seg.asSlice(504, 12);
    }
    public static MemorySegment white$slice(MemorySegment seg) {
        return seg.asSlice(516, 12);
    }
    public static VarHandle font_desc$VH() {
        return constants$3343.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _PangoFontDescription* font_desc;
     * }
     */
    public static MemorySegment font_desc$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3343.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _PangoFontDescription* font_desc;
     * }
     */
    public static void font_desc$set(MemorySegment seg, MemorySegment x) {
        constants$3343.const$4.set(seg, x);
    }
    public static MemorySegment font_desc$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3343.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void font_desc$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3343.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle xthickness$VH() {
        return constants$3343.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int xthickness;
     * }
     */
    public static int xthickness$get(MemorySegment seg) {
        return (int)constants$3343.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int xthickness;
     * }
     */
    public static void xthickness$set(MemorySegment seg, int x) {
        constants$3343.const$5.set(seg, x);
    }
    public static int xthickness$get(MemorySegment seg, long index) {
        return (int)constants$3343.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void xthickness$set(MemorySegment seg, long index, int x) {
        constants$3343.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ythickness$VH() {
        return constants$3344.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int ythickness;
     * }
     */
    public static int ythickness$get(MemorySegment seg) {
        return (int)constants$3344.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int ythickness;
     * }
     */
    public static void ythickness$set(MemorySegment seg, int x) {
        constants$3344.const$0.set(seg, x);
    }
    public static int ythickness$get(MemorySegment seg, long index) {
        return (int)constants$3344.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void ythickness$set(MemorySegment seg, long index, int x) {
        constants$3344.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment background$slice(MemorySegment seg) {
        return seg.asSlice(544, 40);
    }
    public static VarHandle attach_count$VH() {
        return constants$3344.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int attach_count;
     * }
     */
    public static int attach_count$get(MemorySegment seg) {
        return (int)constants$3344.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int attach_count;
     * }
     */
    public static void attach_count$set(MemorySegment seg, int x) {
        constants$3344.const$1.set(seg, x);
    }
    public static int attach_count$get(MemorySegment seg, long index) {
        return (int)constants$3344.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void attach_count$set(MemorySegment seg, long index, int x) {
        constants$3344.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle visual$VH() {
        return constants$3344.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _GdkVisual* visual;
     * }
     */
    public static MemorySegment visual$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3344.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _GdkVisual* visual;
     * }
     */
    public static void visual$set(MemorySegment seg, MemorySegment x) {
        constants$3344.const$2.set(seg, x);
    }
    public static MemorySegment visual$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3344.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void visual$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3344.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle private_font_desc$VH() {
        return constants$3344.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _PangoFontDescription* private_font_desc;
     * }
     */
    public static MemorySegment private_font_desc$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3344.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _PangoFontDescription* private_font_desc;
     * }
     */
    public static void private_font_desc$set(MemorySegment seg, MemorySegment x) {
        constants$3344.const$3.set(seg, x);
    }
    public static MemorySegment private_font_desc$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3344.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void private_font_desc$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3344.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle rc_style$VH() {
        return constants$3344.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _GtkRcStyle* rc_style;
     * }
     */
    public static MemorySegment rc_style$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3344.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _GtkRcStyle* rc_style;
     * }
     */
    public static void rc_style$set(MemorySegment seg, MemorySegment x) {
        constants$3344.const$4.set(seg, x);
    }
    public static MemorySegment rc_style$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3344.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void rc_style$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3344.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle styles$VH() {
        return constants$3344.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _GSList* styles;
     * }
     */
    public static MemorySegment styles$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3344.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _GSList* styles;
     * }
     */
    public static void styles$set(MemorySegment seg, MemorySegment x) {
        constants$3344.const$5.set(seg, x);
    }
    public static MemorySegment styles$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3344.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void styles$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3344.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle property_cache$VH() {
        return constants$3345.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _GArray* property_cache;
     * }
     */
    public static MemorySegment property_cache$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3345.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _GArray* property_cache;
     * }
     */
    public static void property_cache$set(MemorySegment seg, MemorySegment x) {
        constants$3345.const$0.set(seg, x);
    }
    public static MemorySegment property_cache$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3345.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void property_cache$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3345.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle icon_factories$VH() {
        return constants$3345.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _GSList* icon_factories;
     * }
     */
    public static MemorySegment icon_factories$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3345.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _GSList* icon_factories;
     * }
     */
    public static void icon_factories$set(MemorySegment seg, MemorySegment x) {
        constants$3345.const$1.set(seg, x);
    }
    public static MemorySegment icon_factories$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3345.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void icon_factories$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3345.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


