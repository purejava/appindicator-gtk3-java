// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * unsigned int (*hb_unicode_decompose_compatibility_func_t)(struct hb_unicode_funcs_t* ufuncs,unsigned int u,unsigned int* decomposed,void* user_data);
 * }
 */
public interface hb_unicode_decompose_compatibility_func_t {

    int apply(java.lang.foreign.MemorySegment ufuncs, int u, java.lang.foreign.MemorySegment decomposed, java.lang.foreign.MemorySegment user_data);
    static MemorySegment allocate(hb_unicode_decompose_compatibility_func_t fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$890.hb_unicode_decompose_compatibility_func_t_UP$MH, fi, constants$890.hb_unicode_decompose_compatibility_func_t$FUNC, scope);
    }
    static hb_unicode_decompose_compatibility_func_t ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _ufuncs, int _u, java.lang.foreign.MemorySegment _decomposed, java.lang.foreign.MemorySegment _user_data) -> {
            try {
                return (int)constants$890.hb_unicode_decompose_compatibility_func_t_DOWN$MH.invokeExact(symbol, _ufuncs, _u, _decomposed, _user_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


