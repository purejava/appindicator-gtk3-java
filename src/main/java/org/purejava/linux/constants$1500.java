// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1500 {

    static final FunctionDescriptor gtk_window_set_titlebar$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_window_set_titlebar$MH = RuntimeHelper.downcallHandle(
        "gtk_window_set_titlebar",
        constants$1500.gtk_window_set_titlebar$FUNC
    );
    static final FunctionDescriptor gtk_window_get_titlebar$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_window_get_titlebar$MH = RuntimeHelper.downcallHandle(
        "gtk_window_get_titlebar",
        constants$1500.gtk_window_get_titlebar$FUNC
    );
    static final FunctionDescriptor gtk_window_is_maximized$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_window_is_maximized$MH = RuntimeHelper.downcallHandle(
        "gtk_window_is_maximized",
        constants$1500.gtk_window_is_maximized$FUNC
    );
    static final FunctionDescriptor gtk_window_set_interactive_debugging$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle gtk_window_set_interactive_debugging$MH = RuntimeHelper.downcallHandle(
        "gtk_window_set_interactive_debugging",
        constants$1500.gtk_window_set_interactive_debugging$FUNC
    );
    static final FunctionDescriptor glib_autoptr_clear_GtkWindow$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_autoptr_clear_GtkWindow$MH = RuntimeHelper.downcallHandle(
        "glib_autoptr_clear_GtkWindow",
        constants$1500.glib_autoptr_clear_GtkWindow$FUNC
    );
    static final FunctionDescriptor glib_autoptr_cleanup_GtkWindow$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_autoptr_cleanup_GtkWindow$MH = RuntimeHelper.downcallHandle(
        "glib_autoptr_cleanup_GtkWindow",
        constants$1500.glib_autoptr_cleanup_GtkWindow$FUNC
    );
}


