// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface GCompletionStrncmpFunc {

    int apply(java.lang.foreign.MemoryAddress s1, java.lang.foreign.MemoryAddress s2, long n);
    static MemorySegment allocate(GCompletionStrncmpFunc fi, MemorySession session) {
        return RuntimeHelper.upcallStub(GCompletionStrncmpFunc.class, fi, constants$344.GCompletionStrncmpFunc$FUNC, session);
    }
    static GCompletionStrncmpFunc ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _s1, java.lang.foreign.MemoryAddress _s2, long _n) -> {
            try {
                return (int)constants$344.GCompletionStrncmpFunc$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_s1, (java.lang.foreign.Addressable)_s2, _n);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


