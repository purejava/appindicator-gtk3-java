// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct hb_feature_t {
 *     hb_tag_t tag;
 *     uint32_t value;
 *     unsigned int start;
 *     unsigned int end;
 * };
 * }
 */
public class hb_feature_t {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_INT$LAYOUT.withName("tag"),
        Constants$root.C_INT$LAYOUT.withName("value"),
        Constants$root.C_INT$LAYOUT.withName("start"),
        Constants$root.C_INT$LAYOUT.withName("end")
    ).withName("hb_feature_t");
    public static MemoryLayout $LAYOUT() {
        return hb_feature_t.$struct$LAYOUT;
    }
    static final VarHandle tag$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("tag"));
    public static VarHandle tag$VH() {
        return hb_feature_t.tag$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * hb_tag_t tag;
     * }
     */
    public static int tag$get(MemorySegment seg) {
        return (int)hb_feature_t.tag$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * hb_tag_t tag;
     * }
     */
    public static void tag$set(MemorySegment seg, int x) {
        hb_feature_t.tag$VH.set(seg, x);
    }
    public static int tag$get(MemorySegment seg, long index) {
        return (int)hb_feature_t.tag$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void tag$set(MemorySegment seg, long index, int x) {
        hb_feature_t.tag$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle value$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("value"));
    public static VarHandle value$VH() {
        return hb_feature_t.value$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t value;
     * }
     */
    public static int value$get(MemorySegment seg) {
        return (int)hb_feature_t.value$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t value;
     * }
     */
    public static void value$set(MemorySegment seg, int x) {
        hb_feature_t.value$VH.set(seg, x);
    }
    public static int value$get(MemorySegment seg, long index) {
        return (int)hb_feature_t.value$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void value$set(MemorySegment seg, long index, int x) {
        hb_feature_t.value$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle start$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("start"));
    public static VarHandle start$VH() {
        return hb_feature_t.start$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int start;
     * }
     */
    public static int start$get(MemorySegment seg) {
        return (int)hb_feature_t.start$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int start;
     * }
     */
    public static void start$set(MemorySegment seg, int x) {
        hb_feature_t.start$VH.set(seg, x);
    }
    public static int start$get(MemorySegment seg, long index) {
        return (int)hb_feature_t.start$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void start$set(MemorySegment seg, long index, int x) {
        hb_feature_t.start$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle end$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("end"));
    public static VarHandle end$VH() {
        return hb_feature_t.end$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int end;
     * }
     */
    public static int end$get(MemorySegment seg) {
        return (int)hb_feature_t.end$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int end;
     * }
     */
    public static void end$set(MemorySegment seg, int x) {
        hb_feature_t.end$VH.set(seg, x);
    }
    public static int end$get(MemorySegment seg, long index) {
        return (int)hb_feature_t.end$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void end$set(MemorySegment seg, long index, int x) {
        hb_feature_t.end$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


