// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$419 {

    static final FunctionDescriptor glib_autoptr_cleanup_GUri$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_autoptr_cleanup_GUri$MH = RuntimeHelper.downcallHandle(
        "glib_autoptr_cleanup_GUri",
        constants$419.glib_autoptr_cleanup_GUri$FUNC
    );
    static final FunctionDescriptor glib_listautoptr_cleanup_GUri$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_listautoptr_cleanup_GUri$MH = RuntimeHelper.downcallHandle(
        "glib_listautoptr_cleanup_GUri",
        constants$419.glib_listautoptr_cleanup_GUri$FUNC
    );
    static final FunctionDescriptor glib_slistautoptr_cleanup_GUri$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_slistautoptr_cleanup_GUri$MH = RuntimeHelper.downcallHandle(
        "glib_slistautoptr_cleanup_GUri",
        constants$419.glib_slistautoptr_cleanup_GUri$FUNC
    );
    static final FunctionDescriptor glib_queueautoptr_cleanup_GUri$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_queueautoptr_cleanup_GUri$MH = RuntimeHelper.downcallHandle(
        "glib_queueautoptr_cleanup_GUri",
        constants$419.glib_queueautoptr_cleanup_GUri$FUNC
    );
    static final FunctionDescriptor g_type_init$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle g_type_init$MH = RuntimeHelper.downcallHandle(
        "g_type_init",
        constants$419.g_type_init$FUNC
    );
    static final FunctionDescriptor g_type_init_with_debug_flags$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle g_type_init_with_debug_flags$MH = RuntimeHelper.downcallHandle(
        "g_type_init_with_debug_flags",
        constants$419.g_type_init_with_debug_flags$FUNC
    );
}


