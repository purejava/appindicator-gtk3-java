// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface GDataForeachFunc {

    void apply(int key_id, java.lang.foreign.MemoryAddress data, java.lang.foreign.MemoryAddress user_data);
    static MemorySegment allocate(GDataForeachFunc fi, MemorySession session) {
        return RuntimeHelper.upcallStub(GDataForeachFunc.class, fi, constants$107.GDataForeachFunc$FUNC, session);
    }
    static GDataForeachFunc ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (int _key_id, java.lang.foreign.MemoryAddress _data, java.lang.foreign.MemoryAddress _user_data) -> {
            try {
                constants$108.GDataForeachFunc$MH.invokeExact((Addressable)symbol, _key_id, (java.lang.foreign.Addressable)_data, (java.lang.foreign.Addressable)_user_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


