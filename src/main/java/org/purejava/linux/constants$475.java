// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$475 {

    static final FunctionDescriptor g_object_notify$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_object_notify$MH = RuntimeHelper.downcallHandle(
        "g_object_notify",
        constants$475.g_object_notify$FUNC
    );
    static final FunctionDescriptor g_object_notify_by_pspec$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_object_notify_by_pspec$MH = RuntimeHelper.downcallHandle(
        "g_object_notify_by_pspec",
        constants$475.g_object_notify_by_pspec$FUNC
    );
    static final FunctionDescriptor g_object_thaw_notify$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_object_thaw_notify$MH = RuntimeHelper.downcallHandle(
        "g_object_thaw_notify",
        constants$475.g_object_thaw_notify$FUNC
    );
    static final FunctionDescriptor g_object_is_floating$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_object_is_floating$MH = RuntimeHelper.downcallHandle(
        "g_object_is_floating",
        constants$475.g_object_is_floating$FUNC
    );
    static final FunctionDescriptor g_object_ref_sink$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_object_ref_sink$MH = RuntimeHelper.downcallHandle(
        "g_object_ref_sink",
        constants$475.g_object_ref_sink$FUNC
    );
    static final FunctionDescriptor g_object_take_ref$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_object_take_ref$MH = RuntimeHelper.downcallHandle(
        "g_object_take_ref",
        constants$475.g_object_take_ref$FUNC
    );
}


