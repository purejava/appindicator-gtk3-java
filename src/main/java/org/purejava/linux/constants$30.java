// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$30 {

    static final FunctionDescriptor g_atomic_pointer_set$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_atomic_pointer_set$MH = RuntimeHelper.downcallHandle(
        "g_atomic_pointer_set",
        constants$30.g_atomic_pointer_set$FUNC
    );
    static final FunctionDescriptor g_atomic_pointer_compare_and_exchange$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_atomic_pointer_compare_and_exchange$MH = RuntimeHelper.downcallHandle(
        "g_atomic_pointer_compare_and_exchange",
        constants$30.g_atomic_pointer_compare_and_exchange$FUNC
    );
    static final FunctionDescriptor g_atomic_pointer_add$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle g_atomic_pointer_add$MH = RuntimeHelper.downcallHandle(
        "g_atomic_pointer_add",
        constants$30.g_atomic_pointer_add$FUNC
    );
    static final FunctionDescriptor g_atomic_pointer_and$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle g_atomic_pointer_and$MH = RuntimeHelper.downcallHandle(
        "g_atomic_pointer_and",
        constants$30.g_atomic_pointer_and$FUNC
    );
    static final FunctionDescriptor g_atomic_pointer_or$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle g_atomic_pointer_or$MH = RuntimeHelper.downcallHandle(
        "g_atomic_pointer_or",
        constants$30.g_atomic_pointer_or$FUNC
    );
    static final FunctionDescriptor g_atomic_pointer_xor$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle g_atomic_pointer_xor$MH = RuntimeHelper.downcallHandle(
        "g_atomic_pointer_xor",
        constants$30.g_atomic_pointer_xor$FUNC
    );
}


