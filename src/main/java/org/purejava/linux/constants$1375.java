// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1375 {

    static final FunctionDescriptor atk_state_type_get_name$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle atk_state_type_get_name$MH = RuntimeHelper.downcallHandle(
        "atk_state_type_get_name",
        constants$1375.atk_state_type_get_name$FUNC
    );
    static final FunctionDescriptor atk_state_type_for_name$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle atk_state_type_for_name$MH = RuntimeHelper.downcallHandle(
        "atk_state_type_for_name",
        constants$1375.atk_state_type_for_name$FUNC
    );
    static final FunctionDescriptor AtkFunction$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle AtkFunction$MH = RuntimeHelper.downcallHandle(
        constants$1375.AtkFunction$FUNC
    );
    static final FunctionDescriptor AtkPropertyChangeHandler$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle AtkPropertyChangeHandler$MH = RuntimeHelper.downcallHandle(
        constants$1375.AtkPropertyChangeHandler$FUNC
    );
}


