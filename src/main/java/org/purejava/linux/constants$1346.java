// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$1346 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$1346() {}
    static final FunctionDescriptor gtk_accel_label_set_accel$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle gtk_accel_label_set_accel$MH = RuntimeHelper.downcallHandle(
        "gtk_accel_label_set_accel",
        constants$1346.gtk_accel_label_set_accel$FUNC
    );
    static final FunctionDescriptor gtk_accel_label_get_accel$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_accel_label_get_accel$MH = RuntimeHelper.downcallHandle(
        "gtk_accel_label_get_accel",
        constants$1346.gtk_accel_label_get_accel$FUNC
    );
    static final FunctionDescriptor _gtk_accel_label_class_get_accelerator_label$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle _gtk_accel_label_class_get_accelerator_label$MH = RuntimeHelper.downcallHandle(
        "_gtk_accel_label_class_get_accelerator_label",
        constants$1346._gtk_accel_label_class_get_accelerator_label$FUNC
    );
    static final FunctionDescriptor GtkAccelMapForeach$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final FunctionDescriptor GtkAccelMapForeach_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle GtkAccelMapForeach_UP$MH = RuntimeHelper.upcallHandle(GtkAccelMapForeach.class, "apply", constants$1346.GtkAccelMapForeach_UP$FUNC);
    static final FunctionDescriptor GtkAccelMapForeach_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle GtkAccelMapForeach_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$1346.GtkAccelMapForeach_DOWN$FUNC
    );
    static final FunctionDescriptor gtk_accel_map_add_entry$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle gtk_accel_map_add_entry$MH = RuntimeHelper.downcallHandle(
        "gtk_accel_map_add_entry",
        constants$1346.gtk_accel_map_add_entry$FUNC
    );
}


