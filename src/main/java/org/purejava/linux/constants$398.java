// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$398 {

    static final FunctionDescriptor glib_autoptr_cleanup_GQueue$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_autoptr_cleanup_GQueue$MH = RuntimeHelper.downcallHandle(
        "glib_autoptr_cleanup_GQueue",
        constants$398.glib_autoptr_cleanup_GQueue$FUNC
    );
    static final FunctionDescriptor glib_listautoptr_cleanup_GQueue$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_listautoptr_cleanup_GQueue$MH = RuntimeHelper.downcallHandle(
        "glib_listautoptr_cleanup_GQueue",
        constants$398.glib_listautoptr_cleanup_GQueue$FUNC
    );
    static final FunctionDescriptor glib_slistautoptr_cleanup_GQueue$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_slistautoptr_cleanup_GQueue$MH = RuntimeHelper.downcallHandle(
        "glib_slistautoptr_cleanup_GQueue",
        constants$398.glib_slistautoptr_cleanup_GQueue$FUNC
    );
    static final FunctionDescriptor glib_queueautoptr_cleanup_GQueue$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_queueautoptr_cleanup_GQueue$MH = RuntimeHelper.downcallHandle(
        "glib_queueautoptr_cleanup_GQueue",
        constants$398.glib_queueautoptr_cleanup_GQueue$FUNC
    );
    static final FunctionDescriptor glib_auto_cleanup_GQueue$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_auto_cleanup_GQueue$MH = RuntimeHelper.downcallHandle(
        "glib_auto_cleanup_GQueue",
        constants$398.glib_auto_cleanup_GQueue$FUNC
    );
    static final FunctionDescriptor glib_autoptr_clear_GRand$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_autoptr_clear_GRand$MH = RuntimeHelper.downcallHandle(
        "glib_autoptr_clear_GRand",
        constants$398.glib_autoptr_clear_GRand$FUNC
    );
}


