// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _GUriParamsIter {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_INT$LAYOUT.withName("dummy0"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("dummy1"),
        Constants$root.C_POINTER$LAYOUT.withName("dummy2"),
        MemoryLayout.sequenceLayout(256, Constants$root.C_CHAR$LAYOUT).withName("dummy3")
    ).withName("_GUriParamsIter");
    public static MemoryLayout $LAYOUT() {
        return _GUriParamsIter.$struct$LAYOUT;
    }
    static final VarHandle dummy0$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dummy0"));
    public static VarHandle dummy0$VH() {
        return _GUriParamsIter.dummy0$VH;
    }
    public static int dummy0$get(MemorySegment seg) {
        return (int)_GUriParamsIter.dummy0$VH.get(seg);
    }
    public static void dummy0$set( MemorySegment seg, int x) {
        _GUriParamsIter.dummy0$VH.set(seg, x);
    }
    public static int dummy0$get(MemorySegment seg, long index) {
        return (int)_GUriParamsIter.dummy0$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dummy0$set(MemorySegment seg, long index, int x) {
        _GUriParamsIter.dummy0$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dummy1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dummy1"));
    public static VarHandle dummy1$VH() {
        return _GUriParamsIter.dummy1$VH;
    }
    public static MemoryAddress dummy1$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_GUriParamsIter.dummy1$VH.get(seg);
    }
    public static void dummy1$set( MemorySegment seg, MemoryAddress x) {
        _GUriParamsIter.dummy1$VH.set(seg, x);
    }
    public static MemoryAddress dummy1$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_GUriParamsIter.dummy1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dummy1$set(MemorySegment seg, long index, MemoryAddress x) {
        _GUriParamsIter.dummy1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dummy2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dummy2"));
    public static VarHandle dummy2$VH() {
        return _GUriParamsIter.dummy2$VH;
    }
    public static MemoryAddress dummy2$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_GUriParamsIter.dummy2$VH.get(seg);
    }
    public static void dummy2$set( MemorySegment seg, MemoryAddress x) {
        _GUriParamsIter.dummy2$VH.set(seg, x);
    }
    public static MemoryAddress dummy2$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_GUriParamsIter.dummy2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dummy2$set(MemorySegment seg, long index, MemoryAddress x) {
        _GUriParamsIter.dummy2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment dummy3$slice(MemorySegment seg) {
        return seg.asSlice(24, 256);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


