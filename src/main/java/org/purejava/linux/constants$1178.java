// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1178 {

    static final FunctionDescriptor cairo_toy_font_face_get_slant$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle cairo_toy_font_face_get_slant$MH = RuntimeHelper.downcallHandle(
        "cairo_toy_font_face_get_slant",
        constants$1178.cairo_toy_font_face_get_slant$FUNC
    );
    static final FunctionDescriptor cairo_toy_font_face_get_weight$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle cairo_toy_font_face_get_weight$MH = RuntimeHelper.downcallHandle(
        "cairo_toy_font_face_get_weight",
        constants$1178.cairo_toy_font_face_get_weight$FUNC
    );
    static final FunctionDescriptor cairo_user_font_face_create$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle cairo_user_font_face_create$MH = RuntimeHelper.downcallHandle(
        "cairo_user_font_face_create",
        constants$1178.cairo_user_font_face_create$FUNC
    );
    static final FunctionDescriptor cairo_user_scaled_font_init_func_t$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle cairo_user_scaled_font_init_func_t$MH = RuntimeHelper.downcallHandle(
        constants$1178.cairo_user_scaled_font_init_func_t$FUNC
    );
    static final FunctionDescriptor cairo_user_scaled_font_render_glyph_func_t$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
}


