// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class app_indicator_h_17 extends app_indicator_h_16 {

    public static MethodHandle gtk_combo_box_set_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.gtk_combo_box_set_focus_on_click$MH,"gtk_combo_box_set_focus_on_click");
    }
    public static void gtk_combo_box_set_focus_on_click ( Addressable combo,  int focus_on_click) {
        var mh$ = gtk_combo_box_set_focus_on_click$MH();
        try {
            mh$.invokeExact(combo, focus_on_click);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.gtk_combo_box_get_active$MH,"gtk_combo_box_get_active");
    }
    public static int gtk_combo_box_get_active ( Addressable combo_box) {
        var mh$ = gtk_combo_box_get_active$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.gtk_combo_box_set_active$MH,"gtk_combo_box_set_active");
    }
    public static void gtk_combo_box_set_active ( Addressable combo_box,  int index_) {
        var mh$ = gtk_combo_box_set_active$MH();
        try {
            mh$.invokeExact(combo_box, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_active_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.gtk_combo_box_get_active_iter$MH,"gtk_combo_box_get_active_iter");
    }
    public static int gtk_combo_box_get_active_iter ( Addressable combo_box,  Addressable iter) {
        var mh$ = gtk_combo_box_get_active_iter$MH();
        try {
            return (int)mh$.invokeExact(combo_box, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_active_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.gtk_combo_box_set_active_iter$MH,"gtk_combo_box_set_active_iter");
    }
    public static void gtk_combo_box_set_active_iter ( Addressable combo_box,  Addressable iter) {
        var mh$ = gtk_combo_box_set_active_iter$MH();
        try {
            mh$.invokeExact(combo_box, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.gtk_combo_box_set_model$MH,"gtk_combo_box_set_model");
    }
    public static void gtk_combo_box_set_model ( Addressable combo_box,  Addressable model) {
        var mh$ = gtk_combo_box_set_model$MH();
        try {
            mh$.invokeExact(combo_box, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.gtk_combo_box_get_model$MH,"gtk_combo_box_get_model");
    }
    public static MemoryAddress gtk_combo_box_get_model ( Addressable combo_box) {
        var mh$ = gtk_combo_box_get_model$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_row_separator_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.gtk_combo_box_get_row_separator_func$MH,"gtk_combo_box_get_row_separator_func");
    }
    public static MemoryAddress gtk_combo_box_get_row_separator_func ( Addressable combo_box) {
        var mh$ = gtk_combo_box_get_row_separator_func$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_row_separator_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.gtk_combo_box_set_row_separator_func$MH,"gtk_combo_box_set_row_separator_func");
    }
    public static void gtk_combo_box_set_row_separator_func ( Addressable combo_box,  Addressable func,  Addressable data,  Addressable destroy) {
        var mh$ = gtk_combo_box_set_row_separator_func$MH();
        try {
            mh$.invokeExact(combo_box, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_button_sensitivity$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.gtk_combo_box_set_button_sensitivity$MH,"gtk_combo_box_set_button_sensitivity");
    }
    public static void gtk_combo_box_set_button_sensitivity ( Addressable combo_box,  int sensitivity) {
        var mh$ = gtk_combo_box_set_button_sensitivity$MH();
        try {
            mh$.invokeExact(combo_box, sensitivity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_button_sensitivity$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.gtk_combo_box_get_button_sensitivity$MH,"gtk_combo_box_get_button_sensitivity");
    }
    public static int gtk_combo_box_get_button_sensitivity ( Addressable combo_box) {
        var mh$ = gtk_combo_box_get_button_sensitivity$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_has_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.gtk_combo_box_get_has_entry$MH,"gtk_combo_box_get_has_entry");
    }
    public static int gtk_combo_box_get_has_entry ( Addressable combo_box) {
        var mh$ = gtk_combo_box_get_has_entry$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_entry_text_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1677.gtk_combo_box_set_entry_text_column$MH,"gtk_combo_box_set_entry_text_column");
    }
    public static void gtk_combo_box_set_entry_text_column ( Addressable combo_box,  int text_column) {
        var mh$ = gtk_combo_box_set_entry_text_column$MH();
        try {
            mh$.invokeExact(combo_box, text_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_entry_text_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1677.gtk_combo_box_get_entry_text_column$MH,"gtk_combo_box_get_entry_text_column");
    }
    public static int gtk_combo_box_get_entry_text_column ( Addressable combo_box) {
        var mh$ = gtk_combo_box_get_entry_text_column$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_popup_fixed_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1677.gtk_combo_box_set_popup_fixed_width$MH,"gtk_combo_box_set_popup_fixed_width");
    }
    public static void gtk_combo_box_set_popup_fixed_width ( Addressable combo_box,  int fixed) {
        var mh$ = gtk_combo_box_set_popup_fixed_width$MH();
        try {
            mh$.invokeExact(combo_box, fixed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_popup_fixed_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1677.gtk_combo_box_get_popup_fixed_width$MH,"gtk_combo_box_get_popup_fixed_width");
    }
    public static int gtk_combo_box_get_popup_fixed_width ( Addressable combo_box) {
        var mh$ = gtk_combo_box_get_popup_fixed_width$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_popup$MH() {
        return RuntimeHelper.requireNonNull(constants$1677.gtk_combo_box_popup$MH,"gtk_combo_box_popup");
    }
    public static void gtk_combo_box_popup ( Addressable combo_box) {
        var mh$ = gtk_combo_box_popup$MH();
        try {
            mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_popup_for_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1677.gtk_combo_box_popup_for_device$MH,"gtk_combo_box_popup_for_device");
    }
    public static void gtk_combo_box_popup_for_device ( Addressable combo_box,  Addressable device) {
        var mh$ = gtk_combo_box_popup_for_device$MH();
        try {
            mh$.invokeExact(combo_box, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_popdown$MH() {
        return RuntimeHelper.requireNonNull(constants$1678.gtk_combo_box_popdown$MH,"gtk_combo_box_popdown");
    }
    public static void gtk_combo_box_popdown ( Addressable combo_box) {
        var mh$ = gtk_combo_box_popdown$MH();
        try {
            mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_popup_accessible$MH() {
        return RuntimeHelper.requireNonNull(constants$1678.gtk_combo_box_get_popup_accessible$MH,"gtk_combo_box_get_popup_accessible");
    }
    public static MemoryAddress gtk_combo_box_get_popup_accessible ( Addressable combo_box) {
        var mh$ = gtk_combo_box_get_popup_accessible$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_id_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1678.gtk_combo_box_get_id_column$MH,"gtk_combo_box_get_id_column");
    }
    public static int gtk_combo_box_get_id_column ( Addressable combo_box) {
        var mh$ = gtk_combo_box_get_id_column$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_id_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1678.gtk_combo_box_set_id_column$MH,"gtk_combo_box_set_id_column");
    }
    public static void gtk_combo_box_set_id_column ( Addressable combo_box,  int id_column) {
        var mh$ = gtk_combo_box_set_id_column$MH();
        try {
            mh$.invokeExact(combo_box, id_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_active_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1678.gtk_combo_box_get_active_id$MH,"gtk_combo_box_get_active_id");
    }
    public static MemoryAddress gtk_combo_box_get_active_id ( Addressable combo_box) {
        var mh$ = gtk_combo_box_get_active_id$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_active_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1678.gtk_combo_box_set_active_id$MH,"gtk_combo_box_set_active_id");
    }
    public static int gtk_combo_box_set_active_id ( Addressable combo_box,  Addressable active_id) {
        var mh$ = gtk_combo_box_set_active_id$MH();
        try {
            return (int)mh$.invokeExact(combo_box, active_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1679.gtk_app_chooser_button_get_type$MH,"gtk_app_chooser_button_get_type");
    }
    public static long gtk_app_chooser_button_get_type () {
        var mh$ = gtk_app_chooser_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1679.gtk_app_chooser_button_new$MH,"gtk_app_chooser_button_new");
    }
    public static MemoryAddress gtk_app_chooser_button_new ( Addressable content_type) {
        var mh$ = gtk_app_chooser_button_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(content_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_append_separator$MH() {
        return RuntimeHelper.requireNonNull(constants$1679.gtk_app_chooser_button_append_separator$MH,"gtk_app_chooser_button_append_separator");
    }
    public static void gtk_app_chooser_button_append_separator ( Addressable self) {
        var mh$ = gtk_app_chooser_button_append_separator$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_append_custom_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1679.gtk_app_chooser_button_append_custom_item$MH,"gtk_app_chooser_button_append_custom_item");
    }
    public static void gtk_app_chooser_button_append_custom_item ( Addressable self,  Addressable name,  Addressable label,  Addressable icon) {
        var mh$ = gtk_app_chooser_button_append_custom_item$MH();
        try {
            mh$.invokeExact(self, name, label, icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_set_active_custom_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1679.gtk_app_chooser_button_set_active_custom_item$MH,"gtk_app_chooser_button_set_active_custom_item");
    }
    public static void gtk_app_chooser_button_set_active_custom_item ( Addressable self,  Addressable name) {
        var mh$ = gtk_app_chooser_button_set_active_custom_item$MH();
        try {
            mh$.invokeExact(self, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_set_show_dialog_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1679.gtk_app_chooser_button_set_show_dialog_item$MH,"gtk_app_chooser_button_set_show_dialog_item");
    }
    public static void gtk_app_chooser_button_set_show_dialog_item ( Addressable self,  int setting) {
        var mh$ = gtk_app_chooser_button_set_show_dialog_item$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_get_show_dialog_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.gtk_app_chooser_button_get_show_dialog_item$MH,"gtk_app_chooser_button_get_show_dialog_item");
    }
    public static int gtk_app_chooser_button_get_show_dialog_item ( Addressable self) {
        var mh$ = gtk_app_chooser_button_get_show_dialog_item$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_set_heading$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.gtk_app_chooser_button_set_heading$MH,"gtk_app_chooser_button_set_heading");
    }
    public static void gtk_app_chooser_button_set_heading ( Addressable self,  Addressable heading) {
        var mh$ = gtk_app_chooser_button_set_heading$MH();
        try {
            mh$.invokeExact(self, heading);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_get_heading$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.gtk_app_chooser_button_get_heading$MH,"gtk_app_chooser_button_get_heading");
    }
    public static MemoryAddress gtk_app_chooser_button_get_heading ( Addressable self) {
        var mh$ = gtk_app_chooser_button_get_heading$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_set_show_default_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.gtk_app_chooser_button_set_show_default_item$MH,"gtk_app_chooser_button_set_show_default_item");
    }
    public static void gtk_app_chooser_button_set_show_default_item ( Addressable self,  int setting) {
        var mh$ = gtk_app_chooser_button_set_show_default_item$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_get_show_default_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.gtk_app_chooser_button_get_show_default_item$MH,"gtk_app_chooser_button_get_show_default_item");
    }
    public static int gtk_app_chooser_button_get_show_default_item ( Addressable self) {
        var mh$ = gtk_app_chooser_button_get_show_default_item$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcuts_window_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.gtk_shortcuts_window_get_type$MH,"gtk_shortcuts_window_get_type");
    }
    public static long gtk_shortcuts_window_get_type () {
        var mh$ = gtk_shortcuts_window_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkShortcutsWindow_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutsWindow_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutsWindow_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutsWindow_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkShortcutsWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.glib_autoptr_clear_GtkShortcutsWindow$MH,"glib_autoptr_clear_GtkShortcutsWindow");
    }
    public static void glib_autoptr_clear_GtkShortcutsWindow ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkShortcutsWindow$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkShortcutsWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.glib_autoptr_cleanup_GtkShortcutsWindow$MH,"glib_autoptr_cleanup_GtkShortcutsWindow");
    }
    public static void glib_autoptr_cleanup_GtkShortcutsWindow ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkShortcutsWindow$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkShortcutsWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.glib_listautoptr_cleanup_GtkShortcutsWindow$MH,"glib_listautoptr_cleanup_GtkShortcutsWindow");
    }
    public static void glib_listautoptr_cleanup_GtkShortcutsWindow ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkShortcutsWindow$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkShortcutsWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.glib_slistautoptr_cleanup_GtkShortcutsWindow$MH,"glib_slistautoptr_cleanup_GtkShortcutsWindow");
    }
    public static void glib_slistautoptr_cleanup_GtkShortcutsWindow ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkShortcutsWindow$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkShortcutsWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.glib_queueautoptr_cleanup_GtkShortcutsWindow$MH,"glib_queueautoptr_cleanup_GtkShortcutsWindow");
    }
    public static void glib_queueautoptr_cleanup_GtkShortcutsWindow ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkShortcutsWindow$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_window_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.gtk_application_window_get_type$MH,"gtk_application_window_get_type");
    }
    public static long gtk_application_window_get_type () {
        var mh$ = gtk_application_window_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_window_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.gtk_application_window_new$MH,"gtk_application_window_new");
    }
    public static MemoryAddress gtk_application_window_new ( Addressable application) {
        var mh$ = gtk_application_window_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_window_set_show_menubar$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.gtk_application_window_set_show_menubar$MH,"gtk_application_window_set_show_menubar");
    }
    public static void gtk_application_window_set_show_menubar ( Addressable window,  int show_menubar) {
        var mh$ = gtk_application_window_set_show_menubar$MH();
        try {
            mh$.invokeExact(window, show_menubar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_window_get_show_menubar$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.gtk_application_window_get_show_menubar$MH,"gtk_application_window_get_show_menubar");
    }
    public static int gtk_application_window_get_show_menubar ( Addressable window) {
        var mh$ = gtk_application_window_get_show_menubar$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_window_get_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.gtk_application_window_get_id$MH,"gtk_application_window_get_id");
    }
    public static int gtk_application_window_get_id ( Addressable window) {
        var mh$ = gtk_application_window_get_id$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_window_set_help_overlay$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.gtk_application_window_set_help_overlay$MH,"gtk_application_window_set_help_overlay");
    }
    public static void gtk_application_window_set_help_overlay ( Addressable window,  Addressable help_overlay) {
        var mh$ = gtk_application_window_set_help_overlay$MH();
        try {
            mh$.invokeExact(window, help_overlay);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_window_get_help_overlay$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.gtk_application_window_get_help_overlay$MH,"gtk_application_window_get_help_overlay");
    }
    public static MemoryAddress gtk_application_window_get_help_overlay ( Addressable window) {
        var mh$ = gtk_application_window_get_help_overlay$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.gtk_frame_get_type$MH,"gtk_frame_get_type");
    }
    public static long gtk_frame_get_type () {
        var mh$ = gtk_frame_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.gtk_frame_new$MH,"gtk_frame_new");
    }
    public static MemoryAddress gtk_frame_new ( Addressable label) {
        var mh$ = gtk_frame_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.gtk_frame_set_label$MH,"gtk_frame_set_label");
    }
    public static void gtk_frame_set_label ( Addressable frame,  Addressable label) {
        var mh$ = gtk_frame_set_label$MH();
        try {
            mh$.invokeExact(frame, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.gtk_frame_get_label$MH,"gtk_frame_get_label");
    }
    public static MemoryAddress gtk_frame_get_label ( Addressable frame) {
        var mh$ = gtk_frame_get_label$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.gtk_frame_set_label_widget$MH,"gtk_frame_set_label_widget");
    }
    public static void gtk_frame_set_label_widget ( Addressable frame,  Addressable label_widget) {
        var mh$ = gtk_frame_set_label_widget$MH();
        try {
            mh$.invokeExact(frame, label_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.gtk_frame_get_label_widget$MH,"gtk_frame_get_label_widget");
    }
    public static MemoryAddress gtk_frame_get_label_widget ( Addressable frame) {
        var mh$ = gtk_frame_get_label_widget$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_label_align$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.gtk_frame_set_label_align$MH,"gtk_frame_set_label_align");
    }
    public static void gtk_frame_set_label_align ( Addressable frame,  float xalign,  float yalign) {
        var mh$ = gtk_frame_set_label_align$MH();
        try {
            mh$.invokeExact(frame, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_label_align$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.gtk_frame_get_label_align$MH,"gtk_frame_get_label_align");
    }
    public static void gtk_frame_get_label_align ( Addressable frame,  Addressable xalign,  Addressable yalign) {
        var mh$ = gtk_frame_get_label_align$MH();
        try {
            mh$.invokeExact(frame, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_shadow_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.gtk_frame_set_shadow_type$MH,"gtk_frame_set_shadow_type");
    }
    public static void gtk_frame_set_shadow_type ( Addressable frame,  int type) {
        var mh$ = gtk_frame_set_shadow_type$MH();
        try {
            mh$.invokeExact(frame, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_shadow_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.gtk_frame_get_shadow_type$MH,"gtk_frame_get_shadow_type");
    }
    public static int gtk_frame_get_shadow_type ( Addressable frame) {
        var mh$ = gtk_frame_get_shadow_type$MH();
        try {
            return (int)mh$.invokeExact(frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_aspect_frame_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.gtk_aspect_frame_get_type$MH,"gtk_aspect_frame_get_type");
    }
    public static long gtk_aspect_frame_get_type () {
        var mh$ = gtk_aspect_frame_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_aspect_frame_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.gtk_aspect_frame_new$MH,"gtk_aspect_frame_new");
    }
    public static MemoryAddress gtk_aspect_frame_new ( Addressable label,  float xalign,  float yalign,  float ratio,  int obey_child) {
        var mh$ = gtk_aspect_frame_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(label, xalign, yalign, ratio, obey_child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_aspect_frame_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.gtk_aspect_frame_set$MH,"gtk_aspect_frame_set");
    }
    public static void gtk_aspect_frame_set ( Addressable aspect_frame,  float xalign,  float yalign,  float ratio,  int obey_child) {
        var mh$ = gtk_aspect_frame_set$MH();
        try {
            mh$.invokeExact(aspect_frame, xalign, yalign, ratio, obey_child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_ASSISTANT_PAGE_CONTENT() {
        return (int)0L;
    }
    public static int GTK_ASSISTANT_PAGE_INTRO() {
        return (int)1L;
    }
    public static int GTK_ASSISTANT_PAGE_CONFIRM() {
        return (int)2L;
    }
    public static int GTK_ASSISTANT_PAGE_SUMMARY() {
        return (int)3L;
    }
    public static int GTK_ASSISTANT_PAGE_PROGRESS() {
        return (int)4L;
    }
    public static int GTK_ASSISTANT_PAGE_CUSTOM() {
        return (int)5L;
    }
    public static MethodHandle gtk_assistant_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.gtk_assistant_get_type$MH,"gtk_assistant_get_type");
    }
    public static long gtk_assistant_get_type () {
        var mh$ = gtk_assistant_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.gtk_assistant_new$MH,"gtk_assistant_new");
    }
    public static MemoryAddress gtk_assistant_new () {
        var mh$ = gtk_assistant_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_next_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.gtk_assistant_next_page$MH,"gtk_assistant_next_page");
    }
    public static void gtk_assistant_next_page ( Addressable assistant) {
        var mh$ = gtk_assistant_next_page$MH();
        try {
            mh$.invokeExact(assistant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_previous_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.gtk_assistant_previous_page$MH,"gtk_assistant_previous_page");
    }
    public static void gtk_assistant_previous_page ( Addressable assistant) {
        var mh$ = gtk_assistant_previous_page$MH();
        try {
            mh$.invokeExact(assistant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_current_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.gtk_assistant_get_current_page$MH,"gtk_assistant_get_current_page");
    }
    public static int gtk_assistant_get_current_page ( Addressable assistant) {
        var mh$ = gtk_assistant_get_current_page$MH();
        try {
            return (int)mh$.invokeExact(assistant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_current_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.gtk_assistant_set_current_page$MH,"gtk_assistant_set_current_page");
    }
    public static void gtk_assistant_set_current_page ( Addressable assistant,  int page_num) {
        var mh$ = gtk_assistant_set_current_page$MH();
        try {
            mh$.invokeExact(assistant, page_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_n_pages$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.gtk_assistant_get_n_pages$MH,"gtk_assistant_get_n_pages");
    }
    public static int gtk_assistant_get_n_pages ( Addressable assistant) {
        var mh$ = gtk_assistant_get_n_pages$MH();
        try {
            return (int)mh$.invokeExact(assistant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_nth_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.gtk_assistant_get_nth_page$MH,"gtk_assistant_get_nth_page");
    }
    public static MemoryAddress gtk_assistant_get_nth_page ( Addressable assistant,  int page_num) {
        var mh$ = gtk_assistant_get_nth_page$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(assistant, page_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_prepend_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.gtk_assistant_prepend_page$MH,"gtk_assistant_prepend_page");
    }
    public static int gtk_assistant_prepend_page ( Addressable assistant,  Addressable page) {
        var mh$ = gtk_assistant_prepend_page$MH();
        try {
            return (int)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_append_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.gtk_assistant_append_page$MH,"gtk_assistant_append_page");
    }
    public static int gtk_assistant_append_page ( Addressable assistant,  Addressable page) {
        var mh$ = gtk_assistant_append_page$MH();
        try {
            return (int)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_insert_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.gtk_assistant_insert_page$MH,"gtk_assistant_insert_page");
    }
    public static int gtk_assistant_insert_page ( Addressable assistant,  Addressable page,  int position) {
        var mh$ = gtk_assistant_insert_page$MH();
        try {
            return (int)mh$.invokeExact(assistant, page, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_remove_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.gtk_assistant_remove_page$MH,"gtk_assistant_remove_page");
    }
    public static void gtk_assistant_remove_page ( Addressable assistant,  int page_num) {
        var mh$ = gtk_assistant_remove_page$MH();
        try {
            mh$.invokeExact(assistant, page_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_forward_page_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.gtk_assistant_set_forward_page_func$MH,"gtk_assistant_set_forward_page_func");
    }
    public static void gtk_assistant_set_forward_page_func ( Addressable assistant,  Addressable page_func,  Addressable data,  Addressable destroy) {
        var mh$ = gtk_assistant_set_forward_page_func$MH();
        try {
            mh$.invokeExact(assistant, page_func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_page_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.gtk_assistant_set_page_type$MH,"gtk_assistant_set_page_type");
    }
    public static void gtk_assistant_set_page_type ( Addressable assistant,  Addressable page,  int type) {
        var mh$ = gtk_assistant_set_page_type$MH();
        try {
            mh$.invokeExact(assistant, page, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_page_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.gtk_assistant_get_page_type$MH,"gtk_assistant_get_page_type");
    }
    public static int gtk_assistant_get_page_type ( Addressable assistant,  Addressable page) {
        var mh$ = gtk_assistant_get_page_type$MH();
        try {
            return (int)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_page_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1688.gtk_assistant_set_page_title$MH,"gtk_assistant_set_page_title");
    }
    public static void gtk_assistant_set_page_title ( Addressable assistant,  Addressable page,  Addressable title) {
        var mh$ = gtk_assistant_set_page_title$MH();
        try {
            mh$.invokeExact(assistant, page, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_page_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1688.gtk_assistant_get_page_title$MH,"gtk_assistant_get_page_title");
    }
    public static MemoryAddress gtk_assistant_get_page_title ( Addressable assistant,  Addressable page) {
        var mh$ = gtk_assistant_get_page_title$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_page_header_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1688.gtk_assistant_set_page_header_image$MH,"gtk_assistant_set_page_header_image");
    }
    public static void gtk_assistant_set_page_header_image ( Addressable assistant,  Addressable page,  Addressable pixbuf) {
        var mh$ = gtk_assistant_set_page_header_image$MH();
        try {
            mh$.invokeExact(assistant, page, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_page_header_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1688.gtk_assistant_get_page_header_image$MH,"gtk_assistant_get_page_header_image");
    }
    public static MemoryAddress gtk_assistant_get_page_header_image ( Addressable assistant,  Addressable page) {
        var mh$ = gtk_assistant_get_page_header_image$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_page_side_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1688.gtk_assistant_set_page_side_image$MH,"gtk_assistant_set_page_side_image");
    }
    public static void gtk_assistant_set_page_side_image ( Addressable assistant,  Addressable page,  Addressable pixbuf) {
        var mh$ = gtk_assistant_set_page_side_image$MH();
        try {
            mh$.invokeExact(assistant, page, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_page_side_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1688.gtk_assistant_get_page_side_image$MH,"gtk_assistant_get_page_side_image");
    }
    public static MemoryAddress gtk_assistant_get_page_side_image ( Addressable assistant,  Addressable page) {
        var mh$ = gtk_assistant_get_page_side_image$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_page_complete$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.gtk_assistant_set_page_complete$MH,"gtk_assistant_set_page_complete");
    }
    public static void gtk_assistant_set_page_complete ( Addressable assistant,  Addressable page,  int complete) {
        var mh$ = gtk_assistant_set_page_complete$MH();
        try {
            mh$.invokeExact(assistant, page, complete);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_page_complete$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.gtk_assistant_get_page_complete$MH,"gtk_assistant_get_page_complete");
    }
    public static int gtk_assistant_get_page_complete ( Addressable assistant,  Addressable page) {
        var mh$ = gtk_assistant_get_page_complete$MH();
        try {
            return (int)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_add_action_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.gtk_assistant_add_action_widget$MH,"gtk_assistant_add_action_widget");
    }
    public static void gtk_assistant_add_action_widget ( Addressable assistant,  Addressable child) {
        var mh$ = gtk_assistant_add_action_widget$MH();
        try {
            mh$.invokeExact(assistant, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_remove_action_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.gtk_assistant_remove_action_widget$MH,"gtk_assistant_remove_action_widget");
    }
    public static void gtk_assistant_remove_action_widget ( Addressable assistant,  Addressable child) {
        var mh$ = gtk_assistant_remove_action_widget$MH();
        try {
            mh$.invokeExact(assistant, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_update_buttons_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.gtk_assistant_update_buttons_state$MH,"gtk_assistant_update_buttons_state");
    }
    public static void gtk_assistant_update_buttons_state ( Addressable assistant) {
        var mh$ = gtk_assistant_update_buttons_state$MH();
        try {
            mh$.invokeExact(assistant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_commit$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.gtk_assistant_commit$MH,"gtk_assistant_commit");
    }
    public static void gtk_assistant_commit ( Addressable assistant) {
        var mh$ = gtk_assistant_commit$MH();
        try {
            mh$.invokeExact(assistant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_page_has_padding$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.gtk_assistant_set_page_has_padding$MH,"gtk_assistant_set_page_has_padding");
    }
    public static void gtk_assistant_set_page_has_padding ( Addressable assistant,  Addressable page,  int has_padding) {
        var mh$ = gtk_assistant_set_page_has_padding$MH();
        try {
            mh$.invokeExact(assistant, page, has_padding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_page_has_padding$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.gtk_assistant_get_page_has_padding$MH,"gtk_assistant_get_page_has_padding");
    }
    public static int gtk_assistant_get_page_has_padding ( Addressable assistant,  Addressable page) {
        var mh$ = gtk_assistant_get_page_has_padding$MH();
        try {
            return (int)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_BUTTONBOX_SPREAD() {
        return (int)1L;
    }
    public static int GTK_BUTTONBOX_EDGE() {
        return (int)2L;
    }
    public static int GTK_BUTTONBOX_START() {
        return (int)3L;
    }
    public static int GTK_BUTTONBOX_END() {
        return (int)4L;
    }
    public static int GTK_BUTTONBOX_CENTER() {
        return (int)5L;
    }
    public static int GTK_BUTTONBOX_EXPAND() {
        return (int)6L;
    }
    public static MethodHandle gtk_button_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.gtk_button_box_get_type$MH,"gtk_button_box_get_type");
    }
    public static long gtk_button_box_get_type () {
        var mh$ = gtk_button_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.gtk_button_box_new$MH,"gtk_button_box_new");
    }
    public static MemoryAddress gtk_button_box_new ( int orientation) {
        var mh$ = gtk_button_box_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_get_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.gtk_button_box_get_layout$MH,"gtk_button_box_get_layout");
    }
    public static int gtk_button_box_get_layout ( Addressable widget) {
        var mh$ = gtk_button_box_get_layout$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_set_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.gtk_button_box_set_layout$MH,"gtk_button_box_set_layout");
    }
    public static void gtk_button_box_set_layout ( Addressable widget,  int layout_style) {
        var mh$ = gtk_button_box_set_layout$MH();
        try {
            mh$.invokeExact(widget, layout_style);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_get_child_secondary$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.gtk_button_box_get_child_secondary$MH,"gtk_button_box_get_child_secondary");
    }
    public static int gtk_button_box_get_child_secondary ( Addressable widget,  Addressable child) {
        var mh$ = gtk_button_box_get_child_secondary$MH();
        try {
            return (int)mh$.invokeExact(widget, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_set_child_secondary$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.gtk_button_box_set_child_secondary$MH,"gtk_button_box_set_child_secondary");
    }
    public static void gtk_button_box_set_child_secondary ( Addressable widget,  Addressable child,  int is_secondary) {
        var mh$ = gtk_button_box_set_child_secondary$MH();
        try {
            mh$.invokeExact(widget, child, is_secondary);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_get_child_non_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.gtk_button_box_get_child_non_homogeneous$MH,"gtk_button_box_get_child_non_homogeneous");
    }
    public static int gtk_button_box_get_child_non_homogeneous ( Addressable widget,  Addressable child) {
        var mh$ = gtk_button_box_get_child_non_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(widget, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_set_child_non_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.gtk_button_box_set_child_non_homogeneous$MH,"gtk_button_box_set_child_non_homogeneous");
    }
    public static void gtk_button_box_set_child_non_homogeneous ( Addressable widget,  Addressable child,  int non_homogeneous) {
        var mh$ = gtk_button_box_set_child_non_homogeneous$MH();
        try {
            mh$.invokeExact(widget, child, non_homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_set_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.gtk_binding_set_new$MH,"gtk_binding_set_new");
    }
    public static MemoryAddress gtk_binding_set_new ( Addressable set_name) {
        var mh$ = gtk_binding_set_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(set_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_set_by_class$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.gtk_binding_set_by_class$MH,"gtk_binding_set_by_class");
    }
    public static MemoryAddress gtk_binding_set_by_class ( Addressable object_class) {
        var mh$ = gtk_binding_set_by_class$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_set_find$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.gtk_binding_set_find$MH,"gtk_binding_set_find");
    }
    public static MemoryAddress gtk_binding_set_find ( Addressable set_name) {
        var mh$ = gtk_binding_set_find$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(set_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_bindings_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.gtk_bindings_activate$MH,"gtk_bindings_activate");
    }
    public static int gtk_bindings_activate ( Addressable object,  int keyval,  int modifiers) {
        var mh$ = gtk_bindings_activate$MH();
        try {
            return (int)mh$.invokeExact(object, keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_bindings_activate_event$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.gtk_bindings_activate_event$MH,"gtk_bindings_activate_event");
    }
    public static int gtk_bindings_activate_event ( Addressable object,  Addressable event) {
        var mh$ = gtk_bindings_activate_event$MH();
        try {
            return (int)mh$.invokeExact(object, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_set_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.gtk_binding_set_activate$MH,"gtk_binding_set_activate");
    }
    public static int gtk_binding_set_activate ( Addressable binding_set,  int keyval,  int modifiers,  Addressable object) {
        var mh$ = gtk_binding_set_activate$MH();
        try {
            return (int)mh$.invokeExact(binding_set, keyval, modifiers, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_entry_skip$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.gtk_binding_entry_skip$MH,"gtk_binding_entry_skip");
    }
    public static void gtk_binding_entry_skip ( Addressable binding_set,  int keyval,  int modifiers) {
        var mh$ = gtk_binding_entry_skip$MH();
        try {
            mh$.invokeExact(binding_set, keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_entry_add_signal$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.gtk_binding_entry_add_signal$MH,"gtk_binding_entry_add_signal");
    }
    public static void gtk_binding_entry_add_signal ( Addressable binding_set,  int keyval,  int modifiers,  Addressable signal_name,  int n_args, Object... x5) {
        var mh$ = gtk_binding_entry_add_signal$MH();
        try {
            mh$.invokeExact(binding_set, keyval, modifiers, signal_name, n_args, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_entry_add_signall$MH() {
        return RuntimeHelper.requireNonNull(constants$1693.gtk_binding_entry_add_signall$MH,"gtk_binding_entry_add_signall");
    }
    public static void gtk_binding_entry_add_signall ( Addressable binding_set,  int keyval,  int modifiers,  Addressable signal_name,  Addressable binding_args) {
        var mh$ = gtk_binding_entry_add_signall$MH();
        try {
            mh$.invokeExact(binding_set, keyval, modifiers, signal_name, binding_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_entry_add_signal_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1693.gtk_binding_entry_add_signal_from_string$MH,"gtk_binding_entry_add_signal_from_string");
    }
    public static int gtk_binding_entry_add_signal_from_string ( Addressable binding_set,  Addressable signal_desc) {
        var mh$ = gtk_binding_entry_add_signal_from_string$MH();
        try {
            return (int)mh$.invokeExact(binding_set, signal_desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_entry_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1693.gtk_binding_entry_remove$MH,"gtk_binding_entry_remove");
    }
    public static void gtk_binding_entry_remove ( Addressable binding_set,  int keyval,  int modifiers) {
        var mh$ = gtk_binding_entry_remove$MH();
        try {
            mh$.invokeExact(binding_set, keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION() {
        return (int)0L;
    }
    public static int GTK_BUILDER_ERROR_UNHANDLED_TAG() {
        return (int)1L;
    }
    public static int GTK_BUILDER_ERROR_MISSING_ATTRIBUTE() {
        return (int)2L;
    }
    public static int GTK_BUILDER_ERROR_INVALID_ATTRIBUTE() {
        return (int)3L;
    }
    public static int GTK_BUILDER_ERROR_INVALID_TAG() {
        return (int)4L;
    }
    public static int GTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE() {
        return (int)5L;
    }
    public static int GTK_BUILDER_ERROR_INVALID_VALUE() {
        return (int)6L;
    }
    public static int GTK_BUILDER_ERROR_VERSION_MISMATCH() {
        return (int)7L;
    }
    public static int GTK_BUILDER_ERROR_DUPLICATE_ID() {
        return (int)8L;
    }
    public static int GTK_BUILDER_ERROR_OBJECT_TYPE_REFUSED() {
        return (int)9L;
    }
    public static int GTK_BUILDER_ERROR_TEMPLATE_MISMATCH() {
        return (int)10L;
    }
    public static int GTK_BUILDER_ERROR_INVALID_PROPERTY() {
        return (int)11L;
    }
    public static int GTK_BUILDER_ERROR_INVALID_SIGNAL() {
        return (int)12L;
    }
    public static int GTK_BUILDER_ERROR_INVALID_ID() {
        return (int)13L;
    }
    public static MethodHandle gtk_builder_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1693.gtk_builder_error_quark$MH,"gtk_builder_error_quark");
    }
    public static int gtk_builder_error_quark () {
        var mh$ = gtk_builder_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1693.gtk_builder_get_type$MH,"gtk_builder_get_type");
    }
    public static long gtk_builder_get_type () {
        var mh$ = gtk_builder_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1693.gtk_builder_new$MH,"gtk_builder_new");
    }
    public static MemoryAddress gtk_builder_new () {
        var mh$ = gtk_builder_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.gtk_builder_add_from_file$MH,"gtk_builder_add_from_file");
    }
    public static int gtk_builder_add_from_file ( Addressable builder,  Addressable filename,  Addressable error) {
        var mh$ = gtk_builder_add_from_file$MH();
        try {
            return (int)mh$.invokeExact(builder, filename, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.gtk_builder_add_from_resource$MH,"gtk_builder_add_from_resource");
    }
    public static int gtk_builder_add_from_resource ( Addressable builder,  Addressable resource_path,  Addressable error) {
        var mh$ = gtk_builder_add_from_resource$MH();
        try {
            return (int)mh$.invokeExact(builder, resource_path, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.gtk_builder_add_from_string$MH,"gtk_builder_add_from_string");
    }
    public static int gtk_builder_add_from_string ( Addressable builder,  Addressable buffer,  long length,  Addressable error) {
        var mh$ = gtk_builder_add_from_string$MH();
        try {
            return (int)mh$.invokeExact(builder, buffer, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_objects_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.gtk_builder_add_objects_from_file$MH,"gtk_builder_add_objects_from_file");
    }
    public static int gtk_builder_add_objects_from_file ( Addressable builder,  Addressable filename,  Addressable object_ids,  Addressable error) {
        var mh$ = gtk_builder_add_objects_from_file$MH();
        try {
            return (int)mh$.invokeExact(builder, filename, object_ids, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_objects_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.gtk_builder_add_objects_from_resource$MH,"gtk_builder_add_objects_from_resource");
    }
    public static int gtk_builder_add_objects_from_resource ( Addressable builder,  Addressable resource_path,  Addressable object_ids,  Addressable error) {
        var mh$ = gtk_builder_add_objects_from_resource$MH();
        try {
            return (int)mh$.invokeExact(builder, resource_path, object_ids, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_objects_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.gtk_builder_add_objects_from_string$MH,"gtk_builder_add_objects_from_string");
    }
    public static int gtk_builder_add_objects_from_string ( Addressable builder,  Addressable buffer,  long length,  Addressable object_ids,  Addressable error) {
        var mh$ = gtk_builder_add_objects_from_string$MH();
        try {
            return (int)mh$.invokeExact(builder, buffer, length, object_ids, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_get_object$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.gtk_builder_get_object$MH,"gtk_builder_get_object");
    }
    public static MemoryAddress gtk_builder_get_object ( Addressable builder,  Addressable name) {
        var mh$ = gtk_builder_get_object$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(builder, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_get_objects$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.gtk_builder_get_objects$MH,"gtk_builder_get_objects");
    }
    public static MemoryAddress gtk_builder_get_objects ( Addressable builder) {
        var mh$ = gtk_builder_get_objects$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_expose_object$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.gtk_builder_expose_object$MH,"gtk_builder_expose_object");
    }
    public static void gtk_builder_expose_object ( Addressable builder,  Addressable name,  Addressable object) {
        var mh$ = gtk_builder_expose_object$MH();
        try {
            mh$.invokeExact(builder, name, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_connect_signals$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.gtk_builder_connect_signals$MH,"gtk_builder_connect_signals");
    }
    public static void gtk_builder_connect_signals ( Addressable builder,  Addressable user_data) {
        var mh$ = gtk_builder_connect_signals$MH();
        try {
            mh$.invokeExact(builder, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_connect_signals_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.gtk_builder_connect_signals_full$MH,"gtk_builder_connect_signals_full");
    }
    public static void gtk_builder_connect_signals_full ( Addressable builder,  Addressable func,  Addressable user_data) {
        var mh$ = gtk_builder_connect_signals_full$MH();
        try {
            mh$.invokeExact(builder, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_set_translation_domain$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.gtk_builder_set_translation_domain$MH,"gtk_builder_set_translation_domain");
    }
    public static void gtk_builder_set_translation_domain ( Addressable builder,  Addressable domain) {
        var mh$ = gtk_builder_set_translation_domain$MH();
        try {
            mh$.invokeExact(builder, domain);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_get_translation_domain$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.gtk_builder_get_translation_domain$MH,"gtk_builder_get_translation_domain");
    }
    public static MemoryAddress gtk_builder_get_translation_domain ( Addressable builder) {
        var mh$ = gtk_builder_get_translation_domain$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_get_type_from_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.gtk_builder_get_type_from_name$MH,"gtk_builder_get_type_from_name");
    }
    public static long gtk_builder_get_type_from_name ( Addressable builder,  Addressable type_name) {
        var mh$ = gtk_builder_get_type_from_name$MH();
        try {
            return (long)mh$.invokeExact(builder, type_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_value_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.gtk_builder_value_from_string$MH,"gtk_builder_value_from_string");
    }
    public static int gtk_builder_value_from_string ( Addressable builder,  Addressable pspec,  Addressable string,  Addressable value,  Addressable error) {
        var mh$ = gtk_builder_value_from_string$MH();
        try {
            return (int)mh$.invokeExact(builder, pspec, string, value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_value_from_string_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.gtk_builder_value_from_string_type$MH,"gtk_builder_value_from_string_type");
    }
    public static int gtk_builder_value_from_string_type ( Addressable builder,  long type,  Addressable string,  Addressable value,  Addressable error) {
        var mh$ = gtk_builder_value_from_string_type$MH();
        try {
            return (int)mh$.invokeExact(builder, type, string, value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.gtk_builder_new_from_file$MH,"gtk_builder_new_from_file");
    }
    public static MemoryAddress gtk_builder_new_from_file ( Addressable filename) {
        var mh$ = gtk_builder_new_from_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_new_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.gtk_builder_new_from_resource$MH,"gtk_builder_new_from_resource");
    }
    public static MemoryAddress gtk_builder_new_from_resource ( Addressable resource_path) {
        var mh$ = gtk_builder_new_from_resource$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_new_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1697.gtk_builder_new_from_string$MH,"gtk_builder_new_from_string");
    }
    public static MemoryAddress gtk_builder_new_from_string ( Addressable string,  long length) {
        var mh$ = gtk_builder_new_from_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_callback_symbol$MH() {
        return RuntimeHelper.requireNonNull(constants$1697.gtk_builder_add_callback_symbol$MH,"gtk_builder_add_callback_symbol");
    }
    public static void gtk_builder_add_callback_symbol ( Addressable builder,  Addressable callback_name,  Addressable callback_symbol) {
        var mh$ = gtk_builder_add_callback_symbol$MH();
        try {
            mh$.invokeExact(builder, callback_name, callback_symbol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_callback_symbols$MH() {
        return RuntimeHelper.requireNonNull(constants$1697.gtk_builder_add_callback_symbols$MH,"gtk_builder_add_callback_symbols");
    }
    public static void gtk_builder_add_callback_symbols ( Addressable builder,  Addressable first_callback_name,  Addressable first_callback_symbol, Object... x3) {
        var mh$ = gtk_builder_add_callback_symbols$MH();
        try {
            mh$.invokeExact(builder, first_callback_name, first_callback_symbol, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_lookup_callback_symbol$MH() {
        return RuntimeHelper.requireNonNull(constants$1697.gtk_builder_lookup_callback_symbol$MH,"gtk_builder_lookup_callback_symbol");
    }
    public static MemoryAddress gtk_builder_lookup_callback_symbol ( Addressable builder,  Addressable callback_name) {
        var mh$ = gtk_builder_lookup_callback_symbol$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(builder, callback_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_set_application$MH() {
        return RuntimeHelper.requireNonNull(constants$1697.gtk_builder_set_application$MH,"gtk_builder_set_application");
    }
    public static void gtk_builder_set_application ( Addressable builder,  Addressable application) {
        var mh$ = gtk_builder_set_application$MH();
        try {
            mh$.invokeExact(builder, application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_get_application$MH() {
        return RuntimeHelper.requireNonNull(constants$1697.gtk_builder_get_application$MH,"gtk_builder_get_application");
    }
    public static MemoryAddress gtk_builder_get_application ( Addressable builder) {
        var mh$ = gtk_builder_get_application$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_extend_with_template$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.gtk_builder_extend_with_template$MH,"gtk_builder_extend_with_template");
    }
    public static int gtk_builder_extend_with_template ( Addressable builder,  Addressable widget,  long template_type,  Addressable buffer,  long length,  Addressable error) {
        var mh$ = gtk_builder_extend_with_template$MH();
        try {
            return (int)mh$.invokeExact(builder, widget, template_type, buffer, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.gtk_buildable_get_type$MH,"gtk_buildable_get_type");
    }
    public static long gtk_buildable_get_type () {
        var mh$ = gtk_buildable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.gtk_buildable_set_name$MH,"gtk_buildable_set_name");
    }
    public static void gtk_buildable_set_name ( Addressable buildable,  Addressable name) {
        var mh$ = gtk_buildable_set_name$MH();
        try {
            mh$.invokeExact(buildable, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.gtk_buildable_get_name$MH,"gtk_buildable_get_name");
    }
    public static MemoryAddress gtk_buildable_get_name ( Addressable buildable) {
        var mh$ = gtk_buildable_get_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buildable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_add_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.gtk_buildable_add_child$MH,"gtk_buildable_add_child");
    }
    public static void gtk_buildable_add_child ( Addressable buildable,  Addressable builder,  Addressable child,  Addressable type) {
        var mh$ = gtk_buildable_add_child$MH();
        try {
            mh$.invokeExact(buildable, builder, child, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_set_buildable_property$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.gtk_buildable_set_buildable_property$MH,"gtk_buildable_set_buildable_property");
    }
    public static void gtk_buildable_set_buildable_property ( Addressable buildable,  Addressable builder,  Addressable name,  Addressable value) {
        var mh$ = gtk_buildable_set_buildable_property$MH();
        try {
            mh$.invokeExact(buildable, builder, name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_construct_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.gtk_buildable_construct_child$MH,"gtk_buildable_construct_child");
    }
    public static MemoryAddress gtk_buildable_construct_child ( Addressable buildable,  Addressable builder,  Addressable name) {
        var mh$ = gtk_buildable_construct_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buildable, builder, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_custom_tag_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.gtk_buildable_custom_tag_start$MH,"gtk_buildable_custom_tag_start");
    }
    public static int gtk_buildable_custom_tag_start ( Addressable buildable,  Addressable builder,  Addressable child,  Addressable tagname,  Addressable parser,  Addressable data) {
        var mh$ = gtk_buildable_custom_tag_start$MH();
        try {
            return (int)mh$.invokeExact(buildable, builder, child, tagname, parser, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_custom_tag_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.gtk_buildable_custom_tag_end$MH,"gtk_buildable_custom_tag_end");
    }
    public static void gtk_buildable_custom_tag_end ( Addressable buildable,  Addressable builder,  Addressable child,  Addressable tagname,  Addressable data) {
        var mh$ = gtk_buildable_custom_tag_end$MH();
        try {
            mh$.invokeExact(buildable, builder, child, tagname, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_custom_finished$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.gtk_buildable_custom_finished$MH,"gtk_buildable_custom_finished");
    }
    public static void gtk_buildable_custom_finished ( Addressable buildable,  Addressable builder,  Addressable child,  Addressable tagname,  Addressable data) {
        var mh$ = gtk_buildable_custom_finished$MH();
        try {
            mh$.invokeExact(buildable, builder, child, tagname, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_parser_finished$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.gtk_buildable_parser_finished$MH,"gtk_buildable_parser_finished");
    }
    public static void gtk_buildable_parser_finished ( Addressable buildable,  Addressable builder) {
        var mh$ = gtk_buildable_parser_finished$MH();
        try {
            mh$.invokeExact(buildable, builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_get_internal_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.gtk_buildable_get_internal_child$MH,"gtk_buildable_get_internal_child");
    }
    public static MemoryAddress gtk_buildable_get_internal_child ( Addressable buildable,  Addressable builder,  Addressable childname) {
        var mh$ = gtk_buildable_get_internal_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buildable, builder, childname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.gtk_button_get_type$MH,"gtk_button_get_type");
    }
    public static long gtk_button_get_type () {
        var mh$ = gtk_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.gtk_button_new$MH,"gtk_button_new");
    }
    public static MemoryAddress gtk_button_new () {
        var mh$ = gtk_button_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_new_with_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.gtk_button_new_with_label$MH,"gtk_button_new_with_label");
    }
    public static MemoryAddress gtk_button_new_with_label ( Addressable label) {
        var mh$ = gtk_button_new_with_label$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_new_from_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.gtk_button_new_from_icon_name$MH,"gtk_button_new_from_icon_name");
    }
    public static MemoryAddress gtk_button_new_from_icon_name ( Addressable icon_name,  int size) {
        var mh$ = gtk_button_new_from_icon_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(icon_name, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_new_from_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.gtk_button_new_from_stock$MH,"gtk_button_new_from_stock");
    }
    public static MemoryAddress gtk_button_new_from_stock ( Addressable stock_id) {
        var mh$ = gtk_button_new_from_stock$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.gtk_button_new_with_mnemonic$MH,"gtk_button_new_with_mnemonic");
    }
    public static MemoryAddress gtk_button_new_with_mnemonic ( Addressable label) {
        var mh$ = gtk_button_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_clicked$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.gtk_button_clicked$MH,"gtk_button_clicked");
    }
    public static void gtk_button_clicked ( Addressable button) {
        var mh$ = gtk_button_clicked$MH();
        try {
            mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_pressed$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.gtk_button_pressed$MH,"gtk_button_pressed");
    }
    public static void gtk_button_pressed ( Addressable button) {
        var mh$ = gtk_button_pressed$MH();
        try {
            mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_released$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.gtk_button_released$MH,"gtk_button_released");
    }
    public static void gtk_button_released ( Addressable button) {
        var mh$ = gtk_button_released$MH();
        try {
            mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_enter$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.gtk_button_enter$MH,"gtk_button_enter");
    }
    public static void gtk_button_enter ( Addressable button) {
        var mh$ = gtk_button_enter$MH();
        try {
            mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_leave$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.gtk_button_leave$MH,"gtk_button_leave");
    }
    public static void gtk_button_leave ( Addressable button) {
        var mh$ = gtk_button_leave$MH();
        try {
            mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_relief$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.gtk_button_set_relief$MH,"gtk_button_set_relief");
    }
    public static void gtk_button_set_relief ( Addressable button,  int relief) {
        var mh$ = gtk_button_set_relief$MH();
        try {
            mh$.invokeExact(button, relief);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_relief$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.gtk_button_get_relief$MH,"gtk_button_get_relief");
    }
    public static int gtk_button_get_relief ( Addressable button) {
        var mh$ = gtk_button_get_relief$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.gtk_button_set_label$MH,"gtk_button_set_label");
    }
    public static void gtk_button_set_label ( Addressable button,  Addressable label) {
        var mh$ = gtk_button_set_label$MH();
        try {
            mh$.invokeExact(button, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.gtk_button_get_label$MH,"gtk_button_get_label");
    }
    public static MemoryAddress gtk_button_get_label ( Addressable button) {
        var mh$ = gtk_button_get_label$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.gtk_button_set_use_underline$MH,"gtk_button_set_use_underline");
    }
    public static void gtk_button_set_use_underline ( Addressable button,  int use_underline) {
        var mh$ = gtk_button_set_use_underline$MH();
        try {
            mh$.invokeExact(button, use_underline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.gtk_button_get_use_underline$MH,"gtk_button_get_use_underline");
    }
    public static int gtk_button_get_use_underline ( Addressable button) {
        var mh$ = gtk_button_get_use_underline$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_use_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.gtk_button_set_use_stock$MH,"gtk_button_set_use_stock");
    }
    public static void gtk_button_set_use_stock ( Addressable button,  int use_stock) {
        var mh$ = gtk_button_set_use_stock$MH();
        try {
            mh$.invokeExact(button, use_stock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_use_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.gtk_button_get_use_stock$MH,"gtk_button_get_use_stock");
    }
    public static int gtk_button_get_use_stock ( Addressable button) {
        var mh$ = gtk_button_get_use_stock$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.gtk_button_set_focus_on_click$MH,"gtk_button_set_focus_on_click");
    }
    public static void gtk_button_set_focus_on_click ( Addressable button,  int focus_on_click) {
        var mh$ = gtk_button_set_focus_on_click$MH();
        try {
            mh$.invokeExact(button, focus_on_click);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.gtk_button_get_focus_on_click$MH,"gtk_button_get_focus_on_click");
    }
    public static int gtk_button_get_focus_on_click ( Addressable button) {
        var mh$ = gtk_button_get_focus_on_click$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.gtk_button_set_alignment$MH,"gtk_button_set_alignment");
    }
    public static void gtk_button_set_alignment ( Addressable button,  float xalign,  float yalign) {
        var mh$ = gtk_button_set_alignment$MH();
        try {
            mh$.invokeExact(button, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.gtk_button_get_alignment$MH,"gtk_button_get_alignment");
    }
    public static void gtk_button_get_alignment ( Addressable button,  Addressable xalign,  Addressable yalign) {
        var mh$ = gtk_button_get_alignment$MH();
        try {
            mh$.invokeExact(button, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.gtk_button_set_image$MH,"gtk_button_set_image");
    }
    public static void gtk_button_set_image ( Addressable button,  Addressable image) {
        var mh$ = gtk_button_set_image$MH();
        try {
            mh$.invokeExact(button, image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.gtk_button_get_image$MH,"gtk_button_get_image");
    }
    public static MemoryAddress gtk_button_get_image ( Addressable button) {
        var mh$ = gtk_button_get_image$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_image_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.gtk_button_set_image_position$MH,"gtk_button_set_image_position");
    }
    public static void gtk_button_set_image_position ( Addressable button,  int position) {
        var mh$ = gtk_button_set_image_position$MH();
        try {
            mh$.invokeExact(button, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_image_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.gtk_button_get_image_position$MH,"gtk_button_get_image_position");
    }
    public static int gtk_button_get_image_position ( Addressable button) {
        var mh$ = gtk_button_get_image_position$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_always_show_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.gtk_button_set_always_show_image$MH,"gtk_button_set_always_show_image");
    }
    public static void gtk_button_set_always_show_image ( Addressable button,  int always_show) {
        var mh$ = gtk_button_set_always_show_image$MH();
        try {
            mh$.invokeExact(button, always_show);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_always_show_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.gtk_button_get_always_show_image$MH,"gtk_button_get_always_show_image");
    }
    public static int gtk_button_get_always_show_image ( Addressable button) {
        var mh$ = gtk_button_get_always_show_image$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_event_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.gtk_button_get_event_window$MH,"gtk_button_get_event_window");
    }
    public static MemoryAddress gtk_button_get_event_window ( Addressable button) {
        var mh$ = gtk_button_get_event_window$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_CALENDAR_SHOW_HEADING() {
        return (int)1L;
    }
    public static int GTK_CALENDAR_SHOW_DAY_NAMES() {
        return (int)2L;
    }
    public static int GTK_CALENDAR_NO_MONTH_CHANGE() {
        return (int)4L;
    }
    public static int GTK_CALENDAR_SHOW_WEEK_NUMBERS() {
        return (int)8L;
    }
    public static int GTK_CALENDAR_SHOW_DETAILS() {
        return (int)32L;
    }
    public static MethodHandle gtk_calendar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.gtk_calendar_get_type$MH,"gtk_calendar_get_type");
    }
    public static long gtk_calendar_get_type () {
        var mh$ = gtk_calendar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.gtk_calendar_new$MH,"gtk_calendar_new");
    }
    public static MemoryAddress gtk_calendar_new () {
        var mh$ = gtk_calendar_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_select_month$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.gtk_calendar_select_month$MH,"gtk_calendar_select_month");
    }
    public static void gtk_calendar_select_month ( Addressable calendar,  int month,  int year) {
        var mh$ = gtk_calendar_select_month$MH();
        try {
            mh$.invokeExact(calendar, month, year);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_select_day$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.gtk_calendar_select_day$MH,"gtk_calendar_select_day");
    }
    public static void gtk_calendar_select_day ( Addressable calendar,  int day) {
        var mh$ = gtk_calendar_select_day$MH();
        try {
            mh$.invokeExact(calendar, day);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_mark_day$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.gtk_calendar_mark_day$MH,"gtk_calendar_mark_day");
    }
    public static void gtk_calendar_mark_day ( Addressable calendar,  int day) {
        var mh$ = gtk_calendar_mark_day$MH();
        try {
            mh$.invokeExact(calendar, day);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_unmark_day$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.gtk_calendar_unmark_day$MH,"gtk_calendar_unmark_day");
    }
    public static void gtk_calendar_unmark_day ( Addressable calendar,  int day) {
        var mh$ = gtk_calendar_unmark_day$MH();
        try {
            mh$.invokeExact(calendar, day);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_clear_marks$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.gtk_calendar_clear_marks$MH,"gtk_calendar_clear_marks");
    }
    public static void gtk_calendar_clear_marks ( Addressable calendar) {
        var mh$ = gtk_calendar_clear_marks$MH();
        try {
            mh$.invokeExact(calendar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_set_display_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.gtk_calendar_set_display_options$MH,"gtk_calendar_set_display_options");
    }
    public static void gtk_calendar_set_display_options ( Addressable calendar,  int flags) {
        var mh$ = gtk_calendar_set_display_options$MH();
        try {
            mh$.invokeExact(calendar, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_get_display_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.gtk_calendar_get_display_options$MH,"gtk_calendar_get_display_options");
    }
    public static int gtk_calendar_get_display_options ( Addressable calendar) {
        var mh$ = gtk_calendar_get_display_options$MH();
        try {
            return (int)mh$.invokeExact(calendar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_get_date$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.gtk_calendar_get_date$MH,"gtk_calendar_get_date");
    }
    public static void gtk_calendar_get_date ( Addressable calendar,  Addressable year,  Addressable month,  Addressable day) {
        var mh$ = gtk_calendar_get_date$MH();
        try {
            mh$.invokeExact(calendar, year, month, day);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_set_detail_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.gtk_calendar_set_detail_func$MH,"gtk_calendar_set_detail_func");
    }
    public static void gtk_calendar_set_detail_func ( Addressable calendar,  Addressable func,  Addressable data,  Addressable destroy) {
        var mh$ = gtk_calendar_set_detail_func$MH();
        try {
            mh$.invokeExact(calendar, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_set_detail_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.gtk_calendar_set_detail_width_chars$MH,"gtk_calendar_set_detail_width_chars");
    }
    public static void gtk_calendar_set_detail_width_chars ( Addressable calendar,  int chars) {
        var mh$ = gtk_calendar_set_detail_width_chars$MH();
        try {
            mh$.invokeExact(calendar, chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_set_detail_height_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.gtk_calendar_set_detail_height_rows$MH,"gtk_calendar_set_detail_height_rows");
    }
    public static void gtk_calendar_set_detail_height_rows ( Addressable calendar,  int rows) {
        var mh$ = gtk_calendar_set_detail_height_rows$MH();
        try {
            mh$.invokeExact(calendar, rows);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_get_detail_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.gtk_calendar_get_detail_width_chars$MH,"gtk_calendar_get_detail_width_chars");
    }
    public static int gtk_calendar_get_detail_width_chars ( Addressable calendar) {
        var mh$ = gtk_calendar_get_detail_width_chars$MH();
        try {
            return (int)mh$.invokeExact(calendar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_get_detail_height_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.gtk_calendar_get_detail_height_rows$MH,"gtk_calendar_get_detail_height_rows");
    }
    public static int gtk_calendar_get_detail_height_rows ( Addressable calendar) {
        var mh$ = gtk_calendar_get_detail_height_rows$MH();
        try {
            return (int)mh$.invokeExact(calendar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_get_day_is_marked$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.gtk_calendar_get_day_is_marked$MH,"gtk_calendar_get_day_is_marked");
    }
    public static int gtk_calendar_get_day_is_marked ( Addressable calendar,  int day) {
        var mh$ = gtk_calendar_get_day_is_marked$MH();
        try {
            return (int)mh$.invokeExact(calendar, day);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.gtk_cell_area_box_get_type$MH,"gtk_cell_area_box_get_type");
    }
    public static long gtk_cell_area_box_get_type () {
        var mh$ = gtk_cell_area_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.gtk_cell_area_box_new$MH,"gtk_cell_area_box_new");
    }
    public static MemoryAddress gtk_cell_area_box_new () {
        var mh$ = gtk_cell_area_box_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_box_pack_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.gtk_cell_area_box_pack_start$MH,"gtk_cell_area_box_pack_start");
    }
    public static void gtk_cell_area_box_pack_start ( Addressable box,  Addressable renderer,  int expand,  int align,  int fixed) {
        var mh$ = gtk_cell_area_box_pack_start$MH();
        try {
            mh$.invokeExact(box, renderer, expand, align, fixed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_box_pack_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.gtk_cell_area_box_pack_end$MH,"gtk_cell_area_box_pack_end");
    }
    public static void gtk_cell_area_box_pack_end ( Addressable box,  Addressable renderer,  int expand,  int align,  int fixed) {
        var mh$ = gtk_cell_area_box_pack_end$MH();
        try {
            mh$.invokeExact(box, renderer, expand, align, fixed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_box_get_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.gtk_cell_area_box_get_spacing$MH,"gtk_cell_area_box_get_spacing");
    }
    public static int gtk_cell_area_box_get_spacing ( Addressable box) {
        var mh$ = gtk_cell_area_box_get_spacing$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_box_set_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.gtk_cell_area_box_set_spacing$MH,"gtk_cell_area_box_set_spacing");
    }
    public static void gtk_cell_area_box_set_spacing ( Addressable box,  int spacing) {
        var mh$ = gtk_cell_area_box_set_spacing$MH();
        try {
            mh$.invokeExact(box, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_cell_area_box_group_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1709._gtk_cell_area_box_group_visible$MH,"_gtk_cell_area_box_group_visible");
    }
    public static int _gtk_cell_area_box_group_visible ( Addressable box,  int group_idx) {
        var mh$ = _gtk_cell_area_box_group_visible$MH();
        try {
            return (int)mh$.invokeExact(box, group_idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.gtk_cell_area_context_get_type$MH,"gtk_cell_area_context_get_type");
    }
    public static long gtk_cell_area_context_get_type () {
        var mh$ = gtk_cell_area_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.gtk_cell_area_context_get_area$MH,"gtk_cell_area_context_get_area");
    }
    public static MemoryAddress gtk_cell_area_context_get_area ( Addressable context) {
        var mh$ = gtk_cell_area_context_get_area$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.gtk_cell_area_context_allocate$MH,"gtk_cell_area_context_allocate");
    }
    public static void gtk_cell_area_context_allocate ( Addressable context,  int width,  int height) {
        var mh$ = gtk_cell_area_context_allocate$MH();
        try {
            mh$.invokeExact(context, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.gtk_cell_area_context_reset$MH,"gtk_cell_area_context_reset");
    }
    public static void gtk_cell_area_context_reset ( Addressable context) {
        var mh$ = gtk_cell_area_context_reset$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_preferred_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.gtk_cell_area_context_get_preferred_width$MH,"gtk_cell_area_context_get_preferred_width");
    }
    public static void gtk_cell_area_context_get_preferred_width ( Addressable context,  Addressable minimum_width,  Addressable natural_width) {
        var mh$ = gtk_cell_area_context_get_preferred_width$MH();
        try {
            mh$.invokeExact(context, minimum_width, natural_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_preferred_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.gtk_cell_area_context_get_preferred_height$MH,"gtk_cell_area_context_get_preferred_height");
    }
    public static void gtk_cell_area_context_get_preferred_height ( Addressable context,  Addressable minimum_height,  Addressable natural_height) {
        var mh$ = gtk_cell_area_context_get_preferred_height$MH();
        try {
            mh$.invokeExact(context, minimum_height, natural_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_preferred_height_for_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.gtk_cell_area_context_get_preferred_height_for_width$MH,"gtk_cell_area_context_get_preferred_height_for_width");
    }
    public static void gtk_cell_area_context_get_preferred_height_for_width ( Addressable context,  int width,  Addressable minimum_height,  Addressable natural_height) {
        var mh$ = gtk_cell_area_context_get_preferred_height_for_width$MH();
        try {
            mh$.invokeExact(context, width, minimum_height, natural_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_preferred_width_for_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.gtk_cell_area_context_get_preferred_width_for_height$MH,"gtk_cell_area_context_get_preferred_width_for_height");
    }
    public static void gtk_cell_area_context_get_preferred_width_for_height ( Addressable context,  int height,  Addressable minimum_width,  Addressable natural_width) {
        var mh$ = gtk_cell_area_context_get_preferred_width_for_height$MH();
        try {
            mh$.invokeExact(context, height, minimum_width, natural_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_allocation$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.gtk_cell_area_context_get_allocation$MH,"gtk_cell_area_context_get_allocation");
    }
    public static void gtk_cell_area_context_get_allocation ( Addressable context,  Addressable width,  Addressable height) {
        var mh$ = gtk_cell_area_context_get_allocation$MH();
        try {
            mh$.invokeExact(context, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_push_preferred_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.gtk_cell_area_context_push_preferred_width$MH,"gtk_cell_area_context_push_preferred_width");
    }
    public static void gtk_cell_area_context_push_preferred_width ( Addressable context,  int minimum_width,  int natural_width) {
        var mh$ = gtk_cell_area_context_push_preferred_width$MH();
        try {
            mh$.invokeExact(context, minimum_width, natural_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_push_preferred_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.gtk_cell_area_context_push_preferred_height$MH,"gtk_cell_area_context_push_preferred_height");
    }
    public static void gtk_cell_area_context_push_preferred_height ( Addressable context,  int minimum_height,  int natural_height) {
        var mh$ = gtk_cell_area_context_push_preferred_height$MH();
        try {
            mh$.invokeExact(context, minimum_height, natural_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1711.gtk_cell_layout_get_type$MH,"gtk_cell_layout_get_type");
    }
    public static long gtk_cell_layout_get_type () {
        var mh$ = gtk_cell_layout_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_pack_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1711.gtk_cell_layout_pack_start$MH,"gtk_cell_layout_pack_start");
    }
    public static void gtk_cell_layout_pack_start ( Addressable cell_layout,  Addressable cell,  int expand) {
        var mh$ = gtk_cell_layout_pack_start$MH();
        try {
            mh$.invokeExact(cell_layout, cell, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_pack_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1711.gtk_cell_layout_pack_end$MH,"gtk_cell_layout_pack_end");
    }
    public static void gtk_cell_layout_pack_end ( Addressable cell_layout,  Addressable cell,  int expand) {
        var mh$ = gtk_cell_layout_pack_end$MH();
        try {
            mh$.invokeExact(cell_layout, cell, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_get_cells$MH() {
        return RuntimeHelper.requireNonNull(constants$1711.gtk_cell_layout_get_cells$MH,"gtk_cell_layout_get_cells");
    }
    public static MemoryAddress gtk_cell_layout_get_cells ( Addressable cell_layout) {
        var mh$ = gtk_cell_layout_get_cells$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cell_layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$1712.gtk_cell_layout_clear$MH,"gtk_cell_layout_clear");
    }
    public static void gtk_cell_layout_clear ( Addressable cell_layout) {
        var mh$ = gtk_cell_layout_clear$MH();
        try {
            mh$.invokeExact(cell_layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_set_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1712.gtk_cell_layout_set_attributes$MH,"gtk_cell_layout_set_attributes");
    }
    public static void gtk_cell_layout_set_attributes ( Addressable cell_layout,  Addressable cell, Object... x2) {
        var mh$ = gtk_cell_layout_set_attributes$MH();
        try {
            mh$.invokeExact(cell_layout, cell, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_add_attribute$MH() {
        return RuntimeHelper.requireNonNull(constants$1712.gtk_cell_layout_add_attribute$MH,"gtk_cell_layout_add_attribute");
    }
    public static void gtk_cell_layout_add_attribute ( Addressable cell_layout,  Addressable cell,  Addressable attribute,  int column) {
        var mh$ = gtk_cell_layout_add_attribute$MH();
        try {
            mh$.invokeExact(cell_layout, cell, attribute, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_set_cell_data_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1712.gtk_cell_layout_set_cell_data_func$MH,"gtk_cell_layout_set_cell_data_func");
    }
    public static void gtk_cell_layout_set_cell_data_func ( Addressable cell_layout,  Addressable cell,  Addressable func,  Addressable func_data,  Addressable destroy) {
        var mh$ = gtk_cell_layout_set_cell_data_func$MH();
        try {
            mh$.invokeExact(cell_layout, cell, func, func_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_clear_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1712.gtk_cell_layout_clear_attributes$MH,"gtk_cell_layout_clear_attributes");
    }
    public static void gtk_cell_layout_clear_attributes ( Addressable cell_layout,  Addressable cell) {
        var mh$ = gtk_cell_layout_clear_attributes$MH();
        try {
            mh$.invokeExact(cell_layout, cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_reorder$MH() {
        return RuntimeHelper.requireNonNull(constants$1712.gtk_cell_layout_reorder$MH,"gtk_cell_layout_reorder");
    }
    public static void gtk_cell_layout_reorder ( Addressable cell_layout,  Addressable cell,  int position) {
        var mh$ = gtk_cell_layout_reorder$MH();
        try {
            mh$.invokeExact(cell_layout, cell, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_get_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1713.gtk_cell_layout_get_area$MH,"gtk_cell_layout_get_area");
    }
    public static MemoryAddress gtk_cell_layout_get_area ( Addressable cell_layout) {
        var mh$ = gtk_cell_layout_get_area$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cell_layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_cell_layout_buildable_custom_tag_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1713._gtk_cell_layout_buildable_custom_tag_start$MH,"_gtk_cell_layout_buildable_custom_tag_start");
    }
    public static int _gtk_cell_layout_buildable_custom_tag_start ( Addressable buildable,  Addressable builder,  Addressable child,  Addressable tagname,  Addressable parser,  Addressable data) {
        var mh$ = _gtk_cell_layout_buildable_custom_tag_start$MH();
        try {
            return (int)mh$.invokeExact(buildable, builder, child, tagname, parser, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_cell_layout_buildable_custom_tag_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1713._gtk_cell_layout_buildable_custom_tag_end$MH,"_gtk_cell_layout_buildable_custom_tag_end");
    }
    public static int _gtk_cell_layout_buildable_custom_tag_end ( Addressable buildable,  Addressable builder,  Addressable child,  Addressable tagname,  Addressable data) {
        var mh$ = _gtk_cell_layout_buildable_custom_tag_end$MH();
        try {
            return (int)mh$.invokeExact(buildable, builder, child, tagname, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_cell_layout_buildable_add_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1713._gtk_cell_layout_buildable_add_child$MH,"_gtk_cell_layout_buildable_add_child");
    }
    public static void _gtk_cell_layout_buildable_add_child ( Addressable buildable,  Addressable builder,  Addressable child,  Addressable type) {
        var mh$ = _gtk_cell_layout_buildable_add_child$MH();
        try {
            mh$.invokeExact(buildable, builder, child, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_text_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1713.gtk_cell_renderer_text_get_type$MH,"gtk_cell_renderer_text_get_type");
    }
    public static long gtk_cell_renderer_text_get_type () {
        var mh$ = gtk_cell_renderer_text_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_text_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1713.gtk_cell_renderer_text_new$MH,"gtk_cell_renderer_text_new");
    }
    public static MemoryAddress gtk_cell_renderer_text_new () {
        var mh$ = gtk_cell_renderer_text_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_text_set_fixed_height_from_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.gtk_cell_renderer_text_set_fixed_height_from_font$MH,"gtk_cell_renderer_text_set_fixed_height_from_font");
    }
    public static void gtk_cell_renderer_text_set_fixed_height_from_font ( Addressable renderer,  int number_of_rows) {
        var mh$ = gtk_cell_renderer_text_set_fixed_height_from_font$MH();
        try {
            mh$.invokeExact(renderer, number_of_rows);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_CELL_RENDERER_ACCEL_MODE_GTK() {
        return (int)0L;
    }
    public static int GTK_CELL_RENDERER_ACCEL_MODE_OTHER() {
        return (int)1L;
    }
    public static int GTK_CELL_RENDERER_ACCEL_MODE_MODIFIER_TAP() {
        return (int)2L;
    }
    public static MethodHandle gtk_cell_renderer_accel_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.gtk_cell_renderer_accel_get_type$MH,"gtk_cell_renderer_accel_get_type");
    }
    public static long gtk_cell_renderer_accel_get_type () {
        var mh$ = gtk_cell_renderer_accel_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_accel_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.gtk_cell_renderer_accel_new$MH,"gtk_cell_renderer_accel_new");
    }
    public static MemoryAddress gtk_cell_renderer_accel_new () {
        var mh$ = gtk_cell_renderer_accel_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_combo_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.gtk_cell_renderer_combo_get_type$MH,"gtk_cell_renderer_combo_get_type");
    }
    public static long gtk_cell_renderer_combo_get_type () {
        var mh$ = gtk_cell_renderer_combo_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_combo_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.gtk_cell_renderer_combo_new$MH,"gtk_cell_renderer_combo_new");
    }
    public static MemoryAddress gtk_cell_renderer_combo_new () {
        var mh$ = gtk_cell_renderer_combo_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_pixbuf_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.gtk_cell_renderer_pixbuf_get_type$MH,"gtk_cell_renderer_pixbuf_get_type");
    }
    public static long gtk_cell_renderer_pixbuf_get_type () {
        var mh$ = gtk_cell_renderer_pixbuf_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_pixbuf_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.gtk_cell_renderer_pixbuf_new$MH,"gtk_cell_renderer_pixbuf_new");
    }
    public static MemoryAddress gtk_cell_renderer_pixbuf_new () {
        var mh$ = gtk_cell_renderer_pixbuf_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_progress_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.gtk_cell_renderer_progress_get_type$MH,"gtk_cell_renderer_progress_get_type");
    }
    public static long gtk_cell_renderer_progress_get_type () {
        var mh$ = gtk_cell_renderer_progress_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_progress_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.gtk_cell_renderer_progress_new$MH,"gtk_cell_renderer_progress_new");
    }
    public static MemoryAddress gtk_cell_renderer_progress_new () {
        var mh$ = gtk_cell_renderer_progress_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_spin_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.gtk_cell_renderer_spin_get_type$MH,"gtk_cell_renderer_spin_get_type");
    }
    public static long gtk_cell_renderer_spin_get_type () {
        var mh$ = gtk_cell_renderer_spin_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_spin_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.gtk_cell_renderer_spin_new$MH,"gtk_cell_renderer_spin_new");
    }
    public static MemoryAddress gtk_cell_renderer_spin_new () {
        var mh$ = gtk_cell_renderer_spin_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_spinner_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.gtk_cell_renderer_spinner_get_type$MH,"gtk_cell_renderer_spinner_get_type");
    }
    public static long gtk_cell_renderer_spinner_get_type () {
        var mh$ = gtk_cell_renderer_spinner_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_spinner_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.gtk_cell_renderer_spinner_new$MH,"gtk_cell_renderer_spinner_new");
    }
    public static MemoryAddress gtk_cell_renderer_spinner_new () {
        var mh$ = gtk_cell_renderer_spinner_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.gtk_cell_renderer_toggle_get_type$MH,"gtk_cell_renderer_toggle_get_type");
    }
    public static long gtk_cell_renderer_toggle_get_type () {
        var mh$ = gtk_cell_renderer_toggle_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.gtk_cell_renderer_toggle_new$MH,"gtk_cell_renderer_toggle_new");
    }
    public static MemoryAddress gtk_cell_renderer_toggle_new () {
        var mh$ = gtk_cell_renderer_toggle_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_get_radio$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.gtk_cell_renderer_toggle_get_radio$MH,"gtk_cell_renderer_toggle_get_radio");
    }
    public static int gtk_cell_renderer_toggle_get_radio ( Addressable toggle) {
        var mh$ = gtk_cell_renderer_toggle_get_radio$MH();
        try {
            return (int)mh$.invokeExact(toggle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_set_radio$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.gtk_cell_renderer_toggle_set_radio$MH,"gtk_cell_renderer_toggle_set_radio");
    }
    public static void gtk_cell_renderer_toggle_set_radio ( Addressable toggle,  int radio) {
        var mh$ = gtk_cell_renderer_toggle_set_radio$MH();
        try {
            mh$.invokeExact(toggle, radio);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_get_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.gtk_cell_renderer_toggle_get_active$MH,"gtk_cell_renderer_toggle_get_active");
    }
    public static int gtk_cell_renderer_toggle_get_active ( Addressable toggle) {
        var mh$ = gtk_cell_renderer_toggle_get_active$MH();
        try {
            return (int)mh$.invokeExact(toggle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_set_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.gtk_cell_renderer_toggle_set_active$MH,"gtk_cell_renderer_toggle_set_active");
    }
    public static void gtk_cell_renderer_toggle_set_active ( Addressable toggle,  int setting) {
        var mh$ = gtk_cell_renderer_toggle_set_active$MH();
        try {
            mh$.invokeExact(toggle, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_get_activatable$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.gtk_cell_renderer_toggle_get_activatable$MH,"gtk_cell_renderer_toggle_get_activatable");
    }
    public static int gtk_cell_renderer_toggle_get_activatable ( Addressable toggle) {
        var mh$ = gtk_cell_renderer_toggle_get_activatable$MH();
        try {
            return (int)mh$.invokeExact(toggle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_set_activatable$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.gtk_cell_renderer_toggle_set_activatable$MH,"gtk_cell_renderer_toggle_set_activatable");
    }
    public static void gtk_cell_renderer_toggle_set_activatable ( Addressable toggle,  int setting) {
        var mh$ = gtk_cell_renderer_toggle_set_activatable$MH();
        try {
            mh$.invokeExact(toggle, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.gtk_cell_view_get_type$MH,"gtk_cell_view_get_type");
    }
    public static long gtk_cell_view_get_type () {
        var mh$ = gtk_cell_view_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.gtk_cell_view_new$MH,"gtk_cell_view_new");
    }
    public static MemoryAddress gtk_cell_view_new () {
        var mh$ = gtk_cell_view_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_new_with_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.gtk_cell_view_new_with_context$MH,"gtk_cell_view_new_with_context");
    }
    public static MemoryAddress gtk_cell_view_new_with_context ( Addressable area,  Addressable context) {
        var mh$ = gtk_cell_view_new_with_context$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(area, context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_new_with_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1718.gtk_cell_view_new_with_text$MH,"gtk_cell_view_new_with_text");
    }
    public static MemoryAddress gtk_cell_view_new_with_text ( Addressable text) {
        var mh$ = gtk_cell_view_new_with_text$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_new_with_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1718.gtk_cell_view_new_with_markup$MH,"gtk_cell_view_new_with_markup");
    }
    public static MemoryAddress gtk_cell_view_new_with_markup ( Addressable markup) {
        var mh$ = gtk_cell_view_new_with_markup$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_new_with_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1718.gtk_cell_view_new_with_pixbuf$MH,"gtk_cell_view_new_with_pixbuf");
    }
    public static MemoryAddress gtk_cell_view_new_with_pixbuf ( Addressable pixbuf) {
        var mh$ = gtk_cell_view_new_with_pixbuf$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1718.gtk_cell_view_set_model$MH,"gtk_cell_view_set_model");
    }
    public static void gtk_cell_view_set_model ( Addressable cell_view,  Addressable model) {
        var mh$ = gtk_cell_view_set_model$MH();
        try {
            mh$.invokeExact(cell_view, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1718.gtk_cell_view_get_model$MH,"gtk_cell_view_get_model");
    }
    public static MemoryAddress gtk_cell_view_get_model ( Addressable cell_view) {
        var mh$ = gtk_cell_view_get_model$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cell_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_set_displayed_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1718.gtk_cell_view_set_displayed_row$MH,"gtk_cell_view_set_displayed_row");
    }
    public static void gtk_cell_view_set_displayed_row ( Addressable cell_view,  Addressable path) {
        var mh$ = gtk_cell_view_set_displayed_row$MH();
        try {
            mh$.invokeExact(cell_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_get_displayed_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1719.gtk_cell_view_get_displayed_row$MH,"gtk_cell_view_get_displayed_row");
    }
    public static MemoryAddress gtk_cell_view_get_displayed_row ( Addressable cell_view) {
        var mh$ = gtk_cell_view_get_displayed_row$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cell_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_set_background_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1719.gtk_cell_view_set_background_rgba$MH,"gtk_cell_view_set_background_rgba");
    }
    public static void gtk_cell_view_set_background_rgba ( Addressable cell_view,  Addressable rgba) {
        var mh$ = gtk_cell_view_set_background_rgba$MH();
        try {
            mh$.invokeExact(cell_view, rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_get_draw_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$1719.gtk_cell_view_get_draw_sensitive$MH,"gtk_cell_view_get_draw_sensitive");
    }
    public static int gtk_cell_view_get_draw_sensitive ( Addressable cell_view) {
        var mh$ = gtk_cell_view_get_draw_sensitive$MH();
        try {
            return (int)mh$.invokeExact(cell_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_set_draw_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$1719.gtk_cell_view_set_draw_sensitive$MH,"gtk_cell_view_set_draw_sensitive");
    }
    public static void gtk_cell_view_set_draw_sensitive ( Addressable cell_view,  int draw_sensitive) {
        var mh$ = gtk_cell_view_set_draw_sensitive$MH();
        try {
            mh$.invokeExact(cell_view, draw_sensitive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_get_fit_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1719.gtk_cell_view_get_fit_model$MH,"gtk_cell_view_get_fit_model");
    }
    public static int gtk_cell_view_get_fit_model ( Addressable cell_view) {
        var mh$ = gtk_cell_view_get_fit_model$MH();
        try {
            return (int)mh$.invokeExact(cell_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_set_fit_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1719.gtk_cell_view_set_fit_model$MH,"gtk_cell_view_set_fit_model");
    }
    public static void gtk_cell_view_set_fit_model ( Addressable cell_view,  int fit_model) {
        var mh$ = gtk_cell_view_set_fit_model$MH();
        try {
            mh$.invokeExact(cell_view, fit_model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_get_size_of_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1720.gtk_cell_view_get_size_of_row$MH,"gtk_cell_view_get_size_of_row");
    }
    public static int gtk_cell_view_get_size_of_row ( Addressable cell_view,  Addressable path,  Addressable requisition) {
        var mh$ = gtk_cell_view_get_size_of_row$MH();
        try {
            return (int)mh$.invokeExact(cell_view, path, requisition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_set_background_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1720.gtk_cell_view_set_background_color$MH,"gtk_cell_view_set_background_color");
    }
    public static void gtk_cell_view_set_background_color ( Addressable cell_view,  Addressable color) {
        var mh$ = gtk_cell_view_set_background_color$MH();
        try {
            mh$.invokeExact(cell_view, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1720.gtk_toggle_button_get_type$MH,"gtk_toggle_button_get_type");
    }
    public static long gtk_toggle_button_get_type () {
        var mh$ = gtk_toggle_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1720.gtk_toggle_button_new$MH,"gtk_toggle_button_new");
    }
    public static MemoryAddress gtk_toggle_button_new () {
        var mh$ = gtk_toggle_button_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_new_with_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1720.gtk_toggle_button_new_with_label$MH,"gtk_toggle_button_new_with_label");
    }
    public static MemoryAddress gtk_toggle_button_new_with_label ( Addressable label) {
        var mh$ = gtk_toggle_button_new_with_label$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$1720.gtk_toggle_button_new_with_mnemonic$MH,"gtk_toggle_button_new_with_mnemonic");
    }
    public static MemoryAddress gtk_toggle_button_new_with_mnemonic ( Addressable label) {
        var mh$ = gtk_toggle_button_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_set_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1721.gtk_toggle_button_set_mode$MH,"gtk_toggle_button_set_mode");
    }
    public static void gtk_toggle_button_set_mode ( Addressable toggle_button,  int draw_indicator) {
        var mh$ = gtk_toggle_button_set_mode$MH();
        try {
            mh$.invokeExact(toggle_button, draw_indicator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_get_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1721.gtk_toggle_button_get_mode$MH,"gtk_toggle_button_get_mode");
    }
    public static int gtk_toggle_button_get_mode ( Addressable toggle_button) {
        var mh$ = gtk_toggle_button_get_mode$MH();
        try {
            return (int)mh$.invokeExact(toggle_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_set_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1721.gtk_toggle_button_set_active$MH,"gtk_toggle_button_set_active");
    }
    public static void gtk_toggle_button_set_active ( Addressable toggle_button,  int is_active) {
        var mh$ = gtk_toggle_button_set_active$MH();
        try {
            mh$.invokeExact(toggle_button, is_active);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_get_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1721.gtk_toggle_button_get_active$MH,"gtk_toggle_button_get_active");
    }
    public static int gtk_toggle_button_get_active ( Addressable toggle_button) {
        var mh$ = gtk_toggle_button_get_active$MH();
        try {
            return (int)mh$.invokeExact(toggle_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_toggled$MH() {
        return RuntimeHelper.requireNonNull(constants$1721.gtk_toggle_button_toggled$MH,"gtk_toggle_button_toggled");
    }
    public static void gtk_toggle_button_toggled ( Addressable toggle_button) {
        var mh$ = gtk_toggle_button_toggled$MH();
        try {
            mh$.invokeExact(toggle_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_set_inconsistent$MH() {
        return RuntimeHelper.requireNonNull(constants$1721.gtk_toggle_button_set_inconsistent$MH,"gtk_toggle_button_set_inconsistent");
    }
    public static void gtk_toggle_button_set_inconsistent ( Addressable toggle_button,  int setting) {
        var mh$ = gtk_toggle_button_set_inconsistent$MH();
        try {
            mh$.invokeExact(toggle_button, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_get_inconsistent$MH() {
        return RuntimeHelper.requireNonNull(constants$1722.gtk_toggle_button_get_inconsistent$MH,"gtk_toggle_button_get_inconsistent");
    }
    public static int gtk_toggle_button_get_inconsistent ( Addressable toggle_button) {
        var mh$ = gtk_toggle_button_get_inconsistent$MH();
        try {
            return (int)mh$.invokeExact(toggle_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1722.gtk_check_button_get_type$MH,"gtk_check_button_get_type");
    }
    public static long gtk_check_button_get_type () {
        var mh$ = gtk_check_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1722.gtk_check_button_new$MH,"gtk_check_button_new");
    }
    public static MemoryAddress gtk_check_button_new () {
        var mh$ = gtk_check_button_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_button_new_with_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1722.gtk_check_button_new_with_label$MH,"gtk_check_button_new_with_label");
    }
    public static MemoryAddress gtk_check_button_new_with_label ( Addressable label) {
        var mh$ = gtk_check_button_new_with_label$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_button_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$1722.gtk_check_button_new_with_mnemonic$MH,"gtk_check_button_new_with_mnemonic");
    }
    public static MemoryAddress gtk_check_button_new_with_mnemonic ( Addressable label) {
        var mh$ = gtk_check_button_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_check_button_get_props$MH() {
        return RuntimeHelper.requireNonNull(constants$1722._gtk_check_button_get_props$MH,"_gtk_check_button_get_props");
    }
    public static void _gtk_check_button_get_props ( Addressable check_button,  Addressable indicator_size,  Addressable indicator_spacing) {
        var mh$ = _gtk_check_button_get_props$MH();
        try {
            mh$.invokeExact(check_button, indicator_size, indicator_spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1723.gtk_menu_item_get_type$MH,"gtk_menu_item_get_type");
    }
    public static long gtk_menu_item_get_type () {
        var mh$ = gtk_menu_item_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1723.gtk_menu_item_new$MH,"gtk_menu_item_new");
    }
    public static MemoryAddress gtk_menu_item_new () {
        var mh$ = gtk_menu_item_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_new_with_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1723.gtk_menu_item_new_with_label$MH,"gtk_menu_item_new_with_label");
    }
    public static MemoryAddress gtk_menu_item_new_with_label ( Addressable label) {
        var mh$ = gtk_menu_item_new_with_label$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$1723.gtk_menu_item_new_with_mnemonic$MH,"gtk_menu_item_new_with_mnemonic");
    }
    public static MemoryAddress gtk_menu_item_new_with_mnemonic ( Addressable label) {
        var mh$ = gtk_menu_item_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_submenu$MH() {
        return RuntimeHelper.requireNonNull(constants$1723.gtk_menu_item_set_submenu$MH,"gtk_menu_item_set_submenu");
    }
    public static void gtk_menu_item_set_submenu ( Addressable menu_item,  Addressable submenu) {
        var mh$ = gtk_menu_item_set_submenu$MH();
        try {
            mh$.invokeExact(menu_item, submenu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_submenu$MH() {
        return RuntimeHelper.requireNonNull(constants$1723.gtk_menu_item_get_submenu$MH,"gtk_menu_item_get_submenu");
    }
    public static MemoryAddress gtk_menu_item_get_submenu ( Addressable menu_item) {
        var mh$ = gtk_menu_item_get_submenu$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_select$MH() {
        return RuntimeHelper.requireNonNull(constants$1724.gtk_menu_item_select$MH,"gtk_menu_item_select");
    }
    public static void gtk_menu_item_select ( Addressable menu_item) {
        var mh$ = gtk_menu_item_select$MH();
        try {
            mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_deselect$MH() {
        return RuntimeHelper.requireNonNull(constants$1724.gtk_menu_item_deselect$MH,"gtk_menu_item_deselect");
    }
    public static void gtk_menu_item_deselect ( Addressable menu_item) {
        var mh$ = gtk_menu_item_deselect$MH();
        try {
            mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1724.gtk_menu_item_activate$MH,"gtk_menu_item_activate");
    }
    public static void gtk_menu_item_activate ( Addressable menu_item) {
        var mh$ = gtk_menu_item_activate$MH();
        try {
            mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_toggle_size_request$MH() {
        return RuntimeHelper.requireNonNull(constants$1724.gtk_menu_item_toggle_size_request$MH,"gtk_menu_item_toggle_size_request");
    }
    public static void gtk_menu_item_toggle_size_request ( Addressable menu_item,  Addressable requisition) {
        var mh$ = gtk_menu_item_toggle_size_request$MH();
        try {
            mh$.invokeExact(menu_item, requisition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_toggle_size_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$1724.gtk_menu_item_toggle_size_allocate$MH,"gtk_menu_item_toggle_size_allocate");
    }
    public static void gtk_menu_item_toggle_size_allocate ( Addressable menu_item,  int allocation) {
        var mh$ = gtk_menu_item_toggle_size_allocate$MH();
        try {
            mh$.invokeExact(menu_item, allocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_right_justified$MH() {
        return RuntimeHelper.requireNonNull(constants$1724.gtk_menu_item_set_right_justified$MH,"gtk_menu_item_set_right_justified");
    }
    public static void gtk_menu_item_set_right_justified ( Addressable menu_item,  int right_justified) {
        var mh$ = gtk_menu_item_set_right_justified$MH();
        try {
            mh$.invokeExact(menu_item, right_justified);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_right_justified$MH() {
        return RuntimeHelper.requireNonNull(constants$1725.gtk_menu_item_get_right_justified$MH,"gtk_menu_item_get_right_justified");
    }
    public static int gtk_menu_item_get_right_justified ( Addressable menu_item) {
        var mh$ = gtk_menu_item_get_right_justified$MH();
        try {
            return (int)mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_accel_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1725.gtk_menu_item_set_accel_path$MH,"gtk_menu_item_set_accel_path");
    }
    public static void gtk_menu_item_set_accel_path ( Addressable menu_item,  Addressable accel_path) {
        var mh$ = gtk_menu_item_set_accel_path$MH();
        try {
            mh$.invokeExact(menu_item, accel_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_accel_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1725.gtk_menu_item_get_accel_path$MH,"gtk_menu_item_get_accel_path");
    }
    public static MemoryAddress gtk_menu_item_get_accel_path ( Addressable menu_item) {
        var mh$ = gtk_menu_item_get_accel_path$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1725.gtk_menu_item_set_label$MH,"gtk_menu_item_set_label");
    }
    public static void gtk_menu_item_set_label ( Addressable menu_item,  Addressable label) {
        var mh$ = gtk_menu_item_set_label$MH();
        try {
            mh$.invokeExact(menu_item, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1725.gtk_menu_item_get_label$MH,"gtk_menu_item_get_label");
    }
    public static MemoryAddress gtk_menu_item_get_label ( Addressable menu_item) {
        var mh$ = gtk_menu_item_get_label$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1725.gtk_menu_item_set_use_underline$MH,"gtk_menu_item_set_use_underline");
    }
    public static void gtk_menu_item_set_use_underline ( Addressable menu_item,  int setting) {
        var mh$ = gtk_menu_item_set_use_underline$MH();
        try {
            mh$.invokeExact(menu_item, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1726.gtk_menu_item_get_use_underline$MH,"gtk_menu_item_get_use_underline");
    }
    public static int gtk_menu_item_get_use_underline ( Addressable menu_item) {
        var mh$ = gtk_menu_item_get_use_underline$MH();
        try {
            return (int)mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_reserve_indicator$MH() {
        return RuntimeHelper.requireNonNull(constants$1726.gtk_menu_item_set_reserve_indicator$MH,"gtk_menu_item_set_reserve_indicator");
    }
    public static void gtk_menu_item_set_reserve_indicator ( Addressable menu_item,  int reserve) {
        var mh$ = gtk_menu_item_set_reserve_indicator$MH();
        try {
            mh$.invokeExact(menu_item, reserve);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_reserve_indicator$MH() {
        return RuntimeHelper.requireNonNull(constants$1726.gtk_menu_item_get_reserve_indicator$MH,"gtk_menu_item_get_reserve_indicator");
    }
    public static int gtk_menu_item_get_reserve_indicator ( Addressable menu_item) {
        var mh$ = gtk_menu_item_get_reserve_indicator$MH();
        try {
            return (int)mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1726.gtk_check_menu_item_get_type$MH,"gtk_check_menu_item_get_type");
    }
    public static long gtk_check_menu_item_get_type () {
        var mh$ = gtk_check_menu_item_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1726.gtk_check_menu_item_new$MH,"gtk_check_menu_item_new");
    }
    public static MemoryAddress gtk_check_menu_item_new () {
        var mh$ = gtk_check_menu_item_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_new_with_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1726.gtk_check_menu_item_new_with_label$MH,"gtk_check_menu_item_new_with_label");
    }
    public static MemoryAddress gtk_check_menu_item_new_with_label ( Addressable label) {
        var mh$ = gtk_check_menu_item_new_with_label$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$1727.gtk_check_menu_item_new_with_mnemonic$MH,"gtk_check_menu_item_new_with_mnemonic");
    }
    public static MemoryAddress gtk_check_menu_item_new_with_mnemonic ( Addressable label) {
        var mh$ = gtk_check_menu_item_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_set_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1727.gtk_check_menu_item_set_active$MH,"gtk_check_menu_item_set_active");
    }
    public static void gtk_check_menu_item_set_active ( Addressable check_menu_item,  int is_active) {
        var mh$ = gtk_check_menu_item_set_active$MH();
        try {
            mh$.invokeExact(check_menu_item, is_active);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_get_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1727.gtk_check_menu_item_get_active$MH,"gtk_check_menu_item_get_active");
    }
    public static int gtk_check_menu_item_get_active ( Addressable check_menu_item) {
        var mh$ = gtk_check_menu_item_get_active$MH();
        try {
            return (int)mh$.invokeExact(check_menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_toggled$MH() {
        return RuntimeHelper.requireNonNull(constants$1727.gtk_check_menu_item_toggled$MH,"gtk_check_menu_item_toggled");
    }
    public static void gtk_check_menu_item_toggled ( Addressable check_menu_item) {
        var mh$ = gtk_check_menu_item_toggled$MH();
        try {
            mh$.invokeExact(check_menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_set_inconsistent$MH() {
        return RuntimeHelper.requireNonNull(constants$1727.gtk_check_menu_item_set_inconsistent$MH,"gtk_check_menu_item_set_inconsistent");
    }
    public static void gtk_check_menu_item_set_inconsistent ( Addressable check_menu_item,  int setting) {
        var mh$ = gtk_check_menu_item_set_inconsistent$MH();
        try {
            mh$.invokeExact(check_menu_item, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_get_inconsistent$MH() {
        return RuntimeHelper.requireNonNull(constants$1727.gtk_check_menu_item_get_inconsistent$MH,"gtk_check_menu_item_get_inconsistent");
    }
    public static int gtk_check_menu_item_get_inconsistent ( Addressable check_menu_item) {
        var mh$ = gtk_check_menu_item_get_inconsistent$MH();
        try {
            return (int)mh$.invokeExact(check_menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_set_draw_as_radio$MH() {
        return RuntimeHelper.requireNonNull(constants$1728.gtk_check_menu_item_set_draw_as_radio$MH,"gtk_check_menu_item_set_draw_as_radio");
    }
    public static void gtk_check_menu_item_set_draw_as_radio ( Addressable check_menu_item,  int draw_as_radio) {
        var mh$ = gtk_check_menu_item_set_draw_as_radio$MH();
        try {
            mh$.invokeExact(check_menu_item, draw_as_radio);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_get_draw_as_radio$MH() {
        return RuntimeHelper.requireNonNull(constants$1728.gtk_check_menu_item_get_draw_as_radio$MH,"gtk_check_menu_item_get_draw_as_radio");
    }
    public static int gtk_check_menu_item_get_draw_as_radio ( Addressable check_menu_item) {
        var mh$ = gtk_check_menu_item_get_draw_as_radio$MH();
        try {
            return (int)mh$.invokeExact(check_menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1731.gtk_clipboard_get_type$MH,"gtk_clipboard_get_type");
    }
    public static long gtk_clipboard_get_type () {
        var mh$ = gtk_clipboard_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get_for_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1731.gtk_clipboard_get_for_display$MH,"gtk_clipboard_get_for_display");
    }
    public static MemoryAddress gtk_clipboard_get_for_display ( Addressable display,  Addressable selection) {
        var mh$ = gtk_clipboard_get_for_display$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display, selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1731.gtk_clipboard_get$MH,"gtk_clipboard_get");
    }
    public static MemoryAddress gtk_clipboard_get ( Addressable selection) {
        var mh$ = gtk_clipboard_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1731.gtk_clipboard_get_default$MH,"gtk_clipboard_get_default");
    }
    public static MemoryAddress gtk_clipboard_get_default ( Addressable display) {
        var mh$ = gtk_clipboard_get_default$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1731.gtk_clipboard_get_display$MH,"gtk_clipboard_get_display");
    }
    public static MemoryAddress gtk_clipboard_get_display ( Addressable clipboard) {
        var mh$ = gtk_clipboard_get_display$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_set_with_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1731.gtk_clipboard_set_with_data$MH,"gtk_clipboard_set_with_data");
    }
    public static int gtk_clipboard_set_with_data ( Addressable clipboard,  Addressable targets,  int n_targets,  Addressable get_func,  Addressable clear_func,  Addressable user_data) {
        var mh$ = gtk_clipboard_set_with_data$MH();
        try {
            return (int)mh$.invokeExact(clipboard, targets, n_targets, get_func, clear_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_set_with_owner$MH() {
        return RuntimeHelper.requireNonNull(constants$1732.gtk_clipboard_set_with_owner$MH,"gtk_clipboard_set_with_owner");
    }
    public static int gtk_clipboard_set_with_owner ( Addressable clipboard,  Addressable targets,  int n_targets,  Addressable get_func,  Addressable clear_func,  Addressable owner) {
        var mh$ = gtk_clipboard_set_with_owner$MH();
        try {
            return (int)mh$.invokeExact(clipboard, targets, n_targets, get_func, clear_func, owner);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get_owner$MH() {
        return RuntimeHelper.requireNonNull(constants$1732.gtk_clipboard_get_owner$MH,"gtk_clipboard_get_owner");
    }
    public static MemoryAddress gtk_clipboard_get_owner ( Addressable clipboard) {
        var mh$ = gtk_clipboard_get_owner$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$1732.gtk_clipboard_clear$MH,"gtk_clipboard_clear");
    }
    public static void gtk_clipboard_clear ( Addressable clipboard) {
        var mh$ = gtk_clipboard_clear$MH();
        try {
            mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1732.gtk_clipboard_set_text$MH,"gtk_clipboard_set_text");
    }
    public static void gtk_clipboard_set_text ( Addressable clipboard,  Addressable text,  int len) {
        var mh$ = gtk_clipboard_set_text$MH();
        try {
            mh$.invokeExact(clipboard, text, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_set_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1732.gtk_clipboard_set_image$MH,"gtk_clipboard_set_image");
    }
    public static void gtk_clipboard_set_image ( Addressable clipboard,  Addressable pixbuf) {
        var mh$ = gtk_clipboard_set_image$MH();
        try {
            mh$.invokeExact(clipboard, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_request_contents$MH() {
        return RuntimeHelper.requireNonNull(constants$1732.gtk_clipboard_request_contents$MH,"gtk_clipboard_request_contents");
    }
    public static void gtk_clipboard_request_contents ( Addressable clipboard,  Addressable target,  Addressable callback,  Addressable user_data) {
        var mh$ = gtk_clipboard_request_contents$MH();
        try {
            mh$.invokeExact(clipboard, target, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_request_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1733.gtk_clipboard_request_text$MH,"gtk_clipboard_request_text");
    }
    public static void gtk_clipboard_request_text ( Addressable clipboard,  Addressable callback,  Addressable user_data) {
        var mh$ = gtk_clipboard_request_text$MH();
        try {
            mh$.invokeExact(clipboard, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_request_rich_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1733.gtk_clipboard_request_rich_text$MH,"gtk_clipboard_request_rich_text");
    }
    public static void gtk_clipboard_request_rich_text ( Addressable clipboard,  Addressable buffer,  Addressable callback,  Addressable user_data) {
        var mh$ = gtk_clipboard_request_rich_text$MH();
        try {
            mh$.invokeExact(clipboard, buffer, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_request_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1733.gtk_clipboard_request_image$MH,"gtk_clipboard_request_image");
    }
    public static void gtk_clipboard_request_image ( Addressable clipboard,  Addressable callback,  Addressable user_data) {
        var mh$ = gtk_clipboard_request_image$MH();
        try {
            mh$.invokeExact(clipboard, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_request_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$1733.gtk_clipboard_request_uris$MH,"gtk_clipboard_request_uris");
    }
    public static void gtk_clipboard_request_uris ( Addressable clipboard,  Addressable callback,  Addressable user_data) {
        var mh$ = gtk_clipboard_request_uris$MH();
        try {
            mh$.invokeExact(clipboard, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_request_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$1733.gtk_clipboard_request_targets$MH,"gtk_clipboard_request_targets");
    }
    public static void gtk_clipboard_request_targets ( Addressable clipboard,  Addressable callback,  Addressable user_data) {
        var mh$ = gtk_clipboard_request_targets$MH();
        try {
            mh$.invokeExact(clipboard, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_for_contents$MH() {
        return RuntimeHelper.requireNonNull(constants$1733.gtk_clipboard_wait_for_contents$MH,"gtk_clipboard_wait_for_contents");
    }
    public static MemoryAddress gtk_clipboard_wait_for_contents ( Addressable clipboard,  Addressable target) {
        var mh$ = gtk_clipboard_wait_for_contents$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(clipboard, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_for_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1734.gtk_clipboard_wait_for_text$MH,"gtk_clipboard_wait_for_text");
    }
    public static MemoryAddress gtk_clipboard_wait_for_text ( Addressable clipboard) {
        var mh$ = gtk_clipboard_wait_for_text$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_for_rich_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1734.gtk_clipboard_wait_for_rich_text$MH,"gtk_clipboard_wait_for_rich_text");
    }
    public static MemoryAddress gtk_clipboard_wait_for_rich_text ( Addressable clipboard,  Addressable buffer,  Addressable format,  Addressable length) {
        var mh$ = gtk_clipboard_wait_for_rich_text$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(clipboard, buffer, format, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_for_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1734.gtk_clipboard_wait_for_image$MH,"gtk_clipboard_wait_for_image");
    }
    public static MemoryAddress gtk_clipboard_wait_for_image ( Addressable clipboard) {
        var mh$ = gtk_clipboard_wait_for_image$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_for_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$1734.gtk_clipboard_wait_for_uris$MH,"gtk_clipboard_wait_for_uris");
    }
    public static MemoryAddress gtk_clipboard_wait_for_uris ( Addressable clipboard) {
        var mh$ = gtk_clipboard_wait_for_uris$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_for_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$1734.gtk_clipboard_wait_for_targets$MH,"gtk_clipboard_wait_for_targets");
    }
    public static int gtk_clipboard_wait_for_targets ( Addressable clipboard,  Addressable targets,  Addressable n_targets) {
        var mh$ = gtk_clipboard_wait_for_targets$MH();
        try {
            return (int)mh$.invokeExact(clipboard, targets, n_targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_is_text_available$MH() {
        return RuntimeHelper.requireNonNull(constants$1734.gtk_clipboard_wait_is_text_available$MH,"gtk_clipboard_wait_is_text_available");
    }
    public static int gtk_clipboard_wait_is_text_available ( Addressable clipboard) {
        var mh$ = gtk_clipboard_wait_is_text_available$MH();
        try {
            return (int)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_is_rich_text_available$MH() {
        return RuntimeHelper.requireNonNull(constants$1735.gtk_clipboard_wait_is_rich_text_available$MH,"gtk_clipboard_wait_is_rich_text_available");
    }
    public static int gtk_clipboard_wait_is_rich_text_available ( Addressable clipboard,  Addressable buffer) {
        var mh$ = gtk_clipboard_wait_is_rich_text_available$MH();
        try {
            return (int)mh$.invokeExact(clipboard, buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_is_image_available$MH() {
        return RuntimeHelper.requireNonNull(constants$1735.gtk_clipboard_wait_is_image_available$MH,"gtk_clipboard_wait_is_image_available");
    }
    public static int gtk_clipboard_wait_is_image_available ( Addressable clipboard) {
        var mh$ = gtk_clipboard_wait_is_image_available$MH();
        try {
            return (int)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_is_uris_available$MH() {
        return RuntimeHelper.requireNonNull(constants$1735.gtk_clipboard_wait_is_uris_available$MH,"gtk_clipboard_wait_is_uris_available");
    }
    public static int gtk_clipboard_wait_is_uris_available ( Addressable clipboard) {
        var mh$ = gtk_clipboard_wait_is_uris_available$MH();
        try {
            return (int)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_is_target_available$MH() {
        return RuntimeHelper.requireNonNull(constants$1735.gtk_clipboard_wait_is_target_available$MH,"gtk_clipboard_wait_is_target_available");
    }
    public static int gtk_clipboard_wait_is_target_available ( Addressable clipboard,  Addressable target) {
        var mh$ = gtk_clipboard_wait_is_target_available$MH();
        try {
            return (int)mh$.invokeExact(clipboard, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_set_can_store$MH() {
        return RuntimeHelper.requireNonNull(constants$1735.gtk_clipboard_set_can_store$MH,"gtk_clipboard_set_can_store");
    }
    public static void gtk_clipboard_set_can_store ( Addressable clipboard,  Addressable targets,  int n_targets) {
        var mh$ = gtk_clipboard_set_can_store$MH();
        try {
            mh$.invokeExact(clipboard, targets, n_targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_store$MH() {
        return RuntimeHelper.requireNonNull(constants$1735.gtk_clipboard_store$MH,"gtk_clipboard_store");
    }
    public static void gtk_clipboard_store ( Addressable clipboard) {
        var mh$ = gtk_clipboard_store$MH();
        try {
            mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1736.gtk_clipboard_get_selection$MH,"gtk_clipboard_get_selection");
    }
    public static MemoryAddress gtk_clipboard_get_selection ( Addressable clipboard) {
        var mh$ = gtk_clipboard_get_selection$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1736.gtk_color_button_get_type$MH,"gtk_color_button_get_type");
    }
    public static long gtk_color_button_get_type () {
        var mh$ = gtk_color_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1736.gtk_color_button_new$MH,"gtk_color_button_new");
    }
    public static MemoryAddress gtk_color_button_new () {
        var mh$ = gtk_color_button_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_new_with_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1736.gtk_color_button_new_with_rgba$MH,"gtk_color_button_new_with_rgba");
    }
    public static MemoryAddress gtk_color_button_new_with_rgba ( Addressable rgba) {
        var mh$ = gtk_color_button_new_with_rgba$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1736.gtk_color_button_set_title$MH,"gtk_color_button_set_title");
    }
    public static void gtk_color_button_set_title ( Addressable button,  Addressable title) {
        var mh$ = gtk_color_button_set_title$MH();
        try {
            mh$.invokeExact(button, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1736.gtk_color_button_get_title$MH,"gtk_color_button_get_title");
    }
    public static MemoryAddress gtk_color_button_get_title ( Addressable button) {
        var mh$ = gtk_color_button_get_title$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_new_with_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1737.gtk_color_button_new_with_color$MH,"gtk_color_button_new_with_color");
    }
    public static MemoryAddress gtk_color_button_new_with_color ( Addressable color) {
        var mh$ = gtk_color_button_new_with_color$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_set_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1737.gtk_color_button_set_color$MH,"gtk_color_button_set_color");
    }
    public static void gtk_color_button_set_color ( Addressable button,  Addressable color) {
        var mh$ = gtk_color_button_set_color$MH();
        try {
            mh$.invokeExact(button, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_get_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1737.gtk_color_button_get_color$MH,"gtk_color_button_get_color");
    }
    public static void gtk_color_button_get_color ( Addressable button,  Addressable color) {
        var mh$ = gtk_color_button_get_color$MH();
        try {
            mh$.invokeExact(button, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_set_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1737.gtk_color_button_set_alpha$MH,"gtk_color_button_set_alpha");
    }
    public static void gtk_color_button_set_alpha ( Addressable button,  short alpha) {
        var mh$ = gtk_color_button_set_alpha$MH();
        try {
            mh$.invokeExact(button, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_get_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1737.gtk_color_button_get_alpha$MH,"gtk_color_button_get_alpha");
    }
    public static short gtk_color_button_get_alpha ( Addressable button) {
        var mh$ = gtk_color_button_get_alpha$MH();
        try {
            return (short)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_set_use_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1737.gtk_color_button_set_use_alpha$MH,"gtk_color_button_set_use_alpha");
    }
    public static void gtk_color_button_set_use_alpha ( Addressable button,  int use_alpha) {
        var mh$ = gtk_color_button_set_use_alpha$MH();
        try {
            mh$.invokeExact(button, use_alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_get_use_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1738.gtk_color_button_get_use_alpha$MH,"gtk_color_button_get_use_alpha");
    }
    public static int gtk_color_button_get_use_alpha ( Addressable button) {
        var mh$ = gtk_color_button_get_use_alpha$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_set_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1738.gtk_color_button_set_rgba$MH,"gtk_color_button_set_rgba");
    }
    public static void gtk_color_button_set_rgba ( Addressable button,  Addressable rgba) {
        var mh$ = gtk_color_button_set_rgba$MH();
        try {
            mh$.invokeExact(button, rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_get_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1738.gtk_color_button_get_rgba$MH,"gtk_color_button_get_rgba");
    }
    public static void gtk_color_button_get_rgba ( Addressable button,  Addressable rgba) {
        var mh$ = gtk_color_button_get_rgba$MH();
        try {
            mh$.invokeExact(button, rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1738.gtk_color_chooser_get_type$MH,"gtk_color_chooser_get_type");
    }
    public static long gtk_color_chooser_get_type () {
        var mh$ = gtk_color_chooser_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_get_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1738.gtk_color_chooser_get_rgba$MH,"gtk_color_chooser_get_rgba");
    }
    public static void gtk_color_chooser_get_rgba ( Addressable chooser,  Addressable color) {
        var mh$ = gtk_color_chooser_get_rgba$MH();
        try {
            mh$.invokeExact(chooser, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_set_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1738.gtk_color_chooser_set_rgba$MH,"gtk_color_chooser_set_rgba");
    }
    public static void gtk_color_chooser_set_rgba ( Addressable chooser,  Addressable color) {
        var mh$ = gtk_color_chooser_set_rgba$MH();
        try {
            mh$.invokeExact(chooser, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_get_use_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1739.gtk_color_chooser_get_use_alpha$MH,"gtk_color_chooser_get_use_alpha");
    }
    public static int gtk_color_chooser_get_use_alpha ( Addressable chooser) {
        var mh$ = gtk_color_chooser_get_use_alpha$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_set_use_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1739.gtk_color_chooser_set_use_alpha$MH,"gtk_color_chooser_set_use_alpha");
    }
    public static void gtk_color_chooser_set_use_alpha ( Addressable chooser,  int use_alpha) {
        var mh$ = gtk_color_chooser_set_use_alpha$MH();
        try {
            mh$.invokeExact(chooser, use_alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_add_palette$MH() {
        return RuntimeHelper.requireNonNull(constants$1739.gtk_color_chooser_add_palette$MH,"gtk_color_chooser_add_palette");
    }
    public static void gtk_color_chooser_add_palette ( Addressable chooser,  int orientation,  int colors_per_line,  int n_colors,  Addressable colors) {
        var mh$ = gtk_color_chooser_add_palette$MH();
        try {
            mh$.invokeExact(chooser, orientation, colors_per_line, n_colors, colors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1739.gtk_color_chooser_dialog_get_type$MH,"gtk_color_chooser_dialog_get_type");
    }
    public static long gtk_color_chooser_dialog_get_type () {
        var mh$ = gtk_color_chooser_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1739.gtk_color_chooser_dialog_new$MH,"gtk_color_chooser_dialog_new");
    }
    public static MemoryAddress gtk_color_chooser_dialog_new ( Addressable title,  Addressable parent) {
        var mh$ = gtk_color_chooser_dialog_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(title, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_widget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1739.gtk_color_chooser_widget_get_type$MH,"gtk_color_chooser_widget_get_type");
    }
    public static long gtk_color_chooser_widget_get_type () {
        var mh$ = gtk_color_chooser_widget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_widget_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1740.gtk_color_chooser_widget_new$MH,"gtk_color_chooser_widget_new");
    }
    public static MemoryAddress gtk_color_chooser_widget_new () {
        var mh$ = gtk_color_chooser_widget_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_hsv_to_rgb$MH() {
        return RuntimeHelper.requireNonNull(constants$1740.gtk_hsv_to_rgb$MH,"gtk_hsv_to_rgb");
    }
    public static void gtk_hsv_to_rgb ( double h,  double s,  double v,  Addressable r,  Addressable g,  Addressable b) {
        var mh$ = gtk_hsv_to_rgb$MH();
        try {
            mh$.invokeExact(h, s, v, r, g, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_rgb_to_hsv$MH() {
        return RuntimeHelper.requireNonNull(constants$1740.gtk_rgb_to_hsv$MH,"gtk_rgb_to_hsv");
    }
    public static void gtk_rgb_to_hsv ( double r,  double g,  double b,  Addressable h,  Addressable s,  Addressable v) {
        var mh$ = gtk_rgb_to_hsv$MH();
        try {
            mh$.invokeExact(r, g, b, h, s, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1740.gtk_combo_box_text_get_type$MH,"gtk_combo_box_text_get_type");
    }
    public static long gtk_combo_box_text_get_type () {
        var mh$ = gtk_combo_box_text_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1740.gtk_combo_box_text_new$MH,"gtk_combo_box_text_new");
    }
    public static MemoryAddress gtk_combo_box_text_new () {
        var mh$ = gtk_combo_box_text_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_new_with_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1740.gtk_combo_box_text_new_with_entry$MH,"gtk_combo_box_text_new_with_entry");
    }
    public static MemoryAddress gtk_combo_box_text_new_with_entry () {
        var mh$ = gtk_combo_box_text_new_with_entry$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_append_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1741.gtk_combo_box_text_append_text$MH,"gtk_combo_box_text_append_text");
    }
    public static void gtk_combo_box_text_append_text ( Addressable combo_box,  Addressable text) {
        var mh$ = gtk_combo_box_text_append_text$MH();
        try {
            mh$.invokeExact(combo_box, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_insert_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1741.gtk_combo_box_text_insert_text$MH,"gtk_combo_box_text_insert_text");
    }
    public static void gtk_combo_box_text_insert_text ( Addressable combo_box,  int position,  Addressable text) {
        var mh$ = gtk_combo_box_text_insert_text$MH();
        try {
            mh$.invokeExact(combo_box, position, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_prepend_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1741.gtk_combo_box_text_prepend_text$MH,"gtk_combo_box_text_prepend_text");
    }
    public static void gtk_combo_box_text_prepend_text ( Addressable combo_box,  Addressable text) {
        var mh$ = gtk_combo_box_text_prepend_text$MH();
        try {
            mh$.invokeExact(combo_box, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1741.gtk_combo_box_text_remove$MH,"gtk_combo_box_text_remove");
    }
    public static void gtk_combo_box_text_remove ( Addressable combo_box,  int position) {
        var mh$ = gtk_combo_box_text_remove$MH();
        try {
            mh$.invokeExact(combo_box, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_remove_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1741.gtk_combo_box_text_remove_all$MH,"gtk_combo_box_text_remove_all");
    }
    public static void gtk_combo_box_text_remove_all ( Addressable combo_box) {
        var mh$ = gtk_combo_box_text_remove_all$MH();
        try {
            mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_get_active_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1741.gtk_combo_box_text_get_active_text$MH,"gtk_combo_box_text_get_active_text");
    }
    public static MemoryAddress gtk_combo_box_text_get_active_text ( Addressable combo_box) {
        var mh$ = gtk_combo_box_text_get_active_text$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$1742.gtk_combo_box_text_insert$MH,"gtk_combo_box_text_insert");
    }
    public static void gtk_combo_box_text_insert ( Addressable combo_box,  int position,  Addressable id,  Addressable text) {
        var mh$ = gtk_combo_box_text_insert$MH();
        try {
            mh$.invokeExact(combo_box, position, id, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_append$MH() {
        return RuntimeHelper.requireNonNull(constants$1742.gtk_combo_box_text_append$MH,"gtk_combo_box_text_append");
    }
    public static void gtk_combo_box_text_append ( Addressable combo_box,  Addressable id,  Addressable text) {
        var mh$ = gtk_combo_box_text_append$MH();
        try {
            mh$.invokeExact(combo_box, id, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$1742.gtk_combo_box_text_prepend$MH,"gtk_combo_box_text_prepend");
    }
    public static void gtk_combo_box_text_prepend ( Addressable combo_box,  Addressable id,  Addressable text) {
        var mh$ = gtk_combo_box_text_prepend$MH();
        try {
            mh$.invokeExact(combo_box, id, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_CSS_SECTION_DOCUMENT() {
        return (int)0L;
    }
    public static int GTK_CSS_SECTION_IMPORT() {
        return (int)1L;
    }
    public static int GTK_CSS_SECTION_COLOR_DEFINITION() {
        return (int)2L;
    }
    public static int GTK_CSS_SECTION_BINDING_SET() {
        return (int)3L;
    }
    public static int GTK_CSS_SECTION_RULESET() {
        return (int)4L;
    }
    public static int GTK_CSS_SECTION_SELECTOR() {
        return (int)5L;
    }
    public static int GTK_CSS_SECTION_DECLARATION() {
        return (int)6L;
    }
    public static int GTK_CSS_SECTION_VALUE() {
        return (int)7L;
    }
    public static int GTK_CSS_SECTION_KEYFRAMES() {
        return (int)8L;
    }
    public static MethodHandle gtk_css_section_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1742.gtk_css_section_get_type$MH,"gtk_css_section_get_type");
    }
    public static long gtk_css_section_get_type () {
        var mh$ = gtk_css_section_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1742.gtk_css_section_ref$MH,"gtk_css_section_ref");
    }
    public static MemoryAddress gtk_css_section_ref ( Addressable section) {
        var mh$ = gtk_css_section_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1742.gtk_css_section_unref$MH,"gtk_css_section_unref");
    }
    public static void gtk_css_section_unref ( Addressable section) {
        var mh$ = gtk_css_section_unref$MH();
        try {
            mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_section_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1743.gtk_css_section_get_section_type$MH,"gtk_css_section_get_section_type");
    }
    public static int gtk_css_section_get_section_type ( Addressable section) {
        var mh$ = gtk_css_section_get_section_type$MH();
        try {
            return (int)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1743.gtk_css_section_get_parent$MH,"gtk_css_section_get_parent");
    }
    public static MemoryAddress gtk_css_section_get_parent ( Addressable section) {
        var mh$ = gtk_css_section_get_parent$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1743.gtk_css_section_get_file$MH,"gtk_css_section_get_file");
    }
    public static MemoryAddress gtk_css_section_get_file ( Addressable section) {
        var mh$ = gtk_css_section_get_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_start_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1743.gtk_css_section_get_start_line$MH,"gtk_css_section_get_start_line");
    }
    public static int gtk_css_section_get_start_line ( Addressable section) {
        var mh$ = gtk_css_section_get_start_line$MH();
        try {
            return (int)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_start_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1743.gtk_css_section_get_start_position$MH,"gtk_css_section_get_start_position");
    }
    public static int gtk_css_section_get_start_position ( Addressable section) {
        var mh$ = gtk_css_section_get_start_position$MH();
        try {
            return (int)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_end_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1743.gtk_css_section_get_end_line$MH,"gtk_css_section_get_end_line");
    }
    public static int gtk_css_section_get_end_line ( Addressable section) {
        var mh$ = gtk_css_section_get_end_line$MH();
        try {
            return (int)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_end_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1744.gtk_css_section_get_end_position$MH,"gtk_css_section_get_end_position");
    }
    public static int gtk_css_section_get_end_position ( Addressable section) {
        var mh$ = gtk_css_section_get_end_position$MH();
        try {
            return (int)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_CSS_PROVIDER_ERROR_FAILED() {
        return (int)0L;
    }
    public static int GTK_CSS_PROVIDER_ERROR_SYNTAX() {
        return (int)1L;
    }
    public static int GTK_CSS_PROVIDER_ERROR_IMPORT() {
        return (int)2L;
    }
    public static int GTK_CSS_PROVIDER_ERROR_NAME() {
        return (int)3L;
    }
    public static int GTK_CSS_PROVIDER_ERROR_DEPRECATED() {
        return (int)4L;
    }
    public static int GTK_CSS_PROVIDER_ERROR_UNKNOWN_VALUE() {
        return (int)5L;
    }
    public static MethodHandle gtk_css_provider_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1744.gtk_css_provider_error_quark$MH,"gtk_css_provider_error_quark");
    }
    public static int gtk_css_provider_error_quark () {
        var mh$ = gtk_css_provider_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1744.gtk_css_provider_get_type$MH,"gtk_css_provider_get_type");
    }
    public static long gtk_css_provider_get_type () {
        var mh$ = gtk_css_provider_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1744.gtk_css_provider_new$MH,"gtk_css_provider_new");
    }
    public static MemoryAddress gtk_css_provider_new () {
        var mh$ = gtk_css_provider_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1744.gtk_css_provider_to_string$MH,"gtk_css_provider_to_string");
    }
    public static MemoryAddress gtk_css_provider_to_string ( Addressable provider) {
        var mh$ = gtk_css_provider_to_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(provider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1744.gtk_css_provider_load_from_data$MH,"gtk_css_provider_load_from_data");
    }
    public static int gtk_css_provider_load_from_data ( Addressable css_provider,  Addressable data,  long length,  Addressable error) {
        var mh$ = gtk_css_provider_load_from_data$MH();
        try {
            return (int)mh$.invokeExact(css_provider, data, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1745.gtk_css_provider_load_from_file$MH,"gtk_css_provider_load_from_file");
    }
    public static int gtk_css_provider_load_from_file ( Addressable css_provider,  Addressable file,  Addressable error) {
        var mh$ = gtk_css_provider_load_from_file$MH();
        try {
            return (int)mh$.invokeExact(css_provider, file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1745.gtk_css_provider_load_from_path$MH,"gtk_css_provider_load_from_path");
    }
    public static int gtk_css_provider_load_from_path ( Addressable css_provider,  Addressable path,  Addressable error) {
        var mh$ = gtk_css_provider_load_from_path$MH();
        try {
            return (int)mh$.invokeExact(css_provider, path, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1745.gtk_css_provider_load_from_resource$MH,"gtk_css_provider_load_from_resource");
    }
    public static void gtk_css_provider_load_from_resource ( Addressable css_provider,  Addressable resource_path) {
        var mh$ = gtk_css_provider_load_from_resource$MH();
        try {
            mh$.invokeExact(css_provider, resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1745.gtk_css_provider_get_default$MH,"gtk_css_provider_get_default");
    }
    public static MemoryAddress gtk_css_provider_get_default () {
        var mh$ = gtk_css_provider_get_default$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_get_named$MH() {
        return RuntimeHelper.requireNonNull(constants$1745.gtk_css_provider_get_named$MH,"gtk_css_provider_get_named");
    }
    public static MemoryAddress gtk_css_provider_get_named ( Addressable name,  Addressable variant) {
        var mh$ = gtk_css_provider_get_named$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_DEBUG_MISC() {
        return (int)1L;
    }
    public static int GTK_DEBUG_PLUGSOCKET() {
        return (int)2L;
    }
    public static int GTK_DEBUG_TEXT() {
        return (int)4L;
    }
    public static int GTK_DEBUG_TREE() {
        return (int)8L;
    }
    public static int GTK_DEBUG_UPDATES() {
        return (int)16L;
    }
    public static int GTK_DEBUG_KEYBINDINGS() {
        return (int)32L;
    }
    public static int GTK_DEBUG_MULTIHEAD() {
        return (int)64L;
    }
    public static int GTK_DEBUG_MODULES() {
        return (int)128L;
    }
    public static int GTK_DEBUG_GEOMETRY() {
        return (int)256L;
    }
    public static int GTK_DEBUG_ICONTHEME() {
        return (int)512L;
    }
    public static int GTK_DEBUG_PRINTING() {
        return (int)1024L;
    }
    public static int GTK_DEBUG_BUILDER() {
        return (int)2048L;
    }
    public static int GTK_DEBUG_SIZE_REQUEST() {
        return (int)4096L;
    }
    public static int GTK_DEBUG_NO_CSS_CACHE() {
        return (int)8192L;
    }
    public static int GTK_DEBUG_BASELINES() {
        return (int)16384L;
    }
    public static int GTK_DEBUG_PIXEL_CACHE() {
        return (int)32768L;
    }
    public static int GTK_DEBUG_NO_PIXEL_CACHE() {
        return (int)65536L;
    }
    public static int GTK_DEBUG_INTERACTIVE() {
        return (int)131072L;
    }
    public static int GTK_DEBUG_TOUCHSCREEN() {
        return (int)262144L;
    }
    public static int GTK_DEBUG_ACTIONS() {
        return (int)524288L;
    }
    public static int GTK_DEBUG_RESIZE() {
        return (int)1048576L;
    }
    public static int GTK_DEBUG_LAYOUT() {
        return (int)2097152L;
    }
    public static MethodHandle gtk_get_debug_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1745.gtk_get_debug_flags$MH,"gtk_get_debug_flags");
    }
    public static int gtk_get_debug_flags () {
        var mh$ = gtk_get_debug_flags$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_set_debug_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1746.gtk_set_debug_flags$MH,"gtk_set_debug_flags");
    }
    public static void gtk_set_debug_flags ( int flags) {
        var mh$ = gtk_set_debug_flags$MH();
        try {
            mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_DEST_DEFAULT_MOTION() {
        return (int)1L;
    }
    public static int GTK_DEST_DEFAULT_HIGHLIGHT() {
        return (int)2L;
    }
    public static int GTK_DEST_DEFAULT_DROP() {
        return (int)4L;
    }
    public static int GTK_DEST_DEFAULT_ALL() {
        return (int)7L;
    }
    public static MethodHandle gtk_drag_dest_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1746.gtk_drag_dest_set$MH,"gtk_drag_dest_set");
    }
    public static void gtk_drag_dest_set ( Addressable widget,  int flags,  Addressable targets,  int n_targets,  int actions) {
        var mh$ = gtk_drag_dest_set$MH();
        try {
            mh$.invokeExact(widget, flags, targets, n_targets, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_set_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1746.gtk_drag_dest_set_proxy$MH,"gtk_drag_dest_set_proxy");
    }
    public static void gtk_drag_dest_set_proxy ( Addressable widget,  Addressable proxy_window,  int protocol,  int use_coordinates) {
        var mh$ = gtk_drag_dest_set_proxy$MH();
        try {
            mh$.invokeExact(widget, proxy_window, protocol, use_coordinates);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_unset$MH() {
        return RuntimeHelper.requireNonNull(constants$1746.gtk_drag_dest_unset$MH,"gtk_drag_dest_unset");
    }
    public static void gtk_drag_dest_unset ( Addressable widget) {
        var mh$ = gtk_drag_dest_unset$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_find_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1746.gtk_drag_dest_find_target$MH,"gtk_drag_dest_find_target");
    }
    public static MemoryAddress gtk_drag_dest_find_target ( Addressable widget,  Addressable context,  Addressable target_list) {
        var mh$ = gtk_drag_dest_find_target$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(widget, context, target_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_get_target_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1746.gtk_drag_dest_get_target_list$MH,"gtk_drag_dest_get_target_list");
    }
    public static MemoryAddress gtk_drag_dest_get_target_list ( Addressable widget) {
        var mh$ = gtk_drag_dest_get_target_list$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_set_target_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1747.gtk_drag_dest_set_target_list$MH,"gtk_drag_dest_set_target_list");
    }
    public static void gtk_drag_dest_set_target_list ( Addressable widget,  Addressable target_list) {
        var mh$ = gtk_drag_dest_set_target_list$MH();
        try {
            mh$.invokeExact(widget, target_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_add_text_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$1747.gtk_drag_dest_add_text_targets$MH,"gtk_drag_dest_add_text_targets");
    }
    public static void gtk_drag_dest_add_text_targets ( Addressable widget) {
        var mh$ = gtk_drag_dest_add_text_targets$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_add_image_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$1747.gtk_drag_dest_add_image_targets$MH,"gtk_drag_dest_add_image_targets");
    }
    public static void gtk_drag_dest_add_image_targets ( Addressable widget) {
        var mh$ = gtk_drag_dest_add_image_targets$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_add_uri_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$1747.gtk_drag_dest_add_uri_targets$MH,"gtk_drag_dest_add_uri_targets");
    }
    public static void gtk_drag_dest_add_uri_targets ( Addressable widget) {
        var mh$ = gtk_drag_dest_add_uri_targets$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_set_track_motion$MH() {
        return RuntimeHelper.requireNonNull(constants$1747.gtk_drag_dest_set_track_motion$MH,"gtk_drag_dest_set_track_motion");
    }
    public static void gtk_drag_dest_set_track_motion ( Addressable widget,  int track_motion) {
        var mh$ = gtk_drag_dest_set_track_motion$MH();
        try {
            mh$.invokeExact(widget, track_motion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_get_track_motion$MH() {
        return RuntimeHelper.requireNonNull(constants$1747.gtk_drag_dest_get_track_motion$MH,"gtk_drag_dest_get_track_motion");
    }
    public static int gtk_drag_dest_get_track_motion ( Addressable widget) {
        var mh$ = gtk_drag_dest_get_track_motion$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1748.gtk_drag_source_set$MH,"gtk_drag_source_set");
    }
    public static void gtk_drag_source_set ( Addressable widget,  int start_button_mask,  Addressable targets,  int n_targets,  int actions) {
        var mh$ = gtk_drag_source_set$MH();
        try {
            mh$.invokeExact(widget, start_button_mask, targets, n_targets, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_unset$MH() {
        return RuntimeHelper.requireNonNull(constants$1748.gtk_drag_source_unset$MH,"gtk_drag_source_unset");
    }
    public static void gtk_drag_source_unset ( Addressable widget) {
        var mh$ = gtk_drag_source_unset$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_get_target_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1748.gtk_drag_source_get_target_list$MH,"gtk_drag_source_get_target_list");
    }
    public static MemoryAddress gtk_drag_source_get_target_list ( Addressable widget) {
        var mh$ = gtk_drag_source_get_target_list$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_target_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1748.gtk_drag_source_set_target_list$MH,"gtk_drag_source_set_target_list");
    }
    public static void gtk_drag_source_set_target_list ( Addressable widget,  Addressable target_list) {
        var mh$ = gtk_drag_source_set_target_list$MH();
        try {
            mh$.invokeExact(widget, target_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_add_text_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$1748.gtk_drag_source_add_text_targets$MH,"gtk_drag_source_add_text_targets");
    }
    public static void gtk_drag_source_add_text_targets ( Addressable widget) {
        var mh$ = gtk_drag_source_add_text_targets$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_add_image_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$1748.gtk_drag_source_add_image_targets$MH,"gtk_drag_source_add_image_targets");
    }
    public static void gtk_drag_source_add_image_targets ( Addressable widget) {
        var mh$ = gtk_drag_source_add_image_targets$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_add_uri_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$1749.gtk_drag_source_add_uri_targets$MH,"gtk_drag_source_add_uri_targets");
    }
    public static void gtk_drag_source_add_uri_targets ( Addressable widget) {
        var mh$ = gtk_drag_source_add_uri_targets$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_icon_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1749.gtk_drag_source_set_icon_pixbuf$MH,"gtk_drag_source_set_icon_pixbuf");
    }
    public static void gtk_drag_source_set_icon_pixbuf ( Addressable widget,  Addressable pixbuf) {
        var mh$ = gtk_drag_source_set_icon_pixbuf$MH();
        try {
            mh$.invokeExact(widget, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_icon_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$1749.gtk_drag_source_set_icon_stock$MH,"gtk_drag_source_set_icon_stock");
    }
    public static void gtk_drag_source_set_icon_stock ( Addressable widget,  Addressable stock_id) {
        var mh$ = gtk_drag_source_set_icon_stock$MH();
        try {
            mh$.invokeExact(widget, stock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1749.gtk_drag_source_set_icon_name$MH,"gtk_drag_source_set_icon_name");
    }
    public static void gtk_drag_source_set_icon_name ( Addressable widget,  Addressable icon_name) {
        var mh$ = gtk_drag_source_set_icon_name$MH();
        try {
            mh$.invokeExact(widget, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_icon_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$1749.gtk_drag_source_set_icon_gicon$MH,"gtk_drag_source_set_icon_gicon");
    }
    public static void gtk_drag_source_set_icon_gicon ( Addressable widget,  Addressable icon) {
        var mh$ = gtk_drag_source_set_icon_gicon$MH();
        try {
            mh$.invokeExact(widget, icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1749.gtk_drawing_area_get_type$MH,"gtk_drawing_area_get_type");
    }
    public static long gtk_drawing_area_get_type () {
        var mh$ = gtk_drawing_area_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1750.gtk_drawing_area_new$MH,"gtk_drawing_area_new");
    }
    public static MemoryAddress gtk_drawing_area_new () {
        var mh$ = gtk_drawing_area_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1750.gtk_event_box_get_type$MH,"gtk_event_box_get_type");
    }
    public static long gtk_event_box_get_type () {
        var mh$ = gtk_event_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1750.gtk_event_box_new$MH,"gtk_event_box_new");
    }
    public static MemoryAddress gtk_event_box_new () {
        var mh$ = gtk_event_box_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_box_get_visible_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1750.gtk_event_box_get_visible_window$MH,"gtk_event_box_get_visible_window");
    }
    public static int gtk_event_box_get_visible_window ( Addressable event_box) {
        var mh$ = gtk_event_box_get_visible_window$MH();
        try {
            return (int)mh$.invokeExact(event_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_box_set_visible_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1750.gtk_event_box_set_visible_window$MH,"gtk_event_box_set_visible_window");
    }
    public static void gtk_event_box_set_visible_window ( Addressable event_box,  int visible_window) {
        var mh$ = gtk_event_box_set_visible_window$MH();
        try {
            mh$.invokeExact(event_box, visible_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_box_get_above_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1750.gtk_event_box_get_above_child$MH,"gtk_event_box_get_above_child");
    }
    public static int gtk_event_box_get_above_child ( Addressable event_box) {
        var mh$ = gtk_event_box_get_above_child$MH();
        try {
            return (int)mh$.invokeExact(event_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_box_set_above_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1751.gtk_event_box_set_above_child$MH,"gtk_event_box_set_above_child");
    }
    public static void gtk_event_box_set_above_child ( Addressable event_box,  int above_child) {
        var mh$ = gtk_event_box_set_above_child$MH();
        try {
            mh$.invokeExact(event_box, above_child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1751.gtk_event_controller_get_type$MH,"gtk_event_controller_get_type");
    }
    public static long gtk_event_controller_get_type () {
        var mh$ = gtk_event_controller_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1751.gtk_event_controller_get_widget$MH,"gtk_event_controller_get_widget");
    }
    public static MemoryAddress gtk_event_controller_get_widget ( Addressable controller) {
        var mh$ = gtk_event_controller_get_widget$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_handle_event$MH() {
        return RuntimeHelper.requireNonNull(constants$1751.gtk_event_controller_handle_event$MH,"gtk_event_controller_handle_event");
    }
    public static int gtk_event_controller_handle_event ( Addressable controller,  Addressable event) {
        var mh$ = gtk_event_controller_handle_event$MH();
        try {
            return (int)mh$.invokeExact(controller, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$1751.gtk_event_controller_reset$MH,"gtk_event_controller_reset");
    }
    public static void gtk_event_controller_reset ( Addressable controller) {
        var mh$ = gtk_event_controller_reset$MH();
        try {
            mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_propagation_phase$MH() {
        return RuntimeHelper.requireNonNull(constants$1751.gtk_event_controller_get_propagation_phase$MH,"gtk_event_controller_get_propagation_phase");
    }
    public static int gtk_event_controller_get_propagation_phase ( Addressable controller) {
        var mh$ = gtk_event_controller_get_propagation_phase$MH();
        try {
            return (int)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_set_propagation_phase$MH() {
        return RuntimeHelper.requireNonNull(constants$1752.gtk_event_controller_set_propagation_phase$MH,"gtk_event_controller_set_propagation_phase");
    }
    public static void gtk_event_controller_set_propagation_phase ( Addressable controller,  int phase) {
        var mh$ = gtk_event_controller_set_propagation_phase$MH();
        try {
            mh$.invokeExact(controller, phase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1752.gtk_event_controller_key_get_type$MH,"gtk_event_controller_key_get_type");
    }
    public static long gtk_event_controller_key_get_type () {
        var mh$ = gtk_event_controller_key_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1752.gtk_event_controller_key_new$MH,"gtk_event_controller_key_new");
    }
    public static MemoryAddress gtk_event_controller_key_new ( Addressable widget) {
        var mh$ = gtk_event_controller_key_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_set_im_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1752.gtk_event_controller_key_set_im_context$MH,"gtk_event_controller_key_set_im_context");
    }
    public static void gtk_event_controller_key_set_im_context ( Addressable controller,  Addressable im_context) {
        var mh$ = gtk_event_controller_key_set_im_context$MH();
        try {
            mh$.invokeExact(controller, im_context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_get_im_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1752.gtk_event_controller_key_get_im_context$MH,"gtk_event_controller_key_get_im_context");
    }
    public static MemoryAddress gtk_event_controller_key_get_im_context ( Addressable controller) {
        var mh$ = gtk_event_controller_key_get_im_context$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_forward$MH() {
        return RuntimeHelper.requireNonNull(constants$1752.gtk_event_controller_key_forward$MH,"gtk_event_controller_key_forward");
    }
    public static int gtk_event_controller_key_forward ( Addressable controller,  Addressable widget) {
        var mh$ = gtk_event_controller_key_forward$MH();
        try {
            return (int)mh$.invokeExact(controller, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_get_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1753.gtk_event_controller_key_get_group$MH,"gtk_event_controller_key_get_group");
    }
    public static int gtk_event_controller_key_get_group ( Addressable controller) {
        var mh$ = gtk_event_controller_key_get_group$MH();
        try {
            return (int)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_motion_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1753.gtk_event_controller_motion_get_type$MH,"gtk_event_controller_motion_get_type");
    }
    public static long gtk_event_controller_motion_get_type () {
        var mh$ = gtk_event_controller_motion_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_motion_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1753.gtk_event_controller_motion_new$MH,"gtk_event_controller_motion_new");
    }
    public static MemoryAddress gtk_event_controller_motion_new ( Addressable widget) {
        var mh$ = gtk_event_controller_motion_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_EVENT_CONTROLLER_SCROLL_NONE() {
        return (int)0L;
    }
    public static int GTK_EVENT_CONTROLLER_SCROLL_VERTICAL() {
        return (int)1L;
    }
    public static int GTK_EVENT_CONTROLLER_SCROLL_HORIZONTAL() {
        return (int)2L;
    }
    public static int GTK_EVENT_CONTROLLER_SCROLL_DISCRETE() {
        return (int)4L;
    }
    public static int GTK_EVENT_CONTROLLER_SCROLL_KINETIC() {
        return (int)8L;
    }
    public static int GTK_EVENT_CONTROLLER_SCROLL_BOTH_AXES() {
        return (int)3L;
    }
    public static MethodHandle gtk_event_controller_scroll_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1753.gtk_event_controller_scroll_get_type$MH,"gtk_event_controller_scroll_get_type");
    }
    public static long gtk_event_controller_scroll_get_type () {
        var mh$ = gtk_event_controller_scroll_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_scroll_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1753.gtk_event_controller_scroll_new$MH,"gtk_event_controller_scroll_new");
    }
    public static MemoryAddress gtk_event_controller_scroll_new ( Addressable widget,  int flags) {
        var mh$ = gtk_event_controller_scroll_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(widget, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_scroll_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1753.gtk_event_controller_scroll_set_flags$MH,"gtk_event_controller_scroll_set_flags");
    }
    public static void gtk_event_controller_scroll_set_flags ( Addressable controller,  int flags) {
        var mh$ = gtk_event_controller_scroll_set_flags$MH();
        try {
            mh$.invokeExact(controller, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_scroll_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1754.gtk_event_controller_scroll_get_flags$MH,"gtk_event_controller_scroll_get_flags");
    }
    public static int gtk_event_controller_scroll_get_flags ( Addressable controller) {
        var mh$ = gtk_event_controller_scroll_get_flags$MH();
        try {
            return (int)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1754.gtk_expander_get_type$MH,"gtk_expander_get_type");
    }
    public static long gtk_expander_get_type () {
        var mh$ = gtk_expander_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1754.gtk_expander_new$MH,"gtk_expander_new");
    }
    public static MemoryAddress gtk_expander_new ( Addressable label) {
        var mh$ = gtk_expander_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$1754.gtk_expander_new_with_mnemonic$MH,"gtk_expander_new_with_mnemonic");
    }
    public static MemoryAddress gtk_expander_new_with_mnemonic ( Addressable label) {
        var mh$ = gtk_expander_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_expanded$MH() {
        return RuntimeHelper.requireNonNull(constants$1754.gtk_expander_set_expanded$MH,"gtk_expander_set_expanded");
    }
    public static void gtk_expander_set_expanded ( Addressable expander,  int expanded) {
        var mh$ = gtk_expander_set_expanded$MH();
        try {
            mh$.invokeExact(expander, expanded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_expanded$MH() {
        return RuntimeHelper.requireNonNull(constants$1754.gtk_expander_get_expanded$MH,"gtk_expander_get_expanded");
    }
    public static int gtk_expander_get_expanded ( Addressable expander) {
        var mh$ = gtk_expander_get_expanded$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1755.gtk_expander_set_spacing$MH,"gtk_expander_set_spacing");
    }
    public static void gtk_expander_set_spacing ( Addressable expander,  int spacing) {
        var mh$ = gtk_expander_set_spacing$MH();
        try {
            mh$.invokeExact(expander, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1755.gtk_expander_get_spacing$MH,"gtk_expander_get_spacing");
    }
    public static int gtk_expander_get_spacing ( Addressable expander) {
        var mh$ = gtk_expander_get_spacing$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1755.gtk_expander_set_label$MH,"gtk_expander_set_label");
    }
    public static void gtk_expander_set_label ( Addressable expander,  Addressable label) {
        var mh$ = gtk_expander_set_label$MH();
        try {
            mh$.invokeExact(expander, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1755.gtk_expander_get_label$MH,"gtk_expander_get_label");
    }
    public static MemoryAddress gtk_expander_get_label ( Addressable expander) {
        var mh$ = gtk_expander_get_label$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1755.gtk_expander_set_use_underline$MH,"gtk_expander_set_use_underline");
    }
    public static void gtk_expander_set_use_underline ( Addressable expander,  int use_underline) {
        var mh$ = gtk_expander_set_use_underline$MH();
        try {
            mh$.invokeExact(expander, use_underline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1755.gtk_expander_get_use_underline$MH,"gtk_expander_get_use_underline");
    }
    public static int gtk_expander_get_use_underline ( Addressable expander) {
        var mh$ = gtk_expander_get_use_underline$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_use_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1756.gtk_expander_set_use_markup$MH,"gtk_expander_set_use_markup");
    }
    public static void gtk_expander_set_use_markup ( Addressable expander,  int use_markup) {
        var mh$ = gtk_expander_set_use_markup$MH();
        try {
            mh$.invokeExact(expander, use_markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_use_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1756.gtk_expander_get_use_markup$MH,"gtk_expander_get_use_markup");
    }
    public static int gtk_expander_get_use_markup ( Addressable expander) {
        var mh$ = gtk_expander_get_use_markup$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1756.gtk_expander_set_label_widget$MH,"gtk_expander_set_label_widget");
    }
    public static void gtk_expander_set_label_widget ( Addressable expander,  Addressable label_widget) {
        var mh$ = gtk_expander_set_label_widget$MH();
        try {
            mh$.invokeExact(expander, label_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1756.gtk_expander_get_label_widget$MH,"gtk_expander_get_label_widget");
    }
    public static MemoryAddress gtk_expander_get_label_widget ( Addressable expander) {
        var mh$ = gtk_expander_get_label_widget$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_label_fill$MH() {
        return RuntimeHelper.requireNonNull(constants$1756.gtk_expander_set_label_fill$MH,"gtk_expander_set_label_fill");
    }
    public static void gtk_expander_set_label_fill ( Addressable expander,  int label_fill) {
        var mh$ = gtk_expander_set_label_fill$MH();
        try {
            mh$.invokeExact(expander, label_fill);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_label_fill$MH() {
        return RuntimeHelper.requireNonNull(constants$1756.gtk_expander_get_label_fill$MH,"gtk_expander_get_label_fill");
    }
    public static int gtk_expander_get_label_fill ( Addressable expander) {
        var mh$ = gtk_expander_get_label_fill$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_resize_toplevel$MH() {
        return RuntimeHelper.requireNonNull(constants$1757.gtk_expander_set_resize_toplevel$MH,"gtk_expander_set_resize_toplevel");
    }
    public static void gtk_expander_set_resize_toplevel ( Addressable expander,  int resize_toplevel) {
        var mh$ = gtk_expander_set_resize_toplevel$MH();
        try {
            mh$.invokeExact(expander, resize_toplevel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_resize_toplevel$MH() {
        return RuntimeHelper.requireNonNull(constants$1757.gtk_expander_get_resize_toplevel$MH,"gtk_expander_get_resize_toplevel");
    }
    public static int gtk_expander_get_resize_toplevel ( Addressable expander) {
        var mh$ = gtk_expander_get_resize_toplevel$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1757.gtk_fixed_get_type$MH,"gtk_fixed_get_type");
    }
    public static long gtk_fixed_get_type () {
        var mh$ = gtk_fixed_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1757.gtk_fixed_new$MH,"gtk_fixed_new");
    }
    public static MemoryAddress gtk_fixed_new () {
        var mh$ = gtk_fixed_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_put$MH() {
        return RuntimeHelper.requireNonNull(constants$1757.gtk_fixed_put$MH,"gtk_fixed_put");
    }
    public static void gtk_fixed_put ( Addressable fixed,  Addressable widget,  int x,  int y) {
        var mh$ = gtk_fixed_put$MH();
        try {
            mh$.invokeExact(fixed, widget, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_move$MH() {
        return RuntimeHelper.requireNonNull(constants$1757.gtk_fixed_move$MH,"gtk_fixed_move");
    }
    public static void gtk_fixed_move ( Addressable fixed,  Addressable widget,  int x,  int y) {
        var mh$ = gtk_fixed_move$MH();
        try {
            mh$.invokeExact(fixed, widget, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_FILE_FILTER_FILENAME() {
        return (int)1L;
    }
    public static int GTK_FILE_FILTER_URI() {
        return (int)2L;
    }
    public static int GTK_FILE_FILTER_DISPLAY_NAME() {
        return (int)4L;
    }
    public static int GTK_FILE_FILTER_MIME_TYPE() {
        return (int)8L;
    }
    public static MethodHandle gtk_file_filter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1758.gtk_file_filter_get_type$MH,"gtk_file_filter_get_type");
    }
    public static long gtk_file_filter_get_type () {
        var mh$ = gtk_file_filter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1758.gtk_file_filter_new$MH,"gtk_file_filter_new");
    }
    public static MemoryAddress gtk_file_filter_new () {
        var mh$ = gtk_file_filter_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1758.gtk_file_filter_set_name$MH,"gtk_file_filter_set_name");
    }
    public static void gtk_file_filter_set_name ( Addressable filter,  Addressable name) {
        var mh$ = gtk_file_filter_set_name$MH();
        try {
            mh$.invokeExact(filter, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1758.gtk_file_filter_get_name$MH,"gtk_file_filter_get_name");
    }
    public static MemoryAddress gtk_file_filter_get_name ( Addressable filter) {
        var mh$ = gtk_file_filter_get_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1759.gtk_file_filter_add_mime_type$MH,"gtk_file_filter_add_mime_type");
    }
    public static void gtk_file_filter_add_mime_type ( Addressable filter,  Addressable mime_type) {
        var mh$ = gtk_file_filter_add_mime_type$MH();
        try {
            mh$.invokeExact(filter, mime_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_pattern$MH() {
        return RuntimeHelper.requireNonNull(constants$1759.gtk_file_filter_add_pattern$MH,"gtk_file_filter_add_pattern");
    }
    public static void gtk_file_filter_add_pattern ( Addressable filter,  Addressable pattern) {
        var mh$ = gtk_file_filter_add_pattern$MH();
        try {
            mh$.invokeExact(filter, pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_pixbuf_formats$MH() {
        return RuntimeHelper.requireNonNull(constants$1759.gtk_file_filter_add_pixbuf_formats$MH,"gtk_file_filter_add_pixbuf_formats");
    }
    public static void gtk_file_filter_add_pixbuf_formats ( Addressable filter) {
        var mh$ = gtk_file_filter_add_pixbuf_formats$MH();
        try {
            mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_custom$MH() {
        return RuntimeHelper.requireNonNull(constants$1759.gtk_file_filter_add_custom$MH,"gtk_file_filter_add_custom");
    }
    public static void gtk_file_filter_add_custom ( Addressable filter,  int needed,  Addressable func,  Addressable data,  Addressable notify) {
        var mh$ = gtk_file_filter_add_custom$MH();
        try {
            mh$.invokeExact(filter, needed, func, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_get_needed$MH() {
        return RuntimeHelper.requireNonNull(constants$1759.gtk_file_filter_get_needed$MH,"gtk_file_filter_get_needed");
    }
    public static int gtk_file_filter_get_needed ( Addressable filter) {
        var mh$ = gtk_file_filter_get_needed$MH();
        try {
            return (int)mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1759.gtk_file_filter_filter$MH,"gtk_file_filter_filter");
    }
    public static int gtk_file_filter_filter ( Addressable filter,  Addressable filter_info) {
        var mh$ = gtk_file_filter_filter$MH();
        try {
            return (int)mh$.invokeExact(filter, filter_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_to_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$1760.gtk_file_filter_to_gvariant$MH,"gtk_file_filter_to_gvariant");
    }
    public static MemoryAddress gtk_file_filter_to_gvariant ( Addressable filter) {
        var mh$ = gtk_file_filter_to_gvariant$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_new_from_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$1760.gtk_file_filter_new_from_gvariant$MH,"gtk_file_filter_new_from_gvariant");
    }
    public static MemoryAddress gtk_file_filter_new_from_gvariant ( Addressable variant) {
        var mh$ = gtk_file_filter_new_from_gvariant$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_FILE_CHOOSER_ACTION_OPEN() {
        return (int)0L;
    }
    public static int GTK_FILE_CHOOSER_ACTION_SAVE() {
        return (int)1L;
    }
    public static int GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER() {
        return (int)2L;
    }
    public static int GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER() {
        return (int)3L;
    }
    public static int GTK_FILE_CHOOSER_CONFIRMATION_CONFIRM() {
        return (int)0L;
    }
    public static int GTK_FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME() {
        return (int)1L;
    }
    public static int GTK_FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN() {
        return (int)2L;
    }
    public static MethodHandle gtk_file_chooser_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1760.gtk_file_chooser_get_type$MH,"gtk_file_chooser_get_type");
    }
    public static long gtk_file_chooser_get_type () {
        var mh$ = gtk_file_chooser_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_FILE_CHOOSER_ERROR_NONEXISTENT() {
        return (int)0L;
    }
    public static int GTK_FILE_CHOOSER_ERROR_BAD_FILENAME() {
        return (int)1L;
    }
    public static int GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS() {
        return (int)2L;
    }
    public static int GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME() {
        return (int)3L;
    }
    public static MethodHandle gtk_file_chooser_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1760.gtk_file_chooser_error_quark$MH,"gtk_file_chooser_error_quark");
    }
    public static int gtk_file_chooser_error_quark () {
        var mh$ = gtk_file_chooser_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1760.gtk_file_chooser_set_action$MH,"gtk_file_chooser_set_action");
    }
    public static void gtk_file_chooser_set_action ( Addressable chooser,  int action) {
        var mh$ = gtk_file_chooser_set_action$MH();
        try {
            mh$.invokeExact(chooser, action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1760.gtk_file_chooser_get_action$MH,"gtk_file_chooser_get_action");
    }
    public static int gtk_file_chooser_get_action ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_action$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_local_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1761.gtk_file_chooser_set_local_only$MH,"gtk_file_chooser_set_local_only");
    }
    public static void gtk_file_chooser_set_local_only ( Addressable chooser,  int local_only) {
        var mh$ = gtk_file_chooser_set_local_only$MH();
        try {
            mh$.invokeExact(chooser, local_only);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_local_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1761.gtk_file_chooser_get_local_only$MH,"gtk_file_chooser_get_local_only");
    }
    public static int gtk_file_chooser_get_local_only ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_local_only$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_select_multiple$MH() {
        return RuntimeHelper.requireNonNull(constants$1761.gtk_file_chooser_set_select_multiple$MH,"gtk_file_chooser_set_select_multiple");
    }
    public static void gtk_file_chooser_set_select_multiple ( Addressable chooser,  int select_multiple) {
        var mh$ = gtk_file_chooser_set_select_multiple$MH();
        try {
            mh$.invokeExact(chooser, select_multiple);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_select_multiple$MH() {
        return RuntimeHelper.requireNonNull(constants$1761.gtk_file_chooser_get_select_multiple$MH,"gtk_file_chooser_get_select_multiple");
    }
    public static int gtk_file_chooser_get_select_multiple ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_select_multiple$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_show_hidden$MH() {
        return RuntimeHelper.requireNonNull(constants$1761.gtk_file_chooser_set_show_hidden$MH,"gtk_file_chooser_set_show_hidden");
    }
    public static void gtk_file_chooser_set_show_hidden ( Addressable chooser,  int show_hidden) {
        var mh$ = gtk_file_chooser_set_show_hidden$MH();
        try {
            mh$.invokeExact(chooser, show_hidden);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_show_hidden$MH() {
        return RuntimeHelper.requireNonNull(constants$1761.gtk_file_chooser_get_show_hidden$MH,"gtk_file_chooser_get_show_hidden");
    }
    public static int gtk_file_chooser_get_show_hidden ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_show_hidden$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_do_overwrite_confirmation$MH() {
        return RuntimeHelper.requireNonNull(constants$1762.gtk_file_chooser_set_do_overwrite_confirmation$MH,"gtk_file_chooser_set_do_overwrite_confirmation");
    }
    public static void gtk_file_chooser_set_do_overwrite_confirmation ( Addressable chooser,  int do_overwrite_confirmation) {
        var mh$ = gtk_file_chooser_set_do_overwrite_confirmation$MH();
        try {
            mh$.invokeExact(chooser, do_overwrite_confirmation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_do_overwrite_confirmation$MH() {
        return RuntimeHelper.requireNonNull(constants$1762.gtk_file_chooser_get_do_overwrite_confirmation$MH,"gtk_file_chooser_get_do_overwrite_confirmation");
    }
    public static int gtk_file_chooser_get_do_overwrite_confirmation ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_do_overwrite_confirmation$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_create_folders$MH() {
        return RuntimeHelper.requireNonNull(constants$1762.gtk_file_chooser_set_create_folders$MH,"gtk_file_chooser_set_create_folders");
    }
    public static void gtk_file_chooser_set_create_folders ( Addressable chooser,  int create_folders) {
        var mh$ = gtk_file_chooser_set_create_folders$MH();
        try {
            mh$.invokeExact(chooser, create_folders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_create_folders$MH() {
        return RuntimeHelper.requireNonNull(constants$1762.gtk_file_chooser_get_create_folders$MH,"gtk_file_chooser_get_create_folders");
    }
    public static int gtk_file_chooser_get_create_folders ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_create_folders$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_current_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1762.gtk_file_chooser_set_current_name$MH,"gtk_file_chooser_set_current_name");
    }
    public static void gtk_file_chooser_set_current_name ( Addressable chooser,  Addressable name) {
        var mh$ = gtk_file_chooser_set_current_name$MH();
        try {
            mh$.invokeExact(chooser, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_current_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1762.gtk_file_chooser_get_current_name$MH,"gtk_file_chooser_get_current_name");
    }
    public static MemoryAddress gtk_file_chooser_get_current_name ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_current_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$1763.gtk_file_chooser_get_filename$MH,"gtk_file_chooser_get_filename");
    }
    public static MemoryAddress gtk_file_chooser_get_filename ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_filename$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$1763.gtk_file_chooser_set_filename$MH,"gtk_file_chooser_set_filename");
    }
    public static int gtk_file_chooser_set_filename ( Addressable chooser,  Addressable filename) {
        var mh$ = gtk_file_chooser_set_filename$MH();
        try {
            return (int)mh$.invokeExact(chooser, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_select_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$1763.gtk_file_chooser_select_filename$MH,"gtk_file_chooser_select_filename");
    }
    public static int gtk_file_chooser_select_filename ( Addressable chooser,  Addressable filename) {
        var mh$ = gtk_file_chooser_select_filename$MH();
        try {
            return (int)mh$.invokeExact(chooser, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_unselect_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$1763.gtk_file_chooser_unselect_filename$MH,"gtk_file_chooser_unselect_filename");
    }
    public static void gtk_file_chooser_unselect_filename ( Addressable chooser,  Addressable filename) {
        var mh$ = gtk_file_chooser_unselect_filename$MH();
        try {
            mh$.invokeExact(chooser, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_select_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1763.gtk_file_chooser_select_all$MH,"gtk_file_chooser_select_all");
    }
    public static void gtk_file_chooser_select_all ( Addressable chooser) {
        var mh$ = gtk_file_chooser_select_all$MH();
        try {
            mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_unselect_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1763.gtk_file_chooser_unselect_all$MH,"gtk_file_chooser_unselect_all");
    }
    public static void gtk_file_chooser_unselect_all ( Addressable chooser) {
        var mh$ = gtk_file_chooser_unselect_all$MH();
        try {
            mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_filenames$MH() {
        return RuntimeHelper.requireNonNull(constants$1764.gtk_file_chooser_get_filenames$MH,"gtk_file_chooser_get_filenames");
    }
    public static MemoryAddress gtk_file_chooser_get_filenames ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_filenames$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_current_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$1764.gtk_file_chooser_set_current_folder$MH,"gtk_file_chooser_set_current_folder");
    }
    public static int gtk_file_chooser_set_current_folder ( Addressable chooser,  Addressable filename) {
        var mh$ = gtk_file_chooser_set_current_folder$MH();
        try {
            return (int)mh$.invokeExact(chooser, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_current_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$1764.gtk_file_chooser_get_current_folder$MH,"gtk_file_chooser_get_current_folder");
    }
    public static MemoryAddress gtk_file_chooser_get_current_folder ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_current_folder$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1764.gtk_file_chooser_get_uri$MH,"gtk_file_chooser_get_uri");
    }
    public static MemoryAddress gtk_file_chooser_get_uri ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_uri$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1764.gtk_file_chooser_set_uri$MH,"gtk_file_chooser_set_uri");
    }
    public static int gtk_file_chooser_set_uri ( Addressable chooser,  Addressable uri) {
        var mh$ = gtk_file_chooser_set_uri$MH();
        try {
            return (int)mh$.invokeExact(chooser, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_select_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1764.gtk_file_chooser_select_uri$MH,"gtk_file_chooser_select_uri");
    }
    public static int gtk_file_chooser_select_uri ( Addressable chooser,  Addressable uri) {
        var mh$ = gtk_file_chooser_select_uri$MH();
        try {
            return (int)mh$.invokeExact(chooser, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_unselect_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1765.gtk_file_chooser_unselect_uri$MH,"gtk_file_chooser_unselect_uri");
    }
    public static void gtk_file_chooser_unselect_uri ( Addressable chooser,  Addressable uri) {
        var mh$ = gtk_file_chooser_unselect_uri$MH();
        try {
            mh$.invokeExact(chooser, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$1765.gtk_file_chooser_get_uris$MH,"gtk_file_chooser_get_uris");
    }
    public static MemoryAddress gtk_file_chooser_get_uris ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_uris$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_current_folder_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1765.gtk_file_chooser_set_current_folder_uri$MH,"gtk_file_chooser_set_current_folder_uri");
    }
    public static int gtk_file_chooser_set_current_folder_uri ( Addressable chooser,  Addressable uri) {
        var mh$ = gtk_file_chooser_set_current_folder_uri$MH();
        try {
            return (int)mh$.invokeExact(chooser, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_current_folder_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1765.gtk_file_chooser_get_current_folder_uri$MH,"gtk_file_chooser_get_current_folder_uri");
    }
    public static MemoryAddress gtk_file_chooser_get_current_folder_uri ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_current_folder_uri$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1765.gtk_file_chooser_get_file$MH,"gtk_file_chooser_get_file");
    }
    public static MemoryAddress gtk_file_chooser_get_file ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1765.gtk_file_chooser_set_file$MH,"gtk_file_chooser_set_file");
    }
    public static int gtk_file_chooser_set_file ( Addressable chooser,  Addressable file,  Addressable error) {
        var mh$ = gtk_file_chooser_set_file$MH();
        try {
            return (int)mh$.invokeExact(chooser, file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_select_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1766.gtk_file_chooser_select_file$MH,"gtk_file_chooser_select_file");
    }
    public static int gtk_file_chooser_select_file ( Addressable chooser,  Addressable file,  Addressable error) {
        var mh$ = gtk_file_chooser_select_file$MH();
        try {
            return (int)mh$.invokeExact(chooser, file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_unselect_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1766.gtk_file_chooser_unselect_file$MH,"gtk_file_chooser_unselect_file");
    }
    public static void gtk_file_chooser_unselect_file ( Addressable chooser,  Addressable file) {
        var mh$ = gtk_file_chooser_unselect_file$MH();
        try {
            mh$.invokeExact(chooser, file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_files$MH() {
        return RuntimeHelper.requireNonNull(constants$1766.gtk_file_chooser_get_files$MH,"gtk_file_chooser_get_files");
    }
    public static MemoryAddress gtk_file_chooser_get_files ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_files$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_current_folder_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1766.gtk_file_chooser_set_current_folder_file$MH,"gtk_file_chooser_set_current_folder_file");
    }
    public static int gtk_file_chooser_set_current_folder_file ( Addressable chooser,  Addressable file,  Addressable error) {
        var mh$ = gtk_file_chooser_set_current_folder_file$MH();
        try {
            return (int)mh$.invokeExact(chooser, file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_current_folder_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1766.gtk_file_chooser_get_current_folder_file$MH,"gtk_file_chooser_get_current_folder_file");
    }
    public static MemoryAddress gtk_file_chooser_get_current_folder_file ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_current_folder_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_preview_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1766.gtk_file_chooser_set_preview_widget$MH,"gtk_file_chooser_set_preview_widget");
    }
    public static void gtk_file_chooser_set_preview_widget ( Addressable chooser,  Addressable preview_widget) {
        var mh$ = gtk_file_chooser_set_preview_widget$MH();
        try {
            mh$.invokeExact(chooser, preview_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_preview_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1767.gtk_file_chooser_get_preview_widget$MH,"gtk_file_chooser_get_preview_widget");
    }
    public static MemoryAddress gtk_file_chooser_get_preview_widget ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_preview_widget$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_preview_widget_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1767.gtk_file_chooser_set_preview_widget_active$MH,"gtk_file_chooser_set_preview_widget_active");
    }
    public static void gtk_file_chooser_set_preview_widget_active ( Addressable chooser,  int active) {
        var mh$ = gtk_file_chooser_set_preview_widget_active$MH();
        try {
            mh$.invokeExact(chooser, active);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_preview_widget_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1767.gtk_file_chooser_get_preview_widget_active$MH,"gtk_file_chooser_get_preview_widget_active");
    }
    public static int gtk_file_chooser_get_preview_widget_active ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_preview_widget_active$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_use_preview_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1767.gtk_file_chooser_set_use_preview_label$MH,"gtk_file_chooser_set_use_preview_label");
    }
    public static void gtk_file_chooser_set_use_preview_label ( Addressable chooser,  int use_label) {
        var mh$ = gtk_file_chooser_set_use_preview_label$MH();
        try {
            mh$.invokeExact(chooser, use_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_use_preview_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1767.gtk_file_chooser_get_use_preview_label$MH,"gtk_file_chooser_get_use_preview_label");
    }
    public static int gtk_file_chooser_get_use_preview_label ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_use_preview_label$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_preview_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$1767.gtk_file_chooser_get_preview_filename$MH,"gtk_file_chooser_get_preview_filename");
    }
    public static MemoryAddress gtk_file_chooser_get_preview_filename ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_preview_filename$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_preview_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1768.gtk_file_chooser_get_preview_uri$MH,"gtk_file_chooser_get_preview_uri");
    }
    public static MemoryAddress gtk_file_chooser_get_preview_uri ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_preview_uri$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_preview_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1768.gtk_file_chooser_get_preview_file$MH,"gtk_file_chooser_get_preview_file");
    }
    public static MemoryAddress gtk_file_chooser_get_preview_file ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_preview_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_extra_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1768.gtk_file_chooser_set_extra_widget$MH,"gtk_file_chooser_set_extra_widget");
    }
    public static void gtk_file_chooser_set_extra_widget ( Addressable chooser,  Addressable extra_widget) {
        var mh$ = gtk_file_chooser_set_extra_widget$MH();
        try {
            mh$.invokeExact(chooser, extra_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_extra_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1768.gtk_file_chooser_get_extra_widget$MH,"gtk_file_chooser_get_extra_widget");
    }
    public static MemoryAddress gtk_file_chooser_get_extra_widget ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_extra_widget$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_add_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1768.gtk_file_chooser_add_filter$MH,"gtk_file_chooser_add_filter");
    }
    public static void gtk_file_chooser_add_filter ( Addressable chooser,  Addressable filter) {
        var mh$ = gtk_file_chooser_add_filter$MH();
        try {
            mh$.invokeExact(chooser, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_remove_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1768.gtk_file_chooser_remove_filter$MH,"gtk_file_chooser_remove_filter");
    }
    public static void gtk_file_chooser_remove_filter ( Addressable chooser,  Addressable filter) {
        var mh$ = gtk_file_chooser_remove_filter$MH();
        try {
            mh$.invokeExact(chooser, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_list_filters$MH() {
        return RuntimeHelper.requireNonNull(constants$1769.gtk_file_chooser_list_filters$MH,"gtk_file_chooser_list_filters");
    }
    public static MemoryAddress gtk_file_chooser_list_filters ( Addressable chooser) {
        var mh$ = gtk_file_chooser_list_filters$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1769.gtk_file_chooser_set_filter$MH,"gtk_file_chooser_set_filter");
    }
    public static void gtk_file_chooser_set_filter ( Addressable chooser,  Addressable filter) {
        var mh$ = gtk_file_chooser_set_filter$MH();
        try {
            mh$.invokeExact(chooser, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1769.gtk_file_chooser_get_filter$MH,"gtk_file_chooser_get_filter");
    }
    public static MemoryAddress gtk_file_chooser_get_filter ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_filter$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_add_shortcut_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$1769.gtk_file_chooser_add_shortcut_folder$MH,"gtk_file_chooser_add_shortcut_folder");
    }
    public static int gtk_file_chooser_add_shortcut_folder ( Addressable chooser,  Addressable folder,  Addressable error) {
        var mh$ = gtk_file_chooser_add_shortcut_folder$MH();
        try {
            return (int)mh$.invokeExact(chooser, folder, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_remove_shortcut_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$1769.gtk_file_chooser_remove_shortcut_folder$MH,"gtk_file_chooser_remove_shortcut_folder");
    }
    public static int gtk_file_chooser_remove_shortcut_folder ( Addressable chooser,  Addressable folder,  Addressable error) {
        var mh$ = gtk_file_chooser_remove_shortcut_folder$MH();
        try {
            return (int)mh$.invokeExact(chooser, folder, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_list_shortcut_folders$MH() {
        return RuntimeHelper.requireNonNull(constants$1769.gtk_file_chooser_list_shortcut_folders$MH,"gtk_file_chooser_list_shortcut_folders");
    }
    public static MemoryAddress gtk_file_chooser_list_shortcut_folders ( Addressable chooser) {
        var mh$ = gtk_file_chooser_list_shortcut_folders$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_add_shortcut_folder_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1770.gtk_file_chooser_add_shortcut_folder_uri$MH,"gtk_file_chooser_add_shortcut_folder_uri");
    }
    public static int gtk_file_chooser_add_shortcut_folder_uri ( Addressable chooser,  Addressable uri,  Addressable error) {
        var mh$ = gtk_file_chooser_add_shortcut_folder_uri$MH();
        try {
            return (int)mh$.invokeExact(chooser, uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_remove_shortcut_folder_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1770.gtk_file_chooser_remove_shortcut_folder_uri$MH,"gtk_file_chooser_remove_shortcut_folder_uri");
    }
    public static int gtk_file_chooser_remove_shortcut_folder_uri ( Addressable chooser,  Addressable uri,  Addressable error) {
        var mh$ = gtk_file_chooser_remove_shortcut_folder_uri$MH();
        try {
            return (int)mh$.invokeExact(chooser, uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_list_shortcut_folder_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$1770.gtk_file_chooser_list_shortcut_folder_uris$MH,"gtk_file_chooser_list_shortcut_folder_uris");
    }
    public static MemoryAddress gtk_file_chooser_list_shortcut_folder_uris ( Addressable chooser) {
        var mh$ = gtk_file_chooser_list_shortcut_folder_uris$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_add_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$1770.gtk_file_chooser_add_choice$MH,"gtk_file_chooser_add_choice");
    }
    public static void gtk_file_chooser_add_choice ( Addressable chooser,  Addressable id,  Addressable label,  Addressable options,  Addressable option_labels) {
        var mh$ = gtk_file_chooser_add_choice$MH();
        try {
            mh$.invokeExact(chooser, id, label, options, option_labels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_remove_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$1770.gtk_file_chooser_remove_choice$MH,"gtk_file_chooser_remove_choice");
    }
    public static void gtk_file_chooser_remove_choice ( Addressable chooser,  Addressable id) {
        var mh$ = gtk_file_chooser_remove_choice$MH();
        try {
            mh$.invokeExact(chooser, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$1770.gtk_file_chooser_set_choice$MH,"gtk_file_chooser_set_choice");
    }
    public static void gtk_file_chooser_set_choice ( Addressable chooser,  Addressable id,  Addressable option) {
        var mh$ = gtk_file_chooser_set_choice$MH();
        try {
            mh$.invokeExact(chooser, id, option);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$1771.gtk_file_chooser_get_choice$MH,"gtk_file_chooser_get_choice");
    }
    public static MemoryAddress gtk_file_chooser_get_choice ( Addressable chooser,  Addressable id) {
        var mh$ = gtk_file_chooser_get_choice$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1771.gtk_file_chooser_button_get_type$MH,"gtk_file_chooser_button_get_type");
    }
    public static long gtk_file_chooser_button_get_type () {
        var mh$ = gtk_file_chooser_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1771.gtk_file_chooser_button_new$MH,"gtk_file_chooser_button_new");
    }
    public static MemoryAddress gtk_file_chooser_button_new ( Addressable title,  int action) {
        var mh$ = gtk_file_chooser_button_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(title, action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_new_with_dialog$MH() {
        return RuntimeHelper.requireNonNull(constants$1771.gtk_file_chooser_button_new_with_dialog$MH,"gtk_file_chooser_button_new_with_dialog");
    }
    public static MemoryAddress gtk_file_chooser_button_new_with_dialog ( Addressable dialog) {
        var mh$ = gtk_file_chooser_button_new_with_dialog$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1771.gtk_file_chooser_button_get_title$MH,"gtk_file_chooser_button_get_title");
    }
    public static MemoryAddress gtk_file_chooser_button_get_title ( Addressable button) {
        var mh$ = gtk_file_chooser_button_get_title$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1771.gtk_file_chooser_button_set_title$MH,"gtk_file_chooser_button_set_title");
    }
    public static void gtk_file_chooser_button_set_title ( Addressable button,  Addressable title) {
        var mh$ = gtk_file_chooser_button_set_title$MH();
        try {
            mh$.invokeExact(button, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_get_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$1772.gtk_file_chooser_button_get_width_chars$MH,"gtk_file_chooser_button_get_width_chars");
    }
    public static int gtk_file_chooser_button_get_width_chars ( Addressable button) {
        var mh$ = gtk_file_chooser_button_get_width_chars$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_set_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$1772.gtk_file_chooser_button_set_width_chars$MH,"gtk_file_chooser_button_set_width_chars");
    }
    public static void gtk_file_chooser_button_set_width_chars ( Addressable button,  int n_chars) {
        var mh$ = gtk_file_chooser_button_set_width_chars$MH();
        try {
            mh$.invokeExact(button, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_get_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1772.gtk_file_chooser_button_get_focus_on_click$MH,"gtk_file_chooser_button_get_focus_on_click");
    }
    public static int gtk_file_chooser_button_get_focus_on_click ( Addressable button) {
        var mh$ = gtk_file_chooser_button_get_focus_on_click$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_set_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1772.gtk_file_chooser_button_set_focus_on_click$MH,"gtk_file_chooser_button_set_focus_on_click");
    }
    public static void gtk_file_chooser_button_set_focus_on_click ( Addressable button,  int focus_on_click) {
        var mh$ = gtk_file_chooser_button_set_focus_on_click$MH();
        try {
            mh$.invokeExact(button, focus_on_click);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1772.gtk_file_chooser_dialog_get_type$MH,"gtk_file_chooser_dialog_get_type");
    }
    public static long gtk_file_chooser_dialog_get_type () {
        var mh$ = gtk_file_chooser_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1772.gtk_file_chooser_dialog_new$MH,"gtk_file_chooser_dialog_new");
    }
    public static MemoryAddress gtk_file_chooser_dialog_new ( Addressable title,  Addressable parent,  int action,  Addressable first_button_text, Object... x4) {
        var mh$ = gtk_file_chooser_dialog_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(title, parent, action, first_button_text, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1773.gtk_native_dialog_get_type$MH,"gtk_native_dialog_get_type");
    }
    public static long gtk_native_dialog_get_type () {
        var mh$ = gtk_native_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkNativeDialog_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNativeDialog_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNativeDialog_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNativeDialog_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkNativeDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$1773.glib_autoptr_clear_GtkNativeDialog$MH,"glib_autoptr_clear_GtkNativeDialog");
    }
    public static void glib_autoptr_clear_GtkNativeDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkNativeDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkNativeDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$1773.glib_autoptr_cleanup_GtkNativeDialog$MH,"glib_autoptr_cleanup_GtkNativeDialog");
    }
    public static void glib_autoptr_cleanup_GtkNativeDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkNativeDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkNativeDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$1773.glib_listautoptr_cleanup_GtkNativeDialog$MH,"glib_listautoptr_cleanup_GtkNativeDialog");
    }
    public static void glib_listautoptr_cleanup_GtkNativeDialog ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkNativeDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkNativeDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$1773.glib_slistautoptr_cleanup_GtkNativeDialog$MH,"glib_slistautoptr_cleanup_GtkNativeDialog");
    }
    public static void glib_slistautoptr_cleanup_GtkNativeDialog ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkNativeDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkNativeDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$1773.glib_queueautoptr_cleanup_GtkNativeDialog$MH,"glib_queueautoptr_cleanup_GtkNativeDialog");
    }
    public static void glib_queueautoptr_cleanup_GtkNativeDialog ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkNativeDialog$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkNativeDialogClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNativeDialogClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNativeDialogClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNativeDialogClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkNativeDialogClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1774.glib_autoptr_clear_GtkNativeDialogClass$MH,"glib_autoptr_clear_GtkNativeDialogClass");
    }
    public static void glib_autoptr_clear_GtkNativeDialogClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkNativeDialogClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkNativeDialogClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1774.glib_autoptr_cleanup_GtkNativeDialogClass$MH,"glib_autoptr_cleanup_GtkNativeDialogClass");
    }
    public static void glib_autoptr_cleanup_GtkNativeDialogClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkNativeDialogClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkNativeDialogClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1774.glib_listautoptr_cleanup_GtkNativeDialogClass$MH,"glib_listautoptr_cleanup_GtkNativeDialogClass");
    }
    public static void glib_listautoptr_cleanup_GtkNativeDialogClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkNativeDialogClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkNativeDialogClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1774.glib_slistautoptr_cleanup_GtkNativeDialogClass$MH,"glib_slistautoptr_cleanup_GtkNativeDialogClass");
    }
    public static void glib_slistautoptr_cleanup_GtkNativeDialogClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkNativeDialogClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkNativeDialogClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1774.glib_queueautoptr_cleanup_GtkNativeDialogClass$MH,"glib_queueautoptr_cleanup_GtkNativeDialogClass");
    }
    public static void glib_queueautoptr_cleanup_GtkNativeDialogClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkNativeDialogClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_NATIVE_DIALOG$MH() {
        return RuntimeHelper.requireNonNull(constants$1774.GTK_NATIVE_DIALOG$MH,"GTK_NATIVE_DIALOG");
    }
    public static MemoryAddress GTK_NATIVE_DIALOG ( Addressable ptr) {
        var mh$ = GTK_NATIVE_DIALOG$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_NATIVE_DIALOG_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1775.GTK_NATIVE_DIALOG_CLASS$MH,"GTK_NATIVE_DIALOG_CLASS");
    }
    public static MemoryAddress GTK_NATIVE_DIALOG_CLASS ( Addressable ptr) {
        var mh$ = GTK_NATIVE_DIALOG_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_NATIVE_DIALOG$MH() {
        return RuntimeHelper.requireNonNull(constants$1775.GTK_IS_NATIVE_DIALOG$MH,"GTK_IS_NATIVE_DIALOG");
    }
    public static int GTK_IS_NATIVE_DIALOG ( Addressable ptr) {
        var mh$ = GTK_IS_NATIVE_DIALOG$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_NATIVE_DIALOG_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1775.GTK_IS_NATIVE_DIALOG_CLASS$MH,"GTK_IS_NATIVE_DIALOG_CLASS");
    }
    public static int GTK_IS_NATIVE_DIALOG_CLASS ( Addressable ptr) {
        var mh$ = GTK_IS_NATIVE_DIALOG_CLASS$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_NATIVE_DIALOG_GET_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1775.GTK_NATIVE_DIALOG_GET_CLASS$MH,"GTK_NATIVE_DIALOG_GET_CLASS");
    }
    public static MemoryAddress GTK_NATIVE_DIALOG_GET_CLASS ( Addressable ptr) {
        var mh$ = GTK_NATIVE_DIALOG_GET_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_show$MH() {
        return RuntimeHelper.requireNonNull(constants$1775.gtk_native_dialog_show$MH,"gtk_native_dialog_show");
    }
    public static void gtk_native_dialog_show ( Addressable self) {
        var mh$ = gtk_native_dialog_show$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_hide$MH() {
        return RuntimeHelper.requireNonNull(constants$1775.gtk_native_dialog_hide$MH,"gtk_native_dialog_hide");
    }
    public static void gtk_native_dialog_hide ( Addressable self) {
        var mh$ = gtk_native_dialog_hide$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1776.gtk_native_dialog_destroy$MH,"gtk_native_dialog_destroy");
    }
    public static void gtk_native_dialog_destroy ( Addressable self) {
        var mh$ = gtk_native_dialog_destroy$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1776.gtk_native_dialog_get_visible$MH,"gtk_native_dialog_get_visible");
    }
    public static int gtk_native_dialog_get_visible ( Addressable self) {
        var mh$ = gtk_native_dialog_get_visible$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_set_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$1776.gtk_native_dialog_set_modal$MH,"gtk_native_dialog_set_modal");
    }
    public static void gtk_native_dialog_set_modal ( Addressable self,  int modal) {
        var mh$ = gtk_native_dialog_set_modal$MH();
        try {
            mh$.invokeExact(self, modal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$1776.gtk_native_dialog_get_modal$MH,"gtk_native_dialog_get_modal");
    }
    public static int gtk_native_dialog_get_modal ( Addressable self) {
        var mh$ = gtk_native_dialog_get_modal$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1776.gtk_native_dialog_set_title$MH,"gtk_native_dialog_set_title");
    }
    public static void gtk_native_dialog_set_title ( Addressable self,  Addressable title) {
        var mh$ = gtk_native_dialog_set_title$MH();
        try {
            mh$.invokeExact(self, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1776.gtk_native_dialog_get_title$MH,"gtk_native_dialog_get_title");
    }
    public static MemoryAddress gtk_native_dialog_get_title ( Addressable self) {
        var mh$ = gtk_native_dialog_get_title$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_set_transient_for$MH() {
        return RuntimeHelper.requireNonNull(constants$1777.gtk_native_dialog_set_transient_for$MH,"gtk_native_dialog_set_transient_for");
    }
    public static void gtk_native_dialog_set_transient_for ( Addressable self,  Addressable parent) {
        var mh$ = gtk_native_dialog_set_transient_for$MH();
        try {
            mh$.invokeExact(self, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_transient_for$MH() {
        return RuntimeHelper.requireNonNull(constants$1777.gtk_native_dialog_get_transient_for$MH,"gtk_native_dialog_get_transient_for");
    }
    public static MemoryAddress gtk_native_dialog_get_transient_for ( Addressable self) {
        var mh$ = gtk_native_dialog_get_transient_for$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_run$MH() {
        return RuntimeHelper.requireNonNull(constants$1777.gtk_native_dialog_run$MH,"gtk_native_dialog_run");
    }
    public static int gtk_native_dialog_run ( Addressable self) {
        var mh$ = gtk_native_dialog_run$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1777.gtk_file_chooser_native_get_type$MH,"gtk_file_chooser_native_get_type");
    }
    public static long gtk_file_chooser_native_get_type () {
        var mh$ = gtk_file_chooser_native_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFileChooserNative_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserNative_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserNative_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserNative_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFileChooserNative$MH() {
        return RuntimeHelper.requireNonNull(constants$1777.glib_autoptr_clear_GtkFileChooserNative$MH,"glib_autoptr_clear_GtkFileChooserNative");
    }
    public static void glib_autoptr_clear_GtkFileChooserNative ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFileChooserNative$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFileChooserNative$MH() {
        return RuntimeHelper.requireNonNull(constants$1777.glib_autoptr_cleanup_GtkFileChooserNative$MH,"glib_autoptr_cleanup_GtkFileChooserNative");
    }
    public static void glib_autoptr_cleanup_GtkFileChooserNative ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFileChooserNative$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFileChooserNative$MH() {
        return RuntimeHelper.requireNonNull(constants$1778.glib_listautoptr_cleanup_GtkFileChooserNative$MH,"glib_listautoptr_cleanup_GtkFileChooserNative");
    }
    public static void glib_listautoptr_cleanup_GtkFileChooserNative ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFileChooserNative$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFileChooserNative$MH() {
        return RuntimeHelper.requireNonNull(constants$1778.glib_slistautoptr_cleanup_GtkFileChooserNative$MH,"glib_slistautoptr_cleanup_GtkFileChooserNative");
    }
    public static void glib_slistautoptr_cleanup_GtkFileChooserNative ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFileChooserNative$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFileChooserNative$MH() {
        return RuntimeHelper.requireNonNull(constants$1778.glib_queueautoptr_cleanup_GtkFileChooserNative$MH,"glib_queueautoptr_cleanup_GtkFileChooserNative");
    }
    public static void glib_queueautoptr_cleanup_GtkFileChooserNative ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFileChooserNative$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFileChooserNativeClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserNativeClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserNativeClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserNativeClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFileChooserNativeClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1778.glib_autoptr_clear_GtkFileChooserNativeClass$MH,"glib_autoptr_clear_GtkFileChooserNativeClass");
    }
    public static void glib_autoptr_clear_GtkFileChooserNativeClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFileChooserNativeClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFileChooserNativeClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1778.glib_autoptr_cleanup_GtkFileChooserNativeClass$MH,"glib_autoptr_cleanup_GtkFileChooserNativeClass");
    }
    public static void glib_autoptr_cleanup_GtkFileChooserNativeClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFileChooserNativeClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFileChooserNativeClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1778.glib_listautoptr_cleanup_GtkFileChooserNativeClass$MH,"glib_listautoptr_cleanup_GtkFileChooserNativeClass");
    }
    public static void glib_listautoptr_cleanup_GtkFileChooserNativeClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFileChooserNativeClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFileChooserNativeClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1779.glib_slistautoptr_cleanup_GtkFileChooserNativeClass$MH,"glib_slistautoptr_cleanup_GtkFileChooserNativeClass");
    }
    public static void glib_slistautoptr_cleanup_GtkFileChooserNativeClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFileChooserNativeClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFileChooserNativeClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1779.glib_queueautoptr_cleanup_GtkFileChooserNativeClass$MH,"glib_queueautoptr_cleanup_GtkFileChooserNativeClass");
    }
    public static void glib_queueautoptr_cleanup_GtkFileChooserNativeClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFileChooserNativeClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_FILE_CHOOSER_NATIVE$MH() {
        return RuntimeHelper.requireNonNull(constants$1779.GTK_FILE_CHOOSER_NATIVE$MH,"GTK_FILE_CHOOSER_NATIVE");
    }
    public static MemoryAddress GTK_FILE_CHOOSER_NATIVE ( Addressable ptr) {
        var mh$ = GTK_FILE_CHOOSER_NATIVE$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_FILE_CHOOSER_NATIVE$MH() {
        return RuntimeHelper.requireNonNull(constants$1779.GTK_IS_FILE_CHOOSER_NATIVE$MH,"GTK_IS_FILE_CHOOSER_NATIVE");
    }
    public static int GTK_IS_FILE_CHOOSER_NATIVE ( Addressable ptr) {
        var mh$ = GTK_IS_FILE_CHOOSER_NATIVE$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1779.gtk_file_chooser_native_new$MH,"gtk_file_chooser_native_new");
    }
    public static MemoryAddress gtk_file_chooser_native_new ( Addressable title,  Addressable parent,  int action,  Addressable accept_label,  Addressable cancel_label) {
        var mh$ = gtk_file_chooser_native_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(title, parent, action, accept_label, cancel_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_get_accept_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1779.gtk_file_chooser_native_get_accept_label$MH,"gtk_file_chooser_native_get_accept_label");
    }
    public static MemoryAddress gtk_file_chooser_native_get_accept_label ( Addressable self) {
        var mh$ = gtk_file_chooser_native_get_accept_label$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_set_accept_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1780.gtk_file_chooser_native_set_accept_label$MH,"gtk_file_chooser_native_set_accept_label");
    }
    public static void gtk_file_chooser_native_set_accept_label ( Addressable self,  Addressable accept_label) {
        var mh$ = gtk_file_chooser_native_set_accept_label$MH();
        try {
            mh$.invokeExact(self, accept_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_get_cancel_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1780.gtk_file_chooser_native_get_cancel_label$MH,"gtk_file_chooser_native_get_cancel_label");
    }
    public static MemoryAddress gtk_file_chooser_native_get_cancel_label ( Addressable self) {
        var mh$ = gtk_file_chooser_native_get_cancel_label$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_set_cancel_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1780.gtk_file_chooser_native_set_cancel_label$MH,"gtk_file_chooser_native_set_cancel_label");
    }
    public static void gtk_file_chooser_native_set_cancel_label ( Addressable self,  Addressable cancel_label) {
        var mh$ = gtk_file_chooser_native_set_cancel_label$MH();
        try {
            mh$.invokeExact(self, cancel_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_widget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1780.gtk_file_chooser_widget_get_type$MH,"gtk_file_chooser_widget_get_type");
    }
    public static long gtk_file_chooser_widget_get_type () {
        var mh$ = gtk_file_chooser_widget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_widget_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1780.gtk_file_chooser_widget_new$MH,"gtk_file_chooser_widget_new");
    }
    public static MemoryAddress gtk_file_chooser_widget_new ( int action) {
        var mh$ = gtk_file_chooser_widget_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1781.gtk_flow_box_child_get_type$MH,"gtk_flow_box_child_get_type");
    }
    public static long gtk_flow_box_child_get_type () {
        var mh$ = gtk_flow_box_child_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1781.gtk_flow_box_child_new$MH,"gtk_flow_box_child_new");
    }
    public static MemoryAddress gtk_flow_box_child_new () {
        var mh$ = gtk_flow_box_child_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_get_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1781.gtk_flow_box_child_get_index$MH,"gtk_flow_box_child_get_index");
    }
    public static int gtk_flow_box_child_get_index ( Addressable child) {
        var mh$ = gtk_flow_box_child_get_index$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_is_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$1781.gtk_flow_box_child_is_selected$MH,"gtk_flow_box_child_is_selected");
    }
    public static int gtk_flow_box_child_is_selected ( Addressable child) {
        var mh$ = gtk_flow_box_child_is_selected$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$1781.gtk_flow_box_child_changed$MH,"gtk_flow_box_child_changed");
    }
    public static void gtk_flow_box_child_changed ( Addressable child) {
        var mh$ = gtk_flow_box_child_changed$MH();
        try {
            mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1782.gtk_flow_box_get_type$MH,"gtk_flow_box_get_type");
    }
    public static long gtk_flow_box_get_type () {
        var mh$ = gtk_flow_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1782.gtk_flow_box_new$MH,"gtk_flow_box_new");
    }
    public static MemoryAddress gtk_flow_box_new () {
        var mh$ = gtk_flow_box_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_bind_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1782.gtk_flow_box_bind_model$MH,"gtk_flow_box_bind_model");
    }
    public static void gtk_flow_box_bind_model ( Addressable box,  Addressable model,  Addressable create_widget_func,  Addressable user_data,  Addressable user_data_free_func) {
        var mh$ = gtk_flow_box_bind_model$MH();
        try {
            mh$.invokeExact(box, model, create_widget_func, user_data, user_data_free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1782.gtk_flow_box_set_homogeneous$MH,"gtk_flow_box_set_homogeneous");
    }
    public static void gtk_flow_box_set_homogeneous ( Addressable box,  int homogeneous) {
        var mh$ = gtk_flow_box_set_homogeneous$MH();
        try {
            mh$.invokeExact(box, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1782.gtk_flow_box_get_homogeneous$MH,"gtk_flow_box_get_homogeneous");
    }
    public static int gtk_flow_box_get_homogeneous ( Addressable box) {
        var mh$ = gtk_flow_box_get_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1782.gtk_flow_box_set_row_spacing$MH,"gtk_flow_box_set_row_spacing");
    }
    public static void gtk_flow_box_set_row_spacing ( Addressable box,  int spacing) {
        var mh$ = gtk_flow_box_set_row_spacing$MH();
        try {
            mh$.invokeExact(box, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1783.gtk_flow_box_get_row_spacing$MH,"gtk_flow_box_get_row_spacing");
    }
    public static int gtk_flow_box_get_row_spacing ( Addressable box) {
        var mh$ = gtk_flow_box_get_row_spacing$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1783.gtk_flow_box_set_column_spacing$MH,"gtk_flow_box_set_column_spacing");
    }
    public static void gtk_flow_box_set_column_spacing ( Addressable box,  int spacing) {
        var mh$ = gtk_flow_box_set_column_spacing$MH();
        try {
            mh$.invokeExact(box, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1783.gtk_flow_box_get_column_spacing$MH,"gtk_flow_box_get_column_spacing");
    }
    public static int gtk_flow_box_get_column_spacing ( Addressable box) {
        var mh$ = gtk_flow_box_get_column_spacing$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_min_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1783.gtk_flow_box_set_min_children_per_line$MH,"gtk_flow_box_set_min_children_per_line");
    }
    public static void gtk_flow_box_set_min_children_per_line ( Addressable box,  int n_children) {
        var mh$ = gtk_flow_box_set_min_children_per_line$MH();
        try {
            mh$.invokeExact(box, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_min_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1783.gtk_flow_box_get_min_children_per_line$MH,"gtk_flow_box_get_min_children_per_line");
    }
    public static int gtk_flow_box_get_min_children_per_line ( Addressable box) {
        var mh$ = gtk_flow_box_get_min_children_per_line$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_max_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1783.gtk_flow_box_set_max_children_per_line$MH,"gtk_flow_box_set_max_children_per_line");
    }
    public static void gtk_flow_box_set_max_children_per_line ( Addressable box,  int n_children) {
        var mh$ = gtk_flow_box_set_max_children_per_line$MH();
        try {
            mh$.invokeExact(box, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_max_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1784.gtk_flow_box_get_max_children_per_line$MH,"gtk_flow_box_get_max_children_per_line");
    }
    public static int gtk_flow_box_get_max_children_per_line ( Addressable box) {
        var mh$ = gtk_flow_box_get_max_children_per_line$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1784.gtk_flow_box_set_activate_on_single_click$MH,"gtk_flow_box_set_activate_on_single_click");
    }
    public static void gtk_flow_box_set_activate_on_single_click ( Addressable box,  int single) {
        var mh$ = gtk_flow_box_set_activate_on_single_click$MH();
        try {
            mh$.invokeExact(box, single);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1784.gtk_flow_box_get_activate_on_single_click$MH,"gtk_flow_box_get_activate_on_single_click");
    }
    public static int gtk_flow_box_get_activate_on_single_click ( Addressable box) {
        var mh$ = gtk_flow_box_get_activate_on_single_click$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$1784.gtk_flow_box_insert$MH,"gtk_flow_box_insert");
    }
    public static void gtk_flow_box_insert ( Addressable box,  Addressable widget,  int position) {
        var mh$ = gtk_flow_box_insert$MH();
        try {
            mh$.invokeExact(box, widget, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_child_at_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1784.gtk_flow_box_get_child_at_index$MH,"gtk_flow_box_get_child_at_index");
    }
    public static MemoryAddress gtk_flow_box_get_child_at_index ( Addressable box,  int idx) {
        var mh$ = gtk_flow_box_get_child_at_index$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(box, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_child_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1784.gtk_flow_box_get_child_at_pos$MH,"gtk_flow_box_get_child_at_pos");
    }
    public static MemoryAddress gtk_flow_box_get_child_at_pos ( Addressable box,  int x,  int y) {
        var mh$ = gtk_flow_box_get_child_at_pos$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(box, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_selected_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$1785.gtk_flow_box_selected_foreach$MH,"gtk_flow_box_selected_foreach");
    }
    public static void gtk_flow_box_selected_foreach ( Addressable box,  Addressable func,  Addressable data) {
        var mh$ = gtk_flow_box_selected_foreach$MH();
        try {
            mh$.invokeExact(box, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_selected_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1785.gtk_flow_box_get_selected_children$MH,"gtk_flow_box_get_selected_children");
    }
    public static MemoryAddress gtk_flow_box_get_selected_children ( Addressable box) {
        var mh$ = gtk_flow_box_get_selected_children$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_select_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1785.gtk_flow_box_select_child$MH,"gtk_flow_box_select_child");
    }
    public static void gtk_flow_box_select_child ( Addressable box,  Addressable child) {
        var mh$ = gtk_flow_box_select_child$MH();
        try {
            mh$.invokeExact(box, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_unselect_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1785.gtk_flow_box_unselect_child$MH,"gtk_flow_box_unselect_child");
    }
    public static void gtk_flow_box_unselect_child ( Addressable box,  Addressable child) {
        var mh$ = gtk_flow_box_unselect_child$MH();
        try {
            mh$.invokeExact(box, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_select_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1786.gtk_flow_box_select_all$MH,"gtk_flow_box_select_all");
    }
    public static void gtk_flow_box_select_all ( Addressable box) {
        var mh$ = gtk_flow_box_select_all$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_unselect_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1786.gtk_flow_box_unselect_all$MH,"gtk_flow_box_unselect_all");
    }
    public static void gtk_flow_box_unselect_all ( Addressable box) {
        var mh$ = gtk_flow_box_unselect_all$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1786.gtk_flow_box_set_selection_mode$MH,"gtk_flow_box_set_selection_mode");
    }
    public static void gtk_flow_box_set_selection_mode ( Addressable box,  int mode) {
        var mh$ = gtk_flow_box_set_selection_mode$MH();
        try {
            mh$.invokeExact(box, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1786.gtk_flow_box_get_selection_mode$MH,"gtk_flow_box_get_selection_mode");
    }
    public static int gtk_flow_box_get_selection_mode ( Addressable box) {
        var mh$ = gtk_flow_box_get_selection_mode$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1786.gtk_flow_box_set_hadjustment$MH,"gtk_flow_box_set_hadjustment");
    }
    public static void gtk_flow_box_set_hadjustment ( Addressable box,  Addressable adjustment) {
        var mh$ = gtk_flow_box_set_hadjustment$MH();
        try {
            mh$.invokeExact(box, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1786.gtk_flow_box_set_vadjustment$MH,"gtk_flow_box_set_vadjustment");
    }
    public static void gtk_flow_box_set_vadjustment ( Addressable box,  Addressable adjustment) {
        var mh$ = gtk_flow_box_set_vadjustment$MH();
        try {
            mh$.invokeExact(box, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_filter_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1787.gtk_flow_box_set_filter_func$MH,"gtk_flow_box_set_filter_func");
    }
    public static void gtk_flow_box_set_filter_func ( Addressable box,  Addressable filter_func,  Addressable user_data,  Addressable destroy) {
        var mh$ = gtk_flow_box_set_filter_func$MH();
        try {
            mh$.invokeExact(box, filter_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_invalidate_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1787.gtk_flow_box_invalidate_filter$MH,"gtk_flow_box_invalidate_filter");
    }
    public static void gtk_flow_box_invalidate_filter ( Addressable box) {
        var mh$ = gtk_flow_box_invalidate_filter$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_sort_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1788.gtk_flow_box_set_sort_func$MH,"gtk_flow_box_set_sort_func");
    }
    public static void gtk_flow_box_set_sort_func ( Addressable box,  Addressable sort_func,  Addressable user_data,  Addressable destroy) {
        var mh$ = gtk_flow_box_set_sort_func$MH();
        try {
            mh$.invokeExact(box, sort_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_invalidate_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$1788.gtk_flow_box_invalidate_sort$MH,"gtk_flow_box_invalidate_sort");
    }
    public static void gtk_flow_box_invalidate_sort ( Addressable box) {
        var mh$ = gtk_flow_box_invalidate_sort$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1788.gtk_font_button_get_type$MH,"gtk_font_button_get_type");
    }
    public static long gtk_font_button_get_type () {
        var mh$ = gtk_font_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1788.gtk_font_button_new$MH,"gtk_font_button_new");
    }
    public static MemoryAddress gtk_font_button_new () {
        var mh$ = gtk_font_button_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_new_with_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1788.gtk_font_button_new_with_font$MH,"gtk_font_button_new_with_font");
    }
    public static MemoryAddress gtk_font_button_new_with_font ( Addressable fontname) {
        var mh$ = gtk_font_button_new_with_font$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fontname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1788.gtk_font_button_get_title$MH,"gtk_font_button_get_title");
    }
    public static MemoryAddress gtk_font_button_get_title ( Addressable font_button) {
        var mh$ = gtk_font_button_get_title$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1789.gtk_font_button_set_title$MH,"gtk_font_button_set_title");
    }
    public static void gtk_font_button_set_title ( Addressable font_button,  Addressable title) {
        var mh$ = gtk_font_button_set_title$MH();
        try {
            mh$.invokeExact(font_button, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_use_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1789.gtk_font_button_get_use_font$MH,"gtk_font_button_get_use_font");
    }
    public static int gtk_font_button_get_use_font ( Addressable font_button) {
        var mh$ = gtk_font_button_get_use_font$MH();
        try {
            return (int)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_use_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1789.gtk_font_button_set_use_font$MH,"gtk_font_button_set_use_font");
    }
    public static void gtk_font_button_set_use_font ( Addressable font_button,  int use_font) {
        var mh$ = gtk_font_button_set_use_font$MH();
        try {
            mh$.invokeExact(font_button, use_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_use_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1789.gtk_font_button_get_use_size$MH,"gtk_font_button_get_use_size");
    }
    public static int gtk_font_button_get_use_size ( Addressable font_button) {
        var mh$ = gtk_font_button_get_use_size$MH();
        try {
            return (int)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_use_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1789.gtk_font_button_set_use_size$MH,"gtk_font_button_set_use_size");
    }
    public static void gtk_font_button_set_use_size ( Addressable font_button,  int use_size) {
        var mh$ = gtk_font_button_set_use_size$MH();
        try {
            mh$.invokeExact(font_button, use_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_font_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1789.gtk_font_button_get_font_name$MH,"gtk_font_button_get_font_name");
    }
    public static MemoryAddress gtk_font_button_get_font_name ( Addressable font_button) {
        var mh$ = gtk_font_button_get_font_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_font_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1790.gtk_font_button_set_font_name$MH,"gtk_font_button_set_font_name");
    }
    public static int gtk_font_button_set_font_name ( Addressable font_button,  Addressable fontname) {
        var mh$ = gtk_font_button_set_font_name$MH();
        try {
            return (int)mh$.invokeExact(font_button, fontname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_show_style$MH() {
        return RuntimeHelper.requireNonNull(constants$1790.gtk_font_button_get_show_style$MH,"gtk_font_button_get_show_style");
    }
    public static int gtk_font_button_get_show_style ( Addressable font_button) {
        var mh$ = gtk_font_button_get_show_style$MH();
        try {
            return (int)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_show_style$MH() {
        return RuntimeHelper.requireNonNull(constants$1790.gtk_font_button_set_show_style$MH,"gtk_font_button_set_show_style");
    }
    public static void gtk_font_button_set_show_style ( Addressable font_button,  int show_style) {
        var mh$ = gtk_font_button_set_show_style$MH();
        try {
            mh$.invokeExact(font_button, show_style);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_show_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1790.gtk_font_button_get_show_size$MH,"gtk_font_button_get_show_size");
    }
    public static int gtk_font_button_get_show_size ( Addressable font_button) {
        var mh$ = gtk_font_button_get_show_size$MH();
        try {
            return (int)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_show_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1790.gtk_font_button_set_show_size$MH,"gtk_font_button_set_show_size");
    }
    public static void gtk_font_button_set_show_size ( Addressable font_button,  int show_size) {
        var mh$ = gtk_font_button_set_show_size$MH();
        try {
            mh$.invokeExact(font_button, show_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_FONT_CHOOSER_LEVEL_FAMILY() {
        return (int)0L;
    }
    public static int GTK_FONT_CHOOSER_LEVEL_STYLE() {
        return (int)1L;
    }
    public static int GTK_FONT_CHOOSER_LEVEL_SIZE() {
        return (int)2L;
    }
    public static int GTK_FONT_CHOOSER_LEVEL_VARIATIONS() {
        return (int)4L;
    }
    public static int GTK_FONT_CHOOSER_LEVEL_FEATURES() {
        return (int)8L;
    }
    public static MethodHandle gtk_font_chooser_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1791.gtk_font_chooser_get_type$MH,"gtk_font_chooser_get_type");
    }
    public static long gtk_font_chooser_get_type () {
        var mh$ = gtk_font_chooser_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_family$MH() {
        return RuntimeHelper.requireNonNull(constants$1791.gtk_font_chooser_get_font_family$MH,"gtk_font_chooser_get_font_family");
    }
    public static MemoryAddress gtk_font_chooser_get_font_family ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_font_family$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_face$MH() {
        return RuntimeHelper.requireNonNull(constants$1791.gtk_font_chooser_get_font_face$MH,"gtk_font_chooser_get_font_face");
    }
    public static MemoryAddress gtk_font_chooser_get_font_face ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_font_face$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1791.gtk_font_chooser_get_font_size$MH,"gtk_font_chooser_get_font_size");
    }
    public static int gtk_font_chooser_get_font_size ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_font_size$MH();
        try {
            return (int)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_desc$MH() {
        return RuntimeHelper.requireNonNull(constants$1791.gtk_font_chooser_get_font_desc$MH,"gtk_font_chooser_get_font_desc");
    }
    public static MemoryAddress gtk_font_chooser_get_font_desc ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_font_desc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_font_desc$MH() {
        return RuntimeHelper.requireNonNull(constants$1792.gtk_font_chooser_set_font_desc$MH,"gtk_font_chooser_set_font_desc");
    }
    public static void gtk_font_chooser_set_font_desc ( Addressable fontchooser,  Addressable font_desc) {
        var mh$ = gtk_font_chooser_set_font_desc$MH();
        try {
            mh$.invokeExact(fontchooser, font_desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1792.gtk_font_chooser_get_font$MH,"gtk_font_chooser_get_font");
    }
    public static MemoryAddress gtk_font_chooser_get_font ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_font$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1792.gtk_font_chooser_set_font$MH,"gtk_font_chooser_set_font");
    }
    public static void gtk_font_chooser_set_font ( Addressable fontchooser,  Addressable fontname) {
        var mh$ = gtk_font_chooser_set_font$MH();
        try {
            mh$.invokeExact(fontchooser, fontname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_preview_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1792.gtk_font_chooser_get_preview_text$MH,"gtk_font_chooser_get_preview_text");
    }
    public static MemoryAddress gtk_font_chooser_get_preview_text ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_preview_text$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_preview_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1792.gtk_font_chooser_set_preview_text$MH,"gtk_font_chooser_set_preview_text");
    }
    public static void gtk_font_chooser_set_preview_text ( Addressable fontchooser,  Addressable text) {
        var mh$ = gtk_font_chooser_set_preview_text$MH();
        try {
            mh$.invokeExact(fontchooser, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_show_preview_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1792.gtk_font_chooser_get_show_preview_entry$MH,"gtk_font_chooser_get_show_preview_entry");
    }
    public static int gtk_font_chooser_get_show_preview_entry ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_show_preview_entry$MH();
        try {
            return (int)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_show_preview_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1793.gtk_font_chooser_set_show_preview_entry$MH,"gtk_font_chooser_set_show_preview_entry");
    }
    public static void gtk_font_chooser_set_show_preview_entry ( Addressable fontchooser,  int show_preview_entry) {
        var mh$ = gtk_font_chooser_set_show_preview_entry$MH();
        try {
            mh$.invokeExact(fontchooser, show_preview_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_filter_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1793.gtk_font_chooser_set_filter_func$MH,"gtk_font_chooser_set_filter_func");
    }
    public static void gtk_font_chooser_set_filter_func ( Addressable fontchooser,  Addressable filter,  Addressable user_data,  Addressable destroy) {
        var mh$ = gtk_font_chooser_set_filter_func$MH();
        try {
            mh$.invokeExact(fontchooser, filter, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_font_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1793.gtk_font_chooser_set_font_map$MH,"gtk_font_chooser_set_font_map");
    }
    public static void gtk_font_chooser_set_font_map ( Addressable fontchooser,  Addressable fontmap) {
        var mh$ = gtk_font_chooser_set_font_map$MH();
        try {
            mh$.invokeExact(fontchooser, fontmap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1793.gtk_font_chooser_get_font_map$MH,"gtk_font_chooser_get_font_map");
    }
    public static MemoryAddress gtk_font_chooser_get_font_map ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_font_map$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_level$MH() {
        return RuntimeHelper.requireNonNull(constants$1793.gtk_font_chooser_set_level$MH,"gtk_font_chooser_set_level");
    }
    public static void gtk_font_chooser_set_level ( Addressable fontchooser,  int level) {
        var mh$ = gtk_font_chooser_set_level$MH();
        try {
            mh$.invokeExact(fontchooser, level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_level$MH() {
        return RuntimeHelper.requireNonNull(constants$1793.gtk_font_chooser_get_level$MH,"gtk_font_chooser_get_level");
    }
    public static int gtk_font_chooser_get_level ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_level$MH();
        try {
            return (int)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_features$MH() {
        return RuntimeHelper.requireNonNull(constants$1794.gtk_font_chooser_get_font_features$MH,"gtk_font_chooser_get_font_features");
    }
    public static MemoryAddress gtk_font_chooser_get_font_features ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_font_features$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_language$MH() {
        return RuntimeHelper.requireNonNull(constants$1794.gtk_font_chooser_get_language$MH,"gtk_font_chooser_get_language");
    }
    public static MemoryAddress gtk_font_chooser_get_language ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_language$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_language$MH() {
        return RuntimeHelper.requireNonNull(constants$1794.gtk_font_chooser_set_language$MH,"gtk_font_chooser_set_language");
    }
    public static void gtk_font_chooser_set_language ( Addressable fontchooser,  Addressable language) {
        var mh$ = gtk_font_chooser_set_language$MH();
        try {
            mh$.invokeExact(fontchooser, language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1794.gtk_font_chooser_dialog_get_type$MH,"gtk_font_chooser_dialog_get_type");
    }
    public static long gtk_font_chooser_dialog_get_type () {
        var mh$ = gtk_font_chooser_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1794.gtk_font_chooser_dialog_new$MH,"gtk_font_chooser_dialog_new");
    }
    public static MemoryAddress gtk_font_chooser_dialog_new ( Addressable title,  Addressable parent) {
        var mh$ = gtk_font_chooser_dialog_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(title, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_widget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1794.gtk_font_chooser_widget_get_type$MH,"gtk_font_chooser_widget_get_type");
    }
    public static long gtk_font_chooser_widget_get_type () {
        var mh$ = gtk_font_chooser_widget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_widget_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1795.gtk_font_chooser_widget_new$MH,"gtk_font_chooser_widget_new");
    }
    public static MemoryAddress gtk_font_chooser_widget_new () {
        var mh$ = gtk_font_chooser_widget_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1795.gtk_gesture_get_type$MH,"gtk_gesture_get_type");
    }
    public static long gtk_gesture_get_type () {
        var mh$ = gtk_gesture_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1795.gtk_gesture_get_device$MH,"gtk_gesture_get_device");
    }
    public static MemoryAddress gtk_gesture_get_device ( Addressable gesture) {
        var mh$ = gtk_gesture_get_device$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_set_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1795.gtk_gesture_set_state$MH,"gtk_gesture_set_state");
    }
    public static int gtk_gesture_set_state ( Addressable gesture,  int state) {
        var mh$ = gtk_gesture_set_state$MH();
        try {
            return (int)mh$.invokeExact(gesture, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_sequence_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1795.gtk_gesture_get_sequence_state$MH,"gtk_gesture_get_sequence_state");
    }
    public static int gtk_gesture_get_sequence_state ( Addressable gesture,  Addressable sequence) {
        var mh$ = gtk_gesture_get_sequence_state$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_set_sequence_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1795.gtk_gesture_set_sequence_state$MH,"gtk_gesture_set_sequence_state");
    }
    public static int gtk_gesture_set_sequence_state ( Addressable gesture,  Addressable sequence,  int state) {
        var mh$ = gtk_gesture_set_sequence_state$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_sequences$MH() {
        return RuntimeHelper.requireNonNull(constants$1796.gtk_gesture_get_sequences$MH,"gtk_gesture_get_sequences");
    }
    public static MemoryAddress gtk_gesture_get_sequences ( Addressable gesture) {
        var mh$ = gtk_gesture_get_sequences$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_last_updated_sequence$MH() {
        return RuntimeHelper.requireNonNull(constants$1796.gtk_gesture_get_last_updated_sequence$MH,"gtk_gesture_get_last_updated_sequence");
    }
    public static MemoryAddress gtk_gesture_get_last_updated_sequence ( Addressable gesture) {
        var mh$ = gtk_gesture_get_last_updated_sequence$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_handles_sequence$MH() {
        return RuntimeHelper.requireNonNull(constants$1796.gtk_gesture_handles_sequence$MH,"gtk_gesture_handles_sequence");
    }
    public static int gtk_gesture_handles_sequence ( Addressable gesture,  Addressable sequence) {
        var mh$ = gtk_gesture_handles_sequence$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_last_event$MH() {
        return RuntimeHelper.requireNonNull(constants$1796.gtk_gesture_get_last_event$MH,"gtk_gesture_get_last_event");
    }
    public static MemoryAddress gtk_gesture_get_last_event ( Addressable gesture,  Addressable sequence) {
        var mh$ = gtk_gesture_get_last_event$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(gesture, sequence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1796.gtk_gesture_get_point$MH,"gtk_gesture_get_point");
    }
    public static int gtk_gesture_get_point ( Addressable gesture,  Addressable sequence,  Addressable x,  Addressable y) {
        var mh$ = gtk_gesture_get_point$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_bounding_box$MH() {
        return RuntimeHelper.requireNonNull(constants$1796.gtk_gesture_get_bounding_box$MH,"gtk_gesture_get_bounding_box");
    }
    public static int gtk_gesture_get_bounding_box ( Addressable gesture,  Addressable rect) {
        var mh$ = gtk_gesture_get_bounding_box$MH();
        try {
            return (int)mh$.invokeExact(gesture, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_bounding_box_center$MH() {
        return RuntimeHelper.requireNonNull(constants$1797.gtk_gesture_get_bounding_box_center$MH,"gtk_gesture_get_bounding_box_center");
    }
    public static int gtk_gesture_get_bounding_box_center ( Addressable gesture,  Addressable x,  Addressable y) {
        var mh$ = gtk_gesture_get_bounding_box_center$MH();
        try {
            return (int)mh$.invokeExact(gesture, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_is_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1797.gtk_gesture_is_active$MH,"gtk_gesture_is_active");
    }
    public static int gtk_gesture_is_active ( Addressable gesture) {
        var mh$ = gtk_gesture_is_active$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_is_recognized$MH() {
        return RuntimeHelper.requireNonNull(constants$1797.gtk_gesture_is_recognized$MH,"gtk_gesture_is_recognized");
    }
    public static int gtk_gesture_is_recognized ( Addressable gesture) {
        var mh$ = gtk_gesture_is_recognized$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1797.gtk_gesture_get_window$MH,"gtk_gesture_get_window");
    }
    public static MemoryAddress gtk_gesture_get_window ( Addressable gesture) {
        var mh$ = gtk_gesture_get_window$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_set_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1797.gtk_gesture_set_window$MH,"gtk_gesture_set_window");
    }
    public static void gtk_gesture_set_window ( Addressable gesture,  Addressable window) {
        var mh$ = gtk_gesture_set_window$MH();
        try {
            mh$.invokeExact(gesture, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1797.gtk_gesture_group$MH,"gtk_gesture_group");
    }
    public static void gtk_gesture_group ( Addressable group_gesture,  Addressable gesture) {
        var mh$ = gtk_gesture_group$MH();
        try {
            mh$.invokeExact(group_gesture, gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_ungroup$MH() {
        return RuntimeHelper.requireNonNull(constants$1798.gtk_gesture_ungroup$MH,"gtk_gesture_ungroup");
    }
    public static void gtk_gesture_ungroup ( Addressable gesture) {
        var mh$ = gtk_gesture_ungroup$MH();
        try {
            mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1798.gtk_gesture_get_group$MH,"gtk_gesture_get_group");
    }
    public static MemoryAddress gtk_gesture_get_group ( Addressable gesture) {
        var mh$ = gtk_gesture_get_group$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_is_grouped_with$MH() {
        return RuntimeHelper.requireNonNull(constants$1798.gtk_gesture_is_grouped_with$MH,"gtk_gesture_is_grouped_with");
    }
    public static int gtk_gesture_is_grouped_with ( Addressable gesture,  Addressable other) {
        var mh$ = gtk_gesture_is_grouped_with$MH();
        try {
            return (int)mh$.invokeExact(gesture, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1798.gtk_gesture_single_get_type$MH,"gtk_gesture_single_get_type");
    }
    public static long gtk_gesture_single_get_type () {
        var mh$ = gtk_gesture_single_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_touch_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1798.gtk_gesture_single_get_touch_only$MH,"gtk_gesture_single_get_touch_only");
    }
    public static int gtk_gesture_single_get_touch_only ( Addressable gesture) {
        var mh$ = gtk_gesture_single_get_touch_only$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_set_touch_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1798.gtk_gesture_single_set_touch_only$MH,"gtk_gesture_single_set_touch_only");
    }
    public static void gtk_gesture_single_set_touch_only ( Addressable gesture,  int touch_only) {
        var mh$ = gtk_gesture_single_set_touch_only$MH();
        try {
            mh$.invokeExact(gesture, touch_only);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_exclusive$MH() {
        return RuntimeHelper.requireNonNull(constants$1799.gtk_gesture_single_get_exclusive$MH,"gtk_gesture_single_get_exclusive");
    }
    public static int gtk_gesture_single_get_exclusive ( Addressable gesture) {
        var mh$ = gtk_gesture_single_get_exclusive$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_set_exclusive$MH() {
        return RuntimeHelper.requireNonNull(constants$1799.gtk_gesture_single_set_exclusive$MH,"gtk_gesture_single_set_exclusive");
    }
    public static void gtk_gesture_single_set_exclusive ( Addressable gesture,  int exclusive) {
        var mh$ = gtk_gesture_single_set_exclusive$MH();
        try {
            mh$.invokeExact(gesture, exclusive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1799.gtk_gesture_single_get_button$MH,"gtk_gesture_single_get_button");
    }
    public static int gtk_gesture_single_get_button ( Addressable gesture) {
        var mh$ = gtk_gesture_single_get_button$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_set_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1799.gtk_gesture_single_set_button$MH,"gtk_gesture_single_set_button");
    }
    public static void gtk_gesture_single_set_button ( Addressable gesture,  int button) {
        var mh$ = gtk_gesture_single_set_button$MH();
        try {
            mh$.invokeExact(gesture, button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_current_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1799.gtk_gesture_single_get_current_button$MH,"gtk_gesture_single_get_current_button");
    }
    public static int gtk_gesture_single_get_current_button ( Addressable gesture) {
        var mh$ = gtk_gesture_single_get_current_button$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_current_sequence$MH() {
        return RuntimeHelper.requireNonNull(constants$1799.gtk_gesture_single_get_current_sequence$MH,"gtk_gesture_single_get_current_sequence");
    }
    public static MemoryAddress gtk_gesture_single_get_current_sequence ( Addressable gesture) {
        var mh$ = gtk_gesture_single_get_current_sequence$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1800.gtk_gesture_drag_get_type$MH,"gtk_gesture_drag_get_type");
    }
    public static long gtk_gesture_drag_get_type () {
        var mh$ = gtk_gesture_drag_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1800.gtk_gesture_drag_new$MH,"gtk_gesture_drag_new");
    }
    public static MemoryAddress gtk_gesture_drag_new ( Addressable widget) {
        var mh$ = gtk_gesture_drag_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_get_start_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1800.gtk_gesture_drag_get_start_point$MH,"gtk_gesture_drag_get_start_point");
    }
    public static int gtk_gesture_drag_get_start_point ( Addressable gesture,  Addressable x,  Addressable y) {
        var mh$ = gtk_gesture_drag_get_start_point$MH();
        try {
            return (int)mh$.invokeExact(gesture, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_get_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1800.gtk_gesture_drag_get_offset$MH,"gtk_gesture_drag_get_offset");
    }
    public static int gtk_gesture_drag_get_offset ( Addressable gesture,  Addressable x,  Addressable y) {
        var mh$ = gtk_gesture_drag_get_offset$MH();
        try {
            return (int)mh$.invokeExact(gesture, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_long_press_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1800.gtk_gesture_long_press_get_type$MH,"gtk_gesture_long_press_get_type");
    }
    public static long gtk_gesture_long_press_get_type () {
        var mh$ = gtk_gesture_long_press_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_long_press_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1800.gtk_gesture_long_press_new$MH,"gtk_gesture_long_press_new");
    }
    public static MemoryAddress gtk_gesture_long_press_new ( Addressable widget) {
        var mh$ = gtk_gesture_long_press_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_multi_press_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1801.gtk_gesture_multi_press_get_type$MH,"gtk_gesture_multi_press_get_type");
    }
    public static long gtk_gesture_multi_press_get_type () {
        var mh$ = gtk_gesture_multi_press_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_multi_press_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1801.gtk_gesture_multi_press_new$MH,"gtk_gesture_multi_press_new");
    }
    public static MemoryAddress gtk_gesture_multi_press_new ( Addressable widget) {
        var mh$ = gtk_gesture_multi_press_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_multi_press_set_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1801.gtk_gesture_multi_press_set_area$MH,"gtk_gesture_multi_press_set_area");
    }
    public static void gtk_gesture_multi_press_set_area ( Addressable gesture,  Addressable rect) {
        var mh$ = gtk_gesture_multi_press_set_area$MH();
        try {
            mh$.invokeExact(gesture, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_multi_press_get_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1801.gtk_gesture_multi_press_get_area$MH,"gtk_gesture_multi_press_get_area");
    }
    public static int gtk_gesture_multi_press_get_area ( Addressable gesture,  Addressable rect) {
        var mh$ = gtk_gesture_multi_press_get_area$MH();
        try {
            return (int)mh$.invokeExact(gesture, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1801.gtk_gesture_pan_get_type$MH,"gtk_gesture_pan_get_type");
    }
    public static long gtk_gesture_pan_get_type () {
        var mh$ = gtk_gesture_pan_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1801.gtk_gesture_pan_new$MH,"gtk_gesture_pan_new");
    }
    public static MemoryAddress gtk_gesture_pan_new ( Addressable widget,  int orientation) {
        var mh$ = gtk_gesture_pan_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(widget, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_get_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$1802.gtk_gesture_pan_get_orientation$MH,"gtk_gesture_pan_get_orientation");
    }
    public static int gtk_gesture_pan_get_orientation ( Addressable gesture) {
        var mh$ = gtk_gesture_pan_get_orientation$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_set_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$1802.gtk_gesture_pan_set_orientation$MH,"gtk_gesture_pan_set_orientation");
    }
    public static void gtk_gesture_pan_set_orientation ( Addressable gesture,  int orientation) {
        var mh$ = gtk_gesture_pan_set_orientation$MH();
        try {
            mh$.invokeExact(gesture, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_rotate_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1802.gtk_gesture_rotate_get_type$MH,"gtk_gesture_rotate_get_type");
    }
    public static long gtk_gesture_rotate_get_type () {
        var mh$ = gtk_gesture_rotate_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_rotate_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1802.gtk_gesture_rotate_new$MH,"gtk_gesture_rotate_new");
    }
    public static MemoryAddress gtk_gesture_rotate_new ( Addressable widget) {
        var mh$ = gtk_gesture_rotate_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_rotate_get_angle_delta$MH() {
        return RuntimeHelper.requireNonNull(constants$1802.gtk_gesture_rotate_get_angle_delta$MH,"gtk_gesture_rotate_get_angle_delta");
    }
    public static double gtk_gesture_rotate_get_angle_delta ( Addressable gesture) {
        var mh$ = gtk_gesture_rotate_get_angle_delta$MH();
        try {
            return (double)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1802.gtk_gesture_stylus_get_type$MH,"gtk_gesture_stylus_get_type");
    }
    public static long gtk_gesture_stylus_get_type () {
        var mh$ = gtk_gesture_stylus_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1803.gtk_gesture_stylus_new$MH,"gtk_gesture_stylus_new");
    }
    public static MemoryAddress gtk_gesture_stylus_new ( Addressable widget) {
        var mh$ = gtk_gesture_stylus_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_axis$MH() {
        return RuntimeHelper.requireNonNull(constants$1803.gtk_gesture_stylus_get_axis$MH,"gtk_gesture_stylus_get_axis");
    }
    public static int gtk_gesture_stylus_get_axis ( Addressable gesture,  int axis,  Addressable value) {
        var mh$ = gtk_gesture_stylus_get_axis$MH();
        try {
            return (int)mh$.invokeExact(gesture, axis, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_axes$MH() {
        return RuntimeHelper.requireNonNull(constants$1803.gtk_gesture_stylus_get_axes$MH,"gtk_gesture_stylus_get_axes");
    }
    public static int gtk_gesture_stylus_get_axes ( Addressable gesture,  Addressable axes,  Addressable values) {
        var mh$ = gtk_gesture_stylus_get_axes$MH();
        try {
            return (int)mh$.invokeExact(gesture, axes, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_device_tool$MH() {
        return RuntimeHelper.requireNonNull(constants$1803.gtk_gesture_stylus_get_device_tool$MH,"gtk_gesture_stylus_get_device_tool");
    }
    public static MemoryAddress gtk_gesture_stylus_get_device_tool ( Addressable gesture) {
        var mh$ = gtk_gesture_stylus_get_device_tool$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_swipe_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1803.gtk_gesture_swipe_get_type$MH,"gtk_gesture_swipe_get_type");
    }
    public static long gtk_gesture_swipe_get_type () {
        var mh$ = gtk_gesture_swipe_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_swipe_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1803.gtk_gesture_swipe_new$MH,"gtk_gesture_swipe_new");
    }
    public static MemoryAddress gtk_gesture_swipe_new ( Addressable widget) {
        var mh$ = gtk_gesture_swipe_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_swipe_get_velocity$MH() {
        return RuntimeHelper.requireNonNull(constants$1804.gtk_gesture_swipe_get_velocity$MH,"gtk_gesture_swipe_get_velocity");
    }
    public static int gtk_gesture_swipe_get_velocity ( Addressable gesture,  Addressable velocity_x,  Addressable velocity_y) {
        var mh$ = gtk_gesture_swipe_get_velocity$MH();
        try {
            return (int)mh$.invokeExact(gesture, velocity_x, velocity_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_zoom_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1804.gtk_gesture_zoom_get_type$MH,"gtk_gesture_zoom_get_type");
    }
    public static long gtk_gesture_zoom_get_type () {
        var mh$ = gtk_gesture_zoom_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_zoom_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1804.gtk_gesture_zoom_new$MH,"gtk_gesture_zoom_new");
    }
    public static MemoryAddress gtk_gesture_zoom_new ( Addressable widget) {
        var mh$ = gtk_gesture_zoom_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_zoom_get_scale_delta$MH() {
        return RuntimeHelper.requireNonNull(constants$1804.gtk_gesture_zoom_get_scale_delta$MH,"gtk_gesture_zoom_get_scale_delta");
    }
    public static double gtk_gesture_zoom_get_scale_delta ( Addressable gesture) {
        var mh$ = gtk_gesture_zoom_get_scale_delta$MH();
        try {
            return (double)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1804.gtk_gl_area_get_type$MH,"gtk_gl_area_get_type");
    }
    public static long gtk_gl_area_get_type () {
        var mh$ = gtk_gl_area_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1804.gtk_gl_area_new$MH,"gtk_gl_area_new");
    }
    public static MemoryAddress gtk_gl_area_new () {
        var mh$ = gtk_gl_area_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_use_es$MH() {
        return RuntimeHelper.requireNonNull(constants$1805.gtk_gl_area_set_use_es$MH,"gtk_gl_area_set_use_es");
    }
    public static void gtk_gl_area_set_use_es ( Addressable area,  int use_es) {
        var mh$ = gtk_gl_area_set_use_es$MH();
        try {
            mh$.invokeExact(area, use_es);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_use_es$MH() {
        return RuntimeHelper.requireNonNull(constants$1805.gtk_gl_area_get_use_es$MH,"gtk_gl_area_get_use_es");
    }
    public static int gtk_gl_area_get_use_es ( Addressable area) {
        var mh$ = gtk_gl_area_get_use_es$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_required_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1805.gtk_gl_area_set_required_version$MH,"gtk_gl_area_set_required_version");
    }
    public static void gtk_gl_area_set_required_version ( Addressable area,  int major,  int minor) {
        var mh$ = gtk_gl_area_set_required_version$MH();
        try {
            mh$.invokeExact(area, major, minor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_required_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1805.gtk_gl_area_get_required_version$MH,"gtk_gl_area_get_required_version");
    }
    public static void gtk_gl_area_get_required_version ( Addressable area,  Addressable major,  Addressable minor) {
        var mh$ = gtk_gl_area_get_required_version$MH();
        try {
            mh$.invokeExact(area, major, minor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_has_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1805.gtk_gl_area_get_has_alpha$MH,"gtk_gl_area_get_has_alpha");
    }
    public static int gtk_gl_area_get_has_alpha ( Addressable area) {
        var mh$ = gtk_gl_area_get_has_alpha$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_has_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1805.gtk_gl_area_set_has_alpha$MH,"gtk_gl_area_set_has_alpha");
    }
    public static void gtk_gl_area_set_has_alpha ( Addressable area,  int has_alpha) {
        var mh$ = gtk_gl_area_set_has_alpha$MH();
        try {
            mh$.invokeExact(area, has_alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_has_depth_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1806.gtk_gl_area_get_has_depth_buffer$MH,"gtk_gl_area_get_has_depth_buffer");
    }
    public static int gtk_gl_area_get_has_depth_buffer ( Addressable area) {
        var mh$ = gtk_gl_area_get_has_depth_buffer$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_has_depth_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1806.gtk_gl_area_set_has_depth_buffer$MH,"gtk_gl_area_set_has_depth_buffer");
    }
    public static void gtk_gl_area_set_has_depth_buffer ( Addressable area,  int has_depth_buffer) {
        var mh$ = gtk_gl_area_set_has_depth_buffer$MH();
        try {
            mh$.invokeExact(area, has_depth_buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_has_stencil_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1806.gtk_gl_area_get_has_stencil_buffer$MH,"gtk_gl_area_get_has_stencil_buffer");
    }
    public static int gtk_gl_area_get_has_stencil_buffer ( Addressable area) {
        var mh$ = gtk_gl_area_get_has_stencil_buffer$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_has_stencil_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1806.gtk_gl_area_set_has_stencil_buffer$MH,"gtk_gl_area_set_has_stencil_buffer");
    }
    public static void gtk_gl_area_set_has_stencil_buffer ( Addressable area,  int has_stencil_buffer) {
        var mh$ = gtk_gl_area_set_has_stencil_buffer$MH();
        try {
            mh$.invokeExact(area, has_stencil_buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_auto_render$MH() {
        return RuntimeHelper.requireNonNull(constants$1806.gtk_gl_area_get_auto_render$MH,"gtk_gl_area_get_auto_render");
    }
    public static int gtk_gl_area_get_auto_render ( Addressable area) {
        var mh$ = gtk_gl_area_get_auto_render$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_auto_render$MH() {
        return RuntimeHelper.requireNonNull(constants$1806.gtk_gl_area_set_auto_render$MH,"gtk_gl_area_set_auto_render");
    }
    public static void gtk_gl_area_set_auto_render ( Addressable area,  int auto_render) {
        var mh$ = gtk_gl_area_set_auto_render$MH();
        try {
            mh$.invokeExact(area, auto_render);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_queue_render$MH() {
        return RuntimeHelper.requireNonNull(constants$1807.gtk_gl_area_queue_render$MH,"gtk_gl_area_queue_render");
    }
    public static void gtk_gl_area_queue_render ( Addressable area) {
        var mh$ = gtk_gl_area_queue_render$MH();
        try {
            mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1807.gtk_gl_area_get_context$MH,"gtk_gl_area_get_context");
    }
    public static MemoryAddress gtk_gl_area_get_context ( Addressable area) {
        var mh$ = gtk_gl_area_get_context$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_make_current$MH() {
        return RuntimeHelper.requireNonNull(constants$1807.gtk_gl_area_make_current$MH,"gtk_gl_area_make_current");
    }
    public static void gtk_gl_area_make_current ( Addressable area) {
        var mh$ = gtk_gl_area_make_current$MH();
        try {
            mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_attach_buffers$MH() {
        return RuntimeHelper.requireNonNull(constants$1807.gtk_gl_area_attach_buffers$MH,"gtk_gl_area_attach_buffers");
    }
    public static void gtk_gl_area_attach_buffers ( Addressable area) {
        var mh$ = gtk_gl_area_attach_buffers$MH();
        try {
            mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1807.gtk_gl_area_set_error$MH,"gtk_gl_area_set_error");
    }
    public static void gtk_gl_area_set_error ( Addressable area,  Addressable error) {
        var mh$ = gtk_gl_area_set_error$MH();
        try {
            mh$.invokeExact(area, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1807.gtk_gl_area_get_error$MH,"gtk_gl_area_get_error");
    }
    public static MemoryAddress gtk_gl_area_get_error ( Addressable area) {
        var mh$ = gtk_gl_area_get_error$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1808.gtk_grid_get_type$MH,"gtk_grid_get_type");
    }
    public static long gtk_grid_get_type () {
        var mh$ = gtk_grid_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1808.gtk_grid_new$MH,"gtk_grid_new");
    }
    public static MemoryAddress gtk_grid_new () {
        var mh$ = gtk_grid_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_attach$MH() {
        return RuntimeHelper.requireNonNull(constants$1808.gtk_grid_attach$MH,"gtk_grid_attach");
    }
    public static void gtk_grid_attach ( Addressable grid,  Addressable child,  int left,  int top,  int width,  int height) {
        var mh$ = gtk_grid_attach$MH();
        try {
            mh$.invokeExact(grid, child, left, top, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_attach_next_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1808.gtk_grid_attach_next_to$MH,"gtk_grid_attach_next_to");
    }
    public static void gtk_grid_attach_next_to ( Addressable grid,  Addressable child,  Addressable sibling,  int side,  int width,  int height) {
        var mh$ = gtk_grid_attach_next_to$MH();
        try {
            mh$.invokeExact(grid, child, sibling, side, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_child_at$MH() {
        return RuntimeHelper.requireNonNull(constants$1808.gtk_grid_get_child_at$MH,"gtk_grid_get_child_at");
    }
    public static MemoryAddress gtk_grid_get_child_at ( Addressable grid,  int left,  int top) {
        var mh$ = gtk_grid_get_child_at$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(grid, left, top);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_insert_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1808.gtk_grid_insert_row$MH,"gtk_grid_insert_row");
    }
    public static void gtk_grid_insert_row ( Addressable grid,  int position) {
        var mh$ = gtk_grid_insert_row$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_insert_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1809.gtk_grid_insert_column$MH,"gtk_grid_insert_column");
    }
    public static void gtk_grid_insert_column ( Addressable grid,  int position) {
        var mh$ = gtk_grid_insert_column$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_remove_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1809.gtk_grid_remove_row$MH,"gtk_grid_remove_row");
    }
    public static void gtk_grid_remove_row ( Addressable grid,  int position) {
        var mh$ = gtk_grid_remove_row$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_remove_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1809.gtk_grid_remove_column$MH,"gtk_grid_remove_column");
    }
    public static void gtk_grid_remove_column ( Addressable grid,  int position) {
        var mh$ = gtk_grid_remove_column$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_insert_next_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1809.gtk_grid_insert_next_to$MH,"gtk_grid_insert_next_to");
    }
    public static void gtk_grid_insert_next_to ( Addressable grid,  Addressable sibling,  int side) {
        var mh$ = gtk_grid_insert_next_to$MH();
        try {
            mh$.invokeExact(grid, sibling, side);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_row_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1809.gtk_grid_set_row_homogeneous$MH,"gtk_grid_set_row_homogeneous");
    }
    public static void gtk_grid_set_row_homogeneous ( Addressable grid,  int homogeneous) {
        var mh$ = gtk_grid_set_row_homogeneous$MH();
        try {
            mh$.invokeExact(grid, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_row_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1809.gtk_grid_get_row_homogeneous$MH,"gtk_grid_get_row_homogeneous");
    }
    public static int gtk_grid_get_row_homogeneous ( Addressable grid) {
        var mh$ = gtk_grid_get_row_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1810.gtk_grid_set_row_spacing$MH,"gtk_grid_set_row_spacing");
    }
    public static void gtk_grid_set_row_spacing ( Addressable grid,  int spacing) {
        var mh$ = gtk_grid_set_row_spacing$MH();
        try {
            mh$.invokeExact(grid, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1810.gtk_grid_get_row_spacing$MH,"gtk_grid_get_row_spacing");
    }
    public static int gtk_grid_get_row_spacing ( Addressable grid) {
        var mh$ = gtk_grid_get_row_spacing$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_column_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1810.gtk_grid_set_column_homogeneous$MH,"gtk_grid_set_column_homogeneous");
    }
    public static void gtk_grid_set_column_homogeneous ( Addressable grid,  int homogeneous) {
        var mh$ = gtk_grid_set_column_homogeneous$MH();
        try {
            mh$.invokeExact(grid, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_column_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1810.gtk_grid_get_column_homogeneous$MH,"gtk_grid_get_column_homogeneous");
    }
    public static int gtk_grid_get_column_homogeneous ( Addressable grid) {
        var mh$ = gtk_grid_get_column_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1810.gtk_grid_set_column_spacing$MH,"gtk_grid_set_column_spacing");
    }
    public static void gtk_grid_set_column_spacing ( Addressable grid,  int spacing) {
        var mh$ = gtk_grid_set_column_spacing$MH();
        try {
            mh$.invokeExact(grid, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1810.gtk_grid_get_column_spacing$MH,"gtk_grid_get_column_spacing");
    }
    public static int gtk_grid_get_column_spacing ( Addressable grid) {
        var mh$ = gtk_grid_get_column_spacing$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_row_baseline_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1811.gtk_grid_set_row_baseline_position$MH,"gtk_grid_set_row_baseline_position");
    }
    public static void gtk_grid_set_row_baseline_position ( Addressable grid,  int row,  int pos) {
        var mh$ = gtk_grid_set_row_baseline_position$MH();
        try {
            mh$.invokeExact(grid, row, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_row_baseline_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1811.gtk_grid_get_row_baseline_position$MH,"gtk_grid_get_row_baseline_position");
    }
    public static int gtk_grid_get_row_baseline_position ( Addressable grid,  int row) {
        var mh$ = gtk_grid_get_row_baseline_position$MH();
        try {
            return (int)mh$.invokeExact(grid, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_baseline_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1811.gtk_grid_set_baseline_row$MH,"gtk_grid_set_baseline_row");
    }
    public static void gtk_grid_set_baseline_row ( Addressable grid,  int row) {
        var mh$ = gtk_grid_set_baseline_row$MH();
        try {
            mh$.invokeExact(grid, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_baseline_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1811.gtk_grid_get_baseline_row$MH,"gtk_grid_get_baseline_row");
    }
    public static int gtk_grid_get_baseline_row ( Addressable grid) {
        var mh$ = gtk_grid_get_baseline_row$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1811.gtk_header_bar_get_type$MH,"gtk_header_bar_get_type");
    }
    public static long gtk_header_bar_get_type () {
        var mh$ = gtk_header_bar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1811.gtk_header_bar_new$MH,"gtk_header_bar_new");
    }
    public static MemoryAddress gtk_header_bar_new () {
        var mh$ = gtk_header_bar_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1812.gtk_header_bar_set_title$MH,"gtk_header_bar_set_title");
    }
    public static void gtk_header_bar_set_title ( Addressable bar,  Addressable title) {
        var mh$ = gtk_header_bar_set_title$MH();
        try {
            mh$.invokeExact(bar, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1812.gtk_header_bar_get_title$MH,"gtk_header_bar_get_title");
    }
    public static MemoryAddress gtk_header_bar_get_title ( Addressable bar) {
        var mh$ = gtk_header_bar_get_title$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_set_subtitle$MH() {
        return RuntimeHelper.requireNonNull(constants$1812.gtk_header_bar_set_subtitle$MH,"gtk_header_bar_set_subtitle");
    }
    public static void gtk_header_bar_set_subtitle ( Addressable bar,  Addressable subtitle) {
        var mh$ = gtk_header_bar_set_subtitle$MH();
        try {
            mh$.invokeExact(bar, subtitle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_subtitle$MH() {
        return RuntimeHelper.requireNonNull(constants$1812.gtk_header_bar_get_subtitle$MH,"gtk_header_bar_get_subtitle");
    }
    public static MemoryAddress gtk_header_bar_get_subtitle ( Addressable bar) {
        var mh$ = gtk_header_bar_get_subtitle$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_set_custom_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1812.gtk_header_bar_set_custom_title$MH,"gtk_header_bar_set_custom_title");
    }
    public static void gtk_header_bar_set_custom_title ( Addressable bar,  Addressable title_widget) {
        var mh$ = gtk_header_bar_set_custom_title$MH();
        try {
            mh$.invokeExact(bar, title_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_custom_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1812.gtk_header_bar_get_custom_title$MH,"gtk_header_bar_get_custom_title");
    }
    public static MemoryAddress gtk_header_bar_get_custom_title ( Addressable bar) {
        var mh$ = gtk_header_bar_get_custom_title$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_pack_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1813.gtk_header_bar_pack_start$MH,"gtk_header_bar_pack_start");
    }
    public static void gtk_header_bar_pack_start ( Addressable bar,  Addressable child) {
        var mh$ = gtk_header_bar_pack_start$MH();
        try {
            mh$.invokeExact(bar, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_pack_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1813.gtk_header_bar_pack_end$MH,"gtk_header_bar_pack_end");
    }
    public static void gtk_header_bar_pack_end ( Addressable bar,  Addressable child) {
        var mh$ = gtk_header_bar_pack_end$MH();
        try {
            mh$.invokeExact(bar, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_show_close_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1813.gtk_header_bar_get_show_close_button$MH,"gtk_header_bar_get_show_close_button");
    }
    public static int gtk_header_bar_get_show_close_button ( Addressable bar) {
        var mh$ = gtk_header_bar_get_show_close_button$MH();
        try {
            return (int)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_set_show_close_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1813.gtk_header_bar_set_show_close_button$MH,"gtk_header_bar_set_show_close_button");
    }
    public static void gtk_header_bar_set_show_close_button ( Addressable bar,  int setting) {
        var mh$ = gtk_header_bar_set_show_close_button$MH();
        try {
            mh$.invokeExact(bar, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_set_has_subtitle$MH() {
        return RuntimeHelper.requireNonNull(constants$1813.gtk_header_bar_set_has_subtitle$MH,"gtk_header_bar_set_has_subtitle");
    }
    public static void gtk_header_bar_set_has_subtitle ( Addressable bar,  int setting) {
        var mh$ = gtk_header_bar_set_has_subtitle$MH();
        try {
            mh$.invokeExact(bar, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_has_subtitle$MH() {
        return RuntimeHelper.requireNonNull(constants$1813.gtk_header_bar_get_has_subtitle$MH,"gtk_header_bar_get_has_subtitle");
    }
    public static int gtk_header_bar_get_has_subtitle ( Addressable bar) {
        var mh$ = gtk_header_bar_get_has_subtitle$MH();
        try {
            return (int)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_set_decoration_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1814.gtk_header_bar_set_decoration_layout$MH,"gtk_header_bar_set_decoration_layout");
    }
    public static void gtk_header_bar_set_decoration_layout ( Addressable bar,  Addressable layout) {
        var mh$ = gtk_header_bar_set_decoration_layout$MH();
        try {
            mh$.invokeExact(bar, layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_decoration_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1814.gtk_header_bar_get_decoration_layout$MH,"gtk_header_bar_get_decoration_layout");
    }
    public static MemoryAddress gtk_header_bar_get_decoration_layout ( Addressable bar) {
        var mh$ = gtk_header_bar_get_decoration_layout$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_factory_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1814.gtk_icon_factory_get_type$MH,"gtk_icon_factory_get_type");
    }
    public static long gtk_icon_factory_get_type () {
        var mh$ = gtk_icon_factory_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_factory_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1814.gtk_icon_factory_new$MH,"gtk_icon_factory_new");
    }
    public static MemoryAddress gtk_icon_factory_new () {
        var mh$ = gtk_icon_factory_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_factory_add$MH() {
        return RuntimeHelper.requireNonNull(constants$1814.gtk_icon_factory_add$MH,"gtk_icon_factory_add");
    }
    public static void gtk_icon_factory_add ( Addressable factory,  Addressable stock_id,  Addressable icon_set) {
        var mh$ = gtk_icon_factory_add$MH();
        try {
            mh$.invokeExact(factory, stock_id, icon_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_factory_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$1814.gtk_icon_factory_lookup$MH,"gtk_icon_factory_lookup");
    }
    public static MemoryAddress gtk_icon_factory_lookup ( Addressable factory,  Addressable stock_id) {
        var mh$ = gtk_icon_factory_lookup$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(factory, stock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_factory_add_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1815.gtk_icon_factory_add_default$MH,"gtk_icon_factory_add_default");
    }
    public static void gtk_icon_factory_add_default ( Addressable factory) {
        var mh$ = gtk_icon_factory_add_default$MH();
        try {
            mh$.invokeExact(factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_factory_remove_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1815.gtk_icon_factory_remove_default$MH,"gtk_icon_factory_remove_default");
    }
    public static void gtk_icon_factory_remove_default ( Addressable factory) {
        var mh$ = gtk_icon_factory_remove_default$MH();
        try {
            mh$.invokeExact(factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_factory_lookup_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1815.gtk_icon_factory_lookup_default$MH,"gtk_icon_factory_lookup_default");
    }
    public static MemoryAddress gtk_icon_factory_lookup_default ( Addressable stock_id) {
        var mh$ = gtk_icon_factory_lookup_default$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_size_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$1815.gtk_icon_size_lookup$MH,"gtk_icon_size_lookup");
    }
    public static int gtk_icon_size_lookup ( int size,  Addressable width,  Addressable height) {
        var mh$ = gtk_icon_size_lookup$MH();
        try {
            return (int)mh$.invokeExact(size, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_size_lookup_for_settings$MH() {
        return RuntimeHelper.requireNonNull(constants$1815.gtk_icon_size_lookup_for_settings$MH,"gtk_icon_size_lookup_for_settings");
    }
    public static int gtk_icon_size_lookup_for_settings ( Addressable settings,  int size,  Addressable width,  Addressable height) {
        var mh$ = gtk_icon_size_lookup_for_settings$MH();
        try {
            return (int)mh$.invokeExact(settings, size, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_size_register$MH() {
        return RuntimeHelper.requireNonNull(constants$1815.gtk_icon_size_register$MH,"gtk_icon_size_register");
    }
    public static int gtk_icon_size_register ( Addressable name,  int width,  int height) {
        var mh$ = gtk_icon_size_register$MH();
        try {
            return (int)mh$.invokeExact(name, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_size_register_alias$MH() {
        return RuntimeHelper.requireNonNull(constants$1816.gtk_icon_size_register_alias$MH,"gtk_icon_size_register_alias");
    }
    public static void gtk_icon_size_register_alias ( Addressable alias,  int target) {
        var mh$ = gtk_icon_size_register_alias$MH();
        try {
            mh$.invokeExact(alias, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_size_from_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1816.gtk_icon_size_from_name$MH,"gtk_icon_size_from_name");
    }
    public static int gtk_icon_size_from_name ( Addressable name) {
        var mh$ = gtk_icon_size_from_name$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_size_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1816.gtk_icon_size_get_name$MH,"gtk_icon_size_get_name");
    }
    public static MemoryAddress gtk_icon_size_get_name ( int size) {
        var mh$ = gtk_icon_size_get_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1816.gtk_icon_set_get_type$MH,"gtk_icon_set_get_type");
    }
    public static long gtk_icon_set_get_type () {
        var mh$ = gtk_icon_set_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1816.gtk_icon_set_new$MH,"gtk_icon_set_new");
    }
    public static MemoryAddress gtk_icon_set_new () {
        var mh$ = gtk_icon_set_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_new_from_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1816.gtk_icon_set_new_from_pixbuf$MH,"gtk_icon_set_new_from_pixbuf");
    }
    public static MemoryAddress gtk_icon_set_new_from_pixbuf ( Addressable pixbuf) {
        var mh$ = gtk_icon_set_new_from_pixbuf$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1817.gtk_icon_set_ref$MH,"gtk_icon_set_ref");
    }
    public static MemoryAddress gtk_icon_set_ref ( Addressable icon_set) {
        var mh$ = gtk_icon_set_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(icon_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1817.gtk_icon_set_unref$MH,"gtk_icon_set_unref");
    }
    public static void gtk_icon_set_unref ( Addressable icon_set) {
        var mh$ = gtk_icon_set_unref$MH();
        try {
            mh$.invokeExact(icon_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1817.gtk_icon_set_copy$MH,"gtk_icon_set_copy");
    }
    public static MemoryAddress gtk_icon_set_copy ( Addressable icon_set) {
        var mh$ = gtk_icon_set_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(icon_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_render_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1817.gtk_icon_set_render_icon$MH,"gtk_icon_set_render_icon");
    }
    public static MemoryAddress gtk_icon_set_render_icon ( Addressable icon_set,  Addressable style,  int direction,  int state,  int size,  Addressable widget,  Addressable detail) {
        var mh$ = gtk_icon_set_render_icon$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(icon_set, style, direction, state, size, widget, detail);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_add_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1817.gtk_icon_set_add_source$MH,"gtk_icon_set_add_source");
    }
    public static void gtk_icon_set_add_source ( Addressable icon_set,  Addressable source) {
        var mh$ = gtk_icon_set_add_source$MH();
        try {
            mh$.invokeExact(icon_set, source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_get_sizes$MH() {
        return RuntimeHelper.requireNonNull(constants$1817.gtk_icon_set_get_sizes$MH,"gtk_icon_set_get_sizes");
    }
    public static void gtk_icon_set_get_sizes ( Addressable icon_set,  Addressable sizes,  Addressable n_sizes) {
        var mh$ = gtk_icon_set_get_sizes$MH();
        try {
            mh$.invokeExact(icon_set, sizes, n_sizes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1818.gtk_icon_source_get_type$MH,"gtk_icon_source_get_type");
    }
    public static long gtk_icon_source_get_type () {
        var mh$ = gtk_icon_source_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1818.gtk_icon_source_new$MH,"gtk_icon_source_new");
    }
    public static MemoryAddress gtk_icon_source_new () {
        var mh$ = gtk_icon_source_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1818.gtk_icon_source_copy$MH,"gtk_icon_source_copy");
    }
    public static MemoryAddress gtk_icon_source_copy ( Addressable source) {
        var mh$ = gtk_icon_source_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1818.gtk_icon_source_free$MH,"gtk_icon_source_free");
    }
    public static void gtk_icon_source_free ( Addressable source) {
        var mh$ = gtk_icon_source_free$MH();
        try {
            mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_set_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$1818.gtk_icon_source_set_filename$MH,"gtk_icon_source_set_filename");
    }
    public static void gtk_icon_source_set_filename ( Addressable source,  Addressable filename) {
        var mh$ = gtk_icon_source_set_filename$MH();
        try {
            mh$.invokeExact(source, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_set_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1818.gtk_icon_source_set_icon_name$MH,"gtk_icon_source_set_icon_name");
    }
    public static void gtk_icon_source_set_icon_name ( Addressable source,  Addressable icon_name) {
        var mh$ = gtk_icon_source_set_icon_name$MH();
        try {
            mh$.invokeExact(source, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_set_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1819.gtk_icon_source_set_pixbuf$MH,"gtk_icon_source_set_pixbuf");
    }
    public static void gtk_icon_source_set_pixbuf ( Addressable source,  Addressable pixbuf) {
        var mh$ = gtk_icon_source_set_pixbuf$MH();
        try {
            mh$.invokeExact(source, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$1819.gtk_icon_source_get_filename$MH,"gtk_icon_source_get_filename");
    }
    public static MemoryAddress gtk_icon_source_get_filename ( Addressable source) {
        var mh$ = gtk_icon_source_get_filename$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1819.gtk_icon_source_get_icon_name$MH,"gtk_icon_source_get_icon_name");
    }
    public static MemoryAddress gtk_icon_source_get_icon_name ( Addressable source) {
        var mh$ = gtk_icon_source_get_icon_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1819.gtk_icon_source_get_pixbuf$MH,"gtk_icon_source_get_pixbuf");
    }
    public static MemoryAddress gtk_icon_source_get_pixbuf ( Addressable source) {
        var mh$ = gtk_icon_source_get_pixbuf$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_set_direction_wildcarded$MH() {
        return RuntimeHelper.requireNonNull(constants$1819.gtk_icon_source_set_direction_wildcarded$MH,"gtk_icon_source_set_direction_wildcarded");
    }
    public static void gtk_icon_source_set_direction_wildcarded ( Addressable source,  int setting) {
        var mh$ = gtk_icon_source_set_direction_wildcarded$MH();
        try {
            mh$.invokeExact(source, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_set_state_wildcarded$MH() {
        return RuntimeHelper.requireNonNull(constants$1819.gtk_icon_source_set_state_wildcarded$MH,"gtk_icon_source_set_state_wildcarded");
    }
    public static void gtk_icon_source_set_state_wildcarded ( Addressable source,  int setting) {
        var mh$ = gtk_icon_source_set_state_wildcarded$MH();
        try {
            mh$.invokeExact(source, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_set_size_wildcarded$MH() {
        return RuntimeHelper.requireNonNull(constants$1820.gtk_icon_source_set_size_wildcarded$MH,"gtk_icon_source_set_size_wildcarded");
    }
    public static void gtk_icon_source_set_size_wildcarded ( Addressable source,  int setting) {
        var mh$ = gtk_icon_source_set_size_wildcarded$MH();
        try {
            mh$.invokeExact(source, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_size_wildcarded$MH() {
        return RuntimeHelper.requireNonNull(constants$1820.gtk_icon_source_get_size_wildcarded$MH,"gtk_icon_source_get_size_wildcarded");
    }
    public static int gtk_icon_source_get_size_wildcarded ( Addressable source) {
        var mh$ = gtk_icon_source_get_size_wildcarded$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_state_wildcarded$MH() {
        return RuntimeHelper.requireNonNull(constants$1820.gtk_icon_source_get_state_wildcarded$MH,"gtk_icon_source_get_state_wildcarded");
    }
    public static int gtk_icon_source_get_state_wildcarded ( Addressable source) {
        var mh$ = gtk_icon_source_get_state_wildcarded$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_direction_wildcarded$MH() {
        return RuntimeHelper.requireNonNull(constants$1820.gtk_icon_source_get_direction_wildcarded$MH,"gtk_icon_source_get_direction_wildcarded");
    }
    public static int gtk_icon_source_get_direction_wildcarded ( Addressable source) {
        var mh$ = gtk_icon_source_get_direction_wildcarded$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_set_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1820.gtk_icon_source_set_direction$MH,"gtk_icon_source_set_direction");
    }
    public static void gtk_icon_source_set_direction ( Addressable source,  int direction) {
        var mh$ = gtk_icon_source_set_direction$MH();
        try {
            mh$.invokeExact(source, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_set_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1820.gtk_icon_source_set_state$MH,"gtk_icon_source_set_state");
    }
    public static void gtk_icon_source_set_state ( Addressable source,  int state) {
        var mh$ = gtk_icon_source_set_state$MH();
        try {
            mh$.invokeExact(source, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_set_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1821.gtk_icon_source_set_size$MH,"gtk_icon_source_set_size");
    }
    public static void gtk_icon_source_set_size ( Addressable source,  int size) {
        var mh$ = gtk_icon_source_set_size$MH();
        try {
            mh$.invokeExact(source, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1821.gtk_icon_source_get_direction$MH,"gtk_icon_source_get_direction");
    }
    public static int gtk_icon_source_get_direction ( Addressable source) {
        var mh$ = gtk_icon_source_get_direction$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1821.gtk_icon_source_get_state$MH,"gtk_icon_source_get_state");
    }
    public static int gtk_icon_source_get_state ( Addressable source) {
        var mh$ = gtk_icon_source_get_state$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1821.gtk_icon_source_get_size$MH,"gtk_icon_source_get_size");
    }
    public static int gtk_icon_source_get_size ( Addressable source) {
        var mh$ = gtk_icon_source_get_size$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1822.gtk_style_properties_get_type$MH,"gtk_style_properties_get_type");
    }
    public static long gtk_style_properties_get_type () {
        var mh$ = gtk_style_properties_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_register_property$MH() {
        return RuntimeHelper.requireNonNull(constants$1822.gtk_style_properties_register_property$MH,"gtk_style_properties_register_property");
    }
    public static void gtk_style_properties_register_property ( Addressable parse_func,  Addressable pspec) {
        var mh$ = gtk_style_properties_register_property$MH();
        try {
            mh$.invokeExact(parse_func, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_lookup_property$MH() {
        return RuntimeHelper.requireNonNull(constants$1822.gtk_style_properties_lookup_property$MH,"gtk_style_properties_lookup_property");
    }
    public static int gtk_style_properties_lookup_property ( Addressable property_name,  Addressable parse_func,  Addressable pspec) {
        var mh$ = gtk_style_properties_lookup_property$MH();
        try {
            return (int)mh$.invokeExact(property_name, parse_func, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1822.gtk_style_properties_new$MH,"gtk_style_properties_new");
    }
    public static MemoryAddress gtk_style_properties_new () {
        var mh$ = gtk_style_properties_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_map_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1822.gtk_style_properties_map_color$MH,"gtk_style_properties_map_color");
    }
    public static void gtk_style_properties_map_color ( Addressable props,  Addressable name,  Addressable color) {
        var mh$ = gtk_style_properties_map_color$MH();
        try {
            mh$.invokeExact(props, name, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_lookup_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1822.gtk_style_properties_lookup_color$MH,"gtk_style_properties_lookup_color");
    }
    public static MemoryAddress gtk_style_properties_lookup_color ( Addressable props,  Addressable name) {
        var mh$ = gtk_style_properties_lookup_color$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(props, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_set_property$MH() {
        return RuntimeHelper.requireNonNull(constants$1823.gtk_style_properties_set_property$MH,"gtk_style_properties_set_property");
    }
    public static void gtk_style_properties_set_property ( Addressable props,  Addressable property,  int state,  Addressable value) {
        var mh$ = gtk_style_properties_set_property$MH();
        try {
            mh$.invokeExact(props, property, state, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_set_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$1823.gtk_style_properties_set_valist$MH,"gtk_style_properties_set_valist");
    }
    public static void gtk_style_properties_set_valist ( Addressable props,  int state,  Addressable args) {
        var mh$ = gtk_style_properties_set_valist$MH();
        try {
            mh$.invokeExact(props, state, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1823.gtk_style_properties_set$MH,"gtk_style_properties_set");
    }
    public static void gtk_style_properties_set ( Addressable props,  int state, Object... x2) {
        var mh$ = gtk_style_properties_set$MH();
        try {
            mh$.invokeExact(props, state, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_get_property$MH() {
        return RuntimeHelper.requireNonNull(constants$1823.gtk_style_properties_get_property$MH,"gtk_style_properties_get_property");
    }
    public static int gtk_style_properties_get_property ( Addressable props,  Addressable property,  int state,  Addressable value) {
        var mh$ = gtk_style_properties_get_property$MH();
        try {
            return (int)mh$.invokeExact(props, property, state, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_get_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$1823.gtk_style_properties_get_valist$MH,"gtk_style_properties_get_valist");
    }
    public static void gtk_style_properties_get_valist ( Addressable props,  int state,  Addressable args) {
        var mh$ = gtk_style_properties_get_valist$MH();
        try {
            mh$.invokeExact(props, state, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1823.gtk_style_properties_get$MH,"gtk_style_properties_get");
    }
    public static void gtk_style_properties_get ( Addressable props,  int state, Object... x2) {
        var mh$ = gtk_style_properties_get$MH();
        try {
            mh$.invokeExact(props, state, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_unset_property$MH() {
        return RuntimeHelper.requireNonNull(constants$1824.gtk_style_properties_unset_property$MH,"gtk_style_properties_unset_property");
    }
    public static void gtk_style_properties_unset_property ( Addressable props,  Addressable property,  int state) {
        var mh$ = gtk_style_properties_unset_property$MH();
        try {
            mh$.invokeExact(props, property, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$1824.gtk_style_properties_clear$MH,"gtk_style_properties_clear");
    }
    public static void gtk_style_properties_clear ( Addressable props) {
        var mh$ = gtk_style_properties_clear$MH();
        try {
            mh$.invokeExact(props);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_merge$MH() {
        return RuntimeHelper.requireNonNull(constants$1824.gtk_style_properties_merge$MH,"gtk_style_properties_merge");
    }
    public static void gtk_style_properties_merge ( Addressable props,  Addressable props_to_merge,  int replace) {
        var mh$ = gtk_style_properties_merge$MH();
        try {
            mh$.invokeExact(props, props_to_merge, replace);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_provider_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1824.gtk_style_provider_get_type$MH,"gtk_style_provider_get_type");
    }
    public static long gtk_style_provider_get_type () {
        var mh$ = gtk_style_provider_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_provider_get_style$MH() {
        return RuntimeHelper.requireNonNull(constants$1824.gtk_style_provider_get_style$MH,"gtk_style_provider_get_style");
    }
    public static MemoryAddress gtk_style_provider_get_style ( Addressable provider,  Addressable path) {
        var mh$ = gtk_style_provider_get_style$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(provider, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_provider_get_style_property$MH() {
        return RuntimeHelper.requireNonNull(constants$1824.gtk_style_provider_get_style_property$MH,"gtk_style_provider_get_style_property");
    }
    public static int gtk_style_provider_get_style_property ( Addressable provider,  Addressable path,  int state,  Addressable pspec,  Addressable value) {
        var mh$ = gtk_style_provider_get_style_property$MH();
        try {
            return (int)mh$.invokeExact(provider, path, state, pspec, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_provider_get_icon_factory$MH() {
        return RuntimeHelper.requireNonNull(constants$1825.gtk_style_provider_get_icon_factory$MH,"gtk_style_provider_get_icon_factory");
    }
    public static MemoryAddress gtk_style_provider_get_icon_factory ( Addressable provider,  Addressable path) {
        var mh$ = gtk_style_provider_get_icon_factory$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(provider, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1825.gtk_style_context_get_type$MH,"gtk_style_context_get_type");
    }
    public static long gtk_style_context_get_type () {
        var mh$ = gtk_style_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1825.gtk_style_context_new$MH,"gtk_style_context_new");
    }
    public static MemoryAddress gtk_style_context_new () {
        var mh$ = gtk_style_context_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_add_provider_for_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1825.gtk_style_context_add_provider_for_screen$MH,"gtk_style_context_add_provider_for_screen");
    }
    public static void gtk_style_context_add_provider_for_screen ( Addressable screen,  Addressable provider,  int priority) {
        var mh$ = gtk_style_context_add_provider_for_screen$MH();
        try {
            mh$.invokeExact(screen, provider, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_remove_provider_for_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1825.gtk_style_context_remove_provider_for_screen$MH,"gtk_style_context_remove_provider_for_screen");
    }
    public static void gtk_style_context_remove_provider_for_screen ( Addressable screen,  Addressable provider) {
        var mh$ = gtk_style_context_remove_provider_for_screen$MH();
        try {
            mh$.invokeExact(screen, provider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_add_provider$MH() {
        return RuntimeHelper.requireNonNull(constants$1825.gtk_style_context_add_provider$MH,"gtk_style_context_add_provider");
    }
    public static void gtk_style_context_add_provider ( Addressable context,  Addressable provider,  int priority) {
        var mh$ = gtk_style_context_add_provider$MH();
        try {
            mh$.invokeExact(context, provider, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_remove_provider$MH() {
        return RuntimeHelper.requireNonNull(constants$1826.gtk_style_context_remove_provider$MH,"gtk_style_context_remove_provider");
    }
    public static void gtk_style_context_remove_provider ( Addressable context,  Addressable provider) {
        var mh$ = gtk_style_context_remove_provider$MH();
        try {
            mh$.invokeExact(context, provider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_save$MH() {
        return RuntimeHelper.requireNonNull(constants$1826.gtk_style_context_save$MH,"gtk_style_context_save");
    }
    public static void gtk_style_context_save ( Addressable context) {
        var mh$ = gtk_style_context_save$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_restore$MH() {
        return RuntimeHelper.requireNonNull(constants$1826.gtk_style_context_restore$MH,"gtk_style_context_restore");
    }
    public static void gtk_style_context_restore ( Addressable context) {
        var mh$ = gtk_style_context_restore$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_section$MH() {
        return RuntimeHelper.requireNonNull(constants$1826.gtk_style_context_get_section$MH,"gtk_style_context_get_section");
    }
    public static MemoryAddress gtk_style_context_get_section ( Addressable context,  Addressable property) {
        var mh$ = gtk_style_context_get_section$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context, property);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_property$MH() {
        return RuntimeHelper.requireNonNull(constants$1826.gtk_style_context_get_property$MH,"gtk_style_context_get_property");
    }
    public static void gtk_style_context_get_property ( Addressable context,  Addressable property,  int state,  Addressable value) {
        var mh$ = gtk_style_context_get_property$MH();
        try {
            mh$.invokeExact(context, property, state, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$1826.gtk_style_context_get_valist$MH,"gtk_style_context_get_valist");
    }
    public static void gtk_style_context_get_valist ( Addressable context,  int state,  Addressable args) {
        var mh$ = gtk_style_context_get_valist$MH();
        try {
            mh$.invokeExact(context, state, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1827.gtk_style_context_get$MH,"gtk_style_context_get");
    }
    public static void gtk_style_context_get ( Addressable context,  int state, Object... x2) {
        var mh$ = gtk_style_context_get$MH();
        try {
            mh$.invokeExact(context, state, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_set_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1827.gtk_style_context_set_state$MH,"gtk_style_context_set_state");
    }
    public static void gtk_style_context_set_state ( Addressable context,  int flags) {
        var mh$ = gtk_style_context_set_state$MH();
        try {
            mh$.invokeExact(context, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1827.gtk_style_context_get_state$MH,"gtk_style_context_get_state");
    }
    public static int gtk_style_context_get_state ( Addressable context) {
        var mh$ = gtk_style_context_get_state$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


