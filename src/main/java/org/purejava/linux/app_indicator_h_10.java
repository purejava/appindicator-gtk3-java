// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class app_indicator_h_10 extends app_indicator_h_9 {

    public static MethodHandle glib_slistautoptr_cleanup_GDataInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_slistautoptr_cleanup_GDataInputStream$MH,"glib_slistautoptr_cleanup_GDataInputStream");
    }
    public static void glib_slistautoptr_cleanup_GDataInputStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDataInputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDataInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_queueautoptr_cleanup_GDataInputStream$MH,"glib_queueautoptr_cleanup_GDataInputStream");
    }
    public static void glib_queueautoptr_cleanup_GDataInputStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDataInputStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDataOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDataOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDataOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDataOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDataOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_autoptr_clear_GDataOutputStream$MH,"glib_autoptr_clear_GDataOutputStream");
    }
    public static void glib_autoptr_clear_GDataOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDataOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDataOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_autoptr_cleanup_GDataOutputStream$MH,"glib_autoptr_cleanup_GDataOutputStream");
    }
    public static void glib_autoptr_cleanup_GDataOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDataOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDataOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_listautoptr_cleanup_GDataOutputStream$MH,"glib_listautoptr_cleanup_GDataOutputStream");
    }
    public static void glib_listautoptr_cleanup_GDataOutputStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDataOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDataOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_slistautoptr_cleanup_GDataOutputStream$MH,"glib_slistautoptr_cleanup_GDataOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GDataOutputStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDataOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDataOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_queueautoptr_cleanup_GDataOutputStream$MH,"glib_queueautoptr_cleanup_GDataOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GDataOutputStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDataOutputStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusActionGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusActionGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusActionGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusActionGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_autoptr_clear_GDBusActionGroup$MH,"glib_autoptr_clear_GDBusActionGroup");
    }
    public static void glib_autoptr_clear_GDBusActionGroup ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDBusActionGroup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_autoptr_cleanup_GDBusActionGroup$MH,"glib_autoptr_cleanup_GDBusActionGroup");
    }
    public static void glib_autoptr_cleanup_GDBusActionGroup ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDBusActionGroup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_listautoptr_cleanup_GDBusActionGroup$MH,"glib_listautoptr_cleanup_GDBusActionGroup");
    }
    public static void glib_listautoptr_cleanup_GDBusActionGroup ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDBusActionGroup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_slistautoptr_cleanup_GDBusActionGroup$MH,"glib_slistautoptr_cleanup_GDBusActionGroup");
    }
    public static void glib_slistautoptr_cleanup_GDBusActionGroup ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDBusActionGroup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_queueautoptr_cleanup_GDBusActionGroup$MH,"glib_queueautoptr_cleanup_GDBusActionGroup");
    }
    public static void glib_queueautoptr_cleanup_GDBusActionGroup ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDBusActionGroup$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusAuthObserver_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusAuthObserver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusAuthObserver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusAuthObserver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusAuthObserver$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_autoptr_clear_GDBusAuthObserver$MH,"glib_autoptr_clear_GDBusAuthObserver");
    }
    public static void glib_autoptr_clear_GDBusAuthObserver ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDBusAuthObserver$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusAuthObserver$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_autoptr_cleanup_GDBusAuthObserver$MH,"glib_autoptr_cleanup_GDBusAuthObserver");
    }
    public static void glib_autoptr_cleanup_GDBusAuthObserver ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDBusAuthObserver$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusAuthObserver$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_listautoptr_cleanup_GDBusAuthObserver$MH,"glib_listautoptr_cleanup_GDBusAuthObserver");
    }
    public static void glib_listautoptr_cleanup_GDBusAuthObserver ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDBusAuthObserver$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusAuthObserver$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_slistautoptr_cleanup_GDBusAuthObserver$MH,"glib_slistautoptr_cleanup_GDBusAuthObserver");
    }
    public static void glib_slistautoptr_cleanup_GDBusAuthObserver ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDBusAuthObserver$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusAuthObserver$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_queueautoptr_cleanup_GDBusAuthObserver$MH,"glib_queueautoptr_cleanup_GDBusAuthObserver");
    }
    public static void glib_queueautoptr_cleanup_GDBusAuthObserver ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDBusAuthObserver$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_autoptr_clear_GDBusConnection$MH,"glib_autoptr_clear_GDBusConnection");
    }
    public static void glib_autoptr_clear_GDBusConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDBusConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_autoptr_cleanup_GDBusConnection$MH,"glib_autoptr_cleanup_GDBusConnection");
    }
    public static void glib_autoptr_cleanup_GDBusConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDBusConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_listautoptr_cleanup_GDBusConnection$MH,"glib_listautoptr_cleanup_GDBusConnection");
    }
    public static void glib_listautoptr_cleanup_GDBusConnection ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDBusConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_slistautoptr_cleanup_GDBusConnection$MH,"glib_slistautoptr_cleanup_GDBusConnection");
    }
    public static void glib_slistautoptr_cleanup_GDBusConnection ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDBusConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_queueautoptr_cleanup_GDBusConnection$MH,"glib_queueautoptr_cleanup_GDBusConnection");
    }
    public static void glib_queueautoptr_cleanup_GDBusConnection ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDBusConnection$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusInterface_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusInterface_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusInterface_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusInterface_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_autoptr_clear_GDBusInterface$MH,"glib_autoptr_clear_GDBusInterface");
    }
    public static void glib_autoptr_clear_GDBusInterface ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDBusInterface$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_autoptr_cleanup_GDBusInterface$MH,"glib_autoptr_cleanup_GDBusInterface");
    }
    public static void glib_autoptr_cleanup_GDBusInterface ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDBusInterface$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_listautoptr_cleanup_GDBusInterface$MH,"glib_listautoptr_cleanup_GDBusInterface");
    }
    public static void glib_listautoptr_cleanup_GDBusInterface ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDBusInterface$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_slistautoptr_cleanup_GDBusInterface$MH,"glib_slistautoptr_cleanup_GDBusInterface");
    }
    public static void glib_slistautoptr_cleanup_GDBusInterface ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDBusInterface$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_queueautoptr_cleanup_GDBusInterface$MH,"glib_queueautoptr_cleanup_GDBusInterface");
    }
    public static void glib_queueautoptr_cleanup_GDBusInterface ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDBusInterface$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusInterfaceSkeleton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusInterfaceSkeleton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusInterfaceSkeleton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusInterfaceSkeleton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusInterfaceSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_autoptr_clear_GDBusInterfaceSkeleton$MH,"glib_autoptr_clear_GDBusInterfaceSkeleton");
    }
    public static void glib_autoptr_clear_GDBusInterfaceSkeleton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDBusInterfaceSkeleton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusInterfaceSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_autoptr_cleanup_GDBusInterfaceSkeleton$MH,"glib_autoptr_cleanup_GDBusInterfaceSkeleton");
    }
    public static void glib_autoptr_cleanup_GDBusInterfaceSkeleton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDBusInterfaceSkeleton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusInterfaceSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_listautoptr_cleanup_GDBusInterfaceSkeleton$MH,"glib_listautoptr_cleanup_GDBusInterfaceSkeleton");
    }
    public static void glib_listautoptr_cleanup_GDBusInterfaceSkeleton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDBusInterfaceSkeleton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusInterfaceSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_slistautoptr_cleanup_GDBusInterfaceSkeleton$MH,"glib_slistautoptr_cleanup_GDBusInterfaceSkeleton");
    }
    public static void glib_slistautoptr_cleanup_GDBusInterfaceSkeleton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDBusInterfaceSkeleton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusInterfaceSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_queueautoptr_cleanup_GDBusInterfaceSkeleton$MH,"glib_queueautoptr_cleanup_GDBusInterfaceSkeleton");
    }
    public static void glib_queueautoptr_cleanup_GDBusInterfaceSkeleton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDBusInterfaceSkeleton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusMenuModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMenuModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMenuModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMenuModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_autoptr_clear_GDBusMenuModel$MH,"glib_autoptr_clear_GDBusMenuModel");
    }
    public static void glib_autoptr_clear_GDBusMenuModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDBusMenuModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_autoptr_cleanup_GDBusMenuModel$MH,"glib_autoptr_cleanup_GDBusMenuModel");
    }
    public static void glib_autoptr_cleanup_GDBusMenuModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDBusMenuModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_listautoptr_cleanup_GDBusMenuModel$MH,"glib_listautoptr_cleanup_GDBusMenuModel");
    }
    public static void glib_listautoptr_cleanup_GDBusMenuModel ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDBusMenuModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_slistautoptr_cleanup_GDBusMenuModel$MH,"glib_slistautoptr_cleanup_GDBusMenuModel");
    }
    public static void glib_slistautoptr_cleanup_GDBusMenuModel ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDBusMenuModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_queueautoptr_cleanup_GDBusMenuModel$MH,"glib_queueautoptr_cleanup_GDBusMenuModel");
    }
    public static void glib_queueautoptr_cleanup_GDBusMenuModel ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDBusMenuModel$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusMessage_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMessage_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMessage_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMessage_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_autoptr_clear_GDBusMessage$MH,"glib_autoptr_clear_GDBusMessage");
    }
    public static void glib_autoptr_clear_GDBusMessage ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDBusMessage$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_autoptr_cleanup_GDBusMessage$MH,"glib_autoptr_cleanup_GDBusMessage");
    }
    public static void glib_autoptr_cleanup_GDBusMessage ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDBusMessage$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_listautoptr_cleanup_GDBusMessage$MH,"glib_listautoptr_cleanup_GDBusMessage");
    }
    public static void glib_listautoptr_cleanup_GDBusMessage ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDBusMessage$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_slistautoptr_cleanup_GDBusMessage$MH,"glib_slistautoptr_cleanup_GDBusMessage");
    }
    public static void glib_slistautoptr_cleanup_GDBusMessage ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDBusMessage$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_queueautoptr_cleanup_GDBusMessage$MH,"glib_queueautoptr_cleanup_GDBusMessage");
    }
    public static void glib_queueautoptr_cleanup_GDBusMessage ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDBusMessage$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusMethodInvocation_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMethodInvocation_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMethodInvocation_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMethodInvocation_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusMethodInvocation$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_autoptr_clear_GDBusMethodInvocation$MH,"glib_autoptr_clear_GDBusMethodInvocation");
    }
    public static void glib_autoptr_clear_GDBusMethodInvocation ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDBusMethodInvocation$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusMethodInvocation$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_autoptr_cleanup_GDBusMethodInvocation$MH,"glib_autoptr_cleanup_GDBusMethodInvocation");
    }
    public static void glib_autoptr_cleanup_GDBusMethodInvocation ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDBusMethodInvocation$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusMethodInvocation$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_listautoptr_cleanup_GDBusMethodInvocation$MH,"glib_listautoptr_cleanup_GDBusMethodInvocation");
    }
    public static void glib_listautoptr_cleanup_GDBusMethodInvocation ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDBusMethodInvocation$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusMethodInvocation$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_slistautoptr_cleanup_GDBusMethodInvocation$MH,"glib_slistautoptr_cleanup_GDBusMethodInvocation");
    }
    public static void glib_slistautoptr_cleanup_GDBusMethodInvocation ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDBusMethodInvocation$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusMethodInvocation$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_queueautoptr_cleanup_GDBusMethodInvocation$MH,"glib_queueautoptr_cleanup_GDBusMethodInvocation");
    }
    public static void glib_queueautoptr_cleanup_GDBusMethodInvocation ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDBusMethodInvocation$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusNodeInfo_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusNodeInfo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusNodeInfo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusNodeInfo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusNodeInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_autoptr_clear_GDBusNodeInfo$MH,"glib_autoptr_clear_GDBusNodeInfo");
    }
    public static void glib_autoptr_clear_GDBusNodeInfo ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDBusNodeInfo$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusNodeInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_autoptr_cleanup_GDBusNodeInfo$MH,"glib_autoptr_cleanup_GDBusNodeInfo");
    }
    public static void glib_autoptr_cleanup_GDBusNodeInfo ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDBusNodeInfo$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusNodeInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_listautoptr_cleanup_GDBusNodeInfo$MH,"glib_listautoptr_cleanup_GDBusNodeInfo");
    }
    public static void glib_listautoptr_cleanup_GDBusNodeInfo ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDBusNodeInfo$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusNodeInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_slistautoptr_cleanup_GDBusNodeInfo$MH,"glib_slistautoptr_cleanup_GDBusNodeInfo");
    }
    public static void glib_slistautoptr_cleanup_GDBusNodeInfo ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDBusNodeInfo$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusNodeInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_queueautoptr_cleanup_GDBusNodeInfo$MH,"glib_queueautoptr_cleanup_GDBusNodeInfo");
    }
    public static void glib_queueautoptr_cleanup_GDBusNodeInfo ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDBusNodeInfo$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusObject_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObject_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObject_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObject_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusObject$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_autoptr_clear_GDBusObject$MH,"glib_autoptr_clear_GDBusObject");
    }
    public static void glib_autoptr_clear_GDBusObject ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDBusObject$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusObject$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_autoptr_cleanup_GDBusObject$MH,"glib_autoptr_cleanup_GDBusObject");
    }
    public static void glib_autoptr_cleanup_GDBusObject ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDBusObject$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusObject$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_listautoptr_cleanup_GDBusObject$MH,"glib_listautoptr_cleanup_GDBusObject");
    }
    public static void glib_listautoptr_cleanup_GDBusObject ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDBusObject$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusObject$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_slistautoptr_cleanup_GDBusObject$MH,"glib_slistautoptr_cleanup_GDBusObject");
    }
    public static void glib_slistautoptr_cleanup_GDBusObject ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDBusObject$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusObject$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_queueautoptr_cleanup_GDBusObject$MH,"glib_queueautoptr_cleanup_GDBusObject");
    }
    public static void glib_queueautoptr_cleanup_GDBusObject ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDBusObject$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusObjectManagerClient_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManagerClient_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManagerClient_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManagerClient_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusObjectManagerClient$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_autoptr_clear_GDBusObjectManagerClient$MH,"glib_autoptr_clear_GDBusObjectManagerClient");
    }
    public static void glib_autoptr_clear_GDBusObjectManagerClient ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDBusObjectManagerClient$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusObjectManagerClient$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_autoptr_cleanup_GDBusObjectManagerClient$MH,"glib_autoptr_cleanup_GDBusObjectManagerClient");
    }
    public static void glib_autoptr_cleanup_GDBusObjectManagerClient ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDBusObjectManagerClient$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusObjectManagerClient$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_listautoptr_cleanup_GDBusObjectManagerClient$MH,"glib_listautoptr_cleanup_GDBusObjectManagerClient");
    }
    public static void glib_listautoptr_cleanup_GDBusObjectManagerClient ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDBusObjectManagerClient$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusObjectManagerClient$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_slistautoptr_cleanup_GDBusObjectManagerClient$MH,"glib_slistautoptr_cleanup_GDBusObjectManagerClient");
    }
    public static void glib_slistautoptr_cleanup_GDBusObjectManagerClient ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDBusObjectManagerClient$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusObjectManagerClient$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_queueautoptr_cleanup_GDBusObjectManagerClient$MH,"glib_queueautoptr_cleanup_GDBusObjectManagerClient");
    }
    public static void glib_queueautoptr_cleanup_GDBusObjectManagerClient ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDBusObjectManagerClient$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusObjectManager_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManager_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManager_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManager_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusObjectManager$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_autoptr_clear_GDBusObjectManager$MH,"glib_autoptr_clear_GDBusObjectManager");
    }
    public static void glib_autoptr_clear_GDBusObjectManager ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDBusObjectManager$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusObjectManager$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_autoptr_cleanup_GDBusObjectManager$MH,"glib_autoptr_cleanup_GDBusObjectManager");
    }
    public static void glib_autoptr_cleanup_GDBusObjectManager ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDBusObjectManager$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusObjectManager$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_listautoptr_cleanup_GDBusObjectManager$MH,"glib_listautoptr_cleanup_GDBusObjectManager");
    }
    public static void glib_listautoptr_cleanup_GDBusObjectManager ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDBusObjectManager$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusObjectManager$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_slistautoptr_cleanup_GDBusObjectManager$MH,"glib_slistautoptr_cleanup_GDBusObjectManager");
    }
    public static void glib_slistautoptr_cleanup_GDBusObjectManager ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDBusObjectManager$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusObjectManager$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_queueautoptr_cleanup_GDBusObjectManager$MH,"glib_queueautoptr_cleanup_GDBusObjectManager");
    }
    public static void glib_queueautoptr_cleanup_GDBusObjectManager ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDBusObjectManager$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusObjectManagerServer_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManagerServer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManagerServer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManagerServer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusObjectManagerServer$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_autoptr_clear_GDBusObjectManagerServer$MH,"glib_autoptr_clear_GDBusObjectManagerServer");
    }
    public static void glib_autoptr_clear_GDBusObjectManagerServer ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDBusObjectManagerServer$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusObjectManagerServer$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_autoptr_cleanup_GDBusObjectManagerServer$MH,"glib_autoptr_cleanup_GDBusObjectManagerServer");
    }
    public static void glib_autoptr_cleanup_GDBusObjectManagerServer ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDBusObjectManagerServer$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusObjectManagerServer$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_listautoptr_cleanup_GDBusObjectManagerServer$MH,"glib_listautoptr_cleanup_GDBusObjectManagerServer");
    }
    public static void glib_listautoptr_cleanup_GDBusObjectManagerServer ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDBusObjectManagerServer$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusObjectManagerServer$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_slistautoptr_cleanup_GDBusObjectManagerServer$MH,"glib_slistautoptr_cleanup_GDBusObjectManagerServer");
    }
    public static void glib_slistautoptr_cleanup_GDBusObjectManagerServer ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDBusObjectManagerServer$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusObjectManagerServer$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_queueautoptr_cleanup_GDBusObjectManagerServer$MH,"glib_queueautoptr_cleanup_GDBusObjectManagerServer");
    }
    public static void glib_queueautoptr_cleanup_GDBusObjectManagerServer ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDBusObjectManagerServer$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusObjectProxy_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectProxy_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectProxy_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectProxy_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusObjectProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_autoptr_clear_GDBusObjectProxy$MH,"glib_autoptr_clear_GDBusObjectProxy");
    }
    public static void glib_autoptr_clear_GDBusObjectProxy ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDBusObjectProxy$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusObjectProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_autoptr_cleanup_GDBusObjectProxy$MH,"glib_autoptr_cleanup_GDBusObjectProxy");
    }
    public static void glib_autoptr_cleanup_GDBusObjectProxy ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDBusObjectProxy$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusObjectProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_listautoptr_cleanup_GDBusObjectProxy$MH,"glib_listautoptr_cleanup_GDBusObjectProxy");
    }
    public static void glib_listautoptr_cleanup_GDBusObjectProxy ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDBusObjectProxy$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusObjectProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_slistautoptr_cleanup_GDBusObjectProxy$MH,"glib_slistautoptr_cleanup_GDBusObjectProxy");
    }
    public static void glib_slistautoptr_cleanup_GDBusObjectProxy ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDBusObjectProxy$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusObjectProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_queueautoptr_cleanup_GDBusObjectProxy$MH,"glib_queueautoptr_cleanup_GDBusObjectProxy");
    }
    public static void glib_queueautoptr_cleanup_GDBusObjectProxy ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDBusObjectProxy$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusObjectSkeleton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectSkeleton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectSkeleton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectSkeleton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusObjectSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_autoptr_clear_GDBusObjectSkeleton$MH,"glib_autoptr_clear_GDBusObjectSkeleton");
    }
    public static void glib_autoptr_clear_GDBusObjectSkeleton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDBusObjectSkeleton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusObjectSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_autoptr_cleanup_GDBusObjectSkeleton$MH,"glib_autoptr_cleanup_GDBusObjectSkeleton");
    }
    public static void glib_autoptr_cleanup_GDBusObjectSkeleton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDBusObjectSkeleton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusObjectSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_listautoptr_cleanup_GDBusObjectSkeleton$MH,"glib_listautoptr_cleanup_GDBusObjectSkeleton");
    }
    public static void glib_listautoptr_cleanup_GDBusObjectSkeleton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDBusObjectSkeleton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusObjectSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_slistautoptr_cleanup_GDBusObjectSkeleton$MH,"glib_slistautoptr_cleanup_GDBusObjectSkeleton");
    }
    public static void glib_slistautoptr_cleanup_GDBusObjectSkeleton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDBusObjectSkeleton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusObjectSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_queueautoptr_cleanup_GDBusObjectSkeleton$MH,"glib_queueautoptr_cleanup_GDBusObjectSkeleton");
    }
    public static void glib_queueautoptr_cleanup_GDBusObjectSkeleton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDBusObjectSkeleton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusProxy_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusProxy_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusProxy_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusProxy_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_autoptr_clear_GDBusProxy$MH,"glib_autoptr_clear_GDBusProxy");
    }
    public static void glib_autoptr_clear_GDBusProxy ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDBusProxy$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_autoptr_cleanup_GDBusProxy$MH,"glib_autoptr_cleanup_GDBusProxy");
    }
    public static void glib_autoptr_cleanup_GDBusProxy ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDBusProxy$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_listautoptr_cleanup_GDBusProxy$MH,"glib_listautoptr_cleanup_GDBusProxy");
    }
    public static void glib_listautoptr_cleanup_GDBusProxy ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDBusProxy$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_slistautoptr_cleanup_GDBusProxy$MH,"glib_slistautoptr_cleanup_GDBusProxy");
    }
    public static void glib_slistautoptr_cleanup_GDBusProxy ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDBusProxy$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_queueautoptr_cleanup_GDBusProxy$MH,"glib_queueautoptr_cleanup_GDBusProxy");
    }
    public static void glib_queueautoptr_cleanup_GDBusProxy ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDBusProxy$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusServer_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusServer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusServer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusServer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_autoptr_clear_GDBusServer$MH,"glib_autoptr_clear_GDBusServer");
    }
    public static void glib_autoptr_clear_GDBusServer ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDBusServer$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_autoptr_cleanup_GDBusServer$MH,"glib_autoptr_cleanup_GDBusServer");
    }
    public static void glib_autoptr_cleanup_GDBusServer ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDBusServer$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_listautoptr_cleanup_GDBusServer$MH,"glib_listautoptr_cleanup_GDBusServer");
    }
    public static void glib_listautoptr_cleanup_GDBusServer ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDBusServer$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_slistautoptr_cleanup_GDBusServer$MH,"glib_slistautoptr_cleanup_GDBusServer");
    }
    public static void glib_slistautoptr_cleanup_GDBusServer ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDBusServer$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_queueautoptr_cleanup_GDBusServer$MH,"glib_queueautoptr_cleanup_GDBusServer");
    }
    public static void glib_queueautoptr_cleanup_GDBusServer ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDBusServer$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDrive_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDrive_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDrive_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDrive_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_autoptr_clear_GDrive$MH,"glib_autoptr_clear_GDrive");
    }
    public static void glib_autoptr_clear_GDrive ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDrive$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_autoptr_cleanup_GDrive$MH,"glib_autoptr_cleanup_GDrive");
    }
    public static void glib_autoptr_cleanup_GDrive ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDrive$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_listautoptr_cleanup_GDrive$MH,"glib_listautoptr_cleanup_GDrive");
    }
    public static void glib_listautoptr_cleanup_GDrive ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDrive$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_slistautoptr_cleanup_GDrive$MH,"glib_slistautoptr_cleanup_GDrive");
    }
    public static void glib_slistautoptr_cleanup_GDrive ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDrive$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_queueautoptr_cleanup_GDrive$MH,"glib_queueautoptr_cleanup_GDrive");
    }
    public static void glib_queueautoptr_cleanup_GDrive ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDrive$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GEmblemedIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblemedIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblemedIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblemedIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_autoptr_clear_GEmblemedIcon$MH,"glib_autoptr_clear_GEmblemedIcon");
    }
    public static void glib_autoptr_clear_GEmblemedIcon ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GEmblemedIcon$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_autoptr_cleanup_GEmblemedIcon$MH,"glib_autoptr_cleanup_GEmblemedIcon");
    }
    public static void glib_autoptr_cleanup_GEmblemedIcon ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GEmblemedIcon$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_listautoptr_cleanup_GEmblemedIcon$MH,"glib_listautoptr_cleanup_GEmblemedIcon");
    }
    public static void glib_listautoptr_cleanup_GEmblemedIcon ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GEmblemedIcon$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_slistautoptr_cleanup_GEmblemedIcon$MH,"glib_slistautoptr_cleanup_GEmblemedIcon");
    }
    public static void glib_slistautoptr_cleanup_GEmblemedIcon ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GEmblemedIcon$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_queueautoptr_cleanup_GEmblemedIcon$MH,"glib_queueautoptr_cleanup_GEmblemedIcon");
    }
    public static void glib_queueautoptr_cleanup_GEmblemedIcon ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GEmblemedIcon$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GEmblem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_autoptr_clear_GEmblem$MH,"glib_autoptr_clear_GEmblem");
    }
    public static void glib_autoptr_clear_GEmblem ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GEmblem$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_autoptr_cleanup_GEmblem$MH,"glib_autoptr_cleanup_GEmblem");
    }
    public static void glib_autoptr_cleanup_GEmblem ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GEmblem$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_listautoptr_cleanup_GEmblem$MH,"glib_listautoptr_cleanup_GEmblem");
    }
    public static void glib_listautoptr_cleanup_GEmblem ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GEmblem$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_slistautoptr_cleanup_GEmblem$MH,"glib_slistautoptr_cleanup_GEmblem");
    }
    public static void glib_slistautoptr_cleanup_GEmblem ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GEmblem$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_queueautoptr_cleanup_GEmblem$MH,"glib_queueautoptr_cleanup_GEmblem");
    }
    public static void glib_queueautoptr_cleanup_GEmblem ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GEmblem$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileEnumerator_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileEnumerator_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileEnumerator_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileEnumerator_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_autoptr_clear_GFileEnumerator$MH,"glib_autoptr_clear_GFileEnumerator");
    }
    public static void glib_autoptr_clear_GFileEnumerator ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GFileEnumerator$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_autoptr_cleanup_GFileEnumerator$MH,"glib_autoptr_cleanup_GFileEnumerator");
    }
    public static void glib_autoptr_cleanup_GFileEnumerator ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GFileEnumerator$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_listautoptr_cleanup_GFileEnumerator$MH,"glib_listautoptr_cleanup_GFileEnumerator");
    }
    public static void glib_listautoptr_cleanup_GFileEnumerator ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GFileEnumerator$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_slistautoptr_cleanup_GFileEnumerator$MH,"glib_slistautoptr_cleanup_GFileEnumerator");
    }
    public static void glib_slistautoptr_cleanup_GFileEnumerator ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GFileEnumerator$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_queueautoptr_cleanup_GFileEnumerator$MH,"glib_queueautoptr_cleanup_GFileEnumerator");
    }
    public static void glib_queueautoptr_cleanup_GFileEnumerator ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GFileEnumerator$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFile_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFile_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFile_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFile_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_autoptr_clear_GFile$MH,"glib_autoptr_clear_GFile");
    }
    public static void glib_autoptr_clear_GFile ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GFile$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_autoptr_cleanup_GFile$MH,"glib_autoptr_cleanup_GFile");
    }
    public static void glib_autoptr_cleanup_GFile ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GFile$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_listautoptr_cleanup_GFile$MH,"glib_listautoptr_cleanup_GFile");
    }
    public static void glib_listautoptr_cleanup_GFile ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GFile$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_slistautoptr_cleanup_GFile$MH,"glib_slistautoptr_cleanup_GFile");
    }
    public static void glib_slistautoptr_cleanup_GFile ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GFile$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_queueautoptr_cleanup_GFile$MH,"glib_queueautoptr_cleanup_GFile");
    }
    public static void glib_queueautoptr_cleanup_GFile ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GFile$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileAttributeInfoList_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileAttributeInfoList_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileAttributeInfoList_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileAttributeInfoList_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_autoptr_clear_GFileAttributeInfoList$MH,"glib_autoptr_clear_GFileAttributeInfoList");
    }
    public static void glib_autoptr_clear_GFileAttributeInfoList ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GFileAttributeInfoList$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_autoptr_cleanup_GFileAttributeInfoList$MH,"glib_autoptr_cleanup_GFileAttributeInfoList");
    }
    public static void glib_autoptr_cleanup_GFileAttributeInfoList ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GFileAttributeInfoList$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_listautoptr_cleanup_GFileAttributeInfoList$MH,"glib_listautoptr_cleanup_GFileAttributeInfoList");
    }
    public static void glib_listautoptr_cleanup_GFileAttributeInfoList ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GFileAttributeInfoList$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_slistautoptr_cleanup_GFileAttributeInfoList$MH,"glib_slistautoptr_cleanup_GFileAttributeInfoList");
    }
    public static void glib_slistautoptr_cleanup_GFileAttributeInfoList ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GFileAttributeInfoList$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_queueautoptr_cleanup_GFileAttributeInfoList$MH,"glib_queueautoptr_cleanup_GFileAttributeInfoList");
    }
    public static void glib_queueautoptr_cleanup_GFileAttributeInfoList ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GFileAttributeInfoList$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_autoptr_clear_GFileIcon$MH,"glib_autoptr_clear_GFileIcon");
    }
    public static void glib_autoptr_clear_GFileIcon ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GFileIcon$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_autoptr_cleanup_GFileIcon$MH,"glib_autoptr_cleanup_GFileIcon");
    }
    public static void glib_autoptr_cleanup_GFileIcon ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GFileIcon$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_listautoptr_cleanup_GFileIcon$MH,"glib_listautoptr_cleanup_GFileIcon");
    }
    public static void glib_listautoptr_cleanup_GFileIcon ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GFileIcon$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_slistautoptr_cleanup_GFileIcon$MH,"glib_slistautoptr_cleanup_GFileIcon");
    }
    public static void glib_slistautoptr_cleanup_GFileIcon ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GFileIcon$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_queueautoptr_cleanup_GFileIcon$MH,"glib_queueautoptr_cleanup_GFileIcon");
    }
    public static void glib_queueautoptr_cleanup_GFileIcon ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GFileIcon$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileInfo_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInfo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInfo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInfo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_autoptr_clear_GFileInfo$MH,"glib_autoptr_clear_GFileInfo");
    }
    public static void glib_autoptr_clear_GFileInfo ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GFileInfo$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_autoptr_cleanup_GFileInfo$MH,"glib_autoptr_cleanup_GFileInfo");
    }
    public static void glib_autoptr_cleanup_GFileInfo ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GFileInfo$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_listautoptr_cleanup_GFileInfo$MH,"glib_listautoptr_cleanup_GFileInfo");
    }
    public static void glib_listautoptr_cleanup_GFileInfo ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GFileInfo$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_slistautoptr_cleanup_GFileInfo$MH,"glib_slistautoptr_cleanup_GFileInfo");
    }
    public static void glib_slistautoptr_cleanup_GFileInfo ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GFileInfo$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_queueautoptr_cleanup_GFileInfo$MH,"glib_queueautoptr_cleanup_GFileInfo");
    }
    public static void glib_queueautoptr_cleanup_GFileInfo ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GFileInfo$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_autoptr_clear_GFileInputStream$MH,"glib_autoptr_clear_GFileInputStream");
    }
    public static void glib_autoptr_clear_GFileInputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GFileInputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_autoptr_cleanup_GFileInputStream$MH,"glib_autoptr_cleanup_GFileInputStream");
    }
    public static void glib_autoptr_cleanup_GFileInputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GFileInputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_listautoptr_cleanup_GFileInputStream$MH,"glib_listautoptr_cleanup_GFileInputStream");
    }
    public static void glib_listautoptr_cleanup_GFileInputStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GFileInputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_slistautoptr_cleanup_GFileInputStream$MH,"glib_slistautoptr_cleanup_GFileInputStream");
    }
    public static void glib_slistautoptr_cleanup_GFileInputStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GFileInputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_queueautoptr_cleanup_GFileInputStream$MH,"glib_queueautoptr_cleanup_GFileInputStream");
    }
    public static void glib_queueautoptr_cleanup_GFileInputStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GFileInputStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileIOStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIOStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIOStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIOStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_autoptr_clear_GFileIOStream$MH,"glib_autoptr_clear_GFileIOStream");
    }
    public static void glib_autoptr_clear_GFileIOStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GFileIOStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_autoptr_cleanup_GFileIOStream$MH,"glib_autoptr_cleanup_GFileIOStream");
    }
    public static void glib_autoptr_cleanup_GFileIOStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GFileIOStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_listautoptr_cleanup_GFileIOStream$MH,"glib_listautoptr_cleanup_GFileIOStream");
    }
    public static void glib_listautoptr_cleanup_GFileIOStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GFileIOStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_slistautoptr_cleanup_GFileIOStream$MH,"glib_slistautoptr_cleanup_GFileIOStream");
    }
    public static void glib_slistautoptr_cleanup_GFileIOStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GFileIOStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_queueautoptr_cleanup_GFileIOStream$MH,"glib_queueautoptr_cleanup_GFileIOStream");
    }
    public static void glib_queueautoptr_cleanup_GFileIOStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GFileIOStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_autoptr_clear_GFileMonitor$MH,"glib_autoptr_clear_GFileMonitor");
    }
    public static void glib_autoptr_clear_GFileMonitor ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GFileMonitor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_autoptr_cleanup_GFileMonitor$MH,"glib_autoptr_cleanup_GFileMonitor");
    }
    public static void glib_autoptr_cleanup_GFileMonitor ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GFileMonitor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_listautoptr_cleanup_GFileMonitor$MH,"glib_listautoptr_cleanup_GFileMonitor");
    }
    public static void glib_listautoptr_cleanup_GFileMonitor ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GFileMonitor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_slistautoptr_cleanup_GFileMonitor$MH,"glib_slistautoptr_cleanup_GFileMonitor");
    }
    public static void glib_slistautoptr_cleanup_GFileMonitor ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GFileMonitor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_queueautoptr_cleanup_GFileMonitor$MH,"glib_queueautoptr_cleanup_GFileMonitor");
    }
    public static void glib_queueautoptr_cleanup_GFileMonitor ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GFileMonitor$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFilenameCompleter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilenameCompleter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilenameCompleter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilenameCompleter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_autoptr_clear_GFilenameCompleter$MH,"glib_autoptr_clear_GFilenameCompleter");
    }
    public static void glib_autoptr_clear_GFilenameCompleter ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GFilenameCompleter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_autoptr_cleanup_GFilenameCompleter$MH,"glib_autoptr_cleanup_GFilenameCompleter");
    }
    public static void glib_autoptr_cleanup_GFilenameCompleter ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GFilenameCompleter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_listautoptr_cleanup_GFilenameCompleter$MH,"glib_listautoptr_cleanup_GFilenameCompleter");
    }
    public static void glib_listautoptr_cleanup_GFilenameCompleter ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GFilenameCompleter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_slistautoptr_cleanup_GFilenameCompleter$MH,"glib_slistautoptr_cleanup_GFilenameCompleter");
    }
    public static void glib_slistautoptr_cleanup_GFilenameCompleter ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GFilenameCompleter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_queueautoptr_cleanup_GFilenameCompleter$MH,"glib_queueautoptr_cleanup_GFilenameCompleter");
    }
    public static void glib_queueautoptr_cleanup_GFilenameCompleter ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GFilenameCompleter$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_autoptr_clear_GFileOutputStream$MH,"glib_autoptr_clear_GFileOutputStream");
    }
    public static void glib_autoptr_clear_GFileOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GFileOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_autoptr_cleanup_GFileOutputStream$MH,"glib_autoptr_cleanup_GFileOutputStream");
    }
    public static void glib_autoptr_cleanup_GFileOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GFileOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_listautoptr_cleanup_GFileOutputStream$MH,"glib_listautoptr_cleanup_GFileOutputStream");
    }
    public static void glib_listautoptr_cleanup_GFileOutputStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GFileOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_slistautoptr_cleanup_GFileOutputStream$MH,"glib_slistautoptr_cleanup_GFileOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GFileOutputStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GFileOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_queueautoptr_cleanup_GFileOutputStream$MH,"glib_queueautoptr_cleanup_GFileOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GFileOutputStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GFileOutputStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFilterInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_autoptr_clear_GFilterInputStream$MH,"glib_autoptr_clear_GFilterInputStream");
    }
    public static void glib_autoptr_clear_GFilterInputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GFilterInputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_autoptr_cleanup_GFilterInputStream$MH,"glib_autoptr_cleanup_GFilterInputStream");
    }
    public static void glib_autoptr_cleanup_GFilterInputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GFilterInputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_listautoptr_cleanup_GFilterInputStream$MH,"glib_listautoptr_cleanup_GFilterInputStream");
    }
    public static void glib_listautoptr_cleanup_GFilterInputStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GFilterInputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_slistautoptr_cleanup_GFilterInputStream$MH,"glib_slistautoptr_cleanup_GFilterInputStream");
    }
    public static void glib_slistautoptr_cleanup_GFilterInputStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GFilterInputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_queueautoptr_cleanup_GFilterInputStream$MH,"glib_queueautoptr_cleanup_GFilterInputStream");
    }
    public static void glib_queueautoptr_cleanup_GFilterInputStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GFilterInputStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFilterOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_autoptr_clear_GFilterOutputStream$MH,"glib_autoptr_clear_GFilterOutputStream");
    }
    public static void glib_autoptr_clear_GFilterOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GFilterOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_autoptr_cleanup_GFilterOutputStream$MH,"glib_autoptr_cleanup_GFilterOutputStream");
    }
    public static void glib_autoptr_cleanup_GFilterOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GFilterOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_listautoptr_cleanup_GFilterOutputStream$MH,"glib_listautoptr_cleanup_GFilterOutputStream");
    }
    public static void glib_listautoptr_cleanup_GFilterOutputStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GFilterOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_slistautoptr_cleanup_GFilterOutputStream$MH,"glib_slistautoptr_cleanup_GFilterOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GFilterOutputStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GFilterOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_queueautoptr_cleanup_GFilterOutputStream$MH,"glib_queueautoptr_cleanup_GFilterOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GFilterOutputStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GFilterOutputStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_autoptr_clear_GIcon$MH,"glib_autoptr_clear_GIcon");
    }
    public static void glib_autoptr_clear_GIcon ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GIcon$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_autoptr_cleanup_GIcon$MH,"glib_autoptr_cleanup_GIcon");
    }
    public static void glib_autoptr_cleanup_GIcon ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GIcon$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_listautoptr_cleanup_GIcon$MH,"glib_listautoptr_cleanup_GIcon");
    }
    public static void glib_listautoptr_cleanup_GIcon ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GIcon$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_slistautoptr_cleanup_GIcon$MH,"glib_slistautoptr_cleanup_GIcon");
    }
    public static void glib_slistautoptr_cleanup_GIcon ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GIcon$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_queueautoptr_cleanup_GIcon$MH,"glib_queueautoptr_cleanup_GIcon");
    }
    public static void glib_queueautoptr_cleanup_GIcon ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GIcon$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInetAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_autoptr_clear_GInetAddress$MH,"glib_autoptr_clear_GInetAddress");
    }
    public static void glib_autoptr_clear_GInetAddress ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GInetAddress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_autoptr_cleanup_GInetAddress$MH,"glib_autoptr_cleanup_GInetAddress");
    }
    public static void glib_autoptr_cleanup_GInetAddress ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GInetAddress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_listautoptr_cleanup_GInetAddress$MH,"glib_listautoptr_cleanup_GInetAddress");
    }
    public static void glib_listautoptr_cleanup_GInetAddress ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GInetAddress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_slistautoptr_cleanup_GInetAddress$MH,"glib_slistautoptr_cleanup_GInetAddress");
    }
    public static void glib_slistautoptr_cleanup_GInetAddress ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GInetAddress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_queueautoptr_cleanup_GInetAddress$MH,"glib_queueautoptr_cleanup_GInetAddress");
    }
    public static void glib_queueautoptr_cleanup_GInetAddress ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GInetAddress$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInetAddressMask_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddressMask_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddressMask_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddressMask_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_autoptr_clear_GInetAddressMask$MH,"glib_autoptr_clear_GInetAddressMask");
    }
    public static void glib_autoptr_clear_GInetAddressMask ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GInetAddressMask$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_autoptr_cleanup_GInetAddressMask$MH,"glib_autoptr_cleanup_GInetAddressMask");
    }
    public static void glib_autoptr_cleanup_GInetAddressMask ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GInetAddressMask$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_listautoptr_cleanup_GInetAddressMask$MH,"glib_listautoptr_cleanup_GInetAddressMask");
    }
    public static void glib_listautoptr_cleanup_GInetAddressMask ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GInetAddressMask$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_slistautoptr_cleanup_GInetAddressMask$MH,"glib_slistautoptr_cleanup_GInetAddressMask");
    }
    public static void glib_slistautoptr_cleanup_GInetAddressMask ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GInetAddressMask$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_queueautoptr_cleanup_GInetAddressMask$MH,"glib_queueautoptr_cleanup_GInetAddressMask");
    }
    public static void glib_queueautoptr_cleanup_GInetAddressMask ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GInetAddressMask$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInetSocketAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetSocketAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetSocketAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetSocketAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_autoptr_clear_GInetSocketAddress$MH,"glib_autoptr_clear_GInetSocketAddress");
    }
    public static void glib_autoptr_clear_GInetSocketAddress ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GInetSocketAddress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_autoptr_cleanup_GInetSocketAddress$MH,"glib_autoptr_cleanup_GInetSocketAddress");
    }
    public static void glib_autoptr_cleanup_GInetSocketAddress ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GInetSocketAddress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_listautoptr_cleanup_GInetSocketAddress$MH,"glib_listautoptr_cleanup_GInetSocketAddress");
    }
    public static void glib_listautoptr_cleanup_GInetSocketAddress ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GInetSocketAddress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_slistautoptr_cleanup_GInetSocketAddress$MH,"glib_slistautoptr_cleanup_GInetSocketAddress");
    }
    public static void glib_slistautoptr_cleanup_GInetSocketAddress ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GInetSocketAddress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_queueautoptr_cleanup_GInetSocketAddress$MH,"glib_queueautoptr_cleanup_GInetSocketAddress");
    }
    public static void glib_queueautoptr_cleanup_GInetSocketAddress ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GInetSocketAddress$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInitable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInitable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInitable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInitable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_autoptr_clear_GInitable$MH,"glib_autoptr_clear_GInitable");
    }
    public static void glib_autoptr_clear_GInitable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GInitable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_autoptr_cleanup_GInitable$MH,"glib_autoptr_cleanup_GInitable");
    }
    public static void glib_autoptr_cleanup_GInitable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GInitable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_listautoptr_cleanup_GInitable$MH,"glib_listautoptr_cleanup_GInitable");
    }
    public static void glib_listautoptr_cleanup_GInitable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GInitable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_slistautoptr_cleanup_GInitable$MH,"glib_slistautoptr_cleanup_GInitable");
    }
    public static void glib_slistautoptr_cleanup_GInitable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GInitable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_queueautoptr_cleanup_GInitable$MH,"glib_queueautoptr_cleanup_GInitable");
    }
    public static void glib_queueautoptr_cleanup_GInitable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GInitable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_autoptr_clear_GInputStream$MH,"glib_autoptr_clear_GInputStream");
    }
    public static void glib_autoptr_clear_GInputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GInputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_autoptr_cleanup_GInputStream$MH,"glib_autoptr_cleanup_GInputStream");
    }
    public static void glib_autoptr_cleanup_GInputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GInputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_listautoptr_cleanup_GInputStream$MH,"glib_listautoptr_cleanup_GInputStream");
    }
    public static void glib_listautoptr_cleanup_GInputStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GInputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_slistautoptr_cleanup_GInputStream$MH,"glib_slistautoptr_cleanup_GInputStream");
    }
    public static void glib_slistautoptr_cleanup_GInputStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GInputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_queueautoptr_cleanup_GInputStream$MH,"glib_queueautoptr_cleanup_GInputStream");
    }
    public static void glib_queueautoptr_cleanup_GInputStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GInputStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GIOModule_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOModule_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOModule_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOModule_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_autoptr_clear_GIOModule$MH,"glib_autoptr_clear_GIOModule");
    }
    public static void glib_autoptr_clear_GIOModule ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GIOModule$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_autoptr_cleanup_GIOModule$MH,"glib_autoptr_cleanup_GIOModule");
    }
    public static void glib_autoptr_cleanup_GIOModule ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GIOModule$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_listautoptr_cleanup_GIOModule$MH,"glib_listautoptr_cleanup_GIOModule");
    }
    public static void glib_listautoptr_cleanup_GIOModule ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GIOModule$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_slistautoptr_cleanup_GIOModule$MH,"glib_slistautoptr_cleanup_GIOModule");
    }
    public static void glib_slistautoptr_cleanup_GIOModule ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GIOModule$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_queueautoptr_cleanup_GIOModule$MH,"glib_queueautoptr_cleanup_GIOModule");
    }
    public static void glib_queueautoptr_cleanup_GIOModule ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GIOModule$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GIOStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_autoptr_clear_GIOStream$MH,"glib_autoptr_clear_GIOStream");
    }
    public static void glib_autoptr_clear_GIOStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GIOStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_autoptr_cleanup_GIOStream$MH,"glib_autoptr_cleanup_GIOStream");
    }
    public static void glib_autoptr_cleanup_GIOStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GIOStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_listautoptr_cleanup_GIOStream$MH,"glib_listautoptr_cleanup_GIOStream");
    }
    public static void glib_listautoptr_cleanup_GIOStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GIOStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_slistautoptr_cleanup_GIOStream$MH,"glib_slistautoptr_cleanup_GIOStream");
    }
    public static void glib_slistautoptr_cleanup_GIOStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GIOStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_queueautoptr_cleanup_GIOStream$MH,"glib_queueautoptr_cleanup_GIOStream");
    }
    public static void glib_queueautoptr_cleanup_GIOStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GIOStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GLoadableIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GLoadableIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GLoadableIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GLoadableIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_autoptr_clear_GLoadableIcon$MH,"glib_autoptr_clear_GLoadableIcon");
    }
    public static void glib_autoptr_clear_GLoadableIcon ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GLoadableIcon$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_autoptr_cleanup_GLoadableIcon$MH,"glib_autoptr_cleanup_GLoadableIcon");
    }
    public static void glib_autoptr_cleanup_GLoadableIcon ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GLoadableIcon$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_listautoptr_cleanup_GLoadableIcon$MH,"glib_listautoptr_cleanup_GLoadableIcon");
    }
    public static void glib_listautoptr_cleanup_GLoadableIcon ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GLoadableIcon$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_slistautoptr_cleanup_GLoadableIcon$MH,"glib_slistautoptr_cleanup_GLoadableIcon");
    }
    public static void glib_slistautoptr_cleanup_GLoadableIcon ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GLoadableIcon$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_queueautoptr_cleanup_GLoadableIcon$MH,"glib_queueautoptr_cleanup_GLoadableIcon");
    }
    public static void glib_queueautoptr_cleanup_GLoadableIcon ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GLoadableIcon$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMemoryInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_autoptr_clear_GMemoryInputStream$MH,"glib_autoptr_clear_GMemoryInputStream");
    }
    public static void glib_autoptr_clear_GMemoryInputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GMemoryInputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_autoptr_cleanup_GMemoryInputStream$MH,"glib_autoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_autoptr_cleanup_GMemoryInputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GMemoryInputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_listautoptr_cleanup_GMemoryInputStream$MH,"glib_listautoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_listautoptr_cleanup_GMemoryInputStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GMemoryInputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_slistautoptr_cleanup_GMemoryInputStream$MH,"glib_slistautoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_slistautoptr_cleanup_GMemoryInputStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GMemoryInputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_queueautoptr_cleanup_GMemoryInputStream$MH,"glib_queueautoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_queueautoptr_cleanup_GMemoryInputStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GMemoryInputStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMemoryOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_autoptr_clear_GMemoryOutputStream$MH,"glib_autoptr_clear_GMemoryOutputStream");
    }
    public static void glib_autoptr_clear_GMemoryOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GMemoryOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_autoptr_cleanup_GMemoryOutputStream$MH,"glib_autoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_autoptr_cleanup_GMemoryOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GMemoryOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_listautoptr_cleanup_GMemoryOutputStream$MH,"glib_listautoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_listautoptr_cleanup_GMemoryOutputStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GMemoryOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_slistautoptr_cleanup_GMemoryOutputStream$MH,"glib_slistautoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GMemoryOutputStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GMemoryOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_queueautoptr_cleanup_GMemoryOutputStream$MH,"glib_queueautoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GMemoryOutputStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GMemoryOutputStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenu_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenu_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenu_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenu_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_autoptr_clear_GMenu$MH,"glib_autoptr_clear_GMenu");
    }
    public static void glib_autoptr_clear_GMenu ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GMenu$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_autoptr_cleanup_GMenu$MH,"glib_autoptr_cleanup_GMenu");
    }
    public static void glib_autoptr_cleanup_GMenu ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GMenu$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_listautoptr_cleanup_GMenu$MH,"glib_listautoptr_cleanup_GMenu");
    }
    public static void glib_listautoptr_cleanup_GMenu ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GMenu$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_slistautoptr_cleanup_GMenu$MH,"glib_slistautoptr_cleanup_GMenu");
    }
    public static void glib_slistautoptr_cleanup_GMenu ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GMenu$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_queueautoptr_cleanup_GMenu$MH,"glib_queueautoptr_cleanup_GMenu");
    }
    public static void glib_queueautoptr_cleanup_GMenu ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GMenu$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuItem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuItem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuItem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuItem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_autoptr_clear_GMenuItem$MH,"glib_autoptr_clear_GMenuItem");
    }
    public static void glib_autoptr_clear_GMenuItem ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GMenuItem$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_autoptr_cleanup_GMenuItem$MH,"glib_autoptr_cleanup_GMenuItem");
    }
    public static void glib_autoptr_cleanup_GMenuItem ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GMenuItem$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_listautoptr_cleanup_GMenuItem$MH,"glib_listautoptr_cleanup_GMenuItem");
    }
    public static void glib_listautoptr_cleanup_GMenuItem ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GMenuItem$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_slistautoptr_cleanup_GMenuItem$MH,"glib_slistautoptr_cleanup_GMenuItem");
    }
    public static void glib_slistautoptr_cleanup_GMenuItem ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GMenuItem$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_queueautoptr_cleanup_GMenuItem$MH,"glib_queueautoptr_cleanup_GMenuItem");
    }
    public static void glib_queueautoptr_cleanup_GMenuItem ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GMenuItem$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_autoptr_clear_GMenuModel$MH,"glib_autoptr_clear_GMenuModel");
    }
    public static void glib_autoptr_clear_GMenuModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GMenuModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_autoptr_cleanup_GMenuModel$MH,"glib_autoptr_cleanup_GMenuModel");
    }
    public static void glib_autoptr_cleanup_GMenuModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GMenuModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_listautoptr_cleanup_GMenuModel$MH,"glib_listautoptr_cleanup_GMenuModel");
    }
    public static void glib_listautoptr_cleanup_GMenuModel ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GMenuModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_slistautoptr_cleanup_GMenuModel$MH,"glib_slistautoptr_cleanup_GMenuModel");
    }
    public static void glib_slistautoptr_cleanup_GMenuModel ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GMenuModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_queueautoptr_cleanup_GMenuModel$MH,"glib_queueautoptr_cleanup_GMenuModel");
    }
    public static void glib_queueautoptr_cleanup_GMenuModel ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GMenuModel$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuAttributeIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuAttributeIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuAttributeIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuAttributeIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_autoptr_clear_GMenuAttributeIter$MH,"glib_autoptr_clear_GMenuAttributeIter");
    }
    public static void glib_autoptr_clear_GMenuAttributeIter ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GMenuAttributeIter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_autoptr_cleanup_GMenuAttributeIter$MH,"glib_autoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_autoptr_cleanup_GMenuAttributeIter ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GMenuAttributeIter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_listautoptr_cleanup_GMenuAttributeIter$MH,"glib_listautoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_listautoptr_cleanup_GMenuAttributeIter ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GMenuAttributeIter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_slistautoptr_cleanup_GMenuAttributeIter$MH,"glib_slistautoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_slistautoptr_cleanup_GMenuAttributeIter ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GMenuAttributeIter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_queueautoptr_cleanup_GMenuAttributeIter$MH,"glib_queueautoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_queueautoptr_cleanup_GMenuAttributeIter ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GMenuAttributeIter$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuLinkIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuLinkIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuLinkIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuLinkIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_autoptr_clear_GMenuLinkIter$MH,"glib_autoptr_clear_GMenuLinkIter");
    }
    public static void glib_autoptr_clear_GMenuLinkIter ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GMenuLinkIter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_autoptr_cleanup_GMenuLinkIter$MH,"glib_autoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_autoptr_cleanup_GMenuLinkIter ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GMenuLinkIter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_listautoptr_cleanup_GMenuLinkIter$MH,"glib_listautoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_listautoptr_cleanup_GMenuLinkIter ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GMenuLinkIter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_slistautoptr_cleanup_GMenuLinkIter$MH,"glib_slistautoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_slistautoptr_cleanup_GMenuLinkIter ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GMenuLinkIter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_queueautoptr_cleanup_GMenuLinkIter$MH,"glib_queueautoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_queueautoptr_cleanup_GMenuLinkIter ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GMenuLinkIter$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMount_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMount_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMount_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMount_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_autoptr_clear_GMount$MH,"glib_autoptr_clear_GMount");
    }
    public static void glib_autoptr_clear_GMount ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GMount$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_autoptr_cleanup_GMount$MH,"glib_autoptr_cleanup_GMount");
    }
    public static void glib_autoptr_cleanup_GMount ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GMount$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_listautoptr_cleanup_GMount$MH,"glib_listautoptr_cleanup_GMount");
    }
    public static void glib_listautoptr_cleanup_GMount ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GMount$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_slistautoptr_cleanup_GMount$MH,"glib_slistautoptr_cleanup_GMount");
    }
    public static void glib_slistautoptr_cleanup_GMount ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GMount$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_queueautoptr_cleanup_GMount$MH,"glib_queueautoptr_cleanup_GMount");
    }
    public static void glib_queueautoptr_cleanup_GMount ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GMount$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMountOperation_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMountOperation_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMountOperation_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMountOperation_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_autoptr_clear_GMountOperation$MH,"glib_autoptr_clear_GMountOperation");
    }
    public static void glib_autoptr_clear_GMountOperation ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GMountOperation$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_autoptr_cleanup_GMountOperation$MH,"glib_autoptr_cleanup_GMountOperation");
    }
    public static void glib_autoptr_cleanup_GMountOperation ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GMountOperation$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_listautoptr_cleanup_GMountOperation$MH,"glib_listautoptr_cleanup_GMountOperation");
    }
    public static void glib_listautoptr_cleanup_GMountOperation ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GMountOperation$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_slistautoptr_cleanup_GMountOperation$MH,"glib_slistautoptr_cleanup_GMountOperation");
    }
    public static void glib_slistautoptr_cleanup_GMountOperation ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GMountOperation$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_queueautoptr_cleanup_GMountOperation$MH,"glib_queueautoptr_cleanup_GMountOperation");
    }
    public static void glib_queueautoptr_cleanup_GMountOperation ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GMountOperation$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNativeVolumeMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNativeVolumeMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNativeVolumeMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNativeVolumeMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_autoptr_clear_GNativeVolumeMonitor$MH,"glib_autoptr_clear_GNativeVolumeMonitor");
    }
    public static void glib_autoptr_clear_GNativeVolumeMonitor ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GNativeVolumeMonitor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_autoptr_cleanup_GNativeVolumeMonitor$MH,"glib_autoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_autoptr_cleanup_GNativeVolumeMonitor ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GNativeVolumeMonitor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_listautoptr_cleanup_GNativeVolumeMonitor$MH,"glib_listautoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_listautoptr_cleanup_GNativeVolumeMonitor ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GNativeVolumeMonitor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_slistautoptr_cleanup_GNativeVolumeMonitor$MH,"glib_slistautoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_slistautoptr_cleanup_GNativeVolumeMonitor ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GNativeVolumeMonitor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_queueautoptr_cleanup_GNativeVolumeMonitor$MH,"glib_queueautoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_queueautoptr_cleanup_GNativeVolumeMonitor ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GNativeVolumeMonitor$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNetworkAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_autoptr_clear_GNetworkAddress$MH,"glib_autoptr_clear_GNetworkAddress");
    }
    public static void glib_autoptr_clear_GNetworkAddress ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GNetworkAddress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_autoptr_cleanup_GNetworkAddress$MH,"glib_autoptr_cleanup_GNetworkAddress");
    }
    public static void glib_autoptr_cleanup_GNetworkAddress ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GNetworkAddress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_listautoptr_cleanup_GNetworkAddress$MH,"glib_listautoptr_cleanup_GNetworkAddress");
    }
    public static void glib_listautoptr_cleanup_GNetworkAddress ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GNetworkAddress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_slistautoptr_cleanup_GNetworkAddress$MH,"glib_slistautoptr_cleanup_GNetworkAddress");
    }
    public static void glib_slistautoptr_cleanup_GNetworkAddress ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GNetworkAddress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_queueautoptr_cleanup_GNetworkAddress$MH,"glib_queueautoptr_cleanup_GNetworkAddress");
    }
    public static void glib_queueautoptr_cleanup_GNetworkAddress ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GNetworkAddress$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNetworkMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_autoptr_clear_GNetworkMonitor$MH,"glib_autoptr_clear_GNetworkMonitor");
    }
    public static void glib_autoptr_clear_GNetworkMonitor ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GNetworkMonitor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_autoptr_cleanup_GNetworkMonitor$MH,"glib_autoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_autoptr_cleanup_GNetworkMonitor ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GNetworkMonitor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_listautoptr_cleanup_GNetworkMonitor$MH,"glib_listautoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_listautoptr_cleanup_GNetworkMonitor ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GNetworkMonitor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_slistautoptr_cleanup_GNetworkMonitor$MH,"glib_slistautoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_slistautoptr_cleanup_GNetworkMonitor ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GNetworkMonitor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_queueautoptr_cleanup_GNetworkMonitor$MH,"glib_queueautoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_queueautoptr_cleanup_GNetworkMonitor ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GNetworkMonitor$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNetworkService_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkService_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkService_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkService_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_autoptr_clear_GNetworkService$MH,"glib_autoptr_clear_GNetworkService");
    }
    public static void glib_autoptr_clear_GNetworkService ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GNetworkService$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_autoptr_cleanup_GNetworkService$MH,"glib_autoptr_cleanup_GNetworkService");
    }
    public static void glib_autoptr_cleanup_GNetworkService ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GNetworkService$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_listautoptr_cleanup_GNetworkService$MH,"glib_listautoptr_cleanup_GNetworkService");
    }
    public static void glib_listautoptr_cleanup_GNetworkService ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GNetworkService$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_slistautoptr_cleanup_GNetworkService$MH,"glib_slistautoptr_cleanup_GNetworkService");
    }
    public static void glib_slistautoptr_cleanup_GNetworkService ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GNetworkService$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_queueautoptr_cleanup_GNetworkService$MH,"glib_queueautoptr_cleanup_GNetworkService");
    }
    public static void glib_queueautoptr_cleanup_GNetworkService ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GNetworkService$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNotification_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNotification_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNotification_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNotification_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_autoptr_clear_GNotification$MH,"glib_autoptr_clear_GNotification");
    }
    public static void glib_autoptr_clear_GNotification ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GNotification$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_autoptr_cleanup_GNotification$MH,"glib_autoptr_cleanup_GNotification");
    }
    public static void glib_autoptr_cleanup_GNotification ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GNotification$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_listautoptr_cleanup_GNotification$MH,"glib_listautoptr_cleanup_GNotification");
    }
    public static void glib_listautoptr_cleanup_GNotification ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GNotification$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_slistautoptr_cleanup_GNotification$MH,"glib_slistautoptr_cleanup_GNotification");
    }
    public static void glib_slistautoptr_cleanup_GNotification ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GNotification$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_queueautoptr_cleanup_GNotification$MH,"glib_queueautoptr_cleanup_GNotification");
    }
    public static void glib_queueautoptr_cleanup_GNotification ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GNotification$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_autoptr_clear_GOutputStream$MH,"glib_autoptr_clear_GOutputStream");
    }
    public static void glib_autoptr_clear_GOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_autoptr_cleanup_GOutputStream$MH,"glib_autoptr_cleanup_GOutputStream");
    }
    public static void glib_autoptr_cleanup_GOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_listautoptr_cleanup_GOutputStream$MH,"glib_listautoptr_cleanup_GOutputStream");
    }
    public static void glib_listautoptr_cleanup_GOutputStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_slistautoptr_cleanup_GOutputStream$MH,"glib_slistautoptr_cleanup_GOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GOutputStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_queueautoptr_cleanup_GOutputStream$MH,"glib_queueautoptr_cleanup_GOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GOutputStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GOutputStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPermission_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPermission_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPermission_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPermission_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_autoptr_clear_GPermission$MH,"glib_autoptr_clear_GPermission");
    }
    public static void glib_autoptr_clear_GPermission ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GPermission$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_autoptr_cleanup_GPermission$MH,"glib_autoptr_cleanup_GPermission");
    }
    public static void glib_autoptr_cleanup_GPermission ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GPermission$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_listautoptr_cleanup_GPermission$MH,"glib_listautoptr_cleanup_GPermission");
    }
    public static void glib_listautoptr_cleanup_GPermission ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GPermission$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_slistautoptr_cleanup_GPermission$MH,"glib_slistautoptr_cleanup_GPermission");
    }
    public static void glib_slistautoptr_cleanup_GPermission ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GPermission$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_queueautoptr_cleanup_GPermission$MH,"glib_queueautoptr_cleanup_GPermission");
    }
    public static void glib_queueautoptr_cleanup_GPermission ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GPermission$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPollableInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_autoptr_clear_GPollableInputStream$MH,"glib_autoptr_clear_GPollableInputStream");
    }
    public static void glib_autoptr_clear_GPollableInputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GPollableInputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_autoptr_cleanup_GPollableInputStream$MH,"glib_autoptr_cleanup_GPollableInputStream");
    }
    public static void glib_autoptr_cleanup_GPollableInputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GPollableInputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_listautoptr_cleanup_GPollableInputStream$MH,"glib_listautoptr_cleanup_GPollableInputStream");
    }
    public static void glib_listautoptr_cleanup_GPollableInputStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GPollableInputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_slistautoptr_cleanup_GPollableInputStream$MH,"glib_slistautoptr_cleanup_GPollableInputStream");
    }
    public static void glib_slistautoptr_cleanup_GPollableInputStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GPollableInputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_queueautoptr_cleanup_GPollableInputStream$MH,"glib_queueautoptr_cleanup_GPollableInputStream");
    }
    public static void glib_queueautoptr_cleanup_GPollableInputStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GPollableInputStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPollableOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_autoptr_clear_GPollableOutputStream$MH,"glib_autoptr_clear_GPollableOutputStream");
    }
    public static void glib_autoptr_clear_GPollableOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GPollableOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_autoptr_cleanup_GPollableOutputStream$MH,"glib_autoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_autoptr_cleanup_GPollableOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GPollableOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_listautoptr_cleanup_GPollableOutputStream$MH,"glib_listautoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_listautoptr_cleanup_GPollableOutputStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GPollableOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_slistautoptr_cleanup_GPollableOutputStream$MH,"glib_slistautoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GPollableOutputStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GPollableOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_queueautoptr_cleanup_GPollableOutputStream$MH,"glib_queueautoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GPollableOutputStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GPollableOutputStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPropertyAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPropertyAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPropertyAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPropertyAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_autoptr_clear_GPropertyAction$MH,"glib_autoptr_clear_GPropertyAction");
    }
    public static void glib_autoptr_clear_GPropertyAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GPropertyAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_autoptr_cleanup_GPropertyAction$MH,"glib_autoptr_cleanup_GPropertyAction");
    }
    public static void glib_autoptr_cleanup_GPropertyAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GPropertyAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_listautoptr_cleanup_GPropertyAction$MH,"glib_listautoptr_cleanup_GPropertyAction");
    }
    public static void glib_listautoptr_cleanup_GPropertyAction ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GPropertyAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_slistautoptr_cleanup_GPropertyAction$MH,"glib_slistautoptr_cleanup_GPropertyAction");
    }
    public static void glib_slistautoptr_cleanup_GPropertyAction ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GPropertyAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_queueautoptr_cleanup_GPropertyAction$MH,"glib_queueautoptr_cleanup_GPropertyAction");
    }
    public static void glib_queueautoptr_cleanup_GPropertyAction ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GPropertyAction$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxyAddressEnumerator_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddressEnumerator_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddressEnumerator_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddressEnumerator_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_autoptr_clear_GProxyAddressEnumerator$MH,"glib_autoptr_clear_GProxyAddressEnumerator");
    }
    public static void glib_autoptr_clear_GProxyAddressEnumerator ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GProxyAddressEnumerator$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_autoptr_cleanup_GProxyAddressEnumerator$MH,"glib_autoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_autoptr_cleanup_GProxyAddressEnumerator ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GProxyAddressEnumerator$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_listautoptr_cleanup_GProxyAddressEnumerator$MH,"glib_listautoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_listautoptr_cleanup_GProxyAddressEnumerator ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GProxyAddressEnumerator$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_slistautoptr_cleanup_GProxyAddressEnumerator$MH,"glib_slistautoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_slistautoptr_cleanup_GProxyAddressEnumerator ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GProxyAddressEnumerator$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_queueautoptr_cleanup_GProxyAddressEnumerator$MH,"glib_queueautoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_queueautoptr_cleanup_GProxyAddressEnumerator ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GProxyAddressEnumerator$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxyAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_autoptr_clear_GProxyAddress$MH,"glib_autoptr_clear_GProxyAddress");
    }
    public static void glib_autoptr_clear_GProxyAddress ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GProxyAddress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_autoptr_cleanup_GProxyAddress$MH,"glib_autoptr_cleanup_GProxyAddress");
    }
    public static void glib_autoptr_cleanup_GProxyAddress ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GProxyAddress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_listautoptr_cleanup_GProxyAddress$MH,"glib_listautoptr_cleanup_GProxyAddress");
    }
    public static void glib_listautoptr_cleanup_GProxyAddress ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GProxyAddress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_slistautoptr_cleanup_GProxyAddress$MH,"glib_slistautoptr_cleanup_GProxyAddress");
    }
    public static void glib_slistautoptr_cleanup_GProxyAddress ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GProxyAddress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_queueautoptr_cleanup_GProxyAddress$MH,"glib_queueautoptr_cleanup_GProxyAddress");
    }
    public static void glib_queueautoptr_cleanup_GProxyAddress ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GProxyAddress$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxy_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxy_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxy_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxy_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_autoptr_clear_GProxy$MH,"glib_autoptr_clear_GProxy");
    }
    public static void glib_autoptr_clear_GProxy ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GProxy$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_autoptr_cleanup_GProxy$MH,"glib_autoptr_cleanup_GProxy");
    }
    public static void glib_autoptr_cleanup_GProxy ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GProxy$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_listautoptr_cleanup_GProxy$MH,"glib_listautoptr_cleanup_GProxy");
    }
    public static void glib_listautoptr_cleanup_GProxy ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GProxy$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_slistautoptr_cleanup_GProxy$MH,"glib_slistautoptr_cleanup_GProxy");
    }
    public static void glib_slistautoptr_cleanup_GProxy ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GProxy$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_queueautoptr_cleanup_GProxy$MH,"glib_queueautoptr_cleanup_GProxy");
    }
    public static void glib_queueautoptr_cleanup_GProxy ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GProxy$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxyResolver_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyResolver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyResolver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyResolver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_autoptr_clear_GProxyResolver$MH,"glib_autoptr_clear_GProxyResolver");
    }
    public static void glib_autoptr_clear_GProxyResolver ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GProxyResolver$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_autoptr_cleanup_GProxyResolver$MH,"glib_autoptr_cleanup_GProxyResolver");
    }
    public static void glib_autoptr_cleanup_GProxyResolver ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GProxyResolver$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_listautoptr_cleanup_GProxyResolver$MH,"glib_listautoptr_cleanup_GProxyResolver");
    }
    public static void glib_listautoptr_cleanup_GProxyResolver ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GProxyResolver$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_slistautoptr_cleanup_GProxyResolver$MH,"glib_slistautoptr_cleanup_GProxyResolver");
    }
    public static void glib_slistautoptr_cleanup_GProxyResolver ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GProxyResolver$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_queueautoptr_cleanup_GProxyResolver$MH,"glib_queueautoptr_cleanup_GProxyResolver");
    }
    public static void glib_queueautoptr_cleanup_GProxyResolver ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GProxyResolver$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GRemoteActionGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRemoteActionGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRemoteActionGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRemoteActionGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_autoptr_clear_GRemoteActionGroup$MH,"glib_autoptr_clear_GRemoteActionGroup");
    }
    public static void glib_autoptr_clear_GRemoteActionGroup ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GRemoteActionGroup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_autoptr_cleanup_GRemoteActionGroup$MH,"glib_autoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_autoptr_cleanup_GRemoteActionGroup ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GRemoteActionGroup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_listautoptr_cleanup_GRemoteActionGroup$MH,"glib_listautoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_listautoptr_cleanup_GRemoteActionGroup ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GRemoteActionGroup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_slistautoptr_cleanup_GRemoteActionGroup$MH,"glib_slistautoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_slistautoptr_cleanup_GRemoteActionGroup ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GRemoteActionGroup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_queueautoptr_cleanup_GRemoteActionGroup$MH,"glib_queueautoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_queueautoptr_cleanup_GRemoteActionGroup ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GRemoteActionGroup$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GResolver_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResolver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResolver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResolver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_autoptr_clear_GResolver$MH,"glib_autoptr_clear_GResolver");
    }
    public static void glib_autoptr_clear_GResolver ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GResolver$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_autoptr_cleanup_GResolver$MH,"glib_autoptr_cleanup_GResolver");
    }
    public static void glib_autoptr_cleanup_GResolver ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GResolver$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_listautoptr_cleanup_GResolver$MH,"glib_listautoptr_cleanup_GResolver");
    }
    public static void glib_listautoptr_cleanup_GResolver ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GResolver$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_slistautoptr_cleanup_GResolver$MH,"glib_slistautoptr_cleanup_GResolver");
    }
    public static void glib_slistautoptr_cleanup_GResolver ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GResolver$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_queueautoptr_cleanup_GResolver$MH,"glib_queueautoptr_cleanup_GResolver");
    }
    public static void glib_queueautoptr_cleanup_GResolver ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GResolver$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GResource_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResource_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResource_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResource_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_autoptr_clear_GResource$MH,"glib_autoptr_clear_GResource");
    }
    public static void glib_autoptr_clear_GResource ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GResource$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_autoptr_cleanup_GResource$MH,"glib_autoptr_cleanup_GResource");
    }
    public static void glib_autoptr_cleanup_GResource ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GResource$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_listautoptr_cleanup_GResource$MH,"glib_listautoptr_cleanup_GResource");
    }
    public static void glib_listautoptr_cleanup_GResource ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GResource$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_slistautoptr_cleanup_GResource$MH,"glib_slistautoptr_cleanup_GResource");
    }
    public static void glib_slistautoptr_cleanup_GResource ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GResource$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_queueautoptr_cleanup_GResource$MH,"glib_queueautoptr_cleanup_GResource");
    }
    public static void glib_queueautoptr_cleanup_GResource ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GResource$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSeekable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSeekable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSeekable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSeekable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_autoptr_clear_GSeekable$MH,"glib_autoptr_clear_GSeekable");
    }
    public static void glib_autoptr_clear_GSeekable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSeekable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_autoptr_cleanup_GSeekable$MH,"glib_autoptr_cleanup_GSeekable");
    }
    public static void glib_autoptr_cleanup_GSeekable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSeekable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_listautoptr_cleanup_GSeekable$MH,"glib_listautoptr_cleanup_GSeekable");
    }
    public static void glib_listautoptr_cleanup_GSeekable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSeekable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_slistautoptr_cleanup_GSeekable$MH,"glib_slistautoptr_cleanup_GSeekable");
    }
    public static void glib_slistautoptr_cleanup_GSeekable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSeekable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_queueautoptr_cleanup_GSeekable$MH,"glib_queueautoptr_cleanup_GSeekable");
    }
    public static void glib_queueautoptr_cleanup_GSeekable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSeekable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsBackend_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsBackend_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsBackend_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsBackend_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_autoptr_clear_GSettingsBackend$MH,"glib_autoptr_clear_GSettingsBackend");
    }
    public static void glib_autoptr_clear_GSettingsBackend ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSettingsBackend$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_autoptr_cleanup_GSettingsBackend$MH,"glib_autoptr_cleanup_GSettingsBackend");
    }
    public static void glib_autoptr_cleanup_GSettingsBackend ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSettingsBackend$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_listautoptr_cleanup_GSettingsBackend$MH,"glib_listautoptr_cleanup_GSettingsBackend");
    }
    public static void glib_listautoptr_cleanup_GSettingsBackend ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSettingsBackend$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_slistautoptr_cleanup_GSettingsBackend$MH,"glib_slistautoptr_cleanup_GSettingsBackend");
    }
    public static void glib_slistautoptr_cleanup_GSettingsBackend ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSettingsBackend$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_queueautoptr_cleanup_GSettingsBackend$MH,"glib_queueautoptr_cleanup_GSettingsBackend");
    }
    public static void glib_queueautoptr_cleanup_GSettingsBackend ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSettingsBackend$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsSchema_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchema_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchema_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchema_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_autoptr_clear_GSettingsSchema$MH,"glib_autoptr_clear_GSettingsSchema");
    }
    public static void glib_autoptr_clear_GSettingsSchema ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSettingsSchema$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_autoptr_cleanup_GSettingsSchema$MH,"glib_autoptr_cleanup_GSettingsSchema");
    }
    public static void glib_autoptr_cleanup_GSettingsSchema ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSettingsSchema$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_listautoptr_cleanup_GSettingsSchema$MH,"glib_listautoptr_cleanup_GSettingsSchema");
    }
    public static void glib_listautoptr_cleanup_GSettingsSchema ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSettingsSchema$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_slistautoptr_cleanup_GSettingsSchema$MH,"glib_slistautoptr_cleanup_GSettingsSchema");
    }
    public static void glib_slistautoptr_cleanup_GSettingsSchema ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSettingsSchema$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_queueautoptr_cleanup_GSettingsSchema$MH,"glib_queueautoptr_cleanup_GSettingsSchema");
    }
    public static void glib_queueautoptr_cleanup_GSettingsSchema ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSettingsSchema$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsSchemaKey_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaKey_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaKey_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaKey_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_autoptr_clear_GSettingsSchemaKey$MH,"glib_autoptr_clear_GSettingsSchemaKey");
    }
    public static void glib_autoptr_clear_GSettingsSchemaKey ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSettingsSchemaKey$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_autoptr_cleanup_GSettingsSchemaKey$MH,"glib_autoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_autoptr_cleanup_GSettingsSchemaKey ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSettingsSchemaKey$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_listautoptr_cleanup_GSettingsSchemaKey$MH,"glib_listautoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_listautoptr_cleanup_GSettingsSchemaKey ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSettingsSchemaKey$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_slistautoptr_cleanup_GSettingsSchemaKey$MH,"glib_slistautoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_slistautoptr_cleanup_GSettingsSchemaKey ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSettingsSchemaKey$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_queueautoptr_cleanup_GSettingsSchemaKey$MH,"glib_queueautoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_queueautoptr_cleanup_GSettingsSchemaKey ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSettingsSchemaKey$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsSchemaSource_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaSource_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaSource_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaSource_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_autoptr_clear_GSettingsSchemaSource$MH,"glib_autoptr_clear_GSettingsSchemaSource");
    }
    public static void glib_autoptr_clear_GSettingsSchemaSource ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSettingsSchemaSource$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_autoptr_cleanup_GSettingsSchemaSource$MH,"glib_autoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_autoptr_cleanup_GSettingsSchemaSource ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSettingsSchemaSource$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_listautoptr_cleanup_GSettingsSchemaSource$MH,"glib_listautoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_listautoptr_cleanup_GSettingsSchemaSource ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSettingsSchemaSource$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_slistautoptr_cleanup_GSettingsSchemaSource$MH,"glib_slistautoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_slistautoptr_cleanup_GSettingsSchemaSource ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSettingsSchemaSource$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_queueautoptr_cleanup_GSettingsSchemaSource$MH,"glib_queueautoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_queueautoptr_cleanup_GSettingsSchemaSource ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSettingsSchemaSource$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettings_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettings_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettings_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettings_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_autoptr_clear_GSettings$MH,"glib_autoptr_clear_GSettings");
    }
    public static void glib_autoptr_clear_GSettings ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSettings$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_autoptr_cleanup_GSettings$MH,"glib_autoptr_cleanup_GSettings");
    }
    public static void glib_autoptr_cleanup_GSettings ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSettings$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_listautoptr_cleanup_GSettings$MH,"glib_listautoptr_cleanup_GSettings");
    }
    public static void glib_listautoptr_cleanup_GSettings ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSettings$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_slistautoptr_cleanup_GSettings$MH,"glib_slistautoptr_cleanup_GSettings");
    }
    public static void glib_slistautoptr_cleanup_GSettings ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSettings$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_queueautoptr_cleanup_GSettings$MH,"glib_queueautoptr_cleanup_GSettings");
    }
    public static void glib_queueautoptr_cleanup_GSettings ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSettings$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleActionGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleActionGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleActionGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleActionGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_autoptr_clear_GSimpleActionGroup$MH,"glib_autoptr_clear_GSimpleActionGroup");
    }
    public static void glib_autoptr_clear_GSimpleActionGroup ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSimpleActionGroup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_autoptr_cleanup_GSimpleActionGroup$MH,"glib_autoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_autoptr_cleanup_GSimpleActionGroup ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSimpleActionGroup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_listautoptr_cleanup_GSimpleActionGroup$MH,"glib_listautoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_listautoptr_cleanup_GSimpleActionGroup ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSimpleActionGroup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_slistautoptr_cleanup_GSimpleActionGroup$MH,"glib_slistautoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_slistautoptr_cleanup_GSimpleActionGroup ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSimpleActionGroup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_queueautoptr_cleanup_GSimpleActionGroup$MH,"glib_queueautoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_queueautoptr_cleanup_GSimpleActionGroup ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSimpleActionGroup$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_autoptr_clear_GSimpleAction$MH,"glib_autoptr_clear_GSimpleAction");
    }
    public static void glib_autoptr_clear_GSimpleAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSimpleAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_autoptr_cleanup_GSimpleAction$MH,"glib_autoptr_cleanup_GSimpleAction");
    }
    public static void glib_autoptr_cleanup_GSimpleAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSimpleAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_listautoptr_cleanup_GSimpleAction$MH,"glib_listautoptr_cleanup_GSimpleAction");
    }
    public static void glib_listautoptr_cleanup_GSimpleAction ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSimpleAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_slistautoptr_cleanup_GSimpleAction$MH,"glib_slistautoptr_cleanup_GSimpleAction");
    }
    public static void glib_slistautoptr_cleanup_GSimpleAction ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSimpleAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_queueautoptr_cleanup_GSimpleAction$MH,"glib_queueautoptr_cleanup_GSimpleAction");
    }
    public static void glib_queueautoptr_cleanup_GSimpleAction ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSimpleAction$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleAsyncResult_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAsyncResult_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAsyncResult_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAsyncResult_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_autoptr_clear_GSimpleAsyncResult$MH,"glib_autoptr_clear_GSimpleAsyncResult");
    }
    public static void glib_autoptr_clear_GSimpleAsyncResult ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSimpleAsyncResult$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_autoptr_cleanup_GSimpleAsyncResult$MH,"glib_autoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_autoptr_cleanup_GSimpleAsyncResult ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSimpleAsyncResult$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_listautoptr_cleanup_GSimpleAsyncResult$MH,"glib_listautoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_listautoptr_cleanup_GSimpleAsyncResult ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSimpleAsyncResult$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_slistautoptr_cleanup_GSimpleAsyncResult$MH,"glib_slistautoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_slistautoptr_cleanup_GSimpleAsyncResult ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSimpleAsyncResult$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_queueautoptr_cleanup_GSimpleAsyncResult$MH,"glib_queueautoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_queueautoptr_cleanup_GSimpleAsyncResult ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSimpleAsyncResult$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimplePermission_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimplePermission_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimplePermission_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimplePermission_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_autoptr_clear_GSimplePermission$MH,"glib_autoptr_clear_GSimplePermission");
    }
    public static void glib_autoptr_clear_GSimplePermission ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSimplePermission$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_autoptr_cleanup_GSimplePermission$MH,"glib_autoptr_cleanup_GSimplePermission");
    }
    public static void glib_autoptr_cleanup_GSimplePermission ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSimplePermission$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_listautoptr_cleanup_GSimplePermission$MH,"glib_listautoptr_cleanup_GSimplePermission");
    }
    public static void glib_listautoptr_cleanup_GSimplePermission ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSimplePermission$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_slistautoptr_cleanup_GSimplePermission$MH,"glib_slistautoptr_cleanup_GSimplePermission");
    }
    public static void glib_slistautoptr_cleanup_GSimplePermission ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSimplePermission$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_queueautoptr_cleanup_GSimplePermission$MH,"glib_queueautoptr_cleanup_GSimplePermission");
    }
    public static void glib_queueautoptr_cleanup_GSimplePermission ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSimplePermission$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleProxyResolver_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleProxyResolver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleProxyResolver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleProxyResolver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_autoptr_clear_GSimpleProxyResolver$MH,"glib_autoptr_clear_GSimpleProxyResolver");
    }
    public static void glib_autoptr_clear_GSimpleProxyResolver ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSimpleProxyResolver$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_autoptr_cleanup_GSimpleProxyResolver$MH,"glib_autoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_autoptr_cleanup_GSimpleProxyResolver ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSimpleProxyResolver$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_listautoptr_cleanup_GSimpleProxyResolver$MH,"glib_listautoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_listautoptr_cleanup_GSimpleProxyResolver ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSimpleProxyResolver$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_slistautoptr_cleanup_GSimpleProxyResolver$MH,"glib_slistautoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_slistautoptr_cleanup_GSimpleProxyResolver ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSimpleProxyResolver$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_queueautoptr_cleanup_GSimpleProxyResolver$MH,"glib_queueautoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_queueautoptr_cleanup_GSimpleProxyResolver ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSimpleProxyResolver$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketAddressEnumerator_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddressEnumerator_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddressEnumerator_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddressEnumerator_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_autoptr_clear_GSocketAddressEnumerator$MH,"glib_autoptr_clear_GSocketAddressEnumerator");
    }
    public static void glib_autoptr_clear_GSocketAddressEnumerator ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSocketAddressEnumerator$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_autoptr_cleanup_GSocketAddressEnumerator$MH,"glib_autoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_autoptr_cleanup_GSocketAddressEnumerator ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSocketAddressEnumerator$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_listautoptr_cleanup_GSocketAddressEnumerator$MH,"glib_listautoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_listautoptr_cleanup_GSocketAddressEnumerator ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSocketAddressEnumerator$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_slistautoptr_cleanup_GSocketAddressEnumerator$MH,"glib_slistautoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_slistautoptr_cleanup_GSocketAddressEnumerator ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSocketAddressEnumerator$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_queueautoptr_cleanup_GSocketAddressEnumerator$MH,"glib_queueautoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_queueautoptr_cleanup_GSocketAddressEnumerator ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSocketAddressEnumerator$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_autoptr_clear_GSocketAddress$MH,"glib_autoptr_clear_GSocketAddress");
    }
    public static void glib_autoptr_clear_GSocketAddress ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSocketAddress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_autoptr_cleanup_GSocketAddress$MH,"glib_autoptr_cleanup_GSocketAddress");
    }
    public static void glib_autoptr_cleanup_GSocketAddress ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSocketAddress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_listautoptr_cleanup_GSocketAddress$MH,"glib_listautoptr_cleanup_GSocketAddress");
    }
    public static void glib_listautoptr_cleanup_GSocketAddress ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSocketAddress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_slistautoptr_cleanup_GSocketAddress$MH,"glib_slistautoptr_cleanup_GSocketAddress");
    }
    public static void glib_slistautoptr_cleanup_GSocketAddress ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSocketAddress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_queueautoptr_cleanup_GSocketAddress$MH,"glib_queueautoptr_cleanup_GSocketAddress");
    }
    public static void glib_queueautoptr_cleanup_GSocketAddress ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSocketAddress$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketClient_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketClient_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketClient_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketClient_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_autoptr_clear_GSocketClient$MH,"glib_autoptr_clear_GSocketClient");
    }
    public static void glib_autoptr_clear_GSocketClient ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSocketClient$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_autoptr_cleanup_GSocketClient$MH,"glib_autoptr_cleanup_GSocketClient");
    }
    public static void glib_autoptr_cleanup_GSocketClient ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSocketClient$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_listautoptr_cleanup_GSocketClient$MH,"glib_listautoptr_cleanup_GSocketClient");
    }
    public static void glib_listautoptr_cleanup_GSocketClient ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSocketClient$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_slistautoptr_cleanup_GSocketClient$MH,"glib_slistautoptr_cleanup_GSocketClient");
    }
    public static void glib_slistautoptr_cleanup_GSocketClient ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSocketClient$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_queueautoptr_cleanup_GSocketClient$MH,"glib_queueautoptr_cleanup_GSocketClient");
    }
    public static void glib_queueautoptr_cleanup_GSocketClient ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSocketClient$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketConnectable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnectable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnectable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnectable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_autoptr_clear_GSocketConnectable$MH,"glib_autoptr_clear_GSocketConnectable");
    }
    public static void glib_autoptr_clear_GSocketConnectable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSocketConnectable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_autoptr_cleanup_GSocketConnectable$MH,"glib_autoptr_cleanup_GSocketConnectable");
    }
    public static void glib_autoptr_cleanup_GSocketConnectable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSocketConnectable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_listautoptr_cleanup_GSocketConnectable$MH,"glib_listautoptr_cleanup_GSocketConnectable");
    }
    public static void glib_listautoptr_cleanup_GSocketConnectable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSocketConnectable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_slistautoptr_cleanup_GSocketConnectable$MH,"glib_slistautoptr_cleanup_GSocketConnectable");
    }
    public static void glib_slistautoptr_cleanup_GSocketConnectable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSocketConnectable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_queueautoptr_cleanup_GSocketConnectable$MH,"glib_queueautoptr_cleanup_GSocketConnectable");
    }
    public static void glib_queueautoptr_cleanup_GSocketConnectable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSocketConnectable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_autoptr_clear_GSocketConnection$MH,"glib_autoptr_clear_GSocketConnection");
    }
    public static void glib_autoptr_clear_GSocketConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSocketConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_autoptr_cleanup_GSocketConnection$MH,"glib_autoptr_cleanup_GSocketConnection");
    }
    public static void glib_autoptr_cleanup_GSocketConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSocketConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_listautoptr_cleanup_GSocketConnection$MH,"glib_listautoptr_cleanup_GSocketConnection");
    }
    public static void glib_listautoptr_cleanup_GSocketConnection ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSocketConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_slistautoptr_cleanup_GSocketConnection$MH,"glib_slistautoptr_cleanup_GSocketConnection");
    }
    public static void glib_slistautoptr_cleanup_GSocketConnection ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSocketConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_queueautoptr_cleanup_GSocketConnection$MH,"glib_queueautoptr_cleanup_GSocketConnection");
    }
    public static void glib_queueautoptr_cleanup_GSocketConnection ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSocketConnection$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketControlMessage_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketControlMessage_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketControlMessage_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketControlMessage_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_autoptr_clear_GSocketControlMessage$MH,"glib_autoptr_clear_GSocketControlMessage");
    }
    public static void glib_autoptr_clear_GSocketControlMessage ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSocketControlMessage$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_autoptr_cleanup_GSocketControlMessage$MH,"glib_autoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_autoptr_cleanup_GSocketControlMessage ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSocketControlMessage$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_listautoptr_cleanup_GSocketControlMessage$MH,"glib_listautoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_listautoptr_cleanup_GSocketControlMessage ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSocketControlMessage$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_slistautoptr_cleanup_GSocketControlMessage$MH,"glib_slistautoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_slistautoptr_cleanup_GSocketControlMessage ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSocketControlMessage$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_queueautoptr_cleanup_GSocketControlMessage$MH,"glib_queueautoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_queueautoptr_cleanup_GSocketControlMessage ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSocketControlMessage$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocket_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocket_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocket_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocket_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_autoptr_clear_GSocket$MH,"glib_autoptr_clear_GSocket");
    }
    public static void glib_autoptr_clear_GSocket ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSocket$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_autoptr_cleanup_GSocket$MH,"glib_autoptr_cleanup_GSocket");
    }
    public static void glib_autoptr_cleanup_GSocket ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSocket$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_listautoptr_cleanup_GSocket$MH,"glib_listautoptr_cleanup_GSocket");
    }
    public static void glib_listautoptr_cleanup_GSocket ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSocket$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_slistautoptr_cleanup_GSocket$MH,"glib_slistautoptr_cleanup_GSocket");
    }
    public static void glib_slistautoptr_cleanup_GSocket ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSocket$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_queueautoptr_cleanup_GSocket$MH,"glib_queueautoptr_cleanup_GSocket");
    }
    public static void glib_queueautoptr_cleanup_GSocket ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSocket$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketListener_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketListener_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketListener_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketListener_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_autoptr_clear_GSocketListener$MH,"glib_autoptr_clear_GSocketListener");
    }
    public static void glib_autoptr_clear_GSocketListener ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSocketListener$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_autoptr_cleanup_GSocketListener$MH,"glib_autoptr_cleanup_GSocketListener");
    }
    public static void glib_autoptr_cleanup_GSocketListener ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSocketListener$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_listautoptr_cleanup_GSocketListener$MH,"glib_listautoptr_cleanup_GSocketListener");
    }
    public static void glib_listautoptr_cleanup_GSocketListener ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSocketListener$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_slistautoptr_cleanup_GSocketListener$MH,"glib_slistautoptr_cleanup_GSocketListener");
    }
    public static void glib_slistautoptr_cleanup_GSocketListener ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSocketListener$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_queueautoptr_cleanup_GSocketListener$MH,"glib_queueautoptr_cleanup_GSocketListener");
    }
    public static void glib_queueautoptr_cleanup_GSocketListener ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSocketListener$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketService_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketService_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketService_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketService_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_autoptr_clear_GSocketService$MH,"glib_autoptr_clear_GSocketService");
    }
    public static void glib_autoptr_clear_GSocketService ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSocketService$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_autoptr_cleanup_GSocketService$MH,"glib_autoptr_cleanup_GSocketService");
    }
    public static void glib_autoptr_cleanup_GSocketService ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSocketService$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_listautoptr_cleanup_GSocketService$MH,"glib_listautoptr_cleanup_GSocketService");
    }
    public static void glib_listautoptr_cleanup_GSocketService ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSocketService$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_slistautoptr_cleanup_GSocketService$MH,"glib_slistautoptr_cleanup_GSocketService");
    }
    public static void glib_slistautoptr_cleanup_GSocketService ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSocketService$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_queueautoptr_cleanup_GSocketService$MH,"glib_queueautoptr_cleanup_GSocketService");
    }
    public static void glib_queueautoptr_cleanup_GSocketService ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSocketService$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSubprocess_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocess_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocess_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocess_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_autoptr_clear_GSubprocess$MH,"glib_autoptr_clear_GSubprocess");
    }
    public static void glib_autoptr_clear_GSubprocess ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSubprocess$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_autoptr_cleanup_GSubprocess$MH,"glib_autoptr_cleanup_GSubprocess");
    }
    public static void glib_autoptr_cleanup_GSubprocess ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSubprocess$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_listautoptr_cleanup_GSubprocess$MH,"glib_listautoptr_cleanup_GSubprocess");
    }
    public static void glib_listautoptr_cleanup_GSubprocess ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSubprocess$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_slistautoptr_cleanup_GSubprocess$MH,"glib_slistautoptr_cleanup_GSubprocess");
    }
    public static void glib_slistautoptr_cleanup_GSubprocess ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSubprocess$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_queueautoptr_cleanup_GSubprocess$MH,"glib_queueautoptr_cleanup_GSubprocess");
    }
    public static void glib_queueautoptr_cleanup_GSubprocess ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSubprocess$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSubprocessLauncher_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocessLauncher_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocessLauncher_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocessLauncher_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_autoptr_clear_GSubprocessLauncher$MH,"glib_autoptr_clear_GSubprocessLauncher");
    }
    public static void glib_autoptr_clear_GSubprocessLauncher ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSubprocessLauncher$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_autoptr_cleanup_GSubprocessLauncher$MH,"glib_autoptr_cleanup_GSubprocessLauncher");
    }
    public static void glib_autoptr_cleanup_GSubprocessLauncher ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSubprocessLauncher$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_listautoptr_cleanup_GSubprocessLauncher$MH,"glib_listautoptr_cleanup_GSubprocessLauncher");
    }
    public static void glib_listautoptr_cleanup_GSubprocessLauncher ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSubprocessLauncher$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$971.glib_slistautoptr_cleanup_GSubprocessLauncher$MH,"glib_slistautoptr_cleanup_GSubprocessLauncher");
    }
    public static void glib_slistautoptr_cleanup_GSubprocessLauncher ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSubprocessLauncher$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$971.glib_queueautoptr_cleanup_GSubprocessLauncher$MH,"glib_queueautoptr_cleanup_GSubprocessLauncher");
    }
    public static void glib_queueautoptr_cleanup_GSubprocessLauncher ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSubprocessLauncher$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTask_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTask_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTask_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTask_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$971.glib_autoptr_clear_GTask$MH,"glib_autoptr_clear_GTask");
    }
    public static void glib_autoptr_clear_GTask ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTask$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$971.glib_autoptr_cleanup_GTask$MH,"glib_autoptr_cleanup_GTask");
    }
    public static void glib_autoptr_cleanup_GTask ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTask$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$971.glib_listautoptr_cleanup_GTask$MH,"glib_listautoptr_cleanup_GTask");
    }
    public static void glib_listautoptr_cleanup_GTask ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTask$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$971.glib_slistautoptr_cleanup_GTask$MH,"glib_slistautoptr_cleanup_GTask");
    }
    public static void glib_slistautoptr_cleanup_GTask ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTask$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$972.glib_queueautoptr_cleanup_GTask$MH,"glib_queueautoptr_cleanup_GTask");
    }
    public static void glib_queueautoptr_cleanup_GTask ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTask$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTcpConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$972.glib_autoptr_clear_GTcpConnection$MH,"glib_autoptr_clear_GTcpConnection");
    }
    public static void glib_autoptr_clear_GTcpConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTcpConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$972.glib_autoptr_cleanup_GTcpConnection$MH,"glib_autoptr_cleanup_GTcpConnection");
    }
    public static void glib_autoptr_cleanup_GTcpConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTcpConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$972.glib_listautoptr_cleanup_GTcpConnection$MH,"glib_listautoptr_cleanup_GTcpConnection");
    }
    public static void glib_listautoptr_cleanup_GTcpConnection ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTcpConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$972.glib_slistautoptr_cleanup_GTcpConnection$MH,"glib_slistautoptr_cleanup_GTcpConnection");
    }
    public static void glib_slistautoptr_cleanup_GTcpConnection ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTcpConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$972.glib_queueautoptr_cleanup_GTcpConnection$MH,"glib_queueautoptr_cleanup_GTcpConnection");
    }
    public static void glib_queueautoptr_cleanup_GTcpConnection ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTcpConnection$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTcpWrapperConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpWrapperConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpWrapperConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpWrapperConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$973.glib_autoptr_clear_GTcpWrapperConnection$MH,"glib_autoptr_clear_GTcpWrapperConnection");
    }
    public static void glib_autoptr_clear_GTcpWrapperConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTcpWrapperConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$973.glib_autoptr_cleanup_GTcpWrapperConnection$MH,"glib_autoptr_cleanup_GTcpWrapperConnection");
    }
    public static void glib_autoptr_cleanup_GTcpWrapperConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTcpWrapperConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$973.glib_listautoptr_cleanup_GTcpWrapperConnection$MH,"glib_listautoptr_cleanup_GTcpWrapperConnection");
    }
    public static void glib_listautoptr_cleanup_GTcpWrapperConnection ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTcpWrapperConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$973.glib_slistautoptr_cleanup_GTcpWrapperConnection$MH,"glib_slistautoptr_cleanup_GTcpWrapperConnection");
    }
    public static void glib_slistautoptr_cleanup_GTcpWrapperConnection ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTcpWrapperConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$973.glib_queueautoptr_cleanup_GTcpWrapperConnection$MH,"glib_queueautoptr_cleanup_GTcpWrapperConnection");
    }
    public static void glib_queueautoptr_cleanup_GTcpWrapperConnection ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTcpWrapperConnection$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTestDBus_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTestDBus_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTestDBus_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTestDBus_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$973.glib_autoptr_clear_GTestDBus$MH,"glib_autoptr_clear_GTestDBus");
    }
    public static void glib_autoptr_clear_GTestDBus ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTestDBus$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$974.glib_autoptr_cleanup_GTestDBus$MH,"glib_autoptr_cleanup_GTestDBus");
    }
    public static void glib_autoptr_cleanup_GTestDBus ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTestDBus$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$974.glib_listautoptr_cleanup_GTestDBus$MH,"glib_listautoptr_cleanup_GTestDBus");
    }
    public static void glib_listautoptr_cleanup_GTestDBus ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTestDBus$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$974.glib_slistautoptr_cleanup_GTestDBus$MH,"glib_slistautoptr_cleanup_GTestDBus");
    }
    public static void glib_slistautoptr_cleanup_GTestDBus ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTestDBus$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$974.glib_queueautoptr_cleanup_GTestDBus$MH,"glib_queueautoptr_cleanup_GTestDBus");
    }
    public static void glib_queueautoptr_cleanup_GTestDBus ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTestDBus$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GThemedIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThemedIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThemedIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThemedIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$974.glib_autoptr_clear_GThemedIcon$MH,"glib_autoptr_clear_GThemedIcon");
    }
    public static void glib_autoptr_clear_GThemedIcon ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GThemedIcon$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$974.glib_autoptr_cleanup_GThemedIcon$MH,"glib_autoptr_cleanup_GThemedIcon");
    }
    public static void glib_autoptr_cleanup_GThemedIcon ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GThemedIcon$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$975.glib_listautoptr_cleanup_GThemedIcon$MH,"glib_listautoptr_cleanup_GThemedIcon");
    }
    public static void glib_listautoptr_cleanup_GThemedIcon ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GThemedIcon$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$975.glib_slistautoptr_cleanup_GThemedIcon$MH,"glib_slistautoptr_cleanup_GThemedIcon");
    }
    public static void glib_slistautoptr_cleanup_GThemedIcon ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GThemedIcon$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$975.glib_queueautoptr_cleanup_GThemedIcon$MH,"glib_queueautoptr_cleanup_GThemedIcon");
    }
    public static void glib_queueautoptr_cleanup_GThemedIcon ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GThemedIcon$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GThreadedSocketService_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThreadedSocketService_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThreadedSocketService_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThreadedSocketService_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$975.glib_autoptr_clear_GThreadedSocketService$MH,"glib_autoptr_clear_GThreadedSocketService");
    }
    public static void glib_autoptr_clear_GThreadedSocketService ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GThreadedSocketService$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$975.glib_autoptr_cleanup_GThreadedSocketService$MH,"glib_autoptr_cleanup_GThreadedSocketService");
    }
    public static void glib_autoptr_cleanup_GThreadedSocketService ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GThreadedSocketService$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$975.glib_listautoptr_cleanup_GThreadedSocketService$MH,"glib_listautoptr_cleanup_GThreadedSocketService");
    }
    public static void glib_listautoptr_cleanup_GThreadedSocketService ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GThreadedSocketService$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$976.glib_slistautoptr_cleanup_GThreadedSocketService$MH,"glib_slistautoptr_cleanup_GThreadedSocketService");
    }
    public static void glib_slistautoptr_cleanup_GThreadedSocketService ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GThreadedSocketService$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$976.glib_queueautoptr_cleanup_GThreadedSocketService$MH,"glib_queueautoptr_cleanup_GThreadedSocketService");
    }
    public static void glib_queueautoptr_cleanup_GThreadedSocketService ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GThreadedSocketService$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsBackend_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsBackend_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsBackend_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsBackend_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$976.glib_autoptr_clear_GTlsBackend$MH,"glib_autoptr_clear_GTlsBackend");
    }
    public static void glib_autoptr_clear_GTlsBackend ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTlsBackend$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$976.glib_autoptr_cleanup_GTlsBackend$MH,"glib_autoptr_cleanup_GTlsBackend");
    }
    public static void glib_autoptr_cleanup_GTlsBackend ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTlsBackend$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$976.glib_listautoptr_cleanup_GTlsBackend$MH,"glib_listautoptr_cleanup_GTlsBackend");
    }
    public static void glib_listautoptr_cleanup_GTlsBackend ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTlsBackend$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$976.glib_slistautoptr_cleanup_GTlsBackend$MH,"glib_slistautoptr_cleanup_GTlsBackend");
    }
    public static void glib_slistautoptr_cleanup_GTlsBackend ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTlsBackend$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$977.glib_queueautoptr_cleanup_GTlsBackend$MH,"glib_queueautoptr_cleanup_GTlsBackend");
    }
    public static void glib_queueautoptr_cleanup_GTlsBackend ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTlsBackend$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsCertificate_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsCertificate_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsCertificate_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsCertificate_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$977.glib_autoptr_clear_GTlsCertificate$MH,"glib_autoptr_clear_GTlsCertificate");
    }
    public static void glib_autoptr_clear_GTlsCertificate ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTlsCertificate$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$977.glib_autoptr_cleanup_GTlsCertificate$MH,"glib_autoptr_cleanup_GTlsCertificate");
    }
    public static void glib_autoptr_cleanup_GTlsCertificate ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTlsCertificate$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$977.glib_listautoptr_cleanup_GTlsCertificate$MH,"glib_listautoptr_cleanup_GTlsCertificate");
    }
    public static void glib_listautoptr_cleanup_GTlsCertificate ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTlsCertificate$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$977.glib_slistautoptr_cleanup_GTlsCertificate$MH,"glib_slistautoptr_cleanup_GTlsCertificate");
    }
    public static void glib_slistautoptr_cleanup_GTlsCertificate ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTlsCertificate$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$977.glib_queueautoptr_cleanup_GTlsCertificate$MH,"glib_queueautoptr_cleanup_GTlsCertificate");
    }
    public static void glib_queueautoptr_cleanup_GTlsCertificate ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTlsCertificate$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsClientConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsClientConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsClientConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsClientConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$978.glib_autoptr_clear_GTlsClientConnection$MH,"glib_autoptr_clear_GTlsClientConnection");
    }
    public static void glib_autoptr_clear_GTlsClientConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTlsClientConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$978.glib_autoptr_cleanup_GTlsClientConnection$MH,"glib_autoptr_cleanup_GTlsClientConnection");
    }
    public static void glib_autoptr_cleanup_GTlsClientConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTlsClientConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$978.glib_listautoptr_cleanup_GTlsClientConnection$MH,"glib_listautoptr_cleanup_GTlsClientConnection");
    }
    public static void glib_listautoptr_cleanup_GTlsClientConnection ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTlsClientConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$978.glib_slistautoptr_cleanup_GTlsClientConnection$MH,"glib_slistautoptr_cleanup_GTlsClientConnection");
    }
    public static void glib_slistautoptr_cleanup_GTlsClientConnection ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTlsClientConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$978.glib_queueautoptr_cleanup_GTlsClientConnection$MH,"glib_queueautoptr_cleanup_GTlsClientConnection");
    }
    public static void glib_queueautoptr_cleanup_GTlsClientConnection ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTlsClientConnection$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$978.glib_autoptr_clear_GTlsConnection$MH,"glib_autoptr_clear_GTlsConnection");
    }
    public static void glib_autoptr_clear_GTlsConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTlsConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$979.glib_autoptr_cleanup_GTlsConnection$MH,"glib_autoptr_cleanup_GTlsConnection");
    }
    public static void glib_autoptr_cleanup_GTlsConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTlsConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$979.glib_listautoptr_cleanup_GTlsConnection$MH,"glib_listautoptr_cleanup_GTlsConnection");
    }
    public static void glib_listautoptr_cleanup_GTlsConnection ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTlsConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$979.glib_slistautoptr_cleanup_GTlsConnection$MH,"glib_slistautoptr_cleanup_GTlsConnection");
    }
    public static void glib_slistautoptr_cleanup_GTlsConnection ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTlsConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$979.glib_queueautoptr_cleanup_GTlsConnection$MH,"glib_queueautoptr_cleanup_GTlsConnection");
    }
    public static void glib_queueautoptr_cleanup_GTlsConnection ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTlsConnection$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsDatabase_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsDatabase_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsDatabase_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsDatabase_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$979.glib_autoptr_clear_GTlsDatabase$MH,"glib_autoptr_clear_GTlsDatabase");
    }
    public static void glib_autoptr_clear_GTlsDatabase ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTlsDatabase$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$979.glib_autoptr_cleanup_GTlsDatabase$MH,"glib_autoptr_cleanup_GTlsDatabase");
    }
    public static void glib_autoptr_cleanup_GTlsDatabase ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTlsDatabase$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$980.glib_listautoptr_cleanup_GTlsDatabase$MH,"glib_listautoptr_cleanup_GTlsDatabase");
    }
    public static void glib_listautoptr_cleanup_GTlsDatabase ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTlsDatabase$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$980.glib_slistautoptr_cleanup_GTlsDatabase$MH,"glib_slistautoptr_cleanup_GTlsDatabase");
    }
    public static void glib_slistautoptr_cleanup_GTlsDatabase ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTlsDatabase$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$980.glib_queueautoptr_cleanup_GTlsDatabase$MH,"glib_queueautoptr_cleanup_GTlsDatabase");
    }
    public static void glib_queueautoptr_cleanup_GTlsDatabase ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTlsDatabase$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsFileDatabase_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsFileDatabase_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsFileDatabase_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsFileDatabase_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$980.glib_autoptr_clear_GTlsFileDatabase$MH,"glib_autoptr_clear_GTlsFileDatabase");
    }
    public static void glib_autoptr_clear_GTlsFileDatabase ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTlsFileDatabase$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$980.glib_autoptr_cleanup_GTlsFileDatabase$MH,"glib_autoptr_cleanup_GTlsFileDatabase");
    }
    public static void glib_autoptr_cleanup_GTlsFileDatabase ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTlsFileDatabase$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$980.glib_listautoptr_cleanup_GTlsFileDatabase$MH,"glib_listautoptr_cleanup_GTlsFileDatabase");
    }
    public static void glib_listautoptr_cleanup_GTlsFileDatabase ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTlsFileDatabase$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$981.glib_slistautoptr_cleanup_GTlsFileDatabase$MH,"glib_slistautoptr_cleanup_GTlsFileDatabase");
    }
    public static void glib_slistautoptr_cleanup_GTlsFileDatabase ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTlsFileDatabase$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$981.glib_queueautoptr_cleanup_GTlsFileDatabase$MH,"glib_queueautoptr_cleanup_GTlsFileDatabase");
    }
    public static void glib_queueautoptr_cleanup_GTlsFileDatabase ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTlsFileDatabase$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsInteraction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsInteraction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsInteraction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsInteraction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$981.glib_autoptr_clear_GTlsInteraction$MH,"glib_autoptr_clear_GTlsInteraction");
    }
    public static void glib_autoptr_clear_GTlsInteraction ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTlsInteraction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$981.glib_autoptr_cleanup_GTlsInteraction$MH,"glib_autoptr_cleanup_GTlsInteraction");
    }
    public static void glib_autoptr_cleanup_GTlsInteraction ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTlsInteraction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$981.glib_listautoptr_cleanup_GTlsInteraction$MH,"glib_listautoptr_cleanup_GTlsInteraction");
    }
    public static void glib_listautoptr_cleanup_GTlsInteraction ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTlsInteraction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$981.glib_slistautoptr_cleanup_GTlsInteraction$MH,"glib_slistautoptr_cleanup_GTlsInteraction");
    }
    public static void glib_slistautoptr_cleanup_GTlsInteraction ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTlsInteraction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$982.glib_queueautoptr_cleanup_GTlsInteraction$MH,"glib_queueautoptr_cleanup_GTlsInteraction");
    }
    public static void glib_queueautoptr_cleanup_GTlsInteraction ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTlsInteraction$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsPassword_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsPassword_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsPassword_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsPassword_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$982.glib_autoptr_clear_GTlsPassword$MH,"glib_autoptr_clear_GTlsPassword");
    }
    public static void glib_autoptr_clear_GTlsPassword ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTlsPassword$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$982.glib_autoptr_cleanup_GTlsPassword$MH,"glib_autoptr_cleanup_GTlsPassword");
    }
    public static void glib_autoptr_cleanup_GTlsPassword ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTlsPassword$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$982.glib_listautoptr_cleanup_GTlsPassword$MH,"glib_listautoptr_cleanup_GTlsPassword");
    }
    public static void glib_listautoptr_cleanup_GTlsPassword ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTlsPassword$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$982.glib_slistautoptr_cleanup_GTlsPassword$MH,"glib_slistautoptr_cleanup_GTlsPassword");
    }
    public static void glib_slistautoptr_cleanup_GTlsPassword ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTlsPassword$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$982.glib_queueautoptr_cleanup_GTlsPassword$MH,"glib_queueautoptr_cleanup_GTlsPassword");
    }
    public static void glib_queueautoptr_cleanup_GTlsPassword ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTlsPassword$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsServerConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsServerConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsServerConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsServerConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$983.glib_autoptr_clear_GTlsServerConnection$MH,"glib_autoptr_clear_GTlsServerConnection");
    }
    public static void glib_autoptr_clear_GTlsServerConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTlsServerConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$983.glib_autoptr_cleanup_GTlsServerConnection$MH,"glib_autoptr_cleanup_GTlsServerConnection");
    }
    public static void glib_autoptr_cleanup_GTlsServerConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTlsServerConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$983.glib_listautoptr_cleanup_GTlsServerConnection$MH,"glib_listautoptr_cleanup_GTlsServerConnection");
    }
    public static void glib_listautoptr_cleanup_GTlsServerConnection ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTlsServerConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$983.glib_slistautoptr_cleanup_GTlsServerConnection$MH,"glib_slistautoptr_cleanup_GTlsServerConnection");
    }
    public static void glib_slistautoptr_cleanup_GTlsServerConnection ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTlsServerConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$983.glib_queueautoptr_cleanup_GTlsServerConnection$MH,"glib_queueautoptr_cleanup_GTlsServerConnection");
    }
    public static void glib_queueautoptr_cleanup_GTlsServerConnection ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTlsServerConnection$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GVfs_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVfs_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVfs_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVfs_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$983.glib_autoptr_clear_GVfs$MH,"glib_autoptr_clear_GVfs");
    }
    public static void glib_autoptr_clear_GVfs ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GVfs$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$984.glib_autoptr_cleanup_GVfs$MH,"glib_autoptr_cleanup_GVfs");
    }
    public static void glib_autoptr_cleanup_GVfs ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GVfs$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$984.glib_listautoptr_cleanup_GVfs$MH,"glib_listautoptr_cleanup_GVfs");
    }
    public static void glib_listautoptr_cleanup_GVfs ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GVfs$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$984.glib_slistautoptr_cleanup_GVfs$MH,"glib_slistautoptr_cleanup_GVfs");
    }
    public static void glib_slistautoptr_cleanup_GVfs ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GVfs$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$984.glib_queueautoptr_cleanup_GVfs$MH,"glib_queueautoptr_cleanup_GVfs");
    }
    public static void glib_queueautoptr_cleanup_GVfs ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GVfs$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GVolume_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolume_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolume_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolume_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$984.glib_autoptr_clear_GVolume$MH,"glib_autoptr_clear_GVolume");
    }
    public static void glib_autoptr_clear_GVolume ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GVolume$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$984.glib_autoptr_cleanup_GVolume$MH,"glib_autoptr_cleanup_GVolume");
    }
    public static void glib_autoptr_cleanup_GVolume ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GVolume$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$985.glib_listautoptr_cleanup_GVolume$MH,"glib_listautoptr_cleanup_GVolume");
    }
    public static void glib_listautoptr_cleanup_GVolume ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GVolume$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$985.glib_slistautoptr_cleanup_GVolume$MH,"glib_slistautoptr_cleanup_GVolume");
    }
    public static void glib_slistautoptr_cleanup_GVolume ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GVolume$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$985.glib_queueautoptr_cleanup_GVolume$MH,"glib_queueautoptr_cleanup_GVolume");
    }
    public static void glib_queueautoptr_cleanup_GVolume ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GVolume$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GVolumeMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolumeMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolumeMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolumeMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$985.glib_autoptr_clear_GVolumeMonitor$MH,"glib_autoptr_clear_GVolumeMonitor");
    }
    public static void glib_autoptr_clear_GVolumeMonitor ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GVolumeMonitor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$985.glib_autoptr_cleanup_GVolumeMonitor$MH,"glib_autoptr_cleanup_GVolumeMonitor");
    }
    public static void glib_autoptr_cleanup_GVolumeMonitor ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GVolumeMonitor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$985.glib_listautoptr_cleanup_GVolumeMonitor$MH,"glib_listautoptr_cleanup_GVolumeMonitor");
    }
    public static void glib_listautoptr_cleanup_GVolumeMonitor ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GVolumeMonitor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$986.glib_slistautoptr_cleanup_GVolumeMonitor$MH,"glib_slistautoptr_cleanup_GVolumeMonitor");
    }
    public static void glib_slistautoptr_cleanup_GVolumeMonitor ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GVolumeMonitor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$986.glib_queueautoptr_cleanup_GVolumeMonitor$MH,"glib_queueautoptr_cleanup_GVolumeMonitor");
    }
    public static void glib_queueautoptr_cleanup_GVolumeMonitor ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GVolumeMonitor$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GZlibCompressor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibCompressor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibCompressor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibCompressor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$986.glib_autoptr_clear_GZlibCompressor$MH,"glib_autoptr_clear_GZlibCompressor");
    }
    public static void glib_autoptr_clear_GZlibCompressor ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GZlibCompressor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$986.glib_autoptr_cleanup_GZlibCompressor$MH,"glib_autoptr_cleanup_GZlibCompressor");
    }
    public static void glib_autoptr_cleanup_GZlibCompressor ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GZlibCompressor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$986.glib_listautoptr_cleanup_GZlibCompressor$MH,"glib_listautoptr_cleanup_GZlibCompressor");
    }
    public static void glib_listautoptr_cleanup_GZlibCompressor ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GZlibCompressor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$986.glib_slistautoptr_cleanup_GZlibCompressor$MH,"glib_slistautoptr_cleanup_GZlibCompressor");
    }
    public static void glib_slistautoptr_cleanup_GZlibCompressor ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GZlibCompressor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$987.glib_queueautoptr_cleanup_GZlibCompressor$MH,"glib_queueautoptr_cleanup_GZlibCompressor");
    }
    public static void glib_queueautoptr_cleanup_GZlibCompressor ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GZlibCompressor$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GZlibDecompressor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibDecompressor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibDecompressor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibDecompressor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$987.glib_autoptr_clear_GZlibDecompressor$MH,"glib_autoptr_clear_GZlibDecompressor");
    }
    public static void glib_autoptr_clear_GZlibDecompressor ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GZlibDecompressor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$987.glib_autoptr_cleanup_GZlibDecompressor$MH,"glib_autoptr_cleanup_GZlibDecompressor");
    }
    public static void glib_autoptr_cleanup_GZlibDecompressor ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GZlibDecompressor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$987.glib_listautoptr_cleanup_GZlibDecompressor$MH,"glib_listautoptr_cleanup_GZlibDecompressor");
    }
    public static void glib_listautoptr_cleanup_GZlibDecompressor ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GZlibDecompressor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$987.glib_slistautoptr_cleanup_GZlibDecompressor$MH,"glib_slistautoptr_cleanup_GZlibDecompressor");
    }
    public static void glib_slistautoptr_cleanup_GZlibDecompressor ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GZlibDecompressor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$987.glib_queueautoptr_cleanup_GZlibDecompressor$MH,"glib_queueautoptr_cleanup_GZlibDecompressor");
    }
    public static void glib_queueautoptr_cleanup_GZlibDecompressor ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GZlibDecompressor$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfShort int_least16_t = Constants$root.C_SHORT$LAYOUT;
    public static OfInt int_least32_t = Constants$root.C_INT$LAYOUT;
    public static OfLong int_least64_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong int_fast16_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong int_fast32_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong int_fast64_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong intmax_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfInt hb_bool_t = Constants$root.C_INT$LAYOUT;
}


