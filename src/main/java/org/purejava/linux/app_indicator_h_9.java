// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class app_indicator_h_9 extends app_indicator_h_8 {

    public static MethodHandle g_property_action_new$MH() {
        return RuntimeHelper.requireNonNull(constants$725.g_property_action_new$MH,"g_property_action_new");
    }
    /**
     * {@snippet :
     * GPropertyAction* g_property_action_new(const gchar* name, gpointer object, const gchar* property_name);
     * }
     */
    public static MemorySegment g_property_action_new(MemorySegment name, MemorySegment object, MemorySegment property_name) {
        var mh$ = g_property_action_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, object, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$725.g_proxy_get_type$MH,"g_proxy_get_type");
    }
    /**
     * {@snippet :
     * GType g_proxy_get_type();
     * }
     */
    public static long g_proxy_get_type() {
        var mh$ = g_proxy_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_get_default_for_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$726.g_proxy_get_default_for_protocol$MH,"g_proxy_get_default_for_protocol");
    }
    /**
     * {@snippet :
     * GProxy* g_proxy_get_default_for_protocol(const gchar* protocol);
     * }
     */
    public static MemorySegment g_proxy_get_default_for_protocol(MemorySegment protocol) {
        var mh$ = g_proxy_get_default_for_protocol$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(protocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$726.g_proxy_connect$MH,"g_proxy_connect");
    }
    /**
     * {@snippet :
     * GIOStream* g_proxy_connect(GProxy* proxy, GIOStream* connection, GProxyAddress* proxy_address, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_proxy_connect(MemorySegment proxy, MemorySegment connection, MemorySegment proxy_address, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_proxy_connect$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy, connection, proxy_address, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_connect_async$MH() {
        return RuntimeHelper.requireNonNull(constants$726.g_proxy_connect_async$MH,"g_proxy_connect_async");
    }
    /**
     * {@snippet :
     * void g_proxy_connect_async(GProxy* proxy, GIOStream* connection, GProxyAddress* proxy_address, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_proxy_connect_async(MemorySegment proxy, MemorySegment connection, MemorySegment proxy_address, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_proxy_connect_async$MH();
        try {
            mh$.invokeExact(proxy, connection, proxy_address, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_connect_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$726.g_proxy_connect_finish$MH,"g_proxy_connect_finish");
    }
    /**
     * {@snippet :
     * GIOStream* g_proxy_connect_finish(GProxy* proxy, GAsyncResult* result, GError** error);
     * }
     */
    public static MemorySegment g_proxy_connect_finish(MemorySegment proxy, MemorySegment result, MemorySegment error) {
        var mh$ = g_proxy_connect_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_supports_hostname$MH() {
        return RuntimeHelper.requireNonNull(constants$726.g_proxy_supports_hostname$MH,"g_proxy_supports_hostname");
    }
    /**
     * {@snippet :
     * gboolean g_proxy_supports_hostname(GProxy* proxy);
     * }
     */
    public static int g_proxy_supports_hostname(MemorySegment proxy) {
        var mh$ = g_proxy_supports_hostname$MH();
        try {
            return (int)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$726.g_proxy_address_get_type$MH,"g_proxy_address_get_type");
    }
    /**
     * {@snippet :
     * GType g_proxy_address_get_type();
     * }
     */
    public static long g_proxy_address_get_type() {
        var mh$ = g_proxy_address_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_new$MH() {
        return RuntimeHelper.requireNonNull(constants$727.g_proxy_address_new$MH,"g_proxy_address_new");
    }
    /**
     * {@snippet :
     * GSocketAddress* g_proxy_address_new(GInetAddress* inetaddr, guint16 port, const gchar* protocol, const gchar* dest_hostname, guint16 dest_port, const gchar* username, const gchar* password);
     * }
     */
    public static MemorySegment g_proxy_address_new(MemorySegment inetaddr, short port, MemorySegment protocol, MemorySegment dest_hostname, short dest_port, MemorySegment username, MemorySegment password) {
        var mh$ = g_proxy_address_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(inetaddr, port, protocol, dest_hostname, dest_port, username, password);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_get_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$727.g_proxy_address_get_protocol$MH,"g_proxy_address_get_protocol");
    }
    /**
     * {@snippet :
     * const gchar* g_proxy_address_get_protocol(GProxyAddress* proxy);
     * }
     */
    public static MemorySegment g_proxy_address_get_protocol(MemorySegment proxy) {
        var mh$ = g_proxy_address_get_protocol$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_get_destination_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$727.g_proxy_address_get_destination_protocol$MH,"g_proxy_address_get_destination_protocol");
    }
    /**
     * {@snippet :
     * const gchar* g_proxy_address_get_destination_protocol(GProxyAddress* proxy);
     * }
     */
    public static MemorySegment g_proxy_address_get_destination_protocol(MemorySegment proxy) {
        var mh$ = g_proxy_address_get_destination_protocol$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_get_destination_hostname$MH() {
        return RuntimeHelper.requireNonNull(constants$727.g_proxy_address_get_destination_hostname$MH,"g_proxy_address_get_destination_hostname");
    }
    /**
     * {@snippet :
     * const gchar* g_proxy_address_get_destination_hostname(GProxyAddress* proxy);
     * }
     */
    public static MemorySegment g_proxy_address_get_destination_hostname(MemorySegment proxy) {
        var mh$ = g_proxy_address_get_destination_hostname$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_get_destination_port$MH() {
        return RuntimeHelper.requireNonNull(constants$727.g_proxy_address_get_destination_port$MH,"g_proxy_address_get_destination_port");
    }
    /**
     * {@snippet :
     * guint16 g_proxy_address_get_destination_port(GProxyAddress* proxy);
     * }
     */
    public static short g_proxy_address_get_destination_port(MemorySegment proxy) {
        var mh$ = g_proxy_address_get_destination_port$MH();
        try {
            return (short)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_get_username$MH() {
        return RuntimeHelper.requireNonNull(constants$727.g_proxy_address_get_username$MH,"g_proxy_address_get_username");
    }
    /**
     * {@snippet :
     * const gchar* g_proxy_address_get_username(GProxyAddress* proxy);
     * }
     */
    public static MemorySegment g_proxy_address_get_username(MemorySegment proxy) {
        var mh$ = g_proxy_address_get_username$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_get_password$MH() {
        return RuntimeHelper.requireNonNull(constants$728.g_proxy_address_get_password$MH,"g_proxy_address_get_password");
    }
    /**
     * {@snippet :
     * const gchar* g_proxy_address_get_password(GProxyAddress* proxy);
     * }
     */
    public static MemorySegment g_proxy_address_get_password(MemorySegment proxy) {
        var mh$ = g_proxy_address_get_password$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_get_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$728.g_proxy_address_get_uri$MH,"g_proxy_address_get_uri");
    }
    /**
     * {@snippet :
     * const gchar* g_proxy_address_get_uri(GProxyAddress* proxy);
     * }
     */
    public static MemorySegment g_proxy_address_get_uri(MemorySegment proxy) {
        var mh$ = g_proxy_address_get_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_address_enumerator_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$728.g_socket_address_enumerator_get_type$MH,"g_socket_address_enumerator_get_type");
    }
    /**
     * {@snippet :
     * GType g_socket_address_enumerator_get_type();
     * }
     */
    public static long g_socket_address_enumerator_get_type() {
        var mh$ = g_socket_address_enumerator_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_address_enumerator_next$MH() {
        return RuntimeHelper.requireNonNull(constants$728.g_socket_address_enumerator_next$MH,"g_socket_address_enumerator_next");
    }
    /**
     * {@snippet :
     * GSocketAddress* g_socket_address_enumerator_next(GSocketAddressEnumerator* enumerator, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_socket_address_enumerator_next(MemorySegment enumerator, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_address_enumerator_next$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(enumerator, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_address_enumerator_next_async$MH() {
        return RuntimeHelper.requireNonNull(constants$728.g_socket_address_enumerator_next_async$MH,"g_socket_address_enumerator_next_async");
    }
    /**
     * {@snippet :
     * void g_socket_address_enumerator_next_async(GSocketAddressEnumerator* enumerator, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_socket_address_enumerator_next_async(MemorySegment enumerator, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_socket_address_enumerator_next_async$MH();
        try {
            mh$.invokeExact(enumerator, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_address_enumerator_next_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$728.g_socket_address_enumerator_next_finish$MH,"g_socket_address_enumerator_next_finish");
    }
    /**
     * {@snippet :
     * GSocketAddress* g_socket_address_enumerator_next_finish(GSocketAddressEnumerator* enumerator, GAsyncResult* result, GError** error);
     * }
     */
    public static MemorySegment g_socket_address_enumerator_next_finish(MemorySegment enumerator, MemorySegment result, MemorySegment error) {
        var mh$ = g_socket_address_enumerator_next_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(enumerator, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_enumerator_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$729.g_proxy_address_enumerator_get_type$MH,"g_proxy_address_enumerator_get_type");
    }
    /**
     * {@snippet :
     * GType g_proxy_address_enumerator_get_type();
     * }
     */
    public static long g_proxy_address_enumerator_get_type() {
        var mh$ = g_proxy_address_enumerator_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_resolver_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$729.g_proxy_resolver_get_type$MH,"g_proxy_resolver_get_type");
    }
    /**
     * {@snippet :
     * GType g_proxy_resolver_get_type();
     * }
     */
    public static long g_proxy_resolver_get_type() {
        var mh$ = g_proxy_resolver_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_resolver_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$729.g_proxy_resolver_get_default$MH,"g_proxy_resolver_get_default");
    }
    /**
     * {@snippet :
     * GProxyResolver* g_proxy_resolver_get_default();
     * }
     */
    public static MemorySegment g_proxy_resolver_get_default() {
        var mh$ = g_proxy_resolver_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_resolver_is_supported$MH() {
        return RuntimeHelper.requireNonNull(constants$729.g_proxy_resolver_is_supported$MH,"g_proxy_resolver_is_supported");
    }
    /**
     * {@snippet :
     * gboolean g_proxy_resolver_is_supported(GProxyResolver* resolver);
     * }
     */
    public static int g_proxy_resolver_is_supported(MemorySegment resolver) {
        var mh$ = g_proxy_resolver_is_supported$MH();
        try {
            return (int)mh$.invokeExact(resolver);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_resolver_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$729.g_proxy_resolver_lookup$MH,"g_proxy_resolver_lookup");
    }
    /**
     * {@snippet :
     * gchar** g_proxy_resolver_lookup(GProxyResolver* resolver, const gchar* uri, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_proxy_resolver_lookup(MemorySegment resolver, MemorySegment uri, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_proxy_resolver_lookup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, uri, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_resolver_lookup_async$MH() {
        return RuntimeHelper.requireNonNull(constants$729.g_proxy_resolver_lookup_async$MH,"g_proxy_resolver_lookup_async");
    }
    /**
     * {@snippet :
     * void g_proxy_resolver_lookup_async(GProxyResolver* resolver, const gchar* uri, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_proxy_resolver_lookup_async(MemorySegment resolver, MemorySegment uri, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_proxy_resolver_lookup_async$MH();
        try {
            mh$.invokeExact(resolver, uri, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_resolver_lookup_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$730.g_proxy_resolver_lookup_finish$MH,"g_proxy_resolver_lookup_finish");
    }
    /**
     * {@snippet :
     * gchar** g_proxy_resolver_lookup_finish(GProxyResolver* resolver, GAsyncResult* result, GError** error);
     * }
     */
    public static MemorySegment g_proxy_resolver_lookup_finish(MemorySegment resolver, MemorySegment result, MemorySegment error) {
        var mh$ = g_proxy_resolver_lookup_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_remote_action_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$730.g_remote_action_group_get_type$MH,"g_remote_action_group_get_type");
    }
    /**
     * {@snippet :
     * GType g_remote_action_group_get_type();
     * }
     */
    public static long g_remote_action_group_get_type() {
        var mh$ = g_remote_action_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_remote_action_group_activate_action_full$MH() {
        return RuntimeHelper.requireNonNull(constants$730.g_remote_action_group_activate_action_full$MH,"g_remote_action_group_activate_action_full");
    }
    /**
     * {@snippet :
     * void g_remote_action_group_activate_action_full(GRemoteActionGroup* remote, const gchar* action_name, GVariant* parameter, GVariant* platform_data);
     * }
     */
    public static void g_remote_action_group_activate_action_full(MemorySegment remote, MemorySegment action_name, MemorySegment parameter, MemorySegment platform_data) {
        var mh$ = g_remote_action_group_activate_action_full$MH();
        try {
            mh$.invokeExact(remote, action_name, parameter, platform_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_remote_action_group_change_action_state_full$MH() {
        return RuntimeHelper.requireNonNull(constants$730.g_remote_action_group_change_action_state_full$MH,"g_remote_action_group_change_action_state_full");
    }
    /**
     * {@snippet :
     * void g_remote_action_group_change_action_state_full(GRemoteActionGroup* remote, const gchar* action_name, GVariant* value, GVariant* platform_data);
     * }
     */
    public static void g_remote_action_group_change_action_state_full(MemorySegment remote, MemorySegment action_name, MemorySegment value, MemorySegment platform_data) {
        var mh$ = g_remote_action_group_change_action_state_full$MH();
        try {
            mh$.invokeExact(remote, action_name, value, platform_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .G_RESOLVER_NAME_LOOKUP_FLAGS_DEFAULT = 0;
     * }
     */
    public static int G_RESOLVER_NAME_LOOKUP_FLAGS_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_RESOLVER_NAME_LOOKUP_FLAGS_IPV4_ONLY = 1;
     * }
     */
    public static int G_RESOLVER_NAME_LOOKUP_FLAGS_IPV4_ONLY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_RESOLVER_NAME_LOOKUP_FLAGS_IPV6_ONLY = 2;
     * }
     */
    public static int G_RESOLVER_NAME_LOOKUP_FLAGS_IPV6_ONLY() {
        return (int)2L;
    }
    public static MethodHandle g_resolver_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$730.g_resolver_get_type$MH,"g_resolver_get_type");
    }
    /**
     * {@snippet :
     * GType g_resolver_get_type();
     * }
     */
    public static long g_resolver_get_type() {
        var mh$ = g_resolver_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$730.g_resolver_get_default$MH,"g_resolver_get_default");
    }
    /**
     * {@snippet :
     * GResolver* g_resolver_get_default();
     * }
     */
    public static MemorySegment g_resolver_get_default() {
        var mh$ = g_resolver_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_set_default$MH() {
        return RuntimeHelper.requireNonNull(constants$731.g_resolver_set_default$MH,"g_resolver_set_default");
    }
    /**
     * {@snippet :
     * void g_resolver_set_default(GResolver* resolver);
     * }
     */
    public static void g_resolver_set_default(MemorySegment resolver) {
        var mh$ = g_resolver_set_default$MH();
        try {
            mh$.invokeExact(resolver);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$731.g_resolver_lookup_by_name$MH,"g_resolver_lookup_by_name");
    }
    /**
     * {@snippet :
     * GList* g_resolver_lookup_by_name(GResolver* resolver, const gchar* hostname, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_by_name(MemorySegment resolver, MemorySegment hostname, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_resolver_lookup_by_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, hostname, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_by_name_async$MH() {
        return RuntimeHelper.requireNonNull(constants$731.g_resolver_lookup_by_name_async$MH,"g_resolver_lookup_by_name_async");
    }
    /**
     * {@snippet :
     * void g_resolver_lookup_by_name_async(GResolver* resolver, const gchar* hostname, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_resolver_lookup_by_name_async(MemorySegment resolver, MemorySegment hostname, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_resolver_lookup_by_name_async$MH();
        try {
            mh$.invokeExact(resolver, hostname, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_by_name_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$731.g_resolver_lookup_by_name_finish$MH,"g_resolver_lookup_by_name_finish");
    }
    /**
     * {@snippet :
     * GList* g_resolver_lookup_by_name_finish(GResolver* resolver, GAsyncResult* result, GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_by_name_finish(MemorySegment resolver, MemorySegment result, MemorySegment error) {
        var mh$ = g_resolver_lookup_by_name_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_by_name_with_flags_async$MH() {
        return RuntimeHelper.requireNonNull(constants$731.g_resolver_lookup_by_name_with_flags_async$MH,"g_resolver_lookup_by_name_with_flags_async");
    }
    /**
     * {@snippet :
     * void g_resolver_lookup_by_name_with_flags_async(GResolver* resolver, const gchar* hostname, GResolverNameLookupFlags flags, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_resolver_lookup_by_name_with_flags_async(MemorySegment resolver, MemorySegment hostname, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_resolver_lookup_by_name_with_flags_async$MH();
        try {
            mh$.invokeExact(resolver, hostname, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_by_name_with_flags_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$731.g_resolver_lookup_by_name_with_flags_finish$MH,"g_resolver_lookup_by_name_with_flags_finish");
    }
    /**
     * {@snippet :
     * GList* g_resolver_lookup_by_name_with_flags_finish(GResolver* resolver, GAsyncResult* result, GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_by_name_with_flags_finish(MemorySegment resolver, MemorySegment result, MemorySegment error) {
        var mh$ = g_resolver_lookup_by_name_with_flags_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_by_name_with_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$732.g_resolver_lookup_by_name_with_flags$MH,"g_resolver_lookup_by_name_with_flags");
    }
    /**
     * {@snippet :
     * GList* g_resolver_lookup_by_name_with_flags(GResolver* resolver, const gchar* hostname, GResolverNameLookupFlags flags, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_by_name_with_flags(MemorySegment resolver, MemorySegment hostname, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_resolver_lookup_by_name_with_flags$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, hostname, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_free_addresses$MH() {
        return RuntimeHelper.requireNonNull(constants$732.g_resolver_free_addresses$MH,"g_resolver_free_addresses");
    }
    /**
     * {@snippet :
     * void g_resolver_free_addresses(GList* addresses);
     * }
     */
    public static void g_resolver_free_addresses(MemorySegment addresses) {
        var mh$ = g_resolver_free_addresses$MH();
        try {
            mh$.invokeExact(addresses);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_by_address$MH() {
        return RuntimeHelper.requireNonNull(constants$732.g_resolver_lookup_by_address$MH,"g_resolver_lookup_by_address");
    }
    /**
     * {@snippet :
     * gchar* g_resolver_lookup_by_address(GResolver* resolver, GInetAddress* address, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_by_address(MemorySegment resolver, MemorySegment address, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_resolver_lookup_by_address$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, address, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_by_address_async$MH() {
        return RuntimeHelper.requireNonNull(constants$732.g_resolver_lookup_by_address_async$MH,"g_resolver_lookup_by_address_async");
    }
    /**
     * {@snippet :
     * void g_resolver_lookup_by_address_async(GResolver* resolver, GInetAddress* address, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_resolver_lookup_by_address_async(MemorySegment resolver, MemorySegment address, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_resolver_lookup_by_address_async$MH();
        try {
            mh$.invokeExact(resolver, address, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_by_address_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$732.g_resolver_lookup_by_address_finish$MH,"g_resolver_lookup_by_address_finish");
    }
    /**
     * {@snippet :
     * gchar* g_resolver_lookup_by_address_finish(GResolver* resolver, GAsyncResult* result, GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_by_address_finish(MemorySegment resolver, MemorySegment result, MemorySegment error) {
        var mh$ = g_resolver_lookup_by_address_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_service$MH() {
        return RuntimeHelper.requireNonNull(constants$732.g_resolver_lookup_service$MH,"g_resolver_lookup_service");
    }
    /**
     * {@snippet :
     * GList* g_resolver_lookup_service(GResolver* resolver, const gchar* service, const gchar* protocol, const gchar* domain, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_service(MemorySegment resolver, MemorySegment service, MemorySegment protocol, MemorySegment domain, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_resolver_lookup_service$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, service, protocol, domain, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_service_async$MH() {
        return RuntimeHelper.requireNonNull(constants$733.g_resolver_lookup_service_async$MH,"g_resolver_lookup_service_async");
    }
    /**
     * {@snippet :
     * void g_resolver_lookup_service_async(GResolver* resolver, const gchar* service, const gchar* protocol, const gchar* domain, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_resolver_lookup_service_async(MemorySegment resolver, MemorySegment service, MemorySegment protocol, MemorySegment domain, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_resolver_lookup_service_async$MH();
        try {
            mh$.invokeExact(resolver, service, protocol, domain, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_service_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$733.g_resolver_lookup_service_finish$MH,"g_resolver_lookup_service_finish");
    }
    /**
     * {@snippet :
     * GList* g_resolver_lookup_service_finish(GResolver* resolver, GAsyncResult* result, GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_service_finish(MemorySegment resolver, MemorySegment result, MemorySegment error) {
        var mh$ = g_resolver_lookup_service_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_records$MH() {
        return RuntimeHelper.requireNonNull(constants$733.g_resolver_lookup_records$MH,"g_resolver_lookup_records");
    }
    /**
     * {@snippet :
     * GList* g_resolver_lookup_records(GResolver* resolver, const gchar* rrname, GResolverRecordType record_type, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_records(MemorySegment resolver, MemorySegment rrname, int record_type, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_resolver_lookup_records$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, rrname, record_type, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_records_async$MH() {
        return RuntimeHelper.requireNonNull(constants$733.g_resolver_lookup_records_async$MH,"g_resolver_lookup_records_async");
    }
    /**
     * {@snippet :
     * void g_resolver_lookup_records_async(GResolver* resolver, const gchar* rrname, GResolverRecordType record_type, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_resolver_lookup_records_async(MemorySegment resolver, MemorySegment rrname, int record_type, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_resolver_lookup_records_async$MH();
        try {
            mh$.invokeExact(resolver, rrname, record_type, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_records_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$733.g_resolver_lookup_records_finish$MH,"g_resolver_lookup_records_finish");
    }
    /**
     * {@snippet :
     * GList* g_resolver_lookup_records_finish(GResolver* resolver, GAsyncResult* result, GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_records_finish(MemorySegment resolver, MemorySegment result, MemorySegment error) {
        var mh$ = g_resolver_lookup_records_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_free_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$733.g_resolver_free_targets$MH,"g_resolver_free_targets");
    }
    /**
     * {@snippet :
     * void g_resolver_free_targets(GList* targets);
     * }
     */
    public static void g_resolver_free_targets(MemorySegment targets) {
        var mh$ = g_resolver_free_targets$MH();
        try {
            mh$.invokeExact(targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$734.g_resolver_error_quark$MH,"g_resolver_error_quark");
    }
    /**
     * {@snippet :
     * GQuark g_resolver_error_quark();
     * }
     */
    public static int g_resolver_error_quark() {
        var mh$ = g_resolver_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$734.g_resource_error_quark$MH,"g_resource_error_quark");
    }
    /**
     * {@snippet :
     * GQuark g_resource_error_quark();
     * }
     */
    public static int g_resource_error_quark() {
        var mh$ = g_resource_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$734.g_resource_get_type$MH,"g_resource_get_type");
    }
    /**
     * {@snippet :
     * GType g_resource_get_type();
     * }
     */
    public static long g_resource_get_type() {
        var mh$ = g_resource_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_new_from_data$MH() {
        return RuntimeHelper.requireNonNull(constants$734.g_resource_new_from_data$MH,"g_resource_new_from_data");
    }
    /**
     * {@snippet :
     * GResource* g_resource_new_from_data(GBytes* data, GError** error);
     * }
     */
    public static MemorySegment g_resource_new_from_data(MemorySegment data, MemorySegment error) {
        var mh$ = g_resource_new_from_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$734.g_resource_ref$MH,"g_resource_ref");
    }
    /**
     * {@snippet :
     * GResource* g_resource_ref(GResource* resource);
     * }
     */
    public static MemorySegment g_resource_ref(MemorySegment resource) {
        var mh$ = g_resource_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resource);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$734.g_resource_unref$MH,"g_resource_unref");
    }
    /**
     * {@snippet :
     * void g_resource_unref(GResource* resource);
     * }
     */
    public static void g_resource_unref(MemorySegment resource) {
        var mh$ = g_resource_unref$MH();
        try {
            mh$.invokeExact(resource);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_load$MH() {
        return RuntimeHelper.requireNonNull(constants$735.g_resource_load$MH,"g_resource_load");
    }
    /**
     * {@snippet :
     * GResource* g_resource_load(const gchar* filename, GError** error);
     * }
     */
    public static MemorySegment g_resource_load(MemorySegment filename, MemorySegment error) {
        var mh$ = g_resource_load$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filename, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_open_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$735.g_resource_open_stream$MH,"g_resource_open_stream");
    }
    /**
     * {@snippet :
     * GInputStream* g_resource_open_stream(GResource* resource, char* path, GResourceLookupFlags lookup_flags, GError** error);
     * }
     */
    public static MemorySegment g_resource_open_stream(MemorySegment resource, MemorySegment path, int lookup_flags, MemorySegment error) {
        var mh$ = g_resource_open_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resource, path, lookup_flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_lookup_data$MH() {
        return RuntimeHelper.requireNonNull(constants$735.g_resource_lookup_data$MH,"g_resource_lookup_data");
    }
    /**
     * {@snippet :
     * GBytes* g_resource_lookup_data(GResource* resource, char* path, GResourceLookupFlags lookup_flags, GError** error);
     * }
     */
    public static MemorySegment g_resource_lookup_data(MemorySegment resource, MemorySegment path, int lookup_flags, MemorySegment error) {
        var mh$ = g_resource_lookup_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resource, path, lookup_flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_enumerate_children$MH() {
        return RuntimeHelper.requireNonNull(constants$735.g_resource_enumerate_children$MH,"g_resource_enumerate_children");
    }
    /**
     * {@snippet :
     * char** g_resource_enumerate_children(GResource* resource, char* path, GResourceLookupFlags lookup_flags, GError** error);
     * }
     */
    public static MemorySegment g_resource_enumerate_children(MemorySegment resource, MemorySegment path, int lookup_flags, MemorySegment error) {
        var mh$ = g_resource_enumerate_children$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resource, path, lookup_flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_get_info$MH() {
        return RuntimeHelper.requireNonNull(constants$735.g_resource_get_info$MH,"g_resource_get_info");
    }
    /**
     * {@snippet :
     * gboolean g_resource_get_info(GResource* resource, char* path, GResourceLookupFlags lookup_flags, gsize* size, guint32* flags, GError** error);
     * }
     */
    public static int g_resource_get_info(MemorySegment resource, MemorySegment path, int lookup_flags, MemorySegment size, MemorySegment flags, MemorySegment error) {
        var mh$ = g_resource_get_info$MH();
        try {
            return (int)mh$.invokeExact(resource, path, lookup_flags, size, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resources_register$MH() {
        return RuntimeHelper.requireNonNull(constants$735.g_resources_register$MH,"g_resources_register");
    }
    /**
     * {@snippet :
     * void g_resources_register(GResource* resource);
     * }
     */
    public static void g_resources_register(MemorySegment resource) {
        var mh$ = g_resources_register$MH();
        try {
            mh$.invokeExact(resource);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resources_unregister$MH() {
        return RuntimeHelper.requireNonNull(constants$736.g_resources_unregister$MH,"g_resources_unregister");
    }
    /**
     * {@snippet :
     * void g_resources_unregister(GResource* resource);
     * }
     */
    public static void g_resources_unregister(MemorySegment resource) {
        var mh$ = g_resources_unregister$MH();
        try {
            mh$.invokeExact(resource);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resources_open_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$736.g_resources_open_stream$MH,"g_resources_open_stream");
    }
    /**
     * {@snippet :
     * GInputStream* g_resources_open_stream(char* path, GResourceLookupFlags lookup_flags, GError** error);
     * }
     */
    public static MemorySegment g_resources_open_stream(MemorySegment path, int lookup_flags, MemorySegment error) {
        var mh$ = g_resources_open_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(path, lookup_flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resources_lookup_data$MH() {
        return RuntimeHelper.requireNonNull(constants$736.g_resources_lookup_data$MH,"g_resources_lookup_data");
    }
    /**
     * {@snippet :
     * GBytes* g_resources_lookup_data(char* path, GResourceLookupFlags lookup_flags, GError** error);
     * }
     */
    public static MemorySegment g_resources_lookup_data(MemorySegment path, int lookup_flags, MemorySegment error) {
        var mh$ = g_resources_lookup_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(path, lookup_flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resources_enumerate_children$MH() {
        return RuntimeHelper.requireNonNull(constants$736.g_resources_enumerate_children$MH,"g_resources_enumerate_children");
    }
    /**
     * {@snippet :
     * char** g_resources_enumerate_children(char* path, GResourceLookupFlags lookup_flags, GError** error);
     * }
     */
    public static MemorySegment g_resources_enumerate_children(MemorySegment path, int lookup_flags, MemorySegment error) {
        var mh$ = g_resources_enumerate_children$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(path, lookup_flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resources_get_info$MH() {
        return RuntimeHelper.requireNonNull(constants$736.g_resources_get_info$MH,"g_resources_get_info");
    }
    /**
     * {@snippet :
     * gboolean g_resources_get_info(char* path, GResourceLookupFlags lookup_flags, gsize* size, guint32* flags, GError** error);
     * }
     */
    public static int g_resources_get_info(MemorySegment path, int lookup_flags, MemorySegment size, MemorySegment flags, MemorySegment error) {
        var mh$ = g_resources_get_info$MH();
        try {
            return (int)mh$.invokeExact(path, lookup_flags, size, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_resource_init$MH() {
        return RuntimeHelper.requireNonNull(constants$736.g_static_resource_init$MH,"g_static_resource_init");
    }
    /**
     * {@snippet :
     * void g_static_resource_init(GStaticResource* static_resource);
     * }
     */
    public static void g_static_resource_init(MemorySegment static_resource) {
        var mh$ = g_static_resource_init$MH();
        try {
            mh$.invokeExact(static_resource);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_resource_fini$MH() {
        return RuntimeHelper.requireNonNull(constants$737.g_static_resource_fini$MH,"g_static_resource_fini");
    }
    /**
     * {@snippet :
     * void g_static_resource_fini(GStaticResource* static_resource);
     * }
     */
    public static void g_static_resource_fini(MemorySegment static_resource) {
        var mh$ = g_static_resource_fini$MH();
        try {
            mh$.invokeExact(static_resource);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_resource_get_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$737.g_static_resource_get_resource$MH,"g_static_resource_get_resource");
    }
    /**
     * {@snippet :
     * GResource* g_static_resource_get_resource(GStaticResource* static_resource);
     * }
     */
    public static MemorySegment g_static_resource_get_resource(MemorySegment static_resource) {
        var mh$ = g_static_resource_get_resource$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(static_resource);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_seekable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$737.g_seekable_get_type$MH,"g_seekable_get_type");
    }
    /**
     * {@snippet :
     * GType g_seekable_get_type();
     * }
     */
    public static long g_seekable_get_type() {
        var mh$ = g_seekable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_seekable_tell$MH() {
        return RuntimeHelper.requireNonNull(constants$737.g_seekable_tell$MH,"g_seekable_tell");
    }
    /**
     * {@snippet :
     * goffset g_seekable_tell(GSeekable* seekable);
     * }
     */
    public static long g_seekable_tell(MemorySegment seekable) {
        var mh$ = g_seekable_tell$MH();
        try {
            return (long)mh$.invokeExact(seekable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_seekable_can_seek$MH() {
        return RuntimeHelper.requireNonNull(constants$737.g_seekable_can_seek$MH,"g_seekable_can_seek");
    }
    /**
     * {@snippet :
     * gboolean g_seekable_can_seek(GSeekable* seekable);
     * }
     */
    public static int g_seekable_can_seek(MemorySegment seekable) {
        var mh$ = g_seekable_can_seek$MH();
        try {
            return (int)mh$.invokeExact(seekable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_seekable_seek$MH() {
        return RuntimeHelper.requireNonNull(constants$737.g_seekable_seek$MH,"g_seekable_seek");
    }
    /**
     * {@snippet :
     * gboolean g_seekable_seek(GSeekable* seekable, goffset offset, GSeekType type, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_seekable_seek(MemorySegment seekable, long offset, int type, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_seekable_seek$MH();
        try {
            return (int)mh$.invokeExact(seekable, offset, type, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_seekable_can_truncate$MH() {
        return RuntimeHelper.requireNonNull(constants$738.g_seekable_can_truncate$MH,"g_seekable_can_truncate");
    }
    /**
     * {@snippet :
     * gboolean g_seekable_can_truncate(GSeekable* seekable);
     * }
     */
    public static int g_seekable_can_truncate(MemorySegment seekable) {
        var mh$ = g_seekable_can_truncate$MH();
        try {
            return (int)mh$.invokeExact(seekable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_seekable_truncate$MH() {
        return RuntimeHelper.requireNonNull(constants$738.g_seekable_truncate$MH,"g_seekable_truncate");
    }
    /**
     * {@snippet :
     * gboolean g_seekable_truncate(GSeekable* seekable, goffset offset, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_seekable_truncate(MemorySegment seekable, long offset, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_seekable_truncate$MH();
        try {
            return (int)mh$.invokeExact(seekable, offset, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_source_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$738.g_settings_schema_source_get_type$MH,"g_settings_schema_source_get_type");
    }
    /**
     * {@snippet :
     * GType g_settings_schema_source_get_type();
     * }
     */
    public static long g_settings_schema_source_get_type() {
        var mh$ = g_settings_schema_source_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_source_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$738.g_settings_schema_source_get_default$MH,"g_settings_schema_source_get_default");
    }
    /**
     * {@snippet :
     * GSettingsSchemaSource* g_settings_schema_source_get_default();
     * }
     */
    public static MemorySegment g_settings_schema_source_get_default() {
        var mh$ = g_settings_schema_source_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_source_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$738.g_settings_schema_source_ref$MH,"g_settings_schema_source_ref");
    }
    /**
     * {@snippet :
     * GSettingsSchemaSource* g_settings_schema_source_ref(GSettingsSchemaSource* source);
     * }
     */
    public static MemorySegment g_settings_schema_source_ref(MemorySegment source) {
        var mh$ = g_settings_schema_source_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_source_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$738.g_settings_schema_source_unref$MH,"g_settings_schema_source_unref");
    }
    /**
     * {@snippet :
     * void g_settings_schema_source_unref(GSettingsSchemaSource* source);
     * }
     */
    public static void g_settings_schema_source_unref(MemorySegment source) {
        var mh$ = g_settings_schema_source_unref$MH();
        try {
            mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_source_new_from_directory$MH() {
        return RuntimeHelper.requireNonNull(constants$739.g_settings_schema_source_new_from_directory$MH,"g_settings_schema_source_new_from_directory");
    }
    /**
     * {@snippet :
     * GSettingsSchemaSource* g_settings_schema_source_new_from_directory(const gchar* directory, GSettingsSchemaSource* parent, gboolean trusted, GError** error);
     * }
     */
    public static MemorySegment g_settings_schema_source_new_from_directory(MemorySegment directory, MemorySegment parent, int trusted, MemorySegment error) {
        var mh$ = g_settings_schema_source_new_from_directory$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(directory, parent, trusted, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_source_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$739.g_settings_schema_source_lookup$MH,"g_settings_schema_source_lookup");
    }
    /**
     * {@snippet :
     * GSettingsSchema* g_settings_schema_source_lookup(GSettingsSchemaSource* source, const gchar* schema_id, gboolean recursive);
     * }
     */
    public static MemorySegment g_settings_schema_source_lookup(MemorySegment source, MemorySegment schema_id, int recursive) {
        var mh$ = g_settings_schema_source_lookup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source, schema_id, recursive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_source_list_schemas$MH() {
        return RuntimeHelper.requireNonNull(constants$739.g_settings_schema_source_list_schemas$MH,"g_settings_schema_source_list_schemas");
    }
    /**
     * {@snippet :
     * void g_settings_schema_source_list_schemas(GSettingsSchemaSource* source, gboolean recursive, gchar*** non_relocatable, gchar*** relocatable);
     * }
     */
    public static void g_settings_schema_source_list_schemas(MemorySegment source, int recursive, MemorySegment non_relocatable, MemorySegment relocatable) {
        var mh$ = g_settings_schema_source_list_schemas$MH();
        try {
            mh$.invokeExact(source, recursive, non_relocatable, relocatable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$739.g_settings_schema_get_type$MH,"g_settings_schema_get_type");
    }
    /**
     * {@snippet :
     * GType g_settings_schema_get_type();
     * }
     */
    public static long g_settings_schema_get_type() {
        var mh$ = g_settings_schema_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$739.g_settings_schema_ref$MH,"g_settings_schema_ref");
    }
    /**
     * {@snippet :
     * GSettingsSchema* g_settings_schema_ref(GSettingsSchema* schema);
     * }
     */
    public static MemorySegment g_settings_schema_ref(MemorySegment schema) {
        var mh$ = g_settings_schema_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$739.g_settings_schema_unref$MH,"g_settings_schema_unref");
    }
    /**
     * {@snippet :
     * void g_settings_schema_unref(GSettingsSchema* schema);
     * }
     */
    public static void g_settings_schema_unref(MemorySegment schema) {
        var mh$ = g_settings_schema_unref$MH();
        try {
            mh$.invokeExact(schema);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_get_id$MH() {
        return RuntimeHelper.requireNonNull(constants$740.g_settings_schema_get_id$MH,"g_settings_schema_get_id");
    }
    /**
     * {@snippet :
     * const gchar* g_settings_schema_get_id(GSettingsSchema* schema);
     * }
     */
    public static MemorySegment g_settings_schema_get_id(MemorySegment schema) {
        var mh$ = g_settings_schema_get_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_get_path$MH() {
        return RuntimeHelper.requireNonNull(constants$740.g_settings_schema_get_path$MH,"g_settings_schema_get_path");
    }
    /**
     * {@snippet :
     * const gchar* g_settings_schema_get_path(GSettingsSchema* schema);
     * }
     */
    public static MemorySegment g_settings_schema_get_path(MemorySegment schema) {
        var mh$ = g_settings_schema_get_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_get_key$MH() {
        return RuntimeHelper.requireNonNull(constants$740.g_settings_schema_get_key$MH,"g_settings_schema_get_key");
    }
    /**
     * {@snippet :
     * GSettingsSchemaKey* g_settings_schema_get_key(GSettingsSchema* schema, const gchar* name);
     * }
     */
    public static MemorySegment g_settings_schema_get_key(MemorySegment schema, MemorySegment name) {
        var mh$ = g_settings_schema_get_key$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_has_key$MH() {
        return RuntimeHelper.requireNonNull(constants$740.g_settings_schema_has_key$MH,"g_settings_schema_has_key");
    }
    /**
     * {@snippet :
     * gboolean g_settings_schema_has_key(GSettingsSchema* schema, const gchar* name);
     * }
     */
    public static int g_settings_schema_has_key(MemorySegment schema, MemorySegment name) {
        var mh$ = g_settings_schema_has_key$MH();
        try {
            return (int)mh$.invokeExact(schema, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_list_keys$MH() {
        return RuntimeHelper.requireNonNull(constants$740.g_settings_schema_list_keys$MH,"g_settings_schema_list_keys");
    }
    /**
     * {@snippet :
     * gchar** g_settings_schema_list_keys(GSettingsSchema* schema);
     * }
     */
    public static MemorySegment g_settings_schema_list_keys(MemorySegment schema) {
        var mh$ = g_settings_schema_list_keys$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_list_children$MH() {
        return RuntimeHelper.requireNonNull(constants$740.g_settings_schema_list_children$MH,"g_settings_schema_list_children");
    }
    /**
     * {@snippet :
     * gchar** g_settings_schema_list_children(GSettingsSchema* schema);
     * }
     */
    public static MemorySegment g_settings_schema_list_children(MemorySegment schema) {
        var mh$ = g_settings_schema_list_children$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$741.g_settings_schema_key_get_type$MH,"g_settings_schema_key_get_type");
    }
    /**
     * {@snippet :
     * GType g_settings_schema_key_get_type();
     * }
     */
    public static long g_settings_schema_key_get_type() {
        var mh$ = g_settings_schema_key_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$741.g_settings_schema_key_ref$MH,"g_settings_schema_key_ref");
    }
    /**
     * {@snippet :
     * GSettingsSchemaKey* g_settings_schema_key_ref(GSettingsSchemaKey* key);
     * }
     */
    public static MemorySegment g_settings_schema_key_ref(MemorySegment key) {
        var mh$ = g_settings_schema_key_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$741.g_settings_schema_key_unref$MH,"g_settings_schema_key_unref");
    }
    /**
     * {@snippet :
     * void g_settings_schema_key_unref(GSettingsSchemaKey* key);
     * }
     */
    public static void g_settings_schema_key_unref(MemorySegment key) {
        var mh$ = g_settings_schema_key_unref$MH();
        try {
            mh$.invokeExact(key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_get_value_type$MH() {
        return RuntimeHelper.requireNonNull(constants$741.g_settings_schema_key_get_value_type$MH,"g_settings_schema_key_get_value_type");
    }
    /**
     * {@snippet :
     * const GVariantType* g_settings_schema_key_get_value_type(GSettingsSchemaKey* key);
     * }
     */
    public static MemorySegment g_settings_schema_key_get_value_type(MemorySegment key) {
        var mh$ = g_settings_schema_key_get_value_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_get_default_value$MH() {
        return RuntimeHelper.requireNonNull(constants$741.g_settings_schema_key_get_default_value$MH,"g_settings_schema_key_get_default_value");
    }
    /**
     * {@snippet :
     * GVariant* g_settings_schema_key_get_default_value(GSettingsSchemaKey* key);
     * }
     */
    public static MemorySegment g_settings_schema_key_get_default_value(MemorySegment key) {
        var mh$ = g_settings_schema_key_get_default_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_get_range$MH() {
        return RuntimeHelper.requireNonNull(constants$741.g_settings_schema_key_get_range$MH,"g_settings_schema_key_get_range");
    }
    /**
     * {@snippet :
     * GVariant* g_settings_schema_key_get_range(GSettingsSchemaKey* key);
     * }
     */
    public static MemorySegment g_settings_schema_key_get_range(MemorySegment key) {
        var mh$ = g_settings_schema_key_get_range$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_range_check$MH() {
        return RuntimeHelper.requireNonNull(constants$742.g_settings_schema_key_range_check$MH,"g_settings_schema_key_range_check");
    }
    /**
     * {@snippet :
     * gboolean g_settings_schema_key_range_check(GSettingsSchemaKey* key, GVariant* value);
     * }
     */
    public static int g_settings_schema_key_range_check(MemorySegment key, MemorySegment value) {
        var mh$ = g_settings_schema_key_range_check$MH();
        try {
            return (int)mh$.invokeExact(key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$742.g_settings_schema_key_get_name$MH,"g_settings_schema_key_get_name");
    }
    /**
     * {@snippet :
     * const gchar* g_settings_schema_key_get_name(GSettingsSchemaKey* key);
     * }
     */
    public static MemorySegment g_settings_schema_key_get_name(MemorySegment key) {
        var mh$ = g_settings_schema_key_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_get_summary$MH() {
        return RuntimeHelper.requireNonNull(constants$742.g_settings_schema_key_get_summary$MH,"g_settings_schema_key_get_summary");
    }
    /**
     * {@snippet :
     * const gchar* g_settings_schema_key_get_summary(GSettingsSchemaKey* key);
     * }
     */
    public static MemorySegment g_settings_schema_key_get_summary(MemorySegment key) {
        var mh$ = g_settings_schema_key_get_summary$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$742.g_settings_schema_key_get_description$MH,"g_settings_schema_key_get_description");
    }
    /**
     * {@snippet :
     * const gchar* g_settings_schema_key_get_description(GSettingsSchemaKey* key);
     * }
     */
    public static MemorySegment g_settings_schema_key_get_description(MemorySegment key) {
        var mh$ = g_settings_schema_key_get_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$742.g_settings_get_type$MH,"g_settings_get_type");
    }
    /**
     * {@snippet :
     * GType g_settings_get_type();
     * }
     */
    public static long g_settings_get_type() {
        var mh$ = g_settings_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_list_schemas$MH() {
        return RuntimeHelper.requireNonNull(constants$742.g_settings_list_schemas$MH,"g_settings_list_schemas");
    }
    /**
     * {@snippet :
     * const gchar** g_settings_list_schemas();
     * }
     */
    public static MemorySegment g_settings_list_schemas() {
        var mh$ = g_settings_list_schemas$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_list_relocatable_schemas$MH() {
        return RuntimeHelper.requireNonNull(constants$743.g_settings_list_relocatable_schemas$MH,"g_settings_list_relocatable_schemas");
    }
    /**
     * {@snippet :
     * const gchar** g_settings_list_relocatable_schemas();
     * }
     */
    public static MemorySegment g_settings_list_relocatable_schemas() {
        var mh$ = g_settings_list_relocatable_schemas$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_new$MH() {
        return RuntimeHelper.requireNonNull(constants$743.g_settings_new$MH,"g_settings_new");
    }
    /**
     * {@snippet :
     * GSettings* g_settings_new(const gchar* schema_id);
     * }
     */
    public static MemorySegment g_settings_new(MemorySegment schema_id) {
        var mh$ = g_settings_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_new_with_path$MH() {
        return RuntimeHelper.requireNonNull(constants$743.g_settings_new_with_path$MH,"g_settings_new_with_path");
    }
    /**
     * {@snippet :
     * GSettings* g_settings_new_with_path(const gchar* schema_id, const gchar* path);
     * }
     */
    public static MemorySegment g_settings_new_with_path(MemorySegment schema_id, MemorySegment path) {
        var mh$ = g_settings_new_with_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema_id, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_new_with_backend$MH() {
        return RuntimeHelper.requireNonNull(constants$743.g_settings_new_with_backend$MH,"g_settings_new_with_backend");
    }
    /**
     * {@snippet :
     * GSettings* g_settings_new_with_backend(const gchar* schema_id, GSettingsBackend* backend);
     * }
     */
    public static MemorySegment g_settings_new_with_backend(MemorySegment schema_id, MemorySegment backend) {
        var mh$ = g_settings_new_with_backend$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema_id, backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_new_with_backend_and_path$MH() {
        return RuntimeHelper.requireNonNull(constants$743.g_settings_new_with_backend_and_path$MH,"g_settings_new_with_backend_and_path");
    }
    /**
     * {@snippet :
     * GSettings* g_settings_new_with_backend_and_path(const gchar* schema_id, GSettingsBackend* backend, const gchar* path);
     * }
     */
    public static MemorySegment g_settings_new_with_backend_and_path(MemorySegment schema_id, MemorySegment backend, MemorySegment path) {
        var mh$ = g_settings_new_with_backend_and_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema_id, backend, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_new_full$MH() {
        return RuntimeHelper.requireNonNull(constants$743.g_settings_new_full$MH,"g_settings_new_full");
    }
    /**
     * {@snippet :
     * GSettings* g_settings_new_full(GSettingsSchema* schema, GSettingsBackend* backend, const gchar* path);
     * }
     */
    public static MemorySegment g_settings_new_full(MemorySegment schema, MemorySegment backend, MemorySegment path) {
        var mh$ = g_settings_new_full$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema, backend, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_list_children$MH() {
        return RuntimeHelper.requireNonNull(constants$744.g_settings_list_children$MH,"g_settings_list_children");
    }
    /**
     * {@snippet :
     * gchar** g_settings_list_children(GSettings* settings);
     * }
     */
    public static MemorySegment g_settings_list_children(MemorySegment settings) {
        var mh$ = g_settings_list_children$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_list_keys$MH() {
        return RuntimeHelper.requireNonNull(constants$744.g_settings_list_keys$MH,"g_settings_list_keys");
    }
    /**
     * {@snippet :
     * gchar** g_settings_list_keys(GSettings* settings);
     * }
     */
    public static MemorySegment g_settings_list_keys(MemorySegment settings) {
        var mh$ = g_settings_list_keys$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_range$MH() {
        return RuntimeHelper.requireNonNull(constants$744.g_settings_get_range$MH,"g_settings_get_range");
    }
    /**
     * {@snippet :
     * GVariant* g_settings_get_range(GSettings* settings, const gchar* key);
     * }
     */
    public static MemorySegment g_settings_get_range(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_range$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_range_check$MH() {
        return RuntimeHelper.requireNonNull(constants$744.g_settings_range_check$MH,"g_settings_range_check");
    }
    /**
     * {@snippet :
     * gboolean g_settings_range_check(GSettings* settings, const gchar* key, GVariant* value);
     * }
     */
    public static int g_settings_range_check(MemorySegment settings, MemorySegment key, MemorySegment value) {
        var mh$ = g_settings_range_check$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$744.g_settings_set_value$MH,"g_settings_set_value");
    }
    /**
     * {@snippet :
     * gboolean g_settings_set_value(GSettings* settings, const gchar* key, GVariant* value);
     * }
     */
    public static int g_settings_set_value(MemorySegment settings, MemorySegment key, MemorySegment value) {
        var mh$ = g_settings_set_value$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$744.g_settings_get_value$MH,"g_settings_get_value");
    }
    /**
     * {@snippet :
     * GVariant* g_settings_get_value(GSettings* settings, const gchar* key);
     * }
     */
    public static MemorySegment g_settings_get_value(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_user_value$MH() {
        return RuntimeHelper.requireNonNull(constants$745.g_settings_get_user_value$MH,"g_settings_get_user_value");
    }
    /**
     * {@snippet :
     * GVariant* g_settings_get_user_value(GSettings* settings, const gchar* key);
     * }
     */
    public static MemorySegment g_settings_get_user_value(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_user_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_default_value$MH() {
        return RuntimeHelper.requireNonNull(constants$745.g_settings_get_default_value$MH,"g_settings_get_default_value");
    }
    /**
     * {@snippet :
     * GVariant* g_settings_get_default_value(GSettings* settings, const gchar* key);
     * }
     */
    public static MemorySegment g_settings_get_default_value(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_default_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set$MH() {
        return RuntimeHelper.requireNonNull(constants$745.g_settings_set$MH,"g_settings_set");
    }
    /**
     * {@snippet :
     * gboolean g_settings_set(GSettings* settings, const gchar* key, const gchar* format,...);
     * }
     */
    public static int g_settings_set(MemorySegment settings, MemorySegment key, MemorySegment format, Object... x3) {
        var mh$ = g_settings_set$MH();
        try {
            return (int)mh$.invokeExact(settings, key, format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get$MH() {
        return RuntimeHelper.requireNonNull(constants$745.g_settings_get$MH,"g_settings_get");
    }
    /**
     * {@snippet :
     * void g_settings_get(GSettings* settings, const gchar* key, const gchar* format,...);
     * }
     */
    public static void g_settings_get(MemorySegment settings, MemorySegment key, MemorySegment format, Object... x3) {
        var mh$ = g_settings_get$MH();
        try {
            mh$.invokeExact(settings, key, format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$745.g_settings_reset$MH,"g_settings_reset");
    }
    /**
     * {@snippet :
     * void g_settings_reset(GSettings* settings, const gchar* key);
     * }
     */
    public static void g_settings_reset(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_reset$MH();
        try {
            mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_int$MH() {
        return RuntimeHelper.requireNonNull(constants$745.g_settings_get_int$MH,"g_settings_get_int");
    }
    /**
     * {@snippet :
     * gint g_settings_get_int(GSettings* settings, const gchar* key);
     * }
     */
    public static int g_settings_get_int(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_int$MH();
        try {
            return (int)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_int$MH() {
        return RuntimeHelper.requireNonNull(constants$746.g_settings_set_int$MH,"g_settings_set_int");
    }
    /**
     * {@snippet :
     * gboolean g_settings_set_int(GSettings* settings, const gchar* key, gint value);
     * }
     */
    public static int g_settings_set_int(MemorySegment settings, MemorySegment key, int value) {
        var mh$ = g_settings_set_int$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$746.g_settings_get_int64$MH,"g_settings_get_int64");
    }
    /**
     * {@snippet :
     * gint64 g_settings_get_int64(GSettings* settings, const gchar* key);
     * }
     */
    public static long g_settings_get_int64(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_int64$MH();
        try {
            return (long)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$746.g_settings_set_int64$MH,"g_settings_set_int64");
    }
    /**
     * {@snippet :
     * gboolean g_settings_set_int64(GSettings* settings, const gchar* key, gint64 value);
     * }
     */
    public static int g_settings_set_int64(MemorySegment settings, MemorySegment key, long value) {
        var mh$ = g_settings_set_int64$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_uint$MH() {
        return RuntimeHelper.requireNonNull(constants$746.g_settings_get_uint$MH,"g_settings_get_uint");
    }
    /**
     * {@snippet :
     * guint g_settings_get_uint(GSettings* settings, const gchar* key);
     * }
     */
    public static int g_settings_get_uint(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_uint$MH();
        try {
            return (int)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_uint$MH() {
        return RuntimeHelper.requireNonNull(constants$746.g_settings_set_uint$MH,"g_settings_set_uint");
    }
    /**
     * {@snippet :
     * gboolean g_settings_set_uint(GSettings* settings, const gchar* key, guint value);
     * }
     */
    public static int g_settings_set_uint(MemorySegment settings, MemorySegment key, int value) {
        var mh$ = g_settings_set_uint$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$746.g_settings_get_uint64$MH,"g_settings_get_uint64");
    }
    /**
     * {@snippet :
     * guint64 g_settings_get_uint64(GSettings* settings, const gchar* key);
     * }
     */
    public static long g_settings_get_uint64(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_uint64$MH();
        try {
            return (long)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$747.g_settings_set_uint64$MH,"g_settings_set_uint64");
    }
    /**
     * {@snippet :
     * gboolean g_settings_set_uint64(GSettings* settings, const gchar* key, guint64 value);
     * }
     */
    public static int g_settings_set_uint64(MemorySegment settings, MemorySegment key, long value) {
        var mh$ = g_settings_set_uint64$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_string$MH() {
        return RuntimeHelper.requireNonNull(constants$747.g_settings_get_string$MH,"g_settings_get_string");
    }
    /**
     * {@snippet :
     * gchar* g_settings_get_string(GSettings* settings, const gchar* key);
     * }
     */
    public static MemorySegment g_settings_get_string(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_string$MH() {
        return RuntimeHelper.requireNonNull(constants$747.g_settings_set_string$MH,"g_settings_set_string");
    }
    /**
     * {@snippet :
     * gboolean g_settings_set_string(GSettings* settings, const gchar* key, const gchar* value);
     * }
     */
    public static int g_settings_set_string(MemorySegment settings, MemorySegment key, MemorySegment value) {
        var mh$ = g_settings_set_string$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$747.g_settings_get_boolean$MH,"g_settings_get_boolean");
    }
    /**
     * {@snippet :
     * gboolean g_settings_get_boolean(GSettings* settings, const gchar* key);
     * }
     */
    public static int g_settings_get_boolean(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_boolean$MH();
        try {
            return (int)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$747.g_settings_set_boolean$MH,"g_settings_set_boolean");
    }
    /**
     * {@snippet :
     * gboolean g_settings_set_boolean(GSettings* settings, const gchar* key, gboolean value);
     * }
     */
    public static int g_settings_set_boolean(MemorySegment settings, MemorySegment key, int value) {
        var mh$ = g_settings_set_boolean$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_double$MH() {
        return RuntimeHelper.requireNonNull(constants$747.g_settings_get_double$MH,"g_settings_get_double");
    }
    /**
     * {@snippet :
     * gdouble g_settings_get_double(GSettings* settings, const gchar* key);
     * }
     */
    public static double g_settings_get_double(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_double$MH();
        try {
            return (double)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_double$MH() {
        return RuntimeHelper.requireNonNull(constants$748.g_settings_set_double$MH,"g_settings_set_double");
    }
    /**
     * {@snippet :
     * gboolean g_settings_set_double(GSettings* settings, const gchar* key, gdouble value);
     * }
     */
    public static int g_settings_set_double(MemorySegment settings, MemorySegment key, double value) {
        var mh$ = g_settings_set_double$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_strv$MH() {
        return RuntimeHelper.requireNonNull(constants$748.g_settings_get_strv$MH,"g_settings_get_strv");
    }
    /**
     * {@snippet :
     * gchar** g_settings_get_strv(GSettings* settings, const gchar* key);
     * }
     */
    public static MemorySegment g_settings_get_strv(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_strv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_strv$MH() {
        return RuntimeHelper.requireNonNull(constants$748.g_settings_set_strv$MH,"g_settings_set_strv");
    }
    /**
     * {@snippet :
     * gboolean g_settings_set_strv(GSettings* settings, const gchar* key, const gchar** value);
     * }
     */
    public static int g_settings_set_strv(MemorySegment settings, MemorySegment key, MemorySegment value) {
        var mh$ = g_settings_set_strv$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_enum$MH() {
        return RuntimeHelper.requireNonNull(constants$748.g_settings_get_enum$MH,"g_settings_get_enum");
    }
    /**
     * {@snippet :
     * gint g_settings_get_enum(GSettings* settings, const gchar* key);
     * }
     */
    public static int g_settings_get_enum(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_enum$MH();
        try {
            return (int)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_enum$MH() {
        return RuntimeHelper.requireNonNull(constants$748.g_settings_set_enum$MH,"g_settings_set_enum");
    }
    /**
     * {@snippet :
     * gboolean g_settings_set_enum(GSettings* settings, const gchar* key, gint value);
     * }
     */
    public static int g_settings_set_enum(MemorySegment settings, MemorySegment key, int value) {
        var mh$ = g_settings_set_enum$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$748.g_settings_get_flags$MH,"g_settings_get_flags");
    }
    /**
     * {@snippet :
     * guint g_settings_get_flags(GSettings* settings, const gchar* key);
     * }
     */
    public static int g_settings_get_flags(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_flags$MH();
        try {
            return (int)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$749.g_settings_set_flags$MH,"g_settings_set_flags");
    }
    /**
     * {@snippet :
     * gboolean g_settings_set_flags(GSettings* settings, const gchar* key, guint value);
     * }
     */
    public static int g_settings_set_flags(MemorySegment settings, MemorySegment key, int value) {
        var mh$ = g_settings_set_flags$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$749.g_settings_get_child$MH,"g_settings_get_child");
    }
    /**
     * {@snippet :
     * GSettings* g_settings_get_child(GSettings* settings, const gchar* name);
     * }
     */
    public static MemorySegment g_settings_get_child(MemorySegment settings, MemorySegment name) {
        var mh$ = g_settings_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_is_writable$MH() {
        return RuntimeHelper.requireNonNull(constants$749.g_settings_is_writable$MH,"g_settings_is_writable");
    }
    /**
     * {@snippet :
     * gboolean g_settings_is_writable(GSettings* settings, const gchar* name);
     * }
     */
    public static int g_settings_is_writable(MemorySegment settings, MemorySegment name) {
        var mh$ = g_settings_is_writable$MH();
        try {
            return (int)mh$.invokeExact(settings, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_delay$MH() {
        return RuntimeHelper.requireNonNull(constants$749.g_settings_delay$MH,"g_settings_delay");
    }
    /**
     * {@snippet :
     * void g_settings_delay(GSettings* settings);
     * }
     */
    public static void g_settings_delay(MemorySegment settings) {
        var mh$ = g_settings_delay$MH();
        try {
            mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_apply$MH() {
        return RuntimeHelper.requireNonNull(constants$749.g_settings_apply$MH,"g_settings_apply");
    }
    /**
     * {@snippet :
     * void g_settings_apply(GSettings* settings);
     * }
     */
    public static void g_settings_apply(MemorySegment settings) {
        var mh$ = g_settings_apply$MH();
        try {
            mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_revert$MH() {
        return RuntimeHelper.requireNonNull(constants$749.g_settings_revert$MH,"g_settings_revert");
    }
    /**
     * {@snippet :
     * void g_settings_revert(GSettings* settings);
     * }
     */
    public static void g_settings_revert(MemorySegment settings) {
        var mh$ = g_settings_revert$MH();
        try {
            mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_has_unapplied$MH() {
        return RuntimeHelper.requireNonNull(constants$750.g_settings_get_has_unapplied$MH,"g_settings_get_has_unapplied");
    }
    /**
     * {@snippet :
     * gboolean g_settings_get_has_unapplied(GSettings* settings);
     * }
     */
    public static int g_settings_get_has_unapplied(MemorySegment settings) {
        var mh$ = g_settings_get_has_unapplied$MH();
        try {
            return (int)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$750.g_settings_sync$MH,"g_settings_sync");
    }
    /**
     * {@snippet :
     * void g_settings_sync();
     * }
     */
    public static void g_settings_sync() {
        var mh$ = g_settings_sync$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .G_SETTINGS_BIND_DEFAULT = 0;
     * }
     */
    public static int G_SETTINGS_BIND_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_SETTINGS_BIND_GET = 1;
     * }
     */
    public static int G_SETTINGS_BIND_GET() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_SETTINGS_BIND_SET = 2;
     * }
     */
    public static int G_SETTINGS_BIND_SET() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_SETTINGS_BIND_NO_SENSITIVITY = 4;
     * }
     */
    public static int G_SETTINGS_BIND_NO_SENSITIVITY() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_SETTINGS_BIND_GET_NO_CHANGES = 8;
     * }
     */
    public static int G_SETTINGS_BIND_GET_NO_CHANGES() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_SETTINGS_BIND_INVERT_BOOLEAN = 16;
     * }
     */
    public static int G_SETTINGS_BIND_INVERT_BOOLEAN() {
        return (int)16L;
    }
    public static MethodHandle g_settings_bind$MH() {
        return RuntimeHelper.requireNonNull(constants$751.g_settings_bind$MH,"g_settings_bind");
    }
    /**
     * {@snippet :
     * void g_settings_bind(GSettings* settings, const gchar* key, gpointer object, const gchar* property, GSettingsBindFlags flags);
     * }
     */
    public static void g_settings_bind(MemorySegment settings, MemorySegment key, MemorySegment object, MemorySegment property, int flags) {
        var mh$ = g_settings_bind$MH();
        try {
            mh$.invokeExact(settings, key, object, property, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_bind_with_mapping$MH() {
        return RuntimeHelper.requireNonNull(constants$751.g_settings_bind_with_mapping$MH,"g_settings_bind_with_mapping");
    }
    /**
     * {@snippet :
     * void g_settings_bind_with_mapping(GSettings* settings, const gchar* key, gpointer object, const gchar* property, GSettingsBindFlags flags, GSettingsBindGetMapping get_mapping, GSettingsBindSetMapping set_mapping, gpointer user_data, GDestroyNotify destroy);
     * }
     */
    public static void g_settings_bind_with_mapping(MemorySegment settings, MemorySegment key, MemorySegment object, MemorySegment property, int flags, MemorySegment get_mapping, MemorySegment set_mapping, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = g_settings_bind_with_mapping$MH();
        try {
            mh$.invokeExact(settings, key, object, property, flags, get_mapping, set_mapping, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_bind_writable$MH() {
        return RuntimeHelper.requireNonNull(constants$751.g_settings_bind_writable$MH,"g_settings_bind_writable");
    }
    /**
     * {@snippet :
     * void g_settings_bind_writable(GSettings* settings, const gchar* key, gpointer object, const gchar* property, gboolean inverted);
     * }
     */
    public static void g_settings_bind_writable(MemorySegment settings, MemorySegment key, MemorySegment object, MemorySegment property, int inverted) {
        var mh$ = g_settings_bind_writable$MH();
        try {
            mh$.invokeExact(settings, key, object, property, inverted);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_unbind$MH() {
        return RuntimeHelper.requireNonNull(constants$751.g_settings_unbind$MH,"g_settings_unbind");
    }
    /**
     * {@snippet :
     * void g_settings_unbind(gpointer object, const gchar* property);
     * }
     */
    public static void g_settings_unbind(MemorySegment object, MemorySegment property) {
        var mh$ = g_settings_unbind$MH();
        try {
            mh$.invokeExact(object, property);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_create_action$MH() {
        return RuntimeHelper.requireNonNull(constants$752.g_settings_create_action$MH,"g_settings_create_action");
    }
    /**
     * {@snippet :
     * GAction* g_settings_create_action(GSettings* settings, const gchar* key);
     * }
     */
    public static MemorySegment g_settings_create_action(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_create_action$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_mapped$MH() {
        return RuntimeHelper.requireNonNull(constants$752.g_settings_get_mapped$MH,"g_settings_get_mapped");
    }
    /**
     * {@snippet :
     * gpointer g_settings_get_mapped(GSettings* settings, const gchar* key, GSettingsGetMapping mapping, gpointer user_data);
     * }
     */
    public static MemorySegment g_settings_get_mapped(MemorySegment settings, MemorySegment key, MemorySegment mapping, MemorySegment user_data) {
        var mh$ = g_settings_get_mapped$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, key, mapping, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$752.g_simple_action_get_type$MH,"g_simple_action_get_type");
    }
    /**
     * {@snippet :
     * GType g_simple_action_get_type();
     * }
     */
    public static long g_simple_action_get_type() {
        var mh$ = g_simple_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_new$MH() {
        return RuntimeHelper.requireNonNull(constants$752.g_simple_action_new$MH,"g_simple_action_new");
    }
    /**
     * {@snippet :
     * GSimpleAction* g_simple_action_new(const gchar* name, const GVariantType* parameter_type);
     * }
     */
    public static MemorySegment g_simple_action_new(MemorySegment name, MemorySegment parameter_type) {
        var mh$ = g_simple_action_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, parameter_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_new_stateful$MH() {
        return RuntimeHelper.requireNonNull(constants$752.g_simple_action_new_stateful$MH,"g_simple_action_new_stateful");
    }
    /**
     * {@snippet :
     * GSimpleAction* g_simple_action_new_stateful(const gchar* name, const GVariantType* parameter_type, GVariant* state);
     * }
     */
    public static MemorySegment g_simple_action_new_stateful(MemorySegment name, MemorySegment parameter_type, MemorySegment state) {
        var mh$ = g_simple_action_new_stateful$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, parameter_type, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_set_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$752.g_simple_action_set_enabled$MH,"g_simple_action_set_enabled");
    }
    /**
     * {@snippet :
     * void g_simple_action_set_enabled(GSimpleAction* simple, gboolean enabled);
     * }
     */
    public static void g_simple_action_set_enabled(MemorySegment simple, int enabled) {
        var mh$ = g_simple_action_set_enabled$MH();
        try {
            mh$.invokeExact(simple, enabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_set_state$MH() {
        return RuntimeHelper.requireNonNull(constants$753.g_simple_action_set_state$MH,"g_simple_action_set_state");
    }
    /**
     * {@snippet :
     * void g_simple_action_set_state(GSimpleAction* simple, GVariant* value);
     * }
     */
    public static void g_simple_action_set_state(MemorySegment simple, MemorySegment value) {
        var mh$ = g_simple_action_set_state$MH();
        try {
            mh$.invokeExact(simple, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_set_state_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$753.g_simple_action_set_state_hint$MH,"g_simple_action_set_state_hint");
    }
    /**
     * {@snippet :
     * void g_simple_action_set_state_hint(GSimpleAction* simple, GVariant* state_hint);
     * }
     */
    public static void g_simple_action_set_state_hint(MemorySegment simple, MemorySegment state_hint) {
        var mh$ = g_simple_action_set_state_hint$MH();
        try {
            mh$.invokeExact(simple, state_hint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$753.g_simple_action_group_get_type$MH,"g_simple_action_group_get_type");
    }
    /**
     * {@snippet :
     * GType g_simple_action_group_get_type();
     * }
     */
    public static long g_simple_action_group_get_type() {
        var mh$ = g_simple_action_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_group_new$MH() {
        return RuntimeHelper.requireNonNull(constants$753.g_simple_action_group_new$MH,"g_simple_action_group_new");
    }
    /**
     * {@snippet :
     * GSimpleActionGroup* g_simple_action_group_new();
     * }
     */
    public static MemorySegment g_simple_action_group_new() {
        var mh$ = g_simple_action_group_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_group_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$753.g_simple_action_group_lookup$MH,"g_simple_action_group_lookup");
    }
    /**
     * {@snippet :
     * GAction* g_simple_action_group_lookup(GSimpleActionGroup* simple, const gchar* action_name);
     * }
     */
    public static MemorySegment g_simple_action_group_lookup(MemorySegment simple, MemorySegment action_name) {
        var mh$ = g_simple_action_group_lookup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(simple, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_group_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$753.g_simple_action_group_insert$MH,"g_simple_action_group_insert");
    }
    /**
     * {@snippet :
     * void g_simple_action_group_insert(GSimpleActionGroup* simple, GAction* action);
     * }
     */
    public static void g_simple_action_group_insert(MemorySegment simple, MemorySegment action) {
        var mh$ = g_simple_action_group_insert$MH();
        try {
            mh$.invokeExact(simple, action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_group_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$754.g_simple_action_group_remove$MH,"g_simple_action_group_remove");
    }
    /**
     * {@snippet :
     * void g_simple_action_group_remove(GSimpleActionGroup* simple, const gchar* action_name);
     * }
     */
    public static void g_simple_action_group_remove(MemorySegment simple, MemorySegment action_name) {
        var mh$ = g_simple_action_group_remove$MH();
        try {
            mh$.invokeExact(simple, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_group_add_entries$MH() {
        return RuntimeHelper.requireNonNull(constants$754.g_simple_action_group_add_entries$MH,"g_simple_action_group_add_entries");
    }
    /**
     * {@snippet :
     * void g_simple_action_group_add_entries(GSimpleActionGroup* simple, const GActionEntry* entries, gint n_entries, gpointer user_data);
     * }
     */
    public static void g_simple_action_group_add_entries(MemorySegment simple, MemorySegment entries, int n_entries, MemorySegment user_data) {
        var mh$ = g_simple_action_group_add_entries$MH();
        try {
            mh$.invokeExact(simple, entries, n_entries, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$754.g_simple_async_result_get_type$MH,"g_simple_async_result_get_type");
    }
    /**
     * {@snippet :
     * GType g_simple_async_result_get_type();
     * }
     */
    public static long g_simple_async_result_get_type() {
        var mh$ = g_simple_async_result_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_new$MH() {
        return RuntimeHelper.requireNonNull(constants$754.g_simple_async_result_new$MH,"g_simple_async_result_new");
    }
    /**
     * {@snippet :
     * GSimpleAsyncResult* g_simple_async_result_new(GObject* source_object, GAsyncReadyCallback callback, gpointer user_data, gpointer source_tag);
     * }
     */
    public static MemorySegment g_simple_async_result_new(MemorySegment source_object, MemorySegment callback, MemorySegment user_data, MemorySegment source_tag) {
        var mh$ = g_simple_async_result_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source_object, callback, user_data, source_tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_new_error$MH() {
        return RuntimeHelper.requireNonNull(constants$754.g_simple_async_result_new_error$MH,"g_simple_async_result_new_error");
    }
    /**
     * {@snippet :
     * GSimpleAsyncResult* g_simple_async_result_new_error(GObject* source_object, GAsyncReadyCallback callback, gpointer user_data, GQuark domain, gint code, char* format,...);
     * }
     */
    public static MemorySegment g_simple_async_result_new_error(MemorySegment source_object, MemorySegment callback, MemorySegment user_data, int domain, int code, MemorySegment format, Object... x6) {
        var mh$ = g_simple_async_result_new_error$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source_object, callback, user_data, domain, code, format, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_new_from_error$MH() {
        return RuntimeHelper.requireNonNull(constants$754.g_simple_async_result_new_from_error$MH,"g_simple_async_result_new_from_error");
    }
    /**
     * {@snippet :
     * GSimpleAsyncResult* g_simple_async_result_new_from_error(GObject* source_object, GAsyncReadyCallback callback, gpointer user_data, const GError* error);
     * }
     */
    public static MemorySegment g_simple_async_result_new_from_error(MemorySegment source_object, MemorySegment callback, MemorySegment user_data, MemorySegment error) {
        var mh$ = g_simple_async_result_new_from_error$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source_object, callback, user_data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_new_take_error$MH() {
        return RuntimeHelper.requireNonNull(constants$755.g_simple_async_result_new_take_error$MH,"g_simple_async_result_new_take_error");
    }
    /**
     * {@snippet :
     * GSimpleAsyncResult* g_simple_async_result_new_take_error(GObject* source_object, GAsyncReadyCallback callback, gpointer user_data, GError* error);
     * }
     */
    public static MemorySegment g_simple_async_result_new_take_error(MemorySegment source_object, MemorySegment callback, MemorySegment user_data, MemorySegment error) {
        var mh$ = g_simple_async_result_new_take_error$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source_object, callback, user_data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_set_op_res_gpointer$MH() {
        return RuntimeHelper.requireNonNull(constants$755.g_simple_async_result_set_op_res_gpointer$MH,"g_simple_async_result_set_op_res_gpointer");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_set_op_res_gpointer(GSimpleAsyncResult* simple, gpointer op_res, GDestroyNotify destroy_op_res);
     * }
     */
    public static void g_simple_async_result_set_op_res_gpointer(MemorySegment simple, MemorySegment op_res, MemorySegment destroy_op_res) {
        var mh$ = g_simple_async_result_set_op_res_gpointer$MH();
        try {
            mh$.invokeExact(simple, op_res, destroy_op_res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_get_op_res_gpointer$MH() {
        return RuntimeHelper.requireNonNull(constants$755.g_simple_async_result_get_op_res_gpointer$MH,"g_simple_async_result_get_op_res_gpointer");
    }
    /**
     * {@snippet :
     * gpointer g_simple_async_result_get_op_res_gpointer(GSimpleAsyncResult* simple);
     * }
     */
    public static MemorySegment g_simple_async_result_get_op_res_gpointer(MemorySegment simple) {
        var mh$ = g_simple_async_result_get_op_res_gpointer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(simple);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_set_op_res_gssize$MH() {
        return RuntimeHelper.requireNonNull(constants$755.g_simple_async_result_set_op_res_gssize$MH,"g_simple_async_result_set_op_res_gssize");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_set_op_res_gssize(GSimpleAsyncResult* simple, gssize op_res);
     * }
     */
    public static void g_simple_async_result_set_op_res_gssize(MemorySegment simple, long op_res) {
        var mh$ = g_simple_async_result_set_op_res_gssize$MH();
        try {
            mh$.invokeExact(simple, op_res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_get_op_res_gssize$MH() {
        return RuntimeHelper.requireNonNull(constants$755.g_simple_async_result_get_op_res_gssize$MH,"g_simple_async_result_get_op_res_gssize");
    }
    /**
     * {@snippet :
     * gssize g_simple_async_result_get_op_res_gssize(GSimpleAsyncResult* simple);
     * }
     */
    public static long g_simple_async_result_get_op_res_gssize(MemorySegment simple) {
        var mh$ = g_simple_async_result_get_op_res_gssize$MH();
        try {
            return (long)mh$.invokeExact(simple);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_set_op_res_gboolean$MH() {
        return RuntimeHelper.requireNonNull(constants$755.g_simple_async_result_set_op_res_gboolean$MH,"g_simple_async_result_set_op_res_gboolean");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_set_op_res_gboolean(GSimpleAsyncResult* simple, gboolean op_res);
     * }
     */
    public static void g_simple_async_result_set_op_res_gboolean(MemorySegment simple, int op_res) {
        var mh$ = g_simple_async_result_set_op_res_gboolean$MH();
        try {
            mh$.invokeExact(simple, op_res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_get_op_res_gboolean$MH() {
        return RuntimeHelper.requireNonNull(constants$756.g_simple_async_result_get_op_res_gboolean$MH,"g_simple_async_result_get_op_res_gboolean");
    }
    /**
     * {@snippet :
     * gboolean g_simple_async_result_get_op_res_gboolean(GSimpleAsyncResult* simple);
     * }
     */
    public static int g_simple_async_result_get_op_res_gboolean(MemorySegment simple) {
        var mh$ = g_simple_async_result_get_op_res_gboolean$MH();
        try {
            return (int)mh$.invokeExact(simple);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_set_check_cancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$756.g_simple_async_result_set_check_cancellable$MH,"g_simple_async_result_set_check_cancellable");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_set_check_cancellable(GSimpleAsyncResult* simple, GCancellable* check_cancellable);
     * }
     */
    public static void g_simple_async_result_set_check_cancellable(MemorySegment simple, MemorySegment check_cancellable) {
        var mh$ = g_simple_async_result_set_check_cancellable$MH();
        try {
            mh$.invokeExact(simple, check_cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_get_source_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$756.g_simple_async_result_get_source_tag$MH,"g_simple_async_result_get_source_tag");
    }
    /**
     * {@snippet :
     * gpointer g_simple_async_result_get_source_tag(GSimpleAsyncResult* simple);
     * }
     */
    public static MemorySegment g_simple_async_result_get_source_tag(MemorySegment simple) {
        var mh$ = g_simple_async_result_get_source_tag$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(simple);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_set_handle_cancellation$MH() {
        return RuntimeHelper.requireNonNull(constants$756.g_simple_async_result_set_handle_cancellation$MH,"g_simple_async_result_set_handle_cancellation");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_set_handle_cancellation(GSimpleAsyncResult* simple, gboolean handle_cancellation);
     * }
     */
    public static void g_simple_async_result_set_handle_cancellation(MemorySegment simple, int handle_cancellation) {
        var mh$ = g_simple_async_result_set_handle_cancellation$MH();
        try {
            mh$.invokeExact(simple, handle_cancellation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_complete$MH() {
        return RuntimeHelper.requireNonNull(constants$756.g_simple_async_result_complete$MH,"g_simple_async_result_complete");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_complete(GSimpleAsyncResult* simple);
     * }
     */
    public static void g_simple_async_result_complete(MemorySegment simple) {
        var mh$ = g_simple_async_result_complete$MH();
        try {
            mh$.invokeExact(simple);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_complete_in_idle$MH() {
        return RuntimeHelper.requireNonNull(constants$756.g_simple_async_result_complete_in_idle$MH,"g_simple_async_result_complete_in_idle");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_complete_in_idle(GSimpleAsyncResult* simple);
     * }
     */
    public static void g_simple_async_result_complete_in_idle(MemorySegment simple) {
        var mh$ = g_simple_async_result_complete_in_idle$MH();
        try {
            mh$.invokeExact(simple);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_run_in_thread$MH() {
        return RuntimeHelper.requireNonNull(constants$757.g_simple_async_result_run_in_thread$MH,"g_simple_async_result_run_in_thread");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_run_in_thread(GSimpleAsyncResult* simple, GSimpleAsyncThreadFunc func, int io_priority, GCancellable* cancellable);
     * }
     */
    public static void g_simple_async_result_run_in_thread(MemorySegment simple, MemorySegment func, int io_priority, MemorySegment cancellable) {
        var mh$ = g_simple_async_result_run_in_thread$MH();
        try {
            mh$.invokeExact(simple, func, io_priority, cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_set_from_error$MH() {
        return RuntimeHelper.requireNonNull(constants$757.g_simple_async_result_set_from_error$MH,"g_simple_async_result_set_from_error");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_set_from_error(GSimpleAsyncResult* simple, const GError* error);
     * }
     */
    public static void g_simple_async_result_set_from_error(MemorySegment simple, MemorySegment error) {
        var mh$ = g_simple_async_result_set_from_error$MH();
        try {
            mh$.invokeExact(simple, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_take_error$MH() {
        return RuntimeHelper.requireNonNull(constants$757.g_simple_async_result_take_error$MH,"g_simple_async_result_take_error");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_take_error(GSimpleAsyncResult* simple, GError* error);
     * }
     */
    public static void g_simple_async_result_take_error(MemorySegment simple, MemorySegment error) {
        var mh$ = g_simple_async_result_take_error$MH();
        try {
            mh$.invokeExact(simple, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_propagate_error$MH() {
        return RuntimeHelper.requireNonNull(constants$757.g_simple_async_result_propagate_error$MH,"g_simple_async_result_propagate_error");
    }
    /**
     * {@snippet :
     * gboolean g_simple_async_result_propagate_error(GSimpleAsyncResult* simple, GError** dest);
     * }
     */
    public static int g_simple_async_result_propagate_error(MemorySegment simple, MemorySegment dest) {
        var mh$ = g_simple_async_result_propagate_error$MH();
        try {
            return (int)mh$.invokeExact(simple, dest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_set_error$MH() {
        return RuntimeHelper.requireNonNull(constants$757.g_simple_async_result_set_error$MH,"g_simple_async_result_set_error");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_set_error(GSimpleAsyncResult* simple, GQuark domain, gint code, char* format,...);
     * }
     */
    public static void g_simple_async_result_set_error(MemorySegment simple, int domain, int code, MemorySegment format, Object... x4) {
        var mh$ = g_simple_async_result_set_error$MH();
        try {
            mh$.invokeExact(simple, domain, code, format, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_set_error_va$MH() {
        return RuntimeHelper.requireNonNull(constants$757.g_simple_async_result_set_error_va$MH,"g_simple_async_result_set_error_va");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_set_error_va(GSimpleAsyncResult* simple, GQuark domain, gint code, char* format, va_list args);
     * }
     */
    public static void g_simple_async_result_set_error_va(MemorySegment simple, int domain, int code, MemorySegment format, MemorySegment args) {
        var mh$ = g_simple_async_result_set_error_va$MH();
        try {
            mh$.invokeExact(simple, domain, code, format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$758.g_simple_async_result_is_valid$MH,"g_simple_async_result_is_valid");
    }
    /**
     * {@snippet :
     * gboolean g_simple_async_result_is_valid(GAsyncResult* result, GObject* source, gpointer source_tag);
     * }
     */
    public static int g_simple_async_result_is_valid(MemorySegment result, MemorySegment source, MemorySegment source_tag) {
        var mh$ = g_simple_async_result_is_valid$MH();
        try {
            return (int)mh$.invokeExact(result, source, source_tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_report_error_in_idle$MH() {
        return RuntimeHelper.requireNonNull(constants$758.g_simple_async_report_error_in_idle$MH,"g_simple_async_report_error_in_idle");
    }
    /**
     * {@snippet :
     * void g_simple_async_report_error_in_idle(GObject* object, GAsyncReadyCallback callback, gpointer user_data, GQuark domain, gint code, char* format,...);
     * }
     */
    public static void g_simple_async_report_error_in_idle(MemorySegment object, MemorySegment callback, MemorySegment user_data, int domain, int code, MemorySegment format, Object... x6) {
        var mh$ = g_simple_async_report_error_in_idle$MH();
        try {
            mh$.invokeExact(object, callback, user_data, domain, code, format, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_report_gerror_in_idle$MH() {
        return RuntimeHelper.requireNonNull(constants$758.g_simple_async_report_gerror_in_idle$MH,"g_simple_async_report_gerror_in_idle");
    }
    /**
     * {@snippet :
     * void g_simple_async_report_gerror_in_idle(GObject* object, GAsyncReadyCallback callback, gpointer user_data, const GError* error);
     * }
     */
    public static void g_simple_async_report_gerror_in_idle(MemorySegment object, MemorySegment callback, MemorySegment user_data, MemorySegment error) {
        var mh$ = g_simple_async_report_gerror_in_idle$MH();
        try {
            mh$.invokeExact(object, callback, user_data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_report_take_gerror_in_idle$MH() {
        return RuntimeHelper.requireNonNull(constants$758.g_simple_async_report_take_gerror_in_idle$MH,"g_simple_async_report_take_gerror_in_idle");
    }
    /**
     * {@snippet :
     * void g_simple_async_report_take_gerror_in_idle(GObject* object, GAsyncReadyCallback callback, gpointer user_data, GError* error);
     * }
     */
    public static void g_simple_async_report_take_gerror_in_idle(MemorySegment object, MemorySegment callback, MemorySegment user_data, MemorySegment error) {
        var mh$ = g_simple_async_report_take_gerror_in_idle$MH();
        try {
            mh$.invokeExact(object, callback, user_data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_io_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$758.g_simple_io_stream_get_type$MH,"g_simple_io_stream_get_type");
    }
    /**
     * {@snippet :
     * GType g_simple_io_stream_get_type();
     * }
     */
    public static long g_simple_io_stream_get_type() {
        var mh$ = g_simple_io_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_io_stream_new$MH() {
        return RuntimeHelper.requireNonNull(constants$758.g_simple_io_stream_new$MH,"g_simple_io_stream_new");
    }
    /**
     * {@snippet :
     * GIOStream* g_simple_io_stream_new(GInputStream* input_stream, GOutputStream* output_stream);
     * }
     */
    public static MemorySegment g_simple_io_stream_new(MemorySegment input_stream, MemorySegment output_stream) {
        var mh$ = g_simple_io_stream_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(input_stream, output_stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_permission_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$759.g_simple_permission_get_type$MH,"g_simple_permission_get_type");
    }
    /**
     * {@snippet :
     * GType g_simple_permission_get_type();
     * }
     */
    public static long g_simple_permission_get_type() {
        var mh$ = g_simple_permission_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_permission_new$MH() {
        return RuntimeHelper.requireNonNull(constants$759.g_simple_permission_new$MH,"g_simple_permission_new");
    }
    /**
     * {@snippet :
     * GPermission* g_simple_permission_new(gboolean allowed);
     * }
     */
    public static MemorySegment g_simple_permission_new(int allowed) {
        var mh$ = g_simple_permission_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allowed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_proxy_resolver_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$759.g_simple_proxy_resolver_get_type$MH,"g_simple_proxy_resolver_get_type");
    }
    /**
     * {@snippet :
     * GType g_simple_proxy_resolver_get_type();
     * }
     */
    public static long g_simple_proxy_resolver_get_type() {
        var mh$ = g_simple_proxy_resolver_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_proxy_resolver_new$MH() {
        return RuntimeHelper.requireNonNull(constants$759.g_simple_proxy_resolver_new$MH,"g_simple_proxy_resolver_new");
    }
    /**
     * {@snippet :
     * GProxyResolver* g_simple_proxy_resolver_new(const gchar* default_proxy, gchar** ignore_hosts);
     * }
     */
    public static MemorySegment g_simple_proxy_resolver_new(MemorySegment default_proxy, MemorySegment ignore_hosts) {
        var mh$ = g_simple_proxy_resolver_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(default_proxy, ignore_hosts);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_proxy_resolver_set_default_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$759.g_simple_proxy_resolver_set_default_proxy$MH,"g_simple_proxy_resolver_set_default_proxy");
    }
    /**
     * {@snippet :
     * void g_simple_proxy_resolver_set_default_proxy(GSimpleProxyResolver* resolver, const gchar* default_proxy);
     * }
     */
    public static void g_simple_proxy_resolver_set_default_proxy(MemorySegment resolver, MemorySegment default_proxy) {
        var mh$ = g_simple_proxy_resolver_set_default_proxy$MH();
        try {
            mh$.invokeExact(resolver, default_proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_proxy_resolver_set_ignore_hosts$MH() {
        return RuntimeHelper.requireNonNull(constants$759.g_simple_proxy_resolver_set_ignore_hosts$MH,"g_simple_proxy_resolver_set_ignore_hosts");
    }
    /**
     * {@snippet :
     * void g_simple_proxy_resolver_set_ignore_hosts(GSimpleProxyResolver* resolver, gchar** ignore_hosts);
     * }
     */
    public static void g_simple_proxy_resolver_set_ignore_hosts(MemorySegment resolver, MemorySegment ignore_hosts) {
        var mh$ = g_simple_proxy_resolver_set_ignore_hosts$MH();
        try {
            mh$.invokeExact(resolver, ignore_hosts);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_proxy_resolver_set_uri_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$760.g_simple_proxy_resolver_set_uri_proxy$MH,"g_simple_proxy_resolver_set_uri_proxy");
    }
    /**
     * {@snippet :
     * void g_simple_proxy_resolver_set_uri_proxy(GSimpleProxyResolver* resolver, const gchar* uri_scheme, const gchar* proxy);
     * }
     */
    public static void g_simple_proxy_resolver_set_uri_proxy(MemorySegment resolver, MemorySegment uri_scheme, MemorySegment proxy) {
        var mh$ = g_simple_proxy_resolver_set_uri_proxy$MH();
        try {
            mh$.invokeExact(resolver, uri_scheme, proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$760.g_socket_get_type$MH,"g_socket_get_type");
    }
    /**
     * {@snippet :
     * GType g_socket_get_type();
     * }
     */
    public static long g_socket_get_type() {
        var mh$ = g_socket_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_new$MH() {
        return RuntimeHelper.requireNonNull(constants$760.g_socket_new$MH,"g_socket_new");
    }
    /**
     * {@snippet :
     * GSocket* g_socket_new(GSocketFamily family, GSocketType type, GSocketProtocol protocol, GError** error);
     * }
     */
    public static MemorySegment g_socket_new(int family, int type, int protocol, MemorySegment error) {
        var mh$ = g_socket_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(family, type, protocol, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_new_from_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$760.g_socket_new_from_fd$MH,"g_socket_new_from_fd");
    }
    /**
     * {@snippet :
     * GSocket* g_socket_new_from_fd(gint fd, GError** error);
     * }
     */
    public static MemorySegment g_socket_new_from_fd(int fd, MemorySegment error) {
        var mh$ = g_socket_new_from_fd$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fd, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$760.g_socket_get_fd$MH,"g_socket_get_fd");
    }
    /**
     * {@snippet :
     * int g_socket_get_fd(GSocket* socket);
     * }
     */
    public static int g_socket_get_fd(MemorySegment socket) {
        var mh$ = g_socket_get_fd$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_family$MH() {
        return RuntimeHelper.requireNonNull(constants$760.g_socket_get_family$MH,"g_socket_get_family");
    }
    /**
     * {@snippet :
     * GSocketFamily g_socket_get_family(GSocket* socket);
     * }
     */
    public static int g_socket_get_family(MemorySegment socket) {
        var mh$ = g_socket_get_family$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_socket_type$MH() {
        return RuntimeHelper.requireNonNull(constants$761.g_socket_get_socket_type$MH,"g_socket_get_socket_type");
    }
    /**
     * {@snippet :
     * GSocketType g_socket_get_socket_type(GSocket* socket);
     * }
     */
    public static int g_socket_get_socket_type(MemorySegment socket) {
        var mh$ = g_socket_get_socket_type$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$761.g_socket_get_protocol$MH,"g_socket_get_protocol");
    }
    /**
     * {@snippet :
     * GSocketProtocol g_socket_get_protocol(GSocket* socket);
     * }
     */
    public static int g_socket_get_protocol(MemorySegment socket) {
        var mh$ = g_socket_get_protocol$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_local_address$MH() {
        return RuntimeHelper.requireNonNull(constants$761.g_socket_get_local_address$MH,"g_socket_get_local_address");
    }
    /**
     * {@snippet :
     * GSocketAddress* g_socket_get_local_address(GSocket* socket, GError** error);
     * }
     */
    public static MemorySegment g_socket_get_local_address(MemorySegment socket, MemorySegment error) {
        var mh$ = g_socket_get_local_address$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(socket, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_remote_address$MH() {
        return RuntimeHelper.requireNonNull(constants$761.g_socket_get_remote_address$MH,"g_socket_get_remote_address");
    }
    /**
     * {@snippet :
     * GSocketAddress* g_socket_get_remote_address(GSocket* socket, GError** error);
     * }
     */
    public static MemorySegment g_socket_get_remote_address(MemorySegment socket, MemorySegment error) {
        var mh$ = g_socket_get_remote_address$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(socket, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_blocking$MH() {
        return RuntimeHelper.requireNonNull(constants$761.g_socket_set_blocking$MH,"g_socket_set_blocking");
    }
    /**
     * {@snippet :
     * void g_socket_set_blocking(GSocket* socket, gboolean blocking);
     * }
     */
    public static void g_socket_set_blocking(MemorySegment socket, int blocking) {
        var mh$ = g_socket_set_blocking$MH();
        try {
            mh$.invokeExact(socket, blocking);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_blocking$MH() {
        return RuntimeHelper.requireNonNull(constants$761.g_socket_get_blocking$MH,"g_socket_get_blocking");
    }
    /**
     * {@snippet :
     * gboolean g_socket_get_blocking(GSocket* socket);
     * }
     */
    public static int g_socket_get_blocking(MemorySegment socket) {
        var mh$ = g_socket_get_blocking$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_keepalive$MH() {
        return RuntimeHelper.requireNonNull(constants$762.g_socket_set_keepalive$MH,"g_socket_set_keepalive");
    }
    /**
     * {@snippet :
     * void g_socket_set_keepalive(GSocket* socket, gboolean keepalive);
     * }
     */
    public static void g_socket_set_keepalive(MemorySegment socket, int keepalive) {
        var mh$ = g_socket_set_keepalive$MH();
        try {
            mh$.invokeExact(socket, keepalive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_keepalive$MH() {
        return RuntimeHelper.requireNonNull(constants$762.g_socket_get_keepalive$MH,"g_socket_get_keepalive");
    }
    /**
     * {@snippet :
     * gboolean g_socket_get_keepalive(GSocket* socket);
     * }
     */
    public static int g_socket_get_keepalive(MemorySegment socket) {
        var mh$ = g_socket_get_keepalive$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_listen_backlog$MH() {
        return RuntimeHelper.requireNonNull(constants$762.g_socket_get_listen_backlog$MH,"g_socket_get_listen_backlog");
    }
    /**
     * {@snippet :
     * gint g_socket_get_listen_backlog(GSocket* socket);
     * }
     */
    public static int g_socket_get_listen_backlog(MemorySegment socket) {
        var mh$ = g_socket_get_listen_backlog$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_listen_backlog$MH() {
        return RuntimeHelper.requireNonNull(constants$762.g_socket_set_listen_backlog$MH,"g_socket_set_listen_backlog");
    }
    /**
     * {@snippet :
     * void g_socket_set_listen_backlog(GSocket* socket, gint backlog);
     * }
     */
    public static void g_socket_set_listen_backlog(MemorySegment socket, int backlog) {
        var mh$ = g_socket_set_listen_backlog$MH();
        try {
            mh$.invokeExact(socket, backlog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$762.g_socket_get_timeout$MH,"g_socket_get_timeout");
    }
    /**
     * {@snippet :
     * guint g_socket_get_timeout(GSocket* socket);
     * }
     */
    public static int g_socket_get_timeout(MemorySegment socket) {
        var mh$ = g_socket_get_timeout$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$762.g_socket_set_timeout$MH,"g_socket_set_timeout");
    }
    /**
     * {@snippet :
     * void g_socket_set_timeout(GSocket* socket, guint timeout);
     * }
     */
    public static void g_socket_set_timeout(MemorySegment socket, int timeout) {
        var mh$ = g_socket_set_timeout$MH();
        try {
            mh$.invokeExact(socket, timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_ttl$MH() {
        return RuntimeHelper.requireNonNull(constants$763.g_socket_get_ttl$MH,"g_socket_get_ttl");
    }
    /**
     * {@snippet :
     * guint g_socket_get_ttl(GSocket* socket);
     * }
     */
    public static int g_socket_get_ttl(MemorySegment socket) {
        var mh$ = g_socket_get_ttl$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_ttl$MH() {
        return RuntimeHelper.requireNonNull(constants$763.g_socket_set_ttl$MH,"g_socket_set_ttl");
    }
    /**
     * {@snippet :
     * void g_socket_set_ttl(GSocket* socket, guint ttl);
     * }
     */
    public static void g_socket_set_ttl(MemorySegment socket, int ttl) {
        var mh$ = g_socket_set_ttl$MH();
        try {
            mh$.invokeExact(socket, ttl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_broadcast$MH() {
        return RuntimeHelper.requireNonNull(constants$763.g_socket_get_broadcast$MH,"g_socket_get_broadcast");
    }
    /**
     * {@snippet :
     * gboolean g_socket_get_broadcast(GSocket* socket);
     * }
     */
    public static int g_socket_get_broadcast(MemorySegment socket) {
        var mh$ = g_socket_get_broadcast$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_broadcast$MH() {
        return RuntimeHelper.requireNonNull(constants$763.g_socket_set_broadcast$MH,"g_socket_set_broadcast");
    }
    /**
     * {@snippet :
     * void g_socket_set_broadcast(GSocket* socket, gboolean broadcast);
     * }
     */
    public static void g_socket_set_broadcast(MemorySegment socket, int broadcast) {
        var mh$ = g_socket_set_broadcast$MH();
        try {
            mh$.invokeExact(socket, broadcast);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_multicast_loopback$MH() {
        return RuntimeHelper.requireNonNull(constants$763.g_socket_get_multicast_loopback$MH,"g_socket_get_multicast_loopback");
    }
    /**
     * {@snippet :
     * gboolean g_socket_get_multicast_loopback(GSocket* socket);
     * }
     */
    public static int g_socket_get_multicast_loopback(MemorySegment socket) {
        var mh$ = g_socket_get_multicast_loopback$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_multicast_loopback$MH() {
        return RuntimeHelper.requireNonNull(constants$763.g_socket_set_multicast_loopback$MH,"g_socket_set_multicast_loopback");
    }
    /**
     * {@snippet :
     * void g_socket_set_multicast_loopback(GSocket* socket, gboolean loopback);
     * }
     */
    public static void g_socket_set_multicast_loopback(MemorySegment socket, int loopback) {
        var mh$ = g_socket_set_multicast_loopback$MH();
        try {
            mh$.invokeExact(socket, loopback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_multicast_ttl$MH() {
        return RuntimeHelper.requireNonNull(constants$764.g_socket_get_multicast_ttl$MH,"g_socket_get_multicast_ttl");
    }
    /**
     * {@snippet :
     * guint g_socket_get_multicast_ttl(GSocket* socket);
     * }
     */
    public static int g_socket_get_multicast_ttl(MemorySegment socket) {
        var mh$ = g_socket_get_multicast_ttl$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_multicast_ttl$MH() {
        return RuntimeHelper.requireNonNull(constants$764.g_socket_set_multicast_ttl$MH,"g_socket_set_multicast_ttl");
    }
    /**
     * {@snippet :
     * void g_socket_set_multicast_ttl(GSocket* socket, guint ttl);
     * }
     */
    public static void g_socket_set_multicast_ttl(MemorySegment socket, int ttl) {
        var mh$ = g_socket_set_multicast_ttl$MH();
        try {
            mh$.invokeExact(socket, ttl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_is_connected$MH() {
        return RuntimeHelper.requireNonNull(constants$764.g_socket_is_connected$MH,"g_socket_is_connected");
    }
    /**
     * {@snippet :
     * gboolean g_socket_is_connected(GSocket* socket);
     * }
     */
    public static int g_socket_is_connected(MemorySegment socket) {
        var mh$ = g_socket_is_connected$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_bind$MH() {
        return RuntimeHelper.requireNonNull(constants$764.g_socket_bind$MH,"g_socket_bind");
    }
    /**
     * {@snippet :
     * gboolean g_socket_bind(GSocket* socket, GSocketAddress* address, gboolean allow_reuse, GError** error);
     * }
     */
    public static int g_socket_bind(MemorySegment socket, MemorySegment address, int allow_reuse, MemorySegment error) {
        var mh$ = g_socket_bind$MH();
        try {
            return (int)mh$.invokeExact(socket, address, allow_reuse, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_join_multicast_group$MH() {
        return RuntimeHelper.requireNonNull(constants$764.g_socket_join_multicast_group$MH,"g_socket_join_multicast_group");
    }
    /**
     * {@snippet :
     * gboolean g_socket_join_multicast_group(GSocket* socket, GInetAddress* group, gboolean source_specific, const gchar* iface, GError** error);
     * }
     */
    public static int g_socket_join_multicast_group(MemorySegment socket, MemorySegment group, int source_specific, MemorySegment iface, MemorySegment error) {
        var mh$ = g_socket_join_multicast_group$MH();
        try {
            return (int)mh$.invokeExact(socket, group, source_specific, iface, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_leave_multicast_group$MH() {
        return RuntimeHelper.requireNonNull(constants$764.g_socket_leave_multicast_group$MH,"g_socket_leave_multicast_group");
    }
    /**
     * {@snippet :
     * gboolean g_socket_leave_multicast_group(GSocket* socket, GInetAddress* group, gboolean source_specific, const gchar* iface, GError** error);
     * }
     */
    public static int g_socket_leave_multicast_group(MemorySegment socket, MemorySegment group, int source_specific, MemorySegment iface, MemorySegment error) {
        var mh$ = g_socket_leave_multicast_group$MH();
        try {
            return (int)mh$.invokeExact(socket, group, source_specific, iface, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_join_multicast_group_ssm$MH() {
        return RuntimeHelper.requireNonNull(constants$765.g_socket_join_multicast_group_ssm$MH,"g_socket_join_multicast_group_ssm");
    }
    /**
     * {@snippet :
     * gboolean g_socket_join_multicast_group_ssm(GSocket* socket, GInetAddress* group, GInetAddress* source_specific, const gchar* iface, GError** error);
     * }
     */
    public static int g_socket_join_multicast_group_ssm(MemorySegment socket, MemorySegment group, MemorySegment source_specific, MemorySegment iface, MemorySegment error) {
        var mh$ = g_socket_join_multicast_group_ssm$MH();
        try {
            return (int)mh$.invokeExact(socket, group, source_specific, iface, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_leave_multicast_group_ssm$MH() {
        return RuntimeHelper.requireNonNull(constants$765.g_socket_leave_multicast_group_ssm$MH,"g_socket_leave_multicast_group_ssm");
    }
    /**
     * {@snippet :
     * gboolean g_socket_leave_multicast_group_ssm(GSocket* socket, GInetAddress* group, GInetAddress* source_specific, const gchar* iface, GError** error);
     * }
     */
    public static int g_socket_leave_multicast_group_ssm(MemorySegment socket, MemorySegment group, MemorySegment source_specific, MemorySegment iface, MemorySegment error) {
        var mh$ = g_socket_leave_multicast_group_ssm$MH();
        try {
            return (int)mh$.invokeExact(socket, group, source_specific, iface, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$765.g_socket_connect$MH,"g_socket_connect");
    }
    /**
     * {@snippet :
     * gboolean g_socket_connect(GSocket* socket, GSocketAddress* address, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_socket_connect(MemorySegment socket, MemorySegment address, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_connect$MH();
        try {
            return (int)mh$.invokeExact(socket, address, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_check_connect_result$MH() {
        return RuntimeHelper.requireNonNull(constants$765.g_socket_check_connect_result$MH,"g_socket_check_connect_result");
    }
    /**
     * {@snippet :
     * gboolean g_socket_check_connect_result(GSocket* socket, GError** error);
     * }
     */
    public static int g_socket_check_connect_result(MemorySegment socket, MemorySegment error) {
        var mh$ = g_socket_check_connect_result$MH();
        try {
            return (int)mh$.invokeExact(socket, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_available_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$765.g_socket_get_available_bytes$MH,"g_socket_get_available_bytes");
    }
    /**
     * {@snippet :
     * gssize g_socket_get_available_bytes(GSocket* socket);
     * }
     */
    public static long g_socket_get_available_bytes(MemorySegment socket) {
        var mh$ = g_socket_get_available_bytes$MH();
        try {
            return (long)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_condition_check$MH() {
        return RuntimeHelper.requireNonNull(constants$765.g_socket_condition_check$MH,"g_socket_condition_check");
    }
    /**
     * {@snippet :
     * GIOCondition g_socket_condition_check(GSocket* socket, GIOCondition condition);
     * }
     */
    public static int g_socket_condition_check(MemorySegment socket, int condition) {
        var mh$ = g_socket_condition_check$MH();
        try {
            return (int)mh$.invokeExact(socket, condition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_condition_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$766.g_socket_condition_wait$MH,"g_socket_condition_wait");
    }
    /**
     * {@snippet :
     * gboolean g_socket_condition_wait(GSocket* socket, GIOCondition condition, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_socket_condition_wait(MemorySegment socket, int condition, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_condition_wait$MH();
        try {
            return (int)mh$.invokeExact(socket, condition, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_condition_timed_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$766.g_socket_condition_timed_wait$MH,"g_socket_condition_timed_wait");
    }
    /**
     * {@snippet :
     * gboolean g_socket_condition_timed_wait(GSocket* socket, GIOCondition condition, gint64 timeout_us, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_socket_condition_timed_wait(MemorySegment socket, int condition, long timeout_us, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_condition_timed_wait$MH();
        try {
            return (int)mh$.invokeExact(socket, condition, timeout_us, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_accept$MH() {
        return RuntimeHelper.requireNonNull(constants$766.g_socket_accept$MH,"g_socket_accept");
    }
    /**
     * {@snippet :
     * GSocket* g_socket_accept(GSocket* socket, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_socket_accept(MemorySegment socket, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_accept$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(socket, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listen$MH() {
        return RuntimeHelper.requireNonNull(constants$766.g_socket_listen$MH,"g_socket_listen");
    }
    /**
     * {@snippet :
     * gboolean g_socket_listen(GSocket* socket, GError** error);
     * }
     */
    public static int g_socket_listen(MemorySegment socket, MemorySegment error) {
        var mh$ = g_socket_listen$MH();
        try {
            return (int)mh$.invokeExact(socket, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_receive$MH() {
        return RuntimeHelper.requireNonNull(constants$766.g_socket_receive$MH,"g_socket_receive");
    }
    /**
     * {@snippet :
     * gssize g_socket_receive(GSocket* socket, gchar* buffer, gsize size, GCancellable* cancellable, GError** error);
     * }
     */
    public static long g_socket_receive(MemorySegment socket, MemorySegment buffer, long size, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_receive$MH();
        try {
            return (long)mh$.invokeExact(socket, buffer, size, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_receive_from$MH() {
        return RuntimeHelper.requireNonNull(constants$766.g_socket_receive_from$MH,"g_socket_receive_from");
    }
    /**
     * {@snippet :
     * gssize g_socket_receive_from(GSocket* socket, GSocketAddress** address, gchar* buffer, gsize size, GCancellable* cancellable, GError** error);
     * }
     */
    public static long g_socket_receive_from(MemorySegment socket, MemorySegment address, MemorySegment buffer, long size, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_receive_from$MH();
        try {
            return (long)mh$.invokeExact(socket, address, buffer, size, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_send$MH() {
        return RuntimeHelper.requireNonNull(constants$767.g_socket_send$MH,"g_socket_send");
    }
    /**
     * {@snippet :
     * gssize g_socket_send(GSocket* socket, const gchar* buffer, gsize size, GCancellable* cancellable, GError** error);
     * }
     */
    public static long g_socket_send(MemorySegment socket, MemorySegment buffer, long size, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_send$MH();
        try {
            return (long)mh$.invokeExact(socket, buffer, size, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_send_to$MH() {
        return RuntimeHelper.requireNonNull(constants$767.g_socket_send_to$MH,"g_socket_send_to");
    }
    /**
     * {@snippet :
     * gssize g_socket_send_to(GSocket* socket, GSocketAddress* address, const gchar* buffer, gsize size, GCancellable* cancellable, GError** error);
     * }
     */
    public static long g_socket_send_to(MemorySegment socket, MemorySegment address, MemorySegment buffer, long size, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_send_to$MH();
        try {
            return (long)mh$.invokeExact(socket, address, buffer, size, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_receive_message$MH() {
        return RuntimeHelper.requireNonNull(constants$767.g_socket_receive_message$MH,"g_socket_receive_message");
    }
    /**
     * {@snippet :
     * gssize g_socket_receive_message(GSocket* socket, GSocketAddress** address, GInputVector* vectors, gint num_vectors, GSocketControlMessage*** messages, gint* num_messages, gint* flags, GCancellable* cancellable, GError** error);
     * }
     */
    public static long g_socket_receive_message(MemorySegment socket, MemorySegment address, MemorySegment vectors, int num_vectors, MemorySegment messages, MemorySegment num_messages, MemorySegment flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_receive_message$MH();
        try {
            return (long)mh$.invokeExact(socket, address, vectors, num_vectors, messages, num_messages, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_send_message$MH() {
        return RuntimeHelper.requireNonNull(constants$767.g_socket_send_message$MH,"g_socket_send_message");
    }
    /**
     * {@snippet :
     * gssize g_socket_send_message(GSocket* socket, GSocketAddress* address, GOutputVector* vectors, gint num_vectors, GSocketControlMessage** messages, gint num_messages, gint flags, GCancellable* cancellable, GError** error);
     * }
     */
    public static long g_socket_send_message(MemorySegment socket, MemorySegment address, MemorySegment vectors, int num_vectors, MemorySegment messages, int num_messages, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_send_message$MH();
        try {
            return (long)mh$.invokeExact(socket, address, vectors, num_vectors, messages, num_messages, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_receive_messages$MH() {
        return RuntimeHelper.requireNonNull(constants$767.g_socket_receive_messages$MH,"g_socket_receive_messages");
    }
    /**
     * {@snippet :
     * gint g_socket_receive_messages(GSocket* socket, GInputMessage* messages, guint num_messages, gint flags, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_socket_receive_messages(MemorySegment socket, MemorySegment messages, int num_messages, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_receive_messages$MH();
        try {
            return (int)mh$.invokeExact(socket, messages, num_messages, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_send_messages$MH() {
        return RuntimeHelper.requireNonNull(constants$767.g_socket_send_messages$MH,"g_socket_send_messages");
    }
    /**
     * {@snippet :
     * gint g_socket_send_messages(GSocket* socket, GOutputMessage* messages, guint num_messages, gint flags, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_socket_send_messages(MemorySegment socket, MemorySegment messages, int num_messages, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_send_messages$MH();
        try {
            return (int)mh$.invokeExact(socket, messages, num_messages, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_close$MH() {
        return RuntimeHelper.requireNonNull(constants$768.g_socket_close$MH,"g_socket_close");
    }
    /**
     * {@snippet :
     * gboolean g_socket_close(GSocket* socket, GError** error);
     * }
     */
    public static int g_socket_close(MemorySegment socket, MemorySegment error) {
        var mh$ = g_socket_close$MH();
        try {
            return (int)mh$.invokeExact(socket, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_shutdown$MH() {
        return RuntimeHelper.requireNonNull(constants$768.g_socket_shutdown$MH,"g_socket_shutdown");
    }
    /**
     * {@snippet :
     * gboolean g_socket_shutdown(GSocket* socket, gboolean shutdown_read, gboolean shutdown_write, GError** error);
     * }
     */
    public static int g_socket_shutdown(MemorySegment socket, int shutdown_read, int shutdown_write, MemorySegment error) {
        var mh$ = g_socket_shutdown$MH();
        try {
            return (int)mh$.invokeExact(socket, shutdown_read, shutdown_write, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_is_closed$MH() {
        return RuntimeHelper.requireNonNull(constants$768.g_socket_is_closed$MH,"g_socket_is_closed");
    }
    /**
     * {@snippet :
     * gboolean g_socket_is_closed(GSocket* socket);
     * }
     */
    public static int g_socket_is_closed(MemorySegment socket) {
        var mh$ = g_socket_is_closed$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_create_source$MH() {
        return RuntimeHelper.requireNonNull(constants$768.g_socket_create_source$MH,"g_socket_create_source");
    }
    /**
     * {@snippet :
     * GSource* g_socket_create_source(GSocket* socket, GIOCondition condition, GCancellable* cancellable);
     * }
     */
    public static MemorySegment g_socket_create_source(MemorySegment socket, int condition, MemorySegment cancellable) {
        var mh$ = g_socket_create_source$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(socket, condition, cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_speaks_ipv4$MH() {
        return RuntimeHelper.requireNonNull(constants$768.g_socket_speaks_ipv4$MH,"g_socket_speaks_ipv4");
    }
    /**
     * {@snippet :
     * gboolean g_socket_speaks_ipv4(GSocket* socket);
     * }
     */
    public static int g_socket_speaks_ipv4(MemorySegment socket) {
        var mh$ = g_socket_speaks_ipv4$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_credentials$MH() {
        return RuntimeHelper.requireNonNull(constants$768.g_socket_get_credentials$MH,"g_socket_get_credentials");
    }
    /**
     * {@snippet :
     * GCredentials* g_socket_get_credentials(GSocket* socket, GError** error);
     * }
     */
    public static MemorySegment g_socket_get_credentials(MemorySegment socket, MemorySegment error) {
        var mh$ = g_socket_get_credentials$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(socket, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_receive_with_blocking$MH() {
        return RuntimeHelper.requireNonNull(constants$769.g_socket_receive_with_blocking$MH,"g_socket_receive_with_blocking");
    }
    /**
     * {@snippet :
     * gssize g_socket_receive_with_blocking(GSocket* socket, gchar* buffer, gsize size, gboolean blocking, GCancellable* cancellable, GError** error);
     * }
     */
    public static long g_socket_receive_with_blocking(MemorySegment socket, MemorySegment buffer, long size, int blocking, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_receive_with_blocking$MH();
        try {
            return (long)mh$.invokeExact(socket, buffer, size, blocking, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_send_with_blocking$MH() {
        return RuntimeHelper.requireNonNull(constants$769.g_socket_send_with_blocking$MH,"g_socket_send_with_blocking");
    }
    /**
     * {@snippet :
     * gssize g_socket_send_with_blocking(GSocket* socket, const gchar* buffer, gsize size, gboolean blocking, GCancellable* cancellable, GError** error);
     * }
     */
    public static long g_socket_send_with_blocking(MemorySegment socket, MemorySegment buffer, long size, int blocking, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_send_with_blocking$MH();
        try {
            return (long)mh$.invokeExact(socket, buffer, size, blocking, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_send_message_with_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$769.g_socket_send_message_with_timeout$MH,"g_socket_send_message_with_timeout");
    }
    /**
     * {@snippet :
     * GPollableReturn g_socket_send_message_with_timeout(GSocket* socket, GSocketAddress* address, const GOutputVector* vectors, gint num_vectors, GSocketControlMessage** messages, gint num_messages, gint flags, gint64 timeout_us, gsize* bytes_written, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_socket_send_message_with_timeout(MemorySegment socket, MemorySegment address, MemorySegment vectors, int num_vectors, MemorySegment messages, int num_messages, int flags, long timeout_us, MemorySegment bytes_written, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_send_message_with_timeout$MH();
        try {
            return (int)mh$.invokeExact(socket, address, vectors, num_vectors, messages, num_messages, flags, timeout_us, bytes_written, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_option$MH() {
        return RuntimeHelper.requireNonNull(constants$769.g_socket_get_option$MH,"g_socket_get_option");
    }
    /**
     * {@snippet :
     * gboolean g_socket_get_option(GSocket* socket, gint level, gint optname, gint* value, GError** error);
     * }
     */
    public static int g_socket_get_option(MemorySegment socket, int level, int optname, MemorySegment value, MemorySegment error) {
        var mh$ = g_socket_get_option$MH();
        try {
            return (int)mh$.invokeExact(socket, level, optname, value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_option$MH() {
        return RuntimeHelper.requireNonNull(constants$769.g_socket_set_option$MH,"g_socket_set_option");
    }
    /**
     * {@snippet :
     * gboolean g_socket_set_option(GSocket* socket, gint level, gint optname, gint value, GError** error);
     * }
     */
    public static int g_socket_set_option(MemorySegment socket, int level, int optname, int value, MemorySegment error) {
        var mh$ = g_socket_set_option$MH();
        try {
            return (int)mh$.invokeExact(socket, level, optname, value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$769.g_socket_client_get_type$MH,"g_socket_client_get_type");
    }
    /**
     * {@snippet :
     * GType g_socket_client_get_type();
     * }
     */
    public static long g_socket_client_get_type() {
        var mh$ = g_socket_client_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_new$MH() {
        return RuntimeHelper.requireNonNull(constants$770.g_socket_client_new$MH,"g_socket_client_new");
    }
    /**
     * {@snippet :
     * GSocketClient* g_socket_client_new();
     * }
     */
    public static MemorySegment g_socket_client_new() {
        var mh$ = g_socket_client_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_family$MH() {
        return RuntimeHelper.requireNonNull(constants$770.g_socket_client_get_family$MH,"g_socket_client_get_family");
    }
    /**
     * {@snippet :
     * GSocketFamily g_socket_client_get_family(GSocketClient* client);
     * }
     */
    public static int g_socket_client_get_family(MemorySegment client) {
        var mh$ = g_socket_client_get_family$MH();
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_family$MH() {
        return RuntimeHelper.requireNonNull(constants$770.g_socket_client_set_family$MH,"g_socket_client_set_family");
    }
    /**
     * {@snippet :
     * void g_socket_client_set_family(GSocketClient* client, GSocketFamily family);
     * }
     */
    public static void g_socket_client_set_family(MemorySegment client, int family) {
        var mh$ = g_socket_client_set_family$MH();
        try {
            mh$.invokeExact(client, family);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_socket_type$MH() {
        return RuntimeHelper.requireNonNull(constants$770.g_socket_client_get_socket_type$MH,"g_socket_client_get_socket_type");
    }
    /**
     * {@snippet :
     * GSocketType g_socket_client_get_socket_type(GSocketClient* client);
     * }
     */
    public static int g_socket_client_get_socket_type(MemorySegment client) {
        var mh$ = g_socket_client_get_socket_type$MH();
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_socket_type$MH() {
        return RuntimeHelper.requireNonNull(constants$770.g_socket_client_set_socket_type$MH,"g_socket_client_set_socket_type");
    }
    /**
     * {@snippet :
     * void g_socket_client_set_socket_type(GSocketClient* client, GSocketType type);
     * }
     */
    public static void g_socket_client_set_socket_type(MemorySegment client, int type) {
        var mh$ = g_socket_client_set_socket_type$MH();
        try {
            mh$.invokeExact(client, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$770.g_socket_client_get_protocol$MH,"g_socket_client_get_protocol");
    }
    /**
     * {@snippet :
     * GSocketProtocol g_socket_client_get_protocol(GSocketClient* client);
     * }
     */
    public static int g_socket_client_get_protocol(MemorySegment client) {
        var mh$ = g_socket_client_get_protocol$MH();
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$771.g_socket_client_set_protocol$MH,"g_socket_client_set_protocol");
    }
    /**
     * {@snippet :
     * void g_socket_client_set_protocol(GSocketClient* client, GSocketProtocol protocol);
     * }
     */
    public static void g_socket_client_set_protocol(MemorySegment client, int protocol) {
        var mh$ = g_socket_client_set_protocol$MH();
        try {
            mh$.invokeExact(client, protocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_local_address$MH() {
        return RuntimeHelper.requireNonNull(constants$771.g_socket_client_get_local_address$MH,"g_socket_client_get_local_address");
    }
    /**
     * {@snippet :
     * GSocketAddress* g_socket_client_get_local_address(GSocketClient* client);
     * }
     */
    public static MemorySegment g_socket_client_get_local_address(MemorySegment client) {
        var mh$ = g_socket_client_get_local_address$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_local_address$MH() {
        return RuntimeHelper.requireNonNull(constants$771.g_socket_client_set_local_address$MH,"g_socket_client_set_local_address");
    }
    /**
     * {@snippet :
     * void g_socket_client_set_local_address(GSocketClient* client, GSocketAddress* address);
     * }
     */
    public static void g_socket_client_set_local_address(MemorySegment client, MemorySegment address) {
        var mh$ = g_socket_client_set_local_address$MH();
        try {
            mh$.invokeExact(client, address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$771.g_socket_client_get_timeout$MH,"g_socket_client_get_timeout");
    }
    /**
     * {@snippet :
     * guint g_socket_client_get_timeout(GSocketClient* client);
     * }
     */
    public static int g_socket_client_get_timeout(MemorySegment client) {
        var mh$ = g_socket_client_get_timeout$MH();
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$771.g_socket_client_set_timeout$MH,"g_socket_client_set_timeout");
    }
    /**
     * {@snippet :
     * void g_socket_client_set_timeout(GSocketClient* client, guint timeout);
     * }
     */
    public static void g_socket_client_set_timeout(MemorySegment client, int timeout) {
        var mh$ = g_socket_client_set_timeout$MH();
        try {
            mh$.invokeExact(client, timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_enable_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$771.g_socket_client_get_enable_proxy$MH,"g_socket_client_get_enable_proxy");
    }
    /**
     * {@snippet :
     * gboolean g_socket_client_get_enable_proxy(GSocketClient* client);
     * }
     */
    public static int g_socket_client_get_enable_proxy(MemorySegment client) {
        var mh$ = g_socket_client_get_enable_proxy$MH();
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_enable_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$772.g_socket_client_set_enable_proxy$MH,"g_socket_client_set_enable_proxy");
    }
    /**
     * {@snippet :
     * void g_socket_client_set_enable_proxy(GSocketClient* client, gboolean enable);
     * }
     */
    public static void g_socket_client_set_enable_proxy(MemorySegment client, int enable) {
        var mh$ = g_socket_client_set_enable_proxy$MH();
        try {
            mh$.invokeExact(client, enable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_tls$MH() {
        return RuntimeHelper.requireNonNull(constants$772.g_socket_client_get_tls$MH,"g_socket_client_get_tls");
    }
    /**
     * {@snippet :
     * gboolean g_socket_client_get_tls(GSocketClient* client);
     * }
     */
    public static int g_socket_client_get_tls(MemorySegment client) {
        var mh$ = g_socket_client_get_tls$MH();
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_tls$MH() {
        return RuntimeHelper.requireNonNull(constants$772.g_socket_client_set_tls$MH,"g_socket_client_set_tls");
    }
    /**
     * {@snippet :
     * void g_socket_client_set_tls(GSocketClient* client, gboolean tls);
     * }
     */
    public static void g_socket_client_set_tls(MemorySegment client, int tls) {
        var mh$ = g_socket_client_set_tls$MH();
        try {
            mh$.invokeExact(client, tls);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_tls_validation_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$772.g_socket_client_get_tls_validation_flags$MH,"g_socket_client_get_tls_validation_flags");
    }
    /**
     * {@snippet :
     * GTlsCertificateFlags g_socket_client_get_tls_validation_flags(GSocketClient* client);
     * }
     */
    public static int g_socket_client_get_tls_validation_flags(MemorySegment client) {
        var mh$ = g_socket_client_get_tls_validation_flags$MH();
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_tls_validation_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$772.g_socket_client_set_tls_validation_flags$MH,"g_socket_client_set_tls_validation_flags");
    }
    /**
     * {@snippet :
     * void g_socket_client_set_tls_validation_flags(GSocketClient* client, GTlsCertificateFlags flags);
     * }
     */
    public static void g_socket_client_set_tls_validation_flags(MemorySegment client, int flags) {
        var mh$ = g_socket_client_set_tls_validation_flags$MH();
        try {
            mh$.invokeExact(client, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_proxy_resolver$MH() {
        return RuntimeHelper.requireNonNull(constants$772.g_socket_client_get_proxy_resolver$MH,"g_socket_client_get_proxy_resolver");
    }
    /**
     * {@snippet :
     * GProxyResolver* g_socket_client_get_proxy_resolver(GSocketClient* client);
     * }
     */
    public static MemorySegment g_socket_client_get_proxy_resolver(MemorySegment client) {
        var mh$ = g_socket_client_get_proxy_resolver$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_proxy_resolver$MH() {
        return RuntimeHelper.requireNonNull(constants$773.g_socket_client_set_proxy_resolver$MH,"g_socket_client_set_proxy_resolver");
    }
    /**
     * {@snippet :
     * void g_socket_client_set_proxy_resolver(GSocketClient* client, GProxyResolver* proxy_resolver);
     * }
     */
    public static void g_socket_client_set_proxy_resolver(MemorySegment client, MemorySegment proxy_resolver) {
        var mh$ = g_socket_client_set_proxy_resolver$MH();
        try {
            mh$.invokeExact(client, proxy_resolver);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$773.g_socket_client_connect$MH,"g_socket_client_connect");
    }
    /**
     * {@snippet :
     * GSocketConnection* g_socket_client_connect(GSocketClient* client, GSocketConnectable* connectable, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_socket_client_connect(MemorySegment client, MemorySegment connectable, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_client_connect$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client, connectable, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_host$MH() {
        return RuntimeHelper.requireNonNull(constants$773.g_socket_client_connect_to_host$MH,"g_socket_client_connect_to_host");
    }
    /**
     * {@snippet :
     * GSocketConnection* g_socket_client_connect_to_host(GSocketClient* client, const gchar* host_and_port, guint16 default_port, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_socket_client_connect_to_host(MemorySegment client, MemorySegment host_and_port, short default_port, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_client_connect_to_host$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client, host_and_port, default_port, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_service$MH() {
        return RuntimeHelper.requireNonNull(constants$773.g_socket_client_connect_to_service$MH,"g_socket_client_connect_to_service");
    }
    /**
     * {@snippet :
     * GSocketConnection* g_socket_client_connect_to_service(GSocketClient* client, const gchar* domain, const gchar* service, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_socket_client_connect_to_service(MemorySegment client, MemorySegment domain, MemorySegment service, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_client_connect_to_service$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client, domain, service, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$773.g_socket_client_connect_to_uri$MH,"g_socket_client_connect_to_uri");
    }
    /**
     * {@snippet :
     * GSocketConnection* g_socket_client_connect_to_uri(GSocketClient* client, const gchar* uri, guint16 default_port, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_socket_client_connect_to_uri(MemorySegment client, MemorySegment uri, short default_port, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_client_connect_to_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client, uri, default_port, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_async$MH() {
        return RuntimeHelper.requireNonNull(constants$773.g_socket_client_connect_async$MH,"g_socket_client_connect_async");
    }
    /**
     * {@snippet :
     * void g_socket_client_connect_async(GSocketClient* client, GSocketConnectable* connectable, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_socket_client_connect_async(MemorySegment client, MemorySegment connectable, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_socket_client_connect_async$MH();
        try {
            mh$.invokeExact(client, connectable, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$774.g_socket_client_connect_finish$MH,"g_socket_client_connect_finish");
    }
    /**
     * {@snippet :
     * GSocketConnection* g_socket_client_connect_finish(GSocketClient* client, GAsyncResult* result, GError** error);
     * }
     */
    public static MemorySegment g_socket_client_connect_finish(MemorySegment client, MemorySegment result, MemorySegment error) {
        var mh$ = g_socket_client_connect_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_host_async$MH() {
        return RuntimeHelper.requireNonNull(constants$774.g_socket_client_connect_to_host_async$MH,"g_socket_client_connect_to_host_async");
    }
    /**
     * {@snippet :
     * void g_socket_client_connect_to_host_async(GSocketClient* client, const gchar* host_and_port, guint16 default_port, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_socket_client_connect_to_host_async(MemorySegment client, MemorySegment host_and_port, short default_port, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_socket_client_connect_to_host_async$MH();
        try {
            mh$.invokeExact(client, host_and_port, default_port, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_host_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$774.g_socket_client_connect_to_host_finish$MH,"g_socket_client_connect_to_host_finish");
    }
    /**
     * {@snippet :
     * GSocketConnection* g_socket_client_connect_to_host_finish(GSocketClient* client, GAsyncResult* result, GError** error);
     * }
     */
    public static MemorySegment g_socket_client_connect_to_host_finish(MemorySegment client, MemorySegment result, MemorySegment error) {
        var mh$ = g_socket_client_connect_to_host_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_service_async$MH() {
        return RuntimeHelper.requireNonNull(constants$774.g_socket_client_connect_to_service_async$MH,"g_socket_client_connect_to_service_async");
    }
    /**
     * {@snippet :
     * void g_socket_client_connect_to_service_async(GSocketClient* client, const gchar* domain, const gchar* service, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_socket_client_connect_to_service_async(MemorySegment client, MemorySegment domain, MemorySegment service, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_socket_client_connect_to_service_async$MH();
        try {
            mh$.invokeExact(client, domain, service, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_service_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$774.g_socket_client_connect_to_service_finish$MH,"g_socket_client_connect_to_service_finish");
    }
    /**
     * {@snippet :
     * GSocketConnection* g_socket_client_connect_to_service_finish(GSocketClient* client, GAsyncResult* result, GError** error);
     * }
     */
    public static MemorySegment g_socket_client_connect_to_service_finish(MemorySegment client, MemorySegment result, MemorySegment error) {
        var mh$ = g_socket_client_connect_to_service_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_uri_async$MH() {
        return RuntimeHelper.requireNonNull(constants$774.g_socket_client_connect_to_uri_async$MH,"g_socket_client_connect_to_uri_async");
    }
    /**
     * {@snippet :
     * void g_socket_client_connect_to_uri_async(GSocketClient* client, const gchar* uri, guint16 default_port, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_socket_client_connect_to_uri_async(MemorySegment client, MemorySegment uri, short default_port, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_socket_client_connect_to_uri_async$MH();
        try {
            mh$.invokeExact(client, uri, default_port, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_uri_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$775.g_socket_client_connect_to_uri_finish$MH,"g_socket_client_connect_to_uri_finish");
    }
    /**
     * {@snippet :
     * GSocketConnection* g_socket_client_connect_to_uri_finish(GSocketClient* client, GAsyncResult* result, GError** error);
     * }
     */
    public static MemorySegment g_socket_client_connect_to_uri_finish(MemorySegment client, MemorySegment result, MemorySegment error) {
        var mh$ = g_socket_client_connect_to_uri_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_add_application_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$775.g_socket_client_add_application_proxy$MH,"g_socket_client_add_application_proxy");
    }
    /**
     * {@snippet :
     * void g_socket_client_add_application_proxy(GSocketClient* client, const gchar* protocol);
     * }
     */
    public static void g_socket_client_add_application_proxy(MemorySegment client, MemorySegment protocol) {
        var mh$ = g_socket_client_add_application_proxy$MH();
        try {
            mh$.invokeExact(client, protocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connectable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$775.g_socket_connectable_get_type$MH,"g_socket_connectable_get_type");
    }
    /**
     * {@snippet :
     * GType g_socket_connectable_get_type();
     * }
     */
    public static long g_socket_connectable_get_type() {
        var mh$ = g_socket_connectable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connectable_enumerate$MH() {
        return RuntimeHelper.requireNonNull(constants$775.g_socket_connectable_enumerate$MH,"g_socket_connectable_enumerate");
    }
    /**
     * {@snippet :
     * GSocketAddressEnumerator* g_socket_connectable_enumerate(GSocketConnectable* connectable);
     * }
     */
    public static MemorySegment g_socket_connectable_enumerate(MemorySegment connectable) {
        var mh$ = g_socket_connectable_enumerate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connectable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connectable_proxy_enumerate$MH() {
        return RuntimeHelper.requireNonNull(constants$775.g_socket_connectable_proxy_enumerate$MH,"g_socket_connectable_proxy_enumerate");
    }
    /**
     * {@snippet :
     * GSocketAddressEnumerator* g_socket_connectable_proxy_enumerate(GSocketConnectable* connectable);
     * }
     */
    public static MemorySegment g_socket_connectable_proxy_enumerate(MemorySegment connectable) {
        var mh$ = g_socket_connectable_proxy_enumerate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connectable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connectable_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$775.g_socket_connectable_to_string$MH,"g_socket_connectable_to_string");
    }
    /**
     * {@snippet :
     * gchar* g_socket_connectable_to_string(GSocketConnectable* connectable);
     * }
     */
    public static MemorySegment g_socket_connectable_to_string(MemorySegment connectable) {
        var mh$ = g_socket_connectable_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connectable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$776.g_socket_connection_get_type$MH,"g_socket_connection_get_type");
    }
    /**
     * {@snippet :
     * GType g_socket_connection_get_type();
     * }
     */
    public static long g_socket_connection_get_type() {
        var mh$ = g_socket_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_is_connected$MH() {
        return RuntimeHelper.requireNonNull(constants$776.g_socket_connection_is_connected$MH,"g_socket_connection_is_connected");
    }
    /**
     * {@snippet :
     * gboolean g_socket_connection_is_connected(GSocketConnection* connection);
     * }
     */
    public static int g_socket_connection_is_connected(MemorySegment connection) {
        var mh$ = g_socket_connection_is_connected$MH();
        try {
            return (int)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$776.g_socket_connection_connect$MH,"g_socket_connection_connect");
    }
    /**
     * {@snippet :
     * gboolean g_socket_connection_connect(GSocketConnection* connection, GSocketAddress* address, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_socket_connection_connect(MemorySegment connection, MemorySegment address, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_connection_connect$MH();
        try {
            return (int)mh$.invokeExact(connection, address, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_connect_async$MH() {
        return RuntimeHelper.requireNonNull(constants$776.g_socket_connection_connect_async$MH,"g_socket_connection_connect_async");
    }
    /**
     * {@snippet :
     * void g_socket_connection_connect_async(GSocketConnection* connection, GSocketAddress* address, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_socket_connection_connect_async(MemorySegment connection, MemorySegment address, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_socket_connection_connect_async$MH();
        try {
            mh$.invokeExact(connection, address, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_connect_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$776.g_socket_connection_connect_finish$MH,"g_socket_connection_connect_finish");
    }
    /**
     * {@snippet :
     * gboolean g_socket_connection_connect_finish(GSocketConnection* connection, GAsyncResult* result, GError** error);
     * }
     */
    public static int g_socket_connection_connect_finish(MemorySegment connection, MemorySegment result, MemorySegment error) {
        var mh$ = g_socket_connection_connect_finish$MH();
        try {
            return (int)mh$.invokeExact(connection, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_get_socket$MH() {
        return RuntimeHelper.requireNonNull(constants$776.g_socket_connection_get_socket$MH,"g_socket_connection_get_socket");
    }
    /**
     * {@snippet :
     * GSocket* g_socket_connection_get_socket(GSocketConnection* connection);
     * }
     */
    public static MemorySegment g_socket_connection_get_socket(MemorySegment connection) {
        var mh$ = g_socket_connection_get_socket$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_get_local_address$MH() {
        return RuntimeHelper.requireNonNull(constants$777.g_socket_connection_get_local_address$MH,"g_socket_connection_get_local_address");
    }
    /**
     * {@snippet :
     * GSocketAddress* g_socket_connection_get_local_address(GSocketConnection* connection, GError** error);
     * }
     */
    public static MemorySegment g_socket_connection_get_local_address(MemorySegment connection, MemorySegment error) {
        var mh$ = g_socket_connection_get_local_address$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_get_remote_address$MH() {
        return RuntimeHelper.requireNonNull(constants$777.g_socket_connection_get_remote_address$MH,"g_socket_connection_get_remote_address");
    }
    /**
     * {@snippet :
     * GSocketAddress* g_socket_connection_get_remote_address(GSocketConnection* connection, GError** error);
     * }
     */
    public static MemorySegment g_socket_connection_get_remote_address(MemorySegment connection, MemorySegment error) {
        var mh$ = g_socket_connection_get_remote_address$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_factory_register_type$MH() {
        return RuntimeHelper.requireNonNull(constants$777.g_socket_connection_factory_register_type$MH,"g_socket_connection_factory_register_type");
    }
    /**
     * {@snippet :
     * void g_socket_connection_factory_register_type(GType g_type, GSocketFamily family, GSocketType type, gint protocol);
     * }
     */
    public static void g_socket_connection_factory_register_type(long g_type, int family, int type, int protocol) {
        var mh$ = g_socket_connection_factory_register_type$MH();
        try {
            mh$.invokeExact(g_type, family, type, protocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_factory_lookup_type$MH() {
        return RuntimeHelper.requireNonNull(constants$777.g_socket_connection_factory_lookup_type$MH,"g_socket_connection_factory_lookup_type");
    }
    /**
     * {@snippet :
     * GType g_socket_connection_factory_lookup_type(GSocketFamily family, GSocketType type, gint protocol_id);
     * }
     */
    public static long g_socket_connection_factory_lookup_type(int family, int type, int protocol_id) {
        var mh$ = g_socket_connection_factory_lookup_type$MH();
        try {
            return (long)mh$.invokeExact(family, type, protocol_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_factory_create_connection$MH() {
        return RuntimeHelper.requireNonNull(constants$777.g_socket_connection_factory_create_connection$MH,"g_socket_connection_factory_create_connection");
    }
    /**
     * {@snippet :
     * GSocketConnection* g_socket_connection_factory_create_connection(GSocket* socket);
     * }
     */
    public static MemorySegment g_socket_connection_factory_create_connection(MemorySegment socket) {
        var mh$ = g_socket_connection_factory_create_connection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_control_message_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$777.g_socket_control_message_get_type$MH,"g_socket_control_message_get_type");
    }
    /**
     * {@snippet :
     * GType g_socket_control_message_get_type();
     * }
     */
    public static long g_socket_control_message_get_type() {
        var mh$ = g_socket_control_message_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_control_message_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$778.g_socket_control_message_get_size$MH,"g_socket_control_message_get_size");
    }
    /**
     * {@snippet :
     * gsize g_socket_control_message_get_size(GSocketControlMessage* message);
     * }
     */
    public static long g_socket_control_message_get_size(MemorySegment message) {
        var mh$ = g_socket_control_message_get_size$MH();
        try {
            return (long)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_control_message_get_level$MH() {
        return RuntimeHelper.requireNonNull(constants$778.g_socket_control_message_get_level$MH,"g_socket_control_message_get_level");
    }
    /**
     * {@snippet :
     * int g_socket_control_message_get_level(GSocketControlMessage* message);
     * }
     */
    public static int g_socket_control_message_get_level(MemorySegment message) {
        var mh$ = g_socket_control_message_get_level$MH();
        try {
            return (int)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_control_message_get_msg_type$MH() {
        return RuntimeHelper.requireNonNull(constants$778.g_socket_control_message_get_msg_type$MH,"g_socket_control_message_get_msg_type");
    }
    /**
     * {@snippet :
     * int g_socket_control_message_get_msg_type(GSocketControlMessage* message);
     * }
     */
    public static int g_socket_control_message_get_msg_type(MemorySegment message) {
        var mh$ = g_socket_control_message_get_msg_type$MH();
        try {
            return (int)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_control_message_serialize$MH() {
        return RuntimeHelper.requireNonNull(constants$778.g_socket_control_message_serialize$MH,"g_socket_control_message_serialize");
    }
    /**
     * {@snippet :
     * void g_socket_control_message_serialize(GSocketControlMessage* message, gpointer data);
     * }
     */
    public static void g_socket_control_message_serialize(MemorySegment message, MemorySegment data) {
        var mh$ = g_socket_control_message_serialize$MH();
        try {
            mh$.invokeExact(message, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_control_message_deserialize$MH() {
        return RuntimeHelper.requireNonNull(constants$778.g_socket_control_message_deserialize$MH,"g_socket_control_message_deserialize");
    }
    /**
     * {@snippet :
     * GSocketControlMessage* g_socket_control_message_deserialize(int level, int type, gsize size, gpointer data);
     * }
     */
    public static MemorySegment g_socket_control_message_deserialize(int level, int type, long size, MemorySegment data) {
        var mh$ = g_socket_control_message_deserialize$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(level, type, size, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$778.g_socket_listener_get_type$MH,"g_socket_listener_get_type");
    }
    /**
     * {@snippet :
     * GType g_socket_listener_get_type();
     * }
     */
    public static long g_socket_listener_get_type() {
        var mh$ = g_socket_listener_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_new$MH() {
        return RuntimeHelper.requireNonNull(constants$779.g_socket_listener_new$MH,"g_socket_listener_new");
    }
    /**
     * {@snippet :
     * GSocketListener* g_socket_listener_new();
     * }
     */
    public static MemorySegment g_socket_listener_new() {
        var mh$ = g_socket_listener_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_set_backlog$MH() {
        return RuntimeHelper.requireNonNull(constants$779.g_socket_listener_set_backlog$MH,"g_socket_listener_set_backlog");
    }
    /**
     * {@snippet :
     * void g_socket_listener_set_backlog(GSocketListener* listener, int listen_backlog);
     * }
     */
    public static void g_socket_listener_set_backlog(MemorySegment listener, int listen_backlog) {
        var mh$ = g_socket_listener_set_backlog$MH();
        try {
            mh$.invokeExact(listener, listen_backlog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_add_socket$MH() {
        return RuntimeHelper.requireNonNull(constants$779.g_socket_listener_add_socket$MH,"g_socket_listener_add_socket");
    }
    /**
     * {@snippet :
     * gboolean g_socket_listener_add_socket(GSocketListener* listener, GSocket* socket, GObject* source_object, GError** error);
     * }
     */
    public static int g_socket_listener_add_socket(MemorySegment listener, MemorySegment socket, MemorySegment source_object, MemorySegment error) {
        var mh$ = g_socket_listener_add_socket$MH();
        try {
            return (int)mh$.invokeExact(listener, socket, source_object, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_add_address$MH() {
        return RuntimeHelper.requireNonNull(constants$779.g_socket_listener_add_address$MH,"g_socket_listener_add_address");
    }
    /**
     * {@snippet :
     * gboolean g_socket_listener_add_address(GSocketListener* listener, GSocketAddress* address, GSocketType type, GSocketProtocol protocol, GObject* source_object, GSocketAddress** effective_address, GError** error);
     * }
     */
    public static int g_socket_listener_add_address(MemorySegment listener, MemorySegment address, int type, int protocol, MemorySegment source_object, MemorySegment effective_address, MemorySegment error) {
        var mh$ = g_socket_listener_add_address$MH();
        try {
            return (int)mh$.invokeExact(listener, address, type, protocol, source_object, effective_address, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_add_inet_port$MH() {
        return RuntimeHelper.requireNonNull(constants$779.g_socket_listener_add_inet_port$MH,"g_socket_listener_add_inet_port");
    }
    /**
     * {@snippet :
     * gboolean g_socket_listener_add_inet_port(GSocketListener* listener, guint16 port, GObject* source_object, GError** error);
     * }
     */
    public static int g_socket_listener_add_inet_port(MemorySegment listener, short port, MemorySegment source_object, MemorySegment error) {
        var mh$ = g_socket_listener_add_inet_port$MH();
        try {
            return (int)mh$.invokeExact(listener, port, source_object, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_add_any_inet_port$MH() {
        return RuntimeHelper.requireNonNull(constants$779.g_socket_listener_add_any_inet_port$MH,"g_socket_listener_add_any_inet_port");
    }
    /**
     * {@snippet :
     * guint16 g_socket_listener_add_any_inet_port(GSocketListener* listener, GObject* source_object, GError** error);
     * }
     */
    public static short g_socket_listener_add_any_inet_port(MemorySegment listener, MemorySegment source_object, MemorySegment error) {
        var mh$ = g_socket_listener_add_any_inet_port$MH();
        try {
            return (short)mh$.invokeExact(listener, source_object, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_accept_socket$MH() {
        return RuntimeHelper.requireNonNull(constants$780.g_socket_listener_accept_socket$MH,"g_socket_listener_accept_socket");
    }
    /**
     * {@snippet :
     * GSocket* g_socket_listener_accept_socket(GSocketListener* listener, GObject** source_object, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_socket_listener_accept_socket(MemorySegment listener, MemorySegment source_object, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_listener_accept_socket$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(listener, source_object, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_accept_socket_async$MH() {
        return RuntimeHelper.requireNonNull(constants$780.g_socket_listener_accept_socket_async$MH,"g_socket_listener_accept_socket_async");
    }
    /**
     * {@snippet :
     * void g_socket_listener_accept_socket_async(GSocketListener* listener, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_socket_listener_accept_socket_async(MemorySegment listener, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_socket_listener_accept_socket_async$MH();
        try {
            mh$.invokeExact(listener, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_accept_socket_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$780.g_socket_listener_accept_socket_finish$MH,"g_socket_listener_accept_socket_finish");
    }
    /**
     * {@snippet :
     * GSocket* g_socket_listener_accept_socket_finish(GSocketListener* listener, GAsyncResult* result, GObject** source_object, GError** error);
     * }
     */
    public static MemorySegment g_socket_listener_accept_socket_finish(MemorySegment listener, MemorySegment result, MemorySegment source_object, MemorySegment error) {
        var mh$ = g_socket_listener_accept_socket_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(listener, result, source_object, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_accept$MH() {
        return RuntimeHelper.requireNonNull(constants$780.g_socket_listener_accept$MH,"g_socket_listener_accept");
    }
    /**
     * {@snippet :
     * GSocketConnection* g_socket_listener_accept(GSocketListener* listener, GObject** source_object, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_socket_listener_accept(MemorySegment listener, MemorySegment source_object, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_listener_accept$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(listener, source_object, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_accept_async$MH() {
        return RuntimeHelper.requireNonNull(constants$780.g_socket_listener_accept_async$MH,"g_socket_listener_accept_async");
    }
    /**
     * {@snippet :
     * void g_socket_listener_accept_async(GSocketListener* listener, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_socket_listener_accept_async(MemorySegment listener, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_socket_listener_accept_async$MH();
        try {
            mh$.invokeExact(listener, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_accept_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$780.g_socket_listener_accept_finish$MH,"g_socket_listener_accept_finish");
    }
    /**
     * {@snippet :
     * GSocketConnection* g_socket_listener_accept_finish(GSocketListener* listener, GAsyncResult* result, GObject** source_object, GError** error);
     * }
     */
    public static MemorySegment g_socket_listener_accept_finish(MemorySegment listener, MemorySegment result, MemorySegment source_object, MemorySegment error) {
        var mh$ = g_socket_listener_accept_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(listener, result, source_object, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_close$MH() {
        return RuntimeHelper.requireNonNull(constants$781.g_socket_listener_close$MH,"g_socket_listener_close");
    }
    /**
     * {@snippet :
     * void g_socket_listener_close(GSocketListener* listener);
     * }
     */
    public static void g_socket_listener_close(MemorySegment listener) {
        var mh$ = g_socket_listener_close$MH();
        try {
            mh$.invokeExact(listener);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_service_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$781.g_socket_service_get_type$MH,"g_socket_service_get_type");
    }
    /**
     * {@snippet :
     * GType g_socket_service_get_type();
     * }
     */
    public static long g_socket_service_get_type() {
        var mh$ = g_socket_service_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_service_new$MH() {
        return RuntimeHelper.requireNonNull(constants$781.g_socket_service_new$MH,"g_socket_service_new");
    }
    /**
     * {@snippet :
     * GSocketService* g_socket_service_new();
     * }
     */
    public static MemorySegment g_socket_service_new() {
        var mh$ = g_socket_service_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_service_start$MH() {
        return RuntimeHelper.requireNonNull(constants$781.g_socket_service_start$MH,"g_socket_service_start");
    }
    /**
     * {@snippet :
     * void g_socket_service_start(GSocketService* service);
     * }
     */
    public static void g_socket_service_start(MemorySegment service) {
        var mh$ = g_socket_service_start$MH();
        try {
            mh$.invokeExact(service);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_service_stop$MH() {
        return RuntimeHelper.requireNonNull(constants$781.g_socket_service_stop$MH,"g_socket_service_stop");
    }
    /**
     * {@snippet :
     * void g_socket_service_stop(GSocketService* service);
     * }
     */
    public static void g_socket_service_stop(MemorySegment service) {
        var mh$ = g_socket_service_stop$MH();
        try {
            mh$.invokeExact(service);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_service_is_active$MH() {
        return RuntimeHelper.requireNonNull(constants$781.g_socket_service_is_active$MH,"g_socket_service_is_active");
    }
    /**
     * {@snippet :
     * gboolean g_socket_service_is_active(GSocketService* service);
     * }
     */
    public static int g_socket_service_is_active(MemorySegment service) {
        var mh$ = g_socket_service_is_active$MH();
        try {
            return (int)mh$.invokeExact(service);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$782.g_srv_target_get_type$MH,"g_srv_target_get_type");
    }
    /**
     * {@snippet :
     * GType g_srv_target_get_type();
     * }
     */
    public static long g_srv_target_get_type() {
        var mh$ = g_srv_target_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_new$MH() {
        return RuntimeHelper.requireNonNull(constants$782.g_srv_target_new$MH,"g_srv_target_new");
    }
    /**
     * {@snippet :
     * GSrvTarget* g_srv_target_new(const gchar* hostname, guint16 port, guint16 priority, guint16 weight);
     * }
     */
    public static MemorySegment g_srv_target_new(MemorySegment hostname, short port, short priority, short weight) {
        var mh$ = g_srv_target_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hostname, port, priority, weight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$782.g_srv_target_copy$MH,"g_srv_target_copy");
    }
    /**
     * {@snippet :
     * GSrvTarget* g_srv_target_copy(GSrvTarget* target);
     * }
     */
    public static MemorySegment g_srv_target_copy(MemorySegment target) {
        var mh$ = g_srv_target_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_free$MH() {
        return RuntimeHelper.requireNonNull(constants$782.g_srv_target_free$MH,"g_srv_target_free");
    }
    /**
     * {@snippet :
     * void g_srv_target_free(GSrvTarget* target);
     * }
     */
    public static void g_srv_target_free(MemorySegment target) {
        var mh$ = g_srv_target_free$MH();
        try {
            mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_get_hostname$MH() {
        return RuntimeHelper.requireNonNull(constants$782.g_srv_target_get_hostname$MH,"g_srv_target_get_hostname");
    }
    /**
     * {@snippet :
     * const gchar* g_srv_target_get_hostname(GSrvTarget* target);
     * }
     */
    public static MemorySegment g_srv_target_get_hostname(MemorySegment target) {
        var mh$ = g_srv_target_get_hostname$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_get_port$MH() {
        return RuntimeHelper.requireNonNull(constants$782.g_srv_target_get_port$MH,"g_srv_target_get_port");
    }
    /**
     * {@snippet :
     * guint16 g_srv_target_get_port(GSrvTarget* target);
     * }
     */
    public static short g_srv_target_get_port(MemorySegment target) {
        var mh$ = g_srv_target_get_port$MH();
        try {
            return (short)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_get_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$783.g_srv_target_get_priority$MH,"g_srv_target_get_priority");
    }
    /**
     * {@snippet :
     * guint16 g_srv_target_get_priority(GSrvTarget* target);
     * }
     */
    public static short g_srv_target_get_priority(MemorySegment target) {
        var mh$ = g_srv_target_get_priority$MH();
        try {
            return (short)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_get_weight$MH() {
        return RuntimeHelper.requireNonNull(constants$783.g_srv_target_get_weight$MH,"g_srv_target_get_weight");
    }
    /**
     * {@snippet :
     * guint16 g_srv_target_get_weight(GSrvTarget* target);
     * }
     */
    public static short g_srv_target_get_weight(MemorySegment target) {
        var mh$ = g_srv_target_get_weight$MH();
        try {
            return (short)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_list_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$783.g_srv_target_list_sort$MH,"g_srv_target_list_sort");
    }
    /**
     * {@snippet :
     * GList* g_srv_target_list_sort(GList* targets);
     * }
     */
    public static MemorySegment g_srv_target_list_sort(MemorySegment targets) {
        var mh$ = g_srv_target_list_sort$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$783.g_subprocess_get_type$MH,"g_subprocess_get_type");
    }
    /**
     * {@snippet :
     * GType g_subprocess_get_type();
     * }
     */
    public static long g_subprocess_get_type() {
        var mh$ = g_subprocess_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_new$MH() {
        return RuntimeHelper.requireNonNull(constants$783.g_subprocess_new$MH,"g_subprocess_new");
    }
    /**
     * {@snippet :
     * GSubprocess* g_subprocess_new(GSubprocessFlags flags, GError** error, const gchar* argv0,...);
     * }
     */
    public static MemorySegment g_subprocess_new(int flags, MemorySegment error, MemorySegment argv0, Object... x3) {
        var mh$ = g_subprocess_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags, error, argv0, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$783.g_subprocess_newv$MH,"g_subprocess_newv");
    }
    /**
     * {@snippet :
     * GSubprocess* g_subprocess_newv(const gchar** argv, GSubprocessFlags flags, GError** error);
     * }
     */
    public static MemorySegment g_subprocess_newv(MemorySegment argv, int flags, MemorySegment error) {
        var mh$ = g_subprocess_newv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(argv, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_stdin_pipe$MH() {
        return RuntimeHelper.requireNonNull(constants$784.g_subprocess_get_stdin_pipe$MH,"g_subprocess_get_stdin_pipe");
    }
    /**
     * {@snippet :
     * GOutputStream* g_subprocess_get_stdin_pipe(GSubprocess* subprocess);
     * }
     */
    public static MemorySegment g_subprocess_get_stdin_pipe(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_stdin_pipe$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_stdout_pipe$MH() {
        return RuntimeHelper.requireNonNull(constants$784.g_subprocess_get_stdout_pipe$MH,"g_subprocess_get_stdout_pipe");
    }
    /**
     * {@snippet :
     * GInputStream* g_subprocess_get_stdout_pipe(GSubprocess* subprocess);
     * }
     */
    public static MemorySegment g_subprocess_get_stdout_pipe(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_stdout_pipe$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_stderr_pipe$MH() {
        return RuntimeHelper.requireNonNull(constants$784.g_subprocess_get_stderr_pipe$MH,"g_subprocess_get_stderr_pipe");
    }
    /**
     * {@snippet :
     * GInputStream* g_subprocess_get_stderr_pipe(GSubprocess* subprocess);
     * }
     */
    public static MemorySegment g_subprocess_get_stderr_pipe(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_stderr_pipe$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_identifier$MH() {
        return RuntimeHelper.requireNonNull(constants$784.g_subprocess_get_identifier$MH,"g_subprocess_get_identifier");
    }
    /**
     * {@snippet :
     * const gchar* g_subprocess_get_identifier(GSubprocess* subprocess);
     * }
     */
    public static MemorySegment g_subprocess_get_identifier(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_identifier$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_send_signal$MH() {
        return RuntimeHelper.requireNonNull(constants$784.g_subprocess_send_signal$MH,"g_subprocess_send_signal");
    }
    /**
     * {@snippet :
     * void g_subprocess_send_signal(GSubprocess* subprocess, gint signal_num);
     * }
     */
    public static void g_subprocess_send_signal(MemorySegment subprocess, int signal_num) {
        var mh$ = g_subprocess_send_signal$MH();
        try {
            mh$.invokeExact(subprocess, signal_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_force_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$784.g_subprocess_force_exit$MH,"g_subprocess_force_exit");
    }
    /**
     * {@snippet :
     * void g_subprocess_force_exit(GSubprocess* subprocess);
     * }
     */
    public static void g_subprocess_force_exit(MemorySegment subprocess) {
        var mh$ = g_subprocess_force_exit$MH();
        try {
            mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$785.g_subprocess_wait$MH,"g_subprocess_wait");
    }
    /**
     * {@snippet :
     * gboolean g_subprocess_wait(GSubprocess* subprocess, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_subprocess_wait(MemorySegment subprocess, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_subprocess_wait$MH();
        try {
            return (int)mh$.invokeExact(subprocess, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_wait_async$MH() {
        return RuntimeHelper.requireNonNull(constants$785.g_subprocess_wait_async$MH,"g_subprocess_wait_async");
    }
    /**
     * {@snippet :
     * void g_subprocess_wait_async(GSubprocess* subprocess, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_subprocess_wait_async(MemorySegment subprocess, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_subprocess_wait_async$MH();
        try {
            mh$.invokeExact(subprocess, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_wait_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$785.g_subprocess_wait_finish$MH,"g_subprocess_wait_finish");
    }
    /**
     * {@snippet :
     * gboolean g_subprocess_wait_finish(GSubprocess* subprocess, GAsyncResult* result, GError** error);
     * }
     */
    public static int g_subprocess_wait_finish(MemorySegment subprocess, MemorySegment result, MemorySegment error) {
        var mh$ = g_subprocess_wait_finish$MH();
        try {
            return (int)mh$.invokeExact(subprocess, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_wait_check$MH() {
        return RuntimeHelper.requireNonNull(constants$785.g_subprocess_wait_check$MH,"g_subprocess_wait_check");
    }
    /**
     * {@snippet :
     * gboolean g_subprocess_wait_check(GSubprocess* subprocess, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_subprocess_wait_check(MemorySegment subprocess, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_subprocess_wait_check$MH();
        try {
            return (int)mh$.invokeExact(subprocess, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_wait_check_async$MH() {
        return RuntimeHelper.requireNonNull(constants$785.g_subprocess_wait_check_async$MH,"g_subprocess_wait_check_async");
    }
    /**
     * {@snippet :
     * void g_subprocess_wait_check_async(GSubprocess* subprocess, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_subprocess_wait_check_async(MemorySegment subprocess, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_subprocess_wait_check_async$MH();
        try {
            mh$.invokeExact(subprocess, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_wait_check_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$785.g_subprocess_wait_check_finish$MH,"g_subprocess_wait_check_finish");
    }
    /**
     * {@snippet :
     * gboolean g_subprocess_wait_check_finish(GSubprocess* subprocess, GAsyncResult* result, GError** error);
     * }
     */
    public static int g_subprocess_wait_check_finish(MemorySegment subprocess, MemorySegment result, MemorySegment error) {
        var mh$ = g_subprocess_wait_check_finish$MH();
        try {
            return (int)mh$.invokeExact(subprocess, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_status$MH() {
        return RuntimeHelper.requireNonNull(constants$786.g_subprocess_get_status$MH,"g_subprocess_get_status");
    }
    /**
     * {@snippet :
     * gint g_subprocess_get_status(GSubprocess* subprocess);
     * }
     */
    public static int g_subprocess_get_status(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_status$MH();
        try {
            return (int)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_successful$MH() {
        return RuntimeHelper.requireNonNull(constants$786.g_subprocess_get_successful$MH,"g_subprocess_get_successful");
    }
    /**
     * {@snippet :
     * gboolean g_subprocess_get_successful(GSubprocess* subprocess);
     * }
     */
    public static int g_subprocess_get_successful(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_successful$MH();
        try {
            return (int)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_if_exited$MH() {
        return RuntimeHelper.requireNonNull(constants$786.g_subprocess_get_if_exited$MH,"g_subprocess_get_if_exited");
    }
    /**
     * {@snippet :
     * gboolean g_subprocess_get_if_exited(GSubprocess* subprocess);
     * }
     */
    public static int g_subprocess_get_if_exited(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_if_exited$MH();
        try {
            return (int)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_exit_status$MH() {
        return RuntimeHelper.requireNonNull(constants$786.g_subprocess_get_exit_status$MH,"g_subprocess_get_exit_status");
    }
    /**
     * {@snippet :
     * gint g_subprocess_get_exit_status(GSubprocess* subprocess);
     * }
     */
    public static int g_subprocess_get_exit_status(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_exit_status$MH();
        try {
            return (int)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_if_signaled$MH() {
        return RuntimeHelper.requireNonNull(constants$786.g_subprocess_get_if_signaled$MH,"g_subprocess_get_if_signaled");
    }
    /**
     * {@snippet :
     * gboolean g_subprocess_get_if_signaled(GSubprocess* subprocess);
     * }
     */
    public static int g_subprocess_get_if_signaled(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_if_signaled$MH();
        try {
            return (int)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_term_sig$MH() {
        return RuntimeHelper.requireNonNull(constants$786.g_subprocess_get_term_sig$MH,"g_subprocess_get_term_sig");
    }
    /**
     * {@snippet :
     * gint g_subprocess_get_term_sig(GSubprocess* subprocess);
     * }
     */
    public static int g_subprocess_get_term_sig(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_term_sig$MH();
        try {
            return (int)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_communicate$MH() {
        return RuntimeHelper.requireNonNull(constants$787.g_subprocess_communicate$MH,"g_subprocess_communicate");
    }
    /**
     * {@snippet :
     * gboolean g_subprocess_communicate(GSubprocess* subprocess, GBytes* stdin_buf, GCancellable* cancellable, GBytes** stdout_buf, GBytes** stderr_buf, GError** error);
     * }
     */
    public static int g_subprocess_communicate(MemorySegment subprocess, MemorySegment stdin_buf, MemorySegment cancellable, MemorySegment stdout_buf, MemorySegment stderr_buf, MemorySegment error) {
        var mh$ = g_subprocess_communicate$MH();
        try {
            return (int)mh$.invokeExact(subprocess, stdin_buf, cancellable, stdout_buf, stderr_buf, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_communicate_async$MH() {
        return RuntimeHelper.requireNonNull(constants$787.g_subprocess_communicate_async$MH,"g_subprocess_communicate_async");
    }
    /**
     * {@snippet :
     * void g_subprocess_communicate_async(GSubprocess* subprocess, GBytes* stdin_buf, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_subprocess_communicate_async(MemorySegment subprocess, MemorySegment stdin_buf, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_subprocess_communicate_async$MH();
        try {
            mh$.invokeExact(subprocess, stdin_buf, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_communicate_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$787.g_subprocess_communicate_finish$MH,"g_subprocess_communicate_finish");
    }
    /**
     * {@snippet :
     * gboolean g_subprocess_communicate_finish(GSubprocess* subprocess, GAsyncResult* result, GBytes** stdout_buf, GBytes** stderr_buf, GError** error);
     * }
     */
    public static int g_subprocess_communicate_finish(MemorySegment subprocess, MemorySegment result, MemorySegment stdout_buf, MemorySegment stderr_buf, MemorySegment error) {
        var mh$ = g_subprocess_communicate_finish$MH();
        try {
            return (int)mh$.invokeExact(subprocess, result, stdout_buf, stderr_buf, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_communicate_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$787.g_subprocess_communicate_utf8$MH,"g_subprocess_communicate_utf8");
    }
    /**
     * {@snippet :
     * gboolean g_subprocess_communicate_utf8(GSubprocess* subprocess, char* stdin_buf, GCancellable* cancellable, char** stdout_buf, char** stderr_buf, GError** error);
     * }
     */
    public static int g_subprocess_communicate_utf8(MemorySegment subprocess, MemorySegment stdin_buf, MemorySegment cancellable, MemorySegment stdout_buf, MemorySegment stderr_buf, MemorySegment error) {
        var mh$ = g_subprocess_communicate_utf8$MH();
        try {
            return (int)mh$.invokeExact(subprocess, stdin_buf, cancellable, stdout_buf, stderr_buf, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_communicate_utf8_async$MH() {
        return RuntimeHelper.requireNonNull(constants$787.g_subprocess_communicate_utf8_async$MH,"g_subprocess_communicate_utf8_async");
    }
    /**
     * {@snippet :
     * void g_subprocess_communicate_utf8_async(GSubprocess* subprocess, char* stdin_buf, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_subprocess_communicate_utf8_async(MemorySegment subprocess, MemorySegment stdin_buf, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_subprocess_communicate_utf8_async$MH();
        try {
            mh$.invokeExact(subprocess, stdin_buf, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_communicate_utf8_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$787.g_subprocess_communicate_utf8_finish$MH,"g_subprocess_communicate_utf8_finish");
    }
    /**
     * {@snippet :
     * gboolean g_subprocess_communicate_utf8_finish(GSubprocess* subprocess, GAsyncResult* result, char** stdout_buf, char** stderr_buf, GError** error);
     * }
     */
    public static int g_subprocess_communicate_utf8_finish(MemorySegment subprocess, MemorySegment result, MemorySegment stdout_buf, MemorySegment stderr_buf, MemorySegment error) {
        var mh$ = g_subprocess_communicate_utf8_finish$MH();
        try {
            return (int)mh$.invokeExact(subprocess, result, stdout_buf, stderr_buf, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$788.g_subprocess_launcher_get_type$MH,"g_subprocess_launcher_get_type");
    }
    /**
     * {@snippet :
     * GType g_subprocess_launcher_get_type();
     * }
     */
    public static long g_subprocess_launcher_get_type() {
        var mh$ = g_subprocess_launcher_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_new$MH() {
        return RuntimeHelper.requireNonNull(constants$788.g_subprocess_launcher_new$MH,"g_subprocess_launcher_new");
    }
    /**
     * {@snippet :
     * GSubprocessLauncher* g_subprocess_launcher_new(GSubprocessFlags flags);
     * }
     */
    public static MemorySegment g_subprocess_launcher_new(int flags) {
        var mh$ = g_subprocess_launcher_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_spawn$MH() {
        return RuntimeHelper.requireNonNull(constants$788.g_subprocess_launcher_spawn$MH,"g_subprocess_launcher_spawn");
    }
    /**
     * {@snippet :
     * GSubprocess* g_subprocess_launcher_spawn(GSubprocessLauncher* self, GError** error, const gchar* argv0,...);
     * }
     */
    public static MemorySegment g_subprocess_launcher_spawn(MemorySegment self, MemorySegment error, MemorySegment argv0, Object... x3) {
        var mh$ = g_subprocess_launcher_spawn$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, error, argv0, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_spawnv$MH() {
        return RuntimeHelper.requireNonNull(constants$788.g_subprocess_launcher_spawnv$MH,"g_subprocess_launcher_spawnv");
    }
    /**
     * {@snippet :
     * GSubprocess* g_subprocess_launcher_spawnv(GSubprocessLauncher* self, const gchar** argv, GError** error);
     * }
     */
    public static MemorySegment g_subprocess_launcher_spawnv(MemorySegment self, MemorySegment argv, MemorySegment error) {
        var mh$ = g_subprocess_launcher_spawnv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, argv, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_environ$MH() {
        return RuntimeHelper.requireNonNull(constants$788.g_subprocess_launcher_set_environ$MH,"g_subprocess_launcher_set_environ");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_set_environ(GSubprocessLauncher* self, gchar** env);
     * }
     */
    public static void g_subprocess_launcher_set_environ(MemorySegment self, MemorySegment env) {
        var mh$ = g_subprocess_launcher_set_environ$MH();
        try {
            mh$.invokeExact(self, env);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_setenv$MH() {
        return RuntimeHelper.requireNonNull(constants$788.g_subprocess_launcher_setenv$MH,"g_subprocess_launcher_setenv");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_setenv(GSubprocessLauncher* self, const gchar* variable, const gchar* value, gboolean overwrite);
     * }
     */
    public static void g_subprocess_launcher_setenv(MemorySegment self, MemorySegment variable, MemorySegment value, int overwrite) {
        var mh$ = g_subprocess_launcher_setenv$MH();
        try {
            mh$.invokeExact(self, variable, value, overwrite);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_unsetenv$MH() {
        return RuntimeHelper.requireNonNull(constants$789.g_subprocess_launcher_unsetenv$MH,"g_subprocess_launcher_unsetenv");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_unsetenv(GSubprocessLauncher* self, const gchar* variable);
     * }
     */
    public static void g_subprocess_launcher_unsetenv(MemorySegment self, MemorySegment variable) {
        var mh$ = g_subprocess_launcher_unsetenv$MH();
        try {
            mh$.invokeExact(self, variable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_getenv$MH() {
        return RuntimeHelper.requireNonNull(constants$789.g_subprocess_launcher_getenv$MH,"g_subprocess_launcher_getenv");
    }
    /**
     * {@snippet :
     * const gchar* g_subprocess_launcher_getenv(GSubprocessLauncher* self, const gchar* variable);
     * }
     */
    public static MemorySegment g_subprocess_launcher_getenv(MemorySegment self, MemorySegment variable) {
        var mh$ = g_subprocess_launcher_getenv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, variable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_cwd$MH() {
        return RuntimeHelper.requireNonNull(constants$789.g_subprocess_launcher_set_cwd$MH,"g_subprocess_launcher_set_cwd");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_set_cwd(GSubprocessLauncher* self, const gchar* cwd);
     * }
     */
    public static void g_subprocess_launcher_set_cwd(MemorySegment self, MemorySegment cwd) {
        var mh$ = g_subprocess_launcher_set_cwd$MH();
        try {
            mh$.invokeExact(self, cwd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$789.g_subprocess_launcher_set_flags$MH,"g_subprocess_launcher_set_flags");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_set_flags(GSubprocessLauncher* self, GSubprocessFlags flags);
     * }
     */
    public static void g_subprocess_launcher_set_flags(MemorySegment self, int flags) {
        var mh$ = g_subprocess_launcher_set_flags$MH();
        try {
            mh$.invokeExact(self, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_stdin_file_path$MH() {
        return RuntimeHelper.requireNonNull(constants$789.g_subprocess_launcher_set_stdin_file_path$MH,"g_subprocess_launcher_set_stdin_file_path");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_set_stdin_file_path(GSubprocessLauncher* self, const gchar* path);
     * }
     */
    public static void g_subprocess_launcher_set_stdin_file_path(MemorySegment self, MemorySegment path) {
        var mh$ = g_subprocess_launcher_set_stdin_file_path$MH();
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_take_stdin_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$789.g_subprocess_launcher_take_stdin_fd$MH,"g_subprocess_launcher_take_stdin_fd");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_take_stdin_fd(GSubprocessLauncher* self, gint fd);
     * }
     */
    public static void g_subprocess_launcher_take_stdin_fd(MemorySegment self, int fd) {
        var mh$ = g_subprocess_launcher_take_stdin_fd$MH();
        try {
            mh$.invokeExact(self, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_stdout_file_path$MH() {
        return RuntimeHelper.requireNonNull(constants$790.g_subprocess_launcher_set_stdout_file_path$MH,"g_subprocess_launcher_set_stdout_file_path");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_set_stdout_file_path(GSubprocessLauncher* self, const gchar* path);
     * }
     */
    public static void g_subprocess_launcher_set_stdout_file_path(MemorySegment self, MemorySegment path) {
        var mh$ = g_subprocess_launcher_set_stdout_file_path$MH();
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_take_stdout_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$790.g_subprocess_launcher_take_stdout_fd$MH,"g_subprocess_launcher_take_stdout_fd");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_take_stdout_fd(GSubprocessLauncher* self, gint fd);
     * }
     */
    public static void g_subprocess_launcher_take_stdout_fd(MemorySegment self, int fd) {
        var mh$ = g_subprocess_launcher_take_stdout_fd$MH();
        try {
            mh$.invokeExact(self, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_stderr_file_path$MH() {
        return RuntimeHelper.requireNonNull(constants$790.g_subprocess_launcher_set_stderr_file_path$MH,"g_subprocess_launcher_set_stderr_file_path");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_set_stderr_file_path(GSubprocessLauncher* self, const gchar* path);
     * }
     */
    public static void g_subprocess_launcher_set_stderr_file_path(MemorySegment self, MemorySegment path) {
        var mh$ = g_subprocess_launcher_set_stderr_file_path$MH();
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_take_stderr_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$790.g_subprocess_launcher_take_stderr_fd$MH,"g_subprocess_launcher_take_stderr_fd");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_take_stderr_fd(GSubprocessLauncher* self, gint fd);
     * }
     */
    public static void g_subprocess_launcher_take_stderr_fd(MemorySegment self, int fd) {
        var mh$ = g_subprocess_launcher_take_stderr_fd$MH();
        try {
            mh$.invokeExact(self, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_take_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$790.g_subprocess_launcher_take_fd$MH,"g_subprocess_launcher_take_fd");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_take_fd(GSubprocessLauncher* self, gint source_fd, gint target_fd);
     * }
     */
    public static void g_subprocess_launcher_take_fd(MemorySegment self, int source_fd, int target_fd) {
        var mh$ = g_subprocess_launcher_take_fd$MH();
        try {
            mh$.invokeExact(self, source_fd, target_fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_close$MH() {
        return RuntimeHelper.requireNonNull(constants$790.g_subprocess_launcher_close$MH,"g_subprocess_launcher_close");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_close(GSubprocessLauncher* self);
     * }
     */
    public static void g_subprocess_launcher_close(MemorySegment self) {
        var mh$ = g_subprocess_launcher_close$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_child_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$791.g_subprocess_launcher_set_child_setup$MH,"g_subprocess_launcher_set_child_setup");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_set_child_setup(GSubprocessLauncher* self, GSpawnChildSetupFunc child_setup, gpointer user_data, GDestroyNotify destroy_notify);
     * }
     */
    public static void g_subprocess_launcher_set_child_setup(MemorySegment self, MemorySegment child_setup, MemorySegment user_data, MemorySegment destroy_notify) {
        var mh$ = g_subprocess_launcher_set_child_setup$MH();
        try {
            mh$.invokeExact(self, child_setup, user_data, destroy_notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$791.g_task_get_type$MH,"g_task_get_type");
    }
    /**
     * {@snippet :
     * GType g_task_get_type();
     * }
     */
    public static long g_task_get_type() {
        var mh$ = g_task_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_new$MH() {
        return RuntimeHelper.requireNonNull(constants$791.g_task_new$MH,"g_task_new");
    }
    /**
     * {@snippet :
     * GTask* g_task_new(gpointer source_object, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer callback_data);
     * }
     */
    public static MemorySegment g_task_new(MemorySegment source_object, MemorySegment cancellable, MemorySegment callback, MemorySegment callback_data) {
        var mh$ = g_task_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source_object, cancellable, callback, callback_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_report_error$MH() {
        return RuntimeHelper.requireNonNull(constants$791.g_task_report_error$MH,"g_task_report_error");
    }
    /**
     * {@snippet :
     * void g_task_report_error(gpointer source_object, GAsyncReadyCallback callback, gpointer callback_data, gpointer source_tag, GError* error);
     * }
     */
    public static void g_task_report_error(MemorySegment source_object, MemorySegment callback, MemorySegment callback_data, MemorySegment source_tag, MemorySegment error) {
        var mh$ = g_task_report_error$MH();
        try {
            mh$.invokeExact(source_object, callback, callback_data, source_tag, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_report_new_error$MH() {
        return RuntimeHelper.requireNonNull(constants$791.g_task_report_new_error$MH,"g_task_report_new_error");
    }
    /**
     * {@snippet :
     * void g_task_report_new_error(gpointer source_object, GAsyncReadyCallback callback, gpointer callback_data, gpointer source_tag, GQuark domain, gint code, char* format,...);
     * }
     */
    public static void g_task_report_new_error(MemorySegment source_object, MemorySegment callback, MemorySegment callback_data, MemorySegment source_tag, int domain, int code, MemorySegment format, Object... x7) {
        var mh$ = g_task_report_new_error$MH();
        try {
            mh$.invokeExact(source_object, callback, callback_data, source_tag, domain, code, format, x7);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_task_data$MH() {
        return RuntimeHelper.requireNonNull(constants$791.g_task_set_task_data$MH,"g_task_set_task_data");
    }
    /**
     * {@snippet :
     * void g_task_set_task_data(GTask* task, gpointer task_data, GDestroyNotify task_data_destroy);
     * }
     */
    public static void g_task_set_task_data(MemorySegment task, MemorySegment task_data, MemorySegment task_data_destroy) {
        var mh$ = g_task_set_task_data$MH();
        try {
            mh$.invokeExact(task, task_data, task_data_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$792.g_task_set_priority$MH,"g_task_set_priority");
    }
    /**
     * {@snippet :
     * void g_task_set_priority(GTask* task, gint priority);
     * }
     */
    public static void g_task_set_priority(MemorySegment task, int priority) {
        var mh$ = g_task_set_priority$MH();
        try {
            mh$.invokeExact(task, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_check_cancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$792.g_task_set_check_cancellable$MH,"g_task_set_check_cancellable");
    }
    /**
     * {@snippet :
     * void g_task_set_check_cancellable(GTask* task, gboolean check_cancellable);
     * }
     */
    public static void g_task_set_check_cancellable(MemorySegment task, int check_cancellable) {
        var mh$ = g_task_set_check_cancellable$MH();
        try {
            mh$.invokeExact(task, check_cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_source_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$792.g_task_set_source_tag$MH,"g_task_set_source_tag");
    }
    /**
     * {@snippet :
     * void g_task_set_source_tag(GTask* task, gpointer source_tag);
     * }
     */
    public static void g_task_set_source_tag(MemorySegment task, MemorySegment source_tag) {
        var mh$ = g_task_set_source_tag$MH();
        try {
            mh$.invokeExact(task, source_tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$792.g_task_set_name$MH,"g_task_set_name");
    }
    /**
     * {@snippet :
     * void g_task_set_name(GTask* task, const gchar* name);
     * }
     */
    public static void g_task_set_name(MemorySegment task, MemorySegment name) {
        var mh$ = g_task_set_name$MH();
        try {
            mh$.invokeExact(task, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_static_name$MH() {
        return RuntimeHelper.requireNonNull(constants$792.g_task_set_static_name$MH,"g_task_set_static_name");
    }
    /**
     * {@snippet :
     * void g_task_set_static_name(GTask* task, const gchar* name);
     * }
     */
    public static void g_task_set_static_name(MemorySegment task, MemorySegment name) {
        var mh$ = g_task_set_static_name$MH();
        try {
            mh$.invokeExact(task, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_source_object$MH() {
        return RuntimeHelper.requireNonNull(constants$792.g_task_get_source_object$MH,"g_task_get_source_object");
    }
    /**
     * {@snippet :
     * gpointer g_task_get_source_object(GTask* task);
     * }
     */
    public static MemorySegment g_task_get_source_object(MemorySegment task) {
        var mh$ = g_task_get_source_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_task_data$MH() {
        return RuntimeHelper.requireNonNull(constants$793.g_task_get_task_data$MH,"g_task_get_task_data");
    }
    /**
     * {@snippet :
     * gpointer g_task_get_task_data(GTask* task);
     * }
     */
    public static MemorySegment g_task_get_task_data(MemorySegment task) {
        var mh$ = g_task_get_task_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$793.g_task_get_priority$MH,"g_task_get_priority");
    }
    /**
     * {@snippet :
     * gint g_task_get_priority(GTask* task);
     * }
     */
    public static int g_task_get_priority(MemorySegment task) {
        var mh$ = g_task_get_priority$MH();
        try {
            return (int)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_context$MH() {
        return RuntimeHelper.requireNonNull(constants$793.g_task_get_context$MH,"g_task_get_context");
    }
    /**
     * {@snippet :
     * GMainContext* g_task_get_context(GTask* task);
     * }
     */
    public static MemorySegment g_task_get_context(MemorySegment task) {
        var mh$ = g_task_get_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_cancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$793.g_task_get_cancellable$MH,"g_task_get_cancellable");
    }
    /**
     * {@snippet :
     * GCancellable* g_task_get_cancellable(GTask* task);
     * }
     */
    public static MemorySegment g_task_get_cancellable(MemorySegment task) {
        var mh$ = g_task_get_cancellable$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_check_cancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$793.g_task_get_check_cancellable$MH,"g_task_get_check_cancellable");
    }
    /**
     * {@snippet :
     * gboolean g_task_get_check_cancellable(GTask* task);
     * }
     */
    public static int g_task_get_check_cancellable(MemorySegment task) {
        var mh$ = g_task_get_check_cancellable$MH();
        try {
            return (int)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_source_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$793.g_task_get_source_tag$MH,"g_task_get_source_tag");
    }
    /**
     * {@snippet :
     * gpointer g_task_get_source_tag(GTask* task);
     * }
     */
    public static MemorySegment g_task_get_source_tag(MemorySegment task) {
        var mh$ = g_task_get_source_tag$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$794.g_task_get_name$MH,"g_task_get_name");
    }
    /**
     * {@snippet :
     * const gchar* g_task_get_name(GTask* task);
     * }
     */
    public static MemorySegment g_task_get_name(MemorySegment task) {
        var mh$ = g_task_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$794.g_task_is_valid$MH,"g_task_is_valid");
    }
    /**
     * {@snippet :
     * gboolean g_task_is_valid(gpointer result, gpointer source_object);
     * }
     */
    public static int g_task_is_valid(MemorySegment result, MemorySegment source_object) {
        var mh$ = g_task_is_valid$MH();
        try {
            return (int)mh$.invokeExact(result, source_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_run_in_thread$MH() {
        return RuntimeHelper.requireNonNull(constants$794.g_task_run_in_thread$MH,"g_task_run_in_thread");
    }
    /**
     * {@snippet :
     * void g_task_run_in_thread(GTask* task, GTaskThreadFunc task_func);
     * }
     */
    public static void g_task_run_in_thread(MemorySegment task, MemorySegment task_func) {
        var mh$ = g_task_run_in_thread$MH();
        try {
            mh$.invokeExact(task, task_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_run_in_thread_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$794.g_task_run_in_thread_sync$MH,"g_task_run_in_thread_sync");
    }
    /**
     * {@snippet :
     * void g_task_run_in_thread_sync(GTask* task, GTaskThreadFunc task_func);
     * }
     */
    public static void g_task_run_in_thread_sync(MemorySegment task, MemorySegment task_func) {
        var mh$ = g_task_run_in_thread_sync$MH();
        try {
            mh$.invokeExact(task, task_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_return_on_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$795.g_task_set_return_on_cancel$MH,"g_task_set_return_on_cancel");
    }
    /**
     * {@snippet :
     * gboolean g_task_set_return_on_cancel(GTask* task, gboolean return_on_cancel);
     * }
     */
    public static int g_task_set_return_on_cancel(MemorySegment task, int return_on_cancel) {
        var mh$ = g_task_set_return_on_cancel$MH();
        try {
            return (int)mh$.invokeExact(task, return_on_cancel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_return_on_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$795.g_task_get_return_on_cancel$MH,"g_task_get_return_on_cancel");
    }
    /**
     * {@snippet :
     * gboolean g_task_get_return_on_cancel(GTask* task);
     * }
     */
    public static int g_task_get_return_on_cancel(MemorySegment task) {
        var mh$ = g_task_get_return_on_cancel$MH();
        try {
            return (int)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_attach_source$MH() {
        return RuntimeHelper.requireNonNull(constants$795.g_task_attach_source$MH,"g_task_attach_source");
    }
    /**
     * {@snippet :
     * void g_task_attach_source(GTask* task, GSource* source, GSourceFunc callback);
     * }
     */
    public static void g_task_attach_source(MemorySegment task, MemorySegment source, MemorySegment callback) {
        var mh$ = g_task_attach_source$MH();
        try {
            mh$.invokeExact(task, source, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$795.g_task_return_pointer$MH,"g_task_return_pointer");
    }
    /**
     * {@snippet :
     * void g_task_return_pointer(GTask* task, gpointer result, GDestroyNotify result_destroy);
     * }
     */
    public static void g_task_return_pointer(MemorySegment task, MemorySegment result, MemorySegment result_destroy) {
        var mh$ = g_task_return_pointer$MH();
        try {
            mh$.invokeExact(task, result, result_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$795.g_task_return_boolean$MH,"g_task_return_boolean");
    }
    /**
     * {@snippet :
     * void g_task_return_boolean(GTask* task, gboolean result);
     * }
     */
    public static void g_task_return_boolean(MemorySegment task, int result) {
        var mh$ = g_task_return_boolean$MH();
        try {
            mh$.invokeExact(task, result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_int$MH() {
        return RuntimeHelper.requireNonNull(constants$795.g_task_return_int$MH,"g_task_return_int");
    }
    /**
     * {@snippet :
     * void g_task_return_int(GTask* task, gssize result);
     * }
     */
    public static void g_task_return_int(MemorySegment task, long result) {
        var mh$ = g_task_return_int$MH();
        try {
            mh$.invokeExact(task, result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_error$MH() {
        return RuntimeHelper.requireNonNull(constants$796.g_task_return_error$MH,"g_task_return_error");
    }
    /**
     * {@snippet :
     * void g_task_return_error(GTask* task, GError* error);
     * }
     */
    public static void g_task_return_error(MemorySegment task, MemorySegment error) {
        var mh$ = g_task_return_error$MH();
        try {
            mh$.invokeExact(task, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_new_error$MH() {
        return RuntimeHelper.requireNonNull(constants$796.g_task_return_new_error$MH,"g_task_return_new_error");
    }
    /**
     * {@snippet :
     * void g_task_return_new_error(GTask* task, GQuark domain, gint code, char* format,...);
     * }
     */
    public static void g_task_return_new_error(MemorySegment task, int domain, int code, MemorySegment format, Object... x4) {
        var mh$ = g_task_return_new_error$MH();
        try {
            mh$.invokeExact(task, domain, code, format, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_value$MH() {
        return RuntimeHelper.requireNonNull(constants$796.g_task_return_value$MH,"g_task_return_value");
    }
    /**
     * {@snippet :
     * void g_task_return_value(GTask* task, GValue* result);
     * }
     */
    public static void g_task_return_value(MemorySegment task, MemorySegment result) {
        var mh$ = g_task_return_value$MH();
        try {
            mh$.invokeExact(task, result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_error_if_cancelled$MH() {
        return RuntimeHelper.requireNonNull(constants$796.g_task_return_error_if_cancelled$MH,"g_task_return_error_if_cancelled");
    }
    /**
     * {@snippet :
     * gboolean g_task_return_error_if_cancelled(GTask* task);
     * }
     */
    public static int g_task_return_error_if_cancelled(MemorySegment task) {
        var mh$ = g_task_return_error_if_cancelled$MH();
        try {
            return (int)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_propagate_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$796.g_task_propagate_pointer$MH,"g_task_propagate_pointer");
    }
    /**
     * {@snippet :
     * gpointer g_task_propagate_pointer(GTask* task, GError** error);
     * }
     */
    public static MemorySegment g_task_propagate_pointer(MemorySegment task, MemorySegment error) {
        var mh$ = g_task_propagate_pointer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(task, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_propagate_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$796.g_task_propagate_boolean$MH,"g_task_propagate_boolean");
    }
    /**
     * {@snippet :
     * gboolean g_task_propagate_boolean(GTask* task, GError** error);
     * }
     */
    public static int g_task_propagate_boolean(MemorySegment task, MemorySegment error) {
        var mh$ = g_task_propagate_boolean$MH();
        try {
            return (int)mh$.invokeExact(task, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_propagate_int$MH() {
        return RuntimeHelper.requireNonNull(constants$797.g_task_propagate_int$MH,"g_task_propagate_int");
    }
    /**
     * {@snippet :
     * gssize g_task_propagate_int(GTask* task, GError** error);
     * }
     */
    public static long g_task_propagate_int(MemorySegment task, MemorySegment error) {
        var mh$ = g_task_propagate_int$MH();
        try {
            return (long)mh$.invokeExact(task, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_propagate_value$MH() {
        return RuntimeHelper.requireNonNull(constants$797.g_task_propagate_value$MH,"g_task_propagate_value");
    }
    /**
     * {@snippet :
     * gboolean g_task_propagate_value(GTask* task, GValue* value, GError** error);
     * }
     */
    public static int g_task_propagate_value(MemorySegment task, MemorySegment value, MemorySegment error) {
        var mh$ = g_task_propagate_value$MH();
        try {
            return (int)mh$.invokeExact(task, value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_had_error$MH() {
        return RuntimeHelper.requireNonNull(constants$797.g_task_had_error$MH,"g_task_had_error");
    }
    /**
     * {@snippet :
     * gboolean g_task_had_error(GTask* task);
     * }
     */
    public static int g_task_had_error(MemorySegment task) {
        var mh$ = g_task_had_error$MH();
        try {
            return (int)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_completed$MH() {
        return RuntimeHelper.requireNonNull(constants$797.g_task_get_completed$MH,"g_task_get_completed");
    }
    /**
     * {@snippet :
     * gboolean g_task_get_completed(GTask* task);
     * }
     */
    public static int g_task_get_completed(MemorySegment task) {
        var mh$ = g_task_get_completed$MH();
        try {
            return (int)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tcp_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$797.g_tcp_connection_get_type$MH,"g_tcp_connection_get_type");
    }
    /**
     * {@snippet :
     * GType g_tcp_connection_get_type();
     * }
     */
    public static long g_tcp_connection_get_type() {
        var mh$ = g_tcp_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tcp_connection_set_graceful_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$797.g_tcp_connection_set_graceful_disconnect$MH,"g_tcp_connection_set_graceful_disconnect");
    }
    /**
     * {@snippet :
     * void g_tcp_connection_set_graceful_disconnect(GTcpConnection* connection, gboolean graceful_disconnect);
     * }
     */
    public static void g_tcp_connection_set_graceful_disconnect(MemorySegment connection, int graceful_disconnect) {
        var mh$ = g_tcp_connection_set_graceful_disconnect$MH();
        try {
            mh$.invokeExact(connection, graceful_disconnect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tcp_connection_get_graceful_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$798.g_tcp_connection_get_graceful_disconnect$MH,"g_tcp_connection_get_graceful_disconnect");
    }
    /**
     * {@snippet :
     * gboolean g_tcp_connection_get_graceful_disconnect(GTcpConnection* connection);
     * }
     */
    public static int g_tcp_connection_get_graceful_disconnect(MemorySegment connection) {
        var mh$ = g_tcp_connection_get_graceful_disconnect$MH();
        try {
            return (int)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tcp_wrapper_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$798.g_tcp_wrapper_connection_get_type$MH,"g_tcp_wrapper_connection_get_type");
    }
    /**
     * {@snippet :
     * GType g_tcp_wrapper_connection_get_type();
     * }
     */
    public static long g_tcp_wrapper_connection_get_type() {
        var mh$ = g_tcp_wrapper_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tcp_wrapper_connection_new$MH() {
        return RuntimeHelper.requireNonNull(constants$798.g_tcp_wrapper_connection_new$MH,"g_tcp_wrapper_connection_new");
    }
    /**
     * {@snippet :
     * GSocketConnection* g_tcp_wrapper_connection_new(GIOStream* base_io_stream, GSocket* socket);
     * }
     */
    public static MemorySegment g_tcp_wrapper_connection_new(MemorySegment base_io_stream, MemorySegment socket) {
        var mh$ = g_tcp_wrapper_connection_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(base_io_stream, socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tcp_wrapper_connection_get_base_io_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$798.g_tcp_wrapper_connection_get_base_io_stream$MH,"g_tcp_wrapper_connection_get_base_io_stream");
    }
    /**
     * {@snippet :
     * GIOStream* g_tcp_wrapper_connection_get_base_io_stream(GTcpWrapperConnection* conn);
     * }
     */
    public static MemorySegment g_tcp_wrapper_connection_get_base_io_stream(MemorySegment conn) {
        var mh$ = g_tcp_wrapper_connection_get_base_io_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$798.g_test_dbus_get_type$MH,"g_test_dbus_get_type");
    }
    /**
     * {@snippet :
     * GType g_test_dbus_get_type();
     * }
     */
    public static long g_test_dbus_get_type() {
        var mh$ = g_test_dbus_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_new$MH() {
        return RuntimeHelper.requireNonNull(constants$798.g_test_dbus_new$MH,"g_test_dbus_new");
    }
    /**
     * {@snippet :
     * GTestDBus* g_test_dbus_new(GTestDBusFlags flags);
     * }
     */
    public static MemorySegment g_test_dbus_new(int flags) {
        var mh$ = g_test_dbus_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$799.g_test_dbus_get_flags$MH,"g_test_dbus_get_flags");
    }
    /**
     * {@snippet :
     * GTestDBusFlags g_test_dbus_get_flags(GTestDBus* self);
     * }
     */
    public static int g_test_dbus_get_flags(MemorySegment self) {
        var mh$ = g_test_dbus_get_flags$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_get_bus_address$MH() {
        return RuntimeHelper.requireNonNull(constants$799.g_test_dbus_get_bus_address$MH,"g_test_dbus_get_bus_address");
    }
    /**
     * {@snippet :
     * const gchar* g_test_dbus_get_bus_address(GTestDBus* self);
     * }
     */
    public static MemorySegment g_test_dbus_get_bus_address(MemorySegment self) {
        var mh$ = g_test_dbus_get_bus_address$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_add_service_dir$MH() {
        return RuntimeHelper.requireNonNull(constants$799.g_test_dbus_add_service_dir$MH,"g_test_dbus_add_service_dir");
    }
    /**
     * {@snippet :
     * void g_test_dbus_add_service_dir(GTestDBus* self, const gchar* path);
     * }
     */
    public static void g_test_dbus_add_service_dir(MemorySegment self, MemorySegment path) {
        var mh$ = g_test_dbus_add_service_dir$MH();
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_up$MH() {
        return RuntimeHelper.requireNonNull(constants$799.g_test_dbus_up$MH,"g_test_dbus_up");
    }
    /**
     * {@snippet :
     * void g_test_dbus_up(GTestDBus* self);
     * }
     */
    public static void g_test_dbus_up(MemorySegment self) {
        var mh$ = g_test_dbus_up$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_stop$MH() {
        return RuntimeHelper.requireNonNull(constants$799.g_test_dbus_stop$MH,"g_test_dbus_stop");
    }
    /**
     * {@snippet :
     * void g_test_dbus_stop(GTestDBus* self);
     * }
     */
    public static void g_test_dbus_stop(MemorySegment self) {
        var mh$ = g_test_dbus_stop$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_down$MH() {
        return RuntimeHelper.requireNonNull(constants$799.g_test_dbus_down$MH,"g_test_dbus_down");
    }
    /**
     * {@snippet :
     * void g_test_dbus_down(GTestDBus* self);
     * }
     */
    public static void g_test_dbus_down(MemorySegment self) {
        var mh$ = g_test_dbus_down$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_unset$MH() {
        return RuntimeHelper.requireNonNull(constants$800.g_test_dbus_unset$MH,"g_test_dbus_unset");
    }
    /**
     * {@snippet :
     * void g_test_dbus_unset();
     * }
     */
    public static void g_test_dbus_unset() {
        var mh$ = g_test_dbus_unset$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$800.g_themed_icon_get_type$MH,"g_themed_icon_get_type");
    }
    /**
     * {@snippet :
     * GType g_themed_icon_get_type();
     * }
     */
    public static long g_themed_icon_get_type() {
        var mh$ = g_themed_icon_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_new$MH() {
        return RuntimeHelper.requireNonNull(constants$800.g_themed_icon_new$MH,"g_themed_icon_new");
    }
    /**
     * {@snippet :
     * GIcon* g_themed_icon_new(char* iconname);
     * }
     */
    public static MemorySegment g_themed_icon_new(MemorySegment iconname) {
        var mh$ = g_themed_icon_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iconname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_new_with_default_fallbacks$MH() {
        return RuntimeHelper.requireNonNull(constants$800.g_themed_icon_new_with_default_fallbacks$MH,"g_themed_icon_new_with_default_fallbacks");
    }
    /**
     * {@snippet :
     * GIcon* g_themed_icon_new_with_default_fallbacks(char* iconname);
     * }
     */
    public static MemorySegment g_themed_icon_new_with_default_fallbacks(MemorySegment iconname) {
        var mh$ = g_themed_icon_new_with_default_fallbacks$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iconname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_new_from_names$MH() {
        return RuntimeHelper.requireNonNull(constants$800.g_themed_icon_new_from_names$MH,"g_themed_icon_new_from_names");
    }
    /**
     * {@snippet :
     * GIcon* g_themed_icon_new_from_names(char** iconnames, int len);
     * }
     */
    public static MemorySegment g_themed_icon_new_from_names(MemorySegment iconnames, int len) {
        var mh$ = g_themed_icon_new_from_names$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iconnames, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_prepend_name$MH() {
        return RuntimeHelper.requireNonNull(constants$800.g_themed_icon_prepend_name$MH,"g_themed_icon_prepend_name");
    }
    /**
     * {@snippet :
     * void g_themed_icon_prepend_name(GThemedIcon* icon, char* iconname);
     * }
     */
    public static void g_themed_icon_prepend_name(MemorySegment icon, MemorySegment iconname) {
        var mh$ = g_themed_icon_prepend_name$MH();
        try {
            mh$.invokeExact(icon, iconname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_append_name$MH() {
        return RuntimeHelper.requireNonNull(constants$801.g_themed_icon_append_name$MH,"g_themed_icon_append_name");
    }
    /**
     * {@snippet :
     * void g_themed_icon_append_name(GThemedIcon* icon, char* iconname);
     * }
     */
    public static void g_themed_icon_append_name(MemorySegment icon, MemorySegment iconname) {
        var mh$ = g_themed_icon_append_name$MH();
        try {
            mh$.invokeExact(icon, iconname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_get_names$MH() {
        return RuntimeHelper.requireNonNull(constants$801.g_themed_icon_get_names$MH,"g_themed_icon_get_names");
    }
    /**
     * {@snippet :
     * const gchar** g_themed_icon_get_names(GThemedIcon* icon);
     * }
     */
    public static MemorySegment g_themed_icon_get_names(MemorySegment icon) {
        var mh$ = g_themed_icon_get_names$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_threaded_socket_service_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$801.g_threaded_socket_service_get_type$MH,"g_threaded_socket_service_get_type");
    }
    /**
     * {@snippet :
     * GType g_threaded_socket_service_get_type();
     * }
     */
    public static long g_threaded_socket_service_get_type() {
        var mh$ = g_threaded_socket_service_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_threaded_socket_service_new$MH() {
        return RuntimeHelper.requireNonNull(constants$801.g_threaded_socket_service_new$MH,"g_threaded_socket_service_new");
    }
    /**
     * {@snippet :
     * GSocketService* g_threaded_socket_service_new(int max_threads);
     * }
     */
    public static MemorySegment g_threaded_socket_service_new(int max_threads) {
        var mh$ = g_threaded_socket_service_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(max_threads);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$801.g_tls_backend_get_type$MH,"g_tls_backend_get_type");
    }
    /**
     * {@snippet :
     * GType g_tls_backend_get_type();
     * }
     */
    public static long g_tls_backend_get_type() {
        var mh$ = g_tls_backend_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$801.g_tls_backend_get_default$MH,"g_tls_backend_get_default");
    }
    /**
     * {@snippet :
     * GTlsBackend* g_tls_backend_get_default();
     * }
     */
    public static MemorySegment g_tls_backend_get_default() {
        var mh$ = g_tls_backend_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_default_database$MH() {
        return RuntimeHelper.requireNonNull(constants$802.g_tls_backend_get_default_database$MH,"g_tls_backend_get_default_database");
    }
    /**
     * {@snippet :
     * GTlsDatabase* g_tls_backend_get_default_database(GTlsBackend* backend);
     * }
     */
    public static MemorySegment g_tls_backend_get_default_database(MemorySegment backend) {
        var mh$ = g_tls_backend_get_default_database$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_set_default_database$MH() {
        return RuntimeHelper.requireNonNull(constants$802.g_tls_backend_set_default_database$MH,"g_tls_backend_set_default_database");
    }
    /**
     * {@snippet :
     * void g_tls_backend_set_default_database(GTlsBackend* backend, GTlsDatabase* database);
     * }
     */
    public static void g_tls_backend_set_default_database(MemorySegment backend, MemorySegment database) {
        var mh$ = g_tls_backend_set_default_database$MH();
        try {
            mh$.invokeExact(backend, database);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_supports_tls$MH() {
        return RuntimeHelper.requireNonNull(constants$802.g_tls_backend_supports_tls$MH,"g_tls_backend_supports_tls");
    }
    /**
     * {@snippet :
     * gboolean g_tls_backend_supports_tls(GTlsBackend* backend);
     * }
     */
    public static int g_tls_backend_supports_tls(MemorySegment backend) {
        var mh$ = g_tls_backend_supports_tls$MH();
        try {
            return (int)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_supports_dtls$MH() {
        return RuntimeHelper.requireNonNull(constants$802.g_tls_backend_supports_dtls$MH,"g_tls_backend_supports_dtls");
    }
    /**
     * {@snippet :
     * gboolean g_tls_backend_supports_dtls(GTlsBackend* backend);
     * }
     */
    public static int g_tls_backend_supports_dtls(MemorySegment backend) {
        var mh$ = g_tls_backend_supports_dtls$MH();
        try {
            return (int)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_certificate_type$MH() {
        return RuntimeHelper.requireNonNull(constants$802.g_tls_backend_get_certificate_type$MH,"g_tls_backend_get_certificate_type");
    }
    /**
     * {@snippet :
     * GType g_tls_backend_get_certificate_type(GTlsBackend* backend);
     * }
     */
    public static long g_tls_backend_get_certificate_type(MemorySegment backend) {
        var mh$ = g_tls_backend_get_certificate_type$MH();
        try {
            return (long)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_client_connection_type$MH() {
        return RuntimeHelper.requireNonNull(constants$802.g_tls_backend_get_client_connection_type$MH,"g_tls_backend_get_client_connection_type");
    }
    /**
     * {@snippet :
     * GType g_tls_backend_get_client_connection_type(GTlsBackend* backend);
     * }
     */
    public static long g_tls_backend_get_client_connection_type(MemorySegment backend) {
        var mh$ = g_tls_backend_get_client_connection_type$MH();
        try {
            return (long)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_server_connection_type$MH() {
        return RuntimeHelper.requireNonNull(constants$803.g_tls_backend_get_server_connection_type$MH,"g_tls_backend_get_server_connection_type");
    }
    /**
     * {@snippet :
     * GType g_tls_backend_get_server_connection_type(GTlsBackend* backend);
     * }
     */
    public static long g_tls_backend_get_server_connection_type(MemorySegment backend) {
        var mh$ = g_tls_backend_get_server_connection_type$MH();
        try {
            return (long)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_file_database_type$MH() {
        return RuntimeHelper.requireNonNull(constants$803.g_tls_backend_get_file_database_type$MH,"g_tls_backend_get_file_database_type");
    }
    /**
     * {@snippet :
     * GType g_tls_backend_get_file_database_type(GTlsBackend* backend);
     * }
     */
    public static long g_tls_backend_get_file_database_type(MemorySegment backend) {
        var mh$ = g_tls_backend_get_file_database_type$MH();
        try {
            return (long)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_dtls_client_connection_type$MH() {
        return RuntimeHelper.requireNonNull(constants$803.g_tls_backend_get_dtls_client_connection_type$MH,"g_tls_backend_get_dtls_client_connection_type");
    }
    /**
     * {@snippet :
     * GType g_tls_backend_get_dtls_client_connection_type(GTlsBackend* backend);
     * }
     */
    public static long g_tls_backend_get_dtls_client_connection_type(MemorySegment backend) {
        var mh$ = g_tls_backend_get_dtls_client_connection_type$MH();
        try {
            return (long)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_dtls_server_connection_type$MH() {
        return RuntimeHelper.requireNonNull(constants$803.g_tls_backend_get_dtls_server_connection_type$MH,"g_tls_backend_get_dtls_server_connection_type");
    }
    /**
     * {@snippet :
     * GType g_tls_backend_get_dtls_server_connection_type(GTlsBackend* backend);
     * }
     */
    public static long g_tls_backend_get_dtls_server_connection_type(MemorySegment backend) {
        var mh$ = g_tls_backend_get_dtls_server_connection_type$MH();
        try {
            return (long)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$803.g_tls_certificate_get_type$MH,"g_tls_certificate_get_type");
    }
    /**
     * {@snippet :
     * GType g_tls_certificate_get_type();
     * }
     */
    public static long g_tls_certificate_get_type() {
        var mh$ = g_tls_certificate_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_new_from_pem$MH() {
        return RuntimeHelper.requireNonNull(constants$803.g_tls_certificate_new_from_pem$MH,"g_tls_certificate_new_from_pem");
    }
    /**
     * {@snippet :
     * GTlsCertificate* g_tls_certificate_new_from_pem(const gchar* data, gssize length, GError** error);
     * }
     */
    public static MemorySegment g_tls_certificate_new_from_pem(MemorySegment data, long length, MemorySegment error) {
        var mh$ = g_tls_certificate_new_from_pem$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(data, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_new_from_pkcs12$MH() {
        return RuntimeHelper.requireNonNull(constants$804.g_tls_certificate_new_from_pkcs12$MH,"g_tls_certificate_new_from_pkcs12");
    }
    /**
     * {@snippet :
     * GTlsCertificate* g_tls_certificate_new_from_pkcs12(const guint8* data, gsize length, const gchar* password, GError** error);
     * }
     */
    public static MemorySegment g_tls_certificate_new_from_pkcs12(MemorySegment data, long length, MemorySegment password, MemorySegment error) {
        var mh$ = g_tls_certificate_new_from_pkcs12$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(data, length, password, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_new_from_file_with_password$MH() {
        return RuntimeHelper.requireNonNull(constants$804.g_tls_certificate_new_from_file_with_password$MH,"g_tls_certificate_new_from_file_with_password");
    }
    /**
     * {@snippet :
     * GTlsCertificate* g_tls_certificate_new_from_file_with_password(const gchar* file, const gchar* password, GError** error);
     * }
     */
    public static MemorySegment g_tls_certificate_new_from_file_with_password(MemorySegment file, MemorySegment password, MemorySegment error) {
        var mh$ = g_tls_certificate_new_from_file_with_password$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, password, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$804.g_tls_certificate_new_from_file$MH,"g_tls_certificate_new_from_file");
    }
    /**
     * {@snippet :
     * GTlsCertificate* g_tls_certificate_new_from_file(const gchar* file, GError** error);
     * }
     */
    public static MemorySegment g_tls_certificate_new_from_file(MemorySegment file, MemorySegment error) {
        var mh$ = g_tls_certificate_new_from_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_new_from_files$MH() {
        return RuntimeHelper.requireNonNull(constants$804.g_tls_certificate_new_from_files$MH,"g_tls_certificate_new_from_files");
    }
    /**
     * {@snippet :
     * GTlsCertificate* g_tls_certificate_new_from_files(const gchar* cert_file, const gchar* key_file, GError** error);
     * }
     */
    public static MemorySegment g_tls_certificate_new_from_files(MemorySegment cert_file, MemorySegment key_file, MemorySegment error) {
        var mh$ = g_tls_certificate_new_from_files$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cert_file, key_file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_new_from_pkcs11_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$804.g_tls_certificate_new_from_pkcs11_uris$MH,"g_tls_certificate_new_from_pkcs11_uris");
    }
    /**
     * {@snippet :
     * GTlsCertificate* g_tls_certificate_new_from_pkcs11_uris(const gchar* pkcs11_uri, const gchar* private_key_pkcs11_uri, GError** error);
     * }
     */
    public static MemorySegment g_tls_certificate_new_from_pkcs11_uris(MemorySegment pkcs11_uri, MemorySegment private_key_pkcs11_uri, MemorySegment error) {
        var mh$ = g_tls_certificate_new_from_pkcs11_uris$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pkcs11_uri, private_key_pkcs11_uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_list_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$804.g_tls_certificate_list_new_from_file$MH,"g_tls_certificate_list_new_from_file");
    }
    /**
     * {@snippet :
     * GList* g_tls_certificate_list_new_from_file(const gchar* file, GError** error);
     * }
     */
    public static MemorySegment g_tls_certificate_list_new_from_file(MemorySegment file, MemorySegment error) {
        var mh$ = g_tls_certificate_list_new_from_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_issuer$MH() {
        return RuntimeHelper.requireNonNull(constants$805.g_tls_certificate_get_issuer$MH,"g_tls_certificate_get_issuer");
    }
    /**
     * {@snippet :
     * GTlsCertificate* g_tls_certificate_get_issuer(GTlsCertificate* cert);
     * }
     */
    public static MemorySegment g_tls_certificate_get_issuer(MemorySegment cert) {
        var mh$ = g_tls_certificate_get_issuer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$805.g_tls_certificate_verify$MH,"g_tls_certificate_verify");
    }
    /**
     * {@snippet :
     * GTlsCertificateFlags g_tls_certificate_verify(GTlsCertificate* cert, GSocketConnectable* identity, GTlsCertificate* trusted_ca);
     * }
     */
    public static int g_tls_certificate_verify(MemorySegment cert, MemorySegment identity, MemorySegment trusted_ca) {
        var mh$ = g_tls_certificate_verify$MH();
        try {
            return (int)mh$.invokeExact(cert, identity, trusted_ca);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_is_same$MH() {
        return RuntimeHelper.requireNonNull(constants$805.g_tls_certificate_is_same$MH,"g_tls_certificate_is_same");
    }
    /**
     * {@snippet :
     * gboolean g_tls_certificate_is_same(GTlsCertificate* cert_one, GTlsCertificate* cert_two);
     * }
     */
    public static int g_tls_certificate_is_same(MemorySegment cert_one, MemorySegment cert_two) {
        var mh$ = g_tls_certificate_is_same$MH();
        try {
            return (int)mh$.invokeExact(cert_one, cert_two);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_not_valid_before$MH() {
        return RuntimeHelper.requireNonNull(constants$805.g_tls_certificate_get_not_valid_before$MH,"g_tls_certificate_get_not_valid_before");
    }
    /**
     * {@snippet :
     * GDateTime* g_tls_certificate_get_not_valid_before(GTlsCertificate* cert);
     * }
     */
    public static MemorySegment g_tls_certificate_get_not_valid_before(MemorySegment cert) {
        var mh$ = g_tls_certificate_get_not_valid_before$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_not_valid_after$MH() {
        return RuntimeHelper.requireNonNull(constants$805.g_tls_certificate_get_not_valid_after$MH,"g_tls_certificate_get_not_valid_after");
    }
    /**
     * {@snippet :
     * GDateTime* g_tls_certificate_get_not_valid_after(GTlsCertificate* cert);
     * }
     */
    public static MemorySegment g_tls_certificate_get_not_valid_after(MemorySegment cert) {
        var mh$ = g_tls_certificate_get_not_valid_after$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_subject_name$MH() {
        return RuntimeHelper.requireNonNull(constants$805.g_tls_certificate_get_subject_name$MH,"g_tls_certificate_get_subject_name");
    }
    /**
     * {@snippet :
     * gchar* g_tls_certificate_get_subject_name(GTlsCertificate* cert);
     * }
     */
    public static MemorySegment g_tls_certificate_get_subject_name(MemorySegment cert) {
        var mh$ = g_tls_certificate_get_subject_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_issuer_name$MH() {
        return RuntimeHelper.requireNonNull(constants$806.g_tls_certificate_get_issuer_name$MH,"g_tls_certificate_get_issuer_name");
    }
    /**
     * {@snippet :
     * gchar* g_tls_certificate_get_issuer_name(GTlsCertificate* cert);
     * }
     */
    public static MemorySegment g_tls_certificate_get_issuer_name(MemorySegment cert) {
        var mh$ = g_tls_certificate_get_issuer_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_dns_names$MH() {
        return RuntimeHelper.requireNonNull(constants$806.g_tls_certificate_get_dns_names$MH,"g_tls_certificate_get_dns_names");
    }
    /**
     * {@snippet :
     * GPtrArray* g_tls_certificate_get_dns_names(GTlsCertificate* cert);
     * }
     */
    public static MemorySegment g_tls_certificate_get_dns_names(MemorySegment cert) {
        var mh$ = g_tls_certificate_get_dns_names$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_ip_addresses$MH() {
        return RuntimeHelper.requireNonNull(constants$806.g_tls_certificate_get_ip_addresses$MH,"g_tls_certificate_get_ip_addresses");
    }
    /**
     * {@snippet :
     * GPtrArray* g_tls_certificate_get_ip_addresses(GTlsCertificate* cert);
     * }
     */
    public static MemorySegment g_tls_certificate_get_ip_addresses(MemorySegment cert) {
        var mh$ = g_tls_certificate_get_ip_addresses$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$806.g_tls_connection_get_type$MH,"g_tls_connection_get_type");
    }
    /**
     * {@snippet :
     * GType g_tls_connection_get_type();
     * }
     */
    public static long g_tls_connection_get_type() {
        var mh$ = g_tls_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_use_system_certdb$MH() {
        return RuntimeHelper.requireNonNull(constants$806.g_tls_connection_set_use_system_certdb$MH,"g_tls_connection_set_use_system_certdb");
    }
    /**
     * {@snippet :
     * void g_tls_connection_set_use_system_certdb(GTlsConnection* conn, gboolean use_system_certdb);
     * }
     */
    public static void g_tls_connection_set_use_system_certdb(MemorySegment conn, int use_system_certdb) {
        var mh$ = g_tls_connection_set_use_system_certdb$MH();
        try {
            mh$.invokeExact(conn, use_system_certdb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_use_system_certdb$MH() {
        return RuntimeHelper.requireNonNull(constants$806.g_tls_connection_get_use_system_certdb$MH,"g_tls_connection_get_use_system_certdb");
    }
    /**
     * {@snippet :
     * gboolean g_tls_connection_get_use_system_certdb(GTlsConnection* conn);
     * }
     */
    public static int g_tls_connection_get_use_system_certdb(MemorySegment conn) {
        var mh$ = g_tls_connection_get_use_system_certdb$MH();
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_database$MH() {
        return RuntimeHelper.requireNonNull(constants$807.g_tls_connection_set_database$MH,"g_tls_connection_set_database");
    }
    /**
     * {@snippet :
     * void g_tls_connection_set_database(GTlsConnection* conn, GTlsDatabase* database);
     * }
     */
    public static void g_tls_connection_set_database(MemorySegment conn, MemorySegment database) {
        var mh$ = g_tls_connection_set_database$MH();
        try {
            mh$.invokeExact(conn, database);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_database$MH() {
        return RuntimeHelper.requireNonNull(constants$807.g_tls_connection_get_database$MH,"g_tls_connection_get_database");
    }
    /**
     * {@snippet :
     * GTlsDatabase* g_tls_connection_get_database(GTlsConnection* conn);
     * }
     */
    public static MemorySegment g_tls_connection_get_database(MemorySegment conn) {
        var mh$ = g_tls_connection_get_database$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$807.g_tls_connection_set_certificate$MH,"g_tls_connection_set_certificate");
    }
    /**
     * {@snippet :
     * void g_tls_connection_set_certificate(GTlsConnection* conn, GTlsCertificate* certificate);
     * }
     */
    public static void g_tls_connection_set_certificate(MemorySegment conn, MemorySegment certificate) {
        var mh$ = g_tls_connection_set_certificate$MH();
        try {
            mh$.invokeExact(conn, certificate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$807.g_tls_connection_get_certificate$MH,"g_tls_connection_get_certificate");
    }
    /**
     * {@snippet :
     * GTlsCertificate* g_tls_connection_get_certificate(GTlsConnection* conn);
     * }
     */
    public static MemorySegment g_tls_connection_get_certificate(MemorySegment conn) {
        var mh$ = g_tls_connection_get_certificate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_interaction$MH() {
        return RuntimeHelper.requireNonNull(constants$807.g_tls_connection_set_interaction$MH,"g_tls_connection_set_interaction");
    }
    /**
     * {@snippet :
     * void g_tls_connection_set_interaction(GTlsConnection* conn, GTlsInteraction* interaction);
     * }
     */
    public static void g_tls_connection_set_interaction(MemorySegment conn, MemorySegment interaction) {
        var mh$ = g_tls_connection_set_interaction$MH();
        try {
            mh$.invokeExact(conn, interaction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_interaction$MH() {
        return RuntimeHelper.requireNonNull(constants$807.g_tls_connection_get_interaction$MH,"g_tls_connection_get_interaction");
    }
    /**
     * {@snippet :
     * GTlsInteraction* g_tls_connection_get_interaction(GTlsConnection* conn);
     * }
     */
    public static MemorySegment g_tls_connection_get_interaction(MemorySegment conn) {
        var mh$ = g_tls_connection_get_interaction$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_peer_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$808.g_tls_connection_get_peer_certificate$MH,"g_tls_connection_get_peer_certificate");
    }
    /**
     * {@snippet :
     * GTlsCertificate* g_tls_connection_get_peer_certificate(GTlsConnection* conn);
     * }
     */
    public static MemorySegment g_tls_connection_get_peer_certificate(MemorySegment conn) {
        var mh$ = g_tls_connection_get_peer_certificate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_peer_certificate_errors$MH() {
        return RuntimeHelper.requireNonNull(constants$808.g_tls_connection_get_peer_certificate_errors$MH,"g_tls_connection_get_peer_certificate_errors");
    }
    /**
     * {@snippet :
     * GTlsCertificateFlags g_tls_connection_get_peer_certificate_errors(GTlsConnection* conn);
     * }
     */
    public static int g_tls_connection_get_peer_certificate_errors(MemorySegment conn) {
        var mh$ = g_tls_connection_get_peer_certificate_errors$MH();
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_require_close_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$808.g_tls_connection_set_require_close_notify$MH,"g_tls_connection_set_require_close_notify");
    }
    /**
     * {@snippet :
     * void g_tls_connection_set_require_close_notify(GTlsConnection* conn, gboolean require_close_notify);
     * }
     */
    public static void g_tls_connection_set_require_close_notify(MemorySegment conn, int require_close_notify) {
        var mh$ = g_tls_connection_set_require_close_notify$MH();
        try {
            mh$.invokeExact(conn, require_close_notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_require_close_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$808.g_tls_connection_get_require_close_notify$MH,"g_tls_connection_get_require_close_notify");
    }
    /**
     * {@snippet :
     * gboolean g_tls_connection_get_require_close_notify(GTlsConnection* conn);
     * }
     */
    public static int g_tls_connection_get_require_close_notify(MemorySegment conn) {
        var mh$ = g_tls_connection_get_require_close_notify$MH();
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_rehandshake_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$808.g_tls_connection_set_rehandshake_mode$MH,"g_tls_connection_set_rehandshake_mode");
    }
    /**
     * {@snippet :
     * void g_tls_connection_set_rehandshake_mode(GTlsConnection* conn, GTlsRehandshakeMode mode);
     * }
     */
    public static void g_tls_connection_set_rehandshake_mode(MemorySegment conn, int mode) {
        var mh$ = g_tls_connection_set_rehandshake_mode$MH();
        try {
            mh$.invokeExact(conn, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_rehandshake_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$808.g_tls_connection_get_rehandshake_mode$MH,"g_tls_connection_get_rehandshake_mode");
    }
    /**
     * {@snippet :
     * GTlsRehandshakeMode g_tls_connection_get_rehandshake_mode(GTlsConnection* conn);
     * }
     */
    public static int g_tls_connection_get_rehandshake_mode(MemorySegment conn) {
        var mh$ = g_tls_connection_get_rehandshake_mode$MH();
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_advertised_protocols$MH() {
        return RuntimeHelper.requireNonNull(constants$809.g_tls_connection_set_advertised_protocols$MH,"g_tls_connection_set_advertised_protocols");
    }
    /**
     * {@snippet :
     * void g_tls_connection_set_advertised_protocols(GTlsConnection* conn, const gchar** protocols);
     * }
     */
    public static void g_tls_connection_set_advertised_protocols(MemorySegment conn, MemorySegment protocols) {
        var mh$ = g_tls_connection_set_advertised_protocols$MH();
        try {
            mh$.invokeExact(conn, protocols);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_negotiated_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$809.g_tls_connection_get_negotiated_protocol$MH,"g_tls_connection_get_negotiated_protocol");
    }
    /**
     * {@snippet :
     * const gchar* g_tls_connection_get_negotiated_protocol(GTlsConnection* conn);
     * }
     */
    public static MemorySegment g_tls_connection_get_negotiated_protocol(MemorySegment conn) {
        var mh$ = g_tls_connection_get_negotiated_protocol$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_channel_binding_data$MH() {
        return RuntimeHelper.requireNonNull(constants$809.g_tls_connection_get_channel_binding_data$MH,"g_tls_connection_get_channel_binding_data");
    }
    /**
     * {@snippet :
     * gboolean g_tls_connection_get_channel_binding_data(GTlsConnection* conn, GTlsChannelBindingType type, GByteArray* data, GError** error);
     * }
     */
    public static int g_tls_connection_get_channel_binding_data(MemorySegment conn, int type, MemorySegment data, MemorySegment error) {
        var mh$ = g_tls_connection_get_channel_binding_data$MH();
        try {
            return (int)mh$.invokeExact(conn, type, data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_handshake$MH() {
        return RuntimeHelper.requireNonNull(constants$809.g_tls_connection_handshake$MH,"g_tls_connection_handshake");
    }
    /**
     * {@snippet :
     * gboolean g_tls_connection_handshake(GTlsConnection* conn, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_tls_connection_handshake(MemorySegment conn, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_tls_connection_handshake$MH();
        try {
            return (int)mh$.invokeExact(conn, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_handshake_async$MH() {
        return RuntimeHelper.requireNonNull(constants$809.g_tls_connection_handshake_async$MH,"g_tls_connection_handshake_async");
    }
    /**
     * {@snippet :
     * void g_tls_connection_handshake_async(GTlsConnection* conn, int io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_tls_connection_handshake_async(MemorySegment conn, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_tls_connection_handshake_async$MH();
        try {
            mh$.invokeExact(conn, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_handshake_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$809.g_tls_connection_handshake_finish$MH,"g_tls_connection_handshake_finish");
    }
    /**
     * {@snippet :
     * gboolean g_tls_connection_handshake_finish(GTlsConnection* conn, GAsyncResult* result, GError** error);
     * }
     */
    public static int g_tls_connection_handshake_finish(MemorySegment conn, MemorySegment result, MemorySegment error) {
        var mh$ = g_tls_connection_handshake_finish$MH();
        try {
            return (int)mh$.invokeExact(conn, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_protocol_version$MH() {
        return RuntimeHelper.requireNonNull(constants$810.g_tls_connection_get_protocol_version$MH,"g_tls_connection_get_protocol_version");
    }
    /**
     * {@snippet :
     * GTlsProtocolVersion g_tls_connection_get_protocol_version(GTlsConnection* conn);
     * }
     */
    public static int g_tls_connection_get_protocol_version(MemorySegment conn) {
        var mh$ = g_tls_connection_get_protocol_version$MH();
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_ciphersuite_name$MH() {
        return RuntimeHelper.requireNonNull(constants$810.g_tls_connection_get_ciphersuite_name$MH,"g_tls_connection_get_ciphersuite_name");
    }
    /**
     * {@snippet :
     * gchar* g_tls_connection_get_ciphersuite_name(GTlsConnection* conn);
     * }
     */
    public static MemorySegment g_tls_connection_get_ciphersuite_name(MemorySegment conn) {
        var mh$ = g_tls_connection_get_ciphersuite_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$810.g_tls_error_quark$MH,"g_tls_error_quark");
    }
    /**
     * {@snippet :
     * GQuark g_tls_error_quark();
     * }
     */
    public static int g_tls_error_quark() {
        var mh$ = g_tls_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_channel_binding_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$810.g_tls_channel_binding_error_quark$MH,"g_tls_channel_binding_error_quark");
    }
    /**
     * {@snippet :
     * GQuark g_tls_channel_binding_error_quark();
     * }
     */
    public static int g_tls_channel_binding_error_quark() {
        var mh$ = g_tls_channel_binding_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_emit_accept_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$810.g_tls_connection_emit_accept_certificate$MH,"g_tls_connection_emit_accept_certificate");
    }
    /**
     * {@snippet :
     * gboolean g_tls_connection_emit_accept_certificate(GTlsConnection* conn, GTlsCertificate* peer_cert, GTlsCertificateFlags errors);
     * }
     */
    public static int g_tls_connection_emit_accept_certificate(MemorySegment conn, MemorySegment peer_cert, int errors) {
        var mh$ = g_tls_connection_emit_accept_certificate$MH();
        try {
            return (int)mh$.invokeExact(conn, peer_cert, errors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$810.g_tls_client_connection_get_type$MH,"g_tls_client_connection_get_type");
    }
    /**
     * {@snippet :
     * GType g_tls_client_connection_get_type();
     * }
     */
    public static long g_tls_client_connection_get_type() {
        var mh$ = g_tls_client_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_new$MH() {
        return RuntimeHelper.requireNonNull(constants$811.g_tls_client_connection_new$MH,"g_tls_client_connection_new");
    }
    /**
     * {@snippet :
     * GIOStream* g_tls_client_connection_new(GIOStream* base_io_stream, GSocketConnectable* server_identity, GError** error);
     * }
     */
    public static MemorySegment g_tls_client_connection_new(MemorySegment base_io_stream, MemorySegment server_identity, MemorySegment error) {
        var mh$ = g_tls_client_connection_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(base_io_stream, server_identity, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_get_validation_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$811.g_tls_client_connection_get_validation_flags$MH,"g_tls_client_connection_get_validation_flags");
    }
    /**
     * {@snippet :
     * GTlsCertificateFlags g_tls_client_connection_get_validation_flags(GTlsClientConnection* conn);
     * }
     */
    public static int g_tls_client_connection_get_validation_flags(MemorySegment conn) {
        var mh$ = g_tls_client_connection_get_validation_flags$MH();
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_set_validation_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$811.g_tls_client_connection_set_validation_flags$MH,"g_tls_client_connection_set_validation_flags");
    }
    /**
     * {@snippet :
     * void g_tls_client_connection_set_validation_flags(GTlsClientConnection* conn, GTlsCertificateFlags flags);
     * }
     */
    public static void g_tls_client_connection_set_validation_flags(MemorySegment conn, int flags) {
        var mh$ = g_tls_client_connection_set_validation_flags$MH();
        try {
            mh$.invokeExact(conn, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_get_server_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$811.g_tls_client_connection_get_server_identity$MH,"g_tls_client_connection_get_server_identity");
    }
    /**
     * {@snippet :
     * GSocketConnectable* g_tls_client_connection_get_server_identity(GTlsClientConnection* conn);
     * }
     */
    public static MemorySegment g_tls_client_connection_get_server_identity(MemorySegment conn) {
        var mh$ = g_tls_client_connection_get_server_identity$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_set_server_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$811.g_tls_client_connection_set_server_identity$MH,"g_tls_client_connection_set_server_identity");
    }
    /**
     * {@snippet :
     * void g_tls_client_connection_set_server_identity(GTlsClientConnection* conn, GSocketConnectable* identity);
     * }
     */
    public static void g_tls_client_connection_set_server_identity(MemorySegment conn, MemorySegment identity) {
        var mh$ = g_tls_client_connection_set_server_identity$MH();
        try {
            mh$.invokeExact(conn, identity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_get_use_ssl3$MH() {
        return RuntimeHelper.requireNonNull(constants$811.g_tls_client_connection_get_use_ssl3$MH,"g_tls_client_connection_get_use_ssl3");
    }
    /**
     * {@snippet :
     * gboolean g_tls_client_connection_get_use_ssl3(GTlsClientConnection* conn);
     * }
     */
    public static int g_tls_client_connection_get_use_ssl3(MemorySegment conn) {
        var mh$ = g_tls_client_connection_get_use_ssl3$MH();
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_set_use_ssl3$MH() {
        return RuntimeHelper.requireNonNull(constants$812.g_tls_client_connection_set_use_ssl3$MH,"g_tls_client_connection_set_use_ssl3");
    }
    /**
     * {@snippet :
     * void g_tls_client_connection_set_use_ssl3(GTlsClientConnection* conn, gboolean use_ssl3);
     * }
     */
    public static void g_tls_client_connection_set_use_ssl3(MemorySegment conn, int use_ssl3) {
        var mh$ = g_tls_client_connection_set_use_ssl3$MH();
        try {
            mh$.invokeExact(conn, use_ssl3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_get_accepted_cas$MH() {
        return RuntimeHelper.requireNonNull(constants$812.g_tls_client_connection_get_accepted_cas$MH,"g_tls_client_connection_get_accepted_cas");
    }
    /**
     * {@snippet :
     * GList* g_tls_client_connection_get_accepted_cas(GTlsClientConnection* conn);
     * }
     */
    public static MemorySegment g_tls_client_connection_get_accepted_cas(MemorySegment conn) {
        var mh$ = g_tls_client_connection_get_accepted_cas$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_copy_session_state$MH() {
        return RuntimeHelper.requireNonNull(constants$812.g_tls_client_connection_copy_session_state$MH,"g_tls_client_connection_copy_session_state");
    }
    /**
     * {@snippet :
     * void g_tls_client_connection_copy_session_state(GTlsClientConnection* conn, GTlsClientConnection* source);
     * }
     */
    public static void g_tls_client_connection_copy_session_state(MemorySegment conn, MemorySegment source) {
        var mh$ = g_tls_client_connection_copy_session_state$MH();
        try {
            mh$.invokeExact(conn, source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$812.g_tls_database_get_type$MH,"g_tls_database_get_type");
    }
    /**
     * {@snippet :
     * GType g_tls_database_get_type();
     * }
     */
    public static long g_tls_database_get_type() {
        var mh$ = g_tls_database_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_verify_chain$MH() {
        return RuntimeHelper.requireNonNull(constants$812.g_tls_database_verify_chain$MH,"g_tls_database_verify_chain");
    }
    /**
     * {@snippet :
     * GTlsCertificateFlags g_tls_database_verify_chain(GTlsDatabase* self, GTlsCertificate* chain, const gchar* purpose, GSocketConnectable* identity, GTlsInteraction* interaction, GTlsDatabaseVerifyFlags flags, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_tls_database_verify_chain(MemorySegment self, MemorySegment chain, MemorySegment purpose, MemorySegment identity, MemorySegment interaction, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_tls_database_verify_chain$MH();
        try {
            return (int)mh$.invokeExact(self, chain, purpose, identity, interaction, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_verify_chain_async$MH() {
        return RuntimeHelper.requireNonNull(constants$812.g_tls_database_verify_chain_async$MH,"g_tls_database_verify_chain_async");
    }
    /**
     * {@snippet :
     * void g_tls_database_verify_chain_async(GTlsDatabase* self, GTlsCertificate* chain, const gchar* purpose, GSocketConnectable* identity, GTlsInteraction* interaction, GTlsDatabaseVerifyFlags flags, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_tls_database_verify_chain_async(MemorySegment self, MemorySegment chain, MemorySegment purpose, MemorySegment identity, MemorySegment interaction, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_tls_database_verify_chain_async$MH();
        try {
            mh$.invokeExact(self, chain, purpose, identity, interaction, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_verify_chain_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$813.g_tls_database_verify_chain_finish$MH,"g_tls_database_verify_chain_finish");
    }
    /**
     * {@snippet :
     * GTlsCertificateFlags g_tls_database_verify_chain_finish(GTlsDatabase* self, GAsyncResult* result, GError** error);
     * }
     */
    public static int g_tls_database_verify_chain_finish(MemorySegment self, MemorySegment result, MemorySegment error) {
        var mh$ = g_tls_database_verify_chain_finish$MH();
        try {
            return (int)mh$.invokeExact(self, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_create_certificate_handle$MH() {
        return RuntimeHelper.requireNonNull(constants$813.g_tls_database_create_certificate_handle$MH,"g_tls_database_create_certificate_handle");
    }
    /**
     * {@snippet :
     * gchar* g_tls_database_create_certificate_handle(GTlsDatabase* self, GTlsCertificate* certificate);
     * }
     */
    public static MemorySegment g_tls_database_create_certificate_handle(MemorySegment self, MemorySegment certificate) {
        var mh$ = g_tls_database_create_certificate_handle$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, certificate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificate_for_handle$MH() {
        return RuntimeHelper.requireNonNull(constants$813.g_tls_database_lookup_certificate_for_handle$MH,"g_tls_database_lookup_certificate_for_handle");
    }
    /**
     * {@snippet :
     * GTlsCertificate* g_tls_database_lookup_certificate_for_handle(GTlsDatabase* self, const gchar* handle, GTlsInteraction* interaction, GTlsDatabaseLookupFlags flags, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_tls_database_lookup_certificate_for_handle(MemorySegment self, MemorySegment handle, MemorySegment interaction, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_tls_database_lookup_certificate_for_handle$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, handle, interaction, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificate_for_handle_async$MH() {
        return RuntimeHelper.requireNonNull(constants$813.g_tls_database_lookup_certificate_for_handle_async$MH,"g_tls_database_lookup_certificate_for_handle_async");
    }
    /**
     * {@snippet :
     * void g_tls_database_lookup_certificate_for_handle_async(GTlsDatabase* self, const gchar* handle, GTlsInteraction* interaction, GTlsDatabaseLookupFlags flags, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_tls_database_lookup_certificate_for_handle_async(MemorySegment self, MemorySegment handle, MemorySegment interaction, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_tls_database_lookup_certificate_for_handle_async$MH();
        try {
            mh$.invokeExact(self, handle, interaction, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificate_for_handle_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$813.g_tls_database_lookup_certificate_for_handle_finish$MH,"g_tls_database_lookup_certificate_for_handle_finish");
    }
    /**
     * {@snippet :
     * GTlsCertificate* g_tls_database_lookup_certificate_for_handle_finish(GTlsDatabase* self, GAsyncResult* result, GError** error);
     * }
     */
    public static MemorySegment g_tls_database_lookup_certificate_for_handle_finish(MemorySegment self, MemorySegment result, MemorySegment error) {
        var mh$ = g_tls_database_lookup_certificate_for_handle_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificate_issuer$MH() {
        return RuntimeHelper.requireNonNull(constants$813.g_tls_database_lookup_certificate_issuer$MH,"g_tls_database_lookup_certificate_issuer");
    }
    /**
     * {@snippet :
     * GTlsCertificate* g_tls_database_lookup_certificate_issuer(GTlsDatabase* self, GTlsCertificate* certificate, GTlsInteraction* interaction, GTlsDatabaseLookupFlags flags, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_tls_database_lookup_certificate_issuer(MemorySegment self, MemorySegment certificate, MemorySegment interaction, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_tls_database_lookup_certificate_issuer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, certificate, interaction, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificate_issuer_async$MH() {
        return RuntimeHelper.requireNonNull(constants$814.g_tls_database_lookup_certificate_issuer_async$MH,"g_tls_database_lookup_certificate_issuer_async");
    }
    /**
     * {@snippet :
     * void g_tls_database_lookup_certificate_issuer_async(GTlsDatabase* self, GTlsCertificate* certificate, GTlsInteraction* interaction, GTlsDatabaseLookupFlags flags, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_tls_database_lookup_certificate_issuer_async(MemorySegment self, MemorySegment certificate, MemorySegment interaction, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_tls_database_lookup_certificate_issuer_async$MH();
        try {
            mh$.invokeExact(self, certificate, interaction, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificate_issuer_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$814.g_tls_database_lookup_certificate_issuer_finish$MH,"g_tls_database_lookup_certificate_issuer_finish");
    }
    /**
     * {@snippet :
     * GTlsCertificate* g_tls_database_lookup_certificate_issuer_finish(GTlsDatabase* self, GAsyncResult* result, GError** error);
     * }
     */
    public static MemorySegment g_tls_database_lookup_certificate_issuer_finish(MemorySegment self, MemorySegment result, MemorySegment error) {
        var mh$ = g_tls_database_lookup_certificate_issuer_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificates_issued_by$MH() {
        return RuntimeHelper.requireNonNull(constants$814.g_tls_database_lookup_certificates_issued_by$MH,"g_tls_database_lookup_certificates_issued_by");
    }
    /**
     * {@snippet :
     * GList* g_tls_database_lookup_certificates_issued_by(GTlsDatabase* self, GByteArray* issuer_raw_dn, GTlsInteraction* interaction, GTlsDatabaseLookupFlags flags, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_tls_database_lookup_certificates_issued_by(MemorySegment self, MemorySegment issuer_raw_dn, MemorySegment interaction, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_tls_database_lookup_certificates_issued_by$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, issuer_raw_dn, interaction, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificates_issued_by_async$MH() {
        return RuntimeHelper.requireNonNull(constants$814.g_tls_database_lookup_certificates_issued_by_async$MH,"g_tls_database_lookup_certificates_issued_by_async");
    }
    /**
     * {@snippet :
     * void g_tls_database_lookup_certificates_issued_by_async(GTlsDatabase* self, GByteArray* issuer_raw_dn, GTlsInteraction* interaction, GTlsDatabaseLookupFlags flags, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_tls_database_lookup_certificates_issued_by_async(MemorySegment self, MemorySegment issuer_raw_dn, MemorySegment interaction, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_tls_database_lookup_certificates_issued_by_async$MH();
        try {
            mh$.invokeExact(self, issuer_raw_dn, interaction, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificates_issued_by_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$814.g_tls_database_lookup_certificates_issued_by_finish$MH,"g_tls_database_lookup_certificates_issued_by_finish");
    }
    /**
     * {@snippet :
     * GList* g_tls_database_lookup_certificates_issued_by_finish(GTlsDatabase* self, GAsyncResult* result, GError** error);
     * }
     */
    public static MemorySegment g_tls_database_lookup_certificates_issued_by_finish(MemorySegment self, MemorySegment result, MemorySegment error) {
        var mh$ = g_tls_database_lookup_certificates_issued_by_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_file_database_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$814.g_tls_file_database_get_type$MH,"g_tls_file_database_get_type");
    }
    /**
     * {@snippet :
     * GType g_tls_file_database_get_type();
     * }
     */
    public static long g_tls_file_database_get_type() {
        var mh$ = g_tls_file_database_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_file_database_new$MH() {
        return RuntimeHelper.requireNonNull(constants$815.g_tls_file_database_new$MH,"g_tls_file_database_new");
    }
    /**
     * {@snippet :
     * GTlsDatabase* g_tls_file_database_new(const gchar* anchors, GError** error);
     * }
     */
    public static MemorySegment g_tls_file_database_new(MemorySegment anchors, MemorySegment error) {
        var mh$ = g_tls_file_database_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(anchors, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$815.g_tls_interaction_get_type$MH,"g_tls_interaction_get_type");
    }
    /**
     * {@snippet :
     * GType g_tls_interaction_get_type();
     * }
     */
    public static long g_tls_interaction_get_type() {
        var mh$ = g_tls_interaction_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_invoke_ask_password$MH() {
        return RuntimeHelper.requireNonNull(constants$815.g_tls_interaction_invoke_ask_password$MH,"g_tls_interaction_invoke_ask_password");
    }
    /**
     * {@snippet :
     * GTlsInteractionResult g_tls_interaction_invoke_ask_password(GTlsInteraction* interaction, GTlsPassword* password, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_tls_interaction_invoke_ask_password(MemorySegment interaction, MemorySegment password, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_tls_interaction_invoke_ask_password$MH();
        try {
            return (int)mh$.invokeExact(interaction, password, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_ask_password$MH() {
        return RuntimeHelper.requireNonNull(constants$815.g_tls_interaction_ask_password$MH,"g_tls_interaction_ask_password");
    }
    /**
     * {@snippet :
     * GTlsInteractionResult g_tls_interaction_ask_password(GTlsInteraction* interaction, GTlsPassword* password, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_tls_interaction_ask_password(MemorySegment interaction, MemorySegment password, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_tls_interaction_ask_password$MH();
        try {
            return (int)mh$.invokeExact(interaction, password, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_ask_password_async$MH() {
        return RuntimeHelper.requireNonNull(constants$815.g_tls_interaction_ask_password_async$MH,"g_tls_interaction_ask_password_async");
    }
    /**
     * {@snippet :
     * void g_tls_interaction_ask_password_async(GTlsInteraction* interaction, GTlsPassword* password, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_tls_interaction_ask_password_async(MemorySegment interaction, MemorySegment password, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_tls_interaction_ask_password_async$MH();
        try {
            mh$.invokeExact(interaction, password, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_ask_password_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$815.g_tls_interaction_ask_password_finish$MH,"g_tls_interaction_ask_password_finish");
    }
    /**
     * {@snippet :
     * GTlsInteractionResult g_tls_interaction_ask_password_finish(GTlsInteraction* interaction, GAsyncResult* result, GError** error);
     * }
     */
    public static int g_tls_interaction_ask_password_finish(MemorySegment interaction, MemorySegment result, MemorySegment error) {
        var mh$ = g_tls_interaction_ask_password_finish$MH();
        try {
            return (int)mh$.invokeExact(interaction, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_invoke_request_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$816.g_tls_interaction_invoke_request_certificate$MH,"g_tls_interaction_invoke_request_certificate");
    }
    /**
     * {@snippet :
     * GTlsInteractionResult g_tls_interaction_invoke_request_certificate(GTlsInteraction* interaction, GTlsConnection* connection, GTlsCertificateRequestFlags flags, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_tls_interaction_invoke_request_certificate(MemorySegment interaction, MemorySegment connection, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_tls_interaction_invoke_request_certificate$MH();
        try {
            return (int)mh$.invokeExact(interaction, connection, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_request_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$816.g_tls_interaction_request_certificate$MH,"g_tls_interaction_request_certificate");
    }
    /**
     * {@snippet :
     * GTlsInteractionResult g_tls_interaction_request_certificate(GTlsInteraction* interaction, GTlsConnection* connection, GTlsCertificateRequestFlags flags, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_tls_interaction_request_certificate(MemorySegment interaction, MemorySegment connection, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_tls_interaction_request_certificate$MH();
        try {
            return (int)mh$.invokeExact(interaction, connection, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_request_certificate_async$MH() {
        return RuntimeHelper.requireNonNull(constants$816.g_tls_interaction_request_certificate_async$MH,"g_tls_interaction_request_certificate_async");
    }
    /**
     * {@snippet :
     * void g_tls_interaction_request_certificate_async(GTlsInteraction* interaction, GTlsConnection* connection, GTlsCertificateRequestFlags flags, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_tls_interaction_request_certificate_async(MemorySegment interaction, MemorySegment connection, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_tls_interaction_request_certificate_async$MH();
        try {
            mh$.invokeExact(interaction, connection, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_request_certificate_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$816.g_tls_interaction_request_certificate_finish$MH,"g_tls_interaction_request_certificate_finish");
    }
    /**
     * {@snippet :
     * GTlsInteractionResult g_tls_interaction_request_certificate_finish(GTlsInteraction* interaction, GAsyncResult* result, GError** error);
     * }
     */
    public static int g_tls_interaction_request_certificate_finish(MemorySegment interaction, MemorySegment result, MemorySegment error) {
        var mh$ = g_tls_interaction_request_certificate_finish$MH();
        try {
            return (int)mh$.invokeExact(interaction, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$816.g_tls_password_get_type$MH,"g_tls_password_get_type");
    }
    /**
     * {@snippet :
     * GType g_tls_password_get_type();
     * }
     */
    public static long g_tls_password_get_type() {
        var mh$ = g_tls_password_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_new$MH() {
        return RuntimeHelper.requireNonNull(constants$816.g_tls_password_new$MH,"g_tls_password_new");
    }
    /**
     * {@snippet :
     * GTlsPassword* g_tls_password_new(GTlsPasswordFlags flags, const gchar* description);
     * }
     */
    public static MemorySegment g_tls_password_new(int flags, MemorySegment description) {
        var mh$ = g_tls_password_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$817.g_tls_password_get_value$MH,"g_tls_password_get_value");
    }
    /**
     * {@snippet :
     * const guchar* g_tls_password_get_value(GTlsPassword* password, gsize* length);
     * }
     */
    public static MemorySegment g_tls_password_get_value(MemorySegment password, MemorySegment length) {
        var mh$ = g_tls_password_get_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(password, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$817.g_tls_password_set_value$MH,"g_tls_password_set_value");
    }
    /**
     * {@snippet :
     * void g_tls_password_set_value(GTlsPassword* password, const guchar* value, gssize length);
     * }
     */
    public static void g_tls_password_set_value(MemorySegment password, MemorySegment value, long length) {
        var mh$ = g_tls_password_set_value$MH();
        try {
            mh$.invokeExact(password, value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_set_value_full$MH() {
        return RuntimeHelper.requireNonNull(constants$817.g_tls_password_set_value_full$MH,"g_tls_password_set_value_full");
    }
    /**
     * {@snippet :
     * void g_tls_password_set_value_full(GTlsPassword* password, guchar* value, gssize length, GDestroyNotify destroy);
     * }
     */
    public static void g_tls_password_set_value_full(MemorySegment password, MemorySegment value, long length, MemorySegment destroy) {
        var mh$ = g_tls_password_set_value_full$MH();
        try {
            mh$.invokeExact(password, value, length, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$817.g_tls_password_get_flags$MH,"g_tls_password_get_flags");
    }
    /**
     * {@snippet :
     * GTlsPasswordFlags g_tls_password_get_flags(GTlsPassword* password);
     * }
     */
    public static int g_tls_password_get_flags(MemorySegment password) {
        var mh$ = g_tls_password_get_flags$MH();
        try {
            return (int)mh$.invokeExact(password);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$817.g_tls_password_set_flags$MH,"g_tls_password_set_flags");
    }
    /**
     * {@snippet :
     * void g_tls_password_set_flags(GTlsPassword* password, GTlsPasswordFlags flags);
     * }
     */
    public static void g_tls_password_set_flags(MemorySegment password, int flags) {
        var mh$ = g_tls_password_set_flags$MH();
        try {
            mh$.invokeExact(password, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$817.g_tls_password_get_description$MH,"g_tls_password_get_description");
    }
    /**
     * {@snippet :
     * const gchar* g_tls_password_get_description(GTlsPassword* password);
     * }
     */
    public static MemorySegment g_tls_password_get_description(MemorySegment password) {
        var mh$ = g_tls_password_get_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(password);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_set_description$MH() {
        return RuntimeHelper.requireNonNull(constants$818.g_tls_password_set_description$MH,"g_tls_password_set_description");
    }
    /**
     * {@snippet :
     * void g_tls_password_set_description(GTlsPassword* password, const gchar* description);
     * }
     */
    public static void g_tls_password_set_description(MemorySegment password, MemorySegment description) {
        var mh$ = g_tls_password_set_description$MH();
        try {
            mh$.invokeExact(password, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_get_warning$MH() {
        return RuntimeHelper.requireNonNull(constants$818.g_tls_password_get_warning$MH,"g_tls_password_get_warning");
    }
    /**
     * {@snippet :
     * const gchar* g_tls_password_get_warning(GTlsPassword* password);
     * }
     */
    public static MemorySegment g_tls_password_get_warning(MemorySegment password) {
        var mh$ = g_tls_password_get_warning$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(password);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_set_warning$MH() {
        return RuntimeHelper.requireNonNull(constants$818.g_tls_password_set_warning$MH,"g_tls_password_set_warning");
    }
    /**
     * {@snippet :
     * void g_tls_password_set_warning(GTlsPassword* password, const gchar* warning);
     * }
     */
    public static void g_tls_password_set_warning(MemorySegment password, MemorySegment warning) {
        var mh$ = g_tls_password_set_warning$MH();
        try {
            mh$.invokeExact(password, warning);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_server_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$818.g_tls_server_connection_get_type$MH,"g_tls_server_connection_get_type");
    }
    /**
     * {@snippet :
     * GType g_tls_server_connection_get_type();
     * }
     */
    public static long g_tls_server_connection_get_type() {
        var mh$ = g_tls_server_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_server_connection_new$MH() {
        return RuntimeHelper.requireNonNull(constants$818.g_tls_server_connection_new$MH,"g_tls_server_connection_new");
    }
    /**
     * {@snippet :
     * GIOStream* g_tls_server_connection_new(GIOStream* base_io_stream, GTlsCertificate* certificate, GError** error);
     * }
     */
    public static MemorySegment g_tls_server_connection_new(MemorySegment base_io_stream, MemorySegment certificate, MemorySegment error) {
        var mh$ = g_tls_server_connection_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(base_io_stream, certificate, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GUnixConnection* GUnixConnection_autoptr;
     * }
     */
    public static final OfAddress GUnixConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GUnixConnection_listautoptr;
     * }
     */
    public static final OfAddress GUnixConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GUnixConnection_slistautoptr;
     * }
     */
    public static final OfAddress GUnixConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GUnixConnection_queueautoptr;
     * }
     */
    public static final OfAddress GUnixConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle g_unix_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$818.g_unix_connection_get_type$MH,"g_unix_connection_get_type");
    }
    /**
     * {@snippet :
     * GType g_unix_connection_get_type();
     * }
     */
    public static long g_unix_connection_get_type() {
        var mh$ = g_unix_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_send_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$819.g_unix_connection_send_fd$MH,"g_unix_connection_send_fd");
    }
    /**
     * {@snippet :
     * gboolean g_unix_connection_send_fd(GUnixConnection* connection, gint fd, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_unix_connection_send_fd(MemorySegment connection, int fd, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_unix_connection_send_fd$MH();
        try {
            return (int)mh$.invokeExact(connection, fd, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_receive_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$819.g_unix_connection_receive_fd$MH,"g_unix_connection_receive_fd");
    }
    /**
     * {@snippet :
     * gint g_unix_connection_receive_fd(GUnixConnection* connection, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_unix_connection_receive_fd(MemorySegment connection, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_unix_connection_receive_fd$MH();
        try {
            return (int)mh$.invokeExact(connection, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_send_credentials$MH() {
        return RuntimeHelper.requireNonNull(constants$819.g_unix_connection_send_credentials$MH,"g_unix_connection_send_credentials");
    }
    /**
     * {@snippet :
     * gboolean g_unix_connection_send_credentials(GUnixConnection* connection, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_unix_connection_send_credentials(MemorySegment connection, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_unix_connection_send_credentials$MH();
        try {
            return (int)mh$.invokeExact(connection, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_send_credentials_async$MH() {
        return RuntimeHelper.requireNonNull(constants$819.g_unix_connection_send_credentials_async$MH,"g_unix_connection_send_credentials_async");
    }
    /**
     * {@snippet :
     * void g_unix_connection_send_credentials_async(GUnixConnection* connection, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_unix_connection_send_credentials_async(MemorySegment connection, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_unix_connection_send_credentials_async$MH();
        try {
            mh$.invokeExact(connection, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_send_credentials_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$819.g_unix_connection_send_credentials_finish$MH,"g_unix_connection_send_credentials_finish");
    }
    /**
     * {@snippet :
     * gboolean g_unix_connection_send_credentials_finish(GUnixConnection* connection, GAsyncResult* result, GError** error);
     * }
     */
    public static int g_unix_connection_send_credentials_finish(MemorySegment connection, MemorySegment result, MemorySegment error) {
        var mh$ = g_unix_connection_send_credentials_finish$MH();
        try {
            return (int)mh$.invokeExact(connection, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_receive_credentials$MH() {
        return RuntimeHelper.requireNonNull(constants$819.g_unix_connection_receive_credentials$MH,"g_unix_connection_receive_credentials");
    }
    /**
     * {@snippet :
     * GCredentials* g_unix_connection_receive_credentials(GUnixConnection* connection, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_unix_connection_receive_credentials(MemorySegment connection, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_unix_connection_receive_credentials$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_receive_credentials_async$MH() {
        return RuntimeHelper.requireNonNull(constants$820.g_unix_connection_receive_credentials_async$MH,"g_unix_connection_receive_credentials_async");
    }
    /**
     * {@snippet :
     * void g_unix_connection_receive_credentials_async(GUnixConnection* connection, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_unix_connection_receive_credentials_async(MemorySegment connection, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_unix_connection_receive_credentials_async$MH();
        try {
            mh$.invokeExact(connection, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_receive_credentials_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$820.g_unix_connection_receive_credentials_finish$MH,"g_unix_connection_receive_credentials_finish");
    }
    /**
     * {@snippet :
     * GCredentials* g_unix_connection_receive_credentials_finish(GUnixConnection* connection, GAsyncResult* result, GError** error);
     * }
     */
    public static MemorySegment g_unix_connection_receive_credentials_finish(MemorySegment connection, MemorySegment result, MemorySegment error) {
        var mh$ = g_unix_connection_receive_credentials_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GUnixCredentialsMessage* GUnixCredentialsMessage_autoptr;
     * }
     */
    public static final OfAddress GUnixCredentialsMessage_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GUnixCredentialsMessage_listautoptr;
     * }
     */
    public static final OfAddress GUnixCredentialsMessage_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GUnixCredentialsMessage_slistautoptr;
     * }
     */
    public static final OfAddress GUnixCredentialsMessage_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GUnixCredentialsMessage_queueautoptr;
     * }
     */
    public static final OfAddress GUnixCredentialsMessage_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle g_unix_credentials_message_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$820.g_unix_credentials_message_get_type$MH,"g_unix_credentials_message_get_type");
    }
    /**
     * {@snippet :
     * GType g_unix_credentials_message_get_type();
     * }
     */
    public static long g_unix_credentials_message_get_type() {
        var mh$ = g_unix_credentials_message_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_credentials_message_new$MH() {
        return RuntimeHelper.requireNonNull(constants$820.g_unix_credentials_message_new$MH,"g_unix_credentials_message_new");
    }
    /**
     * {@snippet :
     * GSocketControlMessage* g_unix_credentials_message_new();
     * }
     */
    public static MemorySegment g_unix_credentials_message_new() {
        var mh$ = g_unix_credentials_message_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_credentials_message_new_with_credentials$MH() {
        return RuntimeHelper.requireNonNull(constants$820.g_unix_credentials_message_new_with_credentials$MH,"g_unix_credentials_message_new_with_credentials");
    }
    /**
     * {@snippet :
     * GSocketControlMessage* g_unix_credentials_message_new_with_credentials(GCredentials* credentials);
     * }
     */
    public static MemorySegment g_unix_credentials_message_new_with_credentials(MemorySegment credentials) {
        var mh$ = g_unix_credentials_message_new_with_credentials$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(credentials);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_credentials_message_get_credentials$MH() {
        return RuntimeHelper.requireNonNull(constants$820.g_unix_credentials_message_get_credentials$MH,"g_unix_credentials_message_get_credentials");
    }
    /**
     * {@snippet :
     * GCredentials* g_unix_credentials_message_get_credentials(GUnixCredentialsMessage* message);
     * }
     */
    public static MemorySegment g_unix_credentials_message_get_credentials(MemorySegment message) {
        var mh$ = g_unix_credentials_message_get_credentials$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_credentials_message_is_supported$MH() {
        return RuntimeHelper.requireNonNull(constants$821.g_unix_credentials_message_is_supported$MH,"g_unix_credentials_message_is_supported");
    }
    /**
     * {@snippet :
     * gboolean g_unix_credentials_message_is_supported();
     * }
     */
    public static int g_unix_credentials_message_is_supported() {
        var mh$ = g_unix_credentials_message_is_supported$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GUnixFDList* GUnixFDList_autoptr;
     * }
     */
    public static final OfAddress GUnixFDList_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GUnixFDList_listautoptr;
     * }
     */
    public static final OfAddress GUnixFDList_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GUnixFDList_slistautoptr;
     * }
     */
    public static final OfAddress GUnixFDList_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GUnixFDList_queueautoptr;
     * }
     */
    public static final OfAddress GUnixFDList_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle g_unix_fd_list_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$821.g_unix_fd_list_get_type$MH,"g_unix_fd_list_get_type");
    }
    /**
     * {@snippet :
     * GType g_unix_fd_list_get_type();
     * }
     */
    public static long g_unix_fd_list_get_type() {
        var mh$ = g_unix_fd_list_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_new$MH() {
        return RuntimeHelper.requireNonNull(constants$821.g_unix_fd_list_new$MH,"g_unix_fd_list_new");
    }
    /**
     * {@snippet :
     * GUnixFDList* g_unix_fd_list_new();
     * }
     */
    public static MemorySegment g_unix_fd_list_new() {
        var mh$ = g_unix_fd_list_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_new_from_array$MH() {
        return RuntimeHelper.requireNonNull(constants$821.g_unix_fd_list_new_from_array$MH,"g_unix_fd_list_new_from_array");
    }
    /**
     * {@snippet :
     * GUnixFDList* g_unix_fd_list_new_from_array(const gint* fds, gint n_fds);
     * }
     */
    public static MemorySegment g_unix_fd_list_new_from_array(MemorySegment fds, int n_fds) {
        var mh$ = g_unix_fd_list_new_from_array$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fds, n_fds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_append$MH() {
        return RuntimeHelper.requireNonNull(constants$821.g_unix_fd_list_append$MH,"g_unix_fd_list_append");
    }
    /**
     * {@snippet :
     * gint g_unix_fd_list_append(GUnixFDList* list, gint fd, GError** error);
     * }
     */
    public static int g_unix_fd_list_append(MemorySegment list, int fd, MemorySegment error) {
        var mh$ = g_unix_fd_list_append$MH();
        try {
            return (int)mh$.invokeExact(list, fd, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_get_length$MH() {
        return RuntimeHelper.requireNonNull(constants$821.g_unix_fd_list_get_length$MH,"g_unix_fd_list_get_length");
    }
    /**
     * {@snippet :
     * gint g_unix_fd_list_get_length(GUnixFDList* list);
     * }
     */
    public static int g_unix_fd_list_get_length(MemorySegment list) {
        var mh$ = g_unix_fd_list_get_length$MH();
        try {
            return (int)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_get$MH() {
        return RuntimeHelper.requireNonNull(constants$822.g_unix_fd_list_get$MH,"g_unix_fd_list_get");
    }
    /**
     * {@snippet :
     * gint g_unix_fd_list_get(GUnixFDList* list, gint index_, GError** error);
     * }
     */
    public static int g_unix_fd_list_get(MemorySegment list, int index_, MemorySegment error) {
        var mh$ = g_unix_fd_list_get$MH();
        try {
            return (int)mh$.invokeExact(list, index_, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_peek_fds$MH() {
        return RuntimeHelper.requireNonNull(constants$822.g_unix_fd_list_peek_fds$MH,"g_unix_fd_list_peek_fds");
    }
    /**
     * {@snippet :
     * const gint* g_unix_fd_list_peek_fds(GUnixFDList* list, gint* length);
     * }
     */
    public static MemorySegment g_unix_fd_list_peek_fds(MemorySegment list, MemorySegment length) {
        var mh$ = g_unix_fd_list_peek_fds$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_steal_fds$MH() {
        return RuntimeHelper.requireNonNull(constants$822.g_unix_fd_list_steal_fds$MH,"g_unix_fd_list_steal_fds");
    }
    /**
     * {@snippet :
     * gint* g_unix_fd_list_steal_fds(GUnixFDList* list, gint* length);
     * }
     */
    public static MemorySegment g_unix_fd_list_steal_fds(MemorySegment list, MemorySegment length) {
        var mh$ = g_unix_fd_list_steal_fds$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GUnixSocketAddress* GUnixSocketAddress_autoptr;
     * }
     */
    public static final OfAddress GUnixSocketAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GUnixSocketAddress_listautoptr;
     * }
     */
    public static final OfAddress GUnixSocketAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GUnixSocketAddress_slistautoptr;
     * }
     */
    public static final OfAddress GUnixSocketAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GUnixSocketAddress_queueautoptr;
     * }
     */
    public static final OfAddress GUnixSocketAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle g_unix_socket_address_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$822.g_unix_socket_address_get_type$MH,"g_unix_socket_address_get_type");
    }
    /**
     * {@snippet :
     * GType g_unix_socket_address_get_type();
     * }
     */
    public static long g_unix_socket_address_get_type() {
        var mh$ = g_unix_socket_address_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_new$MH() {
        return RuntimeHelper.requireNonNull(constants$822.g_unix_socket_address_new$MH,"g_unix_socket_address_new");
    }
    /**
     * {@snippet :
     * GSocketAddress* g_unix_socket_address_new(const gchar* path);
     * }
     */
    public static MemorySegment g_unix_socket_address_new(MemorySegment path) {
        var mh$ = g_unix_socket_address_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_new_abstract$MH() {
        return RuntimeHelper.requireNonNull(constants$822.g_unix_socket_address_new_abstract$MH,"g_unix_socket_address_new_abstract");
    }
    /**
     * {@snippet :
     * GSocketAddress* g_unix_socket_address_new_abstract(const gchar* path, gint path_len);
     * }
     */
    public static MemorySegment g_unix_socket_address_new_abstract(MemorySegment path, int path_len) {
        var mh$ = g_unix_socket_address_new_abstract$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(path, path_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_new_with_type$MH() {
        return RuntimeHelper.requireNonNull(constants$823.g_unix_socket_address_new_with_type$MH,"g_unix_socket_address_new_with_type");
    }
    /**
     * {@snippet :
     * GSocketAddress* g_unix_socket_address_new_with_type(const gchar* path, gint path_len, GUnixSocketAddressType type);
     * }
     */
    public static MemorySegment g_unix_socket_address_new_with_type(MemorySegment path, int path_len, int type) {
        var mh$ = g_unix_socket_address_new_with_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(path, path_len, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_get_path$MH() {
        return RuntimeHelper.requireNonNull(constants$823.g_unix_socket_address_get_path$MH,"g_unix_socket_address_get_path");
    }
    /**
     * {@snippet :
     * char* g_unix_socket_address_get_path(GUnixSocketAddress* address);
     * }
     */
    public static MemorySegment g_unix_socket_address_get_path(MemorySegment address) {
        var mh$ = g_unix_socket_address_get_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_get_path_len$MH() {
        return RuntimeHelper.requireNonNull(constants$823.g_unix_socket_address_get_path_len$MH,"g_unix_socket_address_get_path_len");
    }
    /**
     * {@snippet :
     * gsize g_unix_socket_address_get_path_len(GUnixSocketAddress* address);
     * }
     */
    public static long g_unix_socket_address_get_path_len(MemorySegment address) {
        var mh$ = g_unix_socket_address_get_path_len$MH();
        try {
            return (long)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_get_address_type$MH() {
        return RuntimeHelper.requireNonNull(constants$823.g_unix_socket_address_get_address_type$MH,"g_unix_socket_address_get_address_type");
    }
    /**
     * {@snippet :
     * GUnixSocketAddressType g_unix_socket_address_get_address_type(GUnixSocketAddress* address);
     * }
     */
    public static int g_unix_socket_address_get_address_type(MemorySegment address) {
        var mh$ = g_unix_socket_address_get_address_type$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_get_is_abstract$MH() {
        return RuntimeHelper.requireNonNull(constants$823.g_unix_socket_address_get_is_abstract$MH,"g_unix_socket_address_get_is_abstract");
    }
    /**
     * {@snippet :
     * gboolean g_unix_socket_address_get_is_abstract(GUnixSocketAddress* address);
     * }
     */
    public static int g_unix_socket_address_get_is_abstract(MemorySegment address) {
        var mh$ = g_unix_socket_address_get_is_abstract$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_abstract_names_supported$MH() {
        return RuntimeHelper.requireNonNull(constants$823.g_unix_socket_address_abstract_names_supported$MH,"g_unix_socket_address_abstract_names_supported");
    }
    /**
     * {@snippet :
     * gboolean g_unix_socket_address_abstract_names_supported();
     * }
     */
    public static int g_unix_socket_address_abstract_names_supported() {
        var mh$ = g_unix_socket_address_abstract_names_supported$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$824.g_vfs_get_type$MH,"g_vfs_get_type");
    }
    /**
     * {@snippet :
     * GType g_vfs_get_type();
     * }
     */
    public static long g_vfs_get_type() {
        var mh$ = g_vfs_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_is_active$MH() {
        return RuntimeHelper.requireNonNull(constants$824.g_vfs_is_active$MH,"g_vfs_is_active");
    }
    /**
     * {@snippet :
     * gboolean g_vfs_is_active(GVfs* vfs);
     * }
     */
    public static int g_vfs_is_active(MemorySegment vfs) {
        var mh$ = g_vfs_is_active$MH();
        try {
            return (int)mh$.invokeExact(vfs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_file_for_path$MH() {
        return RuntimeHelper.requireNonNull(constants$824.g_vfs_get_file_for_path$MH,"g_vfs_get_file_for_path");
    }
    /**
     * {@snippet :
     * GFile* g_vfs_get_file_for_path(GVfs* vfs, char* path);
     * }
     */
    public static MemorySegment g_vfs_get_file_for_path(MemorySegment vfs, MemorySegment path) {
        var mh$ = g_vfs_get_file_for_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(vfs, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_file_for_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$824.g_vfs_get_file_for_uri$MH,"g_vfs_get_file_for_uri");
    }
    /**
     * {@snippet :
     * GFile* g_vfs_get_file_for_uri(GVfs* vfs, char* uri);
     * }
     */
    public static MemorySegment g_vfs_get_file_for_uri(MemorySegment vfs, MemorySegment uri) {
        var mh$ = g_vfs_get_file_for_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(vfs, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_supported_uri_schemes$MH() {
        return RuntimeHelper.requireNonNull(constants$825.g_vfs_get_supported_uri_schemes$MH,"g_vfs_get_supported_uri_schemes");
    }
    /**
     * {@snippet :
     * const gchar** g_vfs_get_supported_uri_schemes(GVfs* vfs);
     * }
     */
    public static MemorySegment g_vfs_get_supported_uri_schemes(MemorySegment vfs) {
        var mh$ = g_vfs_get_supported_uri_schemes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(vfs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_parse_name$MH() {
        return RuntimeHelper.requireNonNull(constants$825.g_vfs_parse_name$MH,"g_vfs_parse_name");
    }
    /**
     * {@snippet :
     * GFile* g_vfs_parse_name(GVfs* vfs, char* parse_name);
     * }
     */
    public static MemorySegment g_vfs_parse_name(MemorySegment vfs, MemorySegment parse_name) {
        var mh$ = g_vfs_parse_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(vfs, parse_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$825.g_vfs_get_default$MH,"g_vfs_get_default");
    }
    /**
     * {@snippet :
     * GVfs* g_vfs_get_default();
     * }
     */
    public static MemorySegment g_vfs_get_default() {
        var mh$ = g_vfs_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_local$MH() {
        return RuntimeHelper.requireNonNull(constants$825.g_vfs_get_local$MH,"g_vfs_get_local");
    }
    /**
     * {@snippet :
     * GVfs* g_vfs_get_local();
     * }
     */
    public static MemorySegment g_vfs_get_local() {
        var mh$ = g_vfs_get_local$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_register_uri_scheme$MH() {
        return RuntimeHelper.requireNonNull(constants$825.g_vfs_register_uri_scheme$MH,"g_vfs_register_uri_scheme");
    }
    /**
     * {@snippet :
     * gboolean g_vfs_register_uri_scheme(GVfs* vfs, char* scheme, GVfsFileLookupFunc uri_func, gpointer uri_data, GDestroyNotify uri_destroy, GVfsFileLookupFunc parse_name_func, gpointer parse_name_data, GDestroyNotify parse_name_destroy);
     * }
     */
    public static int g_vfs_register_uri_scheme(MemorySegment vfs, MemorySegment scheme, MemorySegment uri_func, MemorySegment uri_data, MemorySegment uri_destroy, MemorySegment parse_name_func, MemorySegment parse_name_data, MemorySegment parse_name_destroy) {
        var mh$ = g_vfs_register_uri_scheme$MH();
        try {
            return (int)mh$.invokeExact(vfs, scheme, uri_func, uri_data, uri_destroy, parse_name_func, parse_name_data, parse_name_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_unregister_uri_scheme$MH() {
        return RuntimeHelper.requireNonNull(constants$825.g_vfs_unregister_uri_scheme$MH,"g_vfs_unregister_uri_scheme");
    }
    /**
     * {@snippet :
     * gboolean g_vfs_unregister_uri_scheme(GVfs* vfs, char* scheme);
     * }
     */
    public static int g_vfs_unregister_uri_scheme(MemorySegment vfs, MemorySegment scheme) {
        var mh$ = g_vfs_unregister_uri_scheme$MH();
        try {
            return (int)mh$.invokeExact(vfs, scheme);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$826.g_volume_get_type$MH,"g_volume_get_type");
    }
    /**
     * {@snippet :
     * GType g_volume_get_type();
     * }
     */
    public static long g_volume_get_type() {
        var mh$ = g_volume_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$826.g_volume_get_name$MH,"g_volume_get_name");
    }
    /**
     * {@snippet :
     * char* g_volume_get_name(GVolume* volume);
     * }
     */
    public static MemorySegment g_volume_get_name(MemorySegment volume) {
        var mh$ = g_volume_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$826.g_volume_get_icon$MH,"g_volume_get_icon");
    }
    /**
     * {@snippet :
     * GIcon* g_volume_get_icon(GVolume* volume);
     * }
     */
    public static MemorySegment g_volume_get_icon(MemorySegment volume) {
        var mh$ = g_volume_get_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_symbolic_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$826.g_volume_get_symbolic_icon$MH,"g_volume_get_symbolic_icon");
    }
    /**
     * {@snippet :
     * GIcon* g_volume_get_symbolic_icon(GVolume* volume);
     * }
     */
    public static MemorySegment g_volume_get_symbolic_icon(MemorySegment volume) {
        var mh$ = g_volume_get_symbolic_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_uuid$MH() {
        return RuntimeHelper.requireNonNull(constants$826.g_volume_get_uuid$MH,"g_volume_get_uuid");
    }
    /**
     * {@snippet :
     * char* g_volume_get_uuid(GVolume* volume);
     * }
     */
    public static MemorySegment g_volume_get_uuid(MemorySegment volume) {
        var mh$ = g_volume_get_uuid$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_drive$MH() {
        return RuntimeHelper.requireNonNull(constants$826.g_volume_get_drive$MH,"g_volume_get_drive");
    }
    /**
     * {@snippet :
     * GDrive* g_volume_get_drive(GVolume* volume);
     * }
     */
    public static MemorySegment g_volume_get_drive(MemorySegment volume) {
        var mh$ = g_volume_get_drive$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_mount$MH() {
        return RuntimeHelper.requireNonNull(constants$827.g_volume_get_mount$MH,"g_volume_get_mount");
    }
    /**
     * {@snippet :
     * GMount* g_volume_get_mount(GVolume* volume);
     * }
     */
    public static MemorySegment g_volume_get_mount(MemorySegment volume) {
        var mh$ = g_volume_get_mount$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_can_mount$MH() {
        return RuntimeHelper.requireNonNull(constants$827.g_volume_can_mount$MH,"g_volume_can_mount");
    }
    /**
     * {@snippet :
     * gboolean g_volume_can_mount(GVolume* volume);
     * }
     */
    public static int g_volume_can_mount(MemorySegment volume) {
        var mh$ = g_volume_can_mount$MH();
        try {
            return (int)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_can_eject$MH() {
        return RuntimeHelper.requireNonNull(constants$827.g_volume_can_eject$MH,"g_volume_can_eject");
    }
    /**
     * {@snippet :
     * gboolean g_volume_can_eject(GVolume* volume);
     * }
     */
    public static int g_volume_can_eject(MemorySegment volume) {
        var mh$ = g_volume_can_eject$MH();
        try {
            return (int)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_should_automount$MH() {
        return RuntimeHelper.requireNonNull(constants$827.g_volume_should_automount$MH,"g_volume_should_automount");
    }
    /**
     * {@snippet :
     * gboolean g_volume_should_automount(GVolume* volume);
     * }
     */
    public static int g_volume_should_automount(MemorySegment volume) {
        var mh$ = g_volume_should_automount$MH();
        try {
            return (int)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_mount$MH() {
        return RuntimeHelper.requireNonNull(constants$827.g_volume_mount$MH,"g_volume_mount");
    }
    /**
     * {@snippet :
     * void g_volume_mount(GVolume* volume, GMountMountFlags flags, GMountOperation* mount_operation, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_volume_mount(MemorySegment volume, int flags, MemorySegment mount_operation, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_volume_mount$MH();
        try {
            mh$.invokeExact(volume, flags, mount_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_mount_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$827.g_volume_mount_finish$MH,"g_volume_mount_finish");
    }
    /**
     * {@snippet :
     * gboolean g_volume_mount_finish(GVolume* volume, GAsyncResult* result, GError** error);
     * }
     */
    public static int g_volume_mount_finish(MemorySegment volume, MemorySegment result, MemorySegment error) {
        var mh$ = g_volume_mount_finish$MH();
        try {
            return (int)mh$.invokeExact(volume, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_eject$MH() {
        return RuntimeHelper.requireNonNull(constants$828.g_volume_eject$MH,"g_volume_eject");
    }
    /**
     * {@snippet :
     * void g_volume_eject(GVolume* volume, GMountUnmountFlags flags, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_volume_eject(MemorySegment volume, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_volume_eject$MH();
        try {
            mh$.invokeExact(volume, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_eject_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$828.g_volume_eject_finish$MH,"g_volume_eject_finish");
    }
    /**
     * {@snippet :
     * gboolean g_volume_eject_finish(GVolume* volume, GAsyncResult* result, GError** error);
     * }
     */
    public static int g_volume_eject_finish(MemorySegment volume, MemorySegment result, MemorySegment error) {
        var mh$ = g_volume_eject_finish$MH();
        try {
            return (int)mh$.invokeExact(volume, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_identifier$MH() {
        return RuntimeHelper.requireNonNull(constants$828.g_volume_get_identifier$MH,"g_volume_get_identifier");
    }
    /**
     * {@snippet :
     * char* g_volume_get_identifier(GVolume* volume, char* kind);
     * }
     */
    public static MemorySegment g_volume_get_identifier(MemorySegment volume, MemorySegment kind) {
        var mh$ = g_volume_get_identifier$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume, kind);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_enumerate_identifiers$MH() {
        return RuntimeHelper.requireNonNull(constants$828.g_volume_enumerate_identifiers$MH,"g_volume_enumerate_identifiers");
    }
    /**
     * {@snippet :
     * char** g_volume_enumerate_identifiers(GVolume* volume);
     * }
     */
    public static MemorySegment g_volume_enumerate_identifiers(MemorySegment volume) {
        var mh$ = g_volume_enumerate_identifiers$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_activation_root$MH() {
        return RuntimeHelper.requireNonNull(constants$828.g_volume_get_activation_root$MH,"g_volume_get_activation_root");
    }
    /**
     * {@snippet :
     * GFile* g_volume_get_activation_root(GVolume* volume);
     * }
     */
    public static MemorySegment g_volume_get_activation_root(MemorySegment volume) {
        var mh$ = g_volume_get_activation_root$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_eject_with_operation$MH() {
        return RuntimeHelper.requireNonNull(constants$828.g_volume_eject_with_operation$MH,"g_volume_eject_with_operation");
    }
    /**
     * {@snippet :
     * void g_volume_eject_with_operation(GVolume* volume, GMountUnmountFlags flags, GMountOperation* mount_operation, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_volume_eject_with_operation(MemorySegment volume, int flags, MemorySegment mount_operation, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_volume_eject_with_operation$MH();
        try {
            mh$.invokeExact(volume, flags, mount_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_eject_with_operation_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$829.g_volume_eject_with_operation_finish$MH,"g_volume_eject_with_operation_finish");
    }
    /**
     * {@snippet :
     * gboolean g_volume_eject_with_operation_finish(GVolume* volume, GAsyncResult* result, GError** error);
     * }
     */
    public static int g_volume_eject_with_operation_finish(MemorySegment volume, MemorySegment result, MemorySegment error) {
        var mh$ = g_volume_eject_with_operation_finish$MH();
        try {
            return (int)mh$.invokeExact(volume, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_sort_key$MH() {
        return RuntimeHelper.requireNonNull(constants$829.g_volume_get_sort_key$MH,"g_volume_get_sort_key");
    }
    /**
     * {@snippet :
     * const gchar* g_volume_get_sort_key(GVolume* volume);
     * }
     */
    public static MemorySegment g_volume_get_sort_key(MemorySegment volume) {
        var mh$ = g_volume_get_sort_key$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_compressor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$829.g_zlib_compressor_get_type$MH,"g_zlib_compressor_get_type");
    }
    /**
     * {@snippet :
     * GType g_zlib_compressor_get_type();
     * }
     */
    public static long g_zlib_compressor_get_type() {
        var mh$ = g_zlib_compressor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_compressor_new$MH() {
        return RuntimeHelper.requireNonNull(constants$829.g_zlib_compressor_new$MH,"g_zlib_compressor_new");
    }
    /**
     * {@snippet :
     * GZlibCompressor* g_zlib_compressor_new(GZlibCompressorFormat format, int level);
     * }
     */
    public static MemorySegment g_zlib_compressor_new(int format, int level) {
        var mh$ = g_zlib_compressor_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(format, level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_compressor_get_file_info$MH() {
        return RuntimeHelper.requireNonNull(constants$829.g_zlib_compressor_get_file_info$MH,"g_zlib_compressor_get_file_info");
    }
    /**
     * {@snippet :
     * GFileInfo* g_zlib_compressor_get_file_info(GZlibCompressor* compressor);
     * }
     */
    public static MemorySegment g_zlib_compressor_get_file_info(MemorySegment compressor) {
        var mh$ = g_zlib_compressor_get_file_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(compressor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_compressor_set_file_info$MH() {
        return RuntimeHelper.requireNonNull(constants$829.g_zlib_compressor_set_file_info$MH,"g_zlib_compressor_set_file_info");
    }
    /**
     * {@snippet :
     * void g_zlib_compressor_set_file_info(GZlibCompressor* compressor, GFileInfo* file_info);
     * }
     */
    public static void g_zlib_compressor_set_file_info(MemorySegment compressor, MemorySegment file_info) {
        var mh$ = g_zlib_compressor_set_file_info$MH();
        try {
            mh$.invokeExact(compressor, file_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_decompressor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$830.g_zlib_decompressor_get_type$MH,"g_zlib_decompressor_get_type");
    }
    /**
     * {@snippet :
     * GType g_zlib_decompressor_get_type();
     * }
     */
    public static long g_zlib_decompressor_get_type() {
        var mh$ = g_zlib_decompressor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_decompressor_new$MH() {
        return RuntimeHelper.requireNonNull(constants$830.g_zlib_decompressor_new$MH,"g_zlib_decompressor_new");
    }
    /**
     * {@snippet :
     * GZlibDecompressor* g_zlib_decompressor_new(GZlibCompressorFormat format);
     * }
     */
    public static MemorySegment g_zlib_decompressor_new(int format) {
        var mh$ = g_zlib_decompressor_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_decompressor_get_file_info$MH() {
        return RuntimeHelper.requireNonNull(constants$830.g_zlib_decompressor_get_file_info$MH,"g_zlib_decompressor_get_file_info");
    }
    /**
     * {@snippet :
     * GFileInfo* g_zlib_decompressor_get_file_info(GZlibDecompressor* decompressor);
     * }
     */
    public static MemorySegment g_zlib_decompressor_get_file_info(MemorySegment decompressor) {
        var mh$ = g_zlib_decompressor_get_file_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(decompressor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GAction* GAction_autoptr;
     * }
     */
    public static final OfAddress GAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GAction_listautoptr;
     * }
     */
    public static final OfAddress GAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GAction_slistautoptr;
     * }
     */
    public static final OfAddress GAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GAction_queueautoptr;
     * }
     */
    public static final OfAddress GAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GActionMap* GActionMap_autoptr;
     * }
     */
    public static final OfAddress GActionMap_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GActionMap_listautoptr;
     * }
     */
    public static final OfAddress GActionMap_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GActionMap_slistautoptr;
     * }
     */
    public static final OfAddress GActionMap_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GActionMap_queueautoptr;
     * }
     */
    public static final OfAddress GActionMap_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GAppInfo* GAppInfo_autoptr;
     * }
     */
    public static final OfAddress GAppInfo_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GAppInfo_listautoptr;
     * }
     */
    public static final OfAddress GAppInfo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GAppInfo_slistautoptr;
     * }
     */
    public static final OfAddress GAppInfo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GAppInfo_queueautoptr;
     * }
     */
    public static final OfAddress GAppInfo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GAppLaunchContext* GAppLaunchContext_autoptr;
     * }
     */
    public static final OfAddress GAppLaunchContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GAppLaunchContext_listautoptr;
     * }
     */
    public static final OfAddress GAppLaunchContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GAppLaunchContext_slistautoptr;
     * }
     */
    public static final OfAddress GAppLaunchContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GAppLaunchContext_queueautoptr;
     * }
     */
    public static final OfAddress GAppLaunchContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GAppInfoMonitor* GAppInfoMonitor_autoptr;
     * }
     */
    public static final OfAddress GAppInfoMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GAppInfoMonitor_listautoptr;
     * }
     */
    public static final OfAddress GAppInfoMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GAppInfoMonitor_slistautoptr;
     * }
     */
    public static final OfAddress GAppInfoMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GAppInfoMonitor_queueautoptr;
     * }
     */
    public static final OfAddress GAppInfoMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GApplicationCommandLine* GApplicationCommandLine_autoptr;
     * }
     */
    public static final OfAddress GApplicationCommandLine_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GApplicationCommandLine_listautoptr;
     * }
     */
    public static final OfAddress GApplicationCommandLine_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GApplicationCommandLine_slistautoptr;
     * }
     */
    public static final OfAddress GApplicationCommandLine_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GApplicationCommandLine_queueautoptr;
     * }
     */
    public static final OfAddress GApplicationCommandLine_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GApplication* GApplication_autoptr;
     * }
     */
    public static final OfAddress GApplication_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GApplication_listautoptr;
     * }
     */
    public static final OfAddress GApplication_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GApplication_slistautoptr;
     * }
     */
    public static final OfAddress GApplication_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GApplication_queueautoptr;
     * }
     */
    public static final OfAddress GApplication_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GAsyncInitable* GAsyncInitable_autoptr;
     * }
     */
    public static final OfAddress GAsyncInitable_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GAsyncInitable_listautoptr;
     * }
     */
    public static final OfAddress GAsyncInitable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GAsyncInitable_slistautoptr;
     * }
     */
    public static final OfAddress GAsyncInitable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GAsyncInitable_queueautoptr;
     * }
     */
    public static final OfAddress GAsyncInitable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GAsyncResult* GAsyncResult_autoptr;
     * }
     */
    public static final OfAddress GAsyncResult_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GAsyncResult_listautoptr;
     * }
     */
    public static final OfAddress GAsyncResult_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GAsyncResult_slistautoptr;
     * }
     */
    public static final OfAddress GAsyncResult_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GAsyncResult_queueautoptr;
     * }
     */
    public static final OfAddress GAsyncResult_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GBufferedInputStream* GBufferedInputStream_autoptr;
     * }
     */
    public static final OfAddress GBufferedInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GBufferedInputStream_listautoptr;
     * }
     */
    public static final OfAddress GBufferedInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GBufferedInputStream_slistautoptr;
     * }
     */
    public static final OfAddress GBufferedInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GBufferedInputStream_queueautoptr;
     * }
     */
    public static final OfAddress GBufferedInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GBufferedOutputStream* GBufferedOutputStream_autoptr;
     * }
     */
    public static final OfAddress GBufferedOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GBufferedOutputStream_listautoptr;
     * }
     */
    public static final OfAddress GBufferedOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GBufferedOutputStream_slistautoptr;
     * }
     */
    public static final OfAddress GBufferedOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GBufferedOutputStream_queueautoptr;
     * }
     */
    public static final OfAddress GBufferedOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GBytesIcon* GBytesIcon_autoptr;
     * }
     */
    public static final OfAddress GBytesIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GBytesIcon_listautoptr;
     * }
     */
    public static final OfAddress GBytesIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GBytesIcon_slistautoptr;
     * }
     */
    public static final OfAddress GBytesIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GBytesIcon_queueautoptr;
     * }
     */
    public static final OfAddress GBytesIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GCancellable* GCancellable_autoptr;
     * }
     */
    public static final OfAddress GCancellable_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GCancellable_listautoptr;
     * }
     */
    public static final OfAddress GCancellable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GCancellable_slistautoptr;
     * }
     */
    public static final OfAddress GCancellable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GCancellable_queueautoptr;
     * }
     */
    public static final OfAddress GCancellable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GCharsetConverter* GCharsetConverter_autoptr;
     * }
     */
    public static final OfAddress GCharsetConverter_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GCharsetConverter_listautoptr;
     * }
     */
    public static final OfAddress GCharsetConverter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GCharsetConverter_slistautoptr;
     * }
     */
    public static final OfAddress GCharsetConverter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GCharsetConverter_queueautoptr;
     * }
     */
    public static final OfAddress GCharsetConverter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GConverter* GConverter_autoptr;
     * }
     */
    public static final OfAddress GConverter_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GConverter_listautoptr;
     * }
     */
    public static final OfAddress GConverter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GConverter_slistautoptr;
     * }
     */
    public static final OfAddress GConverter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GConverter_queueautoptr;
     * }
     */
    public static final OfAddress GConverter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GConverterInputStream* GConverterInputStream_autoptr;
     * }
     */
    public static final OfAddress GConverterInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GConverterInputStream_listautoptr;
     * }
     */
    public static final OfAddress GConverterInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GConverterInputStream_slistautoptr;
     * }
     */
    public static final OfAddress GConverterInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GConverterInputStream_queueautoptr;
     * }
     */
    public static final OfAddress GConverterInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GConverterOutputStream* GConverterOutputStream_autoptr;
     * }
     */
    public static final OfAddress GConverterOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GConverterOutputStream_listautoptr;
     * }
     */
    public static final OfAddress GConverterOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GConverterOutputStream_slistautoptr;
     * }
     */
    public static final OfAddress GConverterOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GConverterOutputStream_queueautoptr;
     * }
     */
    public static final OfAddress GConverterOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GCredentials* GCredentials_autoptr;
     * }
     */
    public static final OfAddress GCredentials_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GCredentials_listautoptr;
     * }
     */
    public static final OfAddress GCredentials_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GCredentials_slistautoptr;
     * }
     */
    public static final OfAddress GCredentials_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GCredentials_queueautoptr;
     * }
     */
    public static final OfAddress GCredentials_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDatagramBased* GDatagramBased_autoptr;
     * }
     */
    public static final OfAddress GDatagramBased_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDatagramBased_listautoptr;
     * }
     */
    public static final OfAddress GDatagramBased_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDatagramBased_slistautoptr;
     * }
     */
    public static final OfAddress GDatagramBased_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDatagramBased_queueautoptr;
     * }
     */
    public static final OfAddress GDatagramBased_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDataInputStream* GDataInputStream_autoptr;
     * }
     */
    public static final OfAddress GDataInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDataInputStream_listautoptr;
     * }
     */
    public static final OfAddress GDataInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDataInputStream_slistautoptr;
     * }
     */
    public static final OfAddress GDataInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDataInputStream_queueautoptr;
     * }
     */
    public static final OfAddress GDataInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDataOutputStream* GDataOutputStream_autoptr;
     * }
     */
    public static final OfAddress GDataOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDataOutputStream_listautoptr;
     * }
     */
    public static final OfAddress GDataOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDataOutputStream_slistautoptr;
     * }
     */
    public static final OfAddress GDataOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDataOutputStream_queueautoptr;
     * }
     */
    public static final OfAddress GDataOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDBusActionGroup* GDBusActionGroup_autoptr;
     * }
     */
    public static final OfAddress GDBusActionGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusActionGroup_listautoptr;
     * }
     */
    public static final OfAddress GDBusActionGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusActionGroup_slistautoptr;
     * }
     */
    public static final OfAddress GDBusActionGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusActionGroup_queueautoptr;
     * }
     */
    public static final OfAddress GDBusActionGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDBusAuthObserver* GDBusAuthObserver_autoptr;
     * }
     */
    public static final OfAddress GDBusAuthObserver_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusAuthObserver_listautoptr;
     * }
     */
    public static final OfAddress GDBusAuthObserver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusAuthObserver_slistautoptr;
     * }
     */
    public static final OfAddress GDBusAuthObserver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusAuthObserver_queueautoptr;
     * }
     */
    public static final OfAddress GDBusAuthObserver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDBusConnection* GDBusConnection_autoptr;
     * }
     */
    public static final OfAddress GDBusConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusConnection_listautoptr;
     * }
     */
    public static final OfAddress GDBusConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusConnection_slistautoptr;
     * }
     */
    public static final OfAddress GDBusConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusConnection_queueautoptr;
     * }
     */
    public static final OfAddress GDBusConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDBusInterface* GDBusInterface_autoptr;
     * }
     */
    public static final OfAddress GDBusInterface_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusInterface_listautoptr;
     * }
     */
    public static final OfAddress GDBusInterface_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusInterface_slistautoptr;
     * }
     */
    public static final OfAddress GDBusInterface_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusInterface_queueautoptr;
     * }
     */
    public static final OfAddress GDBusInterface_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDBusInterfaceSkeleton* GDBusInterfaceSkeleton_autoptr;
     * }
     */
    public static final OfAddress GDBusInterfaceSkeleton_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusInterfaceSkeleton_listautoptr;
     * }
     */
    public static final OfAddress GDBusInterfaceSkeleton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusInterfaceSkeleton_slistautoptr;
     * }
     */
    public static final OfAddress GDBusInterfaceSkeleton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusInterfaceSkeleton_queueautoptr;
     * }
     */
    public static final OfAddress GDBusInterfaceSkeleton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDBusMenuModel* GDBusMenuModel_autoptr;
     * }
     */
    public static final OfAddress GDBusMenuModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusMenuModel_listautoptr;
     * }
     */
    public static final OfAddress GDBusMenuModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusMenuModel_slistautoptr;
     * }
     */
    public static final OfAddress GDBusMenuModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusMenuModel_queueautoptr;
     * }
     */
    public static final OfAddress GDBusMenuModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDBusMessage* GDBusMessage_autoptr;
     * }
     */
    public static final OfAddress GDBusMessage_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusMessage_listautoptr;
     * }
     */
    public static final OfAddress GDBusMessage_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusMessage_slistautoptr;
     * }
     */
    public static final OfAddress GDBusMessage_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusMessage_queueautoptr;
     * }
     */
    public static final OfAddress GDBusMessage_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDBusMethodInvocation* GDBusMethodInvocation_autoptr;
     * }
     */
    public static final OfAddress GDBusMethodInvocation_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusMethodInvocation_listautoptr;
     * }
     */
    public static final OfAddress GDBusMethodInvocation_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusMethodInvocation_slistautoptr;
     * }
     */
    public static final OfAddress GDBusMethodInvocation_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusMethodInvocation_queueautoptr;
     * }
     */
    public static final OfAddress GDBusMethodInvocation_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDBusNodeInfo* GDBusNodeInfo_autoptr;
     * }
     */
    public static final OfAddress GDBusNodeInfo_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusNodeInfo_listautoptr;
     * }
     */
    public static final OfAddress GDBusNodeInfo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusNodeInfo_slistautoptr;
     * }
     */
    public static final OfAddress GDBusNodeInfo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusNodeInfo_queueautoptr;
     * }
     */
    public static final OfAddress GDBusNodeInfo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDBusObject* GDBusObject_autoptr;
     * }
     */
    public static final OfAddress GDBusObject_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusObject_listautoptr;
     * }
     */
    public static final OfAddress GDBusObject_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusObject_slistautoptr;
     * }
     */
    public static final OfAddress GDBusObject_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusObject_queueautoptr;
     * }
     */
    public static final OfAddress GDBusObject_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDBusObjectManagerClient* GDBusObjectManagerClient_autoptr;
     * }
     */
    public static final OfAddress GDBusObjectManagerClient_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusObjectManagerClient_listautoptr;
     * }
     */
    public static final OfAddress GDBusObjectManagerClient_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusObjectManagerClient_slistautoptr;
     * }
     */
    public static final OfAddress GDBusObjectManagerClient_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusObjectManagerClient_queueautoptr;
     * }
     */
    public static final OfAddress GDBusObjectManagerClient_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDBusObjectManager* GDBusObjectManager_autoptr;
     * }
     */
    public static final OfAddress GDBusObjectManager_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusObjectManager_listautoptr;
     * }
     */
    public static final OfAddress GDBusObjectManager_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusObjectManager_slistautoptr;
     * }
     */
    public static final OfAddress GDBusObjectManager_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusObjectManager_queueautoptr;
     * }
     */
    public static final OfAddress GDBusObjectManager_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDBusObjectManagerServer* GDBusObjectManagerServer_autoptr;
     * }
     */
    public static final OfAddress GDBusObjectManagerServer_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusObjectManagerServer_listautoptr;
     * }
     */
    public static final OfAddress GDBusObjectManagerServer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusObjectManagerServer_slistautoptr;
     * }
     */
    public static final OfAddress GDBusObjectManagerServer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusObjectManagerServer_queueautoptr;
     * }
     */
    public static final OfAddress GDBusObjectManagerServer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDBusObjectProxy* GDBusObjectProxy_autoptr;
     * }
     */
    public static final OfAddress GDBusObjectProxy_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusObjectProxy_listautoptr;
     * }
     */
    public static final OfAddress GDBusObjectProxy_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusObjectProxy_slistautoptr;
     * }
     */
    public static final OfAddress GDBusObjectProxy_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusObjectProxy_queueautoptr;
     * }
     */
    public static final OfAddress GDBusObjectProxy_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDBusObjectSkeleton* GDBusObjectSkeleton_autoptr;
     * }
     */
    public static final OfAddress GDBusObjectSkeleton_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusObjectSkeleton_listautoptr;
     * }
     */
    public static final OfAddress GDBusObjectSkeleton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusObjectSkeleton_slistautoptr;
     * }
     */
    public static final OfAddress GDBusObjectSkeleton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusObjectSkeleton_queueautoptr;
     * }
     */
    public static final OfAddress GDBusObjectSkeleton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDBusProxy* GDBusProxy_autoptr;
     * }
     */
    public static final OfAddress GDBusProxy_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusProxy_listautoptr;
     * }
     */
    public static final OfAddress GDBusProxy_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusProxy_slistautoptr;
     * }
     */
    public static final OfAddress GDBusProxy_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusProxy_queueautoptr;
     * }
     */
    public static final OfAddress GDBusProxy_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDBusServer* GDBusServer_autoptr;
     * }
     */
    public static final OfAddress GDBusServer_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusServer_listautoptr;
     * }
     */
    public static final OfAddress GDBusServer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusServer_slistautoptr;
     * }
     */
    public static final OfAddress GDBusServer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusServer_queueautoptr;
     * }
     */
    public static final OfAddress GDBusServer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDrive* GDrive_autoptr;
     * }
     */
    public static final OfAddress GDrive_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDrive_listautoptr;
     * }
     */
    public static final OfAddress GDrive_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDrive_slistautoptr;
     * }
     */
    public static final OfAddress GDrive_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDrive_queueautoptr;
     * }
     */
    public static final OfAddress GDrive_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GEmblemedIcon* GEmblemedIcon_autoptr;
     * }
     */
    public static final OfAddress GEmblemedIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GEmblemedIcon_listautoptr;
     * }
     */
    public static final OfAddress GEmblemedIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GEmblemedIcon_slistautoptr;
     * }
     */
    public static final OfAddress GEmblemedIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GEmblemedIcon_queueautoptr;
     * }
     */
    public static final OfAddress GEmblemedIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GEmblem* GEmblem_autoptr;
     * }
     */
    public static final OfAddress GEmblem_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GEmblem_listautoptr;
     * }
     */
    public static final OfAddress GEmblem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GEmblem_slistautoptr;
     * }
     */
    public static final OfAddress GEmblem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GEmblem_queueautoptr;
     * }
     */
    public static final OfAddress GEmblem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GFileEnumerator* GFileEnumerator_autoptr;
     * }
     */
    public static final OfAddress GFileEnumerator_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GFileEnumerator_listautoptr;
     * }
     */
    public static final OfAddress GFileEnumerator_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GFileEnumerator_slistautoptr;
     * }
     */
    public static final OfAddress GFileEnumerator_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFileEnumerator_queueautoptr;
     * }
     */
    public static final OfAddress GFileEnumerator_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GFile* GFile_autoptr;
     * }
     */
    public static final OfAddress GFile_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GFile_listautoptr;
     * }
     */
    public static final OfAddress GFile_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GFile_slistautoptr;
     * }
     */
    public static final OfAddress GFile_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFile_queueautoptr;
     * }
     */
    public static final OfAddress GFile_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GFileAttributeInfoList* GFileAttributeInfoList_autoptr;
     * }
     */
    public static final OfAddress GFileAttributeInfoList_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GFileAttributeInfoList_listautoptr;
     * }
     */
    public static final OfAddress GFileAttributeInfoList_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GFileAttributeInfoList_slistautoptr;
     * }
     */
    public static final OfAddress GFileAttributeInfoList_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFileAttributeInfoList_queueautoptr;
     * }
     */
    public static final OfAddress GFileAttributeInfoList_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GFileIcon* GFileIcon_autoptr;
     * }
     */
    public static final OfAddress GFileIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GFileIcon_listautoptr;
     * }
     */
    public static final OfAddress GFileIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GFileIcon_slistautoptr;
     * }
     */
    public static final OfAddress GFileIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFileIcon_queueautoptr;
     * }
     */
    public static final OfAddress GFileIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GFileInfo* GFileInfo_autoptr;
     * }
     */
    public static final OfAddress GFileInfo_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GFileInfo_listautoptr;
     * }
     */
    public static final OfAddress GFileInfo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GFileInfo_slistautoptr;
     * }
     */
    public static final OfAddress GFileInfo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFileInfo_queueautoptr;
     * }
     */
    public static final OfAddress GFileInfo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GFileInputStream* GFileInputStream_autoptr;
     * }
     */
    public static final OfAddress GFileInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GFileInputStream_listautoptr;
     * }
     */
    public static final OfAddress GFileInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GFileInputStream_slistautoptr;
     * }
     */
    public static final OfAddress GFileInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFileInputStream_queueautoptr;
     * }
     */
    public static final OfAddress GFileInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GFileIOStream* GFileIOStream_autoptr;
     * }
     */
    public static final OfAddress GFileIOStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GFileIOStream_listautoptr;
     * }
     */
    public static final OfAddress GFileIOStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GFileIOStream_slistautoptr;
     * }
     */
    public static final OfAddress GFileIOStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFileIOStream_queueautoptr;
     * }
     */
    public static final OfAddress GFileIOStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GFileMonitor* GFileMonitor_autoptr;
     * }
     */
    public static final OfAddress GFileMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GFileMonitor_listautoptr;
     * }
     */
    public static final OfAddress GFileMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GFileMonitor_slistautoptr;
     * }
     */
    public static final OfAddress GFileMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFileMonitor_queueautoptr;
     * }
     */
    public static final OfAddress GFileMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GFilenameCompleter* GFilenameCompleter_autoptr;
     * }
     */
    public static final OfAddress GFilenameCompleter_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GFilenameCompleter_listautoptr;
     * }
     */
    public static final OfAddress GFilenameCompleter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GFilenameCompleter_slistautoptr;
     * }
     */
    public static final OfAddress GFilenameCompleter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFilenameCompleter_queueautoptr;
     * }
     */
    public static final OfAddress GFilenameCompleter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GFileOutputStream* GFileOutputStream_autoptr;
     * }
     */
    public static final OfAddress GFileOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GFileOutputStream_listautoptr;
     * }
     */
    public static final OfAddress GFileOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GFileOutputStream_slistautoptr;
     * }
     */
    public static final OfAddress GFileOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFileOutputStream_queueautoptr;
     * }
     */
    public static final OfAddress GFileOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GFilterInputStream* GFilterInputStream_autoptr;
     * }
     */
    public static final OfAddress GFilterInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GFilterInputStream_listautoptr;
     * }
     */
    public static final OfAddress GFilterInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GFilterInputStream_slistautoptr;
     * }
     */
    public static final OfAddress GFilterInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFilterInputStream_queueautoptr;
     * }
     */
    public static final OfAddress GFilterInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GFilterOutputStream* GFilterOutputStream_autoptr;
     * }
     */
    public static final OfAddress GFilterOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GFilterOutputStream_listautoptr;
     * }
     */
    public static final OfAddress GFilterOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GFilterOutputStream_slistautoptr;
     * }
     */
    public static final OfAddress GFilterOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFilterOutputStream_queueautoptr;
     * }
     */
    public static final OfAddress GFilterOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GIcon* GIcon_autoptr;
     * }
     */
    public static final OfAddress GIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GIcon_listautoptr;
     * }
     */
    public static final OfAddress GIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GIcon_slistautoptr;
     * }
     */
    public static final OfAddress GIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GIcon_queueautoptr;
     * }
     */
    public static final OfAddress GIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GInetAddress* GInetAddress_autoptr;
     * }
     */
    public static final OfAddress GInetAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GInetAddress_listautoptr;
     * }
     */
    public static final OfAddress GInetAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GInetAddress_slistautoptr;
     * }
     */
    public static final OfAddress GInetAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GInetAddress_queueautoptr;
     * }
     */
    public static final OfAddress GInetAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GInetAddressMask* GInetAddressMask_autoptr;
     * }
     */
    public static final OfAddress GInetAddressMask_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GInetAddressMask_listautoptr;
     * }
     */
    public static final OfAddress GInetAddressMask_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GInetAddressMask_slistautoptr;
     * }
     */
    public static final OfAddress GInetAddressMask_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GInetAddressMask_queueautoptr;
     * }
     */
    public static final OfAddress GInetAddressMask_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GInetSocketAddress* GInetSocketAddress_autoptr;
     * }
     */
    public static final OfAddress GInetSocketAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GInetSocketAddress_listautoptr;
     * }
     */
    public static final OfAddress GInetSocketAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GInetSocketAddress_slistautoptr;
     * }
     */
    public static final OfAddress GInetSocketAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GInetSocketAddress_queueautoptr;
     * }
     */
    public static final OfAddress GInetSocketAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GInitable* GInitable_autoptr;
     * }
     */
    public static final OfAddress GInitable_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GInitable_listautoptr;
     * }
     */
    public static final OfAddress GInitable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GInitable_slistautoptr;
     * }
     */
    public static final OfAddress GInitable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GInitable_queueautoptr;
     * }
     */
    public static final OfAddress GInitable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GInputStream* GInputStream_autoptr;
     * }
     */
    public static final OfAddress GInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GInputStream_listautoptr;
     * }
     */
    public static final OfAddress GInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GInputStream_slistautoptr;
     * }
     */
    public static final OfAddress GInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GInputStream_queueautoptr;
     * }
     */
    public static final OfAddress GInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GIOModule* GIOModule_autoptr;
     * }
     */
    public static final OfAddress GIOModule_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GIOModule_listautoptr;
     * }
     */
    public static final OfAddress GIOModule_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GIOModule_slistautoptr;
     * }
     */
    public static final OfAddress GIOModule_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GIOModule_queueautoptr;
     * }
     */
    public static final OfAddress GIOModule_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GIOStream* GIOStream_autoptr;
     * }
     */
    public static final OfAddress GIOStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GIOStream_listautoptr;
     * }
     */
    public static final OfAddress GIOStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GIOStream_slistautoptr;
     * }
     */
    public static final OfAddress GIOStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GIOStream_queueautoptr;
     * }
     */
    public static final OfAddress GIOStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GLoadableIcon* GLoadableIcon_autoptr;
     * }
     */
    public static final OfAddress GLoadableIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GLoadableIcon_listautoptr;
     * }
     */
    public static final OfAddress GLoadableIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GLoadableIcon_slistautoptr;
     * }
     */
    public static final OfAddress GLoadableIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GLoadableIcon_queueautoptr;
     * }
     */
    public static final OfAddress GLoadableIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GMemoryInputStream* GMemoryInputStream_autoptr;
     * }
     */
    public static final OfAddress GMemoryInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GMemoryInputStream_listautoptr;
     * }
     */
    public static final OfAddress GMemoryInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GMemoryInputStream_slistautoptr;
     * }
     */
    public static final OfAddress GMemoryInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMemoryInputStream_queueautoptr;
     * }
     */
    public static final OfAddress GMemoryInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GMemoryOutputStream* GMemoryOutputStream_autoptr;
     * }
     */
    public static final OfAddress GMemoryOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GMemoryOutputStream_listautoptr;
     * }
     */
    public static final OfAddress GMemoryOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GMemoryOutputStream_slistautoptr;
     * }
     */
    public static final OfAddress GMemoryOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMemoryOutputStream_queueautoptr;
     * }
     */
    public static final OfAddress GMemoryOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GMenu* GMenu_autoptr;
     * }
     */
    public static final OfAddress GMenu_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GMenu_listautoptr;
     * }
     */
    public static final OfAddress GMenu_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GMenu_slistautoptr;
     * }
     */
    public static final OfAddress GMenu_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMenu_queueautoptr;
     * }
     */
    public static final OfAddress GMenu_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GMenuItem* GMenuItem_autoptr;
     * }
     */
    public static final OfAddress GMenuItem_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GMenuItem_listautoptr;
     * }
     */
    public static final OfAddress GMenuItem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GMenuItem_slistautoptr;
     * }
     */
    public static final OfAddress GMenuItem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMenuItem_queueautoptr;
     * }
     */
    public static final OfAddress GMenuItem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GMenuModel* GMenuModel_autoptr;
     * }
     */
    public static final OfAddress GMenuModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GMenuModel_listautoptr;
     * }
     */
    public static final OfAddress GMenuModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GMenuModel_slistautoptr;
     * }
     */
    public static final OfAddress GMenuModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMenuModel_queueautoptr;
     * }
     */
    public static final OfAddress GMenuModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GMenuAttributeIter* GMenuAttributeIter_autoptr;
     * }
     */
    public static final OfAddress GMenuAttributeIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GMenuAttributeIter_listautoptr;
     * }
     */
    public static final OfAddress GMenuAttributeIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GMenuAttributeIter_slistautoptr;
     * }
     */
    public static final OfAddress GMenuAttributeIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMenuAttributeIter_queueautoptr;
     * }
     */
    public static final OfAddress GMenuAttributeIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GMenuLinkIter* GMenuLinkIter_autoptr;
     * }
     */
    public static final OfAddress GMenuLinkIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GMenuLinkIter_listautoptr;
     * }
     */
    public static final OfAddress GMenuLinkIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GMenuLinkIter_slistautoptr;
     * }
     */
    public static final OfAddress GMenuLinkIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMenuLinkIter_queueautoptr;
     * }
     */
    public static final OfAddress GMenuLinkIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GMount* GMount_autoptr;
     * }
     */
    public static final OfAddress GMount_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GMount_listautoptr;
     * }
     */
    public static final OfAddress GMount_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GMount_slistautoptr;
     * }
     */
    public static final OfAddress GMount_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMount_queueautoptr;
     * }
     */
    public static final OfAddress GMount_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GMountOperation* GMountOperation_autoptr;
     * }
     */
    public static final OfAddress GMountOperation_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GMountOperation_listautoptr;
     * }
     */
    public static final OfAddress GMountOperation_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GMountOperation_slistautoptr;
     * }
     */
    public static final OfAddress GMountOperation_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMountOperation_queueautoptr;
     * }
     */
    public static final OfAddress GMountOperation_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GNativeVolumeMonitor* GNativeVolumeMonitor_autoptr;
     * }
     */
    public static final OfAddress GNativeVolumeMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GNativeVolumeMonitor_listautoptr;
     * }
     */
    public static final OfAddress GNativeVolumeMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GNativeVolumeMonitor_slistautoptr;
     * }
     */
    public static final OfAddress GNativeVolumeMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GNativeVolumeMonitor_queueautoptr;
     * }
     */
    public static final OfAddress GNativeVolumeMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GNetworkAddress* GNetworkAddress_autoptr;
     * }
     */
    public static final OfAddress GNetworkAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GNetworkAddress_listautoptr;
     * }
     */
    public static final OfAddress GNetworkAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GNetworkAddress_slistautoptr;
     * }
     */
    public static final OfAddress GNetworkAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GNetworkAddress_queueautoptr;
     * }
     */
    public static final OfAddress GNetworkAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GNetworkMonitor* GNetworkMonitor_autoptr;
     * }
     */
    public static final OfAddress GNetworkMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GNetworkMonitor_listautoptr;
     * }
     */
    public static final OfAddress GNetworkMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GNetworkMonitor_slistautoptr;
     * }
     */
    public static final OfAddress GNetworkMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GNetworkMonitor_queueautoptr;
     * }
     */
    public static final OfAddress GNetworkMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GNetworkService* GNetworkService_autoptr;
     * }
     */
    public static final OfAddress GNetworkService_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GNetworkService_listautoptr;
     * }
     */
    public static final OfAddress GNetworkService_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GNetworkService_slistautoptr;
     * }
     */
    public static final OfAddress GNetworkService_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GNetworkService_queueautoptr;
     * }
     */
    public static final OfAddress GNetworkService_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GNotification* GNotification_autoptr;
     * }
     */
    public static final OfAddress GNotification_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GNotification_listautoptr;
     * }
     */
    public static final OfAddress GNotification_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GNotification_slistautoptr;
     * }
     */
    public static final OfAddress GNotification_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GNotification_queueautoptr;
     * }
     */
    public static final OfAddress GNotification_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GOutputStream* GOutputStream_autoptr;
     * }
     */
    public static final OfAddress GOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GOutputStream_listautoptr;
     * }
     */
    public static final OfAddress GOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GOutputStream_slistautoptr;
     * }
     */
    public static final OfAddress GOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GOutputStream_queueautoptr;
     * }
     */
    public static final OfAddress GOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GPermission* GPermission_autoptr;
     * }
     */
    public static final OfAddress GPermission_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GPermission_listautoptr;
     * }
     */
    public static final OfAddress GPermission_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GPermission_slistautoptr;
     * }
     */
    public static final OfAddress GPermission_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GPermission_queueautoptr;
     * }
     */
    public static final OfAddress GPermission_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GPollableInputStream* GPollableInputStream_autoptr;
     * }
     */
    public static final OfAddress GPollableInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GPollableInputStream_listautoptr;
     * }
     */
    public static final OfAddress GPollableInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GPollableInputStream_slistautoptr;
     * }
     */
    public static final OfAddress GPollableInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GPollableInputStream_queueautoptr;
     * }
     */
    public static final OfAddress GPollableInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GPollableOutputStream* GPollableOutputStream_autoptr;
     * }
     */
    public static final OfAddress GPollableOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GPollableOutputStream_listautoptr;
     * }
     */
    public static final OfAddress GPollableOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GPollableOutputStream_slistautoptr;
     * }
     */
    public static final OfAddress GPollableOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GPollableOutputStream_queueautoptr;
     * }
     */
    public static final OfAddress GPollableOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GPropertyAction* GPropertyAction_autoptr;
     * }
     */
    public static final OfAddress GPropertyAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GPropertyAction_listautoptr;
     * }
     */
    public static final OfAddress GPropertyAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GPropertyAction_slistautoptr;
     * }
     */
    public static final OfAddress GPropertyAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GPropertyAction_queueautoptr;
     * }
     */
    public static final OfAddress GPropertyAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GProxyAddressEnumerator* GProxyAddressEnumerator_autoptr;
     * }
     */
    public static final OfAddress GProxyAddressEnumerator_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GProxyAddressEnumerator_listautoptr;
     * }
     */
    public static final OfAddress GProxyAddressEnumerator_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GProxyAddressEnumerator_slistautoptr;
     * }
     */
    public static final OfAddress GProxyAddressEnumerator_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GProxyAddressEnumerator_queueautoptr;
     * }
     */
    public static final OfAddress GProxyAddressEnumerator_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GProxyAddress* GProxyAddress_autoptr;
     * }
     */
    public static final OfAddress GProxyAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GProxyAddress_listautoptr;
     * }
     */
    public static final OfAddress GProxyAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GProxyAddress_slistautoptr;
     * }
     */
    public static final OfAddress GProxyAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GProxyAddress_queueautoptr;
     * }
     */
    public static final OfAddress GProxyAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GProxy* GProxy_autoptr;
     * }
     */
    public static final OfAddress GProxy_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GProxy_listautoptr;
     * }
     */
    public static final OfAddress GProxy_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GProxy_slistautoptr;
     * }
     */
    public static final OfAddress GProxy_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GProxy_queueautoptr;
     * }
     */
    public static final OfAddress GProxy_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GProxyResolver* GProxyResolver_autoptr;
     * }
     */
    public static final OfAddress GProxyResolver_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GProxyResolver_listautoptr;
     * }
     */
    public static final OfAddress GProxyResolver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GProxyResolver_slistautoptr;
     * }
     */
    public static final OfAddress GProxyResolver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GProxyResolver_queueautoptr;
     * }
     */
    public static final OfAddress GProxyResolver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GRemoteActionGroup* GRemoteActionGroup_autoptr;
     * }
     */
    public static final OfAddress GRemoteActionGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GRemoteActionGroup_listautoptr;
     * }
     */
    public static final OfAddress GRemoteActionGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GRemoteActionGroup_slistautoptr;
     * }
     */
    public static final OfAddress GRemoteActionGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GRemoteActionGroup_queueautoptr;
     * }
     */
    public static final OfAddress GRemoteActionGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GResolver* GResolver_autoptr;
     * }
     */
    public static final OfAddress GResolver_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GResolver_listautoptr;
     * }
     */
    public static final OfAddress GResolver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GResolver_slistautoptr;
     * }
     */
    public static final OfAddress GResolver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GResolver_queueautoptr;
     * }
     */
    public static final OfAddress GResolver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GResource* GResource_autoptr;
     * }
     */
    public static final OfAddress GResource_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GResource_listautoptr;
     * }
     */
    public static final OfAddress GResource_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GResource_slistautoptr;
     * }
     */
    public static final OfAddress GResource_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GResource_queueautoptr;
     * }
     */
    public static final OfAddress GResource_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSeekable* GSeekable_autoptr;
     * }
     */
    public static final OfAddress GSeekable_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GSeekable_listautoptr;
     * }
     */
    public static final OfAddress GSeekable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GSeekable_slistautoptr;
     * }
     */
    public static final OfAddress GSeekable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSeekable_queueautoptr;
     * }
     */
    public static final OfAddress GSeekable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
}


