// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class app_indicator_h_13 extends app_indicator_h_12 {

    public static MethodHandle cairo_mesh_pattern_set_control_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1204.cairo_mesh_pattern_set_control_point$MH,"cairo_mesh_pattern_set_control_point");
    }
    public static void cairo_mesh_pattern_set_control_point ( Addressable pattern,  int point_num,  double x,  double y) {
        var mh$ = cairo_mesh_pattern_set_control_point$MH();
        try {
            mh$.invokeExact(pattern, point_num, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_set_corner_color_rgb$MH() {
        return RuntimeHelper.requireNonNull(constants$1204.cairo_mesh_pattern_set_corner_color_rgb$MH,"cairo_mesh_pattern_set_corner_color_rgb");
    }
    public static void cairo_mesh_pattern_set_corner_color_rgb ( Addressable pattern,  int corner_num,  double red,  double green,  double blue) {
        var mh$ = cairo_mesh_pattern_set_corner_color_rgb$MH();
        try {
            mh$.invokeExact(pattern, corner_num, red, green, blue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_set_corner_color_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1204.cairo_mesh_pattern_set_corner_color_rgba$MH,"cairo_mesh_pattern_set_corner_color_rgba");
    }
    public static void cairo_mesh_pattern_set_corner_color_rgba ( Addressable pattern,  int corner_num,  double red,  double green,  double blue,  double alpha) {
        var mh$ = cairo_mesh_pattern_set_corner_color_rgba$MH();
        try {
            mh$.invokeExact(pattern, corner_num, red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_set_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1204.cairo_pattern_set_matrix$MH,"cairo_pattern_set_matrix");
    }
    public static void cairo_pattern_set_matrix ( Addressable pattern,  Addressable matrix) {
        var mh$ = cairo_pattern_set_matrix$MH();
        try {
            mh$.invokeExact(pattern, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1205.cairo_pattern_get_matrix$MH,"cairo_pattern_get_matrix");
    }
    public static void cairo_pattern_get_matrix ( Addressable pattern,  Addressable matrix) {
        var mh$ = cairo_pattern_get_matrix$MH();
        try {
            mh$.invokeExact(pattern, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int CAIRO_EXTEND_NONE() {
        return (int)0L;
    }
    public static int CAIRO_EXTEND_REPEAT() {
        return (int)1L;
    }
    public static int CAIRO_EXTEND_REFLECT() {
        return (int)2L;
    }
    public static int CAIRO_EXTEND_PAD() {
        return (int)3L;
    }
    public static MethodHandle cairo_pattern_set_extend$MH() {
        return RuntimeHelper.requireNonNull(constants$1205.cairo_pattern_set_extend$MH,"cairo_pattern_set_extend");
    }
    public static void cairo_pattern_set_extend ( Addressable pattern,  int extend) {
        var mh$ = cairo_pattern_set_extend$MH();
        try {
            mh$.invokeExact(pattern, extend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_extend$MH() {
        return RuntimeHelper.requireNonNull(constants$1205.cairo_pattern_get_extend$MH,"cairo_pattern_get_extend");
    }
    public static int cairo_pattern_get_extend ( Addressable pattern) {
        var mh$ = cairo_pattern_get_extend$MH();
        try {
            return (int)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int CAIRO_FILTER_FAST() {
        return (int)0L;
    }
    public static int CAIRO_FILTER_GOOD() {
        return (int)1L;
    }
    public static int CAIRO_FILTER_BEST() {
        return (int)2L;
    }
    public static int CAIRO_FILTER_NEAREST() {
        return (int)3L;
    }
    public static int CAIRO_FILTER_BILINEAR() {
        return (int)4L;
    }
    public static int CAIRO_FILTER_GAUSSIAN() {
        return (int)5L;
    }
    public static MethodHandle cairo_pattern_set_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1205.cairo_pattern_set_filter$MH,"cairo_pattern_set_filter");
    }
    public static void cairo_pattern_set_filter ( Addressable pattern,  int filter) {
        var mh$ = cairo_pattern_set_filter$MH();
        try {
            mh$.invokeExact(pattern, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1205.cairo_pattern_get_filter$MH,"cairo_pattern_get_filter");
    }
    public static int cairo_pattern_get_filter ( Addressable pattern) {
        var mh$ = cairo_pattern_get_filter$MH();
        try {
            return (int)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1205.cairo_pattern_get_rgba$MH,"cairo_pattern_get_rgba");
    }
    public static int cairo_pattern_get_rgba ( Addressable pattern,  Addressable red,  Addressable green,  Addressable blue,  Addressable alpha) {
        var mh$ = cairo_pattern_get_rgba$MH();
        try {
            return (int)mh$.invokeExact(pattern, red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1206.cairo_pattern_get_surface$MH,"cairo_pattern_get_surface");
    }
    public static int cairo_pattern_get_surface ( Addressable pattern,  Addressable surface) {
        var mh$ = cairo_pattern_get_surface$MH();
        try {
            return (int)mh$.invokeExact(pattern, surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_color_stop_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1206.cairo_pattern_get_color_stop_rgba$MH,"cairo_pattern_get_color_stop_rgba");
    }
    public static int cairo_pattern_get_color_stop_rgba ( Addressable pattern,  int index,  Addressable offset,  Addressable red,  Addressable green,  Addressable blue,  Addressable alpha) {
        var mh$ = cairo_pattern_get_color_stop_rgba$MH();
        try {
            return (int)mh$.invokeExact(pattern, index, offset, red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_color_stop_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1206.cairo_pattern_get_color_stop_count$MH,"cairo_pattern_get_color_stop_count");
    }
    public static int cairo_pattern_get_color_stop_count ( Addressable pattern,  Addressable count) {
        var mh$ = cairo_pattern_get_color_stop_count$MH();
        try {
            return (int)mh$.invokeExact(pattern, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_linear_points$MH() {
        return RuntimeHelper.requireNonNull(constants$1206.cairo_pattern_get_linear_points$MH,"cairo_pattern_get_linear_points");
    }
    public static int cairo_pattern_get_linear_points ( Addressable pattern,  Addressable x0,  Addressable y0,  Addressable x1,  Addressable y1) {
        var mh$ = cairo_pattern_get_linear_points$MH();
        try {
            return (int)mh$.invokeExact(pattern, x0, y0, x1, y1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_radial_circles$MH() {
        return RuntimeHelper.requireNonNull(constants$1206.cairo_pattern_get_radial_circles$MH,"cairo_pattern_get_radial_circles");
    }
    public static int cairo_pattern_get_radial_circles ( Addressable pattern,  Addressable x0,  Addressable y0,  Addressable r0,  Addressable x1,  Addressable y1,  Addressable r1) {
        var mh$ = cairo_pattern_get_radial_circles$MH();
        try {
            return (int)mh$.invokeExact(pattern, x0, y0, r0, x1, y1, r1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_get_patch_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1206.cairo_mesh_pattern_get_patch_count$MH,"cairo_mesh_pattern_get_patch_count");
    }
    public static int cairo_mesh_pattern_get_patch_count ( Addressable pattern,  Addressable count) {
        var mh$ = cairo_mesh_pattern_get_patch_count$MH();
        try {
            return (int)mh$.invokeExact(pattern, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_get_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1207.cairo_mesh_pattern_get_path$MH,"cairo_mesh_pattern_get_path");
    }
    public static MemoryAddress cairo_mesh_pattern_get_path ( Addressable pattern,  int patch_num) {
        var mh$ = cairo_mesh_pattern_get_path$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pattern, patch_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_get_corner_color_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1207.cairo_mesh_pattern_get_corner_color_rgba$MH,"cairo_mesh_pattern_get_corner_color_rgba");
    }
    public static int cairo_mesh_pattern_get_corner_color_rgba ( Addressable pattern,  int patch_num,  int corner_num,  Addressable red,  Addressable green,  Addressable blue,  Addressable alpha) {
        var mh$ = cairo_mesh_pattern_get_corner_color_rgba$MH();
        try {
            return (int)mh$.invokeExact(pattern, patch_num, corner_num, red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_get_control_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1207.cairo_mesh_pattern_get_control_point$MH,"cairo_mesh_pattern_get_control_point");
    }
    public static int cairo_mesh_pattern_get_control_point ( Addressable pattern,  int patch_num,  int point_num,  Addressable x,  Addressable y) {
        var mh$ = cairo_mesh_pattern_get_control_point$MH();
        try {
            return (int)mh$.invokeExact(pattern, patch_num, point_num, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1207.cairo_matrix_init$MH,"cairo_matrix_init");
    }
    public static void cairo_matrix_init ( Addressable matrix,  double xx,  double yx,  double xy,  double yy,  double x0,  double y0) {
        var mh$ = cairo_matrix_init$MH();
        try {
            mh$.invokeExact(matrix, xx, yx, xy, yy, x0, y0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_init_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$1207.cairo_matrix_init_identity$MH,"cairo_matrix_init_identity");
    }
    public static void cairo_matrix_init_identity ( Addressable matrix) {
        var mh$ = cairo_matrix_init_identity$MH();
        try {
            mh$.invokeExact(matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_init_translate$MH() {
        return RuntimeHelper.requireNonNull(constants$1207.cairo_matrix_init_translate$MH,"cairo_matrix_init_translate");
    }
    public static void cairo_matrix_init_translate ( Addressable matrix,  double tx,  double ty) {
        var mh$ = cairo_matrix_init_translate$MH();
        try {
            mh$.invokeExact(matrix, tx, ty);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_init_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1208.cairo_matrix_init_scale$MH,"cairo_matrix_init_scale");
    }
    public static void cairo_matrix_init_scale ( Addressable matrix,  double sx,  double sy) {
        var mh$ = cairo_matrix_init_scale$MH();
        try {
            mh$.invokeExact(matrix, sx, sy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_init_rotate$MH() {
        return RuntimeHelper.requireNonNull(constants$1208.cairo_matrix_init_rotate$MH,"cairo_matrix_init_rotate");
    }
    public static void cairo_matrix_init_rotate ( Addressable matrix,  double radians) {
        var mh$ = cairo_matrix_init_rotate$MH();
        try {
            mh$.invokeExact(matrix, radians);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_translate$MH() {
        return RuntimeHelper.requireNonNull(constants$1208.cairo_matrix_translate$MH,"cairo_matrix_translate");
    }
    public static void cairo_matrix_translate ( Addressable matrix,  double tx,  double ty) {
        var mh$ = cairo_matrix_translate$MH();
        try {
            mh$.invokeExact(matrix, tx, ty);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1208.cairo_matrix_scale$MH,"cairo_matrix_scale");
    }
    public static void cairo_matrix_scale ( Addressable matrix,  double sx,  double sy) {
        var mh$ = cairo_matrix_scale$MH();
        try {
            mh$.invokeExact(matrix, sx, sy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_rotate$MH() {
        return RuntimeHelper.requireNonNull(constants$1208.cairo_matrix_rotate$MH,"cairo_matrix_rotate");
    }
    public static void cairo_matrix_rotate ( Addressable matrix,  double radians) {
        var mh$ = cairo_matrix_rotate$MH();
        try {
            mh$.invokeExact(matrix, radians);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_invert$MH() {
        return RuntimeHelper.requireNonNull(constants$1208.cairo_matrix_invert$MH,"cairo_matrix_invert");
    }
    public static int cairo_matrix_invert ( Addressable matrix) {
        var mh$ = cairo_matrix_invert$MH();
        try {
            return (int)mh$.invokeExact(matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_multiply$MH() {
        return RuntimeHelper.requireNonNull(constants$1209.cairo_matrix_multiply$MH,"cairo_matrix_multiply");
    }
    public static void cairo_matrix_multiply ( Addressable result,  Addressable a,  Addressable b) {
        var mh$ = cairo_matrix_multiply$MH();
        try {
            mh$.invokeExact(result, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_transform_distance$MH() {
        return RuntimeHelper.requireNonNull(constants$1209.cairo_matrix_transform_distance$MH,"cairo_matrix_transform_distance");
    }
    public static void cairo_matrix_transform_distance ( Addressable matrix,  Addressable dx,  Addressable dy) {
        var mh$ = cairo_matrix_transform_distance$MH();
        try {
            mh$.invokeExact(matrix, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_transform_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1209.cairo_matrix_transform_point$MH,"cairo_matrix_transform_point");
    }
    public static void cairo_matrix_transform_point ( Addressable matrix,  Addressable x,  Addressable y) {
        var mh$ = cairo_matrix_transform_point$MH();
        try {
            mh$.invokeExact(matrix, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int CAIRO_REGION_OVERLAP_IN() {
        return (int)0L;
    }
    public static int CAIRO_REGION_OVERLAP_OUT() {
        return (int)1L;
    }
    public static int CAIRO_REGION_OVERLAP_PART() {
        return (int)2L;
    }
    public static MethodHandle cairo_region_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1209.cairo_region_create$MH,"cairo_region_create");
    }
    public static MemoryAddress cairo_region_create () {
        var mh$ = cairo_region_create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_create_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1209.cairo_region_create_rectangle$MH,"cairo_region_create_rectangle");
    }
    public static MemoryAddress cairo_region_create_rectangle ( Addressable rectangle) {
        var mh$ = cairo_region_create_rectangle$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(rectangle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_create_rectangles$MH() {
        return RuntimeHelper.requireNonNull(constants$1209.cairo_region_create_rectangles$MH,"cairo_region_create_rectangles");
    }
    public static MemoryAddress cairo_region_create_rectangles ( Addressable rects,  int count) {
        var mh$ = cairo_region_create_rectangles$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(rects, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1210.cairo_region_copy$MH,"cairo_region_copy");
    }
    public static MemoryAddress cairo_region_copy ( Addressable original) {
        var mh$ = cairo_region_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(original);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1210.cairo_region_reference$MH,"cairo_region_reference");
    }
    public static MemoryAddress cairo_region_reference ( Addressable region) {
        var mh$ = cairo_region_reference$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1210.cairo_region_destroy$MH,"cairo_region_destroy");
    }
    public static void cairo_region_destroy ( Addressable region) {
        var mh$ = cairo_region_destroy$MH();
        try {
            mh$.invokeExact(region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1210.cairo_region_equal$MH,"cairo_region_equal");
    }
    public static int cairo_region_equal ( Addressable a,  Addressable b) {
        var mh$ = cairo_region_equal$MH();
        try {
            return (int)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1210.cairo_region_status$MH,"cairo_region_status");
    }
    public static int cairo_region_status ( Addressable region) {
        var mh$ = cairo_region_status$MH();
        try {
            return (int)mh$.invokeExact(region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_get_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1210.cairo_region_get_extents$MH,"cairo_region_get_extents");
    }
    public static void cairo_region_get_extents ( Addressable region,  Addressable extents) {
        var mh$ = cairo_region_get_extents$MH();
        try {
            mh$.invokeExact(region, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_num_rectangles$MH() {
        return RuntimeHelper.requireNonNull(constants$1211.cairo_region_num_rectangles$MH,"cairo_region_num_rectangles");
    }
    public static int cairo_region_num_rectangles ( Addressable region) {
        var mh$ = cairo_region_num_rectangles$MH();
        try {
            return (int)mh$.invokeExact(region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_get_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1211.cairo_region_get_rectangle$MH,"cairo_region_get_rectangle");
    }
    public static void cairo_region_get_rectangle ( Addressable region,  int nth,  Addressable rectangle) {
        var mh$ = cairo_region_get_rectangle$MH();
        try {
            mh$.invokeExact(region, nth, rectangle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_is_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$1211.cairo_region_is_empty$MH,"cairo_region_is_empty");
    }
    public static int cairo_region_is_empty ( Addressable region) {
        var mh$ = cairo_region_is_empty$MH();
        try {
            return (int)mh$.invokeExact(region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_contains_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1211.cairo_region_contains_rectangle$MH,"cairo_region_contains_rectangle");
    }
    public static int cairo_region_contains_rectangle ( Addressable region,  Addressable rectangle) {
        var mh$ = cairo_region_contains_rectangle$MH();
        try {
            return (int)mh$.invokeExact(region, rectangle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_contains_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1211.cairo_region_contains_point$MH,"cairo_region_contains_point");
    }
    public static int cairo_region_contains_point ( Addressable region,  int x,  int y) {
        var mh$ = cairo_region_contains_point$MH();
        try {
            return (int)mh$.invokeExact(region, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_translate$MH() {
        return RuntimeHelper.requireNonNull(constants$1211.cairo_region_translate$MH,"cairo_region_translate");
    }
    public static void cairo_region_translate ( Addressable region,  int dx,  int dy) {
        var mh$ = cairo_region_translate$MH();
        try {
            mh$.invokeExact(region, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_subtract$MH() {
        return RuntimeHelper.requireNonNull(constants$1212.cairo_region_subtract$MH,"cairo_region_subtract");
    }
    public static int cairo_region_subtract ( Addressable dst,  Addressable other) {
        var mh$ = cairo_region_subtract$MH();
        try {
            return (int)mh$.invokeExact(dst, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_subtract_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1212.cairo_region_subtract_rectangle$MH,"cairo_region_subtract_rectangle");
    }
    public static int cairo_region_subtract_rectangle ( Addressable dst,  Addressable rectangle) {
        var mh$ = cairo_region_subtract_rectangle$MH();
        try {
            return (int)mh$.invokeExact(dst, rectangle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_intersect$MH() {
        return RuntimeHelper.requireNonNull(constants$1212.cairo_region_intersect$MH,"cairo_region_intersect");
    }
    public static int cairo_region_intersect ( Addressable dst,  Addressable other) {
        var mh$ = cairo_region_intersect$MH();
        try {
            return (int)mh$.invokeExact(dst, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_intersect_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1212.cairo_region_intersect_rectangle$MH,"cairo_region_intersect_rectangle");
    }
    public static int cairo_region_intersect_rectangle ( Addressable dst,  Addressable rectangle) {
        var mh$ = cairo_region_intersect_rectangle$MH();
        try {
            return (int)mh$.invokeExact(dst, rectangle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_union$MH() {
        return RuntimeHelper.requireNonNull(constants$1212.cairo_region_union$MH,"cairo_region_union");
    }
    public static int cairo_region_union ( Addressable dst,  Addressable other) {
        var mh$ = cairo_region_union$MH();
        try {
            return (int)mh$.invokeExact(dst, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_union_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1212.cairo_region_union_rectangle$MH,"cairo_region_union_rectangle");
    }
    public static int cairo_region_union_rectangle ( Addressable dst,  Addressable rectangle) {
        var mh$ = cairo_region_union_rectangle$MH();
        try {
            return (int)mh$.invokeExact(dst, rectangle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_xor$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.cairo_region_xor$MH,"cairo_region_xor");
    }
    public static int cairo_region_xor ( Addressable dst,  Addressable other) {
        var mh$ = cairo_region_xor$MH();
        try {
            return (int)mh$.invokeExact(dst, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_xor_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.cairo_region_xor_rectangle$MH,"cairo_region_xor_rectangle");
    }
    public static int cairo_region_xor_rectangle ( Addressable dst,  Addressable rectangle) {
        var mh$ = cairo_region_xor_rectangle$MH();
        try {
            return (int)mh$.invokeExact(dst, rectangle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_debug_reset_static_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.cairo_debug_reset_static_data$MH,"cairo_debug_reset_static_data");
    }
    public static void cairo_debug_reset_static_data () {
        var mh$ = cairo_debug_reset_static_data$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GdkAtom = Constants$root.C_POINTER$LAYOUT;
    public static int GDK_LSB_FIRST() {
        return (int)0L;
    }
    public static int GDK_MSB_FIRST() {
        return (int)1L;
    }
    public static int GDK_SHIFT_MASK() {
        return (int)1L;
    }
    public static int GDK_LOCK_MASK() {
        return (int)2L;
    }
    public static int GDK_CONTROL_MASK() {
        return (int)4L;
    }
    public static int GDK_MOD1_MASK() {
        return (int)8L;
    }
    public static int GDK_MOD2_MASK() {
        return (int)16L;
    }
    public static int GDK_MOD3_MASK() {
        return (int)32L;
    }
    public static int GDK_MOD4_MASK() {
        return (int)64L;
    }
    public static int GDK_MOD5_MASK() {
        return (int)128L;
    }
    public static int GDK_BUTTON1_MASK() {
        return (int)256L;
    }
    public static int GDK_BUTTON2_MASK() {
        return (int)512L;
    }
    public static int GDK_BUTTON3_MASK() {
        return (int)1024L;
    }
    public static int GDK_BUTTON4_MASK() {
        return (int)2048L;
    }
    public static int GDK_BUTTON5_MASK() {
        return (int)4096L;
    }
    public static int GDK_MODIFIER_RESERVED_13_MASK() {
        return (int)8192L;
    }
    public static int GDK_MODIFIER_RESERVED_14_MASK() {
        return (int)16384L;
    }
    public static int GDK_MODIFIER_RESERVED_15_MASK() {
        return (int)32768L;
    }
    public static int GDK_MODIFIER_RESERVED_16_MASK() {
        return (int)65536L;
    }
    public static int GDK_MODIFIER_RESERVED_17_MASK() {
        return (int)131072L;
    }
    public static int GDK_MODIFIER_RESERVED_18_MASK() {
        return (int)262144L;
    }
    public static int GDK_MODIFIER_RESERVED_19_MASK() {
        return (int)524288L;
    }
    public static int GDK_MODIFIER_RESERVED_20_MASK() {
        return (int)1048576L;
    }
    public static int GDK_MODIFIER_RESERVED_21_MASK() {
        return (int)2097152L;
    }
    public static int GDK_MODIFIER_RESERVED_22_MASK() {
        return (int)4194304L;
    }
    public static int GDK_MODIFIER_RESERVED_23_MASK() {
        return (int)8388608L;
    }
    public static int GDK_MODIFIER_RESERVED_24_MASK() {
        return (int)16777216L;
    }
    public static int GDK_MODIFIER_RESERVED_25_MASK() {
        return (int)33554432L;
    }
    public static int GDK_SUPER_MASK() {
        return (int)67108864L;
    }
    public static int GDK_HYPER_MASK() {
        return (int)134217728L;
    }
    public static int GDK_META_MASK() {
        return (int)268435456L;
    }
    public static int GDK_MODIFIER_RESERVED_29_MASK() {
        return (int)536870912L;
    }
    public static int GDK_RELEASE_MASK() {
        return (int)1073741824L;
    }
    public static int GDK_MODIFIER_MASK() {
        return (int)1543512063L;
    }
    public static int GDK_MODIFIER_INTENT_PRIMARY_ACCELERATOR() {
        return (int)0L;
    }
    public static int GDK_MODIFIER_INTENT_CONTEXT_MENU() {
        return (int)1L;
    }
    public static int GDK_MODIFIER_INTENT_EXTEND_SELECTION() {
        return (int)2L;
    }
    public static int GDK_MODIFIER_INTENT_MODIFY_SELECTION() {
        return (int)3L;
    }
    public static int GDK_MODIFIER_INTENT_NO_TEXT_INPUT() {
        return (int)4L;
    }
    public static int GDK_MODIFIER_INTENT_SHIFT_GROUP() {
        return (int)5L;
    }
    public static int GDK_MODIFIER_INTENT_DEFAULT_MOD_MASK() {
        return (int)6L;
    }
    public static int GDK_OK() {
        return (int)0L;
    }
    public static int GDK_ERROR() {
        return (int)-1L;
    }
    public static int GDK_ERROR_PARAM() {
        return (int)-2L;
    }
    public static int GDK_ERROR_FILE() {
        return (int)-3L;
    }
    public static int GDK_ERROR_MEM() {
        return (int)-4L;
    }
    public static int GDK_GRAB_SUCCESS() {
        return (int)0L;
    }
    public static int GDK_GRAB_ALREADY_GRABBED() {
        return (int)1L;
    }
    public static int GDK_GRAB_INVALID_TIME() {
        return (int)2L;
    }
    public static int GDK_GRAB_NOT_VIEWABLE() {
        return (int)3L;
    }
    public static int GDK_GRAB_FROZEN() {
        return (int)4L;
    }
    public static int GDK_GRAB_FAILED() {
        return (int)5L;
    }
    public static int GDK_OWNERSHIP_NONE() {
        return (int)0L;
    }
    public static int GDK_OWNERSHIP_WINDOW() {
        return (int)1L;
    }
    public static int GDK_OWNERSHIP_APPLICATION() {
        return (int)2L;
    }
    public static int GDK_EXPOSURE_MASK() {
        return (int)2L;
    }
    public static int GDK_POINTER_MOTION_MASK() {
        return (int)4L;
    }
    public static int GDK_POINTER_MOTION_HINT_MASK() {
        return (int)8L;
    }
    public static int GDK_BUTTON_MOTION_MASK() {
        return (int)16L;
    }
    public static int GDK_BUTTON1_MOTION_MASK() {
        return (int)32L;
    }
    public static int GDK_BUTTON2_MOTION_MASK() {
        return (int)64L;
    }
    public static int GDK_BUTTON3_MOTION_MASK() {
        return (int)128L;
    }
    public static int GDK_BUTTON_PRESS_MASK() {
        return (int)256L;
    }
    public static int GDK_BUTTON_RELEASE_MASK() {
        return (int)512L;
    }
    public static int GDK_KEY_PRESS_MASK() {
        return (int)1024L;
    }
    public static int GDK_KEY_RELEASE_MASK() {
        return (int)2048L;
    }
    public static int GDK_ENTER_NOTIFY_MASK() {
        return (int)4096L;
    }
    public static int GDK_LEAVE_NOTIFY_MASK() {
        return (int)8192L;
    }
    public static int GDK_FOCUS_CHANGE_MASK() {
        return (int)16384L;
    }
    public static int GDK_STRUCTURE_MASK() {
        return (int)32768L;
    }
    public static int GDK_PROPERTY_CHANGE_MASK() {
        return (int)65536L;
    }
    public static int GDK_VISIBILITY_NOTIFY_MASK() {
        return (int)131072L;
    }
    public static int GDK_PROXIMITY_IN_MASK() {
        return (int)262144L;
    }
    public static int GDK_PROXIMITY_OUT_MASK() {
        return (int)524288L;
    }
    public static int GDK_SUBSTRUCTURE_MASK() {
        return (int)1048576L;
    }
    public static int GDK_SCROLL_MASK() {
        return (int)2097152L;
    }
    public static int GDK_TOUCH_MASK() {
        return (int)4194304L;
    }
    public static int GDK_SMOOTH_SCROLL_MASK() {
        return (int)8388608L;
    }
    public static int GDK_TOUCHPAD_GESTURE_MASK() {
        return (int)16777216L;
    }
    public static int GDK_TABLET_PAD_MASK() {
        return (int)33554432L;
    }
    public static int GDK_ALL_EVENTS_MASK() {
        return (int)67108862L;
    }
    public static int GDK_GL_ERROR_NOT_AVAILABLE() {
        return (int)0L;
    }
    public static int GDK_GL_ERROR_UNSUPPORTED_FORMAT() {
        return (int)1L;
    }
    public static int GDK_GL_ERROR_UNSUPPORTED_PROFILE() {
        return (int)2L;
    }
    public static int GDK_WINDOW_TYPE_HINT_NORMAL() {
        return (int)0L;
    }
    public static int GDK_WINDOW_TYPE_HINT_DIALOG() {
        return (int)1L;
    }
    public static int GDK_WINDOW_TYPE_HINT_MENU() {
        return (int)2L;
    }
    public static int GDK_WINDOW_TYPE_HINT_TOOLBAR() {
        return (int)3L;
    }
    public static int GDK_WINDOW_TYPE_HINT_SPLASHSCREEN() {
        return (int)4L;
    }
    public static int GDK_WINDOW_TYPE_HINT_UTILITY() {
        return (int)5L;
    }
    public static int GDK_WINDOW_TYPE_HINT_DOCK() {
        return (int)6L;
    }
    public static int GDK_WINDOW_TYPE_HINT_DESKTOP() {
        return (int)7L;
    }
    public static int GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU() {
        return (int)8L;
    }
    public static int GDK_WINDOW_TYPE_HINT_POPUP_MENU() {
        return (int)9L;
    }
    public static int GDK_WINDOW_TYPE_HINT_TOOLTIP() {
        return (int)10L;
    }
    public static int GDK_WINDOW_TYPE_HINT_NOTIFICATION() {
        return (int)11L;
    }
    public static int GDK_WINDOW_TYPE_HINT_COMBO() {
        return (int)12L;
    }
    public static int GDK_WINDOW_TYPE_HINT_DND() {
        return (int)13L;
    }
    public static int GDK_AXIS_IGNORE() {
        return (int)0L;
    }
    public static int GDK_AXIS_X() {
        return (int)1L;
    }
    public static int GDK_AXIS_Y() {
        return (int)2L;
    }
    public static int GDK_AXIS_PRESSURE() {
        return (int)3L;
    }
    public static int GDK_AXIS_XTILT() {
        return (int)4L;
    }
    public static int GDK_AXIS_YTILT() {
        return (int)5L;
    }
    public static int GDK_AXIS_WHEEL() {
        return (int)6L;
    }
    public static int GDK_AXIS_DISTANCE() {
        return (int)7L;
    }
    public static int GDK_AXIS_ROTATION() {
        return (int)8L;
    }
    public static int GDK_AXIS_SLIDER() {
        return (int)9L;
    }
    public static int GDK_AXIS_LAST() {
        return (int)10L;
    }
    public static int GDK_AXIS_FLAG_X() {
        return (int)2L;
    }
    public static int GDK_AXIS_FLAG_Y() {
        return (int)4L;
    }
    public static int GDK_AXIS_FLAG_PRESSURE() {
        return (int)8L;
    }
    public static int GDK_AXIS_FLAG_XTILT() {
        return (int)16L;
    }
    public static int GDK_AXIS_FLAG_YTILT() {
        return (int)32L;
    }
    public static int GDK_AXIS_FLAG_WHEEL() {
        return (int)64L;
    }
    public static int GDK_AXIS_FLAG_DISTANCE() {
        return (int)128L;
    }
    public static int GDK_AXIS_FLAG_ROTATION() {
        return (int)256L;
    }
    public static int GDK_AXIS_FLAG_SLIDER() {
        return (int)512L;
    }
    public static int GDK_SOURCE_MOUSE() {
        return (int)0L;
    }
    public static int GDK_SOURCE_PEN() {
        return (int)1L;
    }
    public static int GDK_SOURCE_ERASER() {
        return (int)2L;
    }
    public static int GDK_SOURCE_CURSOR() {
        return (int)3L;
    }
    public static int GDK_SOURCE_KEYBOARD() {
        return (int)4L;
    }
    public static int GDK_SOURCE_TOUCHSCREEN() {
        return (int)5L;
    }
    public static int GDK_SOURCE_TOUCHPAD() {
        return (int)6L;
    }
    public static int GDK_SOURCE_TRACKPOINT() {
        return (int)7L;
    }
    public static int GDK_SOURCE_TABLET_PAD() {
        return (int)8L;
    }
    public static int GDK_MODE_DISABLED() {
        return (int)0L;
    }
    public static int GDK_MODE_SCREEN() {
        return (int)1L;
    }
    public static int GDK_MODE_WINDOW() {
        return (int)2L;
    }
    public static int GDK_DEVICE_TYPE_MASTER() {
        return (int)0L;
    }
    public static int GDK_DEVICE_TYPE_SLAVE() {
        return (int)1L;
    }
    public static int GDK_DEVICE_TYPE_FLOATING() {
        return (int)2L;
    }
    public static MethodHandle gdk_device_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.gdk_device_get_type$MH,"gdk_device_get_type");
    }
    public static long gdk_device_get_type () {
        var mh$ = gdk_device_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.gdk_device_get_name$MH,"gdk_device_get_name");
    }
    public static MemoryAddress gdk_device_get_name ( Addressable device) {
        var mh$ = gdk_device_get_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_has_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.gdk_device_get_has_cursor$MH,"gdk_device_get_has_cursor");
    }
    public static int gdk_device_get_has_cursor ( Addressable device) {
        var mh$ = gdk_device_get_has_cursor$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.gdk_device_get_source$MH,"gdk_device_get_source");
    }
    public static int gdk_device_get_source ( Addressable device) {
        var mh$ = gdk_device_get_source$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.gdk_device_get_mode$MH,"gdk_device_get_mode");
    }
    public static int gdk_device_get_mode ( Addressable device) {
        var mh$ = gdk_device_get_mode$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_set_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.gdk_device_set_mode$MH,"gdk_device_set_mode");
    }
    public static int gdk_device_set_mode ( Addressable device,  int mode) {
        var mh$ = gdk_device_set_mode$MH();
        try {
            return (int)mh$.invokeExact(device, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_n_keys$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.gdk_device_get_n_keys$MH,"gdk_device_get_n_keys");
    }
    public static int gdk_device_get_n_keys ( Addressable device) {
        var mh$ = gdk_device_get_n_keys$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_key$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.gdk_device_get_key$MH,"gdk_device_get_key");
    }
    public static int gdk_device_get_key ( Addressable device,  int index_,  Addressable keyval,  Addressable modifiers) {
        var mh$ = gdk_device_get_key$MH();
        try {
            return (int)mh$.invokeExact(device, index_, keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_set_key$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.gdk_device_set_key$MH,"gdk_device_set_key");
    }
    public static void gdk_device_set_key ( Addressable device,  int index_,  int keyval,  int modifiers) {
        var mh$ = gdk_device_set_key$MH();
        try {
            mh$.invokeExact(device, index_, keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_axis_use$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.gdk_device_get_axis_use$MH,"gdk_device_get_axis_use");
    }
    public static int gdk_device_get_axis_use ( Addressable device,  int index_) {
        var mh$ = gdk_device_get_axis_use$MH();
        try {
            return (int)mh$.invokeExact(device, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_set_axis_use$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.gdk_device_set_axis_use$MH,"gdk_device_set_axis_use");
    }
    public static void gdk_device_set_axis_use ( Addressable device,  int index_,  int use) {
        var mh$ = gdk_device_set_axis_use$MH();
        try {
            mh$.invokeExact(device, index_, use);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.gdk_device_get_state$MH,"gdk_device_get_state");
    }
    public static void gdk_device_get_state ( Addressable device,  Addressable window,  Addressable axes,  Addressable mask) {
        var mh$ = gdk_device_get_state$MH();
        try {
            mh$.invokeExact(device, window, axes, mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.gdk_device_get_position$MH,"gdk_device_get_position");
    }
    public static void gdk_device_get_position ( Addressable device,  Addressable screen,  Addressable x,  Addressable y) {
        var mh$ = gdk_device_get_position$MH();
        try {
            mh$.invokeExact(device, screen, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_window_at_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.gdk_device_get_window_at_position$MH,"gdk_device_get_window_at_position");
    }
    public static MemoryAddress gdk_device_get_window_at_position ( Addressable device,  Addressable win_x,  Addressable win_y) {
        var mh$ = gdk_device_get_window_at_position$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(device, win_x, win_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_position_double$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.gdk_device_get_position_double$MH,"gdk_device_get_position_double");
    }
    public static void gdk_device_get_position_double ( Addressable device,  Addressable screen,  Addressable x,  Addressable y) {
        var mh$ = gdk_device_get_position_double$MH();
        try {
            mh$.invokeExact(device, screen, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_window_at_position_double$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.gdk_device_get_window_at_position_double$MH,"gdk_device_get_window_at_position_double");
    }
    public static MemoryAddress gdk_device_get_window_at_position_double ( Addressable device,  Addressable win_x,  Addressable win_y) {
        var mh$ = gdk_device_get_window_at_position_double$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(device, win_x, win_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_history$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.gdk_device_get_history$MH,"gdk_device_get_history");
    }
    public static int gdk_device_get_history ( Addressable device,  Addressable window,  int start,  int stop,  Addressable events,  Addressable n_events) {
        var mh$ = gdk_device_get_history$MH();
        try {
            return (int)mh$.invokeExact(device, window, start, stop, events, n_events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_free_history$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.gdk_device_free_history$MH,"gdk_device_free_history");
    }
    public static void gdk_device_free_history ( Addressable events,  int n_events) {
        var mh$ = gdk_device_free_history$MH();
        try {
            mh$.invokeExact(events, n_events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_n_axes$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.gdk_device_get_n_axes$MH,"gdk_device_get_n_axes");
    }
    public static int gdk_device_get_n_axes ( Addressable device) {
        var mh$ = gdk_device_get_n_axes$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_list_axes$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.gdk_device_list_axes$MH,"gdk_device_list_axes");
    }
    public static MemoryAddress gdk_device_list_axes ( Addressable device) {
        var mh$ = gdk_device_list_axes$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_axis_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.gdk_device_get_axis_value$MH,"gdk_device_get_axis_value");
    }
    public static int gdk_device_get_axis_value ( Addressable device,  Addressable axes,  Addressable axis_label,  Addressable value) {
        var mh$ = gdk_device_get_axis_value$MH();
        try {
            return (int)mh$.invokeExact(device, axes, axis_label, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_axis$MH() {
        return RuntimeHelper.requireNonNull(constants$1217.gdk_device_get_axis$MH,"gdk_device_get_axis");
    }
    public static int gdk_device_get_axis ( Addressable device,  Addressable axes,  int use,  Addressable value) {
        var mh$ = gdk_device_get_axis$MH();
        try {
            return (int)mh$.invokeExact(device, axes, use, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1217.gdk_device_get_display$MH,"gdk_device_get_display");
    }
    public static MemoryAddress gdk_device_get_display ( Addressable device) {
        var mh$ = gdk_device_get_display$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_associated_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1217.gdk_device_get_associated_device$MH,"gdk_device_get_associated_device");
    }
    public static MemoryAddress gdk_device_get_associated_device ( Addressable device) {
        var mh$ = gdk_device_get_associated_device$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_list_slave_devices$MH() {
        return RuntimeHelper.requireNonNull(constants$1217.gdk_device_list_slave_devices$MH,"gdk_device_list_slave_devices");
    }
    public static MemoryAddress gdk_device_list_slave_devices ( Addressable device) {
        var mh$ = gdk_device_list_slave_devices$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_device_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1217.gdk_device_get_device_type$MH,"gdk_device_get_device_type");
    }
    public static int gdk_device_get_device_type ( Addressable device) {
        var mh$ = gdk_device_get_device_type$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_grab$MH() {
        return RuntimeHelper.requireNonNull(constants$1217.gdk_device_grab$MH,"gdk_device_grab");
    }
    public static int gdk_device_grab ( Addressable device,  Addressable window,  int grab_ownership,  int owner_events,  int event_mask,  Addressable cursor,  int time_) {
        var mh$ = gdk_device_grab$MH();
        try {
            return (int)mh$.invokeExact(device, window, grab_ownership, owner_events, event_mask, cursor, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_ungrab$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.gdk_device_ungrab$MH,"gdk_device_ungrab");
    }
    public static void gdk_device_ungrab ( Addressable device,  int time_) {
        var mh$ = gdk_device_ungrab$MH();
        try {
            mh$.invokeExact(device, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_warp$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.gdk_device_warp$MH,"gdk_device_warp");
    }
    public static void gdk_device_warp ( Addressable device,  Addressable screen,  int x,  int y) {
        var mh$ = gdk_device_warp$MH();
        try {
            mh$.invokeExact(device, screen, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_grab_info_libgtk_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.gdk_device_grab_info_libgtk_only$MH,"gdk_device_grab_info_libgtk_only");
    }
    public static int gdk_device_grab_info_libgtk_only ( Addressable display,  Addressable device,  Addressable grab_window,  Addressable owner_events) {
        var mh$ = gdk_device_grab_info_libgtk_only$MH();
        try {
            return (int)mh$.invokeExact(display, device, grab_window, owner_events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_last_event_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.gdk_device_get_last_event_window$MH,"gdk_device_get_last_event_window");
    }
    public static MemoryAddress gdk_device_get_last_event_window ( Addressable device) {
        var mh$ = gdk_device_get_last_event_window$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_vendor_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.gdk_device_get_vendor_id$MH,"gdk_device_get_vendor_id");
    }
    public static MemoryAddress gdk_device_get_vendor_id ( Addressable device) {
        var mh$ = gdk_device_get_vendor_id$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_product_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.gdk_device_get_product_id$MH,"gdk_device_get_product_id");
    }
    public static MemoryAddress gdk_device_get_product_id ( Addressable device) {
        var mh$ = gdk_device_get_product_id$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_seat$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.gdk_device_get_seat$MH,"gdk_device_get_seat");
    }
    public static MemoryAddress gdk_device_get_seat ( Addressable device) {
        var mh$ = gdk_device_get_seat$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_axes$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.gdk_device_get_axes$MH,"gdk_device_get_axes");
    }
    public static int gdk_device_get_axes ( Addressable device) {
        var mh$ = gdk_device_get_axes$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GDK_ACTION_DEFAULT() {
        return (int)1L;
    }
    public static int GDK_ACTION_COPY() {
        return (int)2L;
    }
    public static int GDK_ACTION_MOVE() {
        return (int)4L;
    }
    public static int GDK_ACTION_LINK() {
        return (int)8L;
    }
    public static int GDK_ACTION_PRIVATE() {
        return (int)16L;
    }
    public static int GDK_ACTION_ASK() {
        return (int)32L;
    }
    public static int GDK_DRAG_CANCEL_NO_TARGET() {
        return (int)0L;
    }
    public static int GDK_DRAG_CANCEL_USER_CANCELLED() {
        return (int)1L;
    }
    public static int GDK_DRAG_CANCEL_ERROR() {
        return (int)2L;
    }
    public static int GDK_DRAG_PROTO_NONE() {
        return (int)0L;
    }
    public static int GDK_DRAG_PROTO_MOTIF() {
        return (int)1L;
    }
    public static int GDK_DRAG_PROTO_XDND() {
        return (int)2L;
    }
    public static int GDK_DRAG_PROTO_ROOTWIN() {
        return (int)3L;
    }
    public static int GDK_DRAG_PROTO_WIN32_DROPFILES() {
        return (int)4L;
    }
    public static int GDK_DRAG_PROTO_OLE2() {
        return (int)5L;
    }
    public static int GDK_DRAG_PROTO_LOCAL() {
        return (int)6L;
    }
    public static int GDK_DRAG_PROTO_WAYLAND() {
        return (int)7L;
    }
    public static MethodHandle gdk_drag_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.gdk_drag_context_get_type$MH,"gdk_drag_context_get_type");
    }
    public static long gdk_drag_context_get_type () {
        var mh$ = gdk_drag_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_set_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.gdk_drag_context_set_device$MH,"gdk_drag_context_set_device");
    }
    public static void gdk_drag_context_set_device ( Addressable context,  Addressable device) {
        var mh$ = gdk_drag_context_set_device$MH();
        try {
            mh$.invokeExact(context, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_get_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.gdk_drag_context_get_device$MH,"gdk_drag_context_get_device");
    }
    public static MemoryAddress gdk_drag_context_get_device ( Addressable context) {
        var mh$ = gdk_drag_context_get_device$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_list_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.gdk_drag_context_list_targets$MH,"gdk_drag_context_list_targets");
    }
    public static MemoryAddress gdk_drag_context_list_targets ( Addressable context) {
        var mh$ = gdk_drag_context_list_targets$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_get_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.gdk_drag_context_get_actions$MH,"gdk_drag_context_get_actions");
    }
    public static int gdk_drag_context_get_actions ( Addressable context) {
        var mh$ = gdk_drag_context_get_actions$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_get_suggested_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.gdk_drag_context_get_suggested_action$MH,"gdk_drag_context_get_suggested_action");
    }
    public static int gdk_drag_context_get_suggested_action ( Addressable context) {
        var mh$ = gdk_drag_context_get_suggested_action$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_get_selected_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.gdk_drag_context_get_selected_action$MH,"gdk_drag_context_get_selected_action");
    }
    public static int gdk_drag_context_get_selected_action ( Addressable context) {
        var mh$ = gdk_drag_context_get_selected_action$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_get_source_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.gdk_drag_context_get_source_window$MH,"gdk_drag_context_get_source_window");
    }
    public static MemoryAddress gdk_drag_context_get_source_window ( Addressable context) {
        var mh$ = gdk_drag_context_get_source_window$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_get_dest_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.gdk_drag_context_get_dest_window$MH,"gdk_drag_context_get_dest_window");
    }
    public static MemoryAddress gdk_drag_context_get_dest_window ( Addressable context) {
        var mh$ = gdk_drag_context_get_dest_window$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_get_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.gdk_drag_context_get_protocol$MH,"gdk_drag_context_get_protocol");
    }
    public static int gdk_drag_context_get_protocol ( Addressable context) {
        var mh$ = gdk_drag_context_get_protocol$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.gdk_drag_status$MH,"gdk_drag_status");
    }
    public static void gdk_drag_status ( Addressable context,  int action,  int time_) {
        var mh$ = gdk_drag_status$MH();
        try {
            mh$.invokeExact(context, action, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drop_reply$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.gdk_drop_reply$MH,"gdk_drop_reply");
    }
    public static void gdk_drop_reply ( Addressable context,  int accepted,  int time_) {
        var mh$ = gdk_drop_reply$MH();
        try {
            mh$.invokeExact(context, accepted, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drop_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.gdk_drop_finish$MH,"gdk_drop_finish");
    }
    public static void gdk_drop_finish ( Addressable context,  int success,  int time_) {
        var mh$ = gdk_drop_finish$MH();
        try {
            mh$.invokeExact(context, success, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_get_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.gdk_drag_get_selection$MH,"gdk_drag_get_selection");
    }
    public static MemoryAddress gdk_drag_get_selection ( Addressable context) {
        var mh$ = gdk_drag_get_selection$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_begin$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.gdk_drag_begin$MH,"gdk_drag_begin");
    }
    public static MemoryAddress gdk_drag_begin ( Addressable window,  Addressable targets) {
        var mh$ = gdk_drag_begin$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window, targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_begin_for_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.gdk_drag_begin_for_device$MH,"gdk_drag_begin_for_device");
    }
    public static MemoryAddress gdk_drag_begin_for_device ( Addressable window,  Addressable device,  Addressable targets) {
        var mh$ = gdk_drag_begin_for_device$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window, device, targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_begin_from_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.gdk_drag_begin_from_point$MH,"gdk_drag_begin_from_point");
    }
    public static MemoryAddress gdk_drag_begin_from_point ( Addressable window,  Addressable device,  Addressable targets,  int x_root,  int y_root) {
        var mh$ = gdk_drag_begin_from_point$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window, device, targets, x_root, y_root);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_find_window_for_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.gdk_drag_find_window_for_screen$MH,"gdk_drag_find_window_for_screen");
    }
    public static void gdk_drag_find_window_for_screen ( Addressable context,  Addressable drag_window,  Addressable screen,  int x_root,  int y_root,  Addressable dest_window,  Addressable protocol) {
        var mh$ = gdk_drag_find_window_for_screen$MH();
        try {
            mh$.invokeExact(context, drag_window, screen, x_root, y_root, dest_window, protocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_motion$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.gdk_drag_motion$MH,"gdk_drag_motion");
    }
    public static int gdk_drag_motion ( Addressable context,  Addressable dest_window,  int protocol,  int x_root,  int y_root,  int suggested_action,  int possible_actions,  int time_) {
        var mh$ = gdk_drag_motion$MH();
        try {
            return (int)mh$.invokeExact(context, dest_window, protocol, x_root, y_root, suggested_action, possible_actions, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_drop$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.gdk_drag_drop$MH,"gdk_drag_drop");
    }
    public static void gdk_drag_drop ( Addressable context,  int time_) {
        var mh$ = gdk_drag_drop$MH();
        try {
            mh$.invokeExact(context, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_abort$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.gdk_drag_abort$MH,"gdk_drag_abort");
    }
    public static void gdk_drag_abort ( Addressable context,  int time_) {
        var mh$ = gdk_drag_abort$MH();
        try {
            mh$.invokeExact(context, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_drop_succeeded$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.gdk_drag_drop_succeeded$MH,"gdk_drag_drop_succeeded");
    }
    public static int gdk_drag_drop_succeeded ( Addressable context) {
        var mh$ = gdk_drag_drop_succeeded$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_drop_done$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.gdk_drag_drop_done$MH,"gdk_drag_drop_done");
    }
    public static void gdk_drag_drop_done ( Addressable context,  int success) {
        var mh$ = gdk_drag_drop_done$MH();
        try {
            mh$.invokeExact(context, success);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_get_drag_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.gdk_drag_context_get_drag_window$MH,"gdk_drag_context_get_drag_window");
    }
    public static MemoryAddress gdk_drag_context_get_drag_window ( Addressable context) {
        var mh$ = gdk_drag_context_get_drag_window$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_set_hotspot$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.gdk_drag_context_set_hotspot$MH,"gdk_drag_context_set_hotspot");
    }
    public static void gdk_drag_context_set_hotspot ( Addressable context,  int hot_x,  int hot_y) {
        var mh$ = gdk_drag_context_set_hotspot$MH();
        try {
            mh$.invokeExact(context, hot_x, hot_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_manage_dnd$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.gdk_drag_context_manage_dnd$MH,"gdk_drag_context_manage_dnd");
    }
    public static int gdk_drag_context_manage_dnd ( Addressable context,  Addressable ipc_window,  int actions) {
        var mh$ = gdk_drag_context_manage_dnd$MH();
        try {
            return (int)mh$.invokeExact(context, ipc_window, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GDK_DEVICE_TOOL_TYPE_UNKNOWN() {
        return (int)0L;
    }
    public static int GDK_DEVICE_TOOL_TYPE_PEN() {
        return (int)1L;
    }
    public static int GDK_DEVICE_TOOL_TYPE_ERASER() {
        return (int)2L;
    }
    public static int GDK_DEVICE_TOOL_TYPE_BRUSH() {
        return (int)3L;
    }
    public static int GDK_DEVICE_TOOL_TYPE_PENCIL() {
        return (int)4L;
    }
    public static int GDK_DEVICE_TOOL_TYPE_AIRBRUSH() {
        return (int)5L;
    }
    public static int GDK_DEVICE_TOOL_TYPE_MOUSE() {
        return (int)6L;
    }
    public static int GDK_DEVICE_TOOL_TYPE_LENS() {
        return (int)7L;
    }
    public static MethodHandle gdk_device_tool_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.gdk_device_tool_get_type$MH,"gdk_device_tool_get_type");
    }
    public static long gdk_device_tool_get_type () {
        var mh$ = gdk_device_tool_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_tool_get_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.gdk_device_tool_get_serial$MH,"gdk_device_tool_get_serial");
    }
    public static long gdk_device_tool_get_serial ( Addressable tool) {
        var mh$ = gdk_device_tool_get_serial$MH();
        try {
            return (long)mh$.invokeExact(tool);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_tool_get_hardware_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1224.gdk_device_tool_get_hardware_id$MH,"gdk_device_tool_get_hardware_id");
    }
    public static long gdk_device_tool_get_hardware_id ( Addressable tool) {
        var mh$ = gdk_device_tool_get_hardware_id$MH();
        try {
            return (long)mh$.invokeExact(tool);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_tool_get_tool_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1224.gdk_device_tool_get_tool_type$MH,"gdk_device_tool_get_tool_type");
    }
    public static int gdk_device_tool_get_tool_type ( Addressable tool) {
        var mh$ = gdk_device_tool_get_tool_type$MH();
        try {
            return (int)mh$.invokeExact(tool);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GDK_FILTER_CONTINUE() {
        return (int)0L;
    }
    public static int GDK_FILTER_TRANSLATE() {
        return (int)1L;
    }
    public static int GDK_FILTER_REMOVE() {
        return (int)2L;
    }
    public static int GDK_NOTHING() {
        return (int)-1L;
    }
    public static int GDK_DELETE() {
        return (int)0L;
    }
    public static int GDK_DESTROY() {
        return (int)1L;
    }
    public static int GDK_EXPOSE() {
        return (int)2L;
    }
    public static int GDK_MOTION_NOTIFY() {
        return (int)3L;
    }
    public static int GDK_BUTTON_PRESS() {
        return (int)4L;
    }
    public static int GDK_2BUTTON_PRESS() {
        return (int)5L;
    }
    public static int GDK_DOUBLE_BUTTON_PRESS() {
        return (int)5L;
    }
    public static int GDK_3BUTTON_PRESS() {
        return (int)6L;
    }
    public static int GDK_TRIPLE_BUTTON_PRESS() {
        return (int)6L;
    }
    public static int GDK_BUTTON_RELEASE() {
        return (int)7L;
    }
    public static int GDK_KEY_PRESS() {
        return (int)8L;
    }
    public static int GDK_KEY_RELEASE() {
        return (int)9L;
    }
    public static int GDK_ENTER_NOTIFY() {
        return (int)10L;
    }
    public static int GDK_LEAVE_NOTIFY() {
        return (int)11L;
    }
    public static int GDK_FOCUS_CHANGE() {
        return (int)12L;
    }
    public static int GDK_CONFIGURE() {
        return (int)13L;
    }
    public static int GDK_MAP() {
        return (int)14L;
    }
    public static int GDK_UNMAP() {
        return (int)15L;
    }
    public static int GDK_PROPERTY_NOTIFY() {
        return (int)16L;
    }
    public static int GDK_SELECTION_CLEAR() {
        return (int)17L;
    }
    public static int GDK_SELECTION_REQUEST() {
        return (int)18L;
    }
    public static int GDK_SELECTION_NOTIFY() {
        return (int)19L;
    }
    public static int GDK_PROXIMITY_IN() {
        return (int)20L;
    }
    public static int GDK_PROXIMITY_OUT() {
        return (int)21L;
    }
    public static int GDK_DRAG_ENTER() {
        return (int)22L;
    }
    public static int GDK_DRAG_LEAVE() {
        return (int)23L;
    }
    public static int GDK_DRAG_MOTION() {
        return (int)24L;
    }
    public static int GDK_DRAG_STATUS() {
        return (int)25L;
    }
    public static int GDK_DROP_START() {
        return (int)26L;
    }
    public static int GDK_DROP_FINISHED() {
        return (int)27L;
    }
    public static int GDK_CLIENT_EVENT() {
        return (int)28L;
    }
    public static int GDK_VISIBILITY_NOTIFY() {
        return (int)29L;
    }
    public static int GDK_SCROLL() {
        return (int)31L;
    }
    public static int GDK_WINDOW_STATE() {
        return (int)32L;
    }
    public static int GDK_SETTING() {
        return (int)33L;
    }
    public static int GDK_OWNER_CHANGE() {
        return (int)34L;
    }
    public static int GDK_GRAB_BROKEN() {
        return (int)35L;
    }
    public static int GDK_DAMAGE() {
        return (int)36L;
    }
    public static int GDK_TOUCH_BEGIN() {
        return (int)37L;
    }
    public static int GDK_TOUCH_UPDATE() {
        return (int)38L;
    }
    public static int GDK_TOUCH_END() {
        return (int)39L;
    }
    public static int GDK_TOUCH_CANCEL() {
        return (int)40L;
    }
    public static int GDK_TOUCHPAD_SWIPE() {
        return (int)41L;
    }
    public static int GDK_TOUCHPAD_PINCH() {
        return (int)42L;
    }
    public static int GDK_PAD_BUTTON_PRESS() {
        return (int)43L;
    }
    public static int GDK_PAD_BUTTON_RELEASE() {
        return (int)44L;
    }
    public static int GDK_PAD_RING() {
        return (int)45L;
    }
    public static int GDK_PAD_STRIP() {
        return (int)46L;
    }
    public static int GDK_PAD_GROUP_MODE() {
        return (int)47L;
    }
    public static int GDK_EVENT_LAST() {
        return (int)48L;
    }
    public static int GDK_VISIBILITY_UNOBSCURED() {
        return (int)0L;
    }
    public static int GDK_VISIBILITY_PARTIAL() {
        return (int)1L;
    }
    public static int GDK_VISIBILITY_FULLY_OBSCURED() {
        return (int)2L;
    }
    public static int GDK_TOUCHPAD_GESTURE_PHASE_BEGIN() {
        return (int)0L;
    }
    public static int GDK_TOUCHPAD_GESTURE_PHASE_UPDATE() {
        return (int)1L;
    }
    public static int GDK_TOUCHPAD_GESTURE_PHASE_END() {
        return (int)2L;
    }
    public static int GDK_TOUCHPAD_GESTURE_PHASE_CANCEL() {
        return (int)3L;
    }
    public static int GDK_SCROLL_UP() {
        return (int)0L;
    }
    public static int GDK_SCROLL_DOWN() {
        return (int)1L;
    }
    public static int GDK_SCROLL_LEFT() {
        return (int)2L;
    }
    public static int GDK_SCROLL_RIGHT() {
        return (int)3L;
    }
    public static int GDK_SCROLL_SMOOTH() {
        return (int)4L;
    }
    public static int GDK_NOTIFY_ANCESTOR() {
        return (int)0L;
    }
    public static int GDK_NOTIFY_VIRTUAL() {
        return (int)1L;
    }
    public static int GDK_NOTIFY_INFERIOR() {
        return (int)2L;
    }
    public static int GDK_NOTIFY_NONLINEAR() {
        return (int)3L;
    }
    public static int GDK_NOTIFY_NONLINEAR_VIRTUAL() {
        return (int)4L;
    }
    public static int GDK_NOTIFY_UNKNOWN() {
        return (int)5L;
    }
    public static int GDK_CROSSING_NORMAL() {
        return (int)0L;
    }
    public static int GDK_CROSSING_GRAB() {
        return (int)1L;
    }
    public static int GDK_CROSSING_UNGRAB() {
        return (int)2L;
    }
    public static int GDK_CROSSING_GTK_GRAB() {
        return (int)3L;
    }
    public static int GDK_CROSSING_GTK_UNGRAB() {
        return (int)4L;
    }
    public static int GDK_CROSSING_STATE_CHANGED() {
        return (int)5L;
    }
    public static int GDK_CROSSING_TOUCH_BEGIN() {
        return (int)6L;
    }
    public static int GDK_CROSSING_TOUCH_END() {
        return (int)7L;
    }
    public static int GDK_CROSSING_DEVICE_SWITCH() {
        return (int)8L;
    }
    public static int GDK_PROPERTY_NEW_VALUE() {
        return (int)0L;
    }
    public static int GDK_PROPERTY_DELETE() {
        return (int)1L;
    }
    public static int GDK_WINDOW_STATE_WITHDRAWN() {
        return (int)1L;
    }
    public static int GDK_WINDOW_STATE_ICONIFIED() {
        return (int)2L;
    }
    public static int GDK_WINDOW_STATE_MAXIMIZED() {
        return (int)4L;
    }
    public static int GDK_WINDOW_STATE_STICKY() {
        return (int)8L;
    }
    public static int GDK_WINDOW_STATE_FULLSCREEN() {
        return (int)16L;
    }
    public static int GDK_WINDOW_STATE_ABOVE() {
        return (int)32L;
    }
    public static int GDK_WINDOW_STATE_BELOW() {
        return (int)64L;
    }
    public static int GDK_WINDOW_STATE_FOCUSED() {
        return (int)128L;
    }
    public static int GDK_WINDOW_STATE_TILED() {
        return (int)256L;
    }
    public static int GDK_WINDOW_STATE_TOP_TILED() {
        return (int)512L;
    }
    public static int GDK_WINDOW_STATE_TOP_RESIZABLE() {
        return (int)1024L;
    }
    public static int GDK_WINDOW_STATE_RIGHT_TILED() {
        return (int)2048L;
    }
    public static int GDK_WINDOW_STATE_RIGHT_RESIZABLE() {
        return (int)4096L;
    }
    public static int GDK_WINDOW_STATE_BOTTOM_TILED() {
        return (int)8192L;
    }
    public static int GDK_WINDOW_STATE_BOTTOM_RESIZABLE() {
        return (int)16384L;
    }
    public static int GDK_WINDOW_STATE_LEFT_TILED() {
        return (int)32768L;
    }
    public static int GDK_WINDOW_STATE_LEFT_RESIZABLE() {
        return (int)65536L;
    }
    public static int GDK_SETTING_ACTION_NEW() {
        return (int)0L;
    }
    public static int GDK_SETTING_ACTION_CHANGED() {
        return (int)1L;
    }
    public static int GDK_SETTING_ACTION_DELETED() {
        return (int)2L;
    }
    public static int GDK_OWNER_CHANGE_NEW_OWNER() {
        return (int)0L;
    }
    public static int GDK_OWNER_CHANGE_DESTROY() {
        return (int)1L;
    }
    public static int GDK_OWNER_CHANGE_CLOSE() {
        return (int)2L;
    }
    public static MethodHandle gdk_event_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1225.gdk_event_get_type$MH,"gdk_event_get_type");
    }
    public static long gdk_event_get_type () {
        var mh$ = gdk_event_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_sequence_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1225.gdk_event_sequence_get_type$MH,"gdk_event_sequence_get_type");
    }
    public static long gdk_event_sequence_get_type () {
        var mh$ = gdk_event_sequence_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_events_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$1225.gdk_events_pending$MH,"gdk_events_pending");
    }
    public static int gdk_events_pending () {
        var mh$ = gdk_events_pending$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1225.gdk_event_get$MH,"gdk_event_get");
    }
    public static MemoryAddress gdk_event_get () {
        var mh$ = gdk_event_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$1225.gdk_event_peek$MH,"gdk_event_peek");
    }
    public static MemoryAddress gdk_event_peek () {
        var mh$ = gdk_event_peek$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_put$MH() {
        return RuntimeHelper.requireNonNull(constants$1225.gdk_event_put$MH,"gdk_event_put");
    }
    public static void gdk_event_put ( Addressable event) {
        var mh$ = gdk_event_put$MH();
        try {
            mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1226.gdk_event_new$MH,"gdk_event_new");
    }
    public static MemoryAddress gdk_event_new ( int type) {
        var mh$ = gdk_event_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1226.gdk_event_copy$MH,"gdk_event_copy");
    }
    public static MemoryAddress gdk_event_copy ( Addressable event) {
        var mh$ = gdk_event_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1226.gdk_event_free$MH,"gdk_event_free");
    }
    public static void gdk_event_free ( Addressable event) {
        var mh$ = gdk_event_free$MH();
        try {
            mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1226.gdk_event_get_window$MH,"gdk_event_get_window");
    }
    public static MemoryAddress gdk_event_get_window ( Addressable event) {
        var mh$ = gdk_event_get_window$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1226.gdk_event_get_time$MH,"gdk_event_get_time");
    }
    public static int gdk_event_get_time ( Addressable event) {
        var mh$ = gdk_event_get_time$MH();
        try {
            return (int)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1226.gdk_event_get_state$MH,"gdk_event_get_state");
    }
    public static int gdk_event_get_state ( Addressable event,  Addressable state) {
        var mh$ = gdk_event_get_state$MH();
        try {
            return (int)mh$.invokeExact(event, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$1227.gdk_event_get_coords$MH,"gdk_event_get_coords");
    }
    public static int gdk_event_get_coords ( Addressable event,  Addressable x_win,  Addressable y_win) {
        var mh$ = gdk_event_get_coords$MH();
        try {
            return (int)mh$.invokeExact(event, x_win, y_win);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_root_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$1227.gdk_event_get_root_coords$MH,"gdk_event_get_root_coords");
    }
    public static int gdk_event_get_root_coords ( Addressable event,  Addressable x_root,  Addressable y_root) {
        var mh$ = gdk_event_get_root_coords$MH();
        try {
            return (int)mh$.invokeExact(event, x_root, y_root);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1227.gdk_event_get_button$MH,"gdk_event_get_button");
    }
    public static int gdk_event_get_button ( Addressable event,  Addressable button) {
        var mh$ = gdk_event_get_button$MH();
        try {
            return (int)mh$.invokeExact(event, button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_click_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1227.gdk_event_get_click_count$MH,"gdk_event_get_click_count");
    }
    public static int gdk_event_get_click_count ( Addressable event,  Addressable click_count) {
        var mh$ = gdk_event_get_click_count$MH();
        try {
            return (int)mh$.invokeExact(event, click_count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_keyval$MH() {
        return RuntimeHelper.requireNonNull(constants$1227.gdk_event_get_keyval$MH,"gdk_event_get_keyval");
    }
    public static int gdk_event_get_keyval ( Addressable event,  Addressable keyval) {
        var mh$ = gdk_event_get_keyval$MH();
        try {
            return (int)mh$.invokeExact(event, keyval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_keycode$MH() {
        return RuntimeHelper.requireNonNull(constants$1227.gdk_event_get_keycode$MH,"gdk_event_get_keycode");
    }
    public static int gdk_event_get_keycode ( Addressable event,  Addressable keycode) {
        var mh$ = gdk_event_get_keycode$MH();
        try {
            return (int)mh$.invokeExact(event, keycode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_scroll_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.gdk_event_get_scroll_direction$MH,"gdk_event_get_scroll_direction");
    }
    public static int gdk_event_get_scroll_direction ( Addressable event,  Addressable direction) {
        var mh$ = gdk_event_get_scroll_direction$MH();
        try {
            return (int)mh$.invokeExact(event, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_scroll_deltas$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.gdk_event_get_scroll_deltas$MH,"gdk_event_get_scroll_deltas");
    }
    public static int gdk_event_get_scroll_deltas ( Addressable event,  Addressable delta_x,  Addressable delta_y) {
        var mh$ = gdk_event_get_scroll_deltas$MH();
        try {
            return (int)mh$.invokeExact(event, delta_x, delta_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_is_scroll_stop_event$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.gdk_event_is_scroll_stop_event$MH,"gdk_event_is_scroll_stop_event");
    }
    public static int gdk_event_is_scroll_stop_event ( Addressable event) {
        var mh$ = gdk_event_is_scroll_stop_event$MH();
        try {
            return (int)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_axis$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.gdk_event_get_axis$MH,"gdk_event_get_axis");
    }
    public static int gdk_event_get_axis ( Addressable event,  int axis_use,  Addressable value) {
        var mh$ = gdk_event_get_axis$MH();
        try {
            return (int)mh$.invokeExact(event, axis_use, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_set_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.gdk_event_set_device$MH,"gdk_event_set_device");
    }
    public static void gdk_event_set_device ( Addressable event,  Addressable device) {
        var mh$ = gdk_event_set_device$MH();
        try {
            mh$.invokeExact(event, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.gdk_event_get_device$MH,"gdk_event_get_device");
    }
    public static MemoryAddress gdk_event_get_device ( Addressable event) {
        var mh$ = gdk_event_get_device$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_set_source_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1229.gdk_event_set_source_device$MH,"gdk_event_set_source_device");
    }
    public static void gdk_event_set_source_device ( Addressable event,  Addressable device) {
        var mh$ = gdk_event_set_source_device$MH();
        try {
            mh$.invokeExact(event, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_source_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1229.gdk_event_get_source_device$MH,"gdk_event_get_source_device");
    }
    public static MemoryAddress gdk_event_get_source_device ( Addressable event) {
        var mh$ = gdk_event_get_source_device$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_request_motions$MH() {
        return RuntimeHelper.requireNonNull(constants$1229.gdk_event_request_motions$MH,"gdk_event_request_motions");
    }
    public static void gdk_event_request_motions ( Addressable event) {
        var mh$ = gdk_event_request_motions$MH();
        try {
            mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_triggers_context_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$1229.gdk_event_triggers_context_menu$MH,"gdk_event_triggers_context_menu");
    }
    public static int gdk_event_triggers_context_menu ( Addressable event) {
        var mh$ = gdk_event_triggers_context_menu$MH();
        try {
            return (int)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_events_get_distance$MH() {
        return RuntimeHelper.requireNonNull(constants$1229.gdk_events_get_distance$MH,"gdk_events_get_distance");
    }
    public static int gdk_events_get_distance ( Addressable event1,  Addressable event2,  Addressable distance) {
        var mh$ = gdk_events_get_distance$MH();
        try {
            return (int)mh$.invokeExact(event1, event2, distance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_events_get_angle$MH() {
        return RuntimeHelper.requireNonNull(constants$1229.gdk_events_get_angle$MH,"gdk_events_get_angle");
    }
    public static int gdk_events_get_angle ( Addressable event1,  Addressable event2,  Addressable angle) {
        var mh$ = gdk_events_get_angle$MH();
        try {
            return (int)mh$.invokeExact(event1, event2, angle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_events_get_center$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.gdk_events_get_center$MH,"gdk_events_get_center");
    }
    public static int gdk_events_get_center ( Addressable event1,  Addressable event2,  Addressable x,  Addressable y) {
        var mh$ = gdk_events_get_center$MH();
        try {
            return (int)mh$.invokeExact(event1, event2, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_handler_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.gdk_event_handler_set$MH,"gdk_event_handler_set");
    }
    public static void gdk_event_handler_set ( Addressable func,  Addressable data,  Addressable notify) {
        var mh$ = gdk_event_handler_set$MH();
        try {
            mh$.invokeExact(func, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_set_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.gdk_event_set_screen$MH,"gdk_event_set_screen");
    }
    public static void gdk_event_set_screen ( Addressable event,  Addressable screen) {
        var mh$ = gdk_event_set_screen$MH();
        try {
            mh$.invokeExact(event, screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.gdk_event_get_screen$MH,"gdk_event_get_screen");
    }
    public static MemoryAddress gdk_event_get_screen ( Addressable event) {
        var mh$ = gdk_event_get_screen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_event_sequence$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.gdk_event_get_event_sequence$MH,"gdk_event_get_event_sequence");
    }
    public static MemoryAddress gdk_event_get_event_sequence ( Addressable event) {
        var mh$ = gdk_event_get_event_sequence$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_event_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.gdk_event_get_event_type$MH,"gdk_event_get_event_type");
    }
    public static int gdk_event_get_event_type ( Addressable event) {
        var mh$ = gdk_event_get_event_type$MH();
        try {
            return (int)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_seat$MH() {
        return RuntimeHelper.requireNonNull(constants$1231.gdk_event_get_seat$MH,"gdk_event_get_seat");
    }
    public static MemoryAddress gdk_event_get_seat ( Addressable event) {
        var mh$ = gdk_event_get_seat$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_set_show_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1231.gdk_set_show_events$MH,"gdk_set_show_events");
    }
    public static void gdk_set_show_events ( int show_events) {
        var mh$ = gdk_set_show_events$MH();
        try {
            mh$.invokeExact(show_events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_get_show_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1231.gdk_get_show_events$MH,"gdk_get_show_events");
    }
    public static int gdk_get_show_events () {
        var mh$ = gdk_get_show_events$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_setting_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1231.gdk_setting_get$MH,"gdk_setting_get");
    }
    public static int gdk_setting_get ( Addressable name,  Addressable value) {
        var mh$ = gdk_setting_get$MH();
        try {
            return (int)mh$.invokeExact(name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_device_tool$MH() {
        return RuntimeHelper.requireNonNull(constants$1231.gdk_event_get_device_tool$MH,"gdk_event_get_device_tool");
    }
    public static MemoryAddress gdk_event_get_device_tool ( Addressable event) {
        var mh$ = gdk_event_get_device_tool$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_set_device_tool$MH() {
        return RuntimeHelper.requireNonNull(constants$1231.gdk_event_set_device_tool$MH,"gdk_event_set_device_tool");
    }
    public static void gdk_event_set_device_tool ( Addressable event,  Addressable tool) {
        var mh$ = gdk_event_set_device_tool$MH();
        try {
            mh$.invokeExact(event, tool);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_scancode$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.gdk_event_get_scancode$MH,"gdk_event_get_scancode");
    }
    public static int gdk_event_get_scancode ( Addressable event) {
        var mh$ = gdk_event_get_scancode$MH();
        try {
            return (int)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_pointer_emulated$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.gdk_event_get_pointer_emulated$MH,"gdk_event_get_pointer_emulated");
    }
    public static int gdk_event_get_pointer_emulated ( Addressable event) {
        var mh$ = gdk_event_get_pointer_emulated$MH();
        try {
            return (int)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_manager_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.gdk_device_manager_get_type$MH,"gdk_device_manager_get_type");
    }
    public static long gdk_device_manager_get_type () {
        var mh$ = gdk_device_manager_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_manager_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.gdk_device_manager_get_display$MH,"gdk_device_manager_get_display");
    }
    public static MemoryAddress gdk_device_manager_get_display ( Addressable device_manager) {
        var mh$ = gdk_device_manager_get_display$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(device_manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_manager_list_devices$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.gdk_device_manager_list_devices$MH,"gdk_device_manager_list_devices");
    }
    public static MemoryAddress gdk_device_manager_list_devices ( Addressable device_manager,  int type) {
        var mh$ = gdk_device_manager_list_devices$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(device_manager, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_manager_get_client_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.gdk_device_manager_get_client_pointer$MH,"gdk_device_manager_get_client_pointer");
    }
    public static MemoryAddress gdk_device_manager_get_client_pointer ( Addressable device_manager) {
        var mh$ = gdk_device_manager_get_client_pointer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(device_manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drawing_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1233.gdk_drawing_context_get_type$MH,"gdk_drawing_context_get_type");
    }
    public static long gdk_drawing_context_get_type () {
        var mh$ = gdk_drawing_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drawing_context_get_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1233.gdk_drawing_context_get_window$MH,"gdk_drawing_context_get_window");
    }
    public static MemoryAddress gdk_drawing_context_get_window ( Addressable context) {
        var mh$ = gdk_drawing_context_get_window$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drawing_context_get_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$1233.gdk_drawing_context_get_clip$MH,"gdk_drawing_context_get_clip");
    }
    public static MemoryAddress gdk_drawing_context_get_clip ( Addressable context) {
        var mh$ = gdk_drawing_context_get_clip$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drawing_context_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$1233.gdk_drawing_context_is_valid$MH,"gdk_drawing_context_is_valid");
    }
    public static int gdk_drawing_context_is_valid ( Addressable context) {
        var mh$ = gdk_drawing_context_is_valid$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drawing_context_get_cairo_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1233.gdk_drawing_context_get_cairo_context$MH,"gdk_drawing_context_get_cairo_context");
    }
    public static MemoryAddress gdk_drawing_context_get_cairo_context ( Addressable context) {
        var mh$ = gdk_drawing_context_get_cairo_context$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_timings_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1233.gdk_frame_timings_get_type$MH,"gdk_frame_timings_get_type");
    }
    public static long gdk_frame_timings_get_type () {
        var mh$ = gdk_frame_timings_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_timings_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1234.gdk_frame_timings_ref$MH,"gdk_frame_timings_ref");
    }
    public static MemoryAddress gdk_frame_timings_ref ( Addressable timings) {
        var mh$ = gdk_frame_timings_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(timings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_timings_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1234.gdk_frame_timings_unref$MH,"gdk_frame_timings_unref");
    }
    public static void gdk_frame_timings_unref ( Addressable timings) {
        var mh$ = gdk_frame_timings_unref$MH();
        try {
            mh$.invokeExact(timings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_timings_get_frame_counter$MH() {
        return RuntimeHelper.requireNonNull(constants$1234.gdk_frame_timings_get_frame_counter$MH,"gdk_frame_timings_get_frame_counter");
    }
    public static long gdk_frame_timings_get_frame_counter ( Addressable timings) {
        var mh$ = gdk_frame_timings_get_frame_counter$MH();
        try {
            return (long)mh$.invokeExact(timings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_timings_get_complete$MH() {
        return RuntimeHelper.requireNonNull(constants$1234.gdk_frame_timings_get_complete$MH,"gdk_frame_timings_get_complete");
    }
    public static int gdk_frame_timings_get_complete ( Addressable timings) {
        var mh$ = gdk_frame_timings_get_complete$MH();
        try {
            return (int)mh$.invokeExact(timings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_timings_get_frame_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1234.gdk_frame_timings_get_frame_time$MH,"gdk_frame_timings_get_frame_time");
    }
    public static long gdk_frame_timings_get_frame_time ( Addressable timings) {
        var mh$ = gdk_frame_timings_get_frame_time$MH();
        try {
            return (long)mh$.invokeExact(timings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_timings_get_presentation_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1234.gdk_frame_timings_get_presentation_time$MH,"gdk_frame_timings_get_presentation_time");
    }
    public static long gdk_frame_timings_get_presentation_time ( Addressable timings) {
        var mh$ = gdk_frame_timings_get_presentation_time$MH();
        try {
            return (long)mh$.invokeExact(timings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_timings_get_refresh_interval$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.gdk_frame_timings_get_refresh_interval$MH,"gdk_frame_timings_get_refresh_interval");
    }
    public static long gdk_frame_timings_get_refresh_interval ( Addressable timings) {
        var mh$ = gdk_frame_timings_get_refresh_interval$MH();
        try {
            return (long)mh$.invokeExact(timings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_timings_get_predicted_presentation_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.gdk_frame_timings_get_predicted_presentation_time$MH,"gdk_frame_timings_get_predicted_presentation_time");
    }
    public static long gdk_frame_timings_get_predicted_presentation_time ( Addressable timings) {
        var mh$ = gdk_frame_timings_get_predicted_presentation_time$MH();
        try {
            return (long)mh$.invokeExact(timings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GDK_FRAME_CLOCK_PHASE_NONE() {
        return (int)0L;
    }
    public static int GDK_FRAME_CLOCK_PHASE_FLUSH_EVENTS() {
        return (int)1L;
    }
    public static int GDK_FRAME_CLOCK_PHASE_BEFORE_PAINT() {
        return (int)2L;
    }
    public static int GDK_FRAME_CLOCK_PHASE_UPDATE() {
        return (int)4L;
    }
    public static int GDK_FRAME_CLOCK_PHASE_LAYOUT() {
        return (int)8L;
    }
    public static int GDK_FRAME_CLOCK_PHASE_PAINT() {
        return (int)16L;
    }
    public static int GDK_FRAME_CLOCK_PHASE_RESUME_EVENTS() {
        return (int)32L;
    }
    public static int GDK_FRAME_CLOCK_PHASE_AFTER_PAINT() {
        return (int)64L;
    }
    public static MethodHandle gdk_frame_clock_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.gdk_frame_clock_get_type$MH,"gdk_frame_clock_get_type");
    }
    public static long gdk_frame_clock_get_type () {
        var mh$ = gdk_frame_clock_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_clock_get_frame_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.gdk_frame_clock_get_frame_time$MH,"gdk_frame_clock_get_frame_time");
    }
    public static long gdk_frame_clock_get_frame_time ( Addressable frame_clock) {
        var mh$ = gdk_frame_clock_get_frame_time$MH();
        try {
            return (long)mh$.invokeExact(frame_clock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_clock_request_phase$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.gdk_frame_clock_request_phase$MH,"gdk_frame_clock_request_phase");
    }
    public static void gdk_frame_clock_request_phase ( Addressable frame_clock,  int phase) {
        var mh$ = gdk_frame_clock_request_phase$MH();
        try {
            mh$.invokeExact(frame_clock, phase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_clock_begin_updating$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.gdk_frame_clock_begin_updating$MH,"gdk_frame_clock_begin_updating");
    }
    public static void gdk_frame_clock_begin_updating ( Addressable frame_clock) {
        var mh$ = gdk_frame_clock_begin_updating$MH();
        try {
            mh$.invokeExact(frame_clock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_clock_end_updating$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.gdk_frame_clock_end_updating$MH,"gdk_frame_clock_end_updating");
    }
    public static void gdk_frame_clock_end_updating ( Addressable frame_clock) {
        var mh$ = gdk_frame_clock_end_updating$MH();
        try {
            mh$.invokeExact(frame_clock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_clock_get_frame_counter$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.gdk_frame_clock_get_frame_counter$MH,"gdk_frame_clock_get_frame_counter");
    }
    public static long gdk_frame_clock_get_frame_counter ( Addressable frame_clock) {
        var mh$ = gdk_frame_clock_get_frame_counter$MH();
        try {
            return (long)mh$.invokeExact(frame_clock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_clock_get_history_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.gdk_frame_clock_get_history_start$MH,"gdk_frame_clock_get_history_start");
    }
    public static long gdk_frame_clock_get_history_start ( Addressable frame_clock) {
        var mh$ = gdk_frame_clock_get_history_start$MH();
        try {
            return (long)mh$.invokeExact(frame_clock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_clock_get_timings$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.gdk_frame_clock_get_timings$MH,"gdk_frame_clock_get_timings");
    }
    public static MemoryAddress gdk_frame_clock_get_timings ( Addressable frame_clock,  long frame_counter) {
        var mh$ = gdk_frame_clock_get_timings$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(frame_clock, frame_counter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_clock_get_current_timings$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.gdk_frame_clock_get_current_timings$MH,"gdk_frame_clock_get_current_timings");
    }
    public static MemoryAddress gdk_frame_clock_get_current_timings ( Addressable frame_clock) {
        var mh$ = gdk_frame_clock_get_current_timings$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(frame_clock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_clock_get_refresh_info$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.gdk_frame_clock_get_refresh_info$MH,"gdk_frame_clock_get_refresh_info");
    }
    public static void gdk_frame_clock_get_refresh_info ( Addressable frame_clock,  long base_time,  Addressable refresh_interval_return,  Addressable presentation_time_return) {
        var mh$ = gdk_frame_clock_get_refresh_info$MH();
        try {
            mh$.invokeExact(frame_clock, base_time, refresh_interval_return, presentation_time_return);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GDK_INPUT_OUTPUT() {
        return (int)0L;
    }
    public static int GDK_INPUT_ONLY() {
        return (int)1L;
    }
    public static int GDK_WINDOW_ROOT() {
        return (int)0L;
    }
    public static int GDK_WINDOW_TOPLEVEL() {
        return (int)1L;
    }
    public static int GDK_WINDOW_CHILD() {
        return (int)2L;
    }
    public static int GDK_WINDOW_TEMP() {
        return (int)3L;
    }
    public static int GDK_WINDOW_FOREIGN() {
        return (int)4L;
    }
    public static int GDK_WINDOW_OFFSCREEN() {
        return (int)5L;
    }
    public static int GDK_WINDOW_SUBSURFACE() {
        return (int)6L;
    }
    public static int GDK_WA_TITLE() {
        return (int)2L;
    }
    public static int GDK_WA_X() {
        return (int)4L;
    }
    public static int GDK_WA_Y() {
        return (int)8L;
    }
    public static int GDK_WA_CURSOR() {
        return (int)16L;
    }
    public static int GDK_WA_VISUAL() {
        return (int)32L;
    }
    public static int GDK_WA_WMCLASS() {
        return (int)64L;
    }
    public static int GDK_WA_NOREDIR() {
        return (int)128L;
    }
    public static int GDK_WA_TYPE_HINT() {
        return (int)256L;
    }
    public static int GDK_HINT_POS() {
        return (int)1L;
    }
    public static int GDK_HINT_MIN_SIZE() {
        return (int)2L;
    }
    public static int GDK_HINT_MAX_SIZE() {
        return (int)4L;
    }
    public static int GDK_HINT_BASE_SIZE() {
        return (int)8L;
    }
    public static int GDK_HINT_ASPECT() {
        return (int)16L;
    }
    public static int GDK_HINT_RESIZE_INC() {
        return (int)32L;
    }
    public static int GDK_HINT_WIN_GRAVITY() {
        return (int)64L;
    }
    public static int GDK_HINT_USER_POS() {
        return (int)128L;
    }
    public static int GDK_HINT_USER_SIZE() {
        return (int)256L;
    }
    public static int GDK_DECOR_ALL() {
        return (int)1L;
    }
    public static int GDK_DECOR_BORDER() {
        return (int)2L;
    }
    public static int GDK_DECOR_RESIZEH() {
        return (int)4L;
    }
    public static int GDK_DECOR_TITLE() {
        return (int)8L;
    }
    public static int GDK_DECOR_MENU() {
        return (int)16L;
    }
    public static int GDK_DECOR_MINIMIZE() {
        return (int)32L;
    }
    public static int GDK_DECOR_MAXIMIZE() {
        return (int)64L;
    }
    public static int GDK_FUNC_ALL() {
        return (int)1L;
    }
    public static int GDK_FUNC_RESIZE() {
        return (int)2L;
    }
    public static int GDK_FUNC_MOVE() {
        return (int)4L;
    }
    public static int GDK_FUNC_MINIMIZE() {
        return (int)8L;
    }
    public static int GDK_FUNC_MAXIMIZE() {
        return (int)16L;
    }
    public static int GDK_FUNC_CLOSE() {
        return (int)32L;
    }
    public static int GDK_GRAVITY_NORTH_WEST() {
        return (int)1L;
    }
    public static int GDK_GRAVITY_NORTH() {
        return (int)2L;
    }
    public static int GDK_GRAVITY_NORTH_EAST() {
        return (int)3L;
    }
    public static int GDK_GRAVITY_WEST() {
        return (int)4L;
    }
    public static int GDK_GRAVITY_CENTER() {
        return (int)5L;
    }
    public static int GDK_GRAVITY_EAST() {
        return (int)6L;
    }
    public static int GDK_GRAVITY_SOUTH_WEST() {
        return (int)7L;
    }
    public static int GDK_GRAVITY_SOUTH() {
        return (int)8L;
    }
    public static int GDK_GRAVITY_SOUTH_EAST() {
        return (int)9L;
    }
    public static int GDK_GRAVITY_STATIC() {
        return (int)10L;
    }
    public static int GDK_ANCHOR_FLIP_X() {
        return (int)1L;
    }
    public static int GDK_ANCHOR_FLIP_Y() {
        return (int)2L;
    }
    public static int GDK_ANCHOR_SLIDE_X() {
        return (int)4L;
    }
    public static int GDK_ANCHOR_SLIDE_Y() {
        return (int)8L;
    }
    public static int GDK_ANCHOR_RESIZE_X() {
        return (int)16L;
    }
    public static int GDK_ANCHOR_RESIZE_Y() {
        return (int)32L;
    }
    public static int GDK_ANCHOR_FLIP() {
        return (int)3L;
    }
    public static int GDK_ANCHOR_SLIDE() {
        return (int)12L;
    }
    public static int GDK_ANCHOR_RESIZE() {
        return (int)48L;
    }
    public static int GDK_WINDOW_EDGE_NORTH_WEST() {
        return (int)0L;
    }
    public static int GDK_WINDOW_EDGE_NORTH() {
        return (int)1L;
    }
    public static int GDK_WINDOW_EDGE_NORTH_EAST() {
        return (int)2L;
    }
    public static int GDK_WINDOW_EDGE_WEST() {
        return (int)3L;
    }
    public static int GDK_WINDOW_EDGE_EAST() {
        return (int)4L;
    }
    public static int GDK_WINDOW_EDGE_SOUTH_WEST() {
        return (int)5L;
    }
    public static int GDK_WINDOW_EDGE_SOUTH() {
        return (int)6L;
    }
    public static int GDK_WINDOW_EDGE_SOUTH_EAST() {
        return (int)7L;
    }
    public static int GDK_FULLSCREEN_ON_CURRENT_MONITOR() {
        return (int)0L;
    }
    public static int GDK_FULLSCREEN_ON_ALL_MONITORS() {
        return (int)1L;
    }
    public static MethodHandle gdk_window_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.gdk_window_get_type$MH,"gdk_window_get_type");
    }
    public static long gdk_window_get_type () {
        var mh$ = gdk_window_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.gdk_window_new$MH,"gdk_window_new");
    }
    public static MemoryAddress gdk_window_new ( Addressable parent,  Addressable attributes,  int attributes_mask) {
        var mh$ = gdk_window_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(parent, attributes, attributes_mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.gdk_window_destroy$MH,"gdk_window_destroy");
    }
    public static void gdk_window_destroy ( Addressable window) {
        var mh$ = gdk_window_destroy$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_window_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.gdk_window_get_window_type$MH,"gdk_window_get_window_type");
    }
    public static int gdk_window_get_window_type ( Addressable window) {
        var mh$ = gdk_window_get_window_type$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_is_destroyed$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.gdk_window_is_destroyed$MH,"gdk_window_is_destroyed");
    }
    public static int gdk_window_is_destroyed ( Addressable window) {
        var mh$ = gdk_window_is_destroyed$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_visual$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.gdk_window_get_visual$MH,"gdk_window_get_visual");
    }
    public static MemoryAddress gdk_window_get_visual ( Addressable window) {
        var mh$ = gdk_window_get_visual$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.gdk_window_get_screen$MH,"gdk_window_get_screen");
    }
    public static MemoryAddress gdk_window_get_screen ( Addressable window) {
        var mh$ = gdk_window_get_screen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.gdk_window_get_display$MH,"gdk_window_get_display");
    }
    public static MemoryAddress gdk_window_get_display ( Addressable window) {
        var mh$ = gdk_window_get_display$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_at_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.gdk_window_at_pointer$MH,"gdk_window_at_pointer");
    }
    public static MemoryAddress gdk_window_at_pointer ( Addressable win_x,  Addressable win_y) {
        var mh$ = gdk_window_at_pointer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(win_x, win_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_show$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.gdk_window_show$MH,"gdk_window_show");
    }
    public static void gdk_window_show ( Addressable window) {
        var mh$ = gdk_window_show$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_hide$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.gdk_window_hide$MH,"gdk_window_hide");
    }
    public static void gdk_window_hide ( Addressable window) {
        var mh$ = gdk_window_hide$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_withdraw$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.gdk_window_withdraw$MH,"gdk_window_withdraw");
    }
    public static void gdk_window_withdraw ( Addressable window) {
        var mh$ = gdk_window_withdraw$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_show_unraised$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.gdk_window_show_unraised$MH,"gdk_window_show_unraised");
    }
    public static void gdk_window_show_unraised ( Addressable window) {
        var mh$ = gdk_window_show_unraised$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_move$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.gdk_window_move$MH,"gdk_window_move");
    }
    public static void gdk_window_move ( Addressable window,  int x,  int y) {
        var mh$ = gdk_window_move$MH();
        try {
            mh$.invokeExact(window, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_resize$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.gdk_window_resize$MH,"gdk_window_resize");
    }
    public static void gdk_window_resize ( Addressable window,  int width,  int height) {
        var mh$ = gdk_window_resize$MH();
        try {
            mh$.invokeExact(window, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_move_resize$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.gdk_window_move_resize$MH,"gdk_window_move_resize");
    }
    public static void gdk_window_move_resize ( Addressable window,  int x,  int y,  int width,  int height) {
        var mh$ = gdk_window_move_resize$MH();
        try {
            mh$.invokeExact(window, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_move_to_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.gdk_window_move_to_rect$MH,"gdk_window_move_to_rect");
    }
    public static void gdk_window_move_to_rect ( Addressable window,  Addressable rect,  int rect_anchor,  int window_anchor,  int anchor_hints,  int rect_anchor_dx,  int rect_anchor_dy) {
        var mh$ = gdk_window_move_to_rect$MH();
        try {
            mh$.invokeExact(window, rect, rect_anchor, window_anchor, anchor_hints, rect_anchor_dx, rect_anchor_dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_reparent$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.gdk_window_reparent$MH,"gdk_window_reparent");
    }
    public static void gdk_window_reparent ( Addressable window,  Addressable new_parent,  int x,  int y) {
        var mh$ = gdk_window_reparent$MH();
        try {
            mh$.invokeExact(window, new_parent, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_raise$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.gdk_window_raise$MH,"gdk_window_raise");
    }
    public static void gdk_window_raise ( Addressable window) {
        var mh$ = gdk_window_raise$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_lower$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.gdk_window_lower$MH,"gdk_window_lower");
    }
    public static void gdk_window_lower ( Addressable window) {
        var mh$ = gdk_window_lower$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_restack$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.gdk_window_restack$MH,"gdk_window_restack");
    }
    public static void gdk_window_restack ( Addressable window,  Addressable sibling,  int above) {
        var mh$ = gdk_window_restack$MH();
        try {
            mh$.invokeExact(window, sibling, above);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.gdk_window_focus$MH,"gdk_window_focus");
    }
    public static void gdk_window_focus ( Addressable window,  int timestamp) {
        var mh$ = gdk_window_focus$MH();
        try {
            mh$.invokeExact(window, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.gdk_window_set_user_data$MH,"gdk_window_set_user_data");
    }
    public static void gdk_window_set_user_data ( Addressable window,  Addressable user_data) {
        var mh$ = gdk_window_set_user_data$MH();
        try {
            mh$.invokeExact(window, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_override_redirect$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.gdk_window_set_override_redirect$MH,"gdk_window_set_override_redirect");
    }
    public static void gdk_window_set_override_redirect ( Addressable window,  int override_redirect) {
        var mh$ = gdk_window_set_override_redirect$MH();
        try {
            mh$.invokeExact(window, override_redirect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_accept_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.gdk_window_get_accept_focus$MH,"gdk_window_get_accept_focus");
    }
    public static int gdk_window_get_accept_focus ( Addressable window) {
        var mh$ = gdk_window_get_accept_focus$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_accept_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.gdk_window_set_accept_focus$MH,"gdk_window_set_accept_focus");
    }
    public static void gdk_window_set_accept_focus ( Addressable window,  int accept_focus) {
        var mh$ = gdk_window_set_accept_focus$MH();
        try {
            mh$.invokeExact(window, accept_focus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_focus_on_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.gdk_window_get_focus_on_map$MH,"gdk_window_get_focus_on_map");
    }
    public static int gdk_window_get_focus_on_map ( Addressable window) {
        var mh$ = gdk_window_get_focus_on_map$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_focus_on_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.gdk_window_set_focus_on_map$MH,"gdk_window_set_focus_on_map");
    }
    public static void gdk_window_set_focus_on_map ( Addressable window,  int focus_on_map) {
        var mh$ = gdk_window_set_focus_on_map$MH();
        try {
            mh$.invokeExact(window, focus_on_map);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_add_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.gdk_window_add_filter$MH,"gdk_window_add_filter");
    }
    public static void gdk_window_add_filter ( Addressable window,  Addressable function,  Addressable data) {
        var mh$ = gdk_window_add_filter$MH();
        try {
            mh$.invokeExact(window, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_remove_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.gdk_window_remove_filter$MH,"gdk_window_remove_filter");
    }
    public static void gdk_window_remove_filter ( Addressable window,  Addressable function,  Addressable data) {
        var mh$ = gdk_window_remove_filter$MH();
        try {
            mh$.invokeExact(window, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_scroll$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.gdk_window_scroll$MH,"gdk_window_scroll");
    }
    public static void gdk_window_scroll ( Addressable window,  int dx,  int dy) {
        var mh$ = gdk_window_scroll$MH();
        try {
            mh$.invokeExact(window, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_move_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.gdk_window_move_region$MH,"gdk_window_move_region");
    }
    public static void gdk_window_move_region ( Addressable window,  Addressable region,  int dx,  int dy) {
        var mh$ = gdk_window_move_region$MH();
        try {
            mh$.invokeExact(window, region, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_ensure_native$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.gdk_window_ensure_native$MH,"gdk_window_ensure_native");
    }
    public static int gdk_window_ensure_native ( Addressable window) {
        var mh$ = gdk_window_ensure_native$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_shape_combine_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.gdk_window_shape_combine_region$MH,"gdk_window_shape_combine_region");
    }
    public static void gdk_window_shape_combine_region ( Addressable window,  Addressable shape_region,  int offset_x,  int offset_y) {
        var mh$ = gdk_window_shape_combine_region$MH();
        try {
            mh$.invokeExact(window, shape_region, offset_x, offset_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_child_shapes$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.gdk_window_set_child_shapes$MH,"gdk_window_set_child_shapes");
    }
    public static void gdk_window_set_child_shapes ( Addressable window) {
        var mh$ = gdk_window_set_child_shapes$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_composited$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.gdk_window_get_composited$MH,"gdk_window_get_composited");
    }
    public static int gdk_window_get_composited ( Addressable window) {
        var mh$ = gdk_window_get_composited$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_composited$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.gdk_window_set_composited$MH,"gdk_window_set_composited");
    }
    public static void gdk_window_set_composited ( Addressable window,  int composited) {
        var mh$ = gdk_window_set_composited$MH();
        try {
            mh$.invokeExact(window, composited);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_merge_child_shapes$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.gdk_window_merge_child_shapes$MH,"gdk_window_merge_child_shapes");
    }
    public static void gdk_window_merge_child_shapes ( Addressable window) {
        var mh$ = gdk_window_merge_child_shapes$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_input_shape_combine_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.gdk_window_input_shape_combine_region$MH,"gdk_window_input_shape_combine_region");
    }
    public static void gdk_window_input_shape_combine_region ( Addressable window,  Addressable shape_region,  int offset_x,  int offset_y) {
        var mh$ = gdk_window_input_shape_combine_region$MH();
        try {
            mh$.invokeExact(window, shape_region, offset_x, offset_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_child_input_shapes$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.gdk_window_set_child_input_shapes$MH,"gdk_window_set_child_input_shapes");
    }
    public static void gdk_window_set_child_input_shapes ( Addressable window) {
        var mh$ = gdk_window_set_child_input_shapes$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_merge_child_input_shapes$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.gdk_window_merge_child_input_shapes$MH,"gdk_window_merge_child_input_shapes");
    }
    public static void gdk_window_merge_child_input_shapes ( Addressable window) {
        var mh$ = gdk_window_merge_child_input_shapes$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_pass_through$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.gdk_window_set_pass_through$MH,"gdk_window_set_pass_through");
    }
    public static void gdk_window_set_pass_through ( Addressable window,  int pass_through) {
        var mh$ = gdk_window_set_pass_through$MH();
        try {
            mh$.invokeExact(window, pass_through);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_pass_through$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.gdk_window_get_pass_through$MH,"gdk_window_get_pass_through");
    }
    public static int gdk_window_get_pass_through ( Addressable window) {
        var mh$ = gdk_window_get_pass_through$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_is_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.gdk_window_is_visible$MH,"gdk_window_is_visible");
    }
    public static int gdk_window_is_visible ( Addressable window) {
        var mh$ = gdk_window_is_visible$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_is_viewable$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.gdk_window_is_viewable$MH,"gdk_window_is_viewable");
    }
    public static int gdk_window_is_viewable ( Addressable window) {
        var mh$ = gdk_window_is_viewable$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_is_input_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.gdk_window_is_input_only$MH,"gdk_window_is_input_only");
    }
    public static int gdk_window_is_input_only ( Addressable window) {
        var mh$ = gdk_window_is_input_only$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_is_shaped$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.gdk_window_is_shaped$MH,"gdk_window_is_shaped");
    }
    public static int gdk_window_is_shaped ( Addressable window) {
        var mh$ = gdk_window_is_shaped$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.gdk_window_get_state$MH,"gdk_window_get_state");
    }
    public static int gdk_window_get_state ( Addressable window) {
        var mh$ = gdk_window_get_state$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_static_gravities$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.gdk_window_set_static_gravities$MH,"gdk_window_set_static_gravities");
    }
    public static int gdk_window_set_static_gravities ( Addressable window,  int use_static) {
        var mh$ = gdk_window_set_static_gravities$MH();
        try {
            return (int)mh$.invokeExact(window, use_static);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_invalidate_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.gdk_window_set_invalidate_handler$MH,"gdk_window_set_invalidate_handler");
    }
    public static void gdk_window_set_invalidate_handler ( Addressable window,  Addressable handler) {
        var mh$ = gdk_window_set_invalidate_handler$MH();
        try {
            mh$.invokeExact(window, handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_has_native$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.gdk_window_has_native$MH,"gdk_window_has_native");
    }
    public static int gdk_window_has_native ( Addressable window) {
        var mh$ = gdk_window_has_native$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_type_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.gdk_window_set_type_hint$MH,"gdk_window_set_type_hint");
    }
    public static void gdk_window_set_type_hint ( Addressable window,  int hint) {
        var mh$ = gdk_window_set_type_hint$MH();
        try {
            mh$.invokeExact(window, hint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_type_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.gdk_window_get_type_hint$MH,"gdk_window_get_type_hint");
    }
    public static int gdk_window_get_type_hint ( Addressable window) {
        var mh$ = gdk_window_get_type_hint$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_modal_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.gdk_window_get_modal_hint$MH,"gdk_window_get_modal_hint");
    }
    public static int gdk_window_get_modal_hint ( Addressable window) {
        var mh$ = gdk_window_get_modal_hint$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_modal_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.gdk_window_set_modal_hint$MH,"gdk_window_set_modal_hint");
    }
    public static void gdk_window_set_modal_hint ( Addressable window,  int modal) {
        var mh$ = gdk_window_set_modal_hint$MH();
        try {
            mh$.invokeExact(window, modal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_skip_taskbar_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.gdk_window_set_skip_taskbar_hint$MH,"gdk_window_set_skip_taskbar_hint");
    }
    public static void gdk_window_set_skip_taskbar_hint ( Addressable window,  int skips_taskbar) {
        var mh$ = gdk_window_set_skip_taskbar_hint$MH();
        try {
            mh$.invokeExact(window, skips_taskbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_skip_pager_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.gdk_window_set_skip_pager_hint$MH,"gdk_window_set_skip_pager_hint");
    }
    public static void gdk_window_set_skip_pager_hint ( Addressable window,  int skips_pager) {
        var mh$ = gdk_window_set_skip_pager_hint$MH();
        try {
            mh$.invokeExact(window, skips_pager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_urgency_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.gdk_window_set_urgency_hint$MH,"gdk_window_set_urgency_hint");
    }
    public static void gdk_window_set_urgency_hint ( Addressable window,  int urgent) {
        var mh$ = gdk_window_set_urgency_hint$MH();
        try {
            mh$.invokeExact(window, urgent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_geometry_hints$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.gdk_window_set_geometry_hints$MH,"gdk_window_set_geometry_hints");
    }
    public static void gdk_window_set_geometry_hints ( Addressable window,  Addressable geometry,  int geom_mask) {
        var mh$ = gdk_window_set_geometry_hints$MH();
        try {
            mh$.invokeExact(window, geometry, geom_mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_clip_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.gdk_window_get_clip_region$MH,"gdk_window_get_clip_region");
    }
    public static MemoryAddress gdk_window_get_clip_region ( Addressable window) {
        var mh$ = gdk_window_get_clip_region$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_visible_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.gdk_window_get_visible_region$MH,"gdk_window_get_visible_region");
    }
    public static MemoryAddress gdk_window_get_visible_region ( Addressable window) {
        var mh$ = gdk_window_get_visible_region$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_begin_paint_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.gdk_window_begin_paint_rect$MH,"gdk_window_begin_paint_rect");
    }
    public static void gdk_window_begin_paint_rect ( Addressable window,  Addressable rectangle) {
        var mh$ = gdk_window_begin_paint_rect$MH();
        try {
            mh$.invokeExact(window, rectangle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_mark_paint_from_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.gdk_window_mark_paint_from_clip$MH,"gdk_window_mark_paint_from_clip");
    }
    public static void gdk_window_mark_paint_from_clip ( Addressable window,  Addressable cr) {
        var mh$ = gdk_window_mark_paint_from_clip$MH();
        try {
            mh$.invokeExact(window, cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_begin_paint_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.gdk_window_begin_paint_region$MH,"gdk_window_begin_paint_region");
    }
    public static void gdk_window_begin_paint_region ( Addressable window,  Addressable region) {
        var mh$ = gdk_window_begin_paint_region$MH();
        try {
            mh$.invokeExact(window, region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_end_paint$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.gdk_window_end_paint$MH,"gdk_window_end_paint");
    }
    public static void gdk_window_end_paint ( Addressable window) {
        var mh$ = gdk_window_end_paint$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_begin_draw_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.gdk_window_begin_draw_frame$MH,"gdk_window_begin_draw_frame");
    }
    public static MemoryAddress gdk_window_begin_draw_frame ( Addressable window,  Addressable region) {
        var mh$ = gdk_window_begin_draw_frame$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window, region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_end_draw_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.gdk_window_end_draw_frame$MH,"gdk_window_end_draw_frame");
    }
    public static void gdk_window_end_draw_frame ( Addressable window,  Addressable context) {
        var mh$ = gdk_window_end_draw_frame$MH();
        try {
            mh$.invokeExact(window, context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_flush$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.gdk_window_flush$MH,"gdk_window_flush");
    }
    public static void gdk_window_flush ( Addressable window) {
        var mh$ = gdk_window_flush$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.gdk_window_set_title$MH,"gdk_window_set_title");
    }
    public static void gdk_window_set_title ( Addressable window,  Addressable title) {
        var mh$ = gdk_window_set_title$MH();
        try {
            mh$.invokeExact(window, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_role$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.gdk_window_set_role$MH,"gdk_window_set_role");
    }
    public static void gdk_window_set_role ( Addressable window,  Addressable role) {
        var mh$ = gdk_window_set_role$MH();
        try {
            mh$.invokeExact(window, role);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_startup_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.gdk_window_set_startup_id$MH,"gdk_window_set_startup_id");
    }
    public static void gdk_window_set_startup_id ( Addressable window,  Addressable startup_id) {
        var mh$ = gdk_window_set_startup_id$MH();
        try {
            mh$.invokeExact(window, startup_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_transient_for$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.gdk_window_set_transient_for$MH,"gdk_window_set_transient_for");
    }
    public static void gdk_window_set_transient_for ( Addressable window,  Addressable parent) {
        var mh$ = gdk_window_set_transient_for$MH();
        try {
            mh$.invokeExact(window, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_background$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.gdk_window_set_background$MH,"gdk_window_set_background");
    }
    public static void gdk_window_set_background ( Addressable window,  Addressable color) {
        var mh$ = gdk_window_set_background$MH();
        try {
            mh$.invokeExact(window, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_background_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.gdk_window_set_background_rgba$MH,"gdk_window_set_background_rgba");
    }
    public static void gdk_window_set_background_rgba ( Addressable window,  Addressable rgba) {
        var mh$ = gdk_window_set_background_rgba$MH();
        try {
            mh$.invokeExact(window, rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_background_pattern$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.gdk_window_set_background_pattern$MH,"gdk_window_set_background_pattern");
    }
    public static void gdk_window_set_background_pattern ( Addressable window,  Addressable pattern) {
        var mh$ = gdk_window_set_background_pattern$MH();
        try {
            mh$.invokeExact(window, pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_background_pattern$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.gdk_window_get_background_pattern$MH,"gdk_window_get_background_pattern");
    }
    public static MemoryAddress gdk_window_get_background_pattern ( Addressable window) {
        var mh$ = gdk_window_get_background_pattern$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.gdk_window_set_cursor$MH,"gdk_window_set_cursor");
    }
    public static void gdk_window_set_cursor ( Addressable window,  Addressable cursor) {
        var mh$ = gdk_window_set_cursor$MH();
        try {
            mh$.invokeExact(window, cursor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.gdk_window_get_cursor$MH,"gdk_window_get_cursor");
    }
    public static MemoryAddress gdk_window_get_cursor ( Addressable window) {
        var mh$ = gdk_window_get_cursor$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_device_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.gdk_window_set_device_cursor$MH,"gdk_window_set_device_cursor");
    }
    public static void gdk_window_set_device_cursor ( Addressable window,  Addressable device,  Addressable cursor) {
        var mh$ = gdk_window_set_device_cursor$MH();
        try {
            mh$.invokeExact(window, device, cursor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_device_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.gdk_window_get_device_cursor$MH,"gdk_window_get_device_cursor");
    }
    public static MemoryAddress gdk_window_get_device_cursor ( Addressable window,  Addressable device) {
        var mh$ = gdk_window_get_device_cursor$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.gdk_window_get_user_data$MH,"gdk_window_get_user_data");
    }
    public static void gdk_window_get_user_data ( Addressable window,  Addressable data) {
        var mh$ = gdk_window_get_user_data$MH();
        try {
            mh$.invokeExact(window, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_geometry$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.gdk_window_get_geometry$MH,"gdk_window_get_geometry");
    }
    public static void gdk_window_get_geometry ( Addressable window,  Addressable x,  Addressable y,  Addressable width,  Addressable height) {
        var mh$ = gdk_window_get_geometry$MH();
        try {
            mh$.invokeExact(window, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.gdk_window_get_width$MH,"gdk_window_get_width");
    }
    public static int gdk_window_get_width ( Addressable window) {
        var mh$ = gdk_window_get_width$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.gdk_window_get_height$MH,"gdk_window_get_height");
    }
    public static int gdk_window_get_height ( Addressable window) {
        var mh$ = gdk_window_get_height$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.gdk_window_get_position$MH,"gdk_window_get_position");
    }
    public static void gdk_window_get_position ( Addressable window,  Addressable x,  Addressable y) {
        var mh$ = gdk_window_get_position$MH();
        try {
            mh$.invokeExact(window, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_origin$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.gdk_window_get_origin$MH,"gdk_window_get_origin");
    }
    public static int gdk_window_get_origin ( Addressable window,  Addressable x,  Addressable y) {
        var mh$ = gdk_window_get_origin$MH();
        try {
            return (int)mh$.invokeExact(window, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_root_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.gdk_window_get_root_coords$MH,"gdk_window_get_root_coords");
    }
    public static void gdk_window_get_root_coords ( Addressable window,  int x,  int y,  Addressable root_x,  Addressable root_y) {
        var mh$ = gdk_window_get_root_coords$MH();
        try {
            mh$.invokeExact(window, x, y, root_x, root_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_coords_to_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.gdk_window_coords_to_parent$MH,"gdk_window_coords_to_parent");
    }
    public static void gdk_window_coords_to_parent ( Addressable window,  double x,  double y,  Addressable parent_x,  Addressable parent_y) {
        var mh$ = gdk_window_coords_to_parent$MH();
        try {
            mh$.invokeExact(window, x, y, parent_x, parent_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_coords_from_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.gdk_window_coords_from_parent$MH,"gdk_window_coords_from_parent");
    }
    public static void gdk_window_coords_from_parent ( Addressable window,  double parent_x,  double parent_y,  Addressable x,  Addressable y) {
        var mh$ = gdk_window_coords_from_parent$MH();
        try {
            mh$.invokeExact(window, parent_x, parent_y, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_root_origin$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.gdk_window_get_root_origin$MH,"gdk_window_get_root_origin");
    }
    public static void gdk_window_get_root_origin ( Addressable window,  Addressable x,  Addressable y) {
        var mh$ = gdk_window_get_root_origin$MH();
        try {
            mh$.invokeExact(window, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_frame_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.gdk_window_get_frame_extents$MH,"gdk_window_get_frame_extents");
    }
    public static void gdk_window_get_frame_extents ( Addressable window,  Addressable rect) {
        var mh$ = gdk_window_get_frame_extents$MH();
        try {
            mh$.invokeExact(window, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_scale_factor$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.gdk_window_get_scale_factor$MH,"gdk_window_get_scale_factor");
    }
    public static int gdk_window_get_scale_factor ( Addressable window) {
        var mh$ = gdk_window_get_scale_factor$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.gdk_window_get_pointer$MH,"gdk_window_get_pointer");
    }
    public static MemoryAddress gdk_window_get_pointer ( Addressable window,  Addressable x,  Addressable y,  Addressable mask) {
        var mh$ = gdk_window_get_pointer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window, x, y, mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_device_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.gdk_window_get_device_position$MH,"gdk_window_get_device_position");
    }
    public static MemoryAddress gdk_window_get_device_position ( Addressable window,  Addressable device,  Addressable x,  Addressable y,  Addressable mask) {
        var mh$ = gdk_window_get_device_position$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window, device, x, y, mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_device_position_double$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.gdk_window_get_device_position_double$MH,"gdk_window_get_device_position_double");
    }
    public static MemoryAddress gdk_window_get_device_position_double ( Addressable window,  Addressable device,  Addressable x,  Addressable y,  Addressable mask) {
        var mh$ = gdk_window_get_device_position_double$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window, device, x, y, mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.gdk_window_get_parent$MH,"gdk_window_get_parent");
    }
    public static MemoryAddress gdk_window_get_parent ( Addressable window) {
        var mh$ = gdk_window_get_parent$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_toplevel$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.gdk_window_get_toplevel$MH,"gdk_window_get_toplevel");
    }
    public static MemoryAddress gdk_window_get_toplevel ( Addressable window) {
        var mh$ = gdk_window_get_toplevel$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_effective_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.gdk_window_get_effective_parent$MH,"gdk_window_get_effective_parent");
    }
    public static MemoryAddress gdk_window_get_effective_parent ( Addressable window) {
        var mh$ = gdk_window_get_effective_parent$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_effective_toplevel$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.gdk_window_get_effective_toplevel$MH,"gdk_window_get_effective_toplevel");
    }
    public static MemoryAddress gdk_window_get_effective_toplevel ( Addressable window) {
        var mh$ = gdk_window_get_effective_toplevel$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.gdk_window_get_children$MH,"gdk_window_get_children");
    }
    public static MemoryAddress gdk_window_get_children ( Addressable window) {
        var mh$ = gdk_window_get_children$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_peek_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.gdk_window_peek_children$MH,"gdk_window_peek_children");
    }
    public static MemoryAddress gdk_window_peek_children ( Addressable window) {
        var mh$ = gdk_window_peek_children$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_children_with_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.gdk_window_get_children_with_user_data$MH,"gdk_window_get_children_with_user_data");
    }
    public static MemoryAddress gdk_window_get_children_with_user_data ( Addressable window,  Addressable user_data) {
        var mh$ = gdk_window_get_children_with_user_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.gdk_window_get_events$MH,"gdk_window_get_events");
    }
    public static int gdk_window_get_events ( Addressable window) {
        var mh$ = gdk_window_get_events$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.gdk_window_set_events$MH,"gdk_window_set_events");
    }
    public static void gdk_window_set_events ( Addressable window,  int event_mask) {
        var mh$ = gdk_window_set_events$MH();
        try {
            mh$.invokeExact(window, event_mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_device_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.gdk_window_set_device_events$MH,"gdk_window_set_device_events");
    }
    public static void gdk_window_set_device_events ( Addressable window,  Addressable device,  int event_mask) {
        var mh$ = gdk_window_set_device_events$MH();
        try {
            mh$.invokeExact(window, device, event_mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_device_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.gdk_window_get_device_events$MH,"gdk_window_get_device_events");
    }
    public static int gdk_window_get_device_events ( Addressable window,  Addressable device) {
        var mh$ = gdk_window_get_device_events$MH();
        try {
            return (int)mh$.invokeExact(window, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_source_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.gdk_window_set_source_events$MH,"gdk_window_set_source_events");
    }
    public static void gdk_window_set_source_events ( Addressable window,  int source,  int event_mask) {
        var mh$ = gdk_window_set_source_events$MH();
        try {
            mh$.invokeExact(window, source, event_mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_source_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.gdk_window_get_source_events$MH,"gdk_window_get_source_events");
    }
    public static int gdk_window_get_source_events ( Addressable window,  int source) {
        var mh$ = gdk_window_get_source_events$MH();
        try {
            return (int)mh$.invokeExact(window, source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_icon_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.gdk_window_set_icon_list$MH,"gdk_window_set_icon_list");
    }
    public static void gdk_window_set_icon_list ( Addressable window,  Addressable pixbufs) {
        var mh$ = gdk_window_set_icon_list$MH();
        try {
            mh$.invokeExact(window, pixbufs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.gdk_window_set_icon_name$MH,"gdk_window_set_icon_name");
    }
    public static void gdk_window_set_icon_name ( Addressable window,  Addressable name) {
        var mh$ = gdk_window_set_icon_name$MH();
        try {
            mh$.invokeExact(window, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.gdk_window_set_group$MH,"gdk_window_set_group");
    }
    public static void gdk_window_set_group ( Addressable window,  Addressable leader) {
        var mh$ = gdk_window_set_group$MH();
        try {
            mh$.invokeExact(window, leader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.gdk_window_get_group$MH,"gdk_window_get_group");
    }
    public static MemoryAddress gdk_window_get_group ( Addressable window) {
        var mh$ = gdk_window_get_group$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_decorations$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.gdk_window_set_decorations$MH,"gdk_window_set_decorations");
    }
    public static void gdk_window_set_decorations ( Addressable window,  int decorations) {
        var mh$ = gdk_window_set_decorations$MH();
        try {
            mh$.invokeExact(window, decorations);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_decorations$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.gdk_window_get_decorations$MH,"gdk_window_get_decorations");
    }
    public static int gdk_window_get_decorations ( Addressable window,  Addressable decorations) {
        var mh$ = gdk_window_get_decorations$MH();
        try {
            return (int)mh$.invokeExact(window, decorations);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_functions$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.gdk_window_set_functions$MH,"gdk_window_set_functions");
    }
    public static void gdk_window_set_functions ( Addressable window,  int functions) {
        var mh$ = gdk_window_set_functions$MH();
        try {
            mh$.invokeExact(window, functions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_create_similar_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.gdk_window_create_similar_surface$MH,"gdk_window_create_similar_surface");
    }
    public static MemoryAddress gdk_window_create_similar_surface ( Addressable window,  int content,  int width,  int height) {
        var mh$ = gdk_window_create_similar_surface$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window, content, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_create_similar_image_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.gdk_window_create_similar_image_surface$MH,"gdk_window_create_similar_image_surface");
    }
    public static MemoryAddress gdk_window_create_similar_image_surface ( Addressable window,  int format,  int width,  int height,  int scale) {
        var mh$ = gdk_window_create_similar_image_surface$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window, format, width, height, scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_beep$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.gdk_window_beep$MH,"gdk_window_beep");
    }
    public static void gdk_window_beep ( Addressable window) {
        var mh$ = gdk_window_beep$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_iconify$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.gdk_window_iconify$MH,"gdk_window_iconify");
    }
    public static void gdk_window_iconify ( Addressable window) {
        var mh$ = gdk_window_iconify$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_deiconify$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.gdk_window_deiconify$MH,"gdk_window_deiconify");
    }
    public static void gdk_window_deiconify ( Addressable window) {
        var mh$ = gdk_window_deiconify$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_stick$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.gdk_window_stick$MH,"gdk_window_stick");
    }
    public static void gdk_window_stick ( Addressable window) {
        var mh$ = gdk_window_stick$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_unstick$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.gdk_window_unstick$MH,"gdk_window_unstick");
    }
    public static void gdk_window_unstick ( Addressable window) {
        var mh$ = gdk_window_unstick$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_maximize$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.gdk_window_maximize$MH,"gdk_window_maximize");
    }
    public static void gdk_window_maximize ( Addressable window) {
        var mh$ = gdk_window_maximize$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_unmaximize$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.gdk_window_unmaximize$MH,"gdk_window_unmaximize");
    }
    public static void gdk_window_unmaximize ( Addressable window) {
        var mh$ = gdk_window_unmaximize$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_fullscreen$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.gdk_window_fullscreen$MH,"gdk_window_fullscreen");
    }
    public static void gdk_window_fullscreen ( Addressable window) {
        var mh$ = gdk_window_fullscreen$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_fullscreen_on_monitor$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.gdk_window_fullscreen_on_monitor$MH,"gdk_window_fullscreen_on_monitor");
    }
    public static void gdk_window_fullscreen_on_monitor ( Addressable window,  int monitor) {
        var mh$ = gdk_window_fullscreen_on_monitor$MH();
        try {
            mh$.invokeExact(window, monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_fullscreen_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.gdk_window_set_fullscreen_mode$MH,"gdk_window_set_fullscreen_mode");
    }
    public static void gdk_window_set_fullscreen_mode ( Addressable window,  int mode) {
        var mh$ = gdk_window_set_fullscreen_mode$MH();
        try {
            mh$.invokeExact(window, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_fullscreen_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.gdk_window_get_fullscreen_mode$MH,"gdk_window_get_fullscreen_mode");
    }
    public static int gdk_window_get_fullscreen_mode ( Addressable window) {
        var mh$ = gdk_window_get_fullscreen_mode$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_unfullscreen$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.gdk_window_unfullscreen$MH,"gdk_window_unfullscreen");
    }
    public static void gdk_window_unfullscreen ( Addressable window) {
        var mh$ = gdk_window_unfullscreen$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_keep_above$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.gdk_window_set_keep_above$MH,"gdk_window_set_keep_above");
    }
    public static void gdk_window_set_keep_above ( Addressable window,  int setting) {
        var mh$ = gdk_window_set_keep_above$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_keep_below$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.gdk_window_set_keep_below$MH,"gdk_window_set_keep_below");
    }
    public static void gdk_window_set_keep_below ( Addressable window,  int setting) {
        var mh$ = gdk_window_set_keep_below$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_opacity$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.gdk_window_set_opacity$MH,"gdk_window_set_opacity");
    }
    public static void gdk_window_set_opacity ( Addressable window,  double opacity) {
        var mh$ = gdk_window_set_opacity$MH();
        try {
            mh$.invokeExact(window, opacity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_register_dnd$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.gdk_window_register_dnd$MH,"gdk_window_register_dnd");
    }
    public static void gdk_window_register_dnd ( Addressable window) {
        var mh$ = gdk_window_register_dnd$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_drag_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.gdk_window_get_drag_protocol$MH,"gdk_window_get_drag_protocol");
    }
    public static int gdk_window_get_drag_protocol ( Addressable window,  Addressable target) {
        var mh$ = gdk_window_get_drag_protocol$MH();
        try {
            return (int)mh$.invokeExact(window, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_begin_resize_drag$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.gdk_window_begin_resize_drag$MH,"gdk_window_begin_resize_drag");
    }
    public static void gdk_window_begin_resize_drag ( Addressable window,  int edge,  int button,  int root_x,  int root_y,  int timestamp) {
        var mh$ = gdk_window_begin_resize_drag$MH();
        try {
            mh$.invokeExact(window, edge, button, root_x, root_y, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_begin_resize_drag_for_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.gdk_window_begin_resize_drag_for_device$MH,"gdk_window_begin_resize_drag_for_device");
    }
    public static void gdk_window_begin_resize_drag_for_device ( Addressable window,  int edge,  Addressable device,  int button,  int root_x,  int root_y,  int timestamp) {
        var mh$ = gdk_window_begin_resize_drag_for_device$MH();
        try {
            mh$.invokeExact(window, edge, device, button, root_x, root_y, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_begin_move_drag$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.gdk_window_begin_move_drag$MH,"gdk_window_begin_move_drag");
    }
    public static void gdk_window_begin_move_drag ( Addressable window,  int button,  int root_x,  int root_y,  int timestamp) {
        var mh$ = gdk_window_begin_move_drag$MH();
        try {
            mh$.invokeExact(window, button, root_x, root_y, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_begin_move_drag_for_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.gdk_window_begin_move_drag_for_device$MH,"gdk_window_begin_move_drag_for_device");
    }
    public static void gdk_window_begin_move_drag_for_device ( Addressable window,  Addressable device,  int button,  int root_x,  int root_y,  int timestamp) {
        var mh$ = gdk_window_begin_move_drag_for_device$MH();
        try {
            mh$.invokeExact(window, device, button, root_x, root_y, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_invalidate_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.gdk_window_invalidate_rect$MH,"gdk_window_invalidate_rect");
    }
    public static void gdk_window_invalidate_rect ( Addressable window,  Addressable rect,  int invalidate_children) {
        var mh$ = gdk_window_invalidate_rect$MH();
        try {
            mh$.invokeExact(window, rect, invalidate_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_invalidate_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.gdk_window_invalidate_region$MH,"gdk_window_invalidate_region");
    }
    public static void gdk_window_invalidate_region ( Addressable window,  Addressable region,  int invalidate_children) {
        var mh$ = gdk_window_invalidate_region$MH();
        try {
            mh$.invokeExact(window, region, invalidate_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_invalidate_maybe_recurse$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.gdk_window_invalidate_maybe_recurse$MH,"gdk_window_invalidate_maybe_recurse");
    }
    public static void gdk_window_invalidate_maybe_recurse ( Addressable window,  Addressable region,  Addressable child_func,  Addressable user_data) {
        var mh$ = gdk_window_invalidate_maybe_recurse$MH();
        try {
            mh$.invokeExact(window, region, child_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_update_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.gdk_window_get_update_area$MH,"gdk_window_get_update_area");
    }
    public static MemoryAddress gdk_window_get_update_area ( Addressable window) {
        var mh$ = gdk_window_get_update_area$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_freeze_updates$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.gdk_window_freeze_updates$MH,"gdk_window_freeze_updates");
    }
    public static void gdk_window_freeze_updates ( Addressable window) {
        var mh$ = gdk_window_freeze_updates$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_thaw_updates$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.gdk_window_thaw_updates$MH,"gdk_window_thaw_updates");
    }
    public static void gdk_window_thaw_updates ( Addressable window) {
        var mh$ = gdk_window_thaw_updates$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_freeze_toplevel_updates_libgtk_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.gdk_window_freeze_toplevel_updates_libgtk_only$MH,"gdk_window_freeze_toplevel_updates_libgtk_only");
    }
    public static void gdk_window_freeze_toplevel_updates_libgtk_only ( Addressable window) {
        var mh$ = gdk_window_freeze_toplevel_updates_libgtk_only$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_thaw_toplevel_updates_libgtk_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.gdk_window_thaw_toplevel_updates_libgtk_only$MH,"gdk_window_thaw_toplevel_updates_libgtk_only");
    }
    public static void gdk_window_thaw_toplevel_updates_libgtk_only ( Addressable window) {
        var mh$ = gdk_window_thaw_toplevel_updates_libgtk_only$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_process_all_updates$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.gdk_window_process_all_updates$MH,"gdk_window_process_all_updates");
    }
    public static void gdk_window_process_all_updates () {
        var mh$ = gdk_window_process_all_updates$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_process_updates$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.gdk_window_process_updates$MH,"gdk_window_process_updates");
    }
    public static void gdk_window_process_updates ( Addressable window,  int update_children) {
        var mh$ = gdk_window_process_updates$MH();
        try {
            mh$.invokeExact(window, update_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_debug_updates$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.gdk_window_set_debug_updates$MH,"gdk_window_set_debug_updates");
    }
    public static void gdk_window_set_debug_updates ( int setting) {
        var mh$ = gdk_window_set_debug_updates$MH();
        try {
            mh$.invokeExact(setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_constrain_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.gdk_window_constrain_size$MH,"gdk_window_constrain_size");
    }
    public static void gdk_window_constrain_size ( Addressable geometry,  int flags,  int width,  int height,  Addressable new_width,  Addressable new_height) {
        var mh$ = gdk_window_constrain_size$MH();
        try {
            mh$.invokeExact(geometry, flags, width, height, new_width, new_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_enable_synchronized_configure$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.gdk_window_enable_synchronized_configure$MH,"gdk_window_enable_synchronized_configure");
    }
    public static void gdk_window_enable_synchronized_configure ( Addressable window) {
        var mh$ = gdk_window_enable_synchronized_configure$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_configure_finished$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.gdk_window_configure_finished$MH,"gdk_window_configure_finished");
    }
    public static void gdk_window_configure_finished ( Addressable window) {
        var mh$ = gdk_window_configure_finished$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_get_default_root_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.gdk_get_default_root_window$MH,"gdk_get_default_root_window");
    }
    public static MemoryAddress gdk_get_default_root_window () {
        var mh$ = gdk_get_default_root_window$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_offscreen_window_get_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.gdk_offscreen_window_get_surface$MH,"gdk_offscreen_window_get_surface");
    }
    public static MemoryAddress gdk_offscreen_window_get_surface ( Addressable window) {
        var mh$ = gdk_offscreen_window_get_surface$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_offscreen_window_set_embedder$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.gdk_offscreen_window_set_embedder$MH,"gdk_offscreen_window_set_embedder");
    }
    public static void gdk_offscreen_window_set_embedder ( Addressable window,  Addressable embedder) {
        var mh$ = gdk_offscreen_window_set_embedder$MH();
        try {
            mh$.invokeExact(window, embedder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_offscreen_window_get_embedder$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.gdk_offscreen_window_get_embedder$MH,"gdk_offscreen_window_get_embedder");
    }
    public static MemoryAddress gdk_offscreen_window_get_embedder ( Addressable window) {
        var mh$ = gdk_offscreen_window_get_embedder$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_geometry_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.gdk_window_geometry_changed$MH,"gdk_window_geometry_changed");
    }
    public static void gdk_window_geometry_changed ( Addressable window) {
        var mh$ = gdk_window_geometry_changed$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_support_multidevice$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.gdk_window_set_support_multidevice$MH,"gdk_window_set_support_multidevice");
    }
    public static void gdk_window_set_support_multidevice ( Addressable window,  int support_multidevice) {
        var mh$ = gdk_window_set_support_multidevice$MH();
        try {
            mh$.invokeExact(window, support_multidevice);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_support_multidevice$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.gdk_window_get_support_multidevice$MH,"gdk_window_get_support_multidevice");
    }
    public static int gdk_window_get_support_multidevice ( Addressable window) {
        var mh$ = gdk_window_get_support_multidevice$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_frame_clock$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.gdk_window_get_frame_clock$MH,"gdk_window_get_frame_clock");
    }
    public static MemoryAddress gdk_window_get_frame_clock ( Addressable window) {
        var mh$ = gdk_window_get_frame_clock$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_opaque_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.gdk_window_set_opaque_region$MH,"gdk_window_set_opaque_region");
    }
    public static void gdk_window_set_opaque_region ( Addressable window,  Addressable region) {
        var mh$ = gdk_window_set_opaque_region$MH();
        try {
            mh$.invokeExact(window, region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_event_compression$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.gdk_window_set_event_compression$MH,"gdk_window_set_event_compression");
    }
    public static void gdk_window_set_event_compression ( Addressable window,  int event_compression) {
        var mh$ = gdk_window_set_event_compression$MH();
        try {
            mh$.invokeExact(window, event_compression);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_event_compression$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.gdk_window_get_event_compression$MH,"gdk_window_get_event_compression");
    }
    public static int gdk_window_get_event_compression ( Addressable window) {
        var mh$ = gdk_window_get_event_compression$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_shadow_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.gdk_window_set_shadow_width$MH,"gdk_window_set_shadow_width");
    }
    public static void gdk_window_set_shadow_width ( Addressable window,  int left,  int right,  int top,  int bottom) {
        var mh$ = gdk_window_set_shadow_width$MH();
        try {
            mh$.invokeExact(window, left, right, top, bottom);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_show_window_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.gdk_window_show_window_menu$MH,"gdk_window_show_window_menu");
    }
    public static int gdk_window_show_window_menu ( Addressable window,  Addressable event) {
        var mh$ = gdk_window_show_window_menu$MH();
        try {
            return (int)mh$.invokeExact(window, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_create_gl_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.gdk_window_create_gl_context$MH,"gdk_window_create_gl_context");
    }
    public static MemoryAddress gdk_window_create_gl_context ( Addressable window,  Addressable error) {
        var mh$ = gdk_window_create_gl_context$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GDK_SEAT_CAPABILITY_NONE() {
        return (int)0L;
    }
    public static int GDK_SEAT_CAPABILITY_POINTER() {
        return (int)1L;
    }
    public static int GDK_SEAT_CAPABILITY_TOUCH() {
        return (int)2L;
    }
    public static int GDK_SEAT_CAPABILITY_TABLET_STYLUS() {
        return (int)4L;
    }
    public static int GDK_SEAT_CAPABILITY_KEYBOARD() {
        return (int)8L;
    }
    public static int GDK_SEAT_CAPABILITY_ALL_POINTING() {
        return (int)7L;
    }
    public static int GDK_SEAT_CAPABILITY_ALL() {
        return (int)15L;
    }
    public static MethodHandle gdk_seat_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.gdk_seat_get_type$MH,"gdk_seat_get_type");
    }
    public static long gdk_seat_get_type () {
        var mh$ = gdk_seat_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_seat_grab$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.gdk_seat_grab$MH,"gdk_seat_grab");
    }
    public static int gdk_seat_grab ( Addressable seat,  Addressable window,  int capabilities,  int owner_events,  Addressable cursor,  Addressable event,  Addressable prepare_func,  Addressable prepare_func_data) {
        var mh$ = gdk_seat_grab$MH();
        try {
            return (int)mh$.invokeExact(seat, window, capabilities, owner_events, cursor, event, prepare_func, prepare_func_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_seat_ungrab$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.gdk_seat_ungrab$MH,"gdk_seat_ungrab");
    }
    public static void gdk_seat_ungrab ( Addressable seat) {
        var mh$ = gdk_seat_ungrab$MH();
        try {
            mh$.invokeExact(seat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_seat_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.gdk_seat_get_display$MH,"gdk_seat_get_display");
    }
    public static MemoryAddress gdk_seat_get_display ( Addressable seat) {
        var mh$ = gdk_seat_get_display$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(seat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_seat_get_capabilities$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.gdk_seat_get_capabilities$MH,"gdk_seat_get_capabilities");
    }
    public static int gdk_seat_get_capabilities ( Addressable seat) {
        var mh$ = gdk_seat_get_capabilities$MH();
        try {
            return (int)mh$.invokeExact(seat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_seat_get_slaves$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.gdk_seat_get_slaves$MH,"gdk_seat_get_slaves");
    }
    public static MemoryAddress gdk_seat_get_slaves ( Addressable seat,  int capabilities) {
        var mh$ = gdk_seat_get_slaves$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(seat, capabilities);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_seat_get_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.gdk_seat_get_pointer$MH,"gdk_seat_get_pointer");
    }
    public static MemoryAddress gdk_seat_get_pointer ( Addressable seat) {
        var mh$ = gdk_seat_get_pointer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(seat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_seat_get_keyboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.gdk_seat_get_keyboard$MH,"gdk_seat_get_keyboard");
    }
    public static MemoryAddress gdk_seat_get_keyboard ( Addressable seat) {
        var mh$ = gdk_seat_get_keyboard$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(seat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rectangle_intersect$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.gdk_rectangle_intersect$MH,"gdk_rectangle_intersect");
    }
    public static int gdk_rectangle_intersect ( Addressable src1,  Addressable src2,  Addressable dest) {
        var mh$ = gdk_rectangle_intersect$MH();
        try {
            return (int)mh$.invokeExact(src1, src2, dest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rectangle_union$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.gdk_rectangle_union$MH,"gdk_rectangle_union");
    }
    public static void gdk_rectangle_union ( Addressable src1,  Addressable src2,  Addressable dest) {
        var mh$ = gdk_rectangle_union$MH();
        try {
            mh$.invokeExact(src1, src2, dest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rectangle_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.gdk_rectangle_equal$MH,"gdk_rectangle_equal");
    }
    public static int gdk_rectangle_equal ( Addressable rect1,  Addressable rect2) {
        var mh$ = gdk_rectangle_equal$MH();
        try {
            return (int)mh$.invokeExact(rect1, rect2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rectangle_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.gdk_rectangle_get_type$MH,"gdk_rectangle_get_type");
    }
    public static long gdk_rectangle_get_type () {
        var mh$ = gdk_rectangle_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GDK_SUBPIXEL_LAYOUT_UNKNOWN() {
        return (int)0L;
    }
    public static int GDK_SUBPIXEL_LAYOUT_NONE() {
        return (int)1L;
    }
    public static int GDK_SUBPIXEL_LAYOUT_HORIZONTAL_RGB() {
        return (int)2L;
    }
    public static int GDK_SUBPIXEL_LAYOUT_HORIZONTAL_BGR() {
        return (int)3L;
    }
    public static int GDK_SUBPIXEL_LAYOUT_VERTICAL_RGB() {
        return (int)4L;
    }
    public static int GDK_SUBPIXEL_LAYOUT_VERTICAL_BGR() {
        return (int)5L;
    }
    public static MethodHandle gdk_monitor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.gdk_monitor_get_type$MH,"gdk_monitor_get_type");
    }
    public static long gdk_monitor_get_type () {
        var mh$ = gdk_monitor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.gdk_monitor_get_display$MH,"gdk_monitor_get_display");
    }
    public static MemoryAddress gdk_monitor_get_display ( Addressable monitor) {
        var mh$ = gdk_monitor_get_display$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_geometry$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.gdk_monitor_get_geometry$MH,"gdk_monitor_get_geometry");
    }
    public static void gdk_monitor_get_geometry ( Addressable monitor,  Addressable geometry) {
        var mh$ = gdk_monitor_get_geometry$MH();
        try {
            mh$.invokeExact(monitor, geometry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_workarea$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.gdk_monitor_get_workarea$MH,"gdk_monitor_get_workarea");
    }
    public static void gdk_monitor_get_workarea ( Addressable monitor,  Addressable workarea) {
        var mh$ = gdk_monitor_get_workarea$MH();
        try {
            mh$.invokeExact(monitor, workarea);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_width_mm$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.gdk_monitor_get_width_mm$MH,"gdk_monitor_get_width_mm");
    }
    public static int gdk_monitor_get_width_mm ( Addressable monitor) {
        var mh$ = gdk_monitor_get_width_mm$MH();
        try {
            return (int)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_height_mm$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.gdk_monitor_get_height_mm$MH,"gdk_monitor_get_height_mm");
    }
    public static int gdk_monitor_get_height_mm ( Addressable monitor) {
        var mh$ = gdk_monitor_get_height_mm$MH();
        try {
            return (int)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_manufacturer$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.gdk_monitor_get_manufacturer$MH,"gdk_monitor_get_manufacturer");
    }
    public static MemoryAddress gdk_monitor_get_manufacturer ( Addressable monitor) {
        var mh$ = gdk_monitor_get_manufacturer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.gdk_monitor_get_model$MH,"gdk_monitor_get_model");
    }
    public static MemoryAddress gdk_monitor_get_model ( Addressable monitor) {
        var mh$ = gdk_monitor_get_model$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_scale_factor$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.gdk_monitor_get_scale_factor$MH,"gdk_monitor_get_scale_factor");
    }
    public static int gdk_monitor_get_scale_factor ( Addressable monitor) {
        var mh$ = gdk_monitor_get_scale_factor$MH();
        try {
            return (int)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_refresh_rate$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.gdk_monitor_get_refresh_rate$MH,"gdk_monitor_get_refresh_rate");
    }
    public static int gdk_monitor_get_refresh_rate ( Addressable monitor) {
        var mh$ = gdk_monitor_get_refresh_rate$MH();
        try {
            return (int)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_subpixel_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.gdk_monitor_get_subpixel_layout$MH,"gdk_monitor_get_subpixel_layout");
    }
    public static int gdk_monitor_get_subpixel_layout ( Addressable monitor) {
        var mh$ = gdk_monitor_get_subpixel_layout$MH();
        try {
            return (int)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_is_primary$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.gdk_monitor_is_primary$MH,"gdk_monitor_is_primary");
    }
    public static int gdk_monitor_is_primary ( Addressable monitor) {
        var mh$ = gdk_monitor_is_primary$MH();
        try {
            return (int)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.gdk_display_get_type$MH,"gdk_display_get_type");
    }
    public static long gdk_display_get_type () {
        var mh$ = gdk_display_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_open$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.gdk_display_open$MH,"gdk_display_open");
    }
    public static MemoryAddress gdk_display_open ( Addressable display_name) {
        var mh$ = gdk_display_open$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.gdk_display_get_name$MH,"gdk_display_get_name");
    }
    public static MemoryAddress gdk_display_get_name ( Addressable display) {
        var mh$ = gdk_display_get_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_n_screens$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.gdk_display_get_n_screens$MH,"gdk_display_get_n_screens");
    }
    public static int gdk_display_get_n_screens ( Addressable display) {
        var mh$ = gdk_display_get_n_screens$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.gdk_display_get_screen$MH,"gdk_display_get_screen");
    }
    public static MemoryAddress gdk_display_get_screen ( Addressable display,  int screen_num) {
        var mh$ = gdk_display_get_screen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display, screen_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_default_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.gdk_display_get_default_screen$MH,"gdk_display_get_default_screen");
    }
    public static MemoryAddress gdk_display_get_default_screen ( Addressable display) {
        var mh$ = gdk_display_get_default_screen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_pointer_ungrab$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.gdk_display_pointer_ungrab$MH,"gdk_display_pointer_ungrab");
    }
    public static void gdk_display_pointer_ungrab ( Addressable display,  int time_) {
        var mh$ = gdk_display_pointer_ungrab$MH();
        try {
            mh$.invokeExact(display, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_keyboard_ungrab$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.gdk_display_keyboard_ungrab$MH,"gdk_display_keyboard_ungrab");
    }
    public static void gdk_display_keyboard_ungrab ( Addressable display,  int time_) {
        var mh$ = gdk_display_keyboard_ungrab$MH();
        try {
            mh$.invokeExact(display, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_pointer_is_grabbed$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.gdk_display_pointer_is_grabbed$MH,"gdk_display_pointer_is_grabbed");
    }
    public static int gdk_display_pointer_is_grabbed ( Addressable display) {
        var mh$ = gdk_display_pointer_is_grabbed$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_device_is_grabbed$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.gdk_display_device_is_grabbed$MH,"gdk_display_device_is_grabbed");
    }
    public static int gdk_display_device_is_grabbed ( Addressable display,  Addressable device) {
        var mh$ = gdk_display_device_is_grabbed$MH();
        try {
            return (int)mh$.invokeExact(display, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_beep$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.gdk_display_beep$MH,"gdk_display_beep");
    }
    public static void gdk_display_beep ( Addressable display) {
        var mh$ = gdk_display_beep$MH();
        try {
            mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.gdk_display_sync$MH,"gdk_display_sync");
    }
    public static void gdk_display_sync ( Addressable display) {
        var mh$ = gdk_display_sync$MH();
        try {
            mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_flush$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.gdk_display_flush$MH,"gdk_display_flush");
    }
    public static void gdk_display_flush ( Addressable display) {
        var mh$ = gdk_display_flush$MH();
        try {
            mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_close$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.gdk_display_close$MH,"gdk_display_close");
    }
    public static void gdk_display_close ( Addressable display) {
        var mh$ = gdk_display_close$MH();
        try {
            mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_is_closed$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.gdk_display_is_closed$MH,"gdk_display_is_closed");
    }
    public static int gdk_display_is_closed ( Addressable display) {
        var mh$ = gdk_display_is_closed$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_list_devices$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.gdk_display_list_devices$MH,"gdk_display_list_devices");
    }
    public static MemoryAddress gdk_display_list_devices ( Addressable display) {
        var mh$ = gdk_display_list_devices$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_event$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.gdk_display_get_event$MH,"gdk_display_get_event");
    }
    public static MemoryAddress gdk_display_get_event ( Addressable display) {
        var mh$ = gdk_display_get_event$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_peek_event$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.gdk_display_peek_event$MH,"gdk_display_peek_event");
    }
    public static MemoryAddress gdk_display_peek_event ( Addressable display) {
        var mh$ = gdk_display_peek_event$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_put_event$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.gdk_display_put_event$MH,"gdk_display_put_event");
    }
    public static void gdk_display_put_event ( Addressable display,  Addressable event) {
        var mh$ = gdk_display_put_event$MH();
        try {
            mh$.invokeExact(display, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_has_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.gdk_display_has_pending$MH,"gdk_display_has_pending");
    }
    public static int gdk_display_has_pending ( Addressable display) {
        var mh$ = gdk_display_has_pending$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_set_double_click_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.gdk_display_set_double_click_time$MH,"gdk_display_set_double_click_time");
    }
    public static void gdk_display_set_double_click_time ( Addressable display,  int msec) {
        var mh$ = gdk_display_set_double_click_time$MH();
        try {
            mh$.invokeExact(display, msec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_set_double_click_distance$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.gdk_display_set_double_click_distance$MH,"gdk_display_set_double_click_distance");
    }
    public static void gdk_display_set_double_click_distance ( Addressable display,  int distance) {
        var mh$ = gdk_display_set_double_click_distance$MH();
        try {
            mh$.invokeExact(display, distance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.gdk_display_get_default$MH,"gdk_display_get_default");
    }
    public static MemoryAddress gdk_display_get_default () {
        var mh$ = gdk_display_get_default$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.gdk_display_get_pointer$MH,"gdk_display_get_pointer");
    }
    public static void gdk_display_get_pointer ( Addressable display,  Addressable screen,  Addressable x,  Addressable y,  Addressable mask) {
        var mh$ = gdk_display_get_pointer$MH();
        try {
            mh$.invokeExact(display, screen, x, y, mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_window_at_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.gdk_display_get_window_at_pointer$MH,"gdk_display_get_window_at_pointer");
    }
    public static MemoryAddress gdk_display_get_window_at_pointer ( Addressable display,  Addressable win_x,  Addressable win_y) {
        var mh$ = gdk_display_get_window_at_pointer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display, win_x, win_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_warp_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.gdk_display_warp_pointer$MH,"gdk_display_warp_pointer");
    }
    public static void gdk_display_warp_pointer ( Addressable display,  Addressable screen,  int x,  int y) {
        var mh$ = gdk_display_warp_pointer$MH();
        try {
            mh$.invokeExact(display, screen, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_open_default_libgtk_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.gdk_display_open_default_libgtk_only$MH,"gdk_display_open_default_libgtk_only");
    }
    public static MemoryAddress gdk_display_open_default_libgtk_only () {
        var mh$ = gdk_display_open_default_libgtk_only$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_supports_cursor_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.gdk_display_supports_cursor_alpha$MH,"gdk_display_supports_cursor_alpha");
    }
    public static int gdk_display_supports_cursor_alpha ( Addressable display) {
        var mh$ = gdk_display_supports_cursor_alpha$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_supports_cursor_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.gdk_display_supports_cursor_color$MH,"gdk_display_supports_cursor_color");
    }
    public static int gdk_display_supports_cursor_color ( Addressable display) {
        var mh$ = gdk_display_supports_cursor_color$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_default_cursor_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.gdk_display_get_default_cursor_size$MH,"gdk_display_get_default_cursor_size");
    }
    public static int gdk_display_get_default_cursor_size ( Addressable display) {
        var mh$ = gdk_display_get_default_cursor_size$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_maximal_cursor_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.gdk_display_get_maximal_cursor_size$MH,"gdk_display_get_maximal_cursor_size");
    }
    public static void gdk_display_get_maximal_cursor_size ( Addressable display,  Addressable width,  Addressable height) {
        var mh$ = gdk_display_get_maximal_cursor_size$MH();
        try {
            mh$.invokeExact(display, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_default_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.gdk_display_get_default_group$MH,"gdk_display_get_default_group");
    }
    public static MemoryAddress gdk_display_get_default_group ( Addressable display) {
        var mh$ = gdk_display_get_default_group$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_supports_selection_notification$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.gdk_display_supports_selection_notification$MH,"gdk_display_supports_selection_notification");
    }
    public static int gdk_display_supports_selection_notification ( Addressable display) {
        var mh$ = gdk_display_supports_selection_notification$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_request_selection_notification$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.gdk_display_request_selection_notification$MH,"gdk_display_request_selection_notification");
    }
    public static int gdk_display_request_selection_notification ( Addressable display,  Addressable selection) {
        var mh$ = gdk_display_request_selection_notification$MH();
        try {
            return (int)mh$.invokeExact(display, selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_supports_clipboard_persistence$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.gdk_display_supports_clipboard_persistence$MH,"gdk_display_supports_clipboard_persistence");
    }
    public static int gdk_display_supports_clipboard_persistence ( Addressable display) {
        var mh$ = gdk_display_supports_clipboard_persistence$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_store_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.gdk_display_store_clipboard$MH,"gdk_display_store_clipboard");
    }
    public static void gdk_display_store_clipboard ( Addressable display,  Addressable clipboard_window,  int time_,  Addressable targets,  int n_targets) {
        var mh$ = gdk_display_store_clipboard$MH();
        try {
            mh$.invokeExact(display, clipboard_window, time_, targets, n_targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_supports_shapes$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.gdk_display_supports_shapes$MH,"gdk_display_supports_shapes");
    }
    public static int gdk_display_supports_shapes ( Addressable display) {
        var mh$ = gdk_display_supports_shapes$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_supports_input_shapes$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.gdk_display_supports_input_shapes$MH,"gdk_display_supports_input_shapes");
    }
    public static int gdk_display_supports_input_shapes ( Addressable display) {
        var mh$ = gdk_display_supports_input_shapes$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_supports_composite$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.gdk_display_supports_composite$MH,"gdk_display_supports_composite");
    }
    public static int gdk_display_supports_composite ( Addressable display) {
        var mh$ = gdk_display_supports_composite$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_notify_startup_complete$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.gdk_display_notify_startup_complete$MH,"gdk_display_notify_startup_complete");
    }
    public static void gdk_display_notify_startup_complete ( Addressable display,  Addressable startup_id) {
        var mh$ = gdk_display_notify_startup_complete$MH();
        try {
            mh$.invokeExact(display, startup_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_device_manager$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.gdk_display_get_device_manager$MH,"gdk_display_get_device_manager");
    }
    public static MemoryAddress gdk_display_get_device_manager ( Addressable display) {
        var mh$ = gdk_display_get_device_manager$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_app_launch_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.gdk_display_get_app_launch_context$MH,"gdk_display_get_app_launch_context");
    }
    public static MemoryAddress gdk_display_get_app_launch_context ( Addressable display) {
        var mh$ = gdk_display_get_app_launch_context$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_default_seat$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.gdk_display_get_default_seat$MH,"gdk_display_get_default_seat");
    }
    public static MemoryAddress gdk_display_get_default_seat ( Addressable display) {
        var mh$ = gdk_display_get_default_seat$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_list_seats$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.gdk_display_list_seats$MH,"gdk_display_list_seats");
    }
    public static MemoryAddress gdk_display_list_seats ( Addressable display) {
        var mh$ = gdk_display_list_seats$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_n_monitors$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.gdk_display_get_n_monitors$MH,"gdk_display_get_n_monitors");
    }
    public static int gdk_display_get_n_monitors ( Addressable display) {
        var mh$ = gdk_display_get_n_monitors$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_monitor$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.gdk_display_get_monitor$MH,"gdk_display_get_monitor");
    }
    public static MemoryAddress gdk_display_get_monitor ( Addressable display,  int monitor_num) {
        var mh$ = gdk_display_get_monitor$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display, monitor_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_primary_monitor$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.gdk_display_get_primary_monitor$MH,"gdk_display_get_primary_monitor");
    }
    public static MemoryAddress gdk_display_get_primary_monitor ( Addressable display) {
        var mh$ = gdk_display_get_primary_monitor$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_monitor_at_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.gdk_display_get_monitor_at_point$MH,"gdk_display_get_monitor_at_point");
    }
    public static MemoryAddress gdk_display_get_monitor_at_point ( Addressable display,  int x,  int y) {
        var mh$ = gdk_display_get_monitor_at_point$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_monitor_at_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.gdk_display_get_monitor_at_window$MH,"gdk_display_get_monitor_at_window");
    }
    public static MemoryAddress gdk_display_get_monitor_at_window ( Addressable display,  Addressable window) {
        var mh$ = gdk_display_get_monitor_at_window$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.gdk_screen_get_type$MH,"gdk_screen_get_type");
    }
    public static long gdk_screen_get_type () {
        var mh$ = gdk_screen_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_system_visual$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.gdk_screen_get_system_visual$MH,"gdk_screen_get_system_visual");
    }
    public static MemoryAddress gdk_screen_get_system_visual ( Addressable screen) {
        var mh$ = gdk_screen_get_system_visual$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_rgba_visual$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.gdk_screen_get_rgba_visual$MH,"gdk_screen_get_rgba_visual");
    }
    public static MemoryAddress gdk_screen_get_rgba_visual ( Addressable screen) {
        var mh$ = gdk_screen_get_rgba_visual$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_is_composited$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.gdk_screen_is_composited$MH,"gdk_screen_is_composited");
    }
    public static int gdk_screen_is_composited ( Addressable screen) {
        var mh$ = gdk_screen_is_composited$MH();
        try {
            return (int)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_root_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.gdk_screen_get_root_window$MH,"gdk_screen_get_root_window");
    }
    public static MemoryAddress gdk_screen_get_root_window ( Addressable screen) {
        var mh$ = gdk_screen_get_root_window$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.gdk_screen_get_display$MH,"gdk_screen_get_display");
    }
    public static MemoryAddress gdk_screen_get_display ( Addressable screen) {
        var mh$ = gdk_screen_get_display$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_number$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.gdk_screen_get_number$MH,"gdk_screen_get_number");
    }
    public static int gdk_screen_get_number ( Addressable screen) {
        var mh$ = gdk_screen_get_number$MH();
        try {
            return (int)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.gdk_screen_get_width$MH,"gdk_screen_get_width");
    }
    public static int gdk_screen_get_width ( Addressable screen) {
        var mh$ = gdk_screen_get_width$MH();
        try {
            return (int)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.gdk_screen_get_height$MH,"gdk_screen_get_height");
    }
    public static int gdk_screen_get_height ( Addressable screen) {
        var mh$ = gdk_screen_get_height$MH();
        try {
            return (int)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_width_mm$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.gdk_screen_get_width_mm$MH,"gdk_screen_get_width_mm");
    }
    public static int gdk_screen_get_width_mm ( Addressable screen) {
        var mh$ = gdk_screen_get_width_mm$MH();
        try {
            return (int)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_height_mm$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.gdk_screen_get_height_mm$MH,"gdk_screen_get_height_mm");
    }
    public static int gdk_screen_get_height_mm ( Addressable screen) {
        var mh$ = gdk_screen_get_height_mm$MH();
        try {
            return (int)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_list_visuals$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.gdk_screen_list_visuals$MH,"gdk_screen_list_visuals");
    }
    public static MemoryAddress gdk_screen_list_visuals ( Addressable screen) {
        var mh$ = gdk_screen_list_visuals$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_toplevel_windows$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.gdk_screen_get_toplevel_windows$MH,"gdk_screen_get_toplevel_windows");
    }
    public static MemoryAddress gdk_screen_get_toplevel_windows ( Addressable screen) {
        var mh$ = gdk_screen_get_toplevel_windows$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_make_display_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.gdk_screen_make_display_name$MH,"gdk_screen_make_display_name");
    }
    public static MemoryAddress gdk_screen_make_display_name ( Addressable screen) {
        var mh$ = gdk_screen_make_display_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_n_monitors$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.gdk_screen_get_n_monitors$MH,"gdk_screen_get_n_monitors");
    }
    public static int gdk_screen_get_n_monitors ( Addressable screen) {
        var mh$ = gdk_screen_get_n_monitors$MH();
        try {
            return (int)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_primary_monitor$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.gdk_screen_get_primary_monitor$MH,"gdk_screen_get_primary_monitor");
    }
    public static int gdk_screen_get_primary_monitor ( Addressable screen) {
        var mh$ = gdk_screen_get_primary_monitor$MH();
        try {
            return (int)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_monitor_geometry$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.gdk_screen_get_monitor_geometry$MH,"gdk_screen_get_monitor_geometry");
    }
    public static void gdk_screen_get_monitor_geometry ( Addressable screen,  int monitor_num,  Addressable dest) {
        var mh$ = gdk_screen_get_monitor_geometry$MH();
        try {
            mh$.invokeExact(screen, monitor_num, dest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_monitor_workarea$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.gdk_screen_get_monitor_workarea$MH,"gdk_screen_get_monitor_workarea");
    }
    public static void gdk_screen_get_monitor_workarea ( Addressable screen,  int monitor_num,  Addressable dest) {
        var mh$ = gdk_screen_get_monitor_workarea$MH();
        try {
            mh$.invokeExact(screen, monitor_num, dest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_monitor_at_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.gdk_screen_get_monitor_at_point$MH,"gdk_screen_get_monitor_at_point");
    }
    public static int gdk_screen_get_monitor_at_point ( Addressable screen,  int x,  int y) {
        var mh$ = gdk_screen_get_monitor_at_point$MH();
        try {
            return (int)mh$.invokeExact(screen, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_monitor_at_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.gdk_screen_get_monitor_at_window$MH,"gdk_screen_get_monitor_at_window");
    }
    public static int gdk_screen_get_monitor_at_window ( Addressable screen,  Addressable window) {
        var mh$ = gdk_screen_get_monitor_at_window$MH();
        try {
            return (int)mh$.invokeExact(screen, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_monitor_width_mm$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.gdk_screen_get_monitor_width_mm$MH,"gdk_screen_get_monitor_width_mm");
    }
    public static int gdk_screen_get_monitor_width_mm ( Addressable screen,  int monitor_num) {
        var mh$ = gdk_screen_get_monitor_width_mm$MH();
        try {
            return (int)mh$.invokeExact(screen, monitor_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_monitor_height_mm$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.gdk_screen_get_monitor_height_mm$MH,"gdk_screen_get_monitor_height_mm");
    }
    public static int gdk_screen_get_monitor_height_mm ( Addressable screen,  int monitor_num) {
        var mh$ = gdk_screen_get_monitor_height_mm$MH();
        try {
            return (int)mh$.invokeExact(screen, monitor_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_monitor_plug_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.gdk_screen_get_monitor_plug_name$MH,"gdk_screen_get_monitor_plug_name");
    }
    public static MemoryAddress gdk_screen_get_monitor_plug_name ( Addressable screen,  int monitor_num) {
        var mh$ = gdk_screen_get_monitor_plug_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(screen, monitor_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_monitor_scale_factor$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.gdk_screen_get_monitor_scale_factor$MH,"gdk_screen_get_monitor_scale_factor");
    }
    public static int gdk_screen_get_monitor_scale_factor ( Addressable screen,  int monitor_num) {
        var mh$ = gdk_screen_get_monitor_scale_factor$MH();
        try {
            return (int)mh$.invokeExact(screen, monitor_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.gdk_screen_get_default$MH,"gdk_screen_get_default");
    }
    public static MemoryAddress gdk_screen_get_default () {
        var mh$ = gdk_screen_get_default$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_setting$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.gdk_screen_get_setting$MH,"gdk_screen_get_setting");
    }
    public static int gdk_screen_get_setting ( Addressable screen,  Addressable name,  Addressable value) {
        var mh$ = gdk_screen_get_setting$MH();
        try {
            return (int)mh$.invokeExact(screen, name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_set_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.gdk_screen_set_font_options$MH,"gdk_screen_set_font_options");
    }
    public static void gdk_screen_set_font_options ( Addressable screen,  Addressable options) {
        var mh$ = gdk_screen_set_font_options$MH();
        try {
            mh$.invokeExact(screen, options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.gdk_screen_get_font_options$MH,"gdk_screen_get_font_options");
    }
    public static MemoryAddress gdk_screen_get_font_options ( Addressable screen) {
        var mh$ = gdk_screen_get_font_options$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_set_resolution$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.gdk_screen_set_resolution$MH,"gdk_screen_set_resolution");
    }
    public static void gdk_screen_set_resolution ( Addressable screen,  double dpi) {
        var mh$ = gdk_screen_set_resolution$MH();
        try {
            mh$.invokeExact(screen, dpi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_resolution$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.gdk_screen_get_resolution$MH,"gdk_screen_get_resolution");
    }
    public static double gdk_screen_get_resolution ( Addressable screen) {
        var mh$ = gdk_screen_get_resolution$MH();
        try {
            return (double)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_active_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.gdk_screen_get_active_window$MH,"gdk_screen_get_active_window");
    }
    public static MemoryAddress gdk_screen_get_active_window ( Addressable screen) {
        var mh$ = gdk_screen_get_active_window$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_window_stack$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.gdk_screen_get_window_stack$MH,"gdk_screen_get_window_stack");
    }
    public static MemoryAddress gdk_screen_get_window_stack ( Addressable screen) {
        var mh$ = gdk_screen_get_window_stack$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_app_launch_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.gdk_app_launch_context_get_type$MH,"gdk_app_launch_context_get_type");
    }
    public static long gdk_app_launch_context_get_type () {
        var mh$ = gdk_app_launch_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_app_launch_context_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.gdk_app_launch_context_new$MH,"gdk_app_launch_context_new");
    }
    public static MemoryAddress gdk_app_launch_context_new () {
        var mh$ = gdk_app_launch_context_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_app_launch_context_set_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.gdk_app_launch_context_set_display$MH,"gdk_app_launch_context_set_display");
    }
    public static void gdk_app_launch_context_set_display ( Addressable context,  Addressable display) {
        var mh$ = gdk_app_launch_context_set_display$MH();
        try {
            mh$.invokeExact(context, display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_app_launch_context_set_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.gdk_app_launch_context_set_screen$MH,"gdk_app_launch_context_set_screen");
    }
    public static void gdk_app_launch_context_set_screen ( Addressable context,  Addressable screen) {
        var mh$ = gdk_app_launch_context_set_screen$MH();
        try {
            mh$.invokeExact(context, screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_app_launch_context_set_desktop$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.gdk_app_launch_context_set_desktop$MH,"gdk_app_launch_context_set_desktop");
    }
    public static void gdk_app_launch_context_set_desktop ( Addressable context,  int desktop) {
        var mh$ = gdk_app_launch_context_set_desktop$MH();
        try {
            mh$.invokeExact(context, desktop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_app_launch_context_set_timestamp$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.gdk_app_launch_context_set_timestamp$MH,"gdk_app_launch_context_set_timestamp");
    }
    public static void gdk_app_launch_context_set_timestamp ( Addressable context,  int timestamp) {
        var mh$ = gdk_app_launch_context_set_timestamp$MH();
        try {
            mh$.invokeExact(context, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_app_launch_context_set_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.gdk_app_launch_context_set_icon$MH,"gdk_app_launch_context_set_icon");
    }
    public static void gdk_app_launch_context_set_icon ( Addressable context,  Addressable icon) {
        var mh$ = gdk_app_launch_context_set_icon$MH();
        try {
            mh$.invokeExact(context, icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_app_launch_context_set_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.gdk_app_launch_context_set_icon_name$MH,"gdk_app_launch_context_set_icon_name");
    }
    public static void gdk_app_launch_context_set_icon_name ( Addressable context,  Addressable icon_name) {
        var mh$ = gdk_app_launch_context_set_icon_name$MH();
        try {
            mh$.invokeExact(context, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_color_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.gdk_color_get_type$MH,"gdk_color_get_type");
    }
    public static long gdk_color_get_type () {
        var mh$ = gdk_color_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_color_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.gdk_color_copy$MH,"gdk_color_copy");
    }
    public static MemoryAddress gdk_color_copy ( Addressable color) {
        var mh$ = gdk_color_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_color_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.gdk_color_free$MH,"gdk_color_free");
    }
    public static void gdk_color_free ( Addressable color) {
        var mh$ = gdk_color_free$MH();
        try {
            mh$.invokeExact(color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_color_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.gdk_color_hash$MH,"gdk_color_hash");
    }
    public static int gdk_color_hash ( Addressable color) {
        var mh$ = gdk_color_hash$MH();
        try {
            return (int)mh$.invokeExact(color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_color_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.gdk_color_equal$MH,"gdk_color_equal");
    }
    public static int gdk_color_equal ( Addressable colora,  Addressable colorb) {
        var mh$ = gdk_color_equal$MH();
        try {
            return (int)mh$.invokeExact(colora, colorb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_color_parse$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.gdk_color_parse$MH,"gdk_color_parse");
    }
    public static int gdk_color_parse ( Addressable spec,  Addressable color) {
        var mh$ = gdk_color_parse$MH();
        try {
            return (int)mh$.invokeExact(spec, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_color_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.gdk_color_to_string$MH,"gdk_color_to_string");
    }
    public static MemoryAddress gdk_color_to_string ( Addressable color) {
        var mh$ = gdk_color_to_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rgba_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.gdk_rgba_get_type$MH,"gdk_rgba_get_type");
    }
    public static long gdk_rgba_get_type () {
        var mh$ = gdk_rgba_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rgba_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.gdk_rgba_copy$MH,"gdk_rgba_copy");
    }
    public static MemoryAddress gdk_rgba_copy ( Addressable rgba) {
        var mh$ = gdk_rgba_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rgba_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.gdk_rgba_free$MH,"gdk_rgba_free");
    }
    public static void gdk_rgba_free ( Addressable rgba) {
        var mh$ = gdk_rgba_free$MH();
        try {
            mh$.invokeExact(rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rgba_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.gdk_rgba_hash$MH,"gdk_rgba_hash");
    }
    public static int gdk_rgba_hash ( Addressable p) {
        var mh$ = gdk_rgba_hash$MH();
        try {
            return (int)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rgba_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.gdk_rgba_equal$MH,"gdk_rgba_equal");
    }
    public static int gdk_rgba_equal ( Addressable p1,  Addressable p2) {
        var mh$ = gdk_rgba_equal$MH();
        try {
            return (int)mh$.invokeExact(p1, p2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rgba_parse$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.gdk_rgba_parse$MH,"gdk_rgba_parse");
    }
    public static int gdk_rgba_parse ( Addressable rgba,  Addressable spec) {
        var mh$ = gdk_rgba_parse$MH();
        try {
            return (int)mh$.invokeExact(rgba, spec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rgba_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.gdk_rgba_to_string$MH,"gdk_rgba_to_string");
    }
    public static MemoryAddress gdk_rgba_to_string ( Addressable rgba) {
        var mh$ = gdk_rgba_to_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout gdk_pixbuf_major_version$LAYOUT() {
        return constants$1286.gdk_pixbuf_major_version$LAYOUT;
    }
    public static VarHandle gdk_pixbuf_major_version$VH() {
        return constants$1286.gdk_pixbuf_major_version$VH;
    }
    public static MemorySegment gdk_pixbuf_major_version$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1286.gdk_pixbuf_major_version$SEGMENT,"gdk_pixbuf_major_version");
    }
    public static int gdk_pixbuf_major_version$get() {
        return (int) constants$1286.gdk_pixbuf_major_version$VH.get(RuntimeHelper.requireNonNull(constants$1286.gdk_pixbuf_major_version$SEGMENT, "gdk_pixbuf_major_version"));
    }
    public static void gdk_pixbuf_major_version$set( int x) {
        constants$1286.gdk_pixbuf_major_version$VH.set(RuntimeHelper.requireNonNull(constants$1286.gdk_pixbuf_major_version$SEGMENT, "gdk_pixbuf_major_version"), x);
    }
    public static MemoryLayout gdk_pixbuf_minor_version$LAYOUT() {
        return constants$1287.gdk_pixbuf_minor_version$LAYOUT;
    }
    public static VarHandle gdk_pixbuf_minor_version$VH() {
        return constants$1287.gdk_pixbuf_minor_version$VH;
    }
    public static MemorySegment gdk_pixbuf_minor_version$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1287.gdk_pixbuf_minor_version$SEGMENT,"gdk_pixbuf_minor_version");
    }
    public static int gdk_pixbuf_minor_version$get() {
        return (int) constants$1287.gdk_pixbuf_minor_version$VH.get(RuntimeHelper.requireNonNull(constants$1287.gdk_pixbuf_minor_version$SEGMENT, "gdk_pixbuf_minor_version"));
    }
    public static void gdk_pixbuf_minor_version$set( int x) {
        constants$1287.gdk_pixbuf_minor_version$VH.set(RuntimeHelper.requireNonNull(constants$1287.gdk_pixbuf_minor_version$SEGMENT, "gdk_pixbuf_minor_version"), x);
    }
    public static MemoryLayout gdk_pixbuf_micro_version$LAYOUT() {
        return constants$1287.gdk_pixbuf_micro_version$LAYOUT;
    }
    public static VarHandle gdk_pixbuf_micro_version$VH() {
        return constants$1287.gdk_pixbuf_micro_version$VH;
    }
    public static MemorySegment gdk_pixbuf_micro_version$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1287.gdk_pixbuf_micro_version$SEGMENT,"gdk_pixbuf_micro_version");
    }
    public static int gdk_pixbuf_micro_version$get() {
        return (int) constants$1287.gdk_pixbuf_micro_version$VH.get(RuntimeHelper.requireNonNull(constants$1287.gdk_pixbuf_micro_version$SEGMENT, "gdk_pixbuf_micro_version"));
    }
    public static void gdk_pixbuf_micro_version$set( int x) {
        constants$1287.gdk_pixbuf_micro_version$VH.set(RuntimeHelper.requireNonNull(constants$1287.gdk_pixbuf_micro_version$SEGMENT, "gdk_pixbuf_micro_version"), x);
    }
    public static MemoryLayout gdk_pixbuf_version$LAYOUT() {
        return constants$1287.gdk_pixbuf_version$LAYOUT;
    }
    public static VarHandle gdk_pixbuf_version$VH() {
        return constants$1287.gdk_pixbuf_version$VH;
    }
    public static MemorySegment gdk_pixbuf_version$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1287.gdk_pixbuf_version$SEGMENT,"gdk_pixbuf_version");
    }
    public static MemoryAddress gdk_pixbuf_version$get() {
        return (java.lang.foreign.MemoryAddress) constants$1287.gdk_pixbuf_version$VH.get(RuntimeHelper.requireNonNull(constants$1287.gdk_pixbuf_version$SEGMENT, "gdk_pixbuf_version"));
    }
    public static void gdk_pixbuf_version$set( MemoryAddress x) {
        constants$1287.gdk_pixbuf_version$VH.set(RuntimeHelper.requireNonNull(constants$1287.gdk_pixbuf_version$SEGMENT, "gdk_pixbuf_version"), x);
    }
    public static int GDK_PIXBUF_ALPHA_BILEVEL() {
        return (int)0L;
    }
    public static int GDK_PIXBUF_ALPHA_FULL() {
        return (int)1L;
    }
    public static int GDK_COLORSPACE_RGB() {
        return (int)0L;
    }
    public static int GDK_PIXBUF_ERROR_CORRUPT_IMAGE() {
        return (int)0L;
    }
    public static int GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY() {
        return (int)1L;
    }
    public static int GDK_PIXBUF_ERROR_BAD_OPTION() {
        return (int)2L;
    }
    public static int GDK_PIXBUF_ERROR_UNKNOWN_TYPE() {
        return (int)3L;
    }
    public static int GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION() {
        return (int)4L;
    }
    public static int GDK_PIXBUF_ERROR_FAILED() {
        return (int)5L;
    }
    public static int GDK_PIXBUF_ERROR_INCOMPLETE_ANIMATION() {
        return (int)6L;
    }
    public static MethodHandle gdk_pixbuf_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.gdk_pixbuf_error_quark$MH,"gdk_pixbuf_error_quark");
    }
    public static int gdk_pixbuf_error_quark () {
        var mh$ = gdk_pixbuf_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.gdk_pixbuf_get_type$MH,"gdk_pixbuf_get_type");
    }
    public static long gdk_pixbuf_get_type () {
        var mh$ = gdk_pixbuf_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.gdk_pixbuf_ref$MH,"gdk_pixbuf_ref");
    }
    public static MemoryAddress gdk_pixbuf_ref ( Addressable pixbuf) {
        var mh$ = gdk_pixbuf_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.gdk_pixbuf_unref$MH,"gdk_pixbuf_unref");
    }
    public static void gdk_pixbuf_unref ( Addressable pixbuf) {
        var mh$ = gdk_pixbuf_unref$MH();
        try {
            mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_colorspace$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.gdk_pixbuf_get_colorspace$MH,"gdk_pixbuf_get_colorspace");
    }
    public static int gdk_pixbuf_get_colorspace ( Addressable pixbuf) {
        var mh$ = gdk_pixbuf_get_colorspace$MH();
        try {
            return (int)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_n_channels$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.gdk_pixbuf_get_n_channels$MH,"gdk_pixbuf_get_n_channels");
    }
    public static int gdk_pixbuf_get_n_channels ( Addressable pixbuf) {
        var mh$ = gdk_pixbuf_get_n_channels$MH();
        try {
            return (int)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_has_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.gdk_pixbuf_get_has_alpha$MH,"gdk_pixbuf_get_has_alpha");
    }
    public static int gdk_pixbuf_get_has_alpha ( Addressable pixbuf) {
        var mh$ = gdk_pixbuf_get_has_alpha$MH();
        try {
            return (int)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_bits_per_sample$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.gdk_pixbuf_get_bits_per_sample$MH,"gdk_pixbuf_get_bits_per_sample");
    }
    public static int gdk_pixbuf_get_bits_per_sample ( Addressable pixbuf) {
        var mh$ = gdk_pixbuf_get_bits_per_sample$MH();
        try {
            return (int)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_pixels$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.gdk_pixbuf_get_pixels$MH,"gdk_pixbuf_get_pixels");
    }
    public static MemoryAddress gdk_pixbuf_get_pixels ( Addressable pixbuf) {
        var mh$ = gdk_pixbuf_get_pixels$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.gdk_pixbuf_get_width$MH,"gdk_pixbuf_get_width");
    }
    public static int gdk_pixbuf_get_width ( Addressable pixbuf) {
        var mh$ = gdk_pixbuf_get_width$MH();
        try {
            return (int)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.gdk_pixbuf_get_height$MH,"gdk_pixbuf_get_height");
    }
    public static int gdk_pixbuf_get_height ( Addressable pixbuf) {
        var mh$ = gdk_pixbuf_get_height$MH();
        try {
            return (int)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_rowstride$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.gdk_pixbuf_get_rowstride$MH,"gdk_pixbuf_get_rowstride");
    }
    public static int gdk_pixbuf_get_rowstride ( Addressable pixbuf) {
        var mh$ = gdk_pixbuf_get_rowstride$MH();
        try {
            return (int)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_byte_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.gdk_pixbuf_get_byte_length$MH,"gdk_pixbuf_get_byte_length");
    }
    public static long gdk_pixbuf_get_byte_length ( Addressable pixbuf) {
        var mh$ = gdk_pixbuf_get_byte_length$MH();
        try {
            return (long)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_pixels_with_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.gdk_pixbuf_get_pixels_with_length$MH,"gdk_pixbuf_get_pixels_with_length");
    }
    public static MemoryAddress gdk_pixbuf_get_pixels_with_length ( Addressable pixbuf,  Addressable length) {
        var mh$ = gdk_pixbuf_get_pixels_with_length$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pixbuf, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_read_pixels$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.gdk_pixbuf_read_pixels$MH,"gdk_pixbuf_read_pixels");
    }
    public static MemoryAddress gdk_pixbuf_read_pixels ( Addressable pixbuf) {
        var mh$ = gdk_pixbuf_read_pixels$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_read_pixel_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.gdk_pixbuf_read_pixel_bytes$MH,"gdk_pixbuf_read_pixel_bytes");
    }
    public static MemoryAddress gdk_pixbuf_read_pixel_bytes ( Addressable pixbuf) {
        var mh$ = gdk_pixbuf_read_pixel_bytes$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.gdk_pixbuf_new$MH,"gdk_pixbuf_new");
    }
    public static MemoryAddress gdk_pixbuf_new ( int colorspace,  int has_alpha,  int bits_per_sample,  int width,  int height) {
        var mh$ = gdk_pixbuf_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(colorspace, has_alpha, bits_per_sample, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_calculate_rowstride$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.gdk_pixbuf_calculate_rowstride$MH,"gdk_pixbuf_calculate_rowstride");
    }
    public static int gdk_pixbuf_calculate_rowstride ( int colorspace,  int has_alpha,  int bits_per_sample,  int width,  int height) {
        var mh$ = gdk_pixbuf_calculate_rowstride$MH();
        try {
            return (int)mh$.invokeExact(colorspace, has_alpha, bits_per_sample, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.gdk_pixbuf_copy$MH,"gdk_pixbuf_copy");
    }
    public static MemoryAddress gdk_pixbuf_copy ( Addressable pixbuf) {
        var mh$ = gdk_pixbuf_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_subpixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.gdk_pixbuf_new_subpixbuf$MH,"gdk_pixbuf_new_subpixbuf");
    }
    public static MemoryAddress gdk_pixbuf_new_subpixbuf ( Addressable src_pixbuf,  int src_x,  int src_y,  int width,  int height) {
        var mh$ = gdk_pixbuf_new_subpixbuf$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(src_pixbuf, src_x, src_y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.gdk_pixbuf_new_from_file$MH,"gdk_pixbuf_new_from_file");
    }
    public static MemoryAddress gdk_pixbuf_new_from_file ( Addressable filename,  Addressable error) {
        var mh$ = gdk_pixbuf_new_from_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_file_at_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.gdk_pixbuf_new_from_file_at_size$MH,"gdk_pixbuf_new_from_file_at_size");
    }
    public static MemoryAddress gdk_pixbuf_new_from_file_at_size ( Addressable filename,  int width,  int height,  Addressable error) {
        var mh$ = gdk_pixbuf_new_from_file_at_size$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, width, height, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_file_at_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.gdk_pixbuf_new_from_file_at_scale$MH,"gdk_pixbuf_new_from_file_at_scale");
    }
    public static MemoryAddress gdk_pixbuf_new_from_file_at_scale ( Addressable filename,  int width,  int height,  int preserve_aspect_ratio,  Addressable error) {
        var mh$ = gdk_pixbuf_new_from_file_at_scale$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, width, height, preserve_aspect_ratio, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.gdk_pixbuf_new_from_resource$MH,"gdk_pixbuf_new_from_resource");
    }
    public static MemoryAddress gdk_pixbuf_new_from_resource ( Addressable resource_path,  Addressable error) {
        var mh$ = gdk_pixbuf_new_from_resource$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(resource_path, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_resource_at_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.gdk_pixbuf_new_from_resource_at_scale$MH,"gdk_pixbuf_new_from_resource_at_scale");
    }
    public static MemoryAddress gdk_pixbuf_new_from_resource_at_scale ( Addressable resource_path,  int width,  int height,  int preserve_aspect_ratio,  Addressable error) {
        var mh$ = gdk_pixbuf_new_from_resource_at_scale$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(resource_path, width, height, preserve_aspect_ratio, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.gdk_pixbuf_new_from_data$MH,"gdk_pixbuf_new_from_data");
    }
    public static MemoryAddress gdk_pixbuf_new_from_data ( Addressable data,  int colorspace,  int has_alpha,  int bits_per_sample,  int width,  int height,  int rowstride,  Addressable destroy_fn,  Addressable destroy_fn_data) {
        var mh$ = gdk_pixbuf_new_from_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(data, colorspace, has_alpha, bits_per_sample, width, height, rowstride, destroy_fn, destroy_fn_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.gdk_pixbuf_new_from_bytes$MH,"gdk_pixbuf_new_from_bytes");
    }
    public static MemoryAddress gdk_pixbuf_new_from_bytes ( Addressable data,  int colorspace,  int has_alpha,  int bits_per_sample,  int width,  int height,  int rowstride) {
        var mh$ = gdk_pixbuf_new_from_bytes$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(data, colorspace, has_alpha, bits_per_sample, width, height, rowstride);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_xpm_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.gdk_pixbuf_new_from_xpm_data$MH,"gdk_pixbuf_new_from_xpm_data");
    }
    public static MemoryAddress gdk_pixbuf_new_from_xpm_data ( Addressable data) {
        var mh$ = gdk_pixbuf_new_from_xpm_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_inline$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.gdk_pixbuf_new_from_inline$MH,"gdk_pixbuf_new_from_inline");
    }
    public static MemoryAddress gdk_pixbuf_new_from_inline ( int data_length,  Addressable data,  int copy_pixels,  Addressable error) {
        var mh$ = gdk_pixbuf_new_from_inline$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(data_length, data, copy_pixels, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_fill$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.gdk_pixbuf_fill$MH,"gdk_pixbuf_fill");
    }
    public static void gdk_pixbuf_fill ( Addressable pixbuf,  int pixel) {
        var mh$ = gdk_pixbuf_fill$MH();
        try {
            mh$.invokeExact(pixbuf, pixel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.gdk_pixbuf_save$MH,"gdk_pixbuf_save");
    }
    public static int gdk_pixbuf_save ( Addressable pixbuf,  Addressable filename,  Addressable type,  Addressable error, Object... x4) {
        var mh$ = gdk_pixbuf_save$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, filename, type, error, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_savev$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.gdk_pixbuf_savev$MH,"gdk_pixbuf_savev");
    }
    public static int gdk_pixbuf_savev ( Addressable pixbuf,  Addressable filename,  Addressable type,  Addressable option_keys,  Addressable option_values,  Addressable error) {
        var mh$ = gdk_pixbuf_savev$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, filename, type, option_keys, option_values, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save_to_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.gdk_pixbuf_save_to_callback$MH,"gdk_pixbuf_save_to_callback");
    }
    public static int gdk_pixbuf_save_to_callback ( Addressable pixbuf,  Addressable save_func,  Addressable user_data,  Addressable type,  Addressable error, Object... x5) {
        var mh$ = gdk_pixbuf_save_to_callback$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, save_func, user_data, type, error, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save_to_callbackv$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.gdk_pixbuf_save_to_callbackv$MH,"gdk_pixbuf_save_to_callbackv");
    }
    public static int gdk_pixbuf_save_to_callbackv ( Addressable pixbuf,  Addressable save_func,  Addressable user_data,  Addressable type,  Addressable option_keys,  Addressable option_values,  Addressable error) {
        var mh$ = gdk_pixbuf_save_to_callbackv$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, save_func, user_data, type, option_keys, option_values, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save_to_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.gdk_pixbuf_save_to_buffer$MH,"gdk_pixbuf_save_to_buffer");
    }
    public static int gdk_pixbuf_save_to_buffer ( Addressable pixbuf,  Addressable buffer,  Addressable buffer_size,  Addressable type,  Addressable error, Object... x5) {
        var mh$ = gdk_pixbuf_save_to_buffer$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, buffer, buffer_size, type, error, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save_to_bufferv$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.gdk_pixbuf_save_to_bufferv$MH,"gdk_pixbuf_save_to_bufferv");
    }
    public static int gdk_pixbuf_save_to_bufferv ( Addressable pixbuf,  Addressable buffer,  Addressable buffer_size,  Addressable type,  Addressable option_keys,  Addressable option_values,  Addressable error) {
        var mh$ = gdk_pixbuf_save_to_bufferv$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, buffer, buffer_size, type, option_keys, option_values, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.gdk_pixbuf_new_from_stream$MH,"gdk_pixbuf_new_from_stream");
    }
    public static MemoryAddress gdk_pixbuf_new_from_stream ( Addressable stream,  Addressable cancellable,  Addressable error) {
        var mh$ = gdk_pixbuf_new_from_stream$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_stream_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.gdk_pixbuf_new_from_stream_async$MH,"gdk_pixbuf_new_from_stream_async");
    }
    public static void gdk_pixbuf_new_from_stream_async ( Addressable stream,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = gdk_pixbuf_new_from_stream_async$MH();
        try {
            mh$.invokeExact(stream, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_stream_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.gdk_pixbuf_new_from_stream_finish$MH,"gdk_pixbuf_new_from_stream_finish");
    }
    public static MemoryAddress gdk_pixbuf_new_from_stream_finish ( Addressable async_result,  Addressable error) {
        var mh$ = gdk_pixbuf_new_from_stream_finish$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(async_result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_stream_at_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.gdk_pixbuf_new_from_stream_at_scale$MH,"gdk_pixbuf_new_from_stream_at_scale");
    }
    public static MemoryAddress gdk_pixbuf_new_from_stream_at_scale ( Addressable stream,  int width,  int height,  int preserve_aspect_ratio,  Addressable cancellable,  Addressable error) {
        var mh$ = gdk_pixbuf_new_from_stream_at_scale$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stream, width, height, preserve_aspect_ratio, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_stream_at_scale_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.gdk_pixbuf_new_from_stream_at_scale_async$MH,"gdk_pixbuf_new_from_stream_at_scale_async");
    }
    public static void gdk_pixbuf_new_from_stream_at_scale_async ( Addressable stream,  int width,  int height,  int preserve_aspect_ratio,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = gdk_pixbuf_new_from_stream_at_scale_async$MH();
        try {
            mh$.invokeExact(stream, width, height, preserve_aspect_ratio, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save_to_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.gdk_pixbuf_save_to_stream$MH,"gdk_pixbuf_save_to_stream");
    }
    public static int gdk_pixbuf_save_to_stream ( Addressable pixbuf,  Addressable stream,  Addressable type,  Addressable cancellable,  Addressable error, Object... x5) {
        var mh$ = gdk_pixbuf_save_to_stream$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, stream, type, cancellable, error, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save_to_stream_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.gdk_pixbuf_save_to_stream_async$MH,"gdk_pixbuf_save_to_stream_async");
    }
    public static void gdk_pixbuf_save_to_stream_async ( Addressable pixbuf,  Addressable stream,  Addressable type,  Addressable cancellable,  Addressable callback,  Addressable user_data, Object... x6) {
        var mh$ = gdk_pixbuf_save_to_stream_async$MH();
        try {
            mh$.invokeExact(pixbuf, stream, type, cancellable, callback, user_data, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save_to_stream_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.gdk_pixbuf_save_to_stream_finish$MH,"gdk_pixbuf_save_to_stream_finish");
    }
    public static int gdk_pixbuf_save_to_stream_finish ( Addressable async_result,  Addressable error) {
        var mh$ = gdk_pixbuf_save_to_stream_finish$MH();
        try {
            return (int)mh$.invokeExact(async_result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save_to_streamv_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.gdk_pixbuf_save_to_streamv_async$MH,"gdk_pixbuf_save_to_streamv_async");
    }
    public static void gdk_pixbuf_save_to_streamv_async ( Addressable pixbuf,  Addressable stream,  Addressable type,  Addressable option_keys,  Addressable option_values,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = gdk_pixbuf_save_to_streamv_async$MH();
        try {
            mh$.invokeExact(pixbuf, stream, type, option_keys, option_values, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save_to_streamv$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.gdk_pixbuf_save_to_streamv$MH,"gdk_pixbuf_save_to_streamv");
    }
    public static int gdk_pixbuf_save_to_streamv ( Addressable pixbuf,  Addressable stream,  Addressable type,  Addressable option_keys,  Addressable option_values,  Addressable cancellable,  Addressable error) {
        var mh$ = gdk_pixbuf_save_to_streamv$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, stream, type, option_keys, option_values, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_add_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.gdk_pixbuf_add_alpha$MH,"gdk_pixbuf_add_alpha");
    }
    public static MemoryAddress gdk_pixbuf_add_alpha ( Addressable pixbuf,  int substitute_color,  byte r,  byte g,  byte b) {
        var mh$ = gdk_pixbuf_add_alpha$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pixbuf, substitute_color, r, g, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_copy_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.gdk_pixbuf_copy_area$MH,"gdk_pixbuf_copy_area");
    }
    public static void gdk_pixbuf_copy_area ( Addressable src_pixbuf,  int src_x,  int src_y,  int width,  int height,  Addressable dest_pixbuf,  int dest_x,  int dest_y) {
        var mh$ = gdk_pixbuf_copy_area$MH();
        try {
            mh$.invokeExact(src_pixbuf, src_x, src_y, width, height, dest_pixbuf, dest_x, dest_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_saturate_and_pixelate$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.gdk_pixbuf_saturate_and_pixelate$MH,"gdk_pixbuf_saturate_and_pixelate");
    }
    public static void gdk_pixbuf_saturate_and_pixelate ( Addressable src,  Addressable dest,  float saturation,  int pixelate) {
        var mh$ = gdk_pixbuf_saturate_and_pixelate$MH();
        try {
            mh$.invokeExact(src, dest, saturation, pixelate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_apply_embedded_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.gdk_pixbuf_apply_embedded_orientation$MH,"gdk_pixbuf_apply_embedded_orientation");
    }
    public static MemoryAddress gdk_pixbuf_apply_embedded_orientation ( Addressable src) {
        var mh$ = gdk_pixbuf_apply_embedded_orientation$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_set_option$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.gdk_pixbuf_set_option$MH,"gdk_pixbuf_set_option");
    }
    public static int gdk_pixbuf_set_option ( Addressable pixbuf,  Addressable key,  Addressable value) {
        var mh$ = gdk_pixbuf_set_option$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_option$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.gdk_pixbuf_get_option$MH,"gdk_pixbuf_get_option");
    }
    public static MemoryAddress gdk_pixbuf_get_option ( Addressable pixbuf,  Addressable key) {
        var mh$ = gdk_pixbuf_get_option$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pixbuf, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_remove_option$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.gdk_pixbuf_remove_option$MH,"gdk_pixbuf_remove_option");
    }
    public static int gdk_pixbuf_remove_option ( Addressable pixbuf,  Addressable key) {
        var mh$ = gdk_pixbuf_remove_option$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.gdk_pixbuf_get_options$MH,"gdk_pixbuf_get_options");
    }
    public static MemoryAddress gdk_pixbuf_get_options ( Addressable pixbuf) {
        var mh$ = gdk_pixbuf_get_options$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_copy_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.gdk_pixbuf_copy_options$MH,"gdk_pixbuf_copy_options");
    }
    public static int gdk_pixbuf_copy_options ( Addressable src_pixbuf,  Addressable dest_pixbuf) {
        var mh$ = gdk_pixbuf_copy_options$MH();
        try {
            return (int)mh$.invokeExact(src_pixbuf, dest_pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GDK_INTERP_NEAREST() {
        return (int)0L;
    }
    public static int GDK_INTERP_TILES() {
        return (int)1L;
    }
    public static int GDK_INTERP_BILINEAR() {
        return (int)2L;
    }
    public static int GDK_INTERP_HYPER() {
        return (int)3L;
    }
    public static int GDK_PIXBUF_ROTATE_NONE() {
        return (int)0L;
    }
    public static int GDK_PIXBUF_ROTATE_COUNTERCLOCKWISE() {
        return (int)90L;
    }
    public static int GDK_PIXBUF_ROTATE_UPSIDEDOWN() {
        return (int)180L;
    }
    public static int GDK_PIXBUF_ROTATE_CLOCKWISE() {
        return (int)270L;
    }
    public static MethodHandle gdk_pixbuf_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.gdk_pixbuf_scale$MH,"gdk_pixbuf_scale");
    }
    public static void gdk_pixbuf_scale ( Addressable src,  Addressable dest,  int dest_x,  int dest_y,  int dest_width,  int dest_height,  double offset_x,  double offset_y,  double scale_x,  double scale_y,  int interp_type) {
        var mh$ = gdk_pixbuf_scale$MH();
        try {
            mh$.invokeExact(src, dest, dest_x, dest_y, dest_width, dest_height, offset_x, offset_y, scale_x, scale_y, interp_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_composite$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.gdk_pixbuf_composite$MH,"gdk_pixbuf_composite");
    }
    public static void gdk_pixbuf_composite ( Addressable src,  Addressable dest,  int dest_x,  int dest_y,  int dest_width,  int dest_height,  double offset_x,  double offset_y,  double scale_x,  double scale_y,  int interp_type,  int overall_alpha) {
        var mh$ = gdk_pixbuf_composite$MH();
        try {
            mh$.invokeExact(src, dest, dest_x, dest_y, dest_width, dest_height, offset_x, offset_y, scale_x, scale_y, interp_type, overall_alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_composite_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.gdk_pixbuf_composite_color$MH,"gdk_pixbuf_composite_color");
    }
    public static void gdk_pixbuf_composite_color ( Addressable src,  Addressable dest,  int dest_x,  int dest_y,  int dest_width,  int dest_height,  double offset_x,  double offset_y,  double scale_x,  double scale_y,  int interp_type,  int overall_alpha,  int check_x,  int check_y,  int check_size,  int color1,  int color2) {
        var mh$ = gdk_pixbuf_composite_color$MH();
        try {
            mh$.invokeExact(src, dest, dest_x, dest_y, dest_width, dest_height, offset_x, offset_y, scale_x, scale_y, interp_type, overall_alpha, check_x, check_y, check_size, color1, color2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_scale_simple$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.gdk_pixbuf_scale_simple$MH,"gdk_pixbuf_scale_simple");
    }
    public static MemoryAddress gdk_pixbuf_scale_simple ( Addressable src,  int dest_width,  int dest_height,  int interp_type) {
        var mh$ = gdk_pixbuf_scale_simple$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(src, dest_width, dest_height, interp_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_composite_color_simple$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.gdk_pixbuf_composite_color_simple$MH,"gdk_pixbuf_composite_color_simple");
    }
    public static MemoryAddress gdk_pixbuf_composite_color_simple ( Addressable src,  int dest_width,  int dest_height,  int interp_type,  int overall_alpha,  int check_size,  int color1,  int color2) {
        var mh$ = gdk_pixbuf_composite_color_simple$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(src, dest_width, dest_height, interp_type, overall_alpha, check_size, color1, color2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_rotate_simple$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.gdk_pixbuf_rotate_simple$MH,"gdk_pixbuf_rotate_simple");
    }
    public static MemoryAddress gdk_pixbuf_rotate_simple ( Addressable src,  int angle) {
        var mh$ = gdk_pixbuf_rotate_simple$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(src, angle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_flip$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.gdk_pixbuf_flip$MH,"gdk_pixbuf_flip");
    }
    public static MemoryAddress gdk_pixbuf_flip ( Addressable src,  int horizontal) {
        var mh$ = gdk_pixbuf_flip$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(src, horizontal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.gdk_pixbuf_animation_get_type$MH,"gdk_pixbuf_animation_get_type");
    }
    public static long gdk_pixbuf_animation_get_type () {
        var mh$ = gdk_pixbuf_animation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.gdk_pixbuf_animation_new_from_file$MH,"gdk_pixbuf_animation_new_from_file");
    }
    public static MemoryAddress gdk_pixbuf_animation_new_from_file ( Addressable filename,  Addressable error) {
        var mh$ = gdk_pixbuf_animation_new_from_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_new_from_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.gdk_pixbuf_animation_new_from_stream$MH,"gdk_pixbuf_animation_new_from_stream");
    }
    public static MemoryAddress gdk_pixbuf_animation_new_from_stream ( Addressable stream,  Addressable cancellable,  Addressable error) {
        var mh$ = gdk_pixbuf_animation_new_from_stream$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_new_from_stream_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.gdk_pixbuf_animation_new_from_stream_async$MH,"gdk_pixbuf_animation_new_from_stream_async");
    }
    public static void gdk_pixbuf_animation_new_from_stream_async ( Addressable stream,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = gdk_pixbuf_animation_new_from_stream_async$MH();
        try {
            mh$.invokeExact(stream, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_new_from_stream_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.gdk_pixbuf_animation_new_from_stream_finish$MH,"gdk_pixbuf_animation_new_from_stream_finish");
    }
    public static MemoryAddress gdk_pixbuf_animation_new_from_stream_finish ( Addressable async_result,  Addressable error) {
        var mh$ = gdk_pixbuf_animation_new_from_stream_finish$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(async_result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_new_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.gdk_pixbuf_animation_new_from_resource$MH,"gdk_pixbuf_animation_new_from_resource");
    }
    public static MemoryAddress gdk_pixbuf_animation_new_from_resource ( Addressable resource_path,  Addressable error) {
        var mh$ = gdk_pixbuf_animation_new_from_resource$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(resource_path, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.gdk_pixbuf_animation_ref$MH,"gdk_pixbuf_animation_ref");
    }
    public static MemoryAddress gdk_pixbuf_animation_ref ( Addressable animation) {
        var mh$ = gdk_pixbuf_animation_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(animation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.gdk_pixbuf_animation_unref$MH,"gdk_pixbuf_animation_unref");
    }
    public static void gdk_pixbuf_animation_unref ( Addressable animation) {
        var mh$ = gdk_pixbuf_animation_unref$MH();
        try {
            mh$.invokeExact(animation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.gdk_pixbuf_animation_get_width$MH,"gdk_pixbuf_animation_get_width");
    }
    public static int gdk_pixbuf_animation_get_width ( Addressable animation) {
        var mh$ = gdk_pixbuf_animation_get_width$MH();
        try {
            return (int)mh$.invokeExact(animation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.gdk_pixbuf_animation_get_height$MH,"gdk_pixbuf_animation_get_height");
    }
    public static int gdk_pixbuf_animation_get_height ( Addressable animation) {
        var mh$ = gdk_pixbuf_animation_get_height$MH();
        try {
            return (int)mh$.invokeExact(animation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_is_static_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.gdk_pixbuf_animation_is_static_image$MH,"gdk_pixbuf_animation_is_static_image");
    }
    public static int gdk_pixbuf_animation_is_static_image ( Addressable animation) {
        var mh$ = gdk_pixbuf_animation_is_static_image$MH();
        try {
            return (int)mh$.invokeExact(animation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_get_static_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.gdk_pixbuf_animation_get_static_image$MH,"gdk_pixbuf_animation_get_static_image");
    }
    public static MemoryAddress gdk_pixbuf_animation_get_static_image ( Addressable animation) {
        var mh$ = gdk_pixbuf_animation_get_static_image$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(animation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_get_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.gdk_pixbuf_animation_get_iter$MH,"gdk_pixbuf_animation_get_iter");
    }
    public static MemoryAddress gdk_pixbuf_animation_get_iter ( Addressable animation,  Addressable start_time) {
        var mh$ = gdk_pixbuf_animation_get_iter$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(animation, start_time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_iter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.gdk_pixbuf_animation_iter_get_type$MH,"gdk_pixbuf_animation_iter_get_type");
    }
    public static long gdk_pixbuf_animation_iter_get_type () {
        var mh$ = gdk_pixbuf_animation_iter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_iter_get_delay_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.gdk_pixbuf_animation_iter_get_delay_time$MH,"gdk_pixbuf_animation_iter_get_delay_time");
    }
    public static int gdk_pixbuf_animation_iter_get_delay_time ( Addressable iter) {
        var mh$ = gdk_pixbuf_animation_iter_get_delay_time$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_iter_get_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.gdk_pixbuf_animation_iter_get_pixbuf$MH,"gdk_pixbuf_animation_iter_get_pixbuf");
    }
    public static MemoryAddress gdk_pixbuf_animation_iter_get_pixbuf ( Addressable iter) {
        var mh$ = gdk_pixbuf_animation_iter_get_pixbuf$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_iter_on_currently_loading_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.gdk_pixbuf_animation_iter_on_currently_loading_frame$MH,"gdk_pixbuf_animation_iter_on_currently_loading_frame");
    }
    public static int gdk_pixbuf_animation_iter_on_currently_loading_frame ( Addressable iter) {
        var mh$ = gdk_pixbuf_animation_iter_on_currently_loading_frame$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_iter_advance$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.gdk_pixbuf_animation_iter_advance$MH,"gdk_pixbuf_animation_iter_advance");
    }
    public static int gdk_pixbuf_animation_iter_advance ( Addressable iter,  Addressable current_time) {
        var mh$ = gdk_pixbuf_animation_iter_advance$MH();
        try {
            return (int)mh$.invokeExact(iter, current_time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_simple_anim_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.gdk_pixbuf_simple_anim_get_type$MH,"gdk_pixbuf_simple_anim_get_type");
    }
    public static long gdk_pixbuf_simple_anim_get_type () {
        var mh$ = gdk_pixbuf_simple_anim_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_simple_anim_iter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.gdk_pixbuf_simple_anim_iter_get_type$MH,"gdk_pixbuf_simple_anim_iter_get_type");
    }
    public static long gdk_pixbuf_simple_anim_iter_get_type () {
        var mh$ = gdk_pixbuf_simple_anim_iter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_simple_anim_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.gdk_pixbuf_simple_anim_new$MH,"gdk_pixbuf_simple_anim_new");
    }
    public static MemoryAddress gdk_pixbuf_simple_anim_new ( int width,  int height,  float rate) {
        var mh$ = gdk_pixbuf_simple_anim_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(width, height, rate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_simple_anim_add_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.gdk_pixbuf_simple_anim_add_frame$MH,"gdk_pixbuf_simple_anim_add_frame");
    }
    public static void gdk_pixbuf_simple_anim_add_frame ( Addressable animation,  Addressable pixbuf) {
        var mh$ = gdk_pixbuf_simple_anim_add_frame$MH();
        try {
            mh$.invokeExact(animation, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_simple_anim_set_loop$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.gdk_pixbuf_simple_anim_set_loop$MH,"gdk_pixbuf_simple_anim_set_loop");
    }
    public static void gdk_pixbuf_simple_anim_set_loop ( Addressable animation,  int loop) {
        var mh$ = gdk_pixbuf_simple_anim_set_loop$MH();
        try {
            mh$.invokeExact(animation, loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_simple_anim_get_loop$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.gdk_pixbuf_simple_anim_get_loop$MH,"gdk_pixbuf_simple_anim_get_loop");
    }
    public static int gdk_pixbuf_simple_anim_get_loop ( Addressable animation) {
        var mh$ = gdk_pixbuf_simple_anim_get_loop$MH();
        try {
            return (int)mh$.invokeExact(animation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_init_modules$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.gdk_pixbuf_init_modules$MH,"gdk_pixbuf_init_modules");
    }
    public static int gdk_pixbuf_init_modules ( Addressable path,  Addressable error) {
        var mh$ = gdk_pixbuf_init_modules$MH();
        try {
            return (int)mh$.invokeExact(path, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.gdk_pixbuf_format_get_type$MH,"gdk_pixbuf_format_get_type");
    }
    public static long gdk_pixbuf_format_get_type () {
        var mh$ = gdk_pixbuf_format_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_formats$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.gdk_pixbuf_get_formats$MH,"gdk_pixbuf_get_formats");
    }
    public static MemoryAddress gdk_pixbuf_get_formats () {
        var mh$ = gdk_pixbuf_get_formats$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.gdk_pixbuf_format_get_name$MH,"gdk_pixbuf_format_get_name");
    }
    public static MemoryAddress gdk_pixbuf_format_get_name ( Addressable format) {
        var mh$ = gdk_pixbuf_format_get_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.gdk_pixbuf_format_get_description$MH,"gdk_pixbuf_format_get_description");
    }
    public static MemoryAddress gdk_pixbuf_format_get_description ( Addressable format) {
        var mh$ = gdk_pixbuf_format_get_description$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_get_mime_types$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.gdk_pixbuf_format_get_mime_types$MH,"gdk_pixbuf_format_get_mime_types");
    }
    public static MemoryAddress gdk_pixbuf_format_get_mime_types ( Addressable format) {
        var mh$ = gdk_pixbuf_format_get_mime_types$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_get_extensions$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.gdk_pixbuf_format_get_extensions$MH,"gdk_pixbuf_format_get_extensions");
    }
    public static MemoryAddress gdk_pixbuf_format_get_extensions ( Addressable format) {
        var mh$ = gdk_pixbuf_format_get_extensions$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_is_save_option_supported$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.gdk_pixbuf_format_is_save_option_supported$MH,"gdk_pixbuf_format_is_save_option_supported");
    }
    public static int gdk_pixbuf_format_is_save_option_supported ( Addressable format,  Addressable option_key) {
        var mh$ = gdk_pixbuf_format_is_save_option_supported$MH();
        try {
            return (int)mh$.invokeExact(format, option_key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_is_writable$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.gdk_pixbuf_format_is_writable$MH,"gdk_pixbuf_format_is_writable");
    }
    public static int gdk_pixbuf_format_is_writable ( Addressable format) {
        var mh$ = gdk_pixbuf_format_is_writable$MH();
        try {
            return (int)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_is_scalable$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.gdk_pixbuf_format_is_scalable$MH,"gdk_pixbuf_format_is_scalable");
    }
    public static int gdk_pixbuf_format_is_scalable ( Addressable format) {
        var mh$ = gdk_pixbuf_format_is_scalable$MH();
        try {
            return (int)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_is_disabled$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.gdk_pixbuf_format_is_disabled$MH,"gdk_pixbuf_format_is_disabled");
    }
    public static int gdk_pixbuf_format_is_disabled ( Addressable format) {
        var mh$ = gdk_pixbuf_format_is_disabled$MH();
        try {
            return (int)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_set_disabled$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.gdk_pixbuf_format_set_disabled$MH,"gdk_pixbuf_format_set_disabled");
    }
    public static void gdk_pixbuf_format_set_disabled ( Addressable format,  int disabled) {
        var mh$ = gdk_pixbuf_format_set_disabled$MH();
        try {
            mh$.invokeExact(format, disabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_get_license$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.gdk_pixbuf_format_get_license$MH,"gdk_pixbuf_format_get_license");
    }
    public static MemoryAddress gdk_pixbuf_format_get_license ( Addressable format) {
        var mh$ = gdk_pixbuf_format_get_license$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_file_info$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.gdk_pixbuf_get_file_info$MH,"gdk_pixbuf_get_file_info");
    }
    public static MemoryAddress gdk_pixbuf_get_file_info ( Addressable filename,  Addressable width,  Addressable height) {
        var mh$ = gdk_pixbuf_get_file_info$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_file_info_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.gdk_pixbuf_get_file_info_async$MH,"gdk_pixbuf_get_file_info_async");
    }
    public static void gdk_pixbuf_get_file_info_async ( Addressable filename,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = gdk_pixbuf_get_file_info_async$MH();
        try {
            mh$.invokeExact(filename, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_file_info_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.gdk_pixbuf_get_file_info_finish$MH,"gdk_pixbuf_get_file_info_finish");
    }
    public static MemoryAddress gdk_pixbuf_get_file_info_finish ( Addressable async_result,  Addressable width,  Addressable height,  Addressable error) {
        var mh$ = gdk_pixbuf_get_file_info_finish$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(async_result, width, height, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.gdk_pixbuf_format_copy$MH,"gdk_pixbuf_format_copy");
    }
    public static MemoryAddress gdk_pixbuf_format_copy ( Addressable format) {
        var mh$ = gdk_pixbuf_format_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.gdk_pixbuf_format_free$MH,"gdk_pixbuf_format_free");
    }
    public static void gdk_pixbuf_format_free ( Addressable format) {
        var mh$ = gdk_pixbuf_format_free$MH();
        try {
            mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.gdk_pixbuf_loader_get_type$MH,"gdk_pixbuf_loader_get_type");
    }
    public static long gdk_pixbuf_loader_get_type () {
        var mh$ = gdk_pixbuf_loader_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.gdk_pixbuf_loader_new$MH,"gdk_pixbuf_loader_new");
    }
    public static MemoryAddress gdk_pixbuf_loader_new () {
        var mh$ = gdk_pixbuf_loader_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_new_with_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.gdk_pixbuf_loader_new_with_type$MH,"gdk_pixbuf_loader_new_with_type");
    }
    public static MemoryAddress gdk_pixbuf_loader_new_with_type ( Addressable image_type,  Addressable error) {
        var mh$ = gdk_pixbuf_loader_new_with_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(image_type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_new_with_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.gdk_pixbuf_loader_new_with_mime_type$MH,"gdk_pixbuf_loader_new_with_mime_type");
    }
    public static MemoryAddress gdk_pixbuf_loader_new_with_mime_type ( Addressable mime_type,  Addressable error) {
        var mh$ = gdk_pixbuf_loader_new_with_mime_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mime_type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_set_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.gdk_pixbuf_loader_set_size$MH,"gdk_pixbuf_loader_set_size");
    }
    public static void gdk_pixbuf_loader_set_size ( Addressable loader,  int width,  int height) {
        var mh$ = gdk_pixbuf_loader_set_size$MH();
        try {
            mh$.invokeExact(loader, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_write$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.gdk_pixbuf_loader_write$MH,"gdk_pixbuf_loader_write");
    }
    public static int gdk_pixbuf_loader_write ( Addressable loader,  Addressable buf,  long count,  Addressable error) {
        var mh$ = gdk_pixbuf_loader_write$MH();
        try {
            return (int)mh$.invokeExact(loader, buf, count, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_write_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.gdk_pixbuf_loader_write_bytes$MH,"gdk_pixbuf_loader_write_bytes");
    }
    public static int gdk_pixbuf_loader_write_bytes ( Addressable loader,  Addressable buffer,  Addressable error) {
        var mh$ = gdk_pixbuf_loader_write_bytes$MH();
        try {
            return (int)mh$.invokeExact(loader, buffer, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_get_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.gdk_pixbuf_loader_get_pixbuf$MH,"gdk_pixbuf_loader_get_pixbuf");
    }
    public static MemoryAddress gdk_pixbuf_loader_get_pixbuf ( Addressable loader) {
        var mh$ = gdk_pixbuf_loader_get_pixbuf$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(loader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_get_animation$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.gdk_pixbuf_loader_get_animation$MH,"gdk_pixbuf_loader_get_animation");
    }
    public static MemoryAddress gdk_pixbuf_loader_get_animation ( Addressable loader) {
        var mh$ = gdk_pixbuf_loader_get_animation$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(loader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_close$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.gdk_pixbuf_loader_close$MH,"gdk_pixbuf_loader_close");
    }
    public static int gdk_pixbuf_loader_close ( Addressable loader,  Addressable error) {
        var mh$ = gdk_pixbuf_loader_close$MH();
        try {
            return (int)mh$.invokeExact(loader, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_get_format$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.gdk_pixbuf_loader_get_format$MH,"gdk_pixbuf_loader_get_format");
    }
    public static MemoryAddress gdk_pixbuf_loader_get_format ( Addressable loader) {
        var mh$ = gdk_pixbuf_loader_get_format$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(loader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_alpha_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.gdk_pixbuf_alpha_mode_get_type$MH,"gdk_pixbuf_alpha_mode_get_type");
    }
    public static long gdk_pixbuf_alpha_mode_get_type () {
        var mh$ = gdk_pixbuf_alpha_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_colorspace_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.gdk_colorspace_get_type$MH,"gdk_colorspace_get_type");
    }
    public static long gdk_colorspace_get_type () {
        var mh$ = gdk_colorspace_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.gdk_pixbuf_error_get_type$MH,"gdk_pixbuf_error_get_type");
    }
    public static long gdk_pixbuf_error_get_type () {
        var mh$ = gdk_pixbuf_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_interp_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.gdk_interp_type_get_type$MH,"gdk_interp_type_get_type");
    }
    public static long gdk_interp_type_get_type () {
        var mh$ = gdk_interp_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_rotation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.gdk_pixbuf_rotation_get_type$MH,"gdk_pixbuf_rotation_get_type");
    }
    public static long gdk_pixbuf_rotation_get_type () {
        var mh$ = gdk_pixbuf_rotation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GdkPixbuf_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkPixbuf_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkPixbuf_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GdkPixbuf_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GdkPixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.glib_autoptr_clear_GdkPixbuf$MH,"glib_autoptr_clear_GdkPixbuf");
    }
    public static void glib_autoptr_clear_GdkPixbuf ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GdkPixbuf$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


