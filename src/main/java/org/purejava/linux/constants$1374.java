// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1374 {

    static final FunctionDescriptor atk_get_major_version$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle atk_get_major_version$MH = RuntimeHelper.downcallHandle(
        "atk_get_major_version",
        constants$1374.atk_get_major_version$FUNC
    );
    static final FunctionDescriptor atk_get_minor_version$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle atk_get_minor_version$MH = RuntimeHelper.downcallHandle(
        "atk_get_minor_version",
        constants$1374.atk_get_minor_version$FUNC
    );
    static final FunctionDescriptor atk_get_micro_version$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle atk_get_micro_version$MH = RuntimeHelper.downcallHandle(
        "atk_get_micro_version",
        constants$1374.atk_get_micro_version$FUNC
    );
    static final FunctionDescriptor atk_get_binary_age$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle atk_get_binary_age$MH = RuntimeHelper.downcallHandle(
        "atk_get_binary_age",
        constants$1374.atk_get_binary_age$FUNC
    );
    static final FunctionDescriptor atk_get_interface_age$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle atk_get_interface_age$MH = RuntimeHelper.downcallHandle(
        "atk_get_interface_age",
        constants$1374.atk_get_interface_age$FUNC
    );
    static final FunctionDescriptor atk_state_type_register$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle atk_state_type_register$MH = RuntimeHelper.downcallHandle(
        "atk_state_type_register",
        constants$1374.atk_state_type_register$FUNC
    );
}


