// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _GdkEventSelection {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_INT$LAYOUT.withName("type"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("window"),
        Constants$root.C_CHAR$LAYOUT.withName("send_event"),
        MemoryLayout.paddingLayout(56),
        Constants$root.C_POINTER$LAYOUT.withName("selection"),
        Constants$root.C_POINTER$LAYOUT.withName("target"),
        Constants$root.C_POINTER$LAYOUT.withName("property"),
        Constants$root.C_INT$LAYOUT.withName("time"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("requestor")
    ).withName("_GdkEventSelection");
    public static MemoryLayout $LAYOUT() {
        return _GdkEventSelection.$struct$LAYOUT;
    }
    static final VarHandle type$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("type"));
    public static VarHandle type$VH() {
        return _GdkEventSelection.type$VH;
    }
    public static int type$get(MemorySegment seg) {
        return (int)_GdkEventSelection.type$VH.get(seg);
    }
    public static void type$set( MemorySegment seg, int x) {
        _GdkEventSelection.type$VH.set(seg, x);
    }
    public static int type$get(MemorySegment seg, long index) {
        return (int)_GdkEventSelection.type$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void type$set(MemorySegment seg, long index, int x) {
        _GdkEventSelection.type$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle window$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("window"));
    public static VarHandle window$VH() {
        return _GdkEventSelection.window$VH;
    }
    public static MemoryAddress window$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_GdkEventSelection.window$VH.get(seg);
    }
    public static void window$set( MemorySegment seg, MemoryAddress x) {
        _GdkEventSelection.window$VH.set(seg, x);
    }
    public static MemoryAddress window$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_GdkEventSelection.window$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void window$set(MemorySegment seg, long index, MemoryAddress x) {
        _GdkEventSelection.window$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle send_event$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("send_event"));
    public static VarHandle send_event$VH() {
        return _GdkEventSelection.send_event$VH;
    }
    public static byte send_event$get(MemorySegment seg) {
        return (byte)_GdkEventSelection.send_event$VH.get(seg);
    }
    public static void send_event$set( MemorySegment seg, byte x) {
        _GdkEventSelection.send_event$VH.set(seg, x);
    }
    public static byte send_event$get(MemorySegment seg, long index) {
        return (byte)_GdkEventSelection.send_event$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void send_event$set(MemorySegment seg, long index, byte x) {
        _GdkEventSelection.send_event$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle selection$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("selection"));
    public static VarHandle selection$VH() {
        return _GdkEventSelection.selection$VH;
    }
    public static MemoryAddress selection$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_GdkEventSelection.selection$VH.get(seg);
    }
    public static void selection$set( MemorySegment seg, MemoryAddress x) {
        _GdkEventSelection.selection$VH.set(seg, x);
    }
    public static MemoryAddress selection$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_GdkEventSelection.selection$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void selection$set(MemorySegment seg, long index, MemoryAddress x) {
        _GdkEventSelection.selection$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle target$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("target"));
    public static VarHandle target$VH() {
        return _GdkEventSelection.target$VH;
    }
    public static MemoryAddress target$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_GdkEventSelection.target$VH.get(seg);
    }
    public static void target$set( MemorySegment seg, MemoryAddress x) {
        _GdkEventSelection.target$VH.set(seg, x);
    }
    public static MemoryAddress target$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_GdkEventSelection.target$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void target$set(MemorySegment seg, long index, MemoryAddress x) {
        _GdkEventSelection.target$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle property$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("property"));
    public static VarHandle property$VH() {
        return _GdkEventSelection.property$VH;
    }
    public static MemoryAddress property$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_GdkEventSelection.property$VH.get(seg);
    }
    public static void property$set( MemorySegment seg, MemoryAddress x) {
        _GdkEventSelection.property$VH.set(seg, x);
    }
    public static MemoryAddress property$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_GdkEventSelection.property$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void property$set(MemorySegment seg, long index, MemoryAddress x) {
        _GdkEventSelection.property$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle time$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("time"));
    public static VarHandle time$VH() {
        return _GdkEventSelection.time$VH;
    }
    public static int time$get(MemorySegment seg) {
        return (int)_GdkEventSelection.time$VH.get(seg);
    }
    public static void time$set( MemorySegment seg, int x) {
        _GdkEventSelection.time$VH.set(seg, x);
    }
    public static int time$get(MemorySegment seg, long index) {
        return (int)_GdkEventSelection.time$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void time$set(MemorySegment seg, long index, int x) {
        _GdkEventSelection.time$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle requestor$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("requestor"));
    public static VarHandle requestor$VH() {
        return _GdkEventSelection.requestor$VH;
    }
    public static MemoryAddress requestor$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_GdkEventSelection.requestor$VH.get(seg);
    }
    public static void requestor$set( MemorySegment seg, MemoryAddress x) {
        _GdkEventSelection.requestor$VH.set(seg, x);
    }
    public static MemoryAddress requestor$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_GdkEventSelection.requestor$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void requestor$set(MemorySegment seg, long index, MemoryAddress x) {
        _GdkEventSelection.requestor$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


