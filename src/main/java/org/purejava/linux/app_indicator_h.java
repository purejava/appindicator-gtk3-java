// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class app_indicator_h  {

    /* package-private */ app_indicator_h() {}
    public static OfByte C_CHAR = Constants$root.C_CHAR$LAYOUT;
    public static OfShort C_SHORT = Constants$root.C_SHORT$LAYOUT;
    public static OfInt C_INT = Constants$root.C_INT$LAYOUT;
    public static OfLong C_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong C_LONG_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfFloat C_FLOAT = Constants$root.C_FLOAT$LAYOUT;
    public static OfDouble C_DOUBLE = Constants$root.C_DOUBLE$LAYOUT;
    public static OfAddress C_POINTER = Constants$root.C_POINTER$LAYOUT;
    public static int APP_INDICATOR_CATEGORY_APPLICATION_STATUS() {
        return (int)0L;
    }
    public static int APP_INDICATOR_CATEGORY_COMMUNICATIONS() {
        return (int)1L;
    }
    public static int APP_INDICATOR_CATEGORY_SYSTEM_SERVICES() {
        return (int)2L;
    }
    public static int APP_INDICATOR_CATEGORY_HARDWARE() {
        return (int)3L;
    }
    public static int APP_INDICATOR_CATEGORY_OTHER() {
        return (int)4L;
    }
    public static int APP_INDICATOR_STATUS_PASSIVE() {
        return (int)0L;
    }
    public static int APP_INDICATOR_STATUS_ACTIVE() {
        return (int)1L;
    }
    public static int APP_INDICATOR_STATUS_ATTENTION() {
        return (int)2L;
    }
    public static MethodHandle g_error_free$MH() {
        return RuntimeHelper.requireNonNull(constants$0.g_error_free$MH,"g_error_free");
    }
    public static void g_error_free ( Addressable error) {
        var mh$ = g_error_free$MH();
        try {
            mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_data_full$MH() {
        return RuntimeHelper.requireNonNull(constants$0.g_object_set_data_full$MH,"g_object_set_data_full");
    }
    public static void g_object_set_data_full ( Addressable object,  Addressable key,  Addressable data,  Addressable destroy) {
        var mh$ = g_object_set_data_full$MH();
        try {
            mh$.invokeExact(object, key, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_object$MH() {
        return RuntimeHelper.requireNonNull(constants$0.g_signal_connect_object$MH,"g_signal_connect_object");
    }
    public static long g_signal_connect_object ( Addressable instance,  Addressable detailed_signal,  Addressable c_handler,  Addressable gobject,  int connect_flags) {
        var mh$ = g_signal_connect_object$MH();
        try {
            return (long)mh$.invokeExact(instance, detailed_signal, c_handler, gobject, connect_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$0.gtk_widget_destroy$MH,"gtk_widget_destroy");
    }
    public static void gtk_widget_destroy ( Addressable widget) {
        var mh$ = gtk_widget_destroy$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_destroyed$MH() {
        return RuntimeHelper.requireNonNull(constants$1.gtk_widget_destroyed$MH,"gtk_widget_destroyed");
    }
    public static void gtk_widget_destroyed ( Addressable widget,  Addressable widget_pointer) {
        var mh$ = gtk_widget_destroyed$MH();
        try {
            mh$.invokeExact(widget, widget_pointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_show$MH() {
        return RuntimeHelper.requireNonNull(constants$1.gtk_widget_show$MH,"gtk_widget_show");
    }
    public static void gtk_widget_show ( Addressable widget) {
        var mh$ = gtk_widget_show$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_show_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1.gtk_widget_show_all$MH,"gtk_widget_show_all");
    }
    public static void gtk_widget_show_all ( Addressable widget) {
        var mh$ = gtk_widget_show_all$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_grab_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1.gtk_widget_grab_focus$MH,"gtk_widget_grab_focus");
    }
    public static void gtk_widget_grab_focus ( Addressable widget) {
        var mh$ = gtk_widget_grab_focus$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_add$MH() {
        return RuntimeHelper.requireNonNull(constants$1.gtk_container_add$MH,"gtk_container_add");
    }
    public static void gtk_container_add ( Addressable container,  Addressable widget) {
        var mh$ = gtk_container_add$MH();
        try {
            mh$.invokeExact(container, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1.gtk_window_new$MH,"gtk_window_new");
    }
    public static MemoryAddress gtk_window_new ( int type) {
        var mh$ = gtk_window_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2.gtk_window_set_title$MH,"gtk_window_set_title");
    }
    public static void gtk_window_set_title ( Addressable window,  Addressable title) {
        var mh$ = gtk_window_set_title$MH();
        try {
            mh$.invokeExact(window, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_add_accel_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2.gtk_window_add_accel_group$MH,"gtk_window_add_accel_group");
    }
    public static void gtk_window_add_accel_group ( Addressable window,  Addressable accel_group) {
        var mh$ = gtk_window_add_accel_group$MH();
        try {
            mh$.invokeExact(window, accel_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2.gtk_window_set_icon$MH,"gtk_window_set_icon");
    }
    public static void gtk_window_set_icon ( Addressable window,  Addressable icon) {
        var mh$ = gtk_window_set_icon$MH();
        try {
            mh$.invokeExact(window, icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2.gtk_window_set_icon_name$MH,"gtk_window_set_icon_name");
    }
    public static void gtk_window_set_icon_name ( Addressable window,  Addressable name) {
        var mh$ = gtk_window_set_icon_name$MH();
        try {
            mh$.invokeExact(window, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_default_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2.gtk_window_set_default_size$MH,"gtk_window_set_default_size");
    }
    public static void gtk_window_set_default_size ( Addressable window,  int width,  int height) {
        var mh$ = gtk_window_set_default_size$MH();
        try {
            mh$.invokeExact(window, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_shell_append$MH() {
        return RuntimeHelper.requireNonNull(constants$2.gtk_menu_shell_append$MH,"gtk_menu_shell_append");
    }
    public static void gtk_menu_shell_append ( Addressable menu_shell,  Addressable child) {
        var mh$ = gtk_menu_shell_append$MH();
        try {
            mh$.invokeExact(menu_shell, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3.gtk_menu_new$MH,"gtk_menu_new");
    }
    public static MemoryAddress gtk_menu_new () {
        var mh$ = gtk_menu_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_new$MH() {
        return RuntimeHelper.requireNonNull(constants$3.gtk_menu_item_new$MH,"gtk_menu_item_new");
    }
    public static MemoryAddress gtk_menu_item_new () {
        var mh$ = gtk_menu_item_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_submenu$MH() {
        return RuntimeHelper.requireNonNull(constants$3.gtk_menu_item_set_submenu$MH,"gtk_menu_item_set_submenu");
    }
    public static void gtk_menu_item_set_submenu ( Addressable menu_item,  Addressable submenu) {
        var mh$ = gtk_menu_item_set_submenu$MH();
        try {
            mh$.invokeExact(menu_item, submenu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$3.gtk_menu_item_set_label$MH,"gtk_menu_item_set_label");
    }
    public static void gtk_menu_item_set_label ( Addressable menu_item,  Addressable label) {
        var mh$ = gtk_menu_item_set_label$MH();
        try {
            mh$.invokeExact(menu_item, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_init$MH() {
        return RuntimeHelper.requireNonNull(constants$3.gtk_init$MH,"gtk_init");
    }
    public static void gtk_init ( Addressable argc,  Addressable argv) {
        var mh$ = gtk_init$MH();
        try {
            mh$.invokeExact(argc, argv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_main$MH() {
        return RuntimeHelper.requireNonNull(constants$3.gtk_main$MH,"gtk_main");
    }
    public static void gtk_main () {
        var mh$ = gtk_main$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_message_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$4.gtk_message_dialog_new$MH,"gtk_message_dialog_new");
    }
    public static MemoryAddress gtk_message_dialog_new ( Addressable parent,  int flags,  int type,  int buttons,  Addressable message_format, Object... x5) {
        var mh$ = gtk_message_dialog_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(parent, flags, type, buttons, message_format, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_new$MH() {
        return RuntimeHelper.requireNonNull(constants$4.gtk_scrolled_window_new$MH,"gtk_scrolled_window_new");
    }
    public static MemoryAddress gtk_scrolled_window_new ( Addressable hadjustment,  Addressable vadjustment) {
        var mh$ = gtk_scrolled_window_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hadjustment, vadjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$4.gtk_scrolled_window_set_policy$MH,"gtk_scrolled_window_set_policy");
    }
    public static void gtk_scrolled_window_set_policy ( Addressable scrolled_window,  int hscrollbar_policy,  int vscrollbar_policy) {
        var mh$ = gtk_scrolled_window_set_policy$MH();
        try {
            mh$.invokeExact(scrolled_window, hscrollbar_policy, vscrollbar_policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_shadow_type$MH() {
        return RuntimeHelper.requireNonNull(constants$4.gtk_scrolled_window_set_shadow_type$MH,"gtk_scrolled_window_set_shadow_type");
    }
    public static void gtk_scrolled_window_set_shadow_type ( Addressable scrolled_window,  int type) {
        var mh$ = gtk_scrolled_window_set_shadow_type$MH();
        try {
            mh$.invokeExact(scrolled_window, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$4.gtk_statusbar_new$MH,"gtk_statusbar_new");
    }
    public static MemoryAddress gtk_statusbar_new () {
        var mh$ = gtk_statusbar_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_new$MH() {
        return RuntimeHelper.requireNonNull(constants$4.gtk_text_view_new$MH,"gtk_text_view_new");
    }
    public static MemoryAddress gtk_text_view_new () {
        var mh$ = gtk_text_view_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_action_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$5.gtk_action_get_name$MH,"gtk_action_get_name");
    }
    public static MemoryAddress gtk_action_get_name ( Addressable action) {
        var mh$ = gtk_action_get_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_action_group_new$MH() {
        return RuntimeHelper.requireNonNull(constants$5.gtk_action_group_new$MH,"gtk_action_group_new");
    }
    public static MemoryAddress gtk_action_group_new ( Addressable name) {
        var mh$ = gtk_action_group_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_action_group_add_action$MH() {
        return RuntimeHelper.requireNonNull(constants$5.gtk_action_group_add_action$MH,"gtk_action_group_add_action");
    }
    public static void gtk_action_group_add_action ( Addressable action_group,  Addressable action) {
        var mh$ = gtk_action_group_add_action$MH();
        try {
            mh$.invokeExact(action_group, action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_action_group_add_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$5.gtk_action_group_add_actions$MH,"gtk_action_group_add_actions");
    }
    public static void gtk_action_group_add_actions ( Addressable action_group,  Addressable entries,  int n_entries,  Addressable user_data) {
        var mh$ = gtk_action_group_add_actions$MH();
        try {
            mh$.invokeExact(action_group, entries, n_entries, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_table_new$MH() {
        return RuntimeHelper.requireNonNull(constants$5.gtk_table_new$MH,"gtk_table_new");
    }
    public static MemoryAddress gtk_table_new ( int rows,  int columns,  int homogeneous) {
        var mh$ = gtk_table_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(rows, columns, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_table_attach$MH() {
        return RuntimeHelper.requireNonNull(constants$5.gtk_table_attach$MH,"gtk_table_attach");
    }
    public static void gtk_table_attach ( Addressable table,  Addressable child,  int left_attach,  int right_attach,  int top_attach,  int bottom_attach,  int xoptions,  int yoptions,  int xpadding,  int ypadding) {
        var mh$ = gtk_table_attach$MH();
        try {
            mh$.invokeExact(table, child, left_attach, right_attach, top_attach, bottom_attach, xoptions, yoptions, xpadding, ypadding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_ui_manager_new$MH() {
        return RuntimeHelper.requireNonNull(constants$6.gtk_ui_manager_new$MH,"gtk_ui_manager_new");
    }
    public static MemoryAddress gtk_ui_manager_new () {
        var mh$ = gtk_ui_manager_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_ui_manager_insert_action_group$MH() {
        return RuntimeHelper.requireNonNull(constants$6.gtk_ui_manager_insert_action_group$MH,"gtk_ui_manager_insert_action_group");
    }
    public static void gtk_ui_manager_insert_action_group ( Addressable manager,  Addressable action_group,  int pos) {
        var mh$ = gtk_ui_manager_insert_action_group$MH();
        try {
            mh$.invokeExact(manager, action_group, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_ui_manager_get_accel_group$MH() {
        return RuntimeHelper.requireNonNull(constants$6.gtk_ui_manager_get_accel_group$MH,"gtk_ui_manager_get_accel_group");
    }
    public static MemoryAddress gtk_ui_manager_get_accel_group ( Addressable manager) {
        var mh$ = gtk_ui_manager_get_accel_group$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_ui_manager_get_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$6.gtk_ui_manager_get_widget$MH,"gtk_ui_manager_get_widget");
    }
    public static MemoryAddress gtk_ui_manager_get_widget ( Addressable manager,  Addressable path) {
        var mh$ = gtk_ui_manager_get_widget$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(manager, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_ui_manager_add_ui_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$6.gtk_ui_manager_add_ui_from_string$MH,"gtk_ui_manager_add_ui_from_string");
    }
    public static int gtk_ui_manager_add_ui_from_string ( Addressable manager,  Addressable buffer,  long length,  Addressable error) {
        var mh$ = gtk_ui_manager_add_ui_from_string$MH();
        try {
            return (int)mh$.invokeExact(manager, buffer, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_ui_manager_add_ui$MH() {
        return RuntimeHelper.requireNonNull(constants$6.gtk_ui_manager_add_ui$MH,"gtk_ui_manager_add_ui");
    }
    public static void gtk_ui_manager_add_ui ( Addressable manager,  int merge_id,  Addressable path,  Addressable name,  Addressable action,  int type,  int top) {
        var mh$ = gtk_ui_manager_add_ui$MH();
        try {
            mh$.invokeExact(manager, merge_id, path, name, action, type, top);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_new$MH() {
        return RuntimeHelper.requireNonNull(constants$7.app_indicator_new$MH,"app_indicator_new");
    }
    public static MemoryAddress app_indicator_new ( Addressable id,  Addressable icon_name,  int category) {
        var mh$ = app_indicator_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(id, icon_name, category);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_set_status$MH() {
        return RuntimeHelper.requireNonNull(constants$7.app_indicator_set_status$MH,"app_indicator_set_status");
    }
    public static void app_indicator_set_status ( Addressable self,  int status) {
        var mh$ = app_indicator_set_status$MH();
        try {
            mh$.invokeExact(self, status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_set_attention_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$7.app_indicator_set_attention_icon$MH,"app_indicator_set_attention_icon");
    }
    public static void app_indicator_set_attention_icon ( Addressable self,  Addressable icon_name) {
        var mh$ = app_indicator_set_attention_icon$MH();
        try {
            mh$.invokeExact(self, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_set_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$7.app_indicator_set_menu$MH,"app_indicator_set_menu");
    }
    public static void app_indicator_set_menu ( Addressable self,  Addressable menu) {
        var mh$ = app_indicator_set_menu$MH();
        try {
            mh$.invokeExact(self, menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_set_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$7.app_indicator_set_icon$MH,"app_indicator_set_icon");
    }
    public static void app_indicator_set_icon ( Addressable self,  Addressable icon_name) {
        var mh$ = app_indicator_set_icon$MH();
        try {
            mh$.invokeExact(self, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$7.app_indicator_set_label$MH,"app_indicator_set_label");
    }
    public static void app_indicator_set_label ( Addressable self,  Addressable label,  Addressable guide) {
        var mh$ = app_indicator_set_label$MH();
        try {
            mh$.invokeExact(self, label, guide);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_set_ordering_index$MH() {
        return RuntimeHelper.requireNonNull(constants$8.app_indicator_set_ordering_index$MH,"app_indicator_set_ordering_index");
    }
    public static void app_indicator_set_ordering_index ( Addressable self,  int ordering_index) {
        var mh$ = app_indicator_set_ordering_index$MH();
        try {
            mh$.invokeExact(self, ordering_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$8.app_indicator_set_title$MH,"app_indicator_set_title");
    }
    public static void app_indicator_set_title ( Addressable self,  Addressable title) {
        var mh$ = app_indicator_set_title$MH();
        try {
            mh$.invokeExact(self, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_id$MH() {
        return RuntimeHelper.requireNonNull(constants$8.app_indicator_get_id$MH,"app_indicator_get_id");
    }
    public static MemoryAddress app_indicator_get_id ( Addressable self) {
        var mh$ = app_indicator_get_id$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_category$MH() {
        return RuntimeHelper.requireNonNull(constants$8.app_indicator_get_category$MH,"app_indicator_get_category");
    }
    public static int app_indicator_get_category ( Addressable self) {
        var mh$ = app_indicator_get_category$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_status$MH() {
        return RuntimeHelper.requireNonNull(constants$8.app_indicator_get_status$MH,"app_indicator_get_status");
    }
    public static int app_indicator_get_status ( Addressable self) {
        var mh$ = app_indicator_get_status$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$8.app_indicator_get_icon$MH,"app_indicator_get_icon");
    }
    public static MemoryAddress app_indicator_get_icon ( Addressable self) {
        var mh$ = app_indicator_get_icon$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_attention_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$9.app_indicator_get_attention_icon$MH,"app_indicator_get_attention_icon");
    }
    public static MemoryAddress app_indicator_get_attention_icon ( Addressable self) {
        var mh$ = app_indicator_get_attention_icon$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$9.app_indicator_get_title$MH,"app_indicator_get_title");
    }
    public static MemoryAddress app_indicator_get_title ( Addressable self) {
        var mh$ = app_indicator_get_title$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$9.app_indicator_get_menu$MH,"app_indicator_get_menu");
    }
    public static MemoryAddress app_indicator_get_menu ( Addressable self) {
        var mh$ = app_indicator_get_menu$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$9.app_indicator_get_label$MH,"app_indicator_get_label");
    }
    public static MemoryAddress app_indicator_get_label ( Addressable self) {
        var mh$ = app_indicator_get_label$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_ordering_index$MH() {
        return RuntimeHelper.requireNonNull(constants$9.app_indicator_get_ordering_index$MH,"app_indicator_get_ordering_index");
    }
    public static int app_indicator_get_ordering_index ( Addressable self) {
        var mh$ = app_indicator_get_ordering_index$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_build_menu_from_desktop$MH() {
        return RuntimeHelper.requireNonNull(constants$9.app_indicator_build_menu_from_desktop$MH,"app_indicator_build_menu_from_desktop");
    }
    public static void app_indicator_build_menu_from_desktop ( Addressable self,  Addressable desktop_file,  Addressable desktop_profile) {
        var mh$ = app_indicator_build_menu_from_desktop$MH();
        try {
            mh$.invokeExact(self, desktop_file, desktop_profile);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


