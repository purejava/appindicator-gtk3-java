// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _cairo_matrix {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_DOUBLE$LAYOUT.withName("xx"),
        Constants$root.C_DOUBLE$LAYOUT.withName("yx"),
        Constants$root.C_DOUBLE$LAYOUT.withName("xy"),
        Constants$root.C_DOUBLE$LAYOUT.withName("yy"),
        Constants$root.C_DOUBLE$LAYOUT.withName("x0"),
        Constants$root.C_DOUBLE$LAYOUT.withName("y0")
    ).withName("_cairo_matrix");
    public static MemoryLayout $LAYOUT() {
        return _cairo_matrix.$struct$LAYOUT;
    }
    static final VarHandle xx$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("xx"));
    public static VarHandle xx$VH() {
        return _cairo_matrix.xx$VH;
    }
    public static double xx$get(MemorySegment seg) {
        return (double)_cairo_matrix.xx$VH.get(seg);
    }
    public static void xx$set( MemorySegment seg, double x) {
        _cairo_matrix.xx$VH.set(seg, x);
    }
    public static double xx$get(MemorySegment seg, long index) {
        return (double)_cairo_matrix.xx$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void xx$set(MemorySegment seg, long index, double x) {
        _cairo_matrix.xx$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle yx$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("yx"));
    public static VarHandle yx$VH() {
        return _cairo_matrix.yx$VH;
    }
    public static double yx$get(MemorySegment seg) {
        return (double)_cairo_matrix.yx$VH.get(seg);
    }
    public static void yx$set( MemorySegment seg, double x) {
        _cairo_matrix.yx$VH.set(seg, x);
    }
    public static double yx$get(MemorySegment seg, long index) {
        return (double)_cairo_matrix.yx$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void yx$set(MemorySegment seg, long index, double x) {
        _cairo_matrix.yx$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle xy$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("xy"));
    public static VarHandle xy$VH() {
        return _cairo_matrix.xy$VH;
    }
    public static double xy$get(MemorySegment seg) {
        return (double)_cairo_matrix.xy$VH.get(seg);
    }
    public static void xy$set( MemorySegment seg, double x) {
        _cairo_matrix.xy$VH.set(seg, x);
    }
    public static double xy$get(MemorySegment seg, long index) {
        return (double)_cairo_matrix.xy$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void xy$set(MemorySegment seg, long index, double x) {
        _cairo_matrix.xy$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle yy$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("yy"));
    public static VarHandle yy$VH() {
        return _cairo_matrix.yy$VH;
    }
    public static double yy$get(MemorySegment seg) {
        return (double)_cairo_matrix.yy$VH.get(seg);
    }
    public static void yy$set( MemorySegment seg, double x) {
        _cairo_matrix.yy$VH.set(seg, x);
    }
    public static double yy$get(MemorySegment seg, long index) {
        return (double)_cairo_matrix.yy$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void yy$set(MemorySegment seg, long index, double x) {
        _cairo_matrix.yy$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle x0$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("x0"));
    public static VarHandle x0$VH() {
        return _cairo_matrix.x0$VH;
    }
    public static double x0$get(MemorySegment seg) {
        return (double)_cairo_matrix.x0$VH.get(seg);
    }
    public static void x0$set( MemorySegment seg, double x) {
        _cairo_matrix.x0$VH.set(seg, x);
    }
    public static double x0$get(MemorySegment seg, long index) {
        return (double)_cairo_matrix.x0$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void x0$set(MemorySegment seg, long index, double x) {
        _cairo_matrix.x0$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle y0$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("y0"));
    public static VarHandle y0$VH() {
        return _cairo_matrix.y0$VH;
    }
    public static double y0$get(MemorySegment seg) {
        return (double)_cairo_matrix.y0$VH.get(seg);
    }
    public static void y0$set( MemorySegment seg, double x) {
        _cairo_matrix.y0$VH.set(seg, x);
    }
    public static double y0$get(MemorySegment seg, long index) {
        return (double)_cairo_matrix.y0$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void y0$set(MemorySegment seg, long index, double x) {
        _cairo_matrix.y0$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


