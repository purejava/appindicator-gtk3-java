// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$292 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$292() {}
    static final FunctionDescriptor g_regex_split_full$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_regex_split_full$MH = RuntimeHelper.downcallHandle(
        "g_regex_split_full",
        constants$292.g_regex_split_full$FUNC
    );
    static final FunctionDescriptor g_regex_replace$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_regex_replace$MH = RuntimeHelper.downcallHandle(
        "g_regex_replace",
        constants$292.g_regex_replace$FUNC
    );
    static final FunctionDescriptor g_regex_replace_literal$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_regex_replace_literal$MH = RuntimeHelper.downcallHandle(
        "g_regex_replace_literal",
        constants$292.g_regex_replace_literal$FUNC
    );
    static final FunctionDescriptor g_regex_replace_eval$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_regex_replace_eval$MH = RuntimeHelper.downcallHandle(
        "g_regex_replace_eval",
        constants$292.g_regex_replace_eval$FUNC
    );
    static final FunctionDescriptor g_regex_check_replacement$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_regex_check_replacement$MH = RuntimeHelper.downcallHandle(
        "g_regex_check_replacement",
        constants$292.g_regex_check_replacement$FUNC
    );
    static final FunctionDescriptor g_match_info_get_regex$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_match_info_get_regex$MH = RuntimeHelper.downcallHandle(
        "g_match_info_get_regex",
        constants$292.g_match_info_get_regex$FUNC
    );
}


