// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _PangoGlyphItem {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("item"),
        Constants$root.C_POINTER$LAYOUT.withName("glyphs"),
        Constants$root.C_INT$LAYOUT.withName("y_offset"),
        Constants$root.C_INT$LAYOUT.withName("start_x_offset"),
        Constants$root.C_INT$LAYOUT.withName("end_x_offset"),
        MemoryLayout.paddingLayout(32)
    ).withName("_PangoGlyphItem");
    public static MemoryLayout $LAYOUT() {
        return _PangoGlyphItem.$struct$LAYOUT;
    }
    static final VarHandle item$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("item"));
    public static VarHandle item$VH() {
        return _PangoGlyphItem.item$VH;
    }
    public static MemoryAddress item$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_PangoGlyphItem.item$VH.get(seg);
    }
    public static void item$set( MemorySegment seg, MemoryAddress x) {
        _PangoGlyphItem.item$VH.set(seg, x);
    }
    public static MemoryAddress item$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_PangoGlyphItem.item$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void item$set(MemorySegment seg, long index, MemoryAddress x) {
        _PangoGlyphItem.item$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle glyphs$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("glyphs"));
    public static VarHandle glyphs$VH() {
        return _PangoGlyphItem.glyphs$VH;
    }
    public static MemoryAddress glyphs$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_PangoGlyphItem.glyphs$VH.get(seg);
    }
    public static void glyphs$set( MemorySegment seg, MemoryAddress x) {
        _PangoGlyphItem.glyphs$VH.set(seg, x);
    }
    public static MemoryAddress glyphs$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_PangoGlyphItem.glyphs$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void glyphs$set(MemorySegment seg, long index, MemoryAddress x) {
        _PangoGlyphItem.glyphs$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle y_offset$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("y_offset"));
    public static VarHandle y_offset$VH() {
        return _PangoGlyphItem.y_offset$VH;
    }
    public static int y_offset$get(MemorySegment seg) {
        return (int)_PangoGlyphItem.y_offset$VH.get(seg);
    }
    public static void y_offset$set( MemorySegment seg, int x) {
        _PangoGlyphItem.y_offset$VH.set(seg, x);
    }
    public static int y_offset$get(MemorySegment seg, long index) {
        return (int)_PangoGlyphItem.y_offset$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void y_offset$set(MemorySegment seg, long index, int x) {
        _PangoGlyphItem.y_offset$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle start_x_offset$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("start_x_offset"));
    public static VarHandle start_x_offset$VH() {
        return _PangoGlyphItem.start_x_offset$VH;
    }
    public static int start_x_offset$get(MemorySegment seg) {
        return (int)_PangoGlyphItem.start_x_offset$VH.get(seg);
    }
    public static void start_x_offset$set( MemorySegment seg, int x) {
        _PangoGlyphItem.start_x_offset$VH.set(seg, x);
    }
    public static int start_x_offset$get(MemorySegment seg, long index) {
        return (int)_PangoGlyphItem.start_x_offset$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void start_x_offset$set(MemorySegment seg, long index, int x) {
        _PangoGlyphItem.start_x_offset$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle end_x_offset$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("end_x_offset"));
    public static VarHandle end_x_offset$VH() {
        return _PangoGlyphItem.end_x_offset$VH;
    }
    public static int end_x_offset$get(MemorySegment seg) {
        return (int)_PangoGlyphItem.end_x_offset$VH.get(seg);
    }
    public static void end_x_offset$set( MemorySegment seg, int x) {
        _PangoGlyphItem.end_x_offset$VH.set(seg, x);
    }
    public static int end_x_offset$get(MemorySegment seg, long index) {
        return (int)_PangoGlyphItem.end_x_offset$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void end_x_offset$set(MemorySegment seg, long index, int x) {
        _PangoGlyphItem.end_x_offset$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


