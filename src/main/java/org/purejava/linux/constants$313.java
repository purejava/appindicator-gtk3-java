// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$313 {

    static final FunctionDescriptor g_test_timer_start$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle g_test_timer_start$MH = RuntimeHelper.downcallHandle(
        "g_test_timer_start",
        constants$313.g_test_timer_start$FUNC
    );
    static final FunctionDescriptor g_test_timer_elapsed$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT);
    static final MethodHandle g_test_timer_elapsed$MH = RuntimeHelper.downcallHandle(
        "g_test_timer_elapsed",
        constants$313.g_test_timer_elapsed$FUNC
    );
    static final FunctionDescriptor g_test_timer_last$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT);
    static final MethodHandle g_test_timer_last$MH = RuntimeHelper.downcallHandle(
        "g_test_timer_last",
        constants$313.g_test_timer_last$FUNC
    );
    static final FunctionDescriptor g_test_queue_free$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_test_queue_free$MH = RuntimeHelper.downcallHandle(
        "g_test_queue_free",
        constants$313.g_test_queue_free$FUNC
    );
    static final FunctionDescriptor g_test_queue_destroy$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_test_queue_destroy$MH = RuntimeHelper.downcallHandle(
        "g_test_queue_destroy",
        constants$313.g_test_queue_destroy$FUNC
    );
    static final FunctionDescriptor g_test_trap_fork$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle g_test_trap_fork$MH = RuntimeHelper.downcallHandle(
        "g_test_trap_fork",
        constants$313.g_test_trap_fork$FUNC
    );
}


