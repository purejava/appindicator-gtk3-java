// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$274 {

    static final FunctionDescriptor g_regex_error_quark$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle g_regex_error_quark$MH = RuntimeHelper.downcallHandle(
        "g_regex_error_quark",
        constants$274.g_regex_error_quark$FUNC
    );
    static final FunctionDescriptor GRegexEvalCallback$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GRegexEvalCallback$MH = RuntimeHelper.downcallHandle(
        constants$274.GRegexEvalCallback$FUNC
    );
    static final FunctionDescriptor g_regex_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_regex_new$MH = RuntimeHelper.downcallHandle(
        "g_regex_new",
        constants$274.g_regex_new$FUNC
    );
    static final FunctionDescriptor g_regex_ref$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_regex_ref$MH = RuntimeHelper.downcallHandle(
        "g_regex_ref",
        constants$274.g_regex_ref$FUNC
    );
    static final FunctionDescriptor g_regex_unref$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_regex_unref$MH = RuntimeHelper.downcallHandle(
        "g_regex_unref",
        constants$274.g_regex_unref$FUNC
    );
}


