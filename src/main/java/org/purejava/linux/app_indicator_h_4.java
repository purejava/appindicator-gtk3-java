// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class app_indicator_h_4 extends app_indicator_h_3 {

    public static MethodHandle g_hostname_to_ascii$MH() {
        return RuntimeHelper.requireNonNull(constants$159.g_hostname_to_ascii$MH,"g_hostname_to_ascii");
    }
    public static MemoryAddress g_hostname_to_ascii ( Addressable hostname) {
        var mh$ = g_hostname_to_ascii$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hostname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hostname_to_unicode$MH() {
        return RuntimeHelper.requireNonNull(constants$159.g_hostname_to_unicode$MH,"g_hostname_to_unicode");
    }
    public static MemoryAddress g_hostname_to_unicode ( Addressable hostname) {
        var mh$ = g_hostname_to_unicode$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hostname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_poll$MH() {
        return RuntimeHelper.requireNonNull(constants$160.g_poll$MH,"g_poll");
    }
    public static int g_poll ( Addressable fds,  int nfds,  int timeout) {
        var mh$ = g_poll$MH();
        try {
            return (int)mh$.invokeExact(fds, nfds, timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$160.g_slist_alloc$MH,"g_slist_alloc");
    }
    public static MemoryAddress g_slist_alloc () {
        var mh$ = g_slist_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_free$MH() {
        return RuntimeHelper.requireNonNull(constants$160.g_slist_free$MH,"g_slist_free");
    }
    public static void g_slist_free ( Addressable list) {
        var mh$ = g_slist_free$MH();
        try {
            mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_free_1$MH() {
        return RuntimeHelper.requireNonNull(constants$160.g_slist_free_1$MH,"g_slist_free_1");
    }
    public static void g_slist_free_1 ( Addressable list) {
        var mh$ = g_slist_free_1$MH();
        try {
            mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_free_full$MH() {
        return RuntimeHelper.requireNonNull(constants$160.g_slist_free_full$MH,"g_slist_free_full");
    }
    public static void g_slist_free_full ( Addressable list,  Addressable free_func) {
        var mh$ = g_slist_free_full$MH();
        try {
            mh$.invokeExact(list, free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_append$MH() {
        return RuntimeHelper.requireNonNull(constants$160.g_slist_append$MH,"g_slist_append");
    }
    public static MemoryAddress g_slist_append ( Addressable list,  Addressable data) {
        var mh$ = g_slist_append$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$161.g_slist_prepend$MH,"g_slist_prepend");
    }
    public static MemoryAddress g_slist_prepend ( Addressable list,  Addressable data) {
        var mh$ = g_slist_prepend$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$161.g_slist_insert$MH,"g_slist_insert");
    }
    public static MemoryAddress g_slist_insert ( Addressable list,  Addressable data,  int position) {
        var mh$ = g_slist_insert$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, data, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_insert_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$161.g_slist_insert_sorted$MH,"g_slist_insert_sorted");
    }
    public static MemoryAddress g_slist_insert_sorted ( Addressable list,  Addressable data,  Addressable func) {
        var mh$ = g_slist_insert_sorted$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, data, func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_insert_sorted_with_data$MH() {
        return RuntimeHelper.requireNonNull(constants$161.g_slist_insert_sorted_with_data$MH,"g_slist_insert_sorted_with_data");
    }
    public static MemoryAddress g_slist_insert_sorted_with_data ( Addressable list,  Addressable data,  Addressable func,  Addressable user_data) {
        var mh$ = g_slist_insert_sorted_with_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, data, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_insert_before$MH() {
        return RuntimeHelper.requireNonNull(constants$161.g_slist_insert_before$MH,"g_slist_insert_before");
    }
    public static MemoryAddress g_slist_insert_before ( Addressable slist,  Addressable sibling,  Addressable data) {
        var mh$ = g_slist_insert_before$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(slist, sibling, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_concat$MH() {
        return RuntimeHelper.requireNonNull(constants$161.g_slist_concat$MH,"g_slist_concat");
    }
    public static MemoryAddress g_slist_concat ( Addressable list1,  Addressable list2) {
        var mh$ = g_slist_concat$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list1, list2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$162.g_slist_remove$MH,"g_slist_remove");
    }
    public static MemoryAddress g_slist_remove ( Addressable list,  Addressable data) {
        var mh$ = g_slist_remove$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_remove_all$MH() {
        return RuntimeHelper.requireNonNull(constants$162.g_slist_remove_all$MH,"g_slist_remove_all");
    }
    public static MemoryAddress g_slist_remove_all ( Addressable list,  Addressable data) {
        var mh$ = g_slist_remove_all$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_remove_link$MH() {
        return RuntimeHelper.requireNonNull(constants$162.g_slist_remove_link$MH,"g_slist_remove_link");
    }
    public static MemoryAddress g_slist_remove_link ( Addressable list,  Addressable link_) {
        var mh$ = g_slist_remove_link$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_delete_link$MH() {
        return RuntimeHelper.requireNonNull(constants$162.g_slist_delete_link$MH,"g_slist_delete_link");
    }
    public static MemoryAddress g_slist_delete_link ( Addressable list,  Addressable link_) {
        var mh$ = g_slist_delete_link$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_reverse$MH() {
        return RuntimeHelper.requireNonNull(constants$162.g_slist_reverse$MH,"g_slist_reverse");
    }
    public static MemoryAddress g_slist_reverse ( Addressable list) {
        var mh$ = g_slist_reverse$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$162.g_slist_copy$MH,"g_slist_copy");
    }
    public static MemoryAddress g_slist_copy ( Addressable list) {
        var mh$ = g_slist_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_copy_deep$MH() {
        return RuntimeHelper.requireNonNull(constants$163.g_slist_copy_deep$MH,"g_slist_copy_deep");
    }
    public static MemoryAddress g_slist_copy_deep ( Addressable list,  Addressable func,  Addressable user_data) {
        var mh$ = g_slist_copy_deep$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_nth$MH() {
        return RuntimeHelper.requireNonNull(constants$163.g_slist_nth$MH,"g_slist_nth");
    }
    public static MemoryAddress g_slist_nth ( Addressable list,  int n) {
        var mh$ = g_slist_nth$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_find$MH() {
        return RuntimeHelper.requireNonNull(constants$163.g_slist_find$MH,"g_slist_find");
    }
    public static MemoryAddress g_slist_find ( Addressable list,  Addressable data) {
        var mh$ = g_slist_find$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_find_custom$MH() {
        return RuntimeHelper.requireNonNull(constants$163.g_slist_find_custom$MH,"g_slist_find_custom");
    }
    public static MemoryAddress g_slist_find_custom ( Addressable list,  Addressable data,  Addressable func) {
        var mh$ = g_slist_find_custom$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, data, func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_position$MH() {
        return RuntimeHelper.requireNonNull(constants$163.g_slist_position$MH,"g_slist_position");
    }
    public static int g_slist_position ( Addressable list,  Addressable llink) {
        var mh$ = g_slist_position$MH();
        try {
            return (int)mh$.invokeExact(list, llink);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_index$MH() {
        return RuntimeHelper.requireNonNull(constants$163.g_slist_index$MH,"g_slist_index");
    }
    public static int g_slist_index ( Addressable list,  Addressable data) {
        var mh$ = g_slist_index$MH();
        try {
            return (int)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_last$MH() {
        return RuntimeHelper.requireNonNull(constants$164.g_slist_last$MH,"g_slist_last");
    }
    public static MemoryAddress g_slist_last ( Addressable list) {
        var mh$ = g_slist_last$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_length$MH() {
        return RuntimeHelper.requireNonNull(constants$164.g_slist_length$MH,"g_slist_length");
    }
    public static int g_slist_length ( Addressable list) {
        var mh$ = g_slist_length$MH();
        try {
            return (int)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$164.g_slist_foreach$MH,"g_slist_foreach");
    }
    public static void g_slist_foreach ( Addressable list,  Addressable func,  Addressable user_data) {
        var mh$ = g_slist_foreach$MH();
        try {
            mh$.invokeExact(list, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$164.g_slist_sort$MH,"g_slist_sort");
    }
    public static MemoryAddress g_slist_sort ( Addressable list,  Addressable compare_func) {
        var mh$ = g_slist_sort$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, compare_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_sort_with_data$MH() {
        return RuntimeHelper.requireNonNull(constants$164.g_slist_sort_with_data$MH,"g_slist_sort_with_data");
    }
    public static MemoryAddress g_slist_sort_with_data ( Addressable list,  Addressable compare_func,  Addressable user_data) {
        var mh$ = g_slist_sort_with_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, compare_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_nth_data$MH() {
        return RuntimeHelper.requireNonNull(constants$164.g_slist_nth_data$MH,"g_slist_nth_data");
    }
    public static MemoryAddress g_slist_nth_data ( Addressable list,  int n) {
        var mh$ = g_slist_nth_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_slist$MH() {
        return RuntimeHelper.requireNonNull(constants$165.g_clear_slist$MH,"g_clear_slist");
    }
    public static void g_clear_slist ( Addressable slist_ptr,  Addressable destroy) {
        var mh$ = g_clear_slist$MH();
        try {
            mh$.invokeExact(slist_ptr, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_IO_IN() {
        return (int)1L;
    }
    public static int G_IO_OUT() {
        return (int)4L;
    }
    public static int G_IO_PRI() {
        return (int)2L;
    }
    public static int G_IO_ERR() {
        return (int)8L;
    }
    public static int G_IO_HUP() {
        return (int)16L;
    }
    public static int G_IO_NVAL() {
        return (int)32L;
    }
    public static int G_MAIN_CONTEXT_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_MAIN_CONTEXT_FLAGS_OWNERLESS_POLLING() {
        return (int)1L;
    }
    public static MethodHandle g_main_context_new$MH() {
        return RuntimeHelper.requireNonNull(constants$166.g_main_context_new$MH,"g_main_context_new");
    }
    public static MemoryAddress g_main_context_new () {
        var mh$ = g_main_context_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_new_with_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$166.g_main_context_new_with_flags$MH,"g_main_context_new_with_flags");
    }
    public static MemoryAddress g_main_context_new_with_flags ( int flags) {
        var mh$ = g_main_context_new_with_flags$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$166.g_main_context_ref$MH,"g_main_context_ref");
    }
    public static MemoryAddress g_main_context_ref ( Addressable context) {
        var mh$ = g_main_context_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$167.g_main_context_unref$MH,"g_main_context_unref");
    }
    public static void g_main_context_unref ( Addressable context) {
        var mh$ = g_main_context_unref$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_default$MH() {
        return RuntimeHelper.requireNonNull(constants$167.g_main_context_default$MH,"g_main_context_default");
    }
    public static MemoryAddress g_main_context_default () {
        var mh$ = g_main_context_default$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_iteration$MH() {
        return RuntimeHelper.requireNonNull(constants$167.g_main_context_iteration$MH,"g_main_context_iteration");
    }
    public static int g_main_context_iteration ( Addressable context,  int may_block) {
        var mh$ = g_main_context_iteration$MH();
        try {
            return (int)mh$.invokeExact(context, may_block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$167.g_main_context_pending$MH,"g_main_context_pending");
    }
    public static int g_main_context_pending ( Addressable context) {
        var mh$ = g_main_context_pending$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_find_source_by_id$MH() {
        return RuntimeHelper.requireNonNull(constants$167.g_main_context_find_source_by_id$MH,"g_main_context_find_source_by_id");
    }
    public static MemoryAddress g_main_context_find_source_by_id ( Addressable context,  int source_id) {
        var mh$ = g_main_context_find_source_by_id$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context, source_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_find_source_by_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$167.g_main_context_find_source_by_user_data$MH,"g_main_context_find_source_by_user_data");
    }
    public static MemoryAddress g_main_context_find_source_by_user_data ( Addressable context,  Addressable user_data) {
        var mh$ = g_main_context_find_source_by_user_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_find_source_by_funcs_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$168.g_main_context_find_source_by_funcs_user_data$MH,"g_main_context_find_source_by_funcs_user_data");
    }
    public static MemoryAddress g_main_context_find_source_by_funcs_user_data ( Addressable context,  Addressable funcs,  Addressable user_data) {
        var mh$ = g_main_context_find_source_by_funcs_user_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context, funcs, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_wakeup$MH() {
        return RuntimeHelper.requireNonNull(constants$168.g_main_context_wakeup$MH,"g_main_context_wakeup");
    }
    public static void g_main_context_wakeup ( Addressable context) {
        var mh$ = g_main_context_wakeup$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_acquire$MH() {
        return RuntimeHelper.requireNonNull(constants$168.g_main_context_acquire$MH,"g_main_context_acquire");
    }
    public static int g_main_context_acquire ( Addressable context) {
        var mh$ = g_main_context_acquire$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_release$MH() {
        return RuntimeHelper.requireNonNull(constants$168.g_main_context_release$MH,"g_main_context_release");
    }
    public static void g_main_context_release ( Addressable context) {
        var mh$ = g_main_context_release$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_is_owner$MH() {
        return RuntimeHelper.requireNonNull(constants$168.g_main_context_is_owner$MH,"g_main_context_is_owner");
    }
    public static int g_main_context_is_owner ( Addressable context) {
        var mh$ = g_main_context_is_owner$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$168.g_main_context_wait$MH,"g_main_context_wait");
    }
    public static int g_main_context_wait ( Addressable context,  Addressable cond,  Addressable mutex) {
        var mh$ = g_main_context_wait$MH();
        try {
            return (int)mh$.invokeExact(context, cond, mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_prepare$MH() {
        return RuntimeHelper.requireNonNull(constants$169.g_main_context_prepare$MH,"g_main_context_prepare");
    }
    public static int g_main_context_prepare ( Addressable context,  Addressable priority) {
        var mh$ = g_main_context_prepare$MH();
        try {
            return (int)mh$.invokeExact(context, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_query$MH() {
        return RuntimeHelper.requireNonNull(constants$169.g_main_context_query$MH,"g_main_context_query");
    }
    public static int g_main_context_query ( Addressable context,  int max_priority,  Addressable timeout_,  Addressable fds,  int n_fds) {
        var mh$ = g_main_context_query$MH();
        try {
            return (int)mh$.invokeExact(context, max_priority, timeout_, fds, n_fds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_check$MH() {
        return RuntimeHelper.requireNonNull(constants$169.g_main_context_check$MH,"g_main_context_check");
    }
    public static int g_main_context_check ( Addressable context,  int max_priority,  Addressable fds,  int n_fds) {
        var mh$ = g_main_context_check$MH();
        try {
            return (int)mh$.invokeExact(context, max_priority, fds, n_fds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_dispatch$MH() {
        return RuntimeHelper.requireNonNull(constants$169.g_main_context_dispatch$MH,"g_main_context_dispatch");
    }
    public static void g_main_context_dispatch ( Addressable context) {
        var mh$ = g_main_context_dispatch$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_set_poll_func$MH() {
        return RuntimeHelper.requireNonNull(constants$169.g_main_context_set_poll_func$MH,"g_main_context_set_poll_func");
    }
    public static void g_main_context_set_poll_func ( Addressable context,  Addressable func) {
        var mh$ = g_main_context_set_poll_func$MH();
        try {
            mh$.invokeExact(context, func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_get_poll_func$MH() {
        return RuntimeHelper.requireNonNull(constants$169.g_main_context_get_poll_func$MH,"g_main_context_get_poll_func");
    }
    public static MemoryAddress g_main_context_get_poll_func ( Addressable context) {
        var mh$ = g_main_context_get_poll_func$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_add_poll$MH() {
        return RuntimeHelper.requireNonNull(constants$170.g_main_context_add_poll$MH,"g_main_context_add_poll");
    }
    public static void g_main_context_add_poll ( Addressable context,  Addressable fd,  int priority) {
        var mh$ = g_main_context_add_poll$MH();
        try {
            mh$.invokeExact(context, fd, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_remove_poll$MH() {
        return RuntimeHelper.requireNonNull(constants$170.g_main_context_remove_poll$MH,"g_main_context_remove_poll");
    }
    public static void g_main_context_remove_poll ( Addressable context,  Addressable fd) {
        var mh$ = g_main_context_remove_poll$MH();
        try {
            mh$.invokeExact(context, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$170.g_main_depth$MH,"g_main_depth");
    }
    public static int g_main_depth () {
        var mh$ = g_main_depth$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_current_source$MH() {
        return RuntimeHelper.requireNonNull(constants$170.g_main_current_source$MH,"g_main_current_source");
    }
    public static MemoryAddress g_main_current_source () {
        var mh$ = g_main_current_source$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_push_thread_default$MH() {
        return RuntimeHelper.requireNonNull(constants$170.g_main_context_push_thread_default$MH,"g_main_context_push_thread_default");
    }
    public static void g_main_context_push_thread_default ( Addressable context) {
        var mh$ = g_main_context_push_thread_default$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_pop_thread_default$MH() {
        return RuntimeHelper.requireNonNull(constants$170.g_main_context_pop_thread_default$MH,"g_main_context_pop_thread_default");
    }
    public static void g_main_context_pop_thread_default ( Addressable context) {
        var mh$ = g_main_context_pop_thread_default$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_get_thread_default$MH() {
        return RuntimeHelper.requireNonNull(constants$171.g_main_context_get_thread_default$MH,"g_main_context_get_thread_default");
    }
    public static MemoryAddress g_main_context_get_thread_default () {
        var mh$ = g_main_context_get_thread_default$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_ref_thread_default$MH() {
        return RuntimeHelper.requireNonNull(constants$171.g_main_context_ref_thread_default$MH,"g_main_context_ref_thread_default");
    }
    public static MemoryAddress g_main_context_ref_thread_default () {
        var mh$ = g_main_context_ref_thread_default$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_pusher_new$MH() {
        return RuntimeHelper.requireNonNull(constants$171.g_main_context_pusher_new$MH,"g_main_context_pusher_new");
    }
    public static MemoryAddress g_main_context_pusher_new ( Addressable main_context) {
        var mh$ = g_main_context_pusher_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(main_context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_pusher_free$MH() {
        return RuntimeHelper.requireNonNull(constants$171.g_main_context_pusher_free$MH,"g_main_context_pusher_free");
    }
    public static void g_main_context_pusher_free ( Addressable pusher) {
        var mh$ = g_main_context_pusher_free$MH();
        try {
            mh$.invokeExact(pusher);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_new$MH() {
        return RuntimeHelper.requireNonNull(constants$171.g_main_loop_new$MH,"g_main_loop_new");
    }
    public static MemoryAddress g_main_loop_new ( Addressable context,  int is_running) {
        var mh$ = g_main_loop_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context, is_running);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_run$MH() {
        return RuntimeHelper.requireNonNull(constants$171.g_main_loop_run$MH,"g_main_loop_run");
    }
    public static void g_main_loop_run ( Addressable loop) {
        var mh$ = g_main_loop_run$MH();
        try {
            mh$.invokeExact(loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_quit$MH() {
        return RuntimeHelper.requireNonNull(constants$172.g_main_loop_quit$MH,"g_main_loop_quit");
    }
    public static void g_main_loop_quit ( Addressable loop) {
        var mh$ = g_main_loop_quit$MH();
        try {
            mh$.invokeExact(loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$172.g_main_loop_ref$MH,"g_main_loop_ref");
    }
    public static MemoryAddress g_main_loop_ref ( Addressable loop) {
        var mh$ = g_main_loop_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$172.g_main_loop_unref$MH,"g_main_loop_unref");
    }
    public static void g_main_loop_unref ( Addressable loop) {
        var mh$ = g_main_loop_unref$MH();
        try {
            mh$.invokeExact(loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_is_running$MH() {
        return RuntimeHelper.requireNonNull(constants$172.g_main_loop_is_running$MH,"g_main_loop_is_running");
    }
    public static int g_main_loop_is_running ( Addressable loop) {
        var mh$ = g_main_loop_is_running$MH();
        try {
            return (int)mh$.invokeExact(loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_get_context$MH() {
        return RuntimeHelper.requireNonNull(constants$172.g_main_loop_get_context$MH,"g_main_loop_get_context");
    }
    public static MemoryAddress g_main_loop_get_context ( Addressable loop) {
        var mh$ = g_main_loop_get_context$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$172.g_source_new$MH,"g_source_new");
    }
    public static MemoryAddress g_source_new ( Addressable source_funcs,  int struct_size) {
        var mh$ = g_source_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source_funcs, struct_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_dispose_function$MH() {
        return RuntimeHelper.requireNonNull(constants$173.g_source_set_dispose_function$MH,"g_source_set_dispose_function");
    }
    public static void g_source_set_dispose_function ( Addressable source,  Addressable dispose) {
        var mh$ = g_source_set_dispose_function$MH();
        try {
            mh$.invokeExact(source, dispose);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$173.g_source_ref$MH,"g_source_ref");
    }
    public static MemoryAddress g_source_ref ( Addressable source) {
        var mh$ = g_source_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$173.g_source_unref$MH,"g_source_unref");
    }
    public static void g_source_unref ( Addressable source) {
        var mh$ = g_source_unref$MH();
        try {
            mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_attach$MH() {
        return RuntimeHelper.requireNonNull(constants$173.g_source_attach$MH,"g_source_attach");
    }
    public static int g_source_attach ( Addressable source,  Addressable context) {
        var mh$ = g_source_attach$MH();
        try {
            return (int)mh$.invokeExact(source, context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$173.g_source_destroy$MH,"g_source_destroy");
    }
    public static void g_source_destroy ( Addressable source) {
        var mh$ = g_source_destroy$MH();
        try {
            mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$173.g_source_set_priority$MH,"g_source_set_priority");
    }
    public static void g_source_set_priority ( Addressable source,  int priority) {
        var mh$ = g_source_set_priority$MH();
        try {
            mh$.invokeExact(source, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$174.g_source_get_priority$MH,"g_source_get_priority");
    }
    public static int g_source_get_priority ( Addressable source) {
        var mh$ = g_source_get_priority$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_can_recurse$MH() {
        return RuntimeHelper.requireNonNull(constants$174.g_source_set_can_recurse$MH,"g_source_set_can_recurse");
    }
    public static void g_source_set_can_recurse ( Addressable source,  int can_recurse) {
        var mh$ = g_source_set_can_recurse$MH();
        try {
            mh$.invokeExact(source, can_recurse);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_can_recurse$MH() {
        return RuntimeHelper.requireNonNull(constants$174.g_source_get_can_recurse$MH,"g_source_get_can_recurse");
    }
    public static int g_source_get_can_recurse ( Addressable source) {
        var mh$ = g_source_get_can_recurse$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_id$MH() {
        return RuntimeHelper.requireNonNull(constants$174.g_source_get_id$MH,"g_source_get_id");
    }
    public static int g_source_get_id ( Addressable source) {
        var mh$ = g_source_get_id$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_context$MH() {
        return RuntimeHelper.requireNonNull(constants$174.g_source_get_context$MH,"g_source_get_context");
    }
    public static MemoryAddress g_source_get_context ( Addressable source) {
        var mh$ = g_source_get_context$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$174.g_source_set_callback$MH,"g_source_set_callback");
    }
    public static void g_source_set_callback ( Addressable source,  Addressable func,  Addressable data,  Addressable notify) {
        var mh$ = g_source_set_callback$MH();
        try {
            mh$.invokeExact(source, func, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_funcs$MH() {
        return RuntimeHelper.requireNonNull(constants$175.g_source_set_funcs$MH,"g_source_set_funcs");
    }
    public static void g_source_set_funcs ( Addressable source,  Addressable funcs) {
        var mh$ = g_source_set_funcs$MH();
        try {
            mh$.invokeExact(source, funcs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_is_destroyed$MH() {
        return RuntimeHelper.requireNonNull(constants$175.g_source_is_destroyed$MH,"g_source_is_destroyed");
    }
    public static int g_source_is_destroyed ( Addressable source) {
        var mh$ = g_source_is_destroyed$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$175.g_source_set_name$MH,"g_source_set_name");
    }
    public static void g_source_set_name ( Addressable source,  Addressable name) {
        var mh$ = g_source_set_name$MH();
        try {
            mh$.invokeExact(source, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_static_name$MH() {
        return RuntimeHelper.requireNonNull(constants$175.g_source_set_static_name$MH,"g_source_set_static_name");
    }
    public static void g_source_set_static_name ( Addressable source,  Addressable name) {
        var mh$ = g_source_set_static_name$MH();
        try {
            mh$.invokeExact(source, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$175.g_source_get_name$MH,"g_source_get_name");
    }
    public static MemoryAddress g_source_get_name ( Addressable source) {
        var mh$ = g_source_get_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_name_by_id$MH() {
        return RuntimeHelper.requireNonNull(constants$175.g_source_set_name_by_id$MH,"g_source_set_name_by_id");
    }
    public static void g_source_set_name_by_id ( int tag,  Addressable name) {
        var mh$ = g_source_set_name_by_id$MH();
        try {
            mh$.invokeExact(tag, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_ready_time$MH() {
        return RuntimeHelper.requireNonNull(constants$176.g_source_set_ready_time$MH,"g_source_set_ready_time");
    }
    public static void g_source_set_ready_time ( Addressable source,  long ready_time) {
        var mh$ = g_source_set_ready_time$MH();
        try {
            mh$.invokeExact(source, ready_time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_ready_time$MH() {
        return RuntimeHelper.requireNonNull(constants$176.g_source_get_ready_time$MH,"g_source_get_ready_time");
    }
    public static long g_source_get_ready_time ( Addressable source) {
        var mh$ = g_source_get_ready_time$MH();
        try {
            return (long)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_add_unix_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$176.g_source_add_unix_fd$MH,"g_source_add_unix_fd");
    }
    public static MemoryAddress g_source_add_unix_fd ( Addressable source,  int fd,  int events) {
        var mh$ = g_source_add_unix_fd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source, fd, events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_modify_unix_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$176.g_source_modify_unix_fd$MH,"g_source_modify_unix_fd");
    }
    public static void g_source_modify_unix_fd ( Addressable source,  Addressable tag,  int new_events) {
        var mh$ = g_source_modify_unix_fd$MH();
        try {
            mh$.invokeExact(source, tag, new_events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_remove_unix_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$176.g_source_remove_unix_fd$MH,"g_source_remove_unix_fd");
    }
    public static void g_source_remove_unix_fd ( Addressable source,  Addressable tag) {
        var mh$ = g_source_remove_unix_fd$MH();
        try {
            mh$.invokeExact(source, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_query_unix_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$176.g_source_query_unix_fd$MH,"g_source_query_unix_fd");
    }
    public static int g_source_query_unix_fd ( Addressable source,  Addressable tag) {
        var mh$ = g_source_query_unix_fd$MH();
        try {
            return (int)mh$.invokeExact(source, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_callback_indirect$MH() {
        return RuntimeHelper.requireNonNull(constants$177.g_source_set_callback_indirect$MH,"g_source_set_callback_indirect");
    }
    public static void g_source_set_callback_indirect ( Addressable source,  Addressable callback_data,  Addressable callback_funcs) {
        var mh$ = g_source_set_callback_indirect$MH();
        try {
            mh$.invokeExact(source, callback_data, callback_funcs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_add_poll$MH() {
        return RuntimeHelper.requireNonNull(constants$177.g_source_add_poll$MH,"g_source_add_poll");
    }
    public static void g_source_add_poll ( Addressable source,  Addressable fd) {
        var mh$ = g_source_add_poll$MH();
        try {
            mh$.invokeExact(source, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_remove_poll$MH() {
        return RuntimeHelper.requireNonNull(constants$177.g_source_remove_poll$MH,"g_source_remove_poll");
    }
    public static void g_source_remove_poll ( Addressable source,  Addressable fd) {
        var mh$ = g_source_remove_poll$MH();
        try {
            mh$.invokeExact(source, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_add_child_source$MH() {
        return RuntimeHelper.requireNonNull(constants$177.g_source_add_child_source$MH,"g_source_add_child_source");
    }
    public static void g_source_add_child_source ( Addressable source,  Addressable child_source) {
        var mh$ = g_source_add_child_source$MH();
        try {
            mh$.invokeExact(source, child_source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_remove_child_source$MH() {
        return RuntimeHelper.requireNonNull(constants$177.g_source_remove_child_source$MH,"g_source_remove_child_source");
    }
    public static void g_source_remove_child_source ( Addressable source,  Addressable child_source) {
        var mh$ = g_source_remove_child_source$MH();
        try {
            mh$.invokeExact(source, child_source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_current_time$MH() {
        return RuntimeHelper.requireNonNull(constants$177.g_source_get_current_time$MH,"g_source_get_current_time");
    }
    public static void g_source_get_current_time ( Addressable source,  Addressable timeval) {
        var mh$ = g_source_get_current_time$MH();
        try {
            mh$.invokeExact(source, timeval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_time$MH() {
        return RuntimeHelper.requireNonNull(constants$178.g_source_get_time$MH,"g_source_get_time");
    }
    public static long g_source_get_time ( Addressable source) {
        var mh$ = g_source_get_time$MH();
        try {
            return (long)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_idle_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$178.g_idle_source_new$MH,"g_idle_source_new");
    }
    public static MemoryAddress g_idle_source_new () {
        var mh$ = g_idle_source_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_child_watch_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$178.g_child_watch_source_new$MH,"g_child_watch_source_new");
    }
    public static MemoryAddress g_child_watch_source_new ( int pid) {
        var mh$ = g_child_watch_source_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_timeout_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$178.g_timeout_source_new$MH,"g_timeout_source_new");
    }
    public static MemoryAddress g_timeout_source_new ( int interval) {
        var mh$ = g_timeout_source_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(interval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_timeout_source_new_seconds$MH() {
        return RuntimeHelper.requireNonNull(constants$178.g_timeout_source_new_seconds$MH,"g_timeout_source_new_seconds");
    }
    public static MemoryAddress g_timeout_source_new_seconds ( int interval) {
        var mh$ = g_timeout_source_new_seconds$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(interval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_get_current_time$MH() {
        return RuntimeHelper.requireNonNull(constants$178.g_get_current_time$MH,"g_get_current_time");
    }
    public static void g_get_current_time ( Addressable result) {
        var mh$ = g_get_current_time$MH();
        try {
            mh$.invokeExact(result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_get_monotonic_time$MH() {
        return RuntimeHelper.requireNonNull(constants$179.g_get_monotonic_time$MH,"g_get_monotonic_time");
    }
    public static long g_get_monotonic_time () {
        var mh$ = g_get_monotonic_time$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_get_real_time$MH() {
        return RuntimeHelper.requireNonNull(constants$179.g_get_real_time$MH,"g_get_real_time");
    }
    public static long g_get_real_time () {
        var mh$ = g_get_real_time$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$179.g_source_remove$MH,"g_source_remove");
    }
    public static int g_source_remove ( int tag) {
        var mh$ = g_source_remove$MH();
        try {
            return (int)mh$.invokeExact(tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_remove_by_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$179.g_source_remove_by_user_data$MH,"g_source_remove_by_user_data");
    }
    public static int g_source_remove_by_user_data ( Addressable user_data) {
        var mh$ = g_source_remove_by_user_data$MH();
        try {
            return (int)mh$.invokeExact(user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_remove_by_funcs_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$179.g_source_remove_by_funcs_user_data$MH,"g_source_remove_by_funcs_user_data");
    }
    public static int g_source_remove_by_funcs_user_data ( Addressable funcs,  Addressable user_data) {
        var mh$ = g_source_remove_by_funcs_user_data$MH();
        try {
            return (int)mh$.invokeExact(funcs, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_handle_id$MH() {
        return RuntimeHelper.requireNonNull(constants$180.g_clear_handle_id$MH,"g_clear_handle_id");
    }
    public static void g_clear_handle_id ( Addressable tag_ptr,  Addressable clear_func) {
        var mh$ = g_clear_handle_id$MH();
        try {
            mh$.invokeExact(tag_ptr, clear_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_timeout_add_full$MH() {
        return RuntimeHelper.requireNonNull(constants$180.g_timeout_add_full$MH,"g_timeout_add_full");
    }
    public static int g_timeout_add_full ( int priority,  int interval,  Addressable function,  Addressable data,  Addressable notify) {
        var mh$ = g_timeout_add_full$MH();
        try {
            return (int)mh$.invokeExact(priority, interval, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_timeout_add$MH() {
        return RuntimeHelper.requireNonNull(constants$180.g_timeout_add$MH,"g_timeout_add");
    }
    public static int g_timeout_add ( int interval,  Addressable function,  Addressable data) {
        var mh$ = g_timeout_add$MH();
        try {
            return (int)mh$.invokeExact(interval, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_timeout_add_seconds_full$MH() {
        return RuntimeHelper.requireNonNull(constants$180.g_timeout_add_seconds_full$MH,"g_timeout_add_seconds_full");
    }
    public static int g_timeout_add_seconds_full ( int priority,  int interval,  Addressable function,  Addressable data,  Addressable notify) {
        var mh$ = g_timeout_add_seconds_full$MH();
        try {
            return (int)mh$.invokeExact(priority, interval, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_timeout_add_seconds$MH() {
        return RuntimeHelper.requireNonNull(constants$180.g_timeout_add_seconds$MH,"g_timeout_add_seconds");
    }
    public static int g_timeout_add_seconds ( int interval,  Addressable function,  Addressable data) {
        var mh$ = g_timeout_add_seconds$MH();
        try {
            return (int)mh$.invokeExact(interval, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_child_watch_add_full$MH() {
        return RuntimeHelper.requireNonNull(constants$181.g_child_watch_add_full$MH,"g_child_watch_add_full");
    }
    public static int g_child_watch_add_full ( int priority,  int pid,  Addressable function,  Addressable data,  Addressable notify) {
        var mh$ = g_child_watch_add_full$MH();
        try {
            return (int)mh$.invokeExact(priority, pid, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_child_watch_add$MH() {
        return RuntimeHelper.requireNonNull(constants$181.g_child_watch_add$MH,"g_child_watch_add");
    }
    public static int g_child_watch_add ( int pid,  Addressable function,  Addressable data) {
        var mh$ = g_child_watch_add$MH();
        try {
            return (int)mh$.invokeExact(pid, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_idle_add$MH() {
        return RuntimeHelper.requireNonNull(constants$181.g_idle_add$MH,"g_idle_add");
    }
    public static int g_idle_add ( Addressable function,  Addressable data) {
        var mh$ = g_idle_add$MH();
        try {
            return (int)mh$.invokeExact(function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_idle_add_full$MH() {
        return RuntimeHelper.requireNonNull(constants$181.g_idle_add_full$MH,"g_idle_add_full");
    }
    public static int g_idle_add_full ( int priority,  Addressable function,  Addressable data,  Addressable notify) {
        var mh$ = g_idle_add_full$MH();
        try {
            return (int)mh$.invokeExact(priority, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_idle_remove_by_data$MH() {
        return RuntimeHelper.requireNonNull(constants$181.g_idle_remove_by_data$MH,"g_idle_remove_by_data");
    }
    public static int g_idle_remove_by_data ( Addressable data) {
        var mh$ = g_idle_remove_by_data$MH();
        try {
            return (int)mh$.invokeExact(data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_invoke_full$MH() {
        return RuntimeHelper.requireNonNull(constants$181.g_main_context_invoke_full$MH,"g_main_context_invoke_full");
    }
    public static void g_main_context_invoke_full ( Addressable context,  int priority,  Addressable function,  Addressable data,  Addressable notify) {
        var mh$ = g_main_context_invoke_full$MH();
        try {
            mh$.invokeExact(context, priority, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_invoke$MH() {
        return RuntimeHelper.requireNonNull(constants$182.g_main_context_invoke$MH,"g_main_context_invoke");
    }
    public static void g_main_context_invoke ( Addressable context,  Addressable function,  Addressable data) {
        var mh$ = g_main_context_invoke$MH();
        try {
            mh$.invokeExact(context, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_steal_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$182.g_steal_fd$MH,"g_steal_fd");
    }
    public static int g_steal_fd ( Addressable fd_ptr) {
        var mh$ = g_steal_fd$MH();
        try {
            return (int)mh$.invokeExact(fd_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemorySegment g_timeout_funcs$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$182.g_timeout_funcs$SEGMENT,"g_timeout_funcs");
    }
    public static MemorySegment g_child_watch_funcs$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$182.g_child_watch_funcs$SEGMENT,"g_child_watch_funcs");
    }
    public static MemorySegment g_idle_funcs$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$182.g_idle_funcs$SEGMENT,"g_idle_funcs");
    }
    public static MemorySegment g_unix_signal_funcs$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$182.g_unix_signal_funcs$SEGMENT,"g_unix_signal_funcs");
    }
    public static MemorySegment g_unix_fd_source_funcs$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$183.g_unix_fd_source_funcs$SEGMENT,"g_unix_fd_source_funcs");
    }
    public static int G_UNICODE_CONTROL() {
        return (int)0L;
    }
    public static int G_UNICODE_FORMAT() {
        return (int)1L;
    }
    public static int G_UNICODE_UNASSIGNED() {
        return (int)2L;
    }
    public static int G_UNICODE_PRIVATE_USE() {
        return (int)3L;
    }
    public static int G_UNICODE_SURROGATE() {
        return (int)4L;
    }
    public static int G_UNICODE_LOWERCASE_LETTER() {
        return (int)5L;
    }
    public static int G_UNICODE_MODIFIER_LETTER() {
        return (int)6L;
    }
    public static int G_UNICODE_OTHER_LETTER() {
        return (int)7L;
    }
    public static int G_UNICODE_TITLECASE_LETTER() {
        return (int)8L;
    }
    public static int G_UNICODE_UPPERCASE_LETTER() {
        return (int)9L;
    }
    public static int G_UNICODE_SPACING_MARK() {
        return (int)10L;
    }
    public static int G_UNICODE_ENCLOSING_MARK() {
        return (int)11L;
    }
    public static int G_UNICODE_NON_SPACING_MARK() {
        return (int)12L;
    }
    public static int G_UNICODE_DECIMAL_NUMBER() {
        return (int)13L;
    }
    public static int G_UNICODE_LETTER_NUMBER() {
        return (int)14L;
    }
    public static int G_UNICODE_OTHER_NUMBER() {
        return (int)15L;
    }
    public static int G_UNICODE_CONNECT_PUNCTUATION() {
        return (int)16L;
    }
    public static int G_UNICODE_DASH_PUNCTUATION() {
        return (int)17L;
    }
    public static int G_UNICODE_CLOSE_PUNCTUATION() {
        return (int)18L;
    }
    public static int G_UNICODE_FINAL_PUNCTUATION() {
        return (int)19L;
    }
    public static int G_UNICODE_INITIAL_PUNCTUATION() {
        return (int)20L;
    }
    public static int G_UNICODE_OTHER_PUNCTUATION() {
        return (int)21L;
    }
    public static int G_UNICODE_OPEN_PUNCTUATION() {
        return (int)22L;
    }
    public static int G_UNICODE_CURRENCY_SYMBOL() {
        return (int)23L;
    }
    public static int G_UNICODE_MODIFIER_SYMBOL() {
        return (int)24L;
    }
    public static int G_UNICODE_MATH_SYMBOL() {
        return (int)25L;
    }
    public static int G_UNICODE_OTHER_SYMBOL() {
        return (int)26L;
    }
    public static int G_UNICODE_LINE_SEPARATOR() {
        return (int)27L;
    }
    public static int G_UNICODE_PARAGRAPH_SEPARATOR() {
        return (int)28L;
    }
    public static int G_UNICODE_SPACE_SEPARATOR() {
        return (int)29L;
    }
    public static int G_UNICODE_BREAK_MANDATORY() {
        return (int)0L;
    }
    public static int G_UNICODE_BREAK_CARRIAGE_RETURN() {
        return (int)1L;
    }
    public static int G_UNICODE_BREAK_LINE_FEED() {
        return (int)2L;
    }
    public static int G_UNICODE_BREAK_COMBINING_MARK() {
        return (int)3L;
    }
    public static int G_UNICODE_BREAK_SURROGATE() {
        return (int)4L;
    }
    public static int G_UNICODE_BREAK_ZERO_WIDTH_SPACE() {
        return (int)5L;
    }
    public static int G_UNICODE_BREAK_INSEPARABLE() {
        return (int)6L;
    }
    public static int G_UNICODE_BREAK_NON_BREAKING_GLUE() {
        return (int)7L;
    }
    public static int G_UNICODE_BREAK_CONTINGENT() {
        return (int)8L;
    }
    public static int G_UNICODE_BREAK_SPACE() {
        return (int)9L;
    }
    public static int G_UNICODE_BREAK_AFTER() {
        return (int)10L;
    }
    public static int G_UNICODE_BREAK_BEFORE() {
        return (int)11L;
    }
    public static int G_UNICODE_BREAK_BEFORE_AND_AFTER() {
        return (int)12L;
    }
    public static int G_UNICODE_BREAK_HYPHEN() {
        return (int)13L;
    }
    public static int G_UNICODE_BREAK_NON_STARTER() {
        return (int)14L;
    }
    public static int G_UNICODE_BREAK_OPEN_PUNCTUATION() {
        return (int)15L;
    }
    public static int G_UNICODE_BREAK_CLOSE_PUNCTUATION() {
        return (int)16L;
    }
    public static int G_UNICODE_BREAK_QUOTATION() {
        return (int)17L;
    }
    public static int G_UNICODE_BREAK_EXCLAMATION() {
        return (int)18L;
    }
    public static int G_UNICODE_BREAK_IDEOGRAPHIC() {
        return (int)19L;
    }
    public static int G_UNICODE_BREAK_NUMERIC() {
        return (int)20L;
    }
    public static int G_UNICODE_BREAK_INFIX_SEPARATOR() {
        return (int)21L;
    }
    public static int G_UNICODE_BREAK_SYMBOL() {
        return (int)22L;
    }
    public static int G_UNICODE_BREAK_ALPHABETIC() {
        return (int)23L;
    }
    public static int G_UNICODE_BREAK_PREFIX() {
        return (int)24L;
    }
    public static int G_UNICODE_BREAK_POSTFIX() {
        return (int)25L;
    }
    public static int G_UNICODE_BREAK_COMPLEX_CONTEXT() {
        return (int)26L;
    }
    public static int G_UNICODE_BREAK_AMBIGUOUS() {
        return (int)27L;
    }
    public static int G_UNICODE_BREAK_UNKNOWN() {
        return (int)28L;
    }
    public static int G_UNICODE_BREAK_NEXT_LINE() {
        return (int)29L;
    }
    public static int G_UNICODE_BREAK_WORD_JOINER() {
        return (int)30L;
    }
    public static int G_UNICODE_BREAK_HANGUL_L_JAMO() {
        return (int)31L;
    }
    public static int G_UNICODE_BREAK_HANGUL_V_JAMO() {
        return (int)32L;
    }
    public static int G_UNICODE_BREAK_HANGUL_T_JAMO() {
        return (int)33L;
    }
    public static int G_UNICODE_BREAK_HANGUL_LV_SYLLABLE() {
        return (int)34L;
    }
    public static int G_UNICODE_BREAK_HANGUL_LVT_SYLLABLE() {
        return (int)35L;
    }
    public static int G_UNICODE_BREAK_CLOSE_PARANTHESIS() {
        return (int)36L;
    }
    public static int G_UNICODE_BREAK_CLOSE_PARENTHESIS() {
        return (int)36L;
    }
    public static int G_UNICODE_BREAK_CONDITIONAL_JAPANESE_STARTER() {
        return (int)37L;
    }
    public static int G_UNICODE_BREAK_HEBREW_LETTER() {
        return (int)38L;
    }
    public static int G_UNICODE_BREAK_REGIONAL_INDICATOR() {
        return (int)39L;
    }
    public static int G_UNICODE_BREAK_EMOJI_BASE() {
        return (int)40L;
    }
    public static int G_UNICODE_BREAK_EMOJI_MODIFIER() {
        return (int)41L;
    }
    public static int G_UNICODE_BREAK_ZERO_WIDTH_JOINER() {
        return (int)42L;
    }
    public static int G_UNICODE_SCRIPT_INVALID_CODE() {
        return (int)-1L;
    }
    public static int G_UNICODE_SCRIPT_COMMON() {
        return (int)0L;
    }
    public static int G_UNICODE_SCRIPT_INHERITED() {
        return (int)1L;
    }
    public static int G_UNICODE_SCRIPT_ARABIC() {
        return (int)2L;
    }
    public static int G_UNICODE_SCRIPT_ARMENIAN() {
        return (int)3L;
    }
    public static int G_UNICODE_SCRIPT_BENGALI() {
        return (int)4L;
    }
    public static int G_UNICODE_SCRIPT_BOPOMOFO() {
        return (int)5L;
    }
    public static int G_UNICODE_SCRIPT_CHEROKEE() {
        return (int)6L;
    }
    public static int G_UNICODE_SCRIPT_COPTIC() {
        return (int)7L;
    }
    public static int G_UNICODE_SCRIPT_CYRILLIC() {
        return (int)8L;
    }
    public static int G_UNICODE_SCRIPT_DESERET() {
        return (int)9L;
    }
    public static int G_UNICODE_SCRIPT_DEVANAGARI() {
        return (int)10L;
    }
    public static int G_UNICODE_SCRIPT_ETHIOPIC() {
        return (int)11L;
    }
    public static int G_UNICODE_SCRIPT_GEORGIAN() {
        return (int)12L;
    }
    public static int G_UNICODE_SCRIPT_GOTHIC() {
        return (int)13L;
    }
    public static int G_UNICODE_SCRIPT_GREEK() {
        return (int)14L;
    }
    public static int G_UNICODE_SCRIPT_GUJARATI() {
        return (int)15L;
    }
    public static int G_UNICODE_SCRIPT_GURMUKHI() {
        return (int)16L;
    }
    public static int G_UNICODE_SCRIPT_HAN() {
        return (int)17L;
    }
    public static int G_UNICODE_SCRIPT_HANGUL() {
        return (int)18L;
    }
    public static int G_UNICODE_SCRIPT_HEBREW() {
        return (int)19L;
    }
    public static int G_UNICODE_SCRIPT_HIRAGANA() {
        return (int)20L;
    }
    public static int G_UNICODE_SCRIPT_KANNADA() {
        return (int)21L;
    }
    public static int G_UNICODE_SCRIPT_KATAKANA() {
        return (int)22L;
    }
    public static int G_UNICODE_SCRIPT_KHMER() {
        return (int)23L;
    }
    public static int G_UNICODE_SCRIPT_LAO() {
        return (int)24L;
    }
    public static int G_UNICODE_SCRIPT_LATIN() {
        return (int)25L;
    }
    public static int G_UNICODE_SCRIPT_MALAYALAM() {
        return (int)26L;
    }
    public static int G_UNICODE_SCRIPT_MONGOLIAN() {
        return (int)27L;
    }
    public static int G_UNICODE_SCRIPT_MYANMAR() {
        return (int)28L;
    }
    public static int G_UNICODE_SCRIPT_OGHAM() {
        return (int)29L;
    }
    public static int G_UNICODE_SCRIPT_OLD_ITALIC() {
        return (int)30L;
    }
    public static int G_UNICODE_SCRIPT_ORIYA() {
        return (int)31L;
    }
    public static int G_UNICODE_SCRIPT_RUNIC() {
        return (int)32L;
    }
    public static int G_UNICODE_SCRIPT_SINHALA() {
        return (int)33L;
    }
    public static int G_UNICODE_SCRIPT_SYRIAC() {
        return (int)34L;
    }
    public static int G_UNICODE_SCRIPT_TAMIL() {
        return (int)35L;
    }
    public static int G_UNICODE_SCRIPT_TELUGU() {
        return (int)36L;
    }
    public static int G_UNICODE_SCRIPT_THAANA() {
        return (int)37L;
    }
    public static int G_UNICODE_SCRIPT_THAI() {
        return (int)38L;
    }
    public static int G_UNICODE_SCRIPT_TIBETAN() {
        return (int)39L;
    }
    public static int G_UNICODE_SCRIPT_CANADIAN_ABORIGINAL() {
        return (int)40L;
    }
    public static int G_UNICODE_SCRIPT_YI() {
        return (int)41L;
    }
    public static int G_UNICODE_SCRIPT_TAGALOG() {
        return (int)42L;
    }
    public static int G_UNICODE_SCRIPT_HANUNOO() {
        return (int)43L;
    }
    public static int G_UNICODE_SCRIPT_BUHID() {
        return (int)44L;
    }
    public static int G_UNICODE_SCRIPT_TAGBANWA() {
        return (int)45L;
    }
    public static int G_UNICODE_SCRIPT_BRAILLE() {
        return (int)46L;
    }
    public static int G_UNICODE_SCRIPT_CYPRIOT() {
        return (int)47L;
    }
    public static int G_UNICODE_SCRIPT_LIMBU() {
        return (int)48L;
    }
    public static int G_UNICODE_SCRIPT_OSMANYA() {
        return (int)49L;
    }
    public static int G_UNICODE_SCRIPT_SHAVIAN() {
        return (int)50L;
    }
    public static int G_UNICODE_SCRIPT_LINEAR_B() {
        return (int)51L;
    }
    public static int G_UNICODE_SCRIPT_TAI_LE() {
        return (int)52L;
    }
    public static int G_UNICODE_SCRIPT_UGARITIC() {
        return (int)53L;
    }
    public static int G_UNICODE_SCRIPT_NEW_TAI_LUE() {
        return (int)54L;
    }
    public static int G_UNICODE_SCRIPT_BUGINESE() {
        return (int)55L;
    }
    public static int G_UNICODE_SCRIPT_GLAGOLITIC() {
        return (int)56L;
    }
    public static int G_UNICODE_SCRIPT_TIFINAGH() {
        return (int)57L;
    }
    public static int G_UNICODE_SCRIPT_SYLOTI_NAGRI() {
        return (int)58L;
    }
    public static int G_UNICODE_SCRIPT_OLD_PERSIAN() {
        return (int)59L;
    }
    public static int G_UNICODE_SCRIPT_KHAROSHTHI() {
        return (int)60L;
    }
    public static int G_UNICODE_SCRIPT_UNKNOWN() {
        return (int)61L;
    }
    public static int G_UNICODE_SCRIPT_BALINESE() {
        return (int)62L;
    }
    public static int G_UNICODE_SCRIPT_CUNEIFORM() {
        return (int)63L;
    }
    public static int G_UNICODE_SCRIPT_PHOENICIAN() {
        return (int)64L;
    }
    public static int G_UNICODE_SCRIPT_PHAGS_PA() {
        return (int)65L;
    }
    public static int G_UNICODE_SCRIPT_NKO() {
        return (int)66L;
    }
    public static int G_UNICODE_SCRIPT_KAYAH_LI() {
        return (int)67L;
    }
    public static int G_UNICODE_SCRIPT_LEPCHA() {
        return (int)68L;
    }
    public static int G_UNICODE_SCRIPT_REJANG() {
        return (int)69L;
    }
    public static int G_UNICODE_SCRIPT_SUNDANESE() {
        return (int)70L;
    }
    public static int G_UNICODE_SCRIPT_SAURASHTRA() {
        return (int)71L;
    }
    public static int G_UNICODE_SCRIPT_CHAM() {
        return (int)72L;
    }
    public static int G_UNICODE_SCRIPT_OL_CHIKI() {
        return (int)73L;
    }
    public static int G_UNICODE_SCRIPT_VAI() {
        return (int)74L;
    }
    public static int G_UNICODE_SCRIPT_CARIAN() {
        return (int)75L;
    }
    public static int G_UNICODE_SCRIPT_LYCIAN() {
        return (int)76L;
    }
    public static int G_UNICODE_SCRIPT_LYDIAN() {
        return (int)77L;
    }
    public static int G_UNICODE_SCRIPT_AVESTAN() {
        return (int)78L;
    }
    public static int G_UNICODE_SCRIPT_BAMUM() {
        return (int)79L;
    }
    public static int G_UNICODE_SCRIPT_EGYPTIAN_HIEROGLYPHS() {
        return (int)80L;
    }
    public static int G_UNICODE_SCRIPT_IMPERIAL_ARAMAIC() {
        return (int)81L;
    }
    public static int G_UNICODE_SCRIPT_INSCRIPTIONAL_PAHLAVI() {
        return (int)82L;
    }
    public static int G_UNICODE_SCRIPT_INSCRIPTIONAL_PARTHIAN() {
        return (int)83L;
    }
    public static int G_UNICODE_SCRIPT_JAVANESE() {
        return (int)84L;
    }
    public static int G_UNICODE_SCRIPT_KAITHI() {
        return (int)85L;
    }
    public static int G_UNICODE_SCRIPT_LISU() {
        return (int)86L;
    }
    public static int G_UNICODE_SCRIPT_MEETEI_MAYEK() {
        return (int)87L;
    }
    public static int G_UNICODE_SCRIPT_OLD_SOUTH_ARABIAN() {
        return (int)88L;
    }
    public static int G_UNICODE_SCRIPT_OLD_TURKIC() {
        return (int)89L;
    }
    public static int G_UNICODE_SCRIPT_SAMARITAN() {
        return (int)90L;
    }
    public static int G_UNICODE_SCRIPT_TAI_THAM() {
        return (int)91L;
    }
    public static int G_UNICODE_SCRIPT_TAI_VIET() {
        return (int)92L;
    }
    public static int G_UNICODE_SCRIPT_BATAK() {
        return (int)93L;
    }
    public static int G_UNICODE_SCRIPT_BRAHMI() {
        return (int)94L;
    }
    public static int G_UNICODE_SCRIPT_MANDAIC() {
        return (int)95L;
    }
    public static int G_UNICODE_SCRIPT_CHAKMA() {
        return (int)96L;
    }
    public static int G_UNICODE_SCRIPT_MEROITIC_CURSIVE() {
        return (int)97L;
    }
    public static int G_UNICODE_SCRIPT_MEROITIC_HIEROGLYPHS() {
        return (int)98L;
    }
    public static int G_UNICODE_SCRIPT_MIAO() {
        return (int)99L;
    }
    public static int G_UNICODE_SCRIPT_SHARADA() {
        return (int)100L;
    }
    public static int G_UNICODE_SCRIPT_SORA_SOMPENG() {
        return (int)101L;
    }
    public static int G_UNICODE_SCRIPT_TAKRI() {
        return (int)102L;
    }
    public static int G_UNICODE_SCRIPT_BASSA_VAH() {
        return (int)103L;
    }
    public static int G_UNICODE_SCRIPT_CAUCASIAN_ALBANIAN() {
        return (int)104L;
    }
    public static int G_UNICODE_SCRIPT_DUPLOYAN() {
        return (int)105L;
    }
    public static int G_UNICODE_SCRIPT_ELBASAN() {
        return (int)106L;
    }
    public static int G_UNICODE_SCRIPT_GRANTHA() {
        return (int)107L;
    }
    public static int G_UNICODE_SCRIPT_KHOJKI() {
        return (int)108L;
    }
    public static int G_UNICODE_SCRIPT_KHUDAWADI() {
        return (int)109L;
    }
    public static int G_UNICODE_SCRIPT_LINEAR_A() {
        return (int)110L;
    }
    public static int G_UNICODE_SCRIPT_MAHAJANI() {
        return (int)111L;
    }
    public static int G_UNICODE_SCRIPT_MANICHAEAN() {
        return (int)112L;
    }
    public static int G_UNICODE_SCRIPT_MENDE_KIKAKUI() {
        return (int)113L;
    }
    public static int G_UNICODE_SCRIPT_MODI() {
        return (int)114L;
    }
    public static int G_UNICODE_SCRIPT_MRO() {
        return (int)115L;
    }
    public static int G_UNICODE_SCRIPT_NABATAEAN() {
        return (int)116L;
    }
    public static int G_UNICODE_SCRIPT_OLD_NORTH_ARABIAN() {
        return (int)117L;
    }
    public static int G_UNICODE_SCRIPT_OLD_PERMIC() {
        return (int)118L;
    }
    public static int G_UNICODE_SCRIPT_PAHAWH_HMONG() {
        return (int)119L;
    }
    public static int G_UNICODE_SCRIPT_PALMYRENE() {
        return (int)120L;
    }
    public static int G_UNICODE_SCRIPT_PAU_CIN_HAU() {
        return (int)121L;
    }
    public static int G_UNICODE_SCRIPT_PSALTER_PAHLAVI() {
        return (int)122L;
    }
    public static int G_UNICODE_SCRIPT_SIDDHAM() {
        return (int)123L;
    }
    public static int G_UNICODE_SCRIPT_TIRHUTA() {
        return (int)124L;
    }
    public static int G_UNICODE_SCRIPT_WARANG_CITI() {
        return (int)125L;
    }
    public static int G_UNICODE_SCRIPT_AHOM() {
        return (int)126L;
    }
    public static int G_UNICODE_SCRIPT_ANATOLIAN_HIEROGLYPHS() {
        return (int)127L;
    }
    public static int G_UNICODE_SCRIPT_HATRAN() {
        return (int)128L;
    }
    public static int G_UNICODE_SCRIPT_MULTANI() {
        return (int)129L;
    }
    public static int G_UNICODE_SCRIPT_OLD_HUNGARIAN() {
        return (int)130L;
    }
    public static int G_UNICODE_SCRIPT_SIGNWRITING() {
        return (int)131L;
    }
    public static int G_UNICODE_SCRIPT_ADLAM() {
        return (int)132L;
    }
    public static int G_UNICODE_SCRIPT_BHAIKSUKI() {
        return (int)133L;
    }
    public static int G_UNICODE_SCRIPT_MARCHEN() {
        return (int)134L;
    }
    public static int G_UNICODE_SCRIPT_NEWA() {
        return (int)135L;
    }
    public static int G_UNICODE_SCRIPT_OSAGE() {
        return (int)136L;
    }
    public static int G_UNICODE_SCRIPT_TANGUT() {
        return (int)137L;
    }
    public static int G_UNICODE_SCRIPT_MASARAM_GONDI() {
        return (int)138L;
    }
    public static int G_UNICODE_SCRIPT_NUSHU() {
        return (int)139L;
    }
    public static int G_UNICODE_SCRIPT_SOYOMBO() {
        return (int)140L;
    }
    public static int G_UNICODE_SCRIPT_ZANABAZAR_SQUARE() {
        return (int)141L;
    }
    public static int G_UNICODE_SCRIPT_DOGRA() {
        return (int)142L;
    }
    public static int G_UNICODE_SCRIPT_GUNJALA_GONDI() {
        return (int)143L;
    }
    public static int G_UNICODE_SCRIPT_HANIFI_ROHINGYA() {
        return (int)144L;
    }
    public static int G_UNICODE_SCRIPT_MAKASAR() {
        return (int)145L;
    }
    public static int G_UNICODE_SCRIPT_MEDEFAIDRIN() {
        return (int)146L;
    }
    public static int G_UNICODE_SCRIPT_OLD_SOGDIAN() {
        return (int)147L;
    }
    public static int G_UNICODE_SCRIPT_SOGDIAN() {
        return (int)148L;
    }
    public static int G_UNICODE_SCRIPT_ELYMAIC() {
        return (int)149L;
    }
    public static int G_UNICODE_SCRIPT_NANDINAGARI() {
        return (int)150L;
    }
    public static int G_UNICODE_SCRIPT_NYIAKENG_PUACHUE_HMONG() {
        return (int)151L;
    }
    public static int G_UNICODE_SCRIPT_WANCHO() {
        return (int)152L;
    }
    public static int G_UNICODE_SCRIPT_CHORASMIAN() {
        return (int)153L;
    }
    public static int G_UNICODE_SCRIPT_DIVES_AKURU() {
        return (int)154L;
    }
    public static int G_UNICODE_SCRIPT_KHITAN_SMALL_SCRIPT() {
        return (int)155L;
    }
    public static int G_UNICODE_SCRIPT_YEZIDI() {
        return (int)156L;
    }
    public static int G_UNICODE_SCRIPT_CYPRO_MINOAN() {
        return (int)157L;
    }
    public static int G_UNICODE_SCRIPT_OLD_UYGHUR() {
        return (int)158L;
    }
    public static int G_UNICODE_SCRIPT_TANGSA() {
        return (int)159L;
    }
    public static int G_UNICODE_SCRIPT_TOTO() {
        return (int)160L;
    }
    public static int G_UNICODE_SCRIPT_VITHKUQI() {
        return (int)161L;
    }
    public static int G_UNICODE_SCRIPT_MATH() {
        return (int)162L;
    }
    public static MethodHandle g_unicode_script_to_iso15924$MH() {
        return RuntimeHelper.requireNonNull(constants$183.g_unicode_script_to_iso15924$MH,"g_unicode_script_to_iso15924");
    }
    public static int g_unicode_script_to_iso15924 ( int script) {
        var mh$ = g_unicode_script_to_iso15924$MH();
        try {
            return (int)mh$.invokeExact(script);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unicode_script_from_iso15924$MH() {
        return RuntimeHelper.requireNonNull(constants$183.g_unicode_script_from_iso15924$MH,"g_unicode_script_from_iso15924");
    }
    public static int g_unicode_script_from_iso15924 ( int iso15924) {
        var mh$ = g_unicode_script_from_iso15924$MH();
        try {
            return (int)mh$.invokeExact(iso15924);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isalnum$MH() {
        return RuntimeHelper.requireNonNull(constants$183.g_unichar_isalnum$MH,"g_unichar_isalnum");
    }
    public static int g_unichar_isalnum ( int c) {
        var mh$ = g_unichar_isalnum$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isalpha$MH() {
        return RuntimeHelper.requireNonNull(constants$183.g_unichar_isalpha$MH,"g_unichar_isalpha");
    }
    public static int g_unichar_isalpha ( int c) {
        var mh$ = g_unichar_isalpha$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_iscntrl$MH() {
        return RuntimeHelper.requireNonNull(constants$183.g_unichar_iscntrl$MH,"g_unichar_iscntrl");
    }
    public static int g_unichar_iscntrl ( int c) {
        var mh$ = g_unichar_iscntrl$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isdigit$MH() {
        return RuntimeHelper.requireNonNull(constants$184.g_unichar_isdigit$MH,"g_unichar_isdigit");
    }
    public static int g_unichar_isdigit ( int c) {
        var mh$ = g_unichar_isdigit$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isgraph$MH() {
        return RuntimeHelper.requireNonNull(constants$184.g_unichar_isgraph$MH,"g_unichar_isgraph");
    }
    public static int g_unichar_isgraph ( int c) {
        var mh$ = g_unichar_isgraph$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_islower$MH() {
        return RuntimeHelper.requireNonNull(constants$184.g_unichar_islower$MH,"g_unichar_islower");
    }
    public static int g_unichar_islower ( int c) {
        var mh$ = g_unichar_islower$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isprint$MH() {
        return RuntimeHelper.requireNonNull(constants$184.g_unichar_isprint$MH,"g_unichar_isprint");
    }
    public static int g_unichar_isprint ( int c) {
        var mh$ = g_unichar_isprint$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_ispunct$MH() {
        return RuntimeHelper.requireNonNull(constants$184.g_unichar_ispunct$MH,"g_unichar_ispunct");
    }
    public static int g_unichar_ispunct ( int c) {
        var mh$ = g_unichar_ispunct$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isspace$MH() {
        return RuntimeHelper.requireNonNull(constants$184.g_unichar_isspace$MH,"g_unichar_isspace");
    }
    public static int g_unichar_isspace ( int c) {
        var mh$ = g_unichar_isspace$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isupper$MH() {
        return RuntimeHelper.requireNonNull(constants$185.g_unichar_isupper$MH,"g_unichar_isupper");
    }
    public static int g_unichar_isupper ( int c) {
        var mh$ = g_unichar_isupper$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isxdigit$MH() {
        return RuntimeHelper.requireNonNull(constants$185.g_unichar_isxdigit$MH,"g_unichar_isxdigit");
    }
    public static int g_unichar_isxdigit ( int c) {
        var mh$ = g_unichar_isxdigit$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_istitle$MH() {
        return RuntimeHelper.requireNonNull(constants$185.g_unichar_istitle$MH,"g_unichar_istitle");
    }
    public static int g_unichar_istitle ( int c) {
        var mh$ = g_unichar_istitle$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isdefined$MH() {
        return RuntimeHelper.requireNonNull(constants$185.g_unichar_isdefined$MH,"g_unichar_isdefined");
    }
    public static int g_unichar_isdefined ( int c) {
        var mh$ = g_unichar_isdefined$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_iswide$MH() {
        return RuntimeHelper.requireNonNull(constants$185.g_unichar_iswide$MH,"g_unichar_iswide");
    }
    public static int g_unichar_iswide ( int c) {
        var mh$ = g_unichar_iswide$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_iswide_cjk$MH() {
        return RuntimeHelper.requireNonNull(constants$185.g_unichar_iswide_cjk$MH,"g_unichar_iswide_cjk");
    }
    public static int g_unichar_iswide_cjk ( int c) {
        var mh$ = g_unichar_iswide_cjk$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_iszerowidth$MH() {
        return RuntimeHelper.requireNonNull(constants$186.g_unichar_iszerowidth$MH,"g_unichar_iszerowidth");
    }
    public static int g_unichar_iszerowidth ( int c) {
        var mh$ = g_unichar_iszerowidth$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_ismark$MH() {
        return RuntimeHelper.requireNonNull(constants$186.g_unichar_ismark$MH,"g_unichar_ismark");
    }
    public static int g_unichar_ismark ( int c) {
        var mh$ = g_unichar_ismark$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_toupper$MH() {
        return RuntimeHelper.requireNonNull(constants$186.g_unichar_toupper$MH,"g_unichar_toupper");
    }
    public static int g_unichar_toupper ( int c) {
        var mh$ = g_unichar_toupper$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_tolower$MH() {
        return RuntimeHelper.requireNonNull(constants$186.g_unichar_tolower$MH,"g_unichar_tolower");
    }
    public static int g_unichar_tolower ( int c) {
        var mh$ = g_unichar_tolower$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_totitle$MH() {
        return RuntimeHelper.requireNonNull(constants$186.g_unichar_totitle$MH,"g_unichar_totitle");
    }
    public static int g_unichar_totitle ( int c) {
        var mh$ = g_unichar_totitle$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_digit_value$MH() {
        return RuntimeHelper.requireNonNull(constants$186.g_unichar_digit_value$MH,"g_unichar_digit_value");
    }
    public static int g_unichar_digit_value ( int c) {
        var mh$ = g_unichar_digit_value$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_xdigit_value$MH() {
        return RuntimeHelper.requireNonNull(constants$187.g_unichar_xdigit_value$MH,"g_unichar_xdigit_value");
    }
    public static int g_unichar_xdigit_value ( int c) {
        var mh$ = g_unichar_xdigit_value$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_type$MH() {
        return RuntimeHelper.requireNonNull(constants$187.g_unichar_type$MH,"g_unichar_type");
    }
    public static int g_unichar_type ( int c) {
        var mh$ = g_unichar_type$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_break_type$MH() {
        return RuntimeHelper.requireNonNull(constants$187.g_unichar_break_type$MH,"g_unichar_break_type");
    }
    public static int g_unichar_break_type ( int c) {
        var mh$ = g_unichar_break_type$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_combining_class$MH() {
        return RuntimeHelper.requireNonNull(constants$187.g_unichar_combining_class$MH,"g_unichar_combining_class");
    }
    public static int g_unichar_combining_class ( int uc) {
        var mh$ = g_unichar_combining_class$MH();
        try {
            return (int)mh$.invokeExact(uc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_get_mirror_char$MH() {
        return RuntimeHelper.requireNonNull(constants$187.g_unichar_get_mirror_char$MH,"g_unichar_get_mirror_char");
    }
    public static int g_unichar_get_mirror_char ( int ch,  Addressable mirrored_ch) {
        var mh$ = g_unichar_get_mirror_char$MH();
        try {
            return (int)mh$.invokeExact(ch, mirrored_ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_get_script$MH() {
        return RuntimeHelper.requireNonNull(constants$187.g_unichar_get_script$MH,"g_unichar_get_script");
    }
    public static int g_unichar_get_script ( int ch) {
        var mh$ = g_unichar_get_script$MH();
        try {
            return (int)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_validate$MH() {
        return RuntimeHelper.requireNonNull(constants$188.g_unichar_validate$MH,"g_unichar_validate");
    }
    public static int g_unichar_validate ( int ch) {
        var mh$ = g_unichar_validate$MH();
        try {
            return (int)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_compose$MH() {
        return RuntimeHelper.requireNonNull(constants$188.g_unichar_compose$MH,"g_unichar_compose");
    }
    public static int g_unichar_compose ( int a,  int b,  Addressable ch) {
        var mh$ = g_unichar_compose$MH();
        try {
            return (int)mh$.invokeExact(a, b, ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_decompose$MH() {
        return RuntimeHelper.requireNonNull(constants$188.g_unichar_decompose$MH,"g_unichar_decompose");
    }
    public static int g_unichar_decompose ( int ch,  Addressable a,  Addressable b) {
        var mh$ = g_unichar_decompose$MH();
        try {
            return (int)mh$.invokeExact(ch, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_fully_decompose$MH() {
        return RuntimeHelper.requireNonNull(constants$188.g_unichar_fully_decompose$MH,"g_unichar_fully_decompose");
    }
    public static long g_unichar_fully_decompose ( int ch,  int compat,  Addressable result,  long result_len) {
        var mh$ = g_unichar_fully_decompose$MH();
        try {
            return (long)mh$.invokeExact(ch, compat, result, result_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unicode_canonical_ordering$MH() {
        return RuntimeHelper.requireNonNull(constants$188.g_unicode_canonical_ordering$MH,"g_unicode_canonical_ordering");
    }
    public static void g_unicode_canonical_ordering ( Addressable string,  long len) {
        var mh$ = g_unicode_canonical_ordering$MH();
        try {
            mh$.invokeExact(string, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unicode_canonical_decomposition$MH() {
        return RuntimeHelper.requireNonNull(constants$188.g_unicode_canonical_decomposition$MH,"g_unicode_canonical_decomposition");
    }
    public static MemoryAddress g_unicode_canonical_decomposition ( int ch,  Addressable result_len) {
        var mh$ = g_unicode_canonical_decomposition$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ch, result_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout g_utf8_skip$LAYOUT() {
        return constants$189.g_utf8_skip$LAYOUT;
    }
    public static VarHandle g_utf8_skip$VH() {
        return constants$189.g_utf8_skip$VH;
    }
    public static MemorySegment g_utf8_skip$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$189.g_utf8_skip$SEGMENT,"g_utf8_skip");
    }
    public static MemoryAddress g_utf8_skip$get() {
        return (java.lang.foreign.MemoryAddress) constants$189.g_utf8_skip$VH.get(RuntimeHelper.requireNonNull(constants$189.g_utf8_skip$SEGMENT, "g_utf8_skip"));
    }
    public static void g_utf8_skip$set( MemoryAddress x) {
        constants$189.g_utf8_skip$VH.set(RuntimeHelper.requireNonNull(constants$189.g_utf8_skip$SEGMENT, "g_utf8_skip"), x);
    }
    public static MethodHandle g_utf8_get_char$MH() {
        return RuntimeHelper.requireNonNull(constants$189.g_utf8_get_char$MH,"g_utf8_get_char");
    }
    public static int g_utf8_get_char ( Addressable p) {
        var mh$ = g_utf8_get_char$MH();
        try {
            return (int)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_get_char_validated$MH() {
        return RuntimeHelper.requireNonNull(constants$189.g_utf8_get_char_validated$MH,"g_utf8_get_char_validated");
    }
    public static int g_utf8_get_char_validated ( Addressable p,  long max_len) {
        var mh$ = g_utf8_get_char_validated$MH();
        try {
            return (int)mh$.invokeExact(p, max_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_offset_to_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$189.g_utf8_offset_to_pointer$MH,"g_utf8_offset_to_pointer");
    }
    public static MemoryAddress g_utf8_offset_to_pointer ( Addressable str,  long offset) {
        var mh$ = g_utf8_offset_to_pointer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_pointer_to_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$189.g_utf8_pointer_to_offset$MH,"g_utf8_pointer_to_offset");
    }
    public static long g_utf8_pointer_to_offset ( Addressable str,  Addressable pos) {
        var mh$ = g_utf8_pointer_to_offset$MH();
        try {
            return (long)mh$.invokeExact(str, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_prev_char$MH() {
        return RuntimeHelper.requireNonNull(constants$189.g_utf8_prev_char$MH,"g_utf8_prev_char");
    }
    public static MemoryAddress g_utf8_prev_char ( Addressable p) {
        var mh$ = g_utf8_prev_char$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_find_next_char$MH() {
        return RuntimeHelper.requireNonNull(constants$190.g_utf8_find_next_char$MH,"g_utf8_find_next_char");
    }
    public static MemoryAddress g_utf8_find_next_char ( Addressable p,  Addressable end) {
        var mh$ = g_utf8_find_next_char$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_find_prev_char$MH() {
        return RuntimeHelper.requireNonNull(constants$190.g_utf8_find_prev_char$MH,"g_utf8_find_prev_char");
    }
    public static MemoryAddress g_utf8_find_prev_char ( Addressable str,  Addressable p) {
        var mh$ = g_utf8_find_prev_char$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strlen$MH() {
        return RuntimeHelper.requireNonNull(constants$190.g_utf8_strlen$MH,"g_utf8_strlen");
    }
    public static long g_utf8_strlen ( Addressable p,  long max) {
        var mh$ = g_utf8_strlen$MH();
        try {
            return (long)mh$.invokeExact(p, max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_substring$MH() {
        return RuntimeHelper.requireNonNull(constants$190.g_utf8_substring$MH,"g_utf8_substring");
    }
    public static MemoryAddress g_utf8_substring ( Addressable str,  long start_pos,  long end_pos) {
        var mh$ = g_utf8_substring$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strncpy$MH() {
        return RuntimeHelper.requireNonNull(constants$190.g_utf8_strncpy$MH,"g_utf8_strncpy");
    }
    public static MemoryAddress g_utf8_strncpy ( Addressable dest,  Addressable src,  long n) {
        var mh$ = g_utf8_strncpy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(dest, src, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strchr$MH() {
        return RuntimeHelper.requireNonNull(constants$190.g_utf8_strchr$MH,"g_utf8_strchr");
    }
    public static MemoryAddress g_utf8_strchr ( Addressable p,  long len,  int c) {
        var mh$ = g_utf8_strchr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p, len, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strrchr$MH() {
        return RuntimeHelper.requireNonNull(constants$191.g_utf8_strrchr$MH,"g_utf8_strrchr");
    }
    public static MemoryAddress g_utf8_strrchr ( Addressable p,  long len,  int c) {
        var mh$ = g_utf8_strrchr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p, len, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strreverse$MH() {
        return RuntimeHelper.requireNonNull(constants$191.g_utf8_strreverse$MH,"g_utf8_strreverse");
    }
    public static MemoryAddress g_utf8_strreverse ( Addressable str,  long len) {
        var mh$ = g_utf8_strreverse$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_to_utf16$MH() {
        return RuntimeHelper.requireNonNull(constants$191.g_utf8_to_utf16$MH,"g_utf8_to_utf16");
    }
    public static MemoryAddress g_utf8_to_utf16 ( Addressable str,  long len,  Addressable items_read,  Addressable items_written,  Addressable error) {
        var mh$ = g_utf8_to_utf16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str, len, items_read, items_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_to_ucs4$MH() {
        return RuntimeHelper.requireNonNull(constants$191.g_utf8_to_ucs4$MH,"g_utf8_to_ucs4");
    }
    public static MemoryAddress g_utf8_to_ucs4 ( Addressable str,  long len,  Addressable items_read,  Addressable items_written,  Addressable error) {
        var mh$ = g_utf8_to_ucs4$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str, len, items_read, items_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_to_ucs4_fast$MH() {
        return RuntimeHelper.requireNonNull(constants$191.g_utf8_to_ucs4_fast$MH,"g_utf8_to_ucs4_fast");
    }
    public static MemoryAddress g_utf8_to_ucs4_fast ( Addressable str,  long len,  Addressable items_written) {
        var mh$ = g_utf8_to_ucs4_fast$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str, len, items_written);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf16_to_ucs4$MH() {
        return RuntimeHelper.requireNonNull(constants$191.g_utf16_to_ucs4$MH,"g_utf16_to_ucs4");
    }
    public static MemoryAddress g_utf16_to_ucs4 ( Addressable str,  long len,  Addressable items_read,  Addressable items_written,  Addressable error) {
        var mh$ = g_utf16_to_ucs4$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str, len, items_read, items_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf16_to_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$192.g_utf16_to_utf8$MH,"g_utf16_to_utf8");
    }
    public static MemoryAddress g_utf16_to_utf8 ( Addressable str,  long len,  Addressable items_read,  Addressable items_written,  Addressable error) {
        var mh$ = g_utf16_to_utf8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str, len, items_read, items_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ucs4_to_utf16$MH() {
        return RuntimeHelper.requireNonNull(constants$192.g_ucs4_to_utf16$MH,"g_ucs4_to_utf16");
    }
    public static MemoryAddress g_ucs4_to_utf16 ( Addressable str,  long len,  Addressable items_read,  Addressable items_written,  Addressable error) {
        var mh$ = g_ucs4_to_utf16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str, len, items_read, items_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ucs4_to_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$192.g_ucs4_to_utf8$MH,"g_ucs4_to_utf8");
    }
    public static MemoryAddress g_ucs4_to_utf8 ( Addressable str,  long len,  Addressable items_read,  Addressable items_written,  Addressable error) {
        var mh$ = g_ucs4_to_utf8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str, len, items_read, items_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_to_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$192.g_unichar_to_utf8$MH,"g_unichar_to_utf8");
    }
    public static int g_unichar_to_utf8 ( int c,  Addressable outbuf) {
        var mh$ = g_unichar_to_utf8$MH();
        try {
            return (int)mh$.invokeExact(c, outbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_validate$MH() {
        return RuntimeHelper.requireNonNull(constants$192.g_utf8_validate$MH,"g_utf8_validate");
    }
    public static int g_utf8_validate ( Addressable str,  long max_len,  Addressable end) {
        var mh$ = g_utf8_validate$MH();
        try {
            return (int)mh$.invokeExact(str, max_len, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_validate_len$MH() {
        return RuntimeHelper.requireNonNull(constants$192.g_utf8_validate_len$MH,"g_utf8_validate_len");
    }
    public static int g_utf8_validate_len ( Addressable str,  long max_len,  Addressable end) {
        var mh$ = g_utf8_validate_len$MH();
        try {
            return (int)mh$.invokeExact(str, max_len, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strup$MH() {
        return RuntimeHelper.requireNonNull(constants$193.g_utf8_strup$MH,"g_utf8_strup");
    }
    public static MemoryAddress g_utf8_strup ( Addressable str,  long len) {
        var mh$ = g_utf8_strup$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strdown$MH() {
        return RuntimeHelper.requireNonNull(constants$193.g_utf8_strdown$MH,"g_utf8_strdown");
    }
    public static MemoryAddress g_utf8_strdown ( Addressable str,  long len) {
        var mh$ = g_utf8_strdown$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_casefold$MH() {
        return RuntimeHelper.requireNonNull(constants$193.g_utf8_casefold$MH,"g_utf8_casefold");
    }
    public static MemoryAddress g_utf8_casefold ( Addressable str,  long len) {
        var mh$ = g_utf8_casefold$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_NORMALIZE_DEFAULT() {
        return (int)0L;
    }
    public static int G_NORMALIZE_NFD() {
        return (int)0L;
    }
    public static int G_NORMALIZE_DEFAULT_COMPOSE() {
        return (int)1L;
    }
    public static int G_NORMALIZE_NFC() {
        return (int)1L;
    }
    public static int G_NORMALIZE_ALL() {
        return (int)2L;
    }
    public static int G_NORMALIZE_NFKD() {
        return (int)2L;
    }
    public static int G_NORMALIZE_ALL_COMPOSE() {
        return (int)3L;
    }
    public static int G_NORMALIZE_NFKC() {
        return (int)3L;
    }
    public static MethodHandle g_utf8_normalize$MH() {
        return RuntimeHelper.requireNonNull(constants$193.g_utf8_normalize$MH,"g_utf8_normalize");
    }
    public static MemoryAddress g_utf8_normalize ( Addressable str,  long len,  int mode) {
        var mh$ = g_utf8_normalize$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str, len, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_collate$MH() {
        return RuntimeHelper.requireNonNull(constants$193.g_utf8_collate$MH,"g_utf8_collate");
    }
    public static int g_utf8_collate ( Addressable str1,  Addressable str2) {
        var mh$ = g_utf8_collate$MH();
        try {
            return (int)mh$.invokeExact(str1, str2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_collate_key$MH() {
        return RuntimeHelper.requireNonNull(constants$193.g_utf8_collate_key$MH,"g_utf8_collate_key");
    }
    public static MemoryAddress g_utf8_collate_key ( Addressable str,  long len) {
        var mh$ = g_utf8_collate_key$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_collate_key_for_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$194.g_utf8_collate_key_for_filename$MH,"g_utf8_collate_key_for_filename");
    }
    public static MemoryAddress g_utf8_collate_key_for_filename ( Addressable str,  long len) {
        var mh$ = g_utf8_collate_key_for_filename$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_make_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$194.g_utf8_make_valid$MH,"g_utf8_make_valid");
    }
    public static MemoryAddress g_utf8_make_valid ( Addressable str,  long len) {
        var mh$ = g_utf8_make_valid$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_new$MH() {
        return RuntimeHelper.requireNonNull(constants$194.g_string_new$MH,"g_string_new");
    }
    public static MemoryAddress g_string_new ( Addressable init) {
        var mh$ = g_string_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(init);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_new_len$MH() {
        return RuntimeHelper.requireNonNull(constants$194.g_string_new_len$MH,"g_string_new_len");
    }
    public static MemoryAddress g_string_new_len ( Addressable init,  long len) {
        var mh$ = g_string_new_len$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(init, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_sized_new$MH() {
        return RuntimeHelper.requireNonNull(constants$194.g_string_sized_new$MH,"g_string_sized_new");
    }
    public static MemoryAddress g_string_sized_new ( long dfl_size) {
        var mh$ = g_string_sized_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(dfl_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_free$MH() {
        return RuntimeHelper.requireNonNull(constants$194.g_string_free$MH,"g_string_free");
    }
    public static MemoryAddress g_string_free ( Addressable string,  int free_segment) {
        var mh$ = g_string_free$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, free_segment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_free_to_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$195.g_string_free_to_bytes$MH,"g_string_free_to_bytes");
    }
    public static MemoryAddress g_string_free_to_bytes ( Addressable string) {
        var mh$ = g_string_free_to_bytes$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$195.g_string_equal$MH,"g_string_equal");
    }
    public static int g_string_equal ( Addressable v,  Addressable v2) {
        var mh$ = g_string_equal$MH();
        try {
            return (int)mh$.invokeExact(v, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$195.g_string_hash$MH,"g_string_hash");
    }
    public static int g_string_hash ( Addressable str) {
        var mh$ = g_string_hash$MH();
        try {
            return (int)mh$.invokeExact(str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_assign$MH() {
        return RuntimeHelper.requireNonNull(constants$195.g_string_assign$MH,"g_string_assign");
    }
    public static MemoryAddress g_string_assign ( Addressable string,  Addressable rval) {
        var mh$ = g_string_assign$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, rval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_truncate$MH() {
        return RuntimeHelper.requireNonNull(constants$195.g_string_truncate$MH,"g_string_truncate");
    }
    public static MemoryAddress g_string_truncate ( Addressable string,  long len) {
        var mh$ = g_string_truncate$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_set_size$MH() {
        return RuntimeHelper.requireNonNull(constants$195.g_string_set_size$MH,"g_string_set_size");
    }
    public static MemoryAddress g_string_set_size ( Addressable string,  long len) {
        var mh$ = g_string_set_size$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_insert_len$MH() {
        return RuntimeHelper.requireNonNull(constants$196.g_string_insert_len$MH,"g_string_insert_len");
    }
    public static MemoryAddress g_string_insert_len ( Addressable string,  long pos,  Addressable val,  long len) {
        var mh$ = g_string_insert_len$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, pos, val, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append$MH() {
        return RuntimeHelper.requireNonNull(constants$196.g_string_append$MH,"g_string_append");
    }
    public static MemoryAddress g_string_append ( Addressable string,  Addressable val) {
        var mh$ = g_string_append$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, val);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_len$MH() {
        return RuntimeHelper.requireNonNull(constants$196.g_string_append_len$MH,"g_string_append_len");
    }
    public static MemoryAddress g_string_append_len ( Addressable string,  Addressable val,  long len) {
        var mh$ = g_string_append_len$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, val, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_c$MH() {
        return RuntimeHelper.requireNonNull(constants$196.g_string_append_c$MH,"g_string_append_c");
    }
    public static MemoryAddress g_string_append_c ( Addressable string,  byte c) {
        var mh$ = g_string_append_c$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$196.g_string_append_unichar$MH,"g_string_append_unichar");
    }
    public static MemoryAddress g_string_append_unichar ( Addressable string,  int wc) {
        var mh$ = g_string_append_unichar$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, wc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$196.g_string_prepend$MH,"g_string_prepend");
    }
    public static MemoryAddress g_string_prepend ( Addressable string,  Addressable val) {
        var mh$ = g_string_prepend$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, val);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_prepend_c$MH() {
        return RuntimeHelper.requireNonNull(constants$197.g_string_prepend_c$MH,"g_string_prepend_c");
    }
    public static MemoryAddress g_string_prepend_c ( Addressable string,  byte c) {
        var mh$ = g_string_prepend_c$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_prepend_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$197.g_string_prepend_unichar$MH,"g_string_prepend_unichar");
    }
    public static MemoryAddress g_string_prepend_unichar ( Addressable string,  int wc) {
        var mh$ = g_string_prepend_unichar$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, wc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_prepend_len$MH() {
        return RuntimeHelper.requireNonNull(constants$197.g_string_prepend_len$MH,"g_string_prepend_len");
    }
    public static MemoryAddress g_string_prepend_len ( Addressable string,  Addressable val,  long len) {
        var mh$ = g_string_prepend_len$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, val, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$197.g_string_insert$MH,"g_string_insert");
    }
    public static MemoryAddress g_string_insert ( Addressable string,  long pos,  Addressable val) {
        var mh$ = g_string_insert$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, pos, val);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_insert_c$MH() {
        return RuntimeHelper.requireNonNull(constants$197.g_string_insert_c$MH,"g_string_insert_c");
    }
    public static MemoryAddress g_string_insert_c ( Addressable string,  long pos,  byte c) {
        var mh$ = g_string_insert_c$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, pos, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_insert_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$197.g_string_insert_unichar$MH,"g_string_insert_unichar");
    }
    public static MemoryAddress g_string_insert_unichar ( Addressable string,  long pos,  int wc) {
        var mh$ = g_string_insert_unichar$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, pos, wc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_overwrite$MH() {
        return RuntimeHelper.requireNonNull(constants$198.g_string_overwrite$MH,"g_string_overwrite");
    }
    public static MemoryAddress g_string_overwrite ( Addressable string,  long pos,  Addressable val) {
        var mh$ = g_string_overwrite$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, pos, val);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_overwrite_len$MH() {
        return RuntimeHelper.requireNonNull(constants$198.g_string_overwrite_len$MH,"g_string_overwrite_len");
    }
    public static MemoryAddress g_string_overwrite_len ( Addressable string,  long pos,  Addressable val,  long len) {
        var mh$ = g_string_overwrite_len$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, pos, val, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_erase$MH() {
        return RuntimeHelper.requireNonNull(constants$198.g_string_erase$MH,"g_string_erase");
    }
    public static MemoryAddress g_string_erase ( Addressable string,  long pos,  long len) {
        var mh$ = g_string_erase$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, pos, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_replace$MH() {
        return RuntimeHelper.requireNonNull(constants$198.g_string_replace$MH,"g_string_replace");
    }
    public static int g_string_replace ( Addressable string,  Addressable find,  Addressable replace,  int limit) {
        var mh$ = g_string_replace$MH();
        try {
            return (int)mh$.invokeExact(string, find, replace, limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_ascii_down$MH() {
        return RuntimeHelper.requireNonNull(constants$198.g_string_ascii_down$MH,"g_string_ascii_down");
    }
    public static MemoryAddress g_string_ascii_down ( Addressable string) {
        var mh$ = g_string_ascii_down$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_ascii_up$MH() {
        return RuntimeHelper.requireNonNull(constants$198.g_string_ascii_up$MH,"g_string_ascii_up");
    }
    public static MemoryAddress g_string_ascii_up ( Addressable string) {
        var mh$ = g_string_ascii_up$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_vprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$199.g_string_vprintf$MH,"g_string_vprintf");
    }
    public static void g_string_vprintf ( Addressable string,  Addressable format,  Addressable args) {
        var mh$ = g_string_vprintf$MH();
        try {
            mh$.invokeExact(string, format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_printf$MH() {
        return RuntimeHelper.requireNonNull(constants$199.g_string_printf$MH,"g_string_printf");
    }
    public static void g_string_printf ( Addressable string,  Addressable format, Object... x2) {
        var mh$ = g_string_printf$MH();
        try {
            mh$.invokeExact(string, format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_vprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$199.g_string_append_vprintf$MH,"g_string_append_vprintf");
    }
    public static void g_string_append_vprintf ( Addressable string,  Addressable format,  Addressable args) {
        var mh$ = g_string_append_vprintf$MH();
        try {
            mh$.invokeExact(string, format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_printf$MH() {
        return RuntimeHelper.requireNonNull(constants$199.g_string_append_printf$MH,"g_string_append_printf");
    }
    public static void g_string_append_printf ( Addressable string,  Addressable format, Object... x2) {
        var mh$ = g_string_append_printf$MH();
        try {
            mh$.invokeExact(string, format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_uri_escaped$MH() {
        return RuntimeHelper.requireNonNull(constants$199.g_string_append_uri_escaped$MH,"g_string_append_uri_escaped");
    }
    public static MemoryAddress g_string_append_uri_escaped ( Addressable string,  Addressable unescaped,  Addressable reserved_chars_allowed,  int allow_utf8) {
        var mh$ = g_string_append_uri_escaped$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string, unescaped, reserved_chars_allowed, allow_utf8);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_c_inline$MH() {
        return RuntimeHelper.requireNonNull(constants$199.g_string_append_c_inline$MH,"g_string_append_c_inline");
    }
    public static MemoryAddress g_string_append_c_inline ( Addressable gstring,  byte c) {
        var mh$ = g_string_append_c_inline$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(gstring, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_down$MH() {
        return RuntimeHelper.requireNonNull(constants$200.g_string_down$MH,"g_string_down");
    }
    public static MemoryAddress g_string_down ( Addressable string) {
        var mh$ = g_string_down$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_up$MH() {
        return RuntimeHelper.requireNonNull(constants$200.g_string_up$MH,"g_string_up");
    }
    public static MemoryAddress g_string_up ( Addressable string) {
        var mh$ = g_string_up$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_IO_ERROR_NONE() {
        return (int)0L;
    }
    public static int G_IO_ERROR_AGAIN() {
        return (int)1L;
    }
    public static int G_IO_ERROR_INVAL() {
        return (int)2L;
    }
    public static int G_IO_ERROR_UNKNOWN() {
        return (int)3L;
    }
    public static int G_IO_CHANNEL_ERROR_FBIG() {
        return (int)0L;
    }
    public static int G_IO_CHANNEL_ERROR_INVAL() {
        return (int)1L;
    }
    public static int G_IO_CHANNEL_ERROR_IO() {
        return (int)2L;
    }
    public static int G_IO_CHANNEL_ERROR_ISDIR() {
        return (int)3L;
    }
    public static int G_IO_CHANNEL_ERROR_NOSPC() {
        return (int)4L;
    }
    public static int G_IO_CHANNEL_ERROR_NXIO() {
        return (int)5L;
    }
    public static int G_IO_CHANNEL_ERROR_OVERFLOW() {
        return (int)6L;
    }
    public static int G_IO_CHANNEL_ERROR_PIPE() {
        return (int)7L;
    }
    public static int G_IO_CHANNEL_ERROR_FAILED() {
        return (int)8L;
    }
    public static int G_IO_STATUS_ERROR() {
        return (int)0L;
    }
    public static int G_IO_STATUS_NORMAL() {
        return (int)1L;
    }
    public static int G_IO_STATUS_EOF() {
        return (int)2L;
    }
    public static int G_IO_STATUS_AGAIN() {
        return (int)3L;
    }
    public static int G_SEEK_CUR() {
        return (int)0L;
    }
    public static int G_SEEK_SET() {
        return (int)1L;
    }
    public static int G_SEEK_END() {
        return (int)2L;
    }
    public static int G_IO_FLAG_APPEND() {
        return (int)1L;
    }
    public static int G_IO_FLAG_NONBLOCK() {
        return (int)2L;
    }
    public static int G_IO_FLAG_IS_READABLE() {
        return (int)4L;
    }
    public static int G_IO_FLAG_IS_WRITABLE() {
        return (int)8L;
    }
    public static int G_IO_FLAG_IS_WRITEABLE() {
        return (int)8L;
    }
    public static int G_IO_FLAG_IS_SEEKABLE() {
        return (int)16L;
    }
    public static int G_IO_FLAG_MASK() {
        return (int)31L;
    }
    public static int G_IO_FLAG_GET_MASK() {
        return (int)31L;
    }
    public static int G_IO_FLAG_SET_MASK() {
        return (int)3L;
    }
    public static MethodHandle g_io_channel_init$MH() {
        return RuntimeHelper.requireNonNull(constants$200.g_io_channel_init$MH,"g_io_channel_init");
    }
    public static void g_io_channel_init ( Addressable channel) {
        var mh$ = g_io_channel_init$MH();
        try {
            mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$200.g_io_channel_ref$MH,"g_io_channel_ref");
    }
    public static MemoryAddress g_io_channel_ref ( Addressable channel) {
        var mh$ = g_io_channel_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$201.g_io_channel_unref$MH,"g_io_channel_unref");
    }
    public static void g_io_channel_unref ( Addressable channel) {
        var mh$ = g_io_channel_unref$MH();
        try {
            mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_read$MH() {
        return RuntimeHelper.requireNonNull(constants$201.g_io_channel_read$MH,"g_io_channel_read");
    }
    public static int g_io_channel_read ( Addressable channel,  Addressable buf,  long count,  Addressable bytes_read) {
        var mh$ = g_io_channel_read$MH();
        try {
            return (int)mh$.invokeExact(channel, buf, count, bytes_read);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_write$MH() {
        return RuntimeHelper.requireNonNull(constants$201.g_io_channel_write$MH,"g_io_channel_write");
    }
    public static int g_io_channel_write ( Addressable channel,  Addressable buf,  long count,  Addressable bytes_written) {
        var mh$ = g_io_channel_write$MH();
        try {
            return (int)mh$.invokeExact(channel, buf, count, bytes_written);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_seek$MH() {
        return RuntimeHelper.requireNonNull(constants$201.g_io_channel_seek$MH,"g_io_channel_seek");
    }
    public static int g_io_channel_seek ( Addressable channel,  long offset,  int type) {
        var mh$ = g_io_channel_seek$MH();
        try {
            return (int)mh$.invokeExact(channel, offset, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_close$MH() {
        return RuntimeHelper.requireNonNull(constants$201.g_io_channel_close$MH,"g_io_channel_close");
    }
    public static void g_io_channel_close ( Addressable channel) {
        var mh$ = g_io_channel_close$MH();
        try {
            mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_shutdown$MH() {
        return RuntimeHelper.requireNonNull(constants$201.g_io_channel_shutdown$MH,"g_io_channel_shutdown");
    }
    public static int g_io_channel_shutdown ( Addressable channel,  int flush,  Addressable err) {
        var mh$ = g_io_channel_shutdown$MH();
        try {
            return (int)mh$.invokeExact(channel, flush, err);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_add_watch_full$MH() {
        return RuntimeHelper.requireNonNull(constants$202.g_io_add_watch_full$MH,"g_io_add_watch_full");
    }
    public static int g_io_add_watch_full ( Addressable channel,  int priority,  int condition,  Addressable func,  Addressable user_data,  Addressable notify) {
        var mh$ = g_io_add_watch_full$MH();
        try {
            return (int)mh$.invokeExact(channel, priority, condition, func, user_data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_create_watch$MH() {
        return RuntimeHelper.requireNonNull(constants$202.g_io_create_watch$MH,"g_io_create_watch");
    }
    public static MemoryAddress g_io_create_watch ( Addressable channel,  int condition) {
        var mh$ = g_io_create_watch$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(channel, condition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_add_watch$MH() {
        return RuntimeHelper.requireNonNull(constants$202.g_io_add_watch$MH,"g_io_add_watch");
    }
    public static int g_io_add_watch ( Addressable channel,  int condition,  Addressable func,  Addressable user_data) {
        var mh$ = g_io_add_watch$MH();
        try {
            return (int)mh$.invokeExact(channel, condition, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_set_buffer_size$MH() {
        return RuntimeHelper.requireNonNull(constants$202.g_io_channel_set_buffer_size$MH,"g_io_channel_set_buffer_size");
    }
    public static void g_io_channel_set_buffer_size ( Addressable channel,  long size) {
        var mh$ = g_io_channel_set_buffer_size$MH();
        try {
            mh$.invokeExact(channel, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_buffer_size$MH() {
        return RuntimeHelper.requireNonNull(constants$202.g_io_channel_get_buffer_size$MH,"g_io_channel_get_buffer_size");
    }
    public static long g_io_channel_get_buffer_size ( Addressable channel) {
        var mh$ = g_io_channel_get_buffer_size$MH();
        try {
            return (long)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_buffer_condition$MH() {
        return RuntimeHelper.requireNonNull(constants$202.g_io_channel_get_buffer_condition$MH,"g_io_channel_get_buffer_condition");
    }
    public static int g_io_channel_get_buffer_condition ( Addressable channel) {
        var mh$ = g_io_channel_get_buffer_condition$MH();
        try {
            return (int)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$203.g_io_channel_set_flags$MH,"g_io_channel_set_flags");
    }
    public static int g_io_channel_set_flags ( Addressable channel,  int flags,  Addressable error) {
        var mh$ = g_io_channel_set_flags$MH();
        try {
            return (int)mh$.invokeExact(channel, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$203.g_io_channel_get_flags$MH,"g_io_channel_get_flags");
    }
    public static int g_io_channel_get_flags ( Addressable channel) {
        var mh$ = g_io_channel_get_flags$MH();
        try {
            return (int)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_set_line_term$MH() {
        return RuntimeHelper.requireNonNull(constants$203.g_io_channel_set_line_term$MH,"g_io_channel_set_line_term");
    }
    public static void g_io_channel_set_line_term ( Addressable channel,  Addressable line_term,  int length) {
        var mh$ = g_io_channel_set_line_term$MH();
        try {
            mh$.invokeExact(channel, line_term, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_line_term$MH() {
        return RuntimeHelper.requireNonNull(constants$203.g_io_channel_get_line_term$MH,"g_io_channel_get_line_term");
    }
    public static MemoryAddress g_io_channel_get_line_term ( Addressable channel,  Addressable length) {
        var mh$ = g_io_channel_get_line_term$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(channel, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_set_buffered$MH() {
        return RuntimeHelper.requireNonNull(constants$203.g_io_channel_set_buffered$MH,"g_io_channel_set_buffered");
    }
    public static void g_io_channel_set_buffered ( Addressable channel,  int buffered) {
        var mh$ = g_io_channel_set_buffered$MH();
        try {
            mh$.invokeExact(channel, buffered);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_buffered$MH() {
        return RuntimeHelper.requireNonNull(constants$203.g_io_channel_get_buffered$MH,"g_io_channel_get_buffered");
    }
    public static int g_io_channel_get_buffered ( Addressable channel) {
        var mh$ = g_io_channel_get_buffered$MH();
        try {
            return (int)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_set_encoding$MH() {
        return RuntimeHelper.requireNonNull(constants$204.g_io_channel_set_encoding$MH,"g_io_channel_set_encoding");
    }
    public static int g_io_channel_set_encoding ( Addressable channel,  Addressable encoding,  Addressable error) {
        var mh$ = g_io_channel_set_encoding$MH();
        try {
            return (int)mh$.invokeExact(channel, encoding, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_encoding$MH() {
        return RuntimeHelper.requireNonNull(constants$204.g_io_channel_get_encoding$MH,"g_io_channel_get_encoding");
    }
    public static MemoryAddress g_io_channel_get_encoding ( Addressable channel) {
        var mh$ = g_io_channel_get_encoding$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_set_close_on_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$204.g_io_channel_set_close_on_unref$MH,"g_io_channel_set_close_on_unref");
    }
    public static void g_io_channel_set_close_on_unref ( Addressable channel,  int do_close) {
        var mh$ = g_io_channel_set_close_on_unref$MH();
        try {
            mh$.invokeExact(channel, do_close);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_close_on_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$204.g_io_channel_get_close_on_unref$MH,"g_io_channel_get_close_on_unref");
    }
    public static int g_io_channel_get_close_on_unref ( Addressable channel) {
        var mh$ = g_io_channel_get_close_on_unref$MH();
        try {
            return (int)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_flush$MH() {
        return RuntimeHelper.requireNonNull(constants$204.g_io_channel_flush$MH,"g_io_channel_flush");
    }
    public static int g_io_channel_flush ( Addressable channel,  Addressable error) {
        var mh$ = g_io_channel_flush$MH();
        try {
            return (int)mh$.invokeExact(channel, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_read_line$MH() {
        return RuntimeHelper.requireNonNull(constants$204.g_io_channel_read_line$MH,"g_io_channel_read_line");
    }
    public static int g_io_channel_read_line ( Addressable channel,  Addressable str_return,  Addressable length,  Addressable terminator_pos,  Addressable error) {
        var mh$ = g_io_channel_read_line$MH();
        try {
            return (int)mh$.invokeExact(channel, str_return, length, terminator_pos, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_read_line_string$MH() {
        return RuntimeHelper.requireNonNull(constants$205.g_io_channel_read_line_string$MH,"g_io_channel_read_line_string");
    }
    public static int g_io_channel_read_line_string ( Addressable channel,  Addressable buffer,  Addressable terminator_pos,  Addressable error) {
        var mh$ = g_io_channel_read_line_string$MH();
        try {
            return (int)mh$.invokeExact(channel, buffer, terminator_pos, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_read_to_end$MH() {
        return RuntimeHelper.requireNonNull(constants$205.g_io_channel_read_to_end$MH,"g_io_channel_read_to_end");
    }
    public static int g_io_channel_read_to_end ( Addressable channel,  Addressable str_return,  Addressable length,  Addressable error) {
        var mh$ = g_io_channel_read_to_end$MH();
        try {
            return (int)mh$.invokeExact(channel, str_return, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_read_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$205.g_io_channel_read_chars$MH,"g_io_channel_read_chars");
    }
    public static int g_io_channel_read_chars ( Addressable channel,  Addressable buf,  long count,  Addressable bytes_read,  Addressable error) {
        var mh$ = g_io_channel_read_chars$MH();
        try {
            return (int)mh$.invokeExact(channel, buf, count, bytes_read, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_read_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$205.g_io_channel_read_unichar$MH,"g_io_channel_read_unichar");
    }
    public static int g_io_channel_read_unichar ( Addressable channel,  Addressable thechar,  Addressable error) {
        var mh$ = g_io_channel_read_unichar$MH();
        try {
            return (int)mh$.invokeExact(channel, thechar, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_write_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$205.g_io_channel_write_chars$MH,"g_io_channel_write_chars");
    }
    public static int g_io_channel_write_chars ( Addressable channel,  Addressable buf,  long count,  Addressable bytes_written,  Addressable error) {
        var mh$ = g_io_channel_write_chars$MH();
        try {
            return (int)mh$.invokeExact(channel, buf, count, bytes_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_write_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$205.g_io_channel_write_unichar$MH,"g_io_channel_write_unichar");
    }
    public static int g_io_channel_write_unichar ( Addressable channel,  int thechar,  Addressable error) {
        var mh$ = g_io_channel_write_unichar$MH();
        try {
            return (int)mh$.invokeExact(channel, thechar, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_seek_position$MH() {
        return RuntimeHelper.requireNonNull(constants$206.g_io_channel_seek_position$MH,"g_io_channel_seek_position");
    }
    public static int g_io_channel_seek_position ( Addressable channel,  long offset,  int type,  Addressable error) {
        var mh$ = g_io_channel_seek_position$MH();
        try {
            return (int)mh$.invokeExact(channel, offset, type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_new_file$MH() {
        return RuntimeHelper.requireNonNull(constants$206.g_io_channel_new_file$MH,"g_io_channel_new_file");
    }
    public static MemoryAddress g_io_channel_new_file ( Addressable filename,  Addressable mode,  Addressable error) {
        var mh$ = g_io_channel_new_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, mode, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$206.g_io_channel_error_quark$MH,"g_io_channel_error_quark");
    }
    public static int g_io_channel_error_quark () {
        var mh$ = g_io_channel_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_error_from_errno$MH() {
        return RuntimeHelper.requireNonNull(constants$206.g_io_channel_error_from_errno$MH,"g_io_channel_error_from_errno");
    }
    public static int g_io_channel_error_from_errno ( int en) {
        var mh$ = g_io_channel_error_from_errno$MH();
        try {
            return (int)mh$.invokeExact(en);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_unix_new$MH() {
        return RuntimeHelper.requireNonNull(constants$206.g_io_channel_unix_new$MH,"g_io_channel_unix_new");
    }
    public static MemoryAddress g_io_channel_unix_new ( int fd) {
        var mh$ = g_io_channel_unix_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_unix_get_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$206.g_io_channel_unix_get_fd$MH,"g_io_channel_unix_get_fd");
    }
    public static int g_io_channel_unix_get_fd ( Addressable channel) {
        var mh$ = g_io_channel_unix_get_fd$MH();
        try {
            return (int)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemorySegment g_io_watch_funcs$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$207.g_io_watch_funcs$SEGMENT,"g_io_watch_funcs");
    }
    public static int G_KEY_FILE_ERROR_UNKNOWN_ENCODING() {
        return (int)0L;
    }
    public static int G_KEY_FILE_ERROR_PARSE() {
        return (int)1L;
    }
    public static int G_KEY_FILE_ERROR_NOT_FOUND() {
        return (int)2L;
    }
    public static int G_KEY_FILE_ERROR_KEY_NOT_FOUND() {
        return (int)3L;
    }
    public static int G_KEY_FILE_ERROR_GROUP_NOT_FOUND() {
        return (int)4L;
    }
    public static int G_KEY_FILE_ERROR_INVALID_VALUE() {
        return (int)5L;
    }
    public static MethodHandle g_key_file_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$207.g_key_file_error_quark$MH,"g_key_file_error_quark");
    }
    public static int g_key_file_error_quark () {
        var mh$ = g_key_file_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_KEY_FILE_NONE() {
        return (int)0L;
    }
    public static int G_KEY_FILE_KEEP_COMMENTS() {
        return (int)1L;
    }
    public static int G_KEY_FILE_KEEP_TRANSLATIONS() {
        return (int)2L;
    }
    public static MethodHandle g_key_file_new$MH() {
        return RuntimeHelper.requireNonNull(constants$207.g_key_file_new$MH,"g_key_file_new");
    }
    public static MemoryAddress g_key_file_new () {
        var mh$ = g_key_file_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$207.g_key_file_ref$MH,"g_key_file_ref");
    }
    public static MemoryAddress g_key_file_ref ( Addressable key_file) {
        var mh$ = g_key_file_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(key_file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$207.g_key_file_unref$MH,"g_key_file_unref");
    }
    public static void g_key_file_unref ( Addressable key_file) {
        var mh$ = g_key_file_unref$MH();
        try {
            mh$.invokeExact(key_file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_free$MH() {
        return RuntimeHelper.requireNonNull(constants$207.g_key_file_free$MH,"g_key_file_free");
    }
    public static void g_key_file_free ( Addressable key_file) {
        var mh$ = g_key_file_free$MH();
        try {
            mh$.invokeExact(key_file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_list_separator$MH() {
        return RuntimeHelper.requireNonNull(constants$208.g_key_file_set_list_separator$MH,"g_key_file_set_list_separator");
    }
    public static void g_key_file_set_list_separator ( Addressable key_file,  byte separator) {
        var mh$ = g_key_file_set_list_separator$MH();
        try {
            mh$.invokeExact(key_file, separator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_load_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$208.g_key_file_load_from_file$MH,"g_key_file_load_from_file");
    }
    public static int g_key_file_load_from_file ( Addressable key_file,  Addressable file,  int flags,  Addressable error) {
        var mh$ = g_key_file_load_from_file$MH();
        try {
            return (int)mh$.invokeExact(key_file, file, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_load_from_data$MH() {
        return RuntimeHelper.requireNonNull(constants$208.g_key_file_load_from_data$MH,"g_key_file_load_from_data");
    }
    public static int g_key_file_load_from_data ( Addressable key_file,  Addressable data,  long length,  int flags,  Addressable error) {
        var mh$ = g_key_file_load_from_data$MH();
        try {
            return (int)mh$.invokeExact(key_file, data, length, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_load_from_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$208.g_key_file_load_from_bytes$MH,"g_key_file_load_from_bytes");
    }
    public static int g_key_file_load_from_bytes ( Addressable key_file,  Addressable bytes,  int flags,  Addressable error) {
        var mh$ = g_key_file_load_from_bytes$MH();
        try {
            return (int)mh$.invokeExact(key_file, bytes, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_load_from_dirs$MH() {
        return RuntimeHelper.requireNonNull(constants$208.g_key_file_load_from_dirs$MH,"g_key_file_load_from_dirs");
    }
    public static int g_key_file_load_from_dirs ( Addressable key_file,  Addressable file,  Addressable search_dirs,  Addressable full_path,  int flags,  Addressable error) {
        var mh$ = g_key_file_load_from_dirs$MH();
        try {
            return (int)mh$.invokeExact(key_file, file, search_dirs, full_path, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_load_from_data_dirs$MH() {
        return RuntimeHelper.requireNonNull(constants$208.g_key_file_load_from_data_dirs$MH,"g_key_file_load_from_data_dirs");
    }
    public static int g_key_file_load_from_data_dirs ( Addressable key_file,  Addressable file,  Addressable full_path,  int flags,  Addressable error) {
        var mh$ = g_key_file_load_from_data_dirs$MH();
        try {
            return (int)mh$.invokeExact(key_file, file, full_path, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_to_data$MH() {
        return RuntimeHelper.requireNonNull(constants$209.g_key_file_to_data$MH,"g_key_file_to_data");
    }
    public static MemoryAddress g_key_file_to_data ( Addressable key_file,  Addressable length,  Addressable error) {
        var mh$ = g_key_file_to_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(key_file, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_save_to_file$MH() {
        return RuntimeHelper.requireNonNull(constants$209.g_key_file_save_to_file$MH,"g_key_file_save_to_file");
    }
    public static int g_key_file_save_to_file ( Addressable key_file,  Addressable filename,  Addressable error) {
        var mh$ = g_key_file_save_to_file$MH();
        try {
            return (int)mh$.invokeExact(key_file, filename, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_start_group$MH() {
        return RuntimeHelper.requireNonNull(constants$209.g_key_file_get_start_group$MH,"g_key_file_get_start_group");
    }
    public static MemoryAddress g_key_file_get_start_group ( Addressable key_file) {
        var mh$ = g_key_file_get_start_group$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(key_file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_groups$MH() {
        return RuntimeHelper.requireNonNull(constants$209.g_key_file_get_groups$MH,"g_key_file_get_groups");
    }
    public static MemoryAddress g_key_file_get_groups ( Addressable key_file,  Addressable length) {
        var mh$ = g_key_file_get_groups$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(key_file, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_keys$MH() {
        return RuntimeHelper.requireNonNull(constants$209.g_key_file_get_keys$MH,"g_key_file_get_keys");
    }
    public static MemoryAddress g_key_file_get_keys ( Addressable key_file,  Addressable group_name,  Addressable length,  Addressable error) {
        var mh$ = g_key_file_get_keys$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(key_file, group_name, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_has_group$MH() {
        return RuntimeHelper.requireNonNull(constants$209.g_key_file_has_group$MH,"g_key_file_has_group");
    }
    public static int g_key_file_has_group ( Addressable key_file,  Addressable group_name) {
        var mh$ = g_key_file_has_group$MH();
        try {
            return (int)mh$.invokeExact(key_file, group_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_has_key$MH() {
        return RuntimeHelper.requireNonNull(constants$210.g_key_file_has_key$MH,"g_key_file_has_key");
    }
    public static int g_key_file_has_key ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable error) {
        var mh$ = g_key_file_has_key$MH();
        try {
            return (int)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$210.g_key_file_get_value$MH,"g_key_file_get_value");
    }
    public static MemoryAddress g_key_file_get_value ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable error) {
        var mh$ = g_key_file_get_value$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$210.g_key_file_set_value$MH,"g_key_file_set_value");
    }
    public static void g_key_file_set_value ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable value) {
        var mh$ = g_key_file_set_value$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_string$MH() {
        return RuntimeHelper.requireNonNull(constants$210.g_key_file_get_string$MH,"g_key_file_get_string");
    }
    public static MemoryAddress g_key_file_get_string ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable error) {
        var mh$ = g_key_file_get_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_string$MH() {
        return RuntimeHelper.requireNonNull(constants$210.g_key_file_set_string$MH,"g_key_file_set_string");
    }
    public static void g_key_file_set_string ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable string) {
        var mh$ = g_key_file_set_string$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_locale_string$MH() {
        return RuntimeHelper.requireNonNull(constants$210.g_key_file_get_locale_string$MH,"g_key_file_get_locale_string");
    }
    public static MemoryAddress g_key_file_get_locale_string ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable locale,  Addressable error) {
        var mh$ = g_key_file_get_locale_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(key_file, group_name, key, locale, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_locale_for_key$MH() {
        return RuntimeHelper.requireNonNull(constants$211.g_key_file_get_locale_for_key$MH,"g_key_file_get_locale_for_key");
    }
    public static MemoryAddress g_key_file_get_locale_for_key ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable locale) {
        var mh$ = g_key_file_get_locale_for_key$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(key_file, group_name, key, locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_locale_string$MH() {
        return RuntimeHelper.requireNonNull(constants$211.g_key_file_set_locale_string$MH,"g_key_file_set_locale_string");
    }
    public static void g_key_file_set_locale_string ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable locale,  Addressable string) {
        var mh$ = g_key_file_set_locale_string$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, locale, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$211.g_key_file_get_boolean$MH,"g_key_file_get_boolean");
    }
    public static int g_key_file_get_boolean ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable error) {
        var mh$ = g_key_file_get_boolean$MH();
        try {
            return (int)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$211.g_key_file_set_boolean$MH,"g_key_file_set_boolean");
    }
    public static void g_key_file_set_boolean ( Addressable key_file,  Addressable group_name,  Addressable key,  int value) {
        var mh$ = g_key_file_set_boolean$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_integer$MH() {
        return RuntimeHelper.requireNonNull(constants$211.g_key_file_get_integer$MH,"g_key_file_get_integer");
    }
    public static int g_key_file_get_integer ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable error) {
        var mh$ = g_key_file_get_integer$MH();
        try {
            return (int)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_integer$MH() {
        return RuntimeHelper.requireNonNull(constants$211.g_key_file_set_integer$MH,"g_key_file_set_integer");
    }
    public static void g_key_file_set_integer ( Addressable key_file,  Addressable group_name,  Addressable key,  int value) {
        var mh$ = g_key_file_set_integer$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$212.g_key_file_get_int64$MH,"g_key_file_get_int64");
    }
    public static long g_key_file_get_int64 ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable error) {
        var mh$ = g_key_file_get_int64$MH();
        try {
            return (long)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$212.g_key_file_set_int64$MH,"g_key_file_set_int64");
    }
    public static void g_key_file_set_int64 ( Addressable key_file,  Addressable group_name,  Addressable key,  long value) {
        var mh$ = g_key_file_set_int64$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$212.g_key_file_get_uint64$MH,"g_key_file_get_uint64");
    }
    public static long g_key_file_get_uint64 ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable error) {
        var mh$ = g_key_file_get_uint64$MH();
        try {
            return (long)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$212.g_key_file_set_uint64$MH,"g_key_file_set_uint64");
    }
    public static void g_key_file_set_uint64 ( Addressable key_file,  Addressable group_name,  Addressable key,  long value) {
        var mh$ = g_key_file_set_uint64$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_double$MH() {
        return RuntimeHelper.requireNonNull(constants$212.g_key_file_get_double$MH,"g_key_file_get_double");
    }
    public static double g_key_file_get_double ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable error) {
        var mh$ = g_key_file_get_double$MH();
        try {
            return (double)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_double$MH() {
        return RuntimeHelper.requireNonNull(constants$212.g_key_file_set_double$MH,"g_key_file_set_double");
    }
    public static void g_key_file_set_double ( Addressable key_file,  Addressable group_name,  Addressable key,  double value) {
        var mh$ = g_key_file_set_double$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_string_list$MH() {
        return RuntimeHelper.requireNonNull(constants$213.g_key_file_get_string_list$MH,"g_key_file_get_string_list");
    }
    public static MemoryAddress g_key_file_get_string_list ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable length,  Addressable error) {
        var mh$ = g_key_file_get_string_list$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(key_file, group_name, key, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_string_list$MH() {
        return RuntimeHelper.requireNonNull(constants$213.g_key_file_set_string_list$MH,"g_key_file_set_string_list");
    }
    public static void g_key_file_set_string_list ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable list,  long length) {
        var mh$ = g_key_file_set_string_list$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, list, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_locale_string_list$MH() {
        return RuntimeHelper.requireNonNull(constants$213.g_key_file_get_locale_string_list$MH,"g_key_file_get_locale_string_list");
    }
    public static MemoryAddress g_key_file_get_locale_string_list ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable locale,  Addressable length,  Addressable error) {
        var mh$ = g_key_file_get_locale_string_list$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(key_file, group_name, key, locale, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_locale_string_list$MH() {
        return RuntimeHelper.requireNonNull(constants$213.g_key_file_set_locale_string_list$MH,"g_key_file_set_locale_string_list");
    }
    public static void g_key_file_set_locale_string_list ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable locale,  Addressable list,  long length) {
        var mh$ = g_key_file_set_locale_string_list$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, locale, list, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_boolean_list$MH() {
        return RuntimeHelper.requireNonNull(constants$213.g_key_file_get_boolean_list$MH,"g_key_file_get_boolean_list");
    }
    public static MemoryAddress g_key_file_get_boolean_list ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable length,  Addressable error) {
        var mh$ = g_key_file_get_boolean_list$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(key_file, group_name, key, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_boolean_list$MH() {
        return RuntimeHelper.requireNonNull(constants$213.g_key_file_set_boolean_list$MH,"g_key_file_set_boolean_list");
    }
    public static void g_key_file_set_boolean_list ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable list,  long length) {
        var mh$ = g_key_file_set_boolean_list$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, list, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_integer_list$MH() {
        return RuntimeHelper.requireNonNull(constants$214.g_key_file_get_integer_list$MH,"g_key_file_get_integer_list");
    }
    public static MemoryAddress g_key_file_get_integer_list ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable length,  Addressable error) {
        var mh$ = g_key_file_get_integer_list$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(key_file, group_name, key, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_double_list$MH() {
        return RuntimeHelper.requireNonNull(constants$214.g_key_file_set_double_list$MH,"g_key_file_set_double_list");
    }
    public static void g_key_file_set_double_list ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable list,  long length) {
        var mh$ = g_key_file_set_double_list$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, list, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_double_list$MH() {
        return RuntimeHelper.requireNonNull(constants$214.g_key_file_get_double_list$MH,"g_key_file_get_double_list");
    }
    public static MemoryAddress g_key_file_get_double_list ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable length,  Addressable error) {
        var mh$ = g_key_file_get_double_list$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(key_file, group_name, key, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_integer_list$MH() {
        return RuntimeHelper.requireNonNull(constants$214.g_key_file_set_integer_list$MH,"g_key_file_set_integer_list");
    }
    public static void g_key_file_set_integer_list ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable list,  long length) {
        var mh$ = g_key_file_set_integer_list$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, list, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_comment$MH() {
        return RuntimeHelper.requireNonNull(constants$214.g_key_file_set_comment$MH,"g_key_file_set_comment");
    }
    public static int g_key_file_set_comment ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable comment,  Addressable error) {
        var mh$ = g_key_file_set_comment$MH();
        try {
            return (int)mh$.invokeExact(key_file, group_name, key, comment, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_comment$MH() {
        return RuntimeHelper.requireNonNull(constants$214.g_key_file_get_comment$MH,"g_key_file_get_comment");
    }
    public static MemoryAddress g_key_file_get_comment ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable error) {
        var mh$ = g_key_file_get_comment$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_remove_comment$MH() {
        return RuntimeHelper.requireNonNull(constants$215.g_key_file_remove_comment$MH,"g_key_file_remove_comment");
    }
    public static int g_key_file_remove_comment ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable error) {
        var mh$ = g_key_file_remove_comment$MH();
        try {
            return (int)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_remove_key$MH() {
        return RuntimeHelper.requireNonNull(constants$215.g_key_file_remove_key$MH,"g_key_file_remove_key");
    }
    public static int g_key_file_remove_key ( Addressable key_file,  Addressable group_name,  Addressable key,  Addressable error) {
        var mh$ = g_key_file_remove_key$MH();
        try {
            return (int)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_remove_group$MH() {
        return RuntimeHelper.requireNonNull(constants$215.g_key_file_remove_group$MH,"g_key_file_remove_group");
    }
    public static int g_key_file_remove_group ( Addressable key_file,  Addressable group_name,  Addressable error) {
        var mh$ = g_key_file_remove_group$MH();
        try {
            return (int)mh$.invokeExact(key_file, group_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_new$MH() {
        return RuntimeHelper.requireNonNull(constants$215.g_mapped_file_new$MH,"g_mapped_file_new");
    }
    public static MemoryAddress g_mapped_file_new ( Addressable filename,  int writable,  Addressable error) {
        var mh$ = g_mapped_file_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, writable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_new_from_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$215.g_mapped_file_new_from_fd$MH,"g_mapped_file_new_from_fd");
    }
    public static MemoryAddress g_mapped_file_new_from_fd ( int fd,  int writable,  Addressable error) {
        var mh$ = g_mapped_file_new_from_fd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fd, writable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_get_length$MH() {
        return RuntimeHelper.requireNonNull(constants$215.g_mapped_file_get_length$MH,"g_mapped_file_get_length");
    }
    public static long g_mapped_file_get_length ( Addressable file) {
        var mh$ = g_mapped_file_get_length$MH();
        try {
            return (long)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_get_contents$MH() {
        return RuntimeHelper.requireNonNull(constants$216.g_mapped_file_get_contents$MH,"g_mapped_file_get_contents");
    }
    public static MemoryAddress g_mapped_file_get_contents ( Addressable file) {
        var mh$ = g_mapped_file_get_contents$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_get_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$216.g_mapped_file_get_bytes$MH,"g_mapped_file_get_bytes");
    }
    public static MemoryAddress g_mapped_file_get_bytes ( Addressable file) {
        var mh$ = g_mapped_file_get_bytes$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$216.g_mapped_file_ref$MH,"g_mapped_file_ref");
    }
    public static MemoryAddress g_mapped_file_ref ( Addressable file) {
        var mh$ = g_mapped_file_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$216.g_mapped_file_unref$MH,"g_mapped_file_unref");
    }
    public static void g_mapped_file_unref ( Addressable file) {
        var mh$ = g_mapped_file_unref$MH();
        try {
            mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_free$MH() {
        return RuntimeHelper.requireNonNull(constants$216.g_mapped_file_free$MH,"g_mapped_file_free");
    }
    public static void g_mapped_file_free ( Addressable file) {
        var mh$ = g_mapped_file_free$MH();
        try {
            mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_MARKUP_ERROR_BAD_UTF8() {
        return (int)0L;
    }
    public static int G_MARKUP_ERROR_EMPTY() {
        return (int)1L;
    }
    public static int G_MARKUP_ERROR_PARSE() {
        return (int)2L;
    }
    public static int G_MARKUP_ERROR_UNKNOWN_ELEMENT() {
        return (int)3L;
    }
    public static int G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE() {
        return (int)4L;
    }
    public static int G_MARKUP_ERROR_INVALID_CONTENT() {
        return (int)5L;
    }
    public static int G_MARKUP_ERROR_MISSING_ATTRIBUTE() {
        return (int)6L;
    }
    public static MethodHandle g_markup_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$216.g_markup_error_quark$MH,"g_markup_error_quark");
    }
    public static int g_markup_error_quark () {
        var mh$ = g_markup_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG() {
        return (int)1L;
    }
    public static int G_MARKUP_TREAT_CDATA_AS_TEXT() {
        return (int)2L;
    }
    public static int G_MARKUP_PREFIX_ERROR_POSITION() {
        return (int)4L;
    }
    public static int G_MARKUP_IGNORE_QUALIFIED() {
        return (int)8L;
    }
    public static MethodHandle g_markup_parse_context_new$MH() {
        return RuntimeHelper.requireNonNull(constants$217.g_markup_parse_context_new$MH,"g_markup_parse_context_new");
    }
    public static MemoryAddress g_markup_parse_context_new ( Addressable parser,  int flags,  Addressable user_data,  Addressable user_data_dnotify) {
        var mh$ = g_markup_parse_context_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(parser, flags, user_data, user_data_dnotify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$217.g_markup_parse_context_ref$MH,"g_markup_parse_context_ref");
    }
    public static MemoryAddress g_markup_parse_context_ref ( Addressable context) {
        var mh$ = g_markup_parse_context_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$217.g_markup_parse_context_unref$MH,"g_markup_parse_context_unref");
    }
    public static void g_markup_parse_context_unref ( Addressable context) {
        var mh$ = g_markup_parse_context_unref$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_free$MH() {
        return RuntimeHelper.requireNonNull(constants$217.g_markup_parse_context_free$MH,"g_markup_parse_context_free");
    }
    public static void g_markup_parse_context_free ( Addressable context) {
        var mh$ = g_markup_parse_context_free$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_parse$MH() {
        return RuntimeHelper.requireNonNull(constants$217.g_markup_parse_context_parse$MH,"g_markup_parse_context_parse");
    }
    public static int g_markup_parse_context_parse ( Addressable context,  Addressable text,  long text_len,  Addressable error) {
        var mh$ = g_markup_parse_context_parse$MH();
        try {
            return (int)mh$.invokeExact(context, text, text_len, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_push$MH() {
        return RuntimeHelper.requireNonNull(constants$217.g_markup_parse_context_push$MH,"g_markup_parse_context_push");
    }
    public static void g_markup_parse_context_push ( Addressable context,  Addressable parser,  Addressable user_data) {
        var mh$ = g_markup_parse_context_push$MH();
        try {
            mh$.invokeExact(context, parser, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$218.g_markup_parse_context_pop$MH,"g_markup_parse_context_pop");
    }
    public static MemoryAddress g_markup_parse_context_pop ( Addressable context) {
        var mh$ = g_markup_parse_context_pop$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_end_parse$MH() {
        return RuntimeHelper.requireNonNull(constants$218.g_markup_parse_context_end_parse$MH,"g_markup_parse_context_end_parse");
    }
    public static int g_markup_parse_context_end_parse ( Addressable context,  Addressable error) {
        var mh$ = g_markup_parse_context_end_parse$MH();
        try {
            return (int)mh$.invokeExact(context, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_get_element$MH() {
        return RuntimeHelper.requireNonNull(constants$218.g_markup_parse_context_get_element$MH,"g_markup_parse_context_get_element");
    }
    public static MemoryAddress g_markup_parse_context_get_element ( Addressable context) {
        var mh$ = g_markup_parse_context_get_element$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_get_element_stack$MH() {
        return RuntimeHelper.requireNonNull(constants$218.g_markup_parse_context_get_element_stack$MH,"g_markup_parse_context_get_element_stack");
    }
    public static MemoryAddress g_markup_parse_context_get_element_stack ( Addressable context) {
        var mh$ = g_markup_parse_context_get_element_stack$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$218.g_markup_parse_context_get_position$MH,"g_markup_parse_context_get_position");
    }
    public static void g_markup_parse_context_get_position ( Addressable context,  Addressable line_number,  Addressable char_number) {
        var mh$ = g_markup_parse_context_get_position$MH();
        try {
            mh$.invokeExact(context, line_number, char_number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$218.g_markup_parse_context_get_user_data$MH,"g_markup_parse_context_get_user_data");
    }
    public static MemoryAddress g_markup_parse_context_get_user_data ( Addressable context) {
        var mh$ = g_markup_parse_context_get_user_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_escape_text$MH() {
        return RuntimeHelper.requireNonNull(constants$219.g_markup_escape_text$MH,"g_markup_escape_text");
    }
    public static MemoryAddress g_markup_escape_text ( Addressable text,  long length) {
        var mh$ = g_markup_escape_text$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(text, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_printf_escaped$MH() {
        return RuntimeHelper.requireNonNull(constants$219.g_markup_printf_escaped$MH,"g_markup_printf_escaped");
    }
    public static MemoryAddress g_markup_printf_escaped ( Addressable format, Object... x1) {
        var mh$ = g_markup_printf_escaped$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_vprintf_escaped$MH() {
        return RuntimeHelper.requireNonNull(constants$219.g_markup_vprintf_escaped$MH,"g_markup_vprintf_escaped");
    }
    public static MemoryAddress g_markup_vprintf_escaped ( Addressable format,  Addressable args) {
        var mh$ = g_markup_vprintf_escaped$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_MARKUP_COLLECT_INVALID() {
        return (int)0L;
    }
    public static int G_MARKUP_COLLECT_STRING() {
        return (int)1L;
    }
    public static int G_MARKUP_COLLECT_STRDUP() {
        return (int)2L;
    }
    public static int G_MARKUP_COLLECT_BOOLEAN() {
        return (int)3L;
    }
    public static int G_MARKUP_COLLECT_TRISTATE() {
        return (int)4L;
    }
    public static int G_MARKUP_COLLECT_OPTIONAL() {
        return (int)65536L;
    }
    public static MethodHandle g_markup_collect_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$219.g_markup_collect_attributes$MH,"g_markup_collect_attributes");
    }
    public static int g_markup_collect_attributes ( Addressable element_name,  Addressable attribute_names,  Addressable attribute_values,  Addressable error,  int first_type,  Addressable first_attr, Object... x6) {
        var mh$ = g_markup_collect_attributes$MH();
        try {
            return (int)mh$.invokeExact(element_name, attribute_names, attribute_values, error, first_type, first_attr, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_string_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$219.g_variant_type_string_is_valid$MH,"g_variant_type_string_is_valid");
    }
    public static int g_variant_type_string_is_valid ( Addressable type_string) {
        var mh$ = g_variant_type_string_is_valid$MH();
        try {
            return (int)mh$.invokeExact(type_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_string_scan$MH() {
        return RuntimeHelper.requireNonNull(constants$219.g_variant_type_string_scan$MH,"g_variant_type_string_scan");
    }
    public static int g_variant_type_string_scan ( Addressable string,  Addressable limit,  Addressable endptr) {
        var mh$ = g_variant_type_string_scan$MH();
        try {
            return (int)mh$.invokeExact(string, limit, endptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_free$MH() {
        return RuntimeHelper.requireNonNull(constants$220.g_variant_type_free$MH,"g_variant_type_free");
    }
    public static void g_variant_type_free ( Addressable type) {
        var mh$ = g_variant_type_free$MH();
        try {
            mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$220.g_variant_type_copy$MH,"g_variant_type_copy");
    }
    public static MemoryAddress g_variant_type_copy ( Addressable type) {
        var mh$ = g_variant_type_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_new$MH() {
        return RuntimeHelper.requireNonNull(constants$220.g_variant_type_new$MH,"g_variant_type_new");
    }
    public static MemoryAddress g_variant_type_new ( Addressable type_string) {
        var mh$ = g_variant_type_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_get_string_length$MH() {
        return RuntimeHelper.requireNonNull(constants$220.g_variant_type_get_string_length$MH,"g_variant_type_get_string_length");
    }
    public static long g_variant_type_get_string_length ( Addressable type) {
        var mh$ = g_variant_type_get_string_length$MH();
        try {
            return (long)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_peek_string$MH() {
        return RuntimeHelper.requireNonNull(constants$220.g_variant_type_peek_string$MH,"g_variant_type_peek_string");
    }
    public static MemoryAddress g_variant_type_peek_string ( Addressable type) {
        var mh$ = g_variant_type_peek_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_dup_string$MH() {
        return RuntimeHelper.requireNonNull(constants$220.g_variant_type_dup_string$MH,"g_variant_type_dup_string");
    }
    public static MemoryAddress g_variant_type_dup_string ( Addressable type) {
        var mh$ = g_variant_type_dup_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_is_definite$MH() {
        return RuntimeHelper.requireNonNull(constants$221.g_variant_type_is_definite$MH,"g_variant_type_is_definite");
    }
    public static int g_variant_type_is_definite ( Addressable type) {
        var mh$ = g_variant_type_is_definite$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_is_container$MH() {
        return RuntimeHelper.requireNonNull(constants$221.g_variant_type_is_container$MH,"g_variant_type_is_container");
    }
    public static int g_variant_type_is_container ( Addressable type) {
        var mh$ = g_variant_type_is_container$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_is_basic$MH() {
        return RuntimeHelper.requireNonNull(constants$221.g_variant_type_is_basic$MH,"g_variant_type_is_basic");
    }
    public static int g_variant_type_is_basic ( Addressable type) {
        var mh$ = g_variant_type_is_basic$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_is_maybe$MH() {
        return RuntimeHelper.requireNonNull(constants$221.g_variant_type_is_maybe$MH,"g_variant_type_is_maybe");
    }
    public static int g_variant_type_is_maybe ( Addressable type) {
        var mh$ = g_variant_type_is_maybe$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_is_array$MH() {
        return RuntimeHelper.requireNonNull(constants$221.g_variant_type_is_array$MH,"g_variant_type_is_array");
    }
    public static int g_variant_type_is_array ( Addressable type) {
        var mh$ = g_variant_type_is_array$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_is_tuple$MH() {
        return RuntimeHelper.requireNonNull(constants$221.g_variant_type_is_tuple$MH,"g_variant_type_is_tuple");
    }
    public static int g_variant_type_is_tuple ( Addressable type) {
        var mh$ = g_variant_type_is_tuple$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_is_dict_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$222.g_variant_type_is_dict_entry$MH,"g_variant_type_is_dict_entry");
    }
    public static int g_variant_type_is_dict_entry ( Addressable type) {
        var mh$ = g_variant_type_is_dict_entry$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_is_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$222.g_variant_type_is_variant$MH,"g_variant_type_is_variant");
    }
    public static int g_variant_type_is_variant ( Addressable type) {
        var mh$ = g_variant_type_is_variant$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$222.g_variant_type_hash$MH,"g_variant_type_hash");
    }
    public static int g_variant_type_hash ( Addressable type) {
        var mh$ = g_variant_type_hash$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$222.g_variant_type_equal$MH,"g_variant_type_equal");
    }
    public static int g_variant_type_equal ( Addressable type1,  Addressable type2) {
        var mh$ = g_variant_type_equal$MH();
        try {
            return (int)mh$.invokeExact(type1, type2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_is_subtype_of$MH() {
        return RuntimeHelper.requireNonNull(constants$222.g_variant_type_is_subtype_of$MH,"g_variant_type_is_subtype_of");
    }
    public static int g_variant_type_is_subtype_of ( Addressable type,  Addressable supertype) {
        var mh$ = g_variant_type_is_subtype_of$MH();
        try {
            return (int)mh$.invokeExact(type, supertype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_element$MH() {
        return RuntimeHelper.requireNonNull(constants$222.g_variant_type_element$MH,"g_variant_type_element");
    }
    public static MemoryAddress g_variant_type_element ( Addressable type) {
        var mh$ = g_variant_type_element$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_first$MH() {
        return RuntimeHelper.requireNonNull(constants$223.g_variant_type_first$MH,"g_variant_type_first");
    }
    public static MemoryAddress g_variant_type_first ( Addressable type) {
        var mh$ = g_variant_type_first$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_next$MH() {
        return RuntimeHelper.requireNonNull(constants$223.g_variant_type_next$MH,"g_variant_type_next");
    }
    public static MemoryAddress g_variant_type_next ( Addressable type) {
        var mh$ = g_variant_type_next$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_n_items$MH() {
        return RuntimeHelper.requireNonNull(constants$223.g_variant_type_n_items$MH,"g_variant_type_n_items");
    }
    public static long g_variant_type_n_items ( Addressable type) {
        var mh$ = g_variant_type_n_items$MH();
        try {
            return (long)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_key$MH() {
        return RuntimeHelper.requireNonNull(constants$223.g_variant_type_key$MH,"g_variant_type_key");
    }
    public static MemoryAddress g_variant_type_key ( Addressable type) {
        var mh$ = g_variant_type_key$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_value$MH() {
        return RuntimeHelper.requireNonNull(constants$223.g_variant_type_value$MH,"g_variant_type_value");
    }
    public static MemoryAddress g_variant_type_value ( Addressable type) {
        var mh$ = g_variant_type_value$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_new_array$MH() {
        return RuntimeHelper.requireNonNull(constants$223.g_variant_type_new_array$MH,"g_variant_type_new_array");
    }
    public static MemoryAddress g_variant_type_new_array ( Addressable element) {
        var mh$ = g_variant_type_new_array$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(element);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_new_maybe$MH() {
        return RuntimeHelper.requireNonNull(constants$224.g_variant_type_new_maybe$MH,"g_variant_type_new_maybe");
    }
    public static MemoryAddress g_variant_type_new_maybe ( Addressable element) {
        var mh$ = g_variant_type_new_maybe$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(element);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_new_tuple$MH() {
        return RuntimeHelper.requireNonNull(constants$224.g_variant_type_new_tuple$MH,"g_variant_type_new_tuple");
    }
    public static MemoryAddress g_variant_type_new_tuple ( Addressable items,  int length) {
        var mh$ = g_variant_type_new_tuple$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(items, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_new_dict_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$224.g_variant_type_new_dict_entry$MH,"g_variant_type_new_dict_entry");
    }
    public static MemoryAddress g_variant_type_new_dict_entry ( Addressable key,  Addressable value) {
        var mh$ = g_variant_type_new_dict_entry$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_checked_$MH() {
        return RuntimeHelper.requireNonNull(constants$224.g_variant_type_checked_$MH,"g_variant_type_checked_");
    }
    public static MemoryAddress g_variant_type_checked_ ( Addressable x0) {
        var mh$ = g_variant_type_checked_$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_string_get_depth_$MH() {
        return RuntimeHelper.requireNonNull(constants$224.g_variant_type_string_get_depth_$MH,"g_variant_type_string_get_depth_");
    }
    public static long g_variant_type_string_get_depth_ ( Addressable type_string) {
        var mh$ = g_variant_type_string_get_depth_$MH();
        try {
            return (long)mh$.invokeExact(type_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_VARIANT_CLASS_BOOLEAN() {
        return (int)98L;
    }
    public static int G_VARIANT_CLASS_BYTE() {
        return (int)121L;
    }
    public static int G_VARIANT_CLASS_INT16() {
        return (int)110L;
    }
    public static int G_VARIANT_CLASS_UINT16() {
        return (int)113L;
    }
    public static int G_VARIANT_CLASS_INT32() {
        return (int)105L;
    }
    public static int G_VARIANT_CLASS_UINT32() {
        return (int)117L;
    }
    public static int G_VARIANT_CLASS_INT64() {
        return (int)120L;
    }
    public static int G_VARIANT_CLASS_UINT64() {
        return (int)116L;
    }
    public static int G_VARIANT_CLASS_HANDLE() {
        return (int)104L;
    }
    public static int G_VARIANT_CLASS_DOUBLE() {
        return (int)100L;
    }
    public static int G_VARIANT_CLASS_STRING() {
        return (int)115L;
    }
    public static int G_VARIANT_CLASS_OBJECT_PATH() {
        return (int)111L;
    }
    public static int G_VARIANT_CLASS_SIGNATURE() {
        return (int)103L;
    }
    public static int G_VARIANT_CLASS_VARIANT() {
        return (int)118L;
    }
    public static int G_VARIANT_CLASS_MAYBE() {
        return (int)109L;
    }
    public static int G_VARIANT_CLASS_ARRAY() {
        return (int)97L;
    }
    public static int G_VARIANT_CLASS_TUPLE() {
        return (int)40L;
    }
    public static int G_VARIANT_CLASS_DICT_ENTRY() {
        return (int)123L;
    }
    public static MethodHandle g_variant_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$224.g_variant_unref$MH,"g_variant_unref");
    }
    public static void g_variant_unref ( Addressable value) {
        var mh$ = g_variant_unref$MH();
        try {
            mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$225.g_variant_ref$MH,"g_variant_ref");
    }
    public static MemoryAddress g_variant_ref ( Addressable value) {
        var mh$ = g_variant_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_ref_sink$MH() {
        return RuntimeHelper.requireNonNull(constants$225.g_variant_ref_sink$MH,"g_variant_ref_sink");
    }
    public static MemoryAddress g_variant_ref_sink ( Addressable value) {
        var mh$ = g_variant_ref_sink$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_is_floating$MH() {
        return RuntimeHelper.requireNonNull(constants$225.g_variant_is_floating$MH,"g_variant_is_floating");
    }
    public static int g_variant_is_floating ( Addressable value) {
        var mh$ = g_variant_is_floating$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_take_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$225.g_variant_take_ref$MH,"g_variant_take_ref");
    }
    public static MemoryAddress g_variant_take_ref ( Addressable value) {
        var mh$ = g_variant_take_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$225.g_variant_get_type$MH,"g_variant_get_type");
    }
    public static MemoryAddress g_variant_get_type ( Addressable value) {
        var mh$ = g_variant_get_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_type_string$MH() {
        return RuntimeHelper.requireNonNull(constants$225.g_variant_get_type_string$MH,"g_variant_get_type_string");
    }
    public static MemoryAddress g_variant_get_type_string ( Addressable value) {
        var mh$ = g_variant_get_type_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_is_of_type$MH() {
        return RuntimeHelper.requireNonNull(constants$226.g_variant_is_of_type$MH,"g_variant_is_of_type");
    }
    public static int g_variant_is_of_type ( Addressable value,  Addressable type) {
        var mh$ = g_variant_is_of_type$MH();
        try {
            return (int)mh$.invokeExact(value, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_is_container$MH() {
        return RuntimeHelper.requireNonNull(constants$226.g_variant_is_container$MH,"g_variant_is_container");
    }
    public static int g_variant_is_container ( Addressable value) {
        var mh$ = g_variant_is_container$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_classify$MH() {
        return RuntimeHelper.requireNonNull(constants$226.g_variant_classify$MH,"g_variant_classify");
    }
    public static int g_variant_classify ( Addressable value) {
        var mh$ = g_variant_classify$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$226.g_variant_new_boolean$MH,"g_variant_new_boolean");
    }
    public static MemoryAddress g_variant_new_boolean ( int value) {
        var mh$ = g_variant_new_boolean$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_byte$MH() {
        return RuntimeHelper.requireNonNull(constants$226.g_variant_new_byte$MH,"g_variant_new_byte");
    }
    public static MemoryAddress g_variant_new_byte ( byte value) {
        var mh$ = g_variant_new_byte$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_int16$MH() {
        return RuntimeHelper.requireNonNull(constants$226.g_variant_new_int16$MH,"g_variant_new_int16");
    }
    public static MemoryAddress g_variant_new_int16 ( short value) {
        var mh$ = g_variant_new_int16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_uint16$MH() {
        return RuntimeHelper.requireNonNull(constants$227.g_variant_new_uint16$MH,"g_variant_new_uint16");
    }
    public static MemoryAddress g_variant_new_uint16 ( short value) {
        var mh$ = g_variant_new_uint16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_int32$MH() {
        return RuntimeHelper.requireNonNull(constants$227.g_variant_new_int32$MH,"g_variant_new_int32");
    }
    public static MemoryAddress g_variant_new_int32 ( int value) {
        var mh$ = g_variant_new_int32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_uint32$MH() {
        return RuntimeHelper.requireNonNull(constants$227.g_variant_new_uint32$MH,"g_variant_new_uint32");
    }
    public static MemoryAddress g_variant_new_uint32 ( int value) {
        var mh$ = g_variant_new_uint32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$227.g_variant_new_int64$MH,"g_variant_new_int64");
    }
    public static MemoryAddress g_variant_new_int64 ( long value) {
        var mh$ = g_variant_new_int64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$227.g_variant_new_uint64$MH,"g_variant_new_uint64");
    }
    public static MemoryAddress g_variant_new_uint64 ( long value) {
        var mh$ = g_variant_new_uint64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_handle$MH() {
        return RuntimeHelper.requireNonNull(constants$227.g_variant_new_handle$MH,"g_variant_new_handle");
    }
    public static MemoryAddress g_variant_new_handle ( int value) {
        var mh$ = g_variant_new_handle$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_double$MH() {
        return RuntimeHelper.requireNonNull(constants$228.g_variant_new_double$MH,"g_variant_new_double");
    }
    public static MemoryAddress g_variant_new_double ( double value) {
        var mh$ = g_variant_new_double$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_string$MH() {
        return RuntimeHelper.requireNonNull(constants$228.g_variant_new_string$MH,"g_variant_new_string");
    }
    public static MemoryAddress g_variant_new_string ( Addressable string) {
        var mh$ = g_variant_new_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_take_string$MH() {
        return RuntimeHelper.requireNonNull(constants$228.g_variant_new_take_string$MH,"g_variant_new_take_string");
    }
    public static MemoryAddress g_variant_new_take_string ( Addressable string) {
        var mh$ = g_variant_new_take_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_printf$MH() {
        return RuntimeHelper.requireNonNull(constants$228.g_variant_new_printf$MH,"g_variant_new_printf");
    }
    public static MemoryAddress g_variant_new_printf ( Addressable format_string, Object... x1) {
        var mh$ = g_variant_new_printf$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(format_string, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_object_path$MH() {
        return RuntimeHelper.requireNonNull(constants$228.g_variant_new_object_path$MH,"g_variant_new_object_path");
    }
    public static MemoryAddress g_variant_new_object_path ( Addressable object_path) {
        var mh$ = g_variant_new_object_path$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_is_object_path$MH() {
        return RuntimeHelper.requireNonNull(constants$228.g_variant_is_object_path$MH,"g_variant_is_object_path");
    }
    public static int g_variant_is_object_path ( Addressable string) {
        var mh$ = g_variant_is_object_path$MH();
        try {
            return (int)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_signature$MH() {
        return RuntimeHelper.requireNonNull(constants$229.g_variant_new_signature$MH,"g_variant_new_signature");
    }
    public static MemoryAddress g_variant_new_signature ( Addressable signature) {
        var mh$ = g_variant_new_signature$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(signature);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_is_signature$MH() {
        return RuntimeHelper.requireNonNull(constants$229.g_variant_is_signature$MH,"g_variant_is_signature");
    }
    public static int g_variant_is_signature ( Addressable string) {
        var mh$ = g_variant_is_signature$MH();
        try {
            return (int)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$229.g_variant_new_variant$MH,"g_variant_new_variant");
    }
    public static MemoryAddress g_variant_new_variant ( Addressable value) {
        var mh$ = g_variant_new_variant$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_strv$MH() {
        return RuntimeHelper.requireNonNull(constants$229.g_variant_new_strv$MH,"g_variant_new_strv");
    }
    public static MemoryAddress g_variant_new_strv ( Addressable strv,  long length) {
        var mh$ = g_variant_new_strv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(strv, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_objv$MH() {
        return RuntimeHelper.requireNonNull(constants$229.g_variant_new_objv$MH,"g_variant_new_objv");
    }
    public static MemoryAddress g_variant_new_objv ( Addressable strv,  long length) {
        var mh$ = g_variant_new_objv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(strv, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_bytestring$MH() {
        return RuntimeHelper.requireNonNull(constants$229.g_variant_new_bytestring$MH,"g_variant_new_bytestring");
    }
    public static MemoryAddress g_variant_new_bytestring ( Addressable string) {
        var mh$ = g_variant_new_bytestring$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_bytestring_array$MH() {
        return RuntimeHelper.requireNonNull(constants$230.g_variant_new_bytestring_array$MH,"g_variant_new_bytestring_array");
    }
    public static MemoryAddress g_variant_new_bytestring_array ( Addressable strv,  long length) {
        var mh$ = g_variant_new_bytestring_array$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(strv, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_fixed_array$MH() {
        return RuntimeHelper.requireNonNull(constants$230.g_variant_new_fixed_array$MH,"g_variant_new_fixed_array");
    }
    public static MemoryAddress g_variant_new_fixed_array ( Addressable element_type,  Addressable elements,  long n_elements,  long element_size) {
        var mh$ = g_variant_new_fixed_array$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(element_type, elements, n_elements, element_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$230.g_variant_get_boolean$MH,"g_variant_get_boolean");
    }
    public static int g_variant_get_boolean ( Addressable value) {
        var mh$ = g_variant_get_boolean$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_byte$MH() {
        return RuntimeHelper.requireNonNull(constants$230.g_variant_get_byte$MH,"g_variant_get_byte");
    }
    public static byte g_variant_get_byte ( Addressable value) {
        var mh$ = g_variant_get_byte$MH();
        try {
            return (byte)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_int16$MH() {
        return RuntimeHelper.requireNonNull(constants$230.g_variant_get_int16$MH,"g_variant_get_int16");
    }
    public static short g_variant_get_int16 ( Addressable value) {
        var mh$ = g_variant_get_int16$MH();
        try {
            return (short)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_uint16$MH() {
        return RuntimeHelper.requireNonNull(constants$230.g_variant_get_uint16$MH,"g_variant_get_uint16");
    }
    public static short g_variant_get_uint16 ( Addressable value) {
        var mh$ = g_variant_get_uint16$MH();
        try {
            return (short)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_int32$MH() {
        return RuntimeHelper.requireNonNull(constants$231.g_variant_get_int32$MH,"g_variant_get_int32");
    }
    public static int g_variant_get_int32 ( Addressable value) {
        var mh$ = g_variant_get_int32$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_uint32$MH() {
        return RuntimeHelper.requireNonNull(constants$231.g_variant_get_uint32$MH,"g_variant_get_uint32");
    }
    public static int g_variant_get_uint32 ( Addressable value) {
        var mh$ = g_variant_get_uint32$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$231.g_variant_get_int64$MH,"g_variant_get_int64");
    }
    public static long g_variant_get_int64 ( Addressable value) {
        var mh$ = g_variant_get_int64$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$231.g_variant_get_uint64$MH,"g_variant_get_uint64");
    }
    public static long g_variant_get_uint64 ( Addressable value) {
        var mh$ = g_variant_get_uint64$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_handle$MH() {
        return RuntimeHelper.requireNonNull(constants$231.g_variant_get_handle$MH,"g_variant_get_handle");
    }
    public static int g_variant_get_handle ( Addressable value) {
        var mh$ = g_variant_get_handle$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_double$MH() {
        return RuntimeHelper.requireNonNull(constants$231.g_variant_get_double$MH,"g_variant_get_double");
    }
    public static double g_variant_get_double ( Addressable value) {
        var mh$ = g_variant_get_double$MH();
        try {
            return (double)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$232.g_variant_get_variant$MH,"g_variant_get_variant");
    }
    public static MemoryAddress g_variant_get_variant ( Addressable value) {
        var mh$ = g_variant_get_variant$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_string$MH() {
        return RuntimeHelper.requireNonNull(constants$232.g_variant_get_string$MH,"g_variant_get_string");
    }
    public static MemoryAddress g_variant_get_string ( Addressable value,  Addressable length) {
        var mh$ = g_variant_get_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dup_string$MH() {
        return RuntimeHelper.requireNonNull(constants$232.g_variant_dup_string$MH,"g_variant_dup_string");
    }
    public static MemoryAddress g_variant_dup_string ( Addressable value,  Addressable length) {
        var mh$ = g_variant_dup_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_strv$MH() {
        return RuntimeHelper.requireNonNull(constants$232.g_variant_get_strv$MH,"g_variant_get_strv");
    }
    public static MemoryAddress g_variant_get_strv ( Addressable value,  Addressable length) {
        var mh$ = g_variant_get_strv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dup_strv$MH() {
        return RuntimeHelper.requireNonNull(constants$232.g_variant_dup_strv$MH,"g_variant_dup_strv");
    }
    public static MemoryAddress g_variant_dup_strv ( Addressable value,  Addressable length) {
        var mh$ = g_variant_dup_strv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_objv$MH() {
        return RuntimeHelper.requireNonNull(constants$232.g_variant_get_objv$MH,"g_variant_get_objv");
    }
    public static MemoryAddress g_variant_get_objv ( Addressable value,  Addressable length) {
        var mh$ = g_variant_get_objv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dup_objv$MH() {
        return RuntimeHelper.requireNonNull(constants$233.g_variant_dup_objv$MH,"g_variant_dup_objv");
    }
    public static MemoryAddress g_variant_dup_objv ( Addressable value,  Addressable length) {
        var mh$ = g_variant_dup_objv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_bytestring$MH() {
        return RuntimeHelper.requireNonNull(constants$233.g_variant_get_bytestring$MH,"g_variant_get_bytestring");
    }
    public static MemoryAddress g_variant_get_bytestring ( Addressable value) {
        var mh$ = g_variant_get_bytestring$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dup_bytestring$MH() {
        return RuntimeHelper.requireNonNull(constants$233.g_variant_dup_bytestring$MH,"g_variant_dup_bytestring");
    }
    public static MemoryAddress g_variant_dup_bytestring ( Addressable value,  Addressable length) {
        var mh$ = g_variant_dup_bytestring$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_bytestring_array$MH() {
        return RuntimeHelper.requireNonNull(constants$233.g_variant_get_bytestring_array$MH,"g_variant_get_bytestring_array");
    }
    public static MemoryAddress g_variant_get_bytestring_array ( Addressable value,  Addressable length) {
        var mh$ = g_variant_get_bytestring_array$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dup_bytestring_array$MH() {
        return RuntimeHelper.requireNonNull(constants$233.g_variant_dup_bytestring_array$MH,"g_variant_dup_bytestring_array");
    }
    public static MemoryAddress g_variant_dup_bytestring_array ( Addressable value,  Addressable length) {
        var mh$ = g_variant_dup_bytestring_array$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_maybe$MH() {
        return RuntimeHelper.requireNonNull(constants$233.g_variant_new_maybe$MH,"g_variant_new_maybe");
    }
    public static MemoryAddress g_variant_new_maybe ( Addressable child_type,  Addressable child) {
        var mh$ = g_variant_new_maybe$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(child_type, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_array$MH() {
        return RuntimeHelper.requireNonNull(constants$234.g_variant_new_array$MH,"g_variant_new_array");
    }
    public static MemoryAddress g_variant_new_array ( Addressable child_type,  Addressable children,  long n_children) {
        var mh$ = g_variant_new_array$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(child_type, children, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_tuple$MH() {
        return RuntimeHelper.requireNonNull(constants$234.g_variant_new_tuple$MH,"g_variant_new_tuple");
    }
    public static MemoryAddress g_variant_new_tuple ( Addressable children,  long n_children) {
        var mh$ = g_variant_new_tuple$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(children, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_dict_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$234.g_variant_new_dict_entry$MH,"g_variant_new_dict_entry");
    }
    public static MemoryAddress g_variant_new_dict_entry ( Addressable key,  Addressable value) {
        var mh$ = g_variant_new_dict_entry$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_maybe$MH() {
        return RuntimeHelper.requireNonNull(constants$234.g_variant_get_maybe$MH,"g_variant_get_maybe");
    }
    public static MemoryAddress g_variant_get_maybe ( Addressable value) {
        var mh$ = g_variant_get_maybe$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_n_children$MH() {
        return RuntimeHelper.requireNonNull(constants$234.g_variant_n_children$MH,"g_variant_n_children");
    }
    public static long g_variant_n_children ( Addressable value) {
        var mh$ = g_variant_n_children$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$234.g_variant_get_child$MH,"g_variant_get_child");
    }
    public static void g_variant_get_child ( Addressable value,  long index_,  Addressable format_string, Object... x3) {
        var mh$ = g_variant_get_child$MH();
        try {
            mh$.invokeExact(value, index_, format_string, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_child_value$MH() {
        return RuntimeHelper.requireNonNull(constants$235.g_variant_get_child_value$MH,"g_variant_get_child_value");
    }
    public static MemoryAddress g_variant_get_child_value ( Addressable value,  long index_) {
        var mh$ = g_variant_get_child_value$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$235.g_variant_lookup$MH,"g_variant_lookup");
    }
    public static int g_variant_lookup ( Addressable dictionary,  Addressable key,  Addressable format_string, Object... x3) {
        var mh$ = g_variant_lookup$MH();
        try {
            return (int)mh$.invokeExact(dictionary, key, format_string, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_lookup_value$MH() {
        return RuntimeHelper.requireNonNull(constants$235.g_variant_lookup_value$MH,"g_variant_lookup_value");
    }
    public static MemoryAddress g_variant_lookup_value ( Addressable dictionary,  Addressable key,  Addressable expected_type) {
        var mh$ = g_variant_lookup_value$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(dictionary, key, expected_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_fixed_array$MH() {
        return RuntimeHelper.requireNonNull(constants$235.g_variant_get_fixed_array$MH,"g_variant_get_fixed_array");
    }
    public static MemoryAddress g_variant_get_fixed_array ( Addressable value,  Addressable n_elements,  long element_size) {
        var mh$ = g_variant_get_fixed_array$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, n_elements, element_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$235.g_variant_get_size$MH,"g_variant_get_size");
    }
    public static long g_variant_get_size ( Addressable value) {
        var mh$ = g_variant_get_size$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_data$MH() {
        return RuntimeHelper.requireNonNull(constants$235.g_variant_get_data$MH,"g_variant_get_data");
    }
    public static MemoryAddress g_variant_get_data ( Addressable value) {
        var mh$ = g_variant_get_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_data_as_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$236.g_variant_get_data_as_bytes$MH,"g_variant_get_data_as_bytes");
    }
    public static MemoryAddress g_variant_get_data_as_bytes ( Addressable value) {
        var mh$ = g_variant_get_data_as_bytes$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_store$MH() {
        return RuntimeHelper.requireNonNull(constants$236.g_variant_store$MH,"g_variant_store");
    }
    public static void g_variant_store ( Addressable value,  Addressable data) {
        var mh$ = g_variant_store$MH();
        try {
            mh$.invokeExact(value, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_print$MH() {
        return RuntimeHelper.requireNonNull(constants$236.g_variant_print$MH,"g_variant_print");
    }
    public static MemoryAddress g_variant_print ( Addressable value,  int type_annotate) {
        var mh$ = g_variant_print$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, type_annotate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_print_string$MH() {
        return RuntimeHelper.requireNonNull(constants$236.g_variant_print_string$MH,"g_variant_print_string");
    }
    public static MemoryAddress g_variant_print_string ( Addressable value,  Addressable string,  int type_annotate) {
        var mh$ = g_variant_print_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, string, type_annotate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$236.g_variant_hash$MH,"g_variant_hash");
    }
    public static int g_variant_hash ( Addressable value) {
        var mh$ = g_variant_hash$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$236.g_variant_equal$MH,"g_variant_equal");
    }
    public static int g_variant_equal ( Addressable one,  Addressable two) {
        var mh$ = g_variant_equal$MH();
        try {
            return (int)mh$.invokeExact(one, two);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_normal_form$MH() {
        return RuntimeHelper.requireNonNull(constants$237.g_variant_get_normal_form$MH,"g_variant_get_normal_form");
    }
    public static MemoryAddress g_variant_get_normal_form ( Addressable value) {
        var mh$ = g_variant_get_normal_form$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_is_normal_form$MH() {
        return RuntimeHelper.requireNonNull(constants$237.g_variant_is_normal_form$MH,"g_variant_is_normal_form");
    }
    public static int g_variant_is_normal_form ( Addressable value) {
        var mh$ = g_variant_is_normal_form$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_byteswap$MH() {
        return RuntimeHelper.requireNonNull(constants$237.g_variant_byteswap$MH,"g_variant_byteswap");
    }
    public static MemoryAddress g_variant_byteswap ( Addressable value) {
        var mh$ = g_variant_byteswap$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_from_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$237.g_variant_new_from_bytes$MH,"g_variant_new_from_bytes");
    }
    public static MemoryAddress g_variant_new_from_bytes ( Addressable type,  Addressable bytes,  int trusted) {
        var mh$ = g_variant_new_from_bytes$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type, bytes, trusted);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_from_data$MH() {
        return RuntimeHelper.requireNonNull(constants$237.g_variant_new_from_data$MH,"g_variant_new_from_data");
    }
    public static MemoryAddress g_variant_new_from_data ( Addressable type,  Addressable data,  long size,  int trusted,  Addressable notify,  Addressable user_data) {
        var mh$ = g_variant_new_from_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type, data, size, trusted, notify, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_iter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$237.g_variant_iter_new$MH,"g_variant_iter_new");
    }
    public static MemoryAddress g_variant_iter_new ( Addressable value) {
        var mh$ = g_variant_iter_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_iter_init$MH() {
        return RuntimeHelper.requireNonNull(constants$238.g_variant_iter_init$MH,"g_variant_iter_init");
    }
    public static long g_variant_iter_init ( Addressable iter,  Addressable value) {
        var mh$ = g_variant_iter_init$MH();
        try {
            return (long)mh$.invokeExact(iter, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_iter_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$238.g_variant_iter_copy$MH,"g_variant_iter_copy");
    }
    public static MemoryAddress g_variant_iter_copy ( Addressable iter) {
        var mh$ = g_variant_iter_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_iter_n_children$MH() {
        return RuntimeHelper.requireNonNull(constants$238.g_variant_iter_n_children$MH,"g_variant_iter_n_children");
    }
    public static long g_variant_iter_n_children ( Addressable iter) {
        var mh$ = g_variant_iter_n_children$MH();
        try {
            return (long)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_iter_free$MH() {
        return RuntimeHelper.requireNonNull(constants$238.g_variant_iter_free$MH,"g_variant_iter_free");
    }
    public static void g_variant_iter_free ( Addressable iter) {
        var mh$ = g_variant_iter_free$MH();
        try {
            mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_iter_next_value$MH() {
        return RuntimeHelper.requireNonNull(constants$238.g_variant_iter_next_value$MH,"g_variant_iter_next_value");
    }
    public static MemoryAddress g_variant_iter_next_value ( Addressable iter) {
        var mh$ = g_variant_iter_next_value$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_iter_next$MH() {
        return RuntimeHelper.requireNonNull(constants$238.g_variant_iter_next$MH,"g_variant_iter_next");
    }
    public static int g_variant_iter_next ( Addressable iter,  Addressable format_string, Object... x2) {
        var mh$ = g_variant_iter_next$MH();
        try {
            return (int)mh$.invokeExact(iter, format_string, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_iter_loop$MH() {
        return RuntimeHelper.requireNonNull(constants$239.g_variant_iter_loop$MH,"g_variant_iter_loop");
    }
    public static int g_variant_iter_loop ( Addressable iter,  Addressable format_string, Object... x2) {
        var mh$ = g_variant_iter_loop$MH();
        try {
            return (int)mh$.invokeExact(iter, format_string, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_VARIANT_PARSE_ERROR_FAILED() {
        return (int)0L;
    }
    public static int G_VARIANT_PARSE_ERROR_BASIC_TYPE_EXPECTED() {
        return (int)1L;
    }
    public static int G_VARIANT_PARSE_ERROR_CANNOT_INFER_TYPE() {
        return (int)2L;
    }
    public static int G_VARIANT_PARSE_ERROR_DEFINITE_TYPE_EXPECTED() {
        return (int)3L;
    }
    public static int G_VARIANT_PARSE_ERROR_INPUT_NOT_AT_END() {
        return (int)4L;
    }
    public static int G_VARIANT_PARSE_ERROR_INVALID_CHARACTER() {
        return (int)5L;
    }
    public static int G_VARIANT_PARSE_ERROR_INVALID_FORMAT_STRING() {
        return (int)6L;
    }
    public static int G_VARIANT_PARSE_ERROR_INVALID_OBJECT_PATH() {
        return (int)7L;
    }
    public static int G_VARIANT_PARSE_ERROR_INVALID_SIGNATURE() {
        return (int)8L;
    }
    public static int G_VARIANT_PARSE_ERROR_INVALID_TYPE_STRING() {
        return (int)9L;
    }
    public static int G_VARIANT_PARSE_ERROR_NO_COMMON_TYPE() {
        return (int)10L;
    }
    public static int G_VARIANT_PARSE_ERROR_NUMBER_OUT_OF_RANGE() {
        return (int)11L;
    }
    public static int G_VARIANT_PARSE_ERROR_NUMBER_TOO_BIG() {
        return (int)12L;
    }
    public static int G_VARIANT_PARSE_ERROR_TYPE_ERROR() {
        return (int)13L;
    }
    public static int G_VARIANT_PARSE_ERROR_UNEXPECTED_TOKEN() {
        return (int)14L;
    }
    public static int G_VARIANT_PARSE_ERROR_UNKNOWN_KEYWORD() {
        return (int)15L;
    }
    public static int G_VARIANT_PARSE_ERROR_UNTERMINATED_STRING_CONSTANT() {
        return (int)16L;
    }
    public static int G_VARIANT_PARSE_ERROR_VALUE_EXPECTED() {
        return (int)17L;
    }
    public static int G_VARIANT_PARSE_ERROR_RECURSION() {
        return (int)18L;
    }
    public static MethodHandle g_variant_parser_get_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$239.g_variant_parser_get_error_quark$MH,"g_variant_parser_get_error_quark");
    }
    public static int g_variant_parser_get_error_quark () {
        var mh$ = g_variant_parser_get_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_parse_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$239.g_variant_parse_error_quark$MH,"g_variant_parse_error_quark");
    }
    public static int g_variant_parse_error_quark () {
        var mh$ = g_variant_parse_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_builder_new$MH() {
        return RuntimeHelper.requireNonNull(constants$239.g_variant_builder_new$MH,"g_variant_builder_new");
    }
    public static MemoryAddress g_variant_builder_new ( Addressable type) {
        var mh$ = g_variant_builder_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_builder_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$239.g_variant_builder_unref$MH,"g_variant_builder_unref");
    }
    public static void g_variant_builder_unref ( Addressable builder) {
        var mh$ = g_variant_builder_unref$MH();
        try {
            mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_builder_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$239.g_variant_builder_ref$MH,"g_variant_builder_ref");
    }
    public static MemoryAddress g_variant_builder_ref ( Addressable builder) {
        var mh$ = g_variant_builder_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_builder_init$MH() {
        return RuntimeHelper.requireNonNull(constants$240.g_variant_builder_init$MH,"g_variant_builder_init");
    }
    public static void g_variant_builder_init ( Addressable builder,  Addressable type) {
        var mh$ = g_variant_builder_init$MH();
        try {
            mh$.invokeExact(builder, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_builder_end$MH() {
        return RuntimeHelper.requireNonNull(constants$240.g_variant_builder_end$MH,"g_variant_builder_end");
    }
    public static MemoryAddress g_variant_builder_end ( Addressable builder) {
        var mh$ = g_variant_builder_end$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_builder_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$240.g_variant_builder_clear$MH,"g_variant_builder_clear");
    }
    public static void g_variant_builder_clear ( Addressable builder) {
        var mh$ = g_variant_builder_clear$MH();
        try {
            mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_builder_open$MH() {
        return RuntimeHelper.requireNonNull(constants$240.g_variant_builder_open$MH,"g_variant_builder_open");
    }
    public static void g_variant_builder_open ( Addressable builder,  Addressable type) {
        var mh$ = g_variant_builder_open$MH();
        try {
            mh$.invokeExact(builder, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_builder_close$MH() {
        return RuntimeHelper.requireNonNull(constants$240.g_variant_builder_close$MH,"g_variant_builder_close");
    }
    public static void g_variant_builder_close ( Addressable builder) {
        var mh$ = g_variant_builder_close$MH();
        try {
            mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_builder_add_value$MH() {
        return RuntimeHelper.requireNonNull(constants$240.g_variant_builder_add_value$MH,"g_variant_builder_add_value");
    }
    public static void g_variant_builder_add_value ( Addressable builder,  Addressable value) {
        var mh$ = g_variant_builder_add_value$MH();
        try {
            mh$.invokeExact(builder, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_builder_add$MH() {
        return RuntimeHelper.requireNonNull(constants$241.g_variant_builder_add$MH,"g_variant_builder_add");
    }
    public static void g_variant_builder_add ( Addressable builder,  Addressable format_string, Object... x2) {
        var mh$ = g_variant_builder_add$MH();
        try {
            mh$.invokeExact(builder, format_string, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_builder_add_parsed$MH() {
        return RuntimeHelper.requireNonNull(constants$241.g_variant_builder_add_parsed$MH,"g_variant_builder_add_parsed");
    }
    public static void g_variant_builder_add_parsed ( Addressable builder,  Addressable format, Object... x2) {
        var mh$ = g_variant_builder_add_parsed$MH();
        try {
            mh$.invokeExact(builder, format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new$MH() {
        return RuntimeHelper.requireNonNull(constants$241.g_variant_new$MH,"g_variant_new");
    }
    public static MemoryAddress g_variant_new ( Addressable format_string, Object... x1) {
        var mh$ = g_variant_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(format_string, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get$MH() {
        return RuntimeHelper.requireNonNull(constants$241.g_variant_get$MH,"g_variant_get");
    }
    public static void g_variant_get ( Addressable value,  Addressable format_string, Object... x2) {
        var mh$ = g_variant_get$MH();
        try {
            mh$.invokeExact(value, format_string, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_va$MH() {
        return RuntimeHelper.requireNonNull(constants$241.g_variant_new_va$MH,"g_variant_new_va");
    }
    public static MemoryAddress g_variant_new_va ( Addressable format_string,  Addressable endptr,  Addressable app) {
        var mh$ = g_variant_new_va$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(format_string, endptr, app);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_va$MH() {
        return RuntimeHelper.requireNonNull(constants$241.g_variant_get_va$MH,"g_variant_get_va");
    }
    public static void g_variant_get_va ( Addressable value,  Addressable format_string,  Addressable endptr,  Addressable app) {
        var mh$ = g_variant_get_va$MH();
        try {
            mh$.invokeExact(value, format_string, endptr, app);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_check_format_string$MH() {
        return RuntimeHelper.requireNonNull(constants$242.g_variant_check_format_string$MH,"g_variant_check_format_string");
    }
    public static int g_variant_check_format_string ( Addressable value,  Addressable format_string,  int copy_only) {
        var mh$ = g_variant_check_format_string$MH();
        try {
            return (int)mh$.invokeExact(value, format_string, copy_only);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_parse$MH() {
        return RuntimeHelper.requireNonNull(constants$242.g_variant_parse$MH,"g_variant_parse");
    }
    public static MemoryAddress g_variant_parse ( Addressable type,  Addressable text,  Addressable limit,  Addressable endptr,  Addressable error) {
        var mh$ = g_variant_parse$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type, text, limit, endptr, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_parsed$MH() {
        return RuntimeHelper.requireNonNull(constants$242.g_variant_new_parsed$MH,"g_variant_new_parsed");
    }
    public static MemoryAddress g_variant_new_parsed ( Addressable format, Object... x1) {
        var mh$ = g_variant_new_parsed$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_parsed_va$MH() {
        return RuntimeHelper.requireNonNull(constants$242.g_variant_new_parsed_va$MH,"g_variant_new_parsed_va");
    }
    public static MemoryAddress g_variant_new_parsed_va ( Addressable format,  Addressable app) {
        var mh$ = g_variant_new_parsed_va$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(format, app);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_parse_error_print_context$MH() {
        return RuntimeHelper.requireNonNull(constants$242.g_variant_parse_error_print_context$MH,"g_variant_parse_error_print_context");
    }
    public static MemoryAddress g_variant_parse_error_print_context ( Addressable error,  Addressable source_str) {
        var mh$ = g_variant_parse_error_print_context$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(error, source_str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_compare$MH() {
        return RuntimeHelper.requireNonNull(constants$242.g_variant_compare$MH,"g_variant_compare");
    }
    public static int g_variant_compare ( Addressable one,  Addressable two) {
        var mh$ = g_variant_compare$MH();
        try {
            return (int)mh$.invokeExact(one, two);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dict_new$MH() {
        return RuntimeHelper.requireNonNull(constants$243.g_variant_dict_new$MH,"g_variant_dict_new");
    }
    public static MemoryAddress g_variant_dict_new ( Addressable from_asv) {
        var mh$ = g_variant_dict_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(from_asv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dict_init$MH() {
        return RuntimeHelper.requireNonNull(constants$243.g_variant_dict_init$MH,"g_variant_dict_init");
    }
    public static void g_variant_dict_init ( Addressable dict,  Addressable from_asv) {
        var mh$ = g_variant_dict_init$MH();
        try {
            mh$.invokeExact(dict, from_asv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dict_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$243.g_variant_dict_lookup$MH,"g_variant_dict_lookup");
    }
    public static int g_variant_dict_lookup ( Addressable dict,  Addressable key,  Addressable format_string, Object... x3) {
        var mh$ = g_variant_dict_lookup$MH();
        try {
            return (int)mh$.invokeExact(dict, key, format_string, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dict_lookup_value$MH() {
        return RuntimeHelper.requireNonNull(constants$243.g_variant_dict_lookup_value$MH,"g_variant_dict_lookup_value");
    }
    public static MemoryAddress g_variant_dict_lookup_value ( Addressable dict,  Addressable key,  Addressable expected_type) {
        var mh$ = g_variant_dict_lookup_value$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(dict, key, expected_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dict_contains$MH() {
        return RuntimeHelper.requireNonNull(constants$243.g_variant_dict_contains$MH,"g_variant_dict_contains");
    }
    public static int g_variant_dict_contains ( Addressable dict,  Addressable key) {
        var mh$ = g_variant_dict_contains$MH();
        try {
            return (int)mh$.invokeExact(dict, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dict_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$243.g_variant_dict_insert$MH,"g_variant_dict_insert");
    }
    public static void g_variant_dict_insert ( Addressable dict,  Addressable key,  Addressable format_string, Object... x3) {
        var mh$ = g_variant_dict_insert$MH();
        try {
            mh$.invokeExact(dict, key, format_string, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dict_insert_value$MH() {
        return RuntimeHelper.requireNonNull(constants$244.g_variant_dict_insert_value$MH,"g_variant_dict_insert_value");
    }
    public static void g_variant_dict_insert_value ( Addressable dict,  Addressable key,  Addressable value) {
        var mh$ = g_variant_dict_insert_value$MH();
        try {
            mh$.invokeExact(dict, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dict_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$244.g_variant_dict_remove$MH,"g_variant_dict_remove");
    }
    public static int g_variant_dict_remove ( Addressable dict,  Addressable key) {
        var mh$ = g_variant_dict_remove$MH();
        try {
            return (int)mh$.invokeExact(dict, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dict_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$244.g_variant_dict_clear$MH,"g_variant_dict_clear");
    }
    public static void g_variant_dict_clear ( Addressable dict) {
        var mh$ = g_variant_dict_clear$MH();
        try {
            mh$.invokeExact(dict);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dict_end$MH() {
        return RuntimeHelper.requireNonNull(constants$244.g_variant_dict_end$MH,"g_variant_dict_end");
    }
    public static MemoryAddress g_variant_dict_end ( Addressable dict) {
        var mh$ = g_variant_dict_end$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(dict);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dict_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$244.g_variant_dict_ref$MH,"g_variant_dict_ref");
    }
    public static MemoryAddress g_variant_dict_ref ( Addressable dict) {
        var mh$ = g_variant_dict_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(dict);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dict_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$244.g_variant_dict_unref$MH,"g_variant_dict_unref");
    }
    public static void g_variant_dict_unref ( Addressable dict) {
        var mh$ = g_variant_dict_unref$MH();
        try {
            mh$.invokeExact(dict);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_printf_string_upper_bound$MH() {
        return RuntimeHelper.requireNonNull(constants$245.g_printf_string_upper_bound$MH,"g_printf_string_upper_bound");
    }
    public static long g_printf_string_upper_bound ( Addressable format,  Addressable args) {
        var mh$ = g_printf_string_upper_bound$MH();
        try {
            return (long)mh$.invokeExact(format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_LOG_FLAG_RECURSION() {
        return (int)1L;
    }
    public static int G_LOG_FLAG_FATAL() {
        return (int)2L;
    }
    public static int G_LOG_LEVEL_ERROR() {
        return (int)4L;
    }
    public static int G_LOG_LEVEL_CRITICAL() {
        return (int)8L;
    }
    public static int G_LOG_LEVEL_WARNING() {
        return (int)16L;
    }
    public static int G_LOG_LEVEL_MESSAGE() {
        return (int)32L;
    }
    public static int G_LOG_LEVEL_INFO() {
        return (int)64L;
    }
    public static int G_LOG_LEVEL_DEBUG() {
        return (int)128L;
    }
    public static int G_LOG_LEVEL_MASK() {
        return (int)-4L;
    }
    public static MethodHandle g_log_set_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$245.g_log_set_handler$MH,"g_log_set_handler");
    }
    public static int g_log_set_handler ( Addressable log_domain,  int log_levels,  Addressable log_func,  Addressable user_data) {
        var mh$ = g_log_set_handler$MH();
        try {
            return (int)mh$.invokeExact(log_domain, log_levels, log_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_set_handler_full$MH() {
        return RuntimeHelper.requireNonNull(constants$245.g_log_set_handler_full$MH,"g_log_set_handler_full");
    }
    public static int g_log_set_handler_full ( Addressable log_domain,  int log_levels,  Addressable log_func,  Addressable user_data,  Addressable destroy) {
        var mh$ = g_log_set_handler_full$MH();
        try {
            return (int)mh$.invokeExact(log_domain, log_levels, log_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_remove_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$245.g_log_remove_handler$MH,"g_log_remove_handler");
    }
    public static void g_log_remove_handler ( Addressable log_domain,  int handler_id) {
        var mh$ = g_log_remove_handler$MH();
        try {
            mh$.invokeExact(log_domain, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_default_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$246.g_log_default_handler$MH,"g_log_default_handler");
    }
    public static void g_log_default_handler ( Addressable log_domain,  int log_level,  Addressable message,  Addressable unused_data) {
        var mh$ = g_log_default_handler$MH();
        try {
            mh$.invokeExact(log_domain, log_level, message, unused_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_set_default_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$246.g_log_set_default_handler$MH,"g_log_set_default_handler");
    }
    public static MemoryAddress g_log_set_default_handler ( Addressable log_func,  Addressable user_data) {
        var mh$ = g_log_set_default_handler$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(log_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log$MH() {
        return RuntimeHelper.requireNonNull(constants$246.g_log$MH,"g_log");
    }
    public static void g_log ( Addressable log_domain,  int log_level,  Addressable format, Object... x3) {
        var mh$ = g_log$MH();
        try {
            mh$.invokeExact(log_domain, log_level, format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_logv$MH() {
        return RuntimeHelper.requireNonNull(constants$246.g_logv$MH,"g_logv");
    }
    public static void g_logv ( Addressable log_domain,  int log_level,  Addressable format,  Addressable args) {
        var mh$ = g_logv$MH();
        try {
            mh$.invokeExact(log_domain, log_level, format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_set_fatal_mask$MH() {
        return RuntimeHelper.requireNonNull(constants$246.g_log_set_fatal_mask$MH,"g_log_set_fatal_mask");
    }
    public static int g_log_set_fatal_mask ( Addressable log_domain,  int fatal_mask) {
        var mh$ = g_log_set_fatal_mask$MH();
        try {
            return (int)mh$.invokeExact(log_domain, fatal_mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_set_always_fatal$MH() {
        return RuntimeHelper.requireNonNull(constants$246.g_log_set_always_fatal$MH,"g_log_set_always_fatal");
    }
    public static int g_log_set_always_fatal ( int fatal_mask) {
        var mh$ = g_log_set_always_fatal$MH();
        try {
            return (int)mh$.invokeExact(fatal_mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_LOG_WRITER_HANDLED() {
        return (int)1L;
    }
    public static int G_LOG_WRITER_UNHANDLED() {
        return (int)0L;
    }
    public static MethodHandle g_log_structured$MH() {
        return RuntimeHelper.requireNonNull(constants$247.g_log_structured$MH,"g_log_structured");
    }
    public static void g_log_structured ( Addressable log_domain,  int log_level, Object... x2) {
        var mh$ = g_log_structured$MH();
        try {
            mh$.invokeExact(log_domain, log_level, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_structured_array$MH() {
        return RuntimeHelper.requireNonNull(constants$247.g_log_structured_array$MH,"g_log_structured_array");
    }
    public static void g_log_structured_array ( int log_level,  Addressable fields,  long n_fields) {
        var mh$ = g_log_structured_array$MH();
        try {
            mh$.invokeExact(log_level, fields, n_fields);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$247.g_log_variant$MH,"g_log_variant");
    }
    public static void g_log_variant ( Addressable log_domain,  int log_level,  Addressable fields) {
        var mh$ = g_log_variant$MH();
        try {
            mh$.invokeExact(log_domain, log_level, fields);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_set_writer_func$MH() {
        return RuntimeHelper.requireNonNull(constants$247.g_log_set_writer_func$MH,"g_log_set_writer_func");
    }
    public static void g_log_set_writer_func ( Addressable func,  Addressable user_data,  Addressable user_data_free) {
        var mh$ = g_log_set_writer_func$MH();
        try {
            mh$.invokeExact(func, user_data, user_data_free);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_writer_supports_color$MH() {
        return RuntimeHelper.requireNonNull(constants$248.g_log_writer_supports_color$MH,"g_log_writer_supports_color");
    }
    public static int g_log_writer_supports_color ( int output_fd) {
        var mh$ = g_log_writer_supports_color$MH();
        try {
            return (int)mh$.invokeExact(output_fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_writer_is_journald$MH() {
        return RuntimeHelper.requireNonNull(constants$248.g_log_writer_is_journald$MH,"g_log_writer_is_journald");
    }
    public static int g_log_writer_is_journald ( int output_fd) {
        var mh$ = g_log_writer_is_journald$MH();
        try {
            return (int)mh$.invokeExact(output_fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_writer_format_fields$MH() {
        return RuntimeHelper.requireNonNull(constants$248.g_log_writer_format_fields$MH,"g_log_writer_format_fields");
    }
    public static MemoryAddress g_log_writer_format_fields ( int log_level,  Addressable fields,  long n_fields,  int use_color) {
        var mh$ = g_log_writer_format_fields$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(log_level, fields, n_fields, use_color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_writer_journald$MH() {
        return RuntimeHelper.requireNonNull(constants$248.g_log_writer_journald$MH,"g_log_writer_journald");
    }
    public static int g_log_writer_journald ( int log_level,  Addressable fields,  long n_fields,  Addressable user_data) {
        var mh$ = g_log_writer_journald$MH();
        try {
            return (int)mh$.invokeExact(log_level, fields, n_fields, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_writer_standard_streams$MH() {
        return RuntimeHelper.requireNonNull(constants$248.g_log_writer_standard_streams$MH,"g_log_writer_standard_streams");
    }
    public static int g_log_writer_standard_streams ( int log_level,  Addressable fields,  long n_fields,  Addressable user_data) {
        var mh$ = g_log_writer_standard_streams$MH();
        try {
            return (int)mh$.invokeExact(log_level, fields, n_fields, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_writer_default$MH() {
        return RuntimeHelper.requireNonNull(constants$248.g_log_writer_default$MH,"g_log_writer_default");
    }
    public static int g_log_writer_default ( int log_level,  Addressable fields,  long n_fields,  Addressable user_data) {
        var mh$ = g_log_writer_default$MH();
        try {
            return (int)mh$.invokeExact(log_level, fields, n_fields, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_writer_default_set_use_stderr$MH() {
        return RuntimeHelper.requireNonNull(constants$249.g_log_writer_default_set_use_stderr$MH,"g_log_writer_default_set_use_stderr");
    }
    public static void g_log_writer_default_set_use_stderr ( int use_stderr) {
        var mh$ = g_log_writer_default_set_use_stderr$MH();
        try {
            mh$.invokeExact(use_stderr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_writer_default_would_drop$MH() {
        return RuntimeHelper.requireNonNull(constants$249.g_log_writer_default_would_drop$MH,"g_log_writer_default_would_drop");
    }
    public static int g_log_writer_default_would_drop ( int log_level,  Addressable log_domain) {
        var mh$ = g_log_writer_default_would_drop$MH();
        try {
            return (int)mh$.invokeExact(log_level, log_domain);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_get_debug_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$249.g_log_get_debug_enabled$MH,"g_log_get_debug_enabled");
    }
    public static int g_log_get_debug_enabled () {
        var mh$ = g_log_get_debug_enabled$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_set_debug_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$249.g_log_set_debug_enabled$MH,"g_log_set_debug_enabled");
    }
    public static void g_log_set_debug_enabled ( int enabled) {
        var mh$ = g_log_set_debug_enabled$MH();
        try {
            mh$.invokeExact(enabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _g_log_fallback_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$249._g_log_fallback_handler$MH,"_g_log_fallback_handler");
    }
    public static void _g_log_fallback_handler ( Addressable log_domain,  int log_level,  Addressable message,  Addressable unused_data) {
        var mh$ = _g_log_fallback_handler$MH();
        try {
            mh$.invokeExact(log_domain, log_level, message, unused_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_return_if_fail_warning$MH() {
        return RuntimeHelper.requireNonNull(constants$249.g_return_if_fail_warning$MH,"g_return_if_fail_warning");
    }
    public static void g_return_if_fail_warning ( Addressable log_domain,  Addressable pretty_function,  Addressable expression) {
        var mh$ = g_return_if_fail_warning$MH();
        try {
            mh$.invokeExact(log_domain, pretty_function, expression);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_warn_message$MH() {
        return RuntimeHelper.requireNonNull(constants$250.g_warn_message$MH,"g_warn_message");
    }
    public static void g_warn_message ( Addressable domain,  Addressable file,  int line,  Addressable func,  Addressable warnexpr) {
        var mh$ = g_warn_message$MH();
        try {
            mh$.invokeExact(domain, file, line, func, warnexpr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_assert_warning$MH() {
        return RuntimeHelper.requireNonNull(constants$250.g_assert_warning$MH,"g_assert_warning");
    }
    public static void g_assert_warning ( Addressable log_domain,  Addressable file,  int line,  Addressable pretty_function,  Addressable expression) {
        var mh$ = g_assert_warning$MH();
        try {
            mh$.invokeExact(log_domain, file, line, pretty_function, expression);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_log_structured_standard$MH() {
        return RuntimeHelper.requireNonNull(constants$250.g_log_structured_standard$MH,"g_log_structured_standard");
    }
    public static void g_log_structured_standard ( Addressable log_domain,  int log_level,  Addressable file,  Addressable line,  Addressable func,  Addressable message_format, Object... x6) {
        var mh$ = g_log_structured_standard$MH();
        try {
            mh$.invokeExact(log_domain, log_level, file, line, func, message_format, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_print$MH() {
        return RuntimeHelper.requireNonNull(constants$250.g_print$MH,"g_print");
    }
    public static void g_print ( Addressable format, Object... x1) {
        var mh$ = g_print$MH();
        try {
            mh$.invokeExact(format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_set_print_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$251.g_set_print_handler$MH,"g_set_print_handler");
    }
    public static MemoryAddress g_set_print_handler ( Addressable func) {
        var mh$ = g_set_print_handler$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_printerr$MH() {
        return RuntimeHelper.requireNonNull(constants$251.g_printerr$MH,"g_printerr");
    }
    public static void g_printerr ( Addressable format, Object... x1) {
        var mh$ = g_printerr$MH();
        try {
            mh$.invokeExact(format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_set_printerr_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$251.g_set_printerr_handler$MH,"g_set_printerr_handler");
    }
    public static MemoryAddress g_set_printerr_handler ( Addressable func) {
        var mh$ = g_set_printerr_handler$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_OPTION_FLAG_NONE() {
        return (int)0L;
    }
    public static int G_OPTION_FLAG_HIDDEN() {
        return (int)1L;
    }
    public static int G_OPTION_FLAG_IN_MAIN() {
        return (int)2L;
    }
    public static int G_OPTION_FLAG_REVERSE() {
        return (int)4L;
    }
    public static int G_OPTION_FLAG_NO_ARG() {
        return (int)8L;
    }
    public static int G_OPTION_FLAG_FILENAME() {
        return (int)16L;
    }
    public static int G_OPTION_FLAG_OPTIONAL_ARG() {
        return (int)32L;
    }
    public static int G_OPTION_FLAG_NOALIAS() {
        return (int)64L;
    }
    public static int G_OPTION_ARG_NONE() {
        return (int)0L;
    }
    public static int G_OPTION_ARG_STRING() {
        return (int)1L;
    }
    public static int G_OPTION_ARG_INT() {
        return (int)2L;
    }
    public static int G_OPTION_ARG_CALLBACK() {
        return (int)3L;
    }
    public static int G_OPTION_ARG_FILENAME() {
        return (int)4L;
    }
    public static int G_OPTION_ARG_STRING_ARRAY() {
        return (int)5L;
    }
    public static int G_OPTION_ARG_FILENAME_ARRAY() {
        return (int)6L;
    }
    public static int G_OPTION_ARG_DOUBLE() {
        return (int)7L;
    }
    public static int G_OPTION_ARG_INT64() {
        return (int)8L;
    }
    public static int G_OPTION_ERROR_UNKNOWN_OPTION() {
        return (int)0L;
    }
    public static int G_OPTION_ERROR_BAD_VALUE() {
        return (int)1L;
    }
    public static int G_OPTION_ERROR_FAILED() {
        return (int)2L;
    }
    public static MethodHandle g_option_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$252.g_option_error_quark$MH,"g_option_error_quark");
    }
    public static int g_option_error_quark () {
        var mh$ = g_option_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_new$MH() {
        return RuntimeHelper.requireNonNull(constants$252.g_option_context_new$MH,"g_option_context_new");
    }
    public static MemoryAddress g_option_context_new ( Addressable parameter_string) {
        var mh$ = g_option_context_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(parameter_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_set_summary$MH() {
        return RuntimeHelper.requireNonNull(constants$252.g_option_context_set_summary$MH,"g_option_context_set_summary");
    }
    public static void g_option_context_set_summary ( Addressable context,  Addressable summary) {
        var mh$ = g_option_context_set_summary$MH();
        try {
            mh$.invokeExact(context, summary);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_get_summary$MH() {
        return RuntimeHelper.requireNonNull(constants$253.g_option_context_get_summary$MH,"g_option_context_get_summary");
    }
    public static MemoryAddress g_option_context_get_summary ( Addressable context) {
        var mh$ = g_option_context_get_summary$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_set_description$MH() {
        return RuntimeHelper.requireNonNull(constants$253.g_option_context_set_description$MH,"g_option_context_set_description");
    }
    public static void g_option_context_set_description ( Addressable context,  Addressable description) {
        var mh$ = g_option_context_set_description$MH();
        try {
            mh$.invokeExact(context, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$253.g_option_context_get_description$MH,"g_option_context_get_description");
    }
    public static MemoryAddress g_option_context_get_description ( Addressable context) {
        var mh$ = g_option_context_get_description$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_free$MH() {
        return RuntimeHelper.requireNonNull(constants$253.g_option_context_free$MH,"g_option_context_free");
    }
    public static void g_option_context_free ( Addressable context) {
        var mh$ = g_option_context_free$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_set_help_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$253.g_option_context_set_help_enabled$MH,"g_option_context_set_help_enabled");
    }
    public static void g_option_context_set_help_enabled ( Addressable context,  int help_enabled) {
        var mh$ = g_option_context_set_help_enabled$MH();
        try {
            mh$.invokeExact(context, help_enabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_get_help_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$253.g_option_context_get_help_enabled$MH,"g_option_context_get_help_enabled");
    }
    public static int g_option_context_get_help_enabled ( Addressable context) {
        var mh$ = g_option_context_get_help_enabled$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_set_ignore_unknown_options$MH() {
        return RuntimeHelper.requireNonNull(constants$254.g_option_context_set_ignore_unknown_options$MH,"g_option_context_set_ignore_unknown_options");
    }
    public static void g_option_context_set_ignore_unknown_options ( Addressable context,  int ignore_unknown) {
        var mh$ = g_option_context_set_ignore_unknown_options$MH();
        try {
            mh$.invokeExact(context, ignore_unknown);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_get_ignore_unknown_options$MH() {
        return RuntimeHelper.requireNonNull(constants$254.g_option_context_get_ignore_unknown_options$MH,"g_option_context_get_ignore_unknown_options");
    }
    public static int g_option_context_get_ignore_unknown_options ( Addressable context) {
        var mh$ = g_option_context_get_ignore_unknown_options$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_set_strict_posix$MH() {
        return RuntimeHelper.requireNonNull(constants$254.g_option_context_set_strict_posix$MH,"g_option_context_set_strict_posix");
    }
    public static void g_option_context_set_strict_posix ( Addressable context,  int strict_posix) {
        var mh$ = g_option_context_set_strict_posix$MH();
        try {
            mh$.invokeExact(context, strict_posix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_get_strict_posix$MH() {
        return RuntimeHelper.requireNonNull(constants$254.g_option_context_get_strict_posix$MH,"g_option_context_get_strict_posix");
    }
    public static int g_option_context_get_strict_posix ( Addressable context) {
        var mh$ = g_option_context_get_strict_posix$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_add_main_entries$MH() {
        return RuntimeHelper.requireNonNull(constants$254.g_option_context_add_main_entries$MH,"g_option_context_add_main_entries");
    }
    public static void g_option_context_add_main_entries ( Addressable context,  Addressable entries,  Addressable translation_domain) {
        var mh$ = g_option_context_add_main_entries$MH();
        try {
            mh$.invokeExact(context, entries, translation_domain);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_parse$MH() {
        return RuntimeHelper.requireNonNull(constants$254.g_option_context_parse$MH,"g_option_context_parse");
    }
    public static int g_option_context_parse ( Addressable context,  Addressable argc,  Addressable argv,  Addressable error) {
        var mh$ = g_option_context_parse$MH();
        try {
            return (int)mh$.invokeExact(context, argc, argv, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_parse_strv$MH() {
        return RuntimeHelper.requireNonNull(constants$255.g_option_context_parse_strv$MH,"g_option_context_parse_strv");
    }
    public static int g_option_context_parse_strv ( Addressable context,  Addressable arguments,  Addressable error) {
        var mh$ = g_option_context_parse_strv$MH();
        try {
            return (int)mh$.invokeExact(context, arguments, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_set_translate_func$MH() {
        return RuntimeHelper.requireNonNull(constants$255.g_option_context_set_translate_func$MH,"g_option_context_set_translate_func");
    }
    public static void g_option_context_set_translate_func ( Addressable context,  Addressable func,  Addressable data,  Addressable destroy_notify) {
        var mh$ = g_option_context_set_translate_func$MH();
        try {
            mh$.invokeExact(context, func, data, destroy_notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_set_translation_domain$MH() {
        return RuntimeHelper.requireNonNull(constants$255.g_option_context_set_translation_domain$MH,"g_option_context_set_translation_domain");
    }
    public static void g_option_context_set_translation_domain ( Addressable context,  Addressable domain) {
        var mh$ = g_option_context_set_translation_domain$MH();
        try {
            mh$.invokeExact(context, domain);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_add_group$MH() {
        return RuntimeHelper.requireNonNull(constants$255.g_option_context_add_group$MH,"g_option_context_add_group");
    }
    public static void g_option_context_add_group ( Addressable context,  Addressable group) {
        var mh$ = g_option_context_add_group$MH();
        try {
            mh$.invokeExact(context, group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_set_main_group$MH() {
        return RuntimeHelper.requireNonNull(constants$255.g_option_context_set_main_group$MH,"g_option_context_set_main_group");
    }
    public static void g_option_context_set_main_group ( Addressable context,  Addressable group) {
        var mh$ = g_option_context_set_main_group$MH();
        try {
            mh$.invokeExact(context, group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_get_main_group$MH() {
        return RuntimeHelper.requireNonNull(constants$255.g_option_context_get_main_group$MH,"g_option_context_get_main_group");
    }
    public static MemoryAddress g_option_context_get_main_group ( Addressable context) {
        var mh$ = g_option_context_get_main_group$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_context_get_help$MH() {
        return RuntimeHelper.requireNonNull(constants$256.g_option_context_get_help$MH,"g_option_context_get_help");
    }
    public static MemoryAddress g_option_context_get_help ( Addressable context,  int main_help,  Addressable group) {
        var mh$ = g_option_context_get_help$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context, main_help, group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_group_new$MH() {
        return RuntimeHelper.requireNonNull(constants$256.g_option_group_new$MH,"g_option_group_new");
    }
    public static MemoryAddress g_option_group_new ( Addressable name,  Addressable description,  Addressable help_description,  Addressable user_data,  Addressable destroy) {
        var mh$ = g_option_group_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, description, help_description, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_group_set_parse_hooks$MH() {
        return RuntimeHelper.requireNonNull(constants$256.g_option_group_set_parse_hooks$MH,"g_option_group_set_parse_hooks");
    }
    public static void g_option_group_set_parse_hooks ( Addressable group,  Addressable pre_parse_func,  Addressable post_parse_func) {
        var mh$ = g_option_group_set_parse_hooks$MH();
        try {
            mh$.invokeExact(group, pre_parse_func, post_parse_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_group_set_error_hook$MH() {
        return RuntimeHelper.requireNonNull(constants$256.g_option_group_set_error_hook$MH,"g_option_group_set_error_hook");
    }
    public static void g_option_group_set_error_hook ( Addressable group,  Addressable error_func) {
        var mh$ = g_option_group_set_error_hook$MH();
        try {
            mh$.invokeExact(group, error_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_group_free$MH() {
        return RuntimeHelper.requireNonNull(constants$256.g_option_group_free$MH,"g_option_group_free");
    }
    public static void g_option_group_free ( Addressable group) {
        var mh$ = g_option_group_free$MH();
        try {
            mh$.invokeExact(group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_group_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$256.g_option_group_ref$MH,"g_option_group_ref");
    }
    public static MemoryAddress g_option_group_ref ( Addressable group) {
        var mh$ = g_option_group_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_group_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$257.g_option_group_unref$MH,"g_option_group_unref");
    }
    public static void g_option_group_unref ( Addressable group) {
        var mh$ = g_option_group_unref$MH();
        try {
            mh$.invokeExact(group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_group_add_entries$MH() {
        return RuntimeHelper.requireNonNull(constants$257.g_option_group_add_entries$MH,"g_option_group_add_entries");
    }
    public static void g_option_group_add_entries ( Addressable group,  Addressable entries) {
        var mh$ = g_option_group_add_entries$MH();
        try {
            mh$.invokeExact(group, entries);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_group_set_translate_func$MH() {
        return RuntimeHelper.requireNonNull(constants$257.g_option_group_set_translate_func$MH,"g_option_group_set_translate_func");
    }
    public static void g_option_group_set_translate_func ( Addressable group,  Addressable func,  Addressable data,  Addressable destroy_notify) {
        var mh$ = g_option_group_set_translate_func$MH();
        try {
            mh$.invokeExact(group, func, data, destroy_notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_group_set_translation_domain$MH() {
        return RuntimeHelper.requireNonNull(constants$257.g_option_group_set_translation_domain$MH,"g_option_group_set_translation_domain");
    }
    public static void g_option_group_set_translation_domain ( Addressable group,  Addressable domain) {
        var mh$ = g_option_group_set_translation_domain$MH();
        try {
            mh$.invokeExact(group, domain);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pattern_spec_new$MH() {
        return RuntimeHelper.requireNonNull(constants$257.g_pattern_spec_new$MH,"g_pattern_spec_new");
    }
    public static MemoryAddress g_pattern_spec_new ( Addressable pattern) {
        var mh$ = g_pattern_spec_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pattern_spec_free$MH() {
        return RuntimeHelper.requireNonNull(constants$257.g_pattern_spec_free$MH,"g_pattern_spec_free");
    }
    public static void g_pattern_spec_free ( Addressable pspec) {
        var mh$ = g_pattern_spec_free$MH();
        try {
            mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pattern_spec_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$258.g_pattern_spec_copy$MH,"g_pattern_spec_copy");
    }
    public static MemoryAddress g_pattern_spec_copy ( Addressable pspec) {
        var mh$ = g_pattern_spec_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pattern_spec_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$258.g_pattern_spec_equal$MH,"g_pattern_spec_equal");
    }
    public static int g_pattern_spec_equal ( Addressable pspec1,  Addressable pspec2) {
        var mh$ = g_pattern_spec_equal$MH();
        try {
            return (int)mh$.invokeExact(pspec1, pspec2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pattern_spec_match$MH() {
        return RuntimeHelper.requireNonNull(constants$258.g_pattern_spec_match$MH,"g_pattern_spec_match");
    }
    public static int g_pattern_spec_match ( Addressable pspec,  long string_length,  Addressable string,  Addressable string_reversed) {
        var mh$ = g_pattern_spec_match$MH();
        try {
            return (int)mh$.invokeExact(pspec, string_length, string, string_reversed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pattern_spec_match_string$MH() {
        return RuntimeHelper.requireNonNull(constants$258.g_pattern_spec_match_string$MH,"g_pattern_spec_match_string");
    }
    public static int g_pattern_spec_match_string ( Addressable pspec,  Addressable string) {
        var mh$ = g_pattern_spec_match_string$MH();
        try {
            return (int)mh$.invokeExact(pspec, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pattern_match$MH() {
        return RuntimeHelper.requireNonNull(constants$258.g_pattern_match$MH,"g_pattern_match");
    }
    public static int g_pattern_match ( Addressable pspec,  int string_length,  Addressable string,  Addressable string_reversed) {
        var mh$ = g_pattern_match$MH();
        try {
            return (int)mh$.invokeExact(pspec, string_length, string, string_reversed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pattern_match_string$MH() {
        return RuntimeHelper.requireNonNull(constants$258.g_pattern_match_string$MH,"g_pattern_match_string");
    }
    public static int g_pattern_match_string ( Addressable pspec,  Addressable string) {
        var mh$ = g_pattern_match_string$MH();
        try {
            return (int)mh$.invokeExact(pspec, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pattern_match_simple$MH() {
        return RuntimeHelper.requireNonNull(constants$259.g_pattern_match_simple$MH,"g_pattern_match_simple");
    }
    public static int g_pattern_match_simple ( Addressable pattern,  Addressable string) {
        var mh$ = g_pattern_match_simple$MH();
        try {
            return (int)mh$.invokeExact(pattern, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_spaced_primes_closest$MH() {
        return RuntimeHelper.requireNonNull(constants$259.g_spaced_primes_closest$MH,"g_spaced_primes_closest");
    }
    public static int g_spaced_primes_closest ( int num) {
        var mh$ = g_spaced_primes_closest$MH();
        try {
            return (int)mh$.invokeExact(num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_qsort_with_data$MH() {
        return RuntimeHelper.requireNonNull(constants$259.g_qsort_with_data$MH,"g_qsort_with_data");
    }
    public static void g_qsort_with_data ( Addressable pbase,  int total_elems,  long size,  Addressable compare_func,  Addressable user_data) {
        var mh$ = g_qsort_with_data$MH();
        try {
            mh$.invokeExact(pbase, total_elems, size, compare_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_new$MH() {
        return RuntimeHelper.requireNonNull(constants$259.g_queue_new$MH,"g_queue_new");
    }
    public static MemoryAddress g_queue_new () {
        var mh$ = g_queue_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_free$MH() {
        return RuntimeHelper.requireNonNull(constants$259.g_queue_free$MH,"g_queue_free");
    }
    public static void g_queue_free ( Addressable queue) {
        var mh$ = g_queue_free$MH();
        try {
            mh$.invokeExact(queue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_free_full$MH() {
        return RuntimeHelper.requireNonNull(constants$259.g_queue_free_full$MH,"g_queue_free_full");
    }
    public static void g_queue_free_full ( Addressable queue,  Addressable free_func) {
        var mh$ = g_queue_free_full$MH();
        try {
            mh$.invokeExact(queue, free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_init$MH() {
        return RuntimeHelper.requireNonNull(constants$260.g_queue_init$MH,"g_queue_init");
    }
    public static void g_queue_init ( Addressable queue) {
        var mh$ = g_queue_init$MH();
        try {
            mh$.invokeExact(queue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$260.g_queue_clear$MH,"g_queue_clear");
    }
    public static void g_queue_clear ( Addressable queue) {
        var mh$ = g_queue_clear$MH();
        try {
            mh$.invokeExact(queue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_is_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$260.g_queue_is_empty$MH,"g_queue_is_empty");
    }
    public static int g_queue_is_empty ( Addressable queue) {
        var mh$ = g_queue_is_empty$MH();
        try {
            return (int)mh$.invokeExact(queue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_clear_full$MH() {
        return RuntimeHelper.requireNonNull(constants$260.g_queue_clear_full$MH,"g_queue_clear_full");
    }
    public static void g_queue_clear_full ( Addressable queue,  Addressable free_func) {
        var mh$ = g_queue_clear_full$MH();
        try {
            mh$.invokeExact(queue, free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_get_length$MH() {
        return RuntimeHelper.requireNonNull(constants$260.g_queue_get_length$MH,"g_queue_get_length");
    }
    public static int g_queue_get_length ( Addressable queue) {
        var mh$ = g_queue_get_length$MH();
        try {
            return (int)mh$.invokeExact(queue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_reverse$MH() {
        return RuntimeHelper.requireNonNull(constants$260.g_queue_reverse$MH,"g_queue_reverse");
    }
    public static void g_queue_reverse ( Addressable queue) {
        var mh$ = g_queue_reverse$MH();
        try {
            mh$.invokeExact(queue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$261.g_queue_copy$MH,"g_queue_copy");
    }
    public static MemoryAddress g_queue_copy ( Addressable queue) {
        var mh$ = g_queue_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(queue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$261.g_queue_foreach$MH,"g_queue_foreach");
    }
    public static void g_queue_foreach ( Addressable queue,  Addressable func,  Addressable user_data) {
        var mh$ = g_queue_foreach$MH();
        try {
            mh$.invokeExact(queue, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_find$MH() {
        return RuntimeHelper.requireNonNull(constants$261.g_queue_find$MH,"g_queue_find");
    }
    public static MemoryAddress g_queue_find ( Addressable queue,  Addressable data) {
        var mh$ = g_queue_find$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(queue, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_find_custom$MH() {
        return RuntimeHelper.requireNonNull(constants$261.g_queue_find_custom$MH,"g_queue_find_custom");
    }
    public static MemoryAddress g_queue_find_custom ( Addressable queue,  Addressable data,  Addressable func) {
        var mh$ = g_queue_find_custom$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(queue, data, func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$261.g_queue_sort$MH,"g_queue_sort");
    }
    public static void g_queue_sort ( Addressable queue,  Addressable compare_func,  Addressable user_data) {
        var mh$ = g_queue_sort$MH();
        try {
            mh$.invokeExact(queue, compare_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_push_head$MH() {
        return RuntimeHelper.requireNonNull(constants$261.g_queue_push_head$MH,"g_queue_push_head");
    }
    public static void g_queue_push_head ( Addressable queue,  Addressable data) {
        var mh$ = g_queue_push_head$MH();
        try {
            mh$.invokeExact(queue, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_push_tail$MH() {
        return RuntimeHelper.requireNonNull(constants$262.g_queue_push_tail$MH,"g_queue_push_tail");
    }
    public static void g_queue_push_tail ( Addressable queue,  Addressable data) {
        var mh$ = g_queue_push_tail$MH();
        try {
            mh$.invokeExact(queue, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_push_nth$MH() {
        return RuntimeHelper.requireNonNull(constants$262.g_queue_push_nth$MH,"g_queue_push_nth");
    }
    public static void g_queue_push_nth ( Addressable queue,  Addressable data,  int n) {
        var mh$ = g_queue_push_nth$MH();
        try {
            mh$.invokeExact(queue, data, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_pop_head$MH() {
        return RuntimeHelper.requireNonNull(constants$262.g_queue_pop_head$MH,"g_queue_pop_head");
    }
    public static MemoryAddress g_queue_pop_head ( Addressable queue) {
        var mh$ = g_queue_pop_head$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(queue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_pop_tail$MH() {
        return RuntimeHelper.requireNonNull(constants$262.g_queue_pop_tail$MH,"g_queue_pop_tail");
    }
    public static MemoryAddress g_queue_pop_tail ( Addressable queue) {
        var mh$ = g_queue_pop_tail$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(queue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_pop_nth$MH() {
        return RuntimeHelper.requireNonNull(constants$262.g_queue_pop_nth$MH,"g_queue_pop_nth");
    }
    public static MemoryAddress g_queue_pop_nth ( Addressable queue,  int n) {
        var mh$ = g_queue_pop_nth$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(queue, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_peek_head$MH() {
        return RuntimeHelper.requireNonNull(constants$262.g_queue_peek_head$MH,"g_queue_peek_head");
    }
    public static MemoryAddress g_queue_peek_head ( Addressable queue) {
        var mh$ = g_queue_peek_head$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(queue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_peek_tail$MH() {
        return RuntimeHelper.requireNonNull(constants$263.g_queue_peek_tail$MH,"g_queue_peek_tail");
    }
    public static MemoryAddress g_queue_peek_tail ( Addressable queue) {
        var mh$ = g_queue_peek_tail$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(queue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_peek_nth$MH() {
        return RuntimeHelper.requireNonNull(constants$263.g_queue_peek_nth$MH,"g_queue_peek_nth");
    }
    public static MemoryAddress g_queue_peek_nth ( Addressable queue,  int n) {
        var mh$ = g_queue_peek_nth$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(queue, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_index$MH() {
        return RuntimeHelper.requireNonNull(constants$263.g_queue_index$MH,"g_queue_index");
    }
    public static int g_queue_index ( Addressable queue,  Addressable data) {
        var mh$ = g_queue_index$MH();
        try {
            return (int)mh$.invokeExact(queue, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$263.g_queue_remove$MH,"g_queue_remove");
    }
    public static int g_queue_remove ( Addressable queue,  Addressable data) {
        var mh$ = g_queue_remove$MH();
        try {
            return (int)mh$.invokeExact(queue, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_remove_all$MH() {
        return RuntimeHelper.requireNonNull(constants$263.g_queue_remove_all$MH,"g_queue_remove_all");
    }
    public static int g_queue_remove_all ( Addressable queue,  Addressable data) {
        var mh$ = g_queue_remove_all$MH();
        try {
            return (int)mh$.invokeExact(queue, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_insert_before$MH() {
        return RuntimeHelper.requireNonNull(constants$263.g_queue_insert_before$MH,"g_queue_insert_before");
    }
    public static void g_queue_insert_before ( Addressable queue,  Addressable sibling,  Addressable data) {
        var mh$ = g_queue_insert_before$MH();
        try {
            mh$.invokeExact(queue, sibling, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_insert_before_link$MH() {
        return RuntimeHelper.requireNonNull(constants$264.g_queue_insert_before_link$MH,"g_queue_insert_before_link");
    }
    public static void g_queue_insert_before_link ( Addressable queue,  Addressable sibling,  Addressable link_) {
        var mh$ = g_queue_insert_before_link$MH();
        try {
            mh$.invokeExact(queue, sibling, link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_insert_after$MH() {
        return RuntimeHelper.requireNonNull(constants$264.g_queue_insert_after$MH,"g_queue_insert_after");
    }
    public static void g_queue_insert_after ( Addressable queue,  Addressable sibling,  Addressable data) {
        var mh$ = g_queue_insert_after$MH();
        try {
            mh$.invokeExact(queue, sibling, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_insert_after_link$MH() {
        return RuntimeHelper.requireNonNull(constants$264.g_queue_insert_after_link$MH,"g_queue_insert_after_link");
    }
    public static void g_queue_insert_after_link ( Addressable queue,  Addressable sibling,  Addressable link_) {
        var mh$ = g_queue_insert_after_link$MH();
        try {
            mh$.invokeExact(queue, sibling, link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_insert_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$264.g_queue_insert_sorted$MH,"g_queue_insert_sorted");
    }
    public static void g_queue_insert_sorted ( Addressable queue,  Addressable data,  Addressable func,  Addressable user_data) {
        var mh$ = g_queue_insert_sorted$MH();
        try {
            mh$.invokeExact(queue, data, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_push_head_link$MH() {
        return RuntimeHelper.requireNonNull(constants$264.g_queue_push_head_link$MH,"g_queue_push_head_link");
    }
    public static void g_queue_push_head_link ( Addressable queue,  Addressable link_) {
        var mh$ = g_queue_push_head_link$MH();
        try {
            mh$.invokeExact(queue, link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_push_tail_link$MH() {
        return RuntimeHelper.requireNonNull(constants$264.g_queue_push_tail_link$MH,"g_queue_push_tail_link");
    }
    public static void g_queue_push_tail_link ( Addressable queue,  Addressable link_) {
        var mh$ = g_queue_push_tail_link$MH();
        try {
            mh$.invokeExact(queue, link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_push_nth_link$MH() {
        return RuntimeHelper.requireNonNull(constants$265.g_queue_push_nth_link$MH,"g_queue_push_nth_link");
    }
    public static void g_queue_push_nth_link ( Addressable queue,  int n,  Addressable link_) {
        var mh$ = g_queue_push_nth_link$MH();
        try {
            mh$.invokeExact(queue, n, link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_pop_head_link$MH() {
        return RuntimeHelper.requireNonNull(constants$265.g_queue_pop_head_link$MH,"g_queue_pop_head_link");
    }
    public static MemoryAddress g_queue_pop_head_link ( Addressable queue) {
        var mh$ = g_queue_pop_head_link$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(queue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_pop_tail_link$MH() {
        return RuntimeHelper.requireNonNull(constants$265.g_queue_pop_tail_link$MH,"g_queue_pop_tail_link");
    }
    public static MemoryAddress g_queue_pop_tail_link ( Addressable queue) {
        var mh$ = g_queue_pop_tail_link$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(queue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_pop_nth_link$MH() {
        return RuntimeHelper.requireNonNull(constants$265.g_queue_pop_nth_link$MH,"g_queue_pop_nth_link");
    }
    public static MemoryAddress g_queue_pop_nth_link ( Addressable queue,  int n) {
        var mh$ = g_queue_pop_nth_link$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(queue, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_peek_head_link$MH() {
        return RuntimeHelper.requireNonNull(constants$265.g_queue_peek_head_link$MH,"g_queue_peek_head_link");
    }
    public static MemoryAddress g_queue_peek_head_link ( Addressable queue) {
        var mh$ = g_queue_peek_head_link$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(queue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_peek_tail_link$MH() {
        return RuntimeHelper.requireNonNull(constants$265.g_queue_peek_tail_link$MH,"g_queue_peek_tail_link");
    }
    public static MemoryAddress g_queue_peek_tail_link ( Addressable queue) {
        var mh$ = g_queue_peek_tail_link$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(queue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_peek_nth_link$MH() {
        return RuntimeHelper.requireNonNull(constants$266.g_queue_peek_nth_link$MH,"g_queue_peek_nth_link");
    }
    public static MemoryAddress g_queue_peek_nth_link ( Addressable queue,  int n) {
        var mh$ = g_queue_peek_nth_link$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(queue, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_link_index$MH() {
        return RuntimeHelper.requireNonNull(constants$266.g_queue_link_index$MH,"g_queue_link_index");
    }
    public static int g_queue_link_index ( Addressable queue,  Addressable link_) {
        var mh$ = g_queue_link_index$MH();
        try {
            return (int)mh$.invokeExact(queue, link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_unlink$MH() {
        return RuntimeHelper.requireNonNull(constants$266.g_queue_unlink$MH,"g_queue_unlink");
    }
    public static void g_queue_unlink ( Addressable queue,  Addressable link_) {
        var mh$ = g_queue_unlink$MH();
        try {
            mh$.invokeExact(queue, link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_queue_delete_link$MH() {
        return RuntimeHelper.requireNonNull(constants$266.g_queue_delete_link$MH,"g_queue_delete_link");
    }
    public static void g_queue_delete_link ( Addressable queue,  Addressable link_) {
        var mh$ = g_queue_delete_link$MH();
        try {
            mh$.invokeExact(queue, link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_rand_new_with_seed$MH() {
        return RuntimeHelper.requireNonNull(constants$266.g_rand_new_with_seed$MH,"g_rand_new_with_seed");
    }
    public static MemoryAddress g_rand_new_with_seed ( int seed) {
        var mh$ = g_rand_new_with_seed$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(seed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_rand_new_with_seed_array$MH() {
        return RuntimeHelper.requireNonNull(constants$266.g_rand_new_with_seed_array$MH,"g_rand_new_with_seed_array");
    }
    public static MemoryAddress g_rand_new_with_seed_array ( Addressable seed,  int seed_length) {
        var mh$ = g_rand_new_with_seed_array$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(seed, seed_length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_rand_new$MH() {
        return RuntimeHelper.requireNonNull(constants$267.g_rand_new$MH,"g_rand_new");
    }
    public static MemoryAddress g_rand_new () {
        var mh$ = g_rand_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_rand_free$MH() {
        return RuntimeHelper.requireNonNull(constants$267.g_rand_free$MH,"g_rand_free");
    }
    public static void g_rand_free ( Addressable rand_) {
        var mh$ = g_rand_free$MH();
        try {
            mh$.invokeExact(rand_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


