// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$842 {

    static final FunctionDescriptor g_subprocess_communicate_utf8$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_subprocess_communicate_utf8$MH = RuntimeHelper.downcallHandle(
        "g_subprocess_communicate_utf8",
        constants$842.g_subprocess_communicate_utf8$FUNC
    );
    static final FunctionDescriptor g_subprocess_communicate_utf8_async$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_subprocess_communicate_utf8_async$MH = RuntimeHelper.downcallHandle(
        "g_subprocess_communicate_utf8_async",
        constants$842.g_subprocess_communicate_utf8_async$FUNC
    );
    static final FunctionDescriptor g_subprocess_communicate_utf8_finish$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_subprocess_communicate_utf8_finish$MH = RuntimeHelper.downcallHandle(
        "g_subprocess_communicate_utf8_finish",
        constants$842.g_subprocess_communicate_utf8_finish$FUNC
    );
    static final FunctionDescriptor g_subprocess_launcher_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle g_subprocess_launcher_get_type$MH = RuntimeHelper.downcallHandle(
        "g_subprocess_launcher_get_type",
        constants$842.g_subprocess_launcher_get_type$FUNC
    );
    static final FunctionDescriptor g_subprocess_launcher_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle g_subprocess_launcher_new$MH = RuntimeHelper.downcallHandle(
        "g_subprocess_launcher_new",
        constants$842.g_subprocess_launcher_new$FUNC
    );
    static final FunctionDescriptor g_subprocess_launcher_spawn$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_subprocess_launcher_spawn$MH = RuntimeHelper.downcallHandleVariadic(
        "g_subprocess_launcher_spawn",
        constants$842.g_subprocess_launcher_spawn$FUNC
    );
}


