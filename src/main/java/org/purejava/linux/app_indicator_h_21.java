// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class app_indicator_h_21 extends app_indicator_h_20 {

    public static MethodHandle glib_queueautoptr_cleanup_GtkIconView$MH() {
        return RuntimeHelper.requireNonNull(constants$2243.glib_queueautoptr_cleanup_GtkIconView$MH,"glib_queueautoptr_cleanup_GtkIconView");
    }
    public static void glib_queueautoptr_cleanup_GtkIconView ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkIconView$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkImage_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkImage_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkImage_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkImage_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkImage$MH() {
        return RuntimeHelper.requireNonNull(constants$2243.glib_autoptr_clear_GtkImage$MH,"glib_autoptr_clear_GtkImage");
    }
    public static void glib_autoptr_clear_GtkImage ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkImage$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkImage$MH() {
        return RuntimeHelper.requireNonNull(constants$2243.glib_autoptr_cleanup_GtkImage$MH,"glib_autoptr_cleanup_GtkImage");
    }
    public static void glib_autoptr_cleanup_GtkImage ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkImage$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkImage$MH() {
        return RuntimeHelper.requireNonNull(constants$2243.glib_listautoptr_cleanup_GtkImage$MH,"glib_listautoptr_cleanup_GtkImage");
    }
    public static void glib_listautoptr_cleanup_GtkImage ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkImage$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkImage$MH() {
        return RuntimeHelper.requireNonNull(constants$2243.glib_slistautoptr_cleanup_GtkImage$MH,"glib_slistautoptr_cleanup_GtkImage");
    }
    public static void glib_slistautoptr_cleanup_GtkImage ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkImage$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkImage$MH() {
        return RuntimeHelper.requireNonNull(constants$2244.glib_queueautoptr_cleanup_GtkImage$MH,"glib_queueautoptr_cleanup_GtkImage");
    }
    public static void glib_queueautoptr_cleanup_GtkImage ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkImage$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkInfoBar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkInfoBar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkInfoBar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkInfoBar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkInfoBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2244.glib_autoptr_clear_GtkInfoBar$MH,"glib_autoptr_clear_GtkInfoBar");
    }
    public static void glib_autoptr_clear_GtkInfoBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkInfoBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkInfoBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2244.glib_autoptr_cleanup_GtkInfoBar$MH,"glib_autoptr_cleanup_GtkInfoBar");
    }
    public static void glib_autoptr_cleanup_GtkInfoBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkInfoBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkInfoBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2244.glib_listautoptr_cleanup_GtkInfoBar$MH,"glib_listautoptr_cleanup_GtkInfoBar");
    }
    public static void glib_listautoptr_cleanup_GtkInfoBar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkInfoBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkInfoBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2244.glib_slistautoptr_cleanup_GtkInfoBar$MH,"glib_slistautoptr_cleanup_GtkInfoBar");
    }
    public static void glib_slistautoptr_cleanup_GtkInfoBar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkInfoBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkInfoBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2244.glib_queueautoptr_cleanup_GtkInfoBar$MH,"glib_queueautoptr_cleanup_GtkInfoBar");
    }
    public static void glib_queueautoptr_cleanup_GtkInfoBar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkInfoBar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkInvisible_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkInvisible_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkInvisible_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkInvisible_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkInvisible$MH() {
        return RuntimeHelper.requireNonNull(constants$2245.glib_autoptr_clear_GtkInvisible$MH,"glib_autoptr_clear_GtkInvisible");
    }
    public static void glib_autoptr_clear_GtkInvisible ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkInvisible$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkInvisible$MH() {
        return RuntimeHelper.requireNonNull(constants$2245.glib_autoptr_cleanup_GtkInvisible$MH,"glib_autoptr_cleanup_GtkInvisible");
    }
    public static void glib_autoptr_cleanup_GtkInvisible ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkInvisible$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkInvisible$MH() {
        return RuntimeHelper.requireNonNull(constants$2245.glib_listautoptr_cleanup_GtkInvisible$MH,"glib_listautoptr_cleanup_GtkInvisible");
    }
    public static void glib_listautoptr_cleanup_GtkInvisible ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkInvisible$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkInvisible$MH() {
        return RuntimeHelper.requireNonNull(constants$2245.glib_slistautoptr_cleanup_GtkInvisible$MH,"glib_slistautoptr_cleanup_GtkInvisible");
    }
    public static void glib_slistautoptr_cleanup_GtkInvisible ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkInvisible$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkInvisible$MH() {
        return RuntimeHelper.requireNonNull(constants$2245.glib_queueautoptr_cleanup_GtkInvisible$MH,"glib_queueautoptr_cleanup_GtkInvisible");
    }
    public static void glib_queueautoptr_cleanup_GtkInvisible ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkInvisible$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkLayout_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLayout_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLayout_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLayout_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2245.glib_autoptr_clear_GtkLayout$MH,"glib_autoptr_clear_GtkLayout");
    }
    public static void glib_autoptr_clear_GtkLayout ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkLayout$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2246.glib_autoptr_cleanup_GtkLayout$MH,"glib_autoptr_cleanup_GtkLayout");
    }
    public static void glib_autoptr_cleanup_GtkLayout ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkLayout$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2246.glib_listautoptr_cleanup_GtkLayout$MH,"glib_listautoptr_cleanup_GtkLayout");
    }
    public static void glib_listautoptr_cleanup_GtkLayout ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkLayout$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2246.glib_slistautoptr_cleanup_GtkLayout$MH,"glib_slistautoptr_cleanup_GtkLayout");
    }
    public static void glib_slistautoptr_cleanup_GtkLayout ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkLayout$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2246.glib_queueautoptr_cleanup_GtkLayout$MH,"glib_queueautoptr_cleanup_GtkLayout");
    }
    public static void glib_queueautoptr_cleanup_GtkLayout ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkLayout$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkLevelBar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLevelBar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLevelBar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLevelBar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkLevelBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2246.glib_autoptr_clear_GtkLevelBar$MH,"glib_autoptr_clear_GtkLevelBar");
    }
    public static void glib_autoptr_clear_GtkLevelBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkLevelBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkLevelBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2246.glib_autoptr_cleanup_GtkLevelBar$MH,"glib_autoptr_cleanup_GtkLevelBar");
    }
    public static void glib_autoptr_cleanup_GtkLevelBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkLevelBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkLevelBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2247.glib_listautoptr_cleanup_GtkLevelBar$MH,"glib_listautoptr_cleanup_GtkLevelBar");
    }
    public static void glib_listautoptr_cleanup_GtkLevelBar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkLevelBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkLevelBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2247.glib_slistautoptr_cleanup_GtkLevelBar$MH,"glib_slistautoptr_cleanup_GtkLevelBar");
    }
    public static void glib_slistautoptr_cleanup_GtkLevelBar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkLevelBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkLevelBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2247.glib_queueautoptr_cleanup_GtkLevelBar$MH,"glib_queueautoptr_cleanup_GtkLevelBar");
    }
    public static void glib_queueautoptr_cleanup_GtkLevelBar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkLevelBar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkLinkButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLinkButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLinkButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLinkButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkLinkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2247.glib_autoptr_clear_GtkLinkButton$MH,"glib_autoptr_clear_GtkLinkButton");
    }
    public static void glib_autoptr_clear_GtkLinkButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkLinkButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkLinkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2247.glib_autoptr_cleanup_GtkLinkButton$MH,"glib_autoptr_cleanup_GtkLinkButton");
    }
    public static void glib_autoptr_cleanup_GtkLinkButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkLinkButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkLinkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2247.glib_listautoptr_cleanup_GtkLinkButton$MH,"glib_listautoptr_cleanup_GtkLinkButton");
    }
    public static void glib_listautoptr_cleanup_GtkLinkButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkLinkButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkLinkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2248.glib_slistautoptr_cleanup_GtkLinkButton$MH,"glib_slistautoptr_cleanup_GtkLinkButton");
    }
    public static void glib_slistautoptr_cleanup_GtkLinkButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkLinkButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkLinkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2248.glib_queueautoptr_cleanup_GtkLinkButton$MH,"glib_queueautoptr_cleanup_GtkLinkButton");
    }
    public static void glib_queueautoptr_cleanup_GtkLinkButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkLinkButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkListStore_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkListStore_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkListStore_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkListStore_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkListStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2248.glib_autoptr_clear_GtkListStore$MH,"glib_autoptr_clear_GtkListStore");
    }
    public static void glib_autoptr_clear_GtkListStore ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkListStore$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkListStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2248.glib_autoptr_cleanup_GtkListStore$MH,"glib_autoptr_cleanup_GtkListStore");
    }
    public static void glib_autoptr_cleanup_GtkListStore ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkListStore$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkListStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2248.glib_listautoptr_cleanup_GtkListStore$MH,"glib_listautoptr_cleanup_GtkListStore");
    }
    public static void glib_listautoptr_cleanup_GtkListStore ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkListStore$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkListStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2248.glib_slistautoptr_cleanup_GtkListStore$MH,"glib_slistautoptr_cleanup_GtkListStore");
    }
    public static void glib_slistautoptr_cleanup_GtkListStore ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkListStore$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkListStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2249.glib_queueautoptr_cleanup_GtkListStore$MH,"glib_queueautoptr_cleanup_GtkListStore");
    }
    public static void glib_queueautoptr_cleanup_GtkListStore ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkListStore$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkLockButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLockButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLockButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLockButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkLockButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2249.glib_autoptr_clear_GtkLockButton$MH,"glib_autoptr_clear_GtkLockButton");
    }
    public static void glib_autoptr_clear_GtkLockButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkLockButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkLockButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2249.glib_autoptr_cleanup_GtkLockButton$MH,"glib_autoptr_cleanup_GtkLockButton");
    }
    public static void glib_autoptr_cleanup_GtkLockButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkLockButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkLockButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2249.glib_listautoptr_cleanup_GtkLockButton$MH,"glib_listautoptr_cleanup_GtkLockButton");
    }
    public static void glib_listautoptr_cleanup_GtkLockButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkLockButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkLockButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2249.glib_slistautoptr_cleanup_GtkLockButton$MH,"glib_slistautoptr_cleanup_GtkLockButton");
    }
    public static void glib_slistautoptr_cleanup_GtkLockButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkLockButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkLockButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2249.glib_queueautoptr_cleanup_GtkLockButton$MH,"glib_queueautoptr_cleanup_GtkLockButton");
    }
    public static void glib_queueautoptr_cleanup_GtkLockButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkLockButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkMenuBar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuBar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuBar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuBar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkMenuBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2250.glib_autoptr_clear_GtkMenuBar$MH,"glib_autoptr_clear_GtkMenuBar");
    }
    public static void glib_autoptr_clear_GtkMenuBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkMenuBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkMenuBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2250.glib_autoptr_cleanup_GtkMenuBar$MH,"glib_autoptr_cleanup_GtkMenuBar");
    }
    public static void glib_autoptr_cleanup_GtkMenuBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkMenuBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkMenuBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2250.glib_listautoptr_cleanup_GtkMenuBar$MH,"glib_listautoptr_cleanup_GtkMenuBar");
    }
    public static void glib_listautoptr_cleanup_GtkMenuBar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkMenuBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkMenuBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2250.glib_slistautoptr_cleanup_GtkMenuBar$MH,"glib_slistautoptr_cleanup_GtkMenuBar");
    }
    public static void glib_slistautoptr_cleanup_GtkMenuBar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkMenuBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkMenuBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2250.glib_queueautoptr_cleanup_GtkMenuBar$MH,"glib_queueautoptr_cleanup_GtkMenuBar");
    }
    public static void glib_queueautoptr_cleanup_GtkMenuBar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkMenuBar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkMenuButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkMenuButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2250.glib_autoptr_clear_GtkMenuButton$MH,"glib_autoptr_clear_GtkMenuButton");
    }
    public static void glib_autoptr_clear_GtkMenuButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkMenuButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkMenuButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2251.glib_autoptr_cleanup_GtkMenuButton$MH,"glib_autoptr_cleanup_GtkMenuButton");
    }
    public static void glib_autoptr_cleanup_GtkMenuButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkMenuButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkMenuButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2251.glib_listautoptr_cleanup_GtkMenuButton$MH,"glib_listautoptr_cleanup_GtkMenuButton");
    }
    public static void glib_listautoptr_cleanup_GtkMenuButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkMenuButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkMenuButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2251.glib_slistautoptr_cleanup_GtkMenuButton$MH,"glib_slistautoptr_cleanup_GtkMenuButton");
    }
    public static void glib_slistautoptr_cleanup_GtkMenuButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkMenuButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkMenuButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2251.glib_queueautoptr_cleanup_GtkMenuButton$MH,"glib_queueautoptr_cleanup_GtkMenuButton");
    }
    public static void glib_queueautoptr_cleanup_GtkMenuButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkMenuButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkMenuItem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuItem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuItem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuItem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2251.glib_autoptr_clear_GtkMenuItem$MH,"glib_autoptr_clear_GtkMenuItem");
    }
    public static void glib_autoptr_clear_GtkMenuItem ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkMenuItem$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2251.glib_autoptr_cleanup_GtkMenuItem$MH,"glib_autoptr_cleanup_GtkMenuItem");
    }
    public static void glib_autoptr_cleanup_GtkMenuItem ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkMenuItem$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2252.glib_listautoptr_cleanup_GtkMenuItem$MH,"glib_listautoptr_cleanup_GtkMenuItem");
    }
    public static void glib_listautoptr_cleanup_GtkMenuItem ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkMenuItem$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2252.glib_slistautoptr_cleanup_GtkMenuItem$MH,"glib_slistautoptr_cleanup_GtkMenuItem");
    }
    public static void glib_slistautoptr_cleanup_GtkMenuItem ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkMenuItem$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2252.glib_queueautoptr_cleanup_GtkMenuItem$MH,"glib_queueautoptr_cleanup_GtkMenuItem");
    }
    public static void glib_queueautoptr_cleanup_GtkMenuItem ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkMenuItem$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkMenuToolButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuToolButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuToolButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuToolButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkMenuToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2252.glib_autoptr_clear_GtkMenuToolButton$MH,"glib_autoptr_clear_GtkMenuToolButton");
    }
    public static void glib_autoptr_clear_GtkMenuToolButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkMenuToolButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkMenuToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2252.glib_autoptr_cleanup_GtkMenuToolButton$MH,"glib_autoptr_cleanup_GtkMenuToolButton");
    }
    public static void glib_autoptr_cleanup_GtkMenuToolButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkMenuToolButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkMenuToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2252.glib_listautoptr_cleanup_GtkMenuToolButton$MH,"glib_listautoptr_cleanup_GtkMenuToolButton");
    }
    public static void glib_listautoptr_cleanup_GtkMenuToolButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkMenuToolButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkMenuToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2253.glib_slistautoptr_cleanup_GtkMenuToolButton$MH,"glib_slistautoptr_cleanup_GtkMenuToolButton");
    }
    public static void glib_slistautoptr_cleanup_GtkMenuToolButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkMenuToolButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkMenuToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2253.glib_queueautoptr_cleanup_GtkMenuToolButton$MH,"glib_queueautoptr_cleanup_GtkMenuToolButton");
    }
    public static void glib_queueautoptr_cleanup_GtkMenuToolButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkMenuToolButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkMessageDialog_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMessageDialog_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMessageDialog_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMessageDialog_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkMessageDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2253.glib_autoptr_clear_GtkMessageDialog$MH,"glib_autoptr_clear_GtkMessageDialog");
    }
    public static void glib_autoptr_clear_GtkMessageDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkMessageDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkMessageDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2253.glib_autoptr_cleanup_GtkMessageDialog$MH,"glib_autoptr_cleanup_GtkMessageDialog");
    }
    public static void glib_autoptr_cleanup_GtkMessageDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkMessageDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkMessageDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2253.glib_listautoptr_cleanup_GtkMessageDialog$MH,"glib_listautoptr_cleanup_GtkMessageDialog");
    }
    public static void glib_listautoptr_cleanup_GtkMessageDialog ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkMessageDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkMessageDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2253.glib_slistautoptr_cleanup_GtkMessageDialog$MH,"glib_slistautoptr_cleanup_GtkMessageDialog");
    }
    public static void glib_slistautoptr_cleanup_GtkMessageDialog ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkMessageDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkMessageDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2254.glib_queueautoptr_cleanup_GtkMessageDialog$MH,"glib_queueautoptr_cleanup_GtkMessageDialog");
    }
    public static void glib_queueautoptr_cleanup_GtkMessageDialog ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkMessageDialog$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkMountOperation_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMountOperation_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMountOperation_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMountOperation_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2254.glib_autoptr_clear_GtkMountOperation$MH,"glib_autoptr_clear_GtkMountOperation");
    }
    public static void glib_autoptr_clear_GtkMountOperation ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkMountOperation$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2254.glib_autoptr_cleanup_GtkMountOperation$MH,"glib_autoptr_cleanup_GtkMountOperation");
    }
    public static void glib_autoptr_cleanup_GtkMountOperation ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkMountOperation$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2254.glib_listautoptr_cleanup_GtkMountOperation$MH,"glib_listautoptr_cleanup_GtkMountOperation");
    }
    public static void glib_listautoptr_cleanup_GtkMountOperation ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkMountOperation$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2254.glib_slistautoptr_cleanup_GtkMountOperation$MH,"glib_slistautoptr_cleanup_GtkMountOperation");
    }
    public static void glib_slistautoptr_cleanup_GtkMountOperation ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkMountOperation$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2254.glib_queueautoptr_cleanup_GtkMountOperation$MH,"glib_queueautoptr_cleanup_GtkMountOperation");
    }
    public static void glib_queueautoptr_cleanup_GtkMountOperation ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkMountOperation$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkNotebook_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNotebook_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNotebook_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNotebook_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkNotebook$MH() {
        return RuntimeHelper.requireNonNull(constants$2255.glib_autoptr_clear_GtkNotebook$MH,"glib_autoptr_clear_GtkNotebook");
    }
    public static void glib_autoptr_clear_GtkNotebook ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkNotebook$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkNotebook$MH() {
        return RuntimeHelper.requireNonNull(constants$2255.glib_autoptr_cleanup_GtkNotebook$MH,"glib_autoptr_cleanup_GtkNotebook");
    }
    public static void glib_autoptr_cleanup_GtkNotebook ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkNotebook$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkNotebook$MH() {
        return RuntimeHelper.requireNonNull(constants$2255.glib_listautoptr_cleanup_GtkNotebook$MH,"glib_listautoptr_cleanup_GtkNotebook");
    }
    public static void glib_listautoptr_cleanup_GtkNotebook ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkNotebook$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkNotebook$MH() {
        return RuntimeHelper.requireNonNull(constants$2255.glib_slistautoptr_cleanup_GtkNotebook$MH,"glib_slistautoptr_cleanup_GtkNotebook");
    }
    public static void glib_slistautoptr_cleanup_GtkNotebook ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkNotebook$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkNotebook$MH() {
        return RuntimeHelper.requireNonNull(constants$2255.glib_queueautoptr_cleanup_GtkNotebook$MH,"glib_queueautoptr_cleanup_GtkNotebook");
    }
    public static void glib_queueautoptr_cleanup_GtkNotebook ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkNotebook$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkOffscreenWindow_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOffscreenWindow_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOffscreenWindow_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOffscreenWindow_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkOffscreenWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2255.glib_autoptr_clear_GtkOffscreenWindow$MH,"glib_autoptr_clear_GtkOffscreenWindow");
    }
    public static void glib_autoptr_clear_GtkOffscreenWindow ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkOffscreenWindow$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkOffscreenWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2256.glib_autoptr_cleanup_GtkOffscreenWindow$MH,"glib_autoptr_cleanup_GtkOffscreenWindow");
    }
    public static void glib_autoptr_cleanup_GtkOffscreenWindow ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkOffscreenWindow$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkOffscreenWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2256.glib_listautoptr_cleanup_GtkOffscreenWindow$MH,"glib_listautoptr_cleanup_GtkOffscreenWindow");
    }
    public static void glib_listautoptr_cleanup_GtkOffscreenWindow ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkOffscreenWindow$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkOffscreenWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2256.glib_slistautoptr_cleanup_GtkOffscreenWindow$MH,"glib_slistautoptr_cleanup_GtkOffscreenWindow");
    }
    public static void glib_slistautoptr_cleanup_GtkOffscreenWindow ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkOffscreenWindow$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkOffscreenWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2256.glib_queueautoptr_cleanup_GtkOffscreenWindow$MH,"glib_queueautoptr_cleanup_GtkOffscreenWindow");
    }
    public static void glib_queueautoptr_cleanup_GtkOffscreenWindow ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkOffscreenWindow$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkOrientable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOrientable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOrientable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOrientable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkOrientable$MH() {
        return RuntimeHelper.requireNonNull(constants$2256.glib_autoptr_clear_GtkOrientable$MH,"glib_autoptr_clear_GtkOrientable");
    }
    public static void glib_autoptr_clear_GtkOrientable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkOrientable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkOrientable$MH() {
        return RuntimeHelper.requireNonNull(constants$2256.glib_autoptr_cleanup_GtkOrientable$MH,"glib_autoptr_cleanup_GtkOrientable");
    }
    public static void glib_autoptr_cleanup_GtkOrientable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkOrientable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkOrientable$MH() {
        return RuntimeHelper.requireNonNull(constants$2257.glib_listautoptr_cleanup_GtkOrientable$MH,"glib_listautoptr_cleanup_GtkOrientable");
    }
    public static void glib_listautoptr_cleanup_GtkOrientable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkOrientable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkOrientable$MH() {
        return RuntimeHelper.requireNonNull(constants$2257.glib_slistautoptr_cleanup_GtkOrientable$MH,"glib_slistautoptr_cleanup_GtkOrientable");
    }
    public static void glib_slistautoptr_cleanup_GtkOrientable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkOrientable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkOrientable$MH() {
        return RuntimeHelper.requireNonNull(constants$2257.glib_queueautoptr_cleanup_GtkOrientable$MH,"glib_queueautoptr_cleanup_GtkOrientable");
    }
    public static void glib_queueautoptr_cleanup_GtkOrientable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkOrientable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkOverlay_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOverlay_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOverlay_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOverlay_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkOverlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2257.glib_autoptr_clear_GtkOverlay$MH,"glib_autoptr_clear_GtkOverlay");
    }
    public static void glib_autoptr_clear_GtkOverlay ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkOverlay$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkOverlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2257.glib_autoptr_cleanup_GtkOverlay$MH,"glib_autoptr_cleanup_GtkOverlay");
    }
    public static void glib_autoptr_cleanup_GtkOverlay ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkOverlay$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkOverlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2257.glib_listautoptr_cleanup_GtkOverlay$MH,"glib_listautoptr_cleanup_GtkOverlay");
    }
    public static void glib_listautoptr_cleanup_GtkOverlay ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkOverlay$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkOverlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.glib_slistautoptr_cleanup_GtkOverlay$MH,"glib_slistautoptr_cleanup_GtkOverlay");
    }
    public static void glib_slistautoptr_cleanup_GtkOverlay ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkOverlay$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkOverlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.glib_queueautoptr_cleanup_GtkOverlay$MH,"glib_queueautoptr_cleanup_GtkOverlay");
    }
    public static void glib_queueautoptr_cleanup_GtkOverlay ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkOverlay$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPageSetup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPageSetup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPageSetup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPageSetup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPageSetup$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.glib_autoptr_clear_GtkPageSetup$MH,"glib_autoptr_clear_GtkPageSetup");
    }
    public static void glib_autoptr_clear_GtkPageSetup ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPageSetup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPageSetup$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.glib_autoptr_cleanup_GtkPageSetup$MH,"glib_autoptr_cleanup_GtkPageSetup");
    }
    public static void glib_autoptr_cleanup_GtkPageSetup ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPageSetup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPageSetup$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.glib_listautoptr_cleanup_GtkPageSetup$MH,"glib_listautoptr_cleanup_GtkPageSetup");
    }
    public static void glib_listautoptr_cleanup_GtkPageSetup ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPageSetup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPageSetup$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.glib_slistautoptr_cleanup_GtkPageSetup$MH,"glib_slistautoptr_cleanup_GtkPageSetup");
    }
    public static void glib_slistautoptr_cleanup_GtkPageSetup ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPageSetup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPageSetup$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.glib_queueautoptr_cleanup_GtkPageSetup$MH,"glib_queueautoptr_cleanup_GtkPageSetup");
    }
    public static void glib_queueautoptr_cleanup_GtkPageSetup ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPageSetup$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPaned_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPaned_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPaned_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPaned_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPaned$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.glib_autoptr_clear_GtkPaned$MH,"glib_autoptr_clear_GtkPaned");
    }
    public static void glib_autoptr_clear_GtkPaned ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPaned$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPaned$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.glib_autoptr_cleanup_GtkPaned$MH,"glib_autoptr_cleanup_GtkPaned");
    }
    public static void glib_autoptr_cleanup_GtkPaned ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPaned$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPaned$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.glib_listautoptr_cleanup_GtkPaned$MH,"glib_listautoptr_cleanup_GtkPaned");
    }
    public static void glib_listautoptr_cleanup_GtkPaned ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPaned$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPaned$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.glib_slistautoptr_cleanup_GtkPaned$MH,"glib_slistautoptr_cleanup_GtkPaned");
    }
    public static void glib_slistautoptr_cleanup_GtkPaned ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPaned$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPaned$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.glib_queueautoptr_cleanup_GtkPaned$MH,"glib_queueautoptr_cleanup_GtkPaned");
    }
    public static void glib_queueautoptr_cleanup_GtkPaned ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPaned$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPlacesSidebar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPlacesSidebar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPlacesSidebar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPlacesSidebar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPlacesSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.glib_autoptr_clear_GtkPlacesSidebar$MH,"glib_autoptr_clear_GtkPlacesSidebar");
    }
    public static void glib_autoptr_clear_GtkPlacesSidebar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPlacesSidebar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPlacesSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.glib_autoptr_cleanup_GtkPlacesSidebar$MH,"glib_autoptr_cleanup_GtkPlacesSidebar");
    }
    public static void glib_autoptr_cleanup_GtkPlacesSidebar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPlacesSidebar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPlacesSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.glib_listautoptr_cleanup_GtkPlacesSidebar$MH,"glib_listautoptr_cleanup_GtkPlacesSidebar");
    }
    public static void glib_listautoptr_cleanup_GtkPlacesSidebar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPlacesSidebar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPlacesSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.glib_slistautoptr_cleanup_GtkPlacesSidebar$MH,"glib_slistautoptr_cleanup_GtkPlacesSidebar");
    }
    public static void glib_slistautoptr_cleanup_GtkPlacesSidebar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPlacesSidebar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPlacesSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.glib_queueautoptr_cleanup_GtkPlacesSidebar$MH,"glib_queueautoptr_cleanup_GtkPlacesSidebar");
    }
    public static void glib_queueautoptr_cleanup_GtkPlacesSidebar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPlacesSidebar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPopover_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPopover_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPopover_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPopover_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPopover$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.glib_autoptr_clear_GtkPopover$MH,"glib_autoptr_clear_GtkPopover");
    }
    public static void glib_autoptr_clear_GtkPopover ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPopover$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPopover$MH() {
        return RuntimeHelper.requireNonNull(constants$2261.glib_autoptr_cleanup_GtkPopover$MH,"glib_autoptr_cleanup_GtkPopover");
    }
    public static void glib_autoptr_cleanup_GtkPopover ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPopover$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPopover$MH() {
        return RuntimeHelper.requireNonNull(constants$2261.glib_listautoptr_cleanup_GtkPopover$MH,"glib_listautoptr_cleanup_GtkPopover");
    }
    public static void glib_listautoptr_cleanup_GtkPopover ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPopover$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPopover$MH() {
        return RuntimeHelper.requireNonNull(constants$2261.glib_slistautoptr_cleanup_GtkPopover$MH,"glib_slistautoptr_cleanup_GtkPopover");
    }
    public static void glib_slistautoptr_cleanup_GtkPopover ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPopover$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPopover$MH() {
        return RuntimeHelper.requireNonNull(constants$2261.glib_queueautoptr_cleanup_GtkPopover$MH,"glib_queueautoptr_cleanup_GtkPopover");
    }
    public static void glib_queueautoptr_cleanup_GtkPopover ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPopover$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPopoverMenu_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPopoverMenu_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPopoverMenu_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPopoverMenu_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPopoverMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2261.glib_autoptr_clear_GtkPopoverMenu$MH,"glib_autoptr_clear_GtkPopoverMenu");
    }
    public static void glib_autoptr_clear_GtkPopoverMenu ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPopoverMenu$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPopoverMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2261.glib_autoptr_cleanup_GtkPopoverMenu$MH,"glib_autoptr_cleanup_GtkPopoverMenu");
    }
    public static void glib_autoptr_cleanup_GtkPopoverMenu ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPopoverMenu$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPopoverMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2262.glib_listautoptr_cleanup_GtkPopoverMenu$MH,"glib_listautoptr_cleanup_GtkPopoverMenu");
    }
    public static void glib_listautoptr_cleanup_GtkPopoverMenu ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPopoverMenu$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPopoverMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2262.glib_slistautoptr_cleanup_GtkPopoverMenu$MH,"glib_slistautoptr_cleanup_GtkPopoverMenu");
    }
    public static void glib_slistautoptr_cleanup_GtkPopoverMenu ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPopoverMenu$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPopoverMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2262.glib_queueautoptr_cleanup_GtkPopoverMenu$MH,"glib_queueautoptr_cleanup_GtkPopoverMenu");
    }
    public static void glib_queueautoptr_cleanup_GtkPopoverMenu ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPopoverMenu$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPrintContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPrintContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2262.glib_autoptr_clear_GtkPrintContext$MH,"glib_autoptr_clear_GtkPrintContext");
    }
    public static void glib_autoptr_clear_GtkPrintContext ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPrintContext$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPrintContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2262.glib_autoptr_cleanup_GtkPrintContext$MH,"glib_autoptr_cleanup_GtkPrintContext");
    }
    public static void glib_autoptr_cleanup_GtkPrintContext ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPrintContext$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPrintContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2262.glib_listautoptr_cleanup_GtkPrintContext$MH,"glib_listautoptr_cleanup_GtkPrintContext");
    }
    public static void glib_listautoptr_cleanup_GtkPrintContext ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPrintContext$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPrintContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2263.glib_slistautoptr_cleanup_GtkPrintContext$MH,"glib_slistautoptr_cleanup_GtkPrintContext");
    }
    public static void glib_slistautoptr_cleanup_GtkPrintContext ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPrintContext$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPrintContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2263.glib_queueautoptr_cleanup_GtkPrintContext$MH,"glib_queueautoptr_cleanup_GtkPrintContext");
    }
    public static void glib_queueautoptr_cleanup_GtkPrintContext ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPrintContext$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPrintOperation_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintOperation_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintOperation_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintOperation_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPrintOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2263.glib_autoptr_clear_GtkPrintOperation$MH,"glib_autoptr_clear_GtkPrintOperation");
    }
    public static void glib_autoptr_clear_GtkPrintOperation ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPrintOperation$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPrintOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2263.glib_autoptr_cleanup_GtkPrintOperation$MH,"glib_autoptr_cleanup_GtkPrintOperation");
    }
    public static void glib_autoptr_cleanup_GtkPrintOperation ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPrintOperation$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPrintOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2263.glib_listautoptr_cleanup_GtkPrintOperation$MH,"glib_listautoptr_cleanup_GtkPrintOperation");
    }
    public static void glib_listautoptr_cleanup_GtkPrintOperation ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPrintOperation$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPrintOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2263.glib_slistautoptr_cleanup_GtkPrintOperation$MH,"glib_slistautoptr_cleanup_GtkPrintOperation");
    }
    public static void glib_slistautoptr_cleanup_GtkPrintOperation ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPrintOperation$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPrintOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2264.glib_queueautoptr_cleanup_GtkPrintOperation$MH,"glib_queueautoptr_cleanup_GtkPrintOperation");
    }
    public static void glib_queueautoptr_cleanup_GtkPrintOperation ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPrintOperation$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPrintOperationPreview_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintOperationPreview_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintOperationPreview_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintOperationPreview_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPrintOperationPreview$MH() {
        return RuntimeHelper.requireNonNull(constants$2264.glib_autoptr_clear_GtkPrintOperationPreview$MH,"glib_autoptr_clear_GtkPrintOperationPreview");
    }
    public static void glib_autoptr_clear_GtkPrintOperationPreview ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPrintOperationPreview$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPrintOperationPreview$MH() {
        return RuntimeHelper.requireNonNull(constants$2264.glib_autoptr_cleanup_GtkPrintOperationPreview$MH,"glib_autoptr_cleanup_GtkPrintOperationPreview");
    }
    public static void glib_autoptr_cleanup_GtkPrintOperationPreview ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPrintOperationPreview$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPrintOperationPreview$MH() {
        return RuntimeHelper.requireNonNull(constants$2264.glib_listautoptr_cleanup_GtkPrintOperationPreview$MH,"glib_listautoptr_cleanup_GtkPrintOperationPreview");
    }
    public static void glib_listautoptr_cleanup_GtkPrintOperationPreview ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPrintOperationPreview$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPrintOperationPreview$MH() {
        return RuntimeHelper.requireNonNull(constants$2264.glib_slistautoptr_cleanup_GtkPrintOperationPreview$MH,"glib_slistautoptr_cleanup_GtkPrintOperationPreview");
    }
    public static void glib_slistautoptr_cleanup_GtkPrintOperationPreview ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPrintOperationPreview$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPrintOperationPreview$MH() {
        return RuntimeHelper.requireNonNull(constants$2264.glib_queueautoptr_cleanup_GtkPrintOperationPreview$MH,"glib_queueautoptr_cleanup_GtkPrintOperationPreview");
    }
    public static void glib_queueautoptr_cleanup_GtkPrintOperationPreview ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPrintOperationPreview$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPrintSettings_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintSettings_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintSettings_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintSettings_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPrintSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2265.glib_autoptr_clear_GtkPrintSettings$MH,"glib_autoptr_clear_GtkPrintSettings");
    }
    public static void glib_autoptr_clear_GtkPrintSettings ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPrintSettings$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPrintSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2265.glib_autoptr_cleanup_GtkPrintSettings$MH,"glib_autoptr_cleanup_GtkPrintSettings");
    }
    public static void glib_autoptr_cleanup_GtkPrintSettings ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPrintSettings$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPrintSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2265.glib_listautoptr_cleanup_GtkPrintSettings$MH,"glib_listautoptr_cleanup_GtkPrintSettings");
    }
    public static void glib_listautoptr_cleanup_GtkPrintSettings ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPrintSettings$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPrintSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2265.glib_slistautoptr_cleanup_GtkPrintSettings$MH,"glib_slistautoptr_cleanup_GtkPrintSettings");
    }
    public static void glib_slistautoptr_cleanup_GtkPrintSettings ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPrintSettings$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPrintSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2265.glib_queueautoptr_cleanup_GtkPrintSettings$MH,"glib_queueautoptr_cleanup_GtkPrintSettings");
    }
    public static void glib_queueautoptr_cleanup_GtkPrintSettings ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPrintSettings$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkProgressBar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkProgressBar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkProgressBar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkProgressBar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkProgressBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2265.glib_autoptr_clear_GtkProgressBar$MH,"glib_autoptr_clear_GtkProgressBar");
    }
    public static void glib_autoptr_clear_GtkProgressBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkProgressBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkProgressBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2266.glib_autoptr_cleanup_GtkProgressBar$MH,"glib_autoptr_cleanup_GtkProgressBar");
    }
    public static void glib_autoptr_cleanup_GtkProgressBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkProgressBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkProgressBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2266.glib_listautoptr_cleanup_GtkProgressBar$MH,"glib_listautoptr_cleanup_GtkProgressBar");
    }
    public static void glib_listautoptr_cleanup_GtkProgressBar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkProgressBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkProgressBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2266.glib_slistautoptr_cleanup_GtkProgressBar$MH,"glib_slistautoptr_cleanup_GtkProgressBar");
    }
    public static void glib_slistautoptr_cleanup_GtkProgressBar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkProgressBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkProgressBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2266.glib_queueautoptr_cleanup_GtkProgressBar$MH,"glib_queueautoptr_cleanup_GtkProgressBar");
    }
    public static void glib_queueautoptr_cleanup_GtkProgressBar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkProgressBar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRadioButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRadioButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRadioButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRadioButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRadioButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2266.glib_autoptr_clear_GtkRadioButton$MH,"glib_autoptr_clear_GtkRadioButton");
    }
    public static void glib_autoptr_clear_GtkRadioButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkRadioButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRadioButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2266.glib_autoptr_cleanup_GtkRadioButton$MH,"glib_autoptr_cleanup_GtkRadioButton");
    }
    public static void glib_autoptr_cleanup_GtkRadioButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkRadioButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRadioButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2267.glib_listautoptr_cleanup_GtkRadioButton$MH,"glib_listautoptr_cleanup_GtkRadioButton");
    }
    public static void glib_listautoptr_cleanup_GtkRadioButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkRadioButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRadioButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2267.glib_slistautoptr_cleanup_GtkRadioButton$MH,"glib_slistautoptr_cleanup_GtkRadioButton");
    }
    public static void glib_slistautoptr_cleanup_GtkRadioButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkRadioButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRadioButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2267.glib_queueautoptr_cleanup_GtkRadioButton$MH,"glib_queueautoptr_cleanup_GtkRadioButton");
    }
    public static void glib_queueautoptr_cleanup_GtkRadioButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkRadioButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRadioMenuItem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRadioMenuItem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRadioMenuItem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRadioMenuItem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRadioMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2267.glib_autoptr_clear_GtkRadioMenuItem$MH,"glib_autoptr_clear_GtkRadioMenuItem");
    }
    public static void glib_autoptr_clear_GtkRadioMenuItem ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkRadioMenuItem$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRadioMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2267.glib_autoptr_cleanup_GtkRadioMenuItem$MH,"glib_autoptr_cleanup_GtkRadioMenuItem");
    }
    public static void glib_autoptr_cleanup_GtkRadioMenuItem ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkRadioMenuItem$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRadioMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2267.glib_listautoptr_cleanup_GtkRadioMenuItem$MH,"glib_listautoptr_cleanup_GtkRadioMenuItem");
    }
    public static void glib_listautoptr_cleanup_GtkRadioMenuItem ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkRadioMenuItem$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRadioMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2268.glib_slistautoptr_cleanup_GtkRadioMenuItem$MH,"glib_slistautoptr_cleanup_GtkRadioMenuItem");
    }
    public static void glib_slistautoptr_cleanup_GtkRadioMenuItem ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkRadioMenuItem$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRadioMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2268.glib_queueautoptr_cleanup_GtkRadioMenuItem$MH,"glib_queueautoptr_cleanup_GtkRadioMenuItem");
    }
    public static void glib_queueautoptr_cleanup_GtkRadioMenuItem ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkRadioMenuItem$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRadioToolButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRadioToolButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRadioToolButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRadioToolButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRadioToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2268.glib_autoptr_clear_GtkRadioToolButton$MH,"glib_autoptr_clear_GtkRadioToolButton");
    }
    public static void glib_autoptr_clear_GtkRadioToolButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkRadioToolButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRadioToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2268.glib_autoptr_cleanup_GtkRadioToolButton$MH,"glib_autoptr_cleanup_GtkRadioToolButton");
    }
    public static void glib_autoptr_cleanup_GtkRadioToolButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkRadioToolButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRadioToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2268.glib_listautoptr_cleanup_GtkRadioToolButton$MH,"glib_listautoptr_cleanup_GtkRadioToolButton");
    }
    public static void glib_listautoptr_cleanup_GtkRadioToolButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkRadioToolButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRadioToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2268.glib_slistautoptr_cleanup_GtkRadioToolButton$MH,"glib_slistautoptr_cleanup_GtkRadioToolButton");
    }
    public static void glib_slistautoptr_cleanup_GtkRadioToolButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkRadioToolButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRadioToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2269.glib_queueautoptr_cleanup_GtkRadioToolButton$MH,"glib_queueautoptr_cleanup_GtkRadioToolButton");
    }
    public static void glib_queueautoptr_cleanup_GtkRadioToolButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkRadioToolButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRange_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRange_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRange_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRange_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRange$MH() {
        return RuntimeHelper.requireNonNull(constants$2269.glib_autoptr_clear_GtkRange$MH,"glib_autoptr_clear_GtkRange");
    }
    public static void glib_autoptr_clear_GtkRange ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkRange$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRange$MH() {
        return RuntimeHelper.requireNonNull(constants$2269.glib_autoptr_cleanup_GtkRange$MH,"glib_autoptr_cleanup_GtkRange");
    }
    public static void glib_autoptr_cleanup_GtkRange ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkRange$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRange$MH() {
        return RuntimeHelper.requireNonNull(constants$2269.glib_listautoptr_cleanup_GtkRange$MH,"glib_listautoptr_cleanup_GtkRange");
    }
    public static void glib_listautoptr_cleanup_GtkRange ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkRange$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRange$MH() {
        return RuntimeHelper.requireNonNull(constants$2269.glib_slistautoptr_cleanup_GtkRange$MH,"glib_slistautoptr_cleanup_GtkRange");
    }
    public static void glib_slistautoptr_cleanup_GtkRange ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkRange$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRange$MH() {
        return RuntimeHelper.requireNonNull(constants$2269.glib_queueautoptr_cleanup_GtkRange$MH,"glib_queueautoptr_cleanup_GtkRange");
    }
    public static void glib_queueautoptr_cleanup_GtkRange ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkRange$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRcStyle_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRcStyle_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRcStyle_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRcStyle_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRcStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2270.glib_autoptr_clear_GtkRcStyle$MH,"glib_autoptr_clear_GtkRcStyle");
    }
    public static void glib_autoptr_clear_GtkRcStyle ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkRcStyle$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRcStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2270.glib_autoptr_cleanup_GtkRcStyle$MH,"glib_autoptr_cleanup_GtkRcStyle");
    }
    public static void glib_autoptr_cleanup_GtkRcStyle ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkRcStyle$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRcStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2270.glib_listautoptr_cleanup_GtkRcStyle$MH,"glib_listautoptr_cleanup_GtkRcStyle");
    }
    public static void glib_listautoptr_cleanup_GtkRcStyle ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkRcStyle$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRcStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2270.glib_slistautoptr_cleanup_GtkRcStyle$MH,"glib_slistautoptr_cleanup_GtkRcStyle");
    }
    public static void glib_slistautoptr_cleanup_GtkRcStyle ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkRcStyle$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRcStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2270.glib_queueautoptr_cleanup_GtkRcStyle$MH,"glib_queueautoptr_cleanup_GtkRcStyle");
    }
    public static void glib_queueautoptr_cleanup_GtkRcStyle ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkRcStyle$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRecentChooser_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooser_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooser_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooser_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRecentChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2270.glib_autoptr_clear_GtkRecentChooser$MH,"glib_autoptr_clear_GtkRecentChooser");
    }
    public static void glib_autoptr_clear_GtkRecentChooser ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkRecentChooser$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRecentChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2271.glib_autoptr_cleanup_GtkRecentChooser$MH,"glib_autoptr_cleanup_GtkRecentChooser");
    }
    public static void glib_autoptr_cleanup_GtkRecentChooser ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkRecentChooser$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRecentChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2271.glib_listautoptr_cleanup_GtkRecentChooser$MH,"glib_listautoptr_cleanup_GtkRecentChooser");
    }
    public static void glib_listautoptr_cleanup_GtkRecentChooser ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkRecentChooser$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRecentChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2271.glib_slistautoptr_cleanup_GtkRecentChooser$MH,"glib_slistautoptr_cleanup_GtkRecentChooser");
    }
    public static void glib_slistautoptr_cleanup_GtkRecentChooser ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkRecentChooser$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRecentChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2271.glib_queueautoptr_cleanup_GtkRecentChooser$MH,"glib_queueautoptr_cleanup_GtkRecentChooser");
    }
    public static void glib_queueautoptr_cleanup_GtkRecentChooser ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkRecentChooser$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRecentChooserDialog_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooserDialog_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooserDialog_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooserDialog_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRecentChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2271.glib_autoptr_clear_GtkRecentChooserDialog$MH,"glib_autoptr_clear_GtkRecentChooserDialog");
    }
    public static void glib_autoptr_clear_GtkRecentChooserDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkRecentChooserDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRecentChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2271.glib_autoptr_cleanup_GtkRecentChooserDialog$MH,"glib_autoptr_cleanup_GtkRecentChooserDialog");
    }
    public static void glib_autoptr_cleanup_GtkRecentChooserDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkRecentChooserDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRecentChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2272.glib_listautoptr_cleanup_GtkRecentChooserDialog$MH,"glib_listautoptr_cleanup_GtkRecentChooserDialog");
    }
    public static void glib_listautoptr_cleanup_GtkRecentChooserDialog ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkRecentChooserDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRecentChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2272.glib_slistautoptr_cleanup_GtkRecentChooserDialog$MH,"glib_slistautoptr_cleanup_GtkRecentChooserDialog");
    }
    public static void glib_slistautoptr_cleanup_GtkRecentChooserDialog ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkRecentChooserDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRecentChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2272.glib_queueautoptr_cleanup_GtkRecentChooserDialog$MH,"glib_queueautoptr_cleanup_GtkRecentChooserDialog");
    }
    public static void glib_queueautoptr_cleanup_GtkRecentChooserDialog ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkRecentChooserDialog$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRecentChooserMenu_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooserMenu_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooserMenu_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooserMenu_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRecentChooserMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2272.glib_autoptr_clear_GtkRecentChooserMenu$MH,"glib_autoptr_clear_GtkRecentChooserMenu");
    }
    public static void glib_autoptr_clear_GtkRecentChooserMenu ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkRecentChooserMenu$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRecentChooserMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2272.glib_autoptr_cleanup_GtkRecentChooserMenu$MH,"glib_autoptr_cleanup_GtkRecentChooserMenu");
    }
    public static void glib_autoptr_cleanup_GtkRecentChooserMenu ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkRecentChooserMenu$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRecentChooserMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2272.glib_listautoptr_cleanup_GtkRecentChooserMenu$MH,"glib_listautoptr_cleanup_GtkRecentChooserMenu");
    }
    public static void glib_listautoptr_cleanup_GtkRecentChooserMenu ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkRecentChooserMenu$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRecentChooserMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2273.glib_slistautoptr_cleanup_GtkRecentChooserMenu$MH,"glib_slistautoptr_cleanup_GtkRecentChooserMenu");
    }
    public static void glib_slistautoptr_cleanup_GtkRecentChooserMenu ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkRecentChooserMenu$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRecentChooserMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2273.glib_queueautoptr_cleanup_GtkRecentChooserMenu$MH,"glib_queueautoptr_cleanup_GtkRecentChooserMenu");
    }
    public static void glib_queueautoptr_cleanup_GtkRecentChooserMenu ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkRecentChooserMenu$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRecentChooserWidget_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooserWidget_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooserWidget_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentChooserWidget_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRecentChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2273.glib_autoptr_clear_GtkRecentChooserWidget$MH,"glib_autoptr_clear_GtkRecentChooserWidget");
    }
    public static void glib_autoptr_clear_GtkRecentChooserWidget ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkRecentChooserWidget$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRecentChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2273.glib_autoptr_cleanup_GtkRecentChooserWidget$MH,"glib_autoptr_cleanup_GtkRecentChooserWidget");
    }
    public static void glib_autoptr_cleanup_GtkRecentChooserWidget ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkRecentChooserWidget$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRecentChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2273.glib_listautoptr_cleanup_GtkRecentChooserWidget$MH,"glib_listautoptr_cleanup_GtkRecentChooserWidget");
    }
    public static void glib_listautoptr_cleanup_GtkRecentChooserWidget ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkRecentChooserWidget$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRecentChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2273.glib_slistautoptr_cleanup_GtkRecentChooserWidget$MH,"glib_slistautoptr_cleanup_GtkRecentChooserWidget");
    }
    public static void glib_slistautoptr_cleanup_GtkRecentChooserWidget ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkRecentChooserWidget$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRecentChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2274.glib_queueautoptr_cleanup_GtkRecentChooserWidget$MH,"glib_queueautoptr_cleanup_GtkRecentChooserWidget");
    }
    public static void glib_queueautoptr_cleanup_GtkRecentChooserWidget ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkRecentChooserWidget$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRecentFilter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentFilter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentFilter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentFilter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRecentFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2274.glib_autoptr_clear_GtkRecentFilter$MH,"glib_autoptr_clear_GtkRecentFilter");
    }
    public static void glib_autoptr_clear_GtkRecentFilter ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkRecentFilter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRecentFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2274.glib_autoptr_cleanup_GtkRecentFilter$MH,"glib_autoptr_cleanup_GtkRecentFilter");
    }
    public static void glib_autoptr_cleanup_GtkRecentFilter ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkRecentFilter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRecentFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2274.glib_listautoptr_cleanup_GtkRecentFilter$MH,"glib_listautoptr_cleanup_GtkRecentFilter");
    }
    public static void glib_listautoptr_cleanup_GtkRecentFilter ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkRecentFilter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRecentFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2274.glib_slistautoptr_cleanup_GtkRecentFilter$MH,"glib_slistautoptr_cleanup_GtkRecentFilter");
    }
    public static void glib_slistautoptr_cleanup_GtkRecentFilter ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkRecentFilter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRecentFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2274.glib_queueautoptr_cleanup_GtkRecentFilter$MH,"glib_queueautoptr_cleanup_GtkRecentFilter");
    }
    public static void glib_queueautoptr_cleanup_GtkRecentFilter ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkRecentFilter$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRecentManager_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentManager_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentManager_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentManager_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRecentManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2275.glib_autoptr_clear_GtkRecentManager$MH,"glib_autoptr_clear_GtkRecentManager");
    }
    public static void glib_autoptr_clear_GtkRecentManager ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkRecentManager$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRecentManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2275.glib_autoptr_cleanup_GtkRecentManager$MH,"glib_autoptr_cleanup_GtkRecentManager");
    }
    public static void glib_autoptr_cleanup_GtkRecentManager ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkRecentManager$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRecentManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2275.glib_listautoptr_cleanup_GtkRecentManager$MH,"glib_listautoptr_cleanup_GtkRecentManager");
    }
    public static void glib_listautoptr_cleanup_GtkRecentManager ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkRecentManager$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRecentManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2275.glib_slistautoptr_cleanup_GtkRecentManager$MH,"glib_slistautoptr_cleanup_GtkRecentManager");
    }
    public static void glib_slistautoptr_cleanup_GtkRecentManager ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkRecentManager$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRecentManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2275.glib_queueautoptr_cleanup_GtkRecentManager$MH,"glib_queueautoptr_cleanup_GtkRecentManager");
    }
    public static void glib_queueautoptr_cleanup_GtkRecentManager ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkRecentManager$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRevealer_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRevealer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRevealer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRevealer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRevealer$MH() {
        return RuntimeHelper.requireNonNull(constants$2275.glib_autoptr_clear_GtkRevealer$MH,"glib_autoptr_clear_GtkRevealer");
    }
    public static void glib_autoptr_clear_GtkRevealer ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkRevealer$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRevealer$MH() {
        return RuntimeHelper.requireNonNull(constants$2276.glib_autoptr_cleanup_GtkRevealer$MH,"glib_autoptr_cleanup_GtkRevealer");
    }
    public static void glib_autoptr_cleanup_GtkRevealer ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkRevealer$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRevealer$MH() {
        return RuntimeHelper.requireNonNull(constants$2276.glib_listautoptr_cleanup_GtkRevealer$MH,"glib_listautoptr_cleanup_GtkRevealer");
    }
    public static void glib_listautoptr_cleanup_GtkRevealer ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkRevealer$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRevealer$MH() {
        return RuntimeHelper.requireNonNull(constants$2276.glib_slistautoptr_cleanup_GtkRevealer$MH,"glib_slistautoptr_cleanup_GtkRevealer");
    }
    public static void glib_slistautoptr_cleanup_GtkRevealer ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkRevealer$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRevealer$MH() {
        return RuntimeHelper.requireNonNull(constants$2276.glib_queueautoptr_cleanup_GtkRevealer$MH,"glib_queueautoptr_cleanup_GtkRevealer");
    }
    public static void glib_queueautoptr_cleanup_GtkRevealer ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkRevealer$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkScale_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScale_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScale_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScale_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkScale$MH() {
        return RuntimeHelper.requireNonNull(constants$2276.glib_autoptr_clear_GtkScale$MH,"glib_autoptr_clear_GtkScale");
    }
    public static void glib_autoptr_clear_GtkScale ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkScale$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkScale$MH() {
        return RuntimeHelper.requireNonNull(constants$2276.glib_autoptr_cleanup_GtkScale$MH,"glib_autoptr_cleanup_GtkScale");
    }
    public static void glib_autoptr_cleanup_GtkScale ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkScale$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkScale$MH() {
        return RuntimeHelper.requireNonNull(constants$2277.glib_listautoptr_cleanup_GtkScale$MH,"glib_listautoptr_cleanup_GtkScale");
    }
    public static void glib_listautoptr_cleanup_GtkScale ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkScale$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkScale$MH() {
        return RuntimeHelper.requireNonNull(constants$2277.glib_slistautoptr_cleanup_GtkScale$MH,"glib_slistautoptr_cleanup_GtkScale");
    }
    public static void glib_slistautoptr_cleanup_GtkScale ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkScale$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkScale$MH() {
        return RuntimeHelper.requireNonNull(constants$2277.glib_queueautoptr_cleanup_GtkScale$MH,"glib_queueautoptr_cleanup_GtkScale");
    }
    public static void glib_queueautoptr_cleanup_GtkScale ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkScale$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkScaleButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScaleButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScaleButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScaleButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkScaleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2277.glib_autoptr_clear_GtkScaleButton$MH,"glib_autoptr_clear_GtkScaleButton");
    }
    public static void glib_autoptr_clear_GtkScaleButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkScaleButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkScaleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2277.glib_autoptr_cleanup_GtkScaleButton$MH,"glib_autoptr_cleanup_GtkScaleButton");
    }
    public static void glib_autoptr_cleanup_GtkScaleButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkScaleButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkScaleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2277.glib_listautoptr_cleanup_GtkScaleButton$MH,"glib_listautoptr_cleanup_GtkScaleButton");
    }
    public static void glib_listautoptr_cleanup_GtkScaleButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkScaleButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkScaleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2278.glib_slistautoptr_cleanup_GtkScaleButton$MH,"glib_slistautoptr_cleanup_GtkScaleButton");
    }
    public static void glib_slistautoptr_cleanup_GtkScaleButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkScaleButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkScaleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2278.glib_queueautoptr_cleanup_GtkScaleButton$MH,"glib_queueautoptr_cleanup_GtkScaleButton");
    }
    public static void glib_queueautoptr_cleanup_GtkScaleButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkScaleButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkScrollable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrollable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrollable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrollable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkScrollable$MH() {
        return RuntimeHelper.requireNonNull(constants$2278.glib_autoptr_clear_GtkScrollable$MH,"glib_autoptr_clear_GtkScrollable");
    }
    public static void glib_autoptr_clear_GtkScrollable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkScrollable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkScrollable$MH() {
        return RuntimeHelper.requireNonNull(constants$2278.glib_autoptr_cleanup_GtkScrollable$MH,"glib_autoptr_cleanup_GtkScrollable");
    }
    public static void glib_autoptr_cleanup_GtkScrollable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkScrollable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkScrollable$MH() {
        return RuntimeHelper.requireNonNull(constants$2278.glib_listautoptr_cleanup_GtkScrollable$MH,"glib_listautoptr_cleanup_GtkScrollable");
    }
    public static void glib_listautoptr_cleanup_GtkScrollable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkScrollable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkScrollable$MH() {
        return RuntimeHelper.requireNonNull(constants$2278.glib_slistautoptr_cleanup_GtkScrollable$MH,"glib_slistautoptr_cleanup_GtkScrollable");
    }
    public static void glib_slistautoptr_cleanup_GtkScrollable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkScrollable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkScrollable$MH() {
        return RuntimeHelper.requireNonNull(constants$2279.glib_queueautoptr_cleanup_GtkScrollable$MH,"glib_queueautoptr_cleanup_GtkScrollable");
    }
    public static void glib_queueautoptr_cleanup_GtkScrollable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkScrollable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkScrollbar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrollbar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrollbar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrollbar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkScrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2279.glib_autoptr_clear_GtkScrollbar$MH,"glib_autoptr_clear_GtkScrollbar");
    }
    public static void glib_autoptr_clear_GtkScrollbar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkScrollbar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkScrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2279.glib_autoptr_cleanup_GtkScrollbar$MH,"glib_autoptr_cleanup_GtkScrollbar");
    }
    public static void glib_autoptr_cleanup_GtkScrollbar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkScrollbar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkScrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2279.glib_listautoptr_cleanup_GtkScrollbar$MH,"glib_listautoptr_cleanup_GtkScrollbar");
    }
    public static void glib_listautoptr_cleanup_GtkScrollbar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkScrollbar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkScrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2279.glib_slistautoptr_cleanup_GtkScrollbar$MH,"glib_slistautoptr_cleanup_GtkScrollbar");
    }
    public static void glib_slistautoptr_cleanup_GtkScrollbar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkScrollbar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkScrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2279.glib_queueautoptr_cleanup_GtkScrollbar$MH,"glib_queueautoptr_cleanup_GtkScrollbar");
    }
    public static void glib_queueautoptr_cleanup_GtkScrollbar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkScrollbar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkScrolledWindow_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrolledWindow_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrolledWindow_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrolledWindow_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkScrolledWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2280.glib_autoptr_clear_GtkScrolledWindow$MH,"glib_autoptr_clear_GtkScrolledWindow");
    }
    public static void glib_autoptr_clear_GtkScrolledWindow ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkScrolledWindow$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkScrolledWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2280.glib_autoptr_cleanup_GtkScrolledWindow$MH,"glib_autoptr_cleanup_GtkScrolledWindow");
    }
    public static void glib_autoptr_cleanup_GtkScrolledWindow ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkScrolledWindow$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkScrolledWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2280.glib_listautoptr_cleanup_GtkScrolledWindow$MH,"glib_listautoptr_cleanup_GtkScrolledWindow");
    }
    public static void glib_listautoptr_cleanup_GtkScrolledWindow ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkScrolledWindow$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkScrolledWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2280.glib_slistautoptr_cleanup_GtkScrolledWindow$MH,"glib_slistautoptr_cleanup_GtkScrolledWindow");
    }
    public static void glib_slistautoptr_cleanup_GtkScrolledWindow ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkScrolledWindow$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkScrolledWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2280.glib_queueautoptr_cleanup_GtkScrolledWindow$MH,"glib_queueautoptr_cleanup_GtkScrolledWindow");
    }
    public static void glib_queueautoptr_cleanup_GtkScrolledWindow ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkScrolledWindow$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSearchBar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSearchBar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSearchBar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSearchBar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSearchBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2280.glib_autoptr_clear_GtkSearchBar$MH,"glib_autoptr_clear_GtkSearchBar");
    }
    public static void glib_autoptr_clear_GtkSearchBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSearchBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSearchBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2281.glib_autoptr_cleanup_GtkSearchBar$MH,"glib_autoptr_cleanup_GtkSearchBar");
    }
    public static void glib_autoptr_cleanup_GtkSearchBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSearchBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSearchBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2281.glib_listautoptr_cleanup_GtkSearchBar$MH,"glib_listautoptr_cleanup_GtkSearchBar");
    }
    public static void glib_listautoptr_cleanup_GtkSearchBar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSearchBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSearchBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2281.glib_slistautoptr_cleanup_GtkSearchBar$MH,"glib_slistautoptr_cleanup_GtkSearchBar");
    }
    public static void glib_slistautoptr_cleanup_GtkSearchBar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSearchBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSearchBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2281.glib_queueautoptr_cleanup_GtkSearchBar$MH,"glib_queueautoptr_cleanup_GtkSearchBar");
    }
    public static void glib_queueautoptr_cleanup_GtkSearchBar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSearchBar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSearchEntry_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSearchEntry_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSearchEntry_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSearchEntry_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSearchEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2281.glib_autoptr_clear_GtkSearchEntry$MH,"glib_autoptr_clear_GtkSearchEntry");
    }
    public static void glib_autoptr_clear_GtkSearchEntry ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSearchEntry$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSearchEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2281.glib_autoptr_cleanup_GtkSearchEntry$MH,"glib_autoptr_cleanup_GtkSearchEntry");
    }
    public static void glib_autoptr_cleanup_GtkSearchEntry ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSearchEntry$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSearchEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2282.glib_listautoptr_cleanup_GtkSearchEntry$MH,"glib_listautoptr_cleanup_GtkSearchEntry");
    }
    public static void glib_listautoptr_cleanup_GtkSearchEntry ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSearchEntry$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSearchEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2282.glib_slistautoptr_cleanup_GtkSearchEntry$MH,"glib_slistautoptr_cleanup_GtkSearchEntry");
    }
    public static void glib_slistautoptr_cleanup_GtkSearchEntry ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSearchEntry$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSearchEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2282.glib_queueautoptr_cleanup_GtkSearchEntry$MH,"glib_queueautoptr_cleanup_GtkSearchEntry");
    }
    public static void glib_queueautoptr_cleanup_GtkSearchEntry ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSearchEntry$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSeparator_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparator_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparator_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparator_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSeparator$MH() {
        return RuntimeHelper.requireNonNull(constants$2282.glib_autoptr_clear_GtkSeparator$MH,"glib_autoptr_clear_GtkSeparator");
    }
    public static void glib_autoptr_clear_GtkSeparator ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSeparator$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSeparator$MH() {
        return RuntimeHelper.requireNonNull(constants$2282.glib_autoptr_cleanup_GtkSeparator$MH,"glib_autoptr_cleanup_GtkSeparator");
    }
    public static void glib_autoptr_cleanup_GtkSeparator ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSeparator$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSeparator$MH() {
        return RuntimeHelper.requireNonNull(constants$2282.glib_listautoptr_cleanup_GtkSeparator$MH,"glib_listautoptr_cleanup_GtkSeparator");
    }
    public static void glib_listautoptr_cleanup_GtkSeparator ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSeparator$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSeparator$MH() {
        return RuntimeHelper.requireNonNull(constants$2283.glib_slistautoptr_cleanup_GtkSeparator$MH,"glib_slistautoptr_cleanup_GtkSeparator");
    }
    public static void glib_slistautoptr_cleanup_GtkSeparator ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSeparator$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSeparator$MH() {
        return RuntimeHelper.requireNonNull(constants$2283.glib_queueautoptr_cleanup_GtkSeparator$MH,"glib_queueautoptr_cleanup_GtkSeparator");
    }
    public static void glib_queueautoptr_cleanup_GtkSeparator ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSeparator$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSeparatorMenuItem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparatorMenuItem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparatorMenuItem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparatorMenuItem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSeparatorMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2283.glib_autoptr_clear_GtkSeparatorMenuItem$MH,"glib_autoptr_clear_GtkSeparatorMenuItem");
    }
    public static void glib_autoptr_clear_GtkSeparatorMenuItem ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSeparatorMenuItem$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSeparatorMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2283.glib_autoptr_cleanup_GtkSeparatorMenuItem$MH,"glib_autoptr_cleanup_GtkSeparatorMenuItem");
    }
    public static void glib_autoptr_cleanup_GtkSeparatorMenuItem ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSeparatorMenuItem$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSeparatorMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2283.glib_listautoptr_cleanup_GtkSeparatorMenuItem$MH,"glib_listautoptr_cleanup_GtkSeparatorMenuItem");
    }
    public static void glib_listautoptr_cleanup_GtkSeparatorMenuItem ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSeparatorMenuItem$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSeparatorMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2283.glib_slistautoptr_cleanup_GtkSeparatorMenuItem$MH,"glib_slistautoptr_cleanup_GtkSeparatorMenuItem");
    }
    public static void glib_slistautoptr_cleanup_GtkSeparatorMenuItem ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSeparatorMenuItem$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSeparatorMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2284.glib_queueautoptr_cleanup_GtkSeparatorMenuItem$MH,"glib_queueautoptr_cleanup_GtkSeparatorMenuItem");
    }
    public static void glib_queueautoptr_cleanup_GtkSeparatorMenuItem ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSeparatorMenuItem$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSeparatorToolItem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparatorToolItem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparatorToolItem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparatorToolItem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSeparatorToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2284.glib_autoptr_clear_GtkSeparatorToolItem$MH,"glib_autoptr_clear_GtkSeparatorToolItem");
    }
    public static void glib_autoptr_clear_GtkSeparatorToolItem ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSeparatorToolItem$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSeparatorToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2284.glib_autoptr_cleanup_GtkSeparatorToolItem$MH,"glib_autoptr_cleanup_GtkSeparatorToolItem");
    }
    public static void glib_autoptr_cleanup_GtkSeparatorToolItem ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSeparatorToolItem$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSeparatorToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2284.glib_listautoptr_cleanup_GtkSeparatorToolItem$MH,"glib_listautoptr_cleanup_GtkSeparatorToolItem");
    }
    public static void glib_listautoptr_cleanup_GtkSeparatorToolItem ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSeparatorToolItem$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSeparatorToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2284.glib_slistautoptr_cleanup_GtkSeparatorToolItem$MH,"glib_slistautoptr_cleanup_GtkSeparatorToolItem");
    }
    public static void glib_slistautoptr_cleanup_GtkSeparatorToolItem ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSeparatorToolItem$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSeparatorToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2284.glib_queueautoptr_cleanup_GtkSeparatorToolItem$MH,"glib_queueautoptr_cleanup_GtkSeparatorToolItem");
    }
    public static void glib_queueautoptr_cleanup_GtkSeparatorToolItem ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSeparatorToolItem$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSettings_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSettings_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSettings_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSettings_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2285.glib_autoptr_clear_GtkSettings$MH,"glib_autoptr_clear_GtkSettings");
    }
    public static void glib_autoptr_clear_GtkSettings ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSettings$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2285.glib_autoptr_cleanup_GtkSettings$MH,"glib_autoptr_cleanup_GtkSettings");
    }
    public static void glib_autoptr_cleanup_GtkSettings ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSettings$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2285.glib_listautoptr_cleanup_GtkSettings$MH,"glib_listautoptr_cleanup_GtkSettings");
    }
    public static void glib_listautoptr_cleanup_GtkSettings ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSettings$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2285.glib_slistautoptr_cleanup_GtkSettings$MH,"glib_slistautoptr_cleanup_GtkSettings");
    }
    public static void glib_slistautoptr_cleanup_GtkSettings ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSettings$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2285.glib_queueautoptr_cleanup_GtkSettings$MH,"glib_queueautoptr_cleanup_GtkSettings");
    }
    public static void glib_queueautoptr_cleanup_GtkSettings ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSettings$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStackSidebar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStackSidebar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStackSidebar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStackSidebar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStackSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2285.glib_autoptr_clear_GtkStackSidebar$MH,"glib_autoptr_clear_GtkStackSidebar");
    }
    public static void glib_autoptr_clear_GtkStackSidebar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStackSidebar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStackSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2286.glib_autoptr_cleanup_GtkStackSidebar$MH,"glib_autoptr_cleanup_GtkStackSidebar");
    }
    public static void glib_autoptr_cleanup_GtkStackSidebar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStackSidebar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStackSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2286.glib_listautoptr_cleanup_GtkStackSidebar$MH,"glib_listautoptr_cleanup_GtkStackSidebar");
    }
    public static void glib_listautoptr_cleanup_GtkStackSidebar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStackSidebar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStackSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2286.glib_slistautoptr_cleanup_GtkStackSidebar$MH,"glib_slistautoptr_cleanup_GtkStackSidebar");
    }
    public static void glib_slistautoptr_cleanup_GtkStackSidebar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStackSidebar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStackSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2286.glib_queueautoptr_cleanup_GtkStackSidebar$MH,"glib_queueautoptr_cleanup_GtkStackSidebar");
    }
    public static void glib_queueautoptr_cleanup_GtkStackSidebar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStackSidebar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSizeGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSizeGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSizeGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSizeGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSizeGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2286.glib_autoptr_clear_GtkSizeGroup$MH,"glib_autoptr_clear_GtkSizeGroup");
    }
    public static void glib_autoptr_clear_GtkSizeGroup ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSizeGroup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSizeGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2286.glib_autoptr_cleanup_GtkSizeGroup$MH,"glib_autoptr_cleanup_GtkSizeGroup");
    }
    public static void glib_autoptr_cleanup_GtkSizeGroup ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSizeGroup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSizeGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2287.glib_listautoptr_cleanup_GtkSizeGroup$MH,"glib_listautoptr_cleanup_GtkSizeGroup");
    }
    public static void glib_listautoptr_cleanup_GtkSizeGroup ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSizeGroup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSizeGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2287.glib_slistautoptr_cleanup_GtkSizeGroup$MH,"glib_slistautoptr_cleanup_GtkSizeGroup");
    }
    public static void glib_slistautoptr_cleanup_GtkSizeGroup ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSizeGroup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSizeGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2287.glib_queueautoptr_cleanup_GtkSizeGroup$MH,"glib_queueautoptr_cleanup_GtkSizeGroup");
    }
    public static void glib_queueautoptr_cleanup_GtkSizeGroup ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSizeGroup$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSpinButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSpinButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSpinButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSpinButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSpinButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2287.glib_autoptr_clear_GtkSpinButton$MH,"glib_autoptr_clear_GtkSpinButton");
    }
    public static void glib_autoptr_clear_GtkSpinButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSpinButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSpinButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2287.glib_autoptr_cleanup_GtkSpinButton$MH,"glib_autoptr_cleanup_GtkSpinButton");
    }
    public static void glib_autoptr_cleanup_GtkSpinButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSpinButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSpinButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2287.glib_listautoptr_cleanup_GtkSpinButton$MH,"glib_listautoptr_cleanup_GtkSpinButton");
    }
    public static void glib_listautoptr_cleanup_GtkSpinButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSpinButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSpinButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2288.glib_slistautoptr_cleanup_GtkSpinButton$MH,"glib_slistautoptr_cleanup_GtkSpinButton");
    }
    public static void glib_slistautoptr_cleanup_GtkSpinButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSpinButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSpinButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2288.glib_queueautoptr_cleanup_GtkSpinButton$MH,"glib_queueautoptr_cleanup_GtkSpinButton");
    }
    public static void glib_queueautoptr_cleanup_GtkSpinButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSpinButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSpinner_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSpinner_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSpinner_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSpinner_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2288.glib_autoptr_clear_GtkSpinner$MH,"glib_autoptr_clear_GtkSpinner");
    }
    public static void glib_autoptr_clear_GtkSpinner ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSpinner$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2288.glib_autoptr_cleanup_GtkSpinner$MH,"glib_autoptr_cleanup_GtkSpinner");
    }
    public static void glib_autoptr_cleanup_GtkSpinner ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSpinner$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2288.glib_listautoptr_cleanup_GtkSpinner$MH,"glib_listautoptr_cleanup_GtkSpinner");
    }
    public static void glib_listautoptr_cleanup_GtkSpinner ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSpinner$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2288.glib_slistautoptr_cleanup_GtkSpinner$MH,"glib_slistautoptr_cleanup_GtkSpinner");
    }
    public static void glib_slistautoptr_cleanup_GtkSpinner ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSpinner$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2289.glib_queueautoptr_cleanup_GtkSpinner$MH,"glib_queueautoptr_cleanup_GtkSpinner");
    }
    public static void glib_queueautoptr_cleanup_GtkSpinner ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSpinner$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStack_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStack_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStack_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStack_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStack$MH() {
        return RuntimeHelper.requireNonNull(constants$2289.glib_autoptr_clear_GtkStack$MH,"glib_autoptr_clear_GtkStack");
    }
    public static void glib_autoptr_clear_GtkStack ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStack$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStack$MH() {
        return RuntimeHelper.requireNonNull(constants$2289.glib_autoptr_cleanup_GtkStack$MH,"glib_autoptr_cleanup_GtkStack");
    }
    public static void glib_autoptr_cleanup_GtkStack ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStack$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStack$MH() {
        return RuntimeHelper.requireNonNull(constants$2289.glib_listautoptr_cleanup_GtkStack$MH,"glib_listautoptr_cleanup_GtkStack");
    }
    public static void glib_listautoptr_cleanup_GtkStack ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStack$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStack$MH() {
        return RuntimeHelper.requireNonNull(constants$2289.glib_slistautoptr_cleanup_GtkStack$MH,"glib_slistautoptr_cleanup_GtkStack");
    }
    public static void glib_slistautoptr_cleanup_GtkStack ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStack$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStack$MH() {
        return RuntimeHelper.requireNonNull(constants$2289.glib_queueautoptr_cleanup_GtkStack$MH,"glib_queueautoptr_cleanup_GtkStack");
    }
    public static void glib_queueautoptr_cleanup_GtkStack ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStack$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStackSwitcher_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStackSwitcher_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStackSwitcher_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStackSwitcher_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStackSwitcher$MH() {
        return RuntimeHelper.requireNonNull(constants$2290.glib_autoptr_clear_GtkStackSwitcher$MH,"glib_autoptr_clear_GtkStackSwitcher");
    }
    public static void glib_autoptr_clear_GtkStackSwitcher ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStackSwitcher$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStackSwitcher$MH() {
        return RuntimeHelper.requireNonNull(constants$2290.glib_autoptr_cleanup_GtkStackSwitcher$MH,"glib_autoptr_cleanup_GtkStackSwitcher");
    }
    public static void glib_autoptr_cleanup_GtkStackSwitcher ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStackSwitcher$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStackSwitcher$MH() {
        return RuntimeHelper.requireNonNull(constants$2290.glib_listautoptr_cleanup_GtkStackSwitcher$MH,"glib_listautoptr_cleanup_GtkStackSwitcher");
    }
    public static void glib_listautoptr_cleanup_GtkStackSwitcher ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStackSwitcher$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStackSwitcher$MH() {
        return RuntimeHelper.requireNonNull(constants$2290.glib_slistautoptr_cleanup_GtkStackSwitcher$MH,"glib_slistautoptr_cleanup_GtkStackSwitcher");
    }
    public static void glib_slistautoptr_cleanup_GtkStackSwitcher ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStackSwitcher$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStackSwitcher$MH() {
        return RuntimeHelper.requireNonNull(constants$2290.glib_queueautoptr_cleanup_GtkStackSwitcher$MH,"glib_queueautoptr_cleanup_GtkStackSwitcher");
    }
    public static void glib_queueautoptr_cleanup_GtkStackSwitcher ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStackSwitcher$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStatusbar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStatusbar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStatusbar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStatusbar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStatusbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2290.glib_autoptr_clear_GtkStatusbar$MH,"glib_autoptr_clear_GtkStatusbar");
    }
    public static void glib_autoptr_clear_GtkStatusbar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStatusbar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStatusbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2291.glib_autoptr_cleanup_GtkStatusbar$MH,"glib_autoptr_cleanup_GtkStatusbar");
    }
    public static void glib_autoptr_cleanup_GtkStatusbar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStatusbar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStatusbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2291.glib_listautoptr_cleanup_GtkStatusbar$MH,"glib_listautoptr_cleanup_GtkStatusbar");
    }
    public static void glib_listautoptr_cleanup_GtkStatusbar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStatusbar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStatusbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2291.glib_slistautoptr_cleanup_GtkStatusbar$MH,"glib_slistautoptr_cleanup_GtkStatusbar");
    }
    public static void glib_slistautoptr_cleanup_GtkStatusbar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStatusbar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStatusbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2291.glib_queueautoptr_cleanup_GtkStatusbar$MH,"glib_queueautoptr_cleanup_GtkStatusbar");
    }
    public static void glib_queueautoptr_cleanup_GtkStatusbar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStatusbar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStyle_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyle_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyle_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyle_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2291.glib_autoptr_clear_GtkStyle$MH,"glib_autoptr_clear_GtkStyle");
    }
    public static void glib_autoptr_clear_GtkStyle ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStyle$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2291.glib_autoptr_cleanup_GtkStyle$MH,"glib_autoptr_cleanup_GtkStyle");
    }
    public static void glib_autoptr_cleanup_GtkStyle ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStyle$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2292.glib_listautoptr_cleanup_GtkStyle$MH,"glib_listautoptr_cleanup_GtkStyle");
    }
    public static void glib_listautoptr_cleanup_GtkStyle ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStyle$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2292.glib_slistautoptr_cleanup_GtkStyle$MH,"glib_slistautoptr_cleanup_GtkStyle");
    }
    public static void glib_slistautoptr_cleanup_GtkStyle ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStyle$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStyle$MH() {
        return RuntimeHelper.requireNonNull(constants$2292.glib_queueautoptr_cleanup_GtkStyle$MH,"glib_queueautoptr_cleanup_GtkStyle");
    }
    public static void glib_queueautoptr_cleanup_GtkStyle ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStyle$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStyleContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStyleContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2292.glib_autoptr_clear_GtkStyleContext$MH,"glib_autoptr_clear_GtkStyleContext");
    }
    public static void glib_autoptr_clear_GtkStyleContext ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStyleContext$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStyleContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2292.glib_autoptr_cleanup_GtkStyleContext$MH,"glib_autoptr_cleanup_GtkStyleContext");
    }
    public static void glib_autoptr_cleanup_GtkStyleContext ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStyleContext$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStyleContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2292.glib_listautoptr_cleanup_GtkStyleContext$MH,"glib_listautoptr_cleanup_GtkStyleContext");
    }
    public static void glib_listautoptr_cleanup_GtkStyleContext ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStyleContext$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStyleContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2293.glib_slistautoptr_cleanup_GtkStyleContext$MH,"glib_slistautoptr_cleanup_GtkStyleContext");
    }
    public static void glib_slistautoptr_cleanup_GtkStyleContext ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStyleContext$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStyleContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2293.glib_queueautoptr_cleanup_GtkStyleContext$MH,"glib_queueautoptr_cleanup_GtkStyleContext");
    }
    public static void glib_queueautoptr_cleanup_GtkStyleContext ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStyleContext$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStyleProperties_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleProperties_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleProperties_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleProperties_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStyleProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$2293.glib_autoptr_clear_GtkStyleProperties$MH,"glib_autoptr_clear_GtkStyleProperties");
    }
    public static void glib_autoptr_clear_GtkStyleProperties ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStyleProperties$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStyleProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$2293.glib_autoptr_cleanup_GtkStyleProperties$MH,"glib_autoptr_cleanup_GtkStyleProperties");
    }
    public static void glib_autoptr_cleanup_GtkStyleProperties ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStyleProperties$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStyleProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$2293.glib_listautoptr_cleanup_GtkStyleProperties$MH,"glib_listautoptr_cleanup_GtkStyleProperties");
    }
    public static void glib_listautoptr_cleanup_GtkStyleProperties ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStyleProperties$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStyleProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$2293.glib_slistautoptr_cleanup_GtkStyleProperties$MH,"glib_slistautoptr_cleanup_GtkStyleProperties");
    }
    public static void glib_slistautoptr_cleanup_GtkStyleProperties ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStyleProperties$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStyleProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$2294.glib_queueautoptr_cleanup_GtkStyleProperties$MH,"glib_queueautoptr_cleanup_GtkStyleProperties");
    }
    public static void glib_queueautoptr_cleanup_GtkStyleProperties ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStyleProperties$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStyleProvider_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleProvider_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleProvider_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleProvider_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStyleProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2294.glib_autoptr_clear_GtkStyleProvider$MH,"glib_autoptr_clear_GtkStyleProvider");
    }
    public static void glib_autoptr_clear_GtkStyleProvider ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStyleProvider$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStyleProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2294.glib_autoptr_cleanup_GtkStyleProvider$MH,"glib_autoptr_cleanup_GtkStyleProvider");
    }
    public static void glib_autoptr_cleanup_GtkStyleProvider ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStyleProvider$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStyleProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2294.glib_listautoptr_cleanup_GtkStyleProvider$MH,"glib_listautoptr_cleanup_GtkStyleProvider");
    }
    public static void glib_listautoptr_cleanup_GtkStyleProvider ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStyleProvider$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStyleProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2294.glib_slistautoptr_cleanup_GtkStyleProvider$MH,"glib_slistautoptr_cleanup_GtkStyleProvider");
    }
    public static void glib_slistautoptr_cleanup_GtkStyleProvider ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStyleProvider$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStyleProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2294.glib_queueautoptr_cleanup_GtkStyleProvider$MH,"glib_queueautoptr_cleanup_GtkStyleProvider");
    }
    public static void glib_queueautoptr_cleanup_GtkStyleProvider ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStyleProvider$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSwitch_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSwitch_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSwitch_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSwitch_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSwitch$MH() {
        return RuntimeHelper.requireNonNull(constants$2295.glib_autoptr_clear_GtkSwitch$MH,"glib_autoptr_clear_GtkSwitch");
    }
    public static void glib_autoptr_clear_GtkSwitch ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSwitch$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSwitch$MH() {
        return RuntimeHelper.requireNonNull(constants$2295.glib_autoptr_cleanup_GtkSwitch$MH,"glib_autoptr_cleanup_GtkSwitch");
    }
    public static void glib_autoptr_cleanup_GtkSwitch ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSwitch$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSwitch$MH() {
        return RuntimeHelper.requireNonNull(constants$2295.glib_listautoptr_cleanup_GtkSwitch$MH,"glib_listautoptr_cleanup_GtkSwitch");
    }
    public static void glib_listautoptr_cleanup_GtkSwitch ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSwitch$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSwitch$MH() {
        return RuntimeHelper.requireNonNull(constants$2295.glib_slistautoptr_cleanup_GtkSwitch$MH,"glib_slistautoptr_cleanup_GtkSwitch");
    }
    public static void glib_slistautoptr_cleanup_GtkSwitch ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSwitch$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSwitch$MH() {
        return RuntimeHelper.requireNonNull(constants$2295.glib_queueautoptr_cleanup_GtkSwitch$MH,"glib_queueautoptr_cleanup_GtkSwitch");
    }
    public static void glib_queueautoptr_cleanup_GtkSwitch ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSwitch$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextBuffer_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextBuffer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextBuffer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextBuffer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2295.glib_autoptr_clear_GtkTextBuffer$MH,"glib_autoptr_clear_GtkTextBuffer");
    }
    public static void glib_autoptr_clear_GtkTextBuffer ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTextBuffer$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2296.glib_autoptr_cleanup_GtkTextBuffer$MH,"glib_autoptr_cleanup_GtkTextBuffer");
    }
    public static void glib_autoptr_cleanup_GtkTextBuffer ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTextBuffer$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2296.glib_listautoptr_cleanup_GtkTextBuffer$MH,"glib_listautoptr_cleanup_GtkTextBuffer");
    }
    public static void glib_listautoptr_cleanup_GtkTextBuffer ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTextBuffer$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2296.glib_slistautoptr_cleanup_GtkTextBuffer$MH,"glib_slistautoptr_cleanup_GtkTextBuffer");
    }
    public static void glib_slistautoptr_cleanup_GtkTextBuffer ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTextBuffer$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2296.glib_queueautoptr_cleanup_GtkTextBuffer$MH,"glib_queueautoptr_cleanup_GtkTextBuffer");
    }
    public static void glib_queueautoptr_cleanup_GtkTextBuffer ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTextBuffer$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextChildAnchor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextChildAnchor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextChildAnchor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextChildAnchor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextChildAnchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2296.glib_autoptr_clear_GtkTextChildAnchor$MH,"glib_autoptr_clear_GtkTextChildAnchor");
    }
    public static void glib_autoptr_clear_GtkTextChildAnchor ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTextChildAnchor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextChildAnchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2296.glib_autoptr_cleanup_GtkTextChildAnchor$MH,"glib_autoptr_cleanup_GtkTextChildAnchor");
    }
    public static void glib_autoptr_cleanup_GtkTextChildAnchor ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTextChildAnchor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextChildAnchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2297.glib_listautoptr_cleanup_GtkTextChildAnchor$MH,"glib_listautoptr_cleanup_GtkTextChildAnchor");
    }
    public static void glib_listautoptr_cleanup_GtkTextChildAnchor ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTextChildAnchor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextChildAnchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2297.glib_slistautoptr_cleanup_GtkTextChildAnchor$MH,"glib_slistautoptr_cleanup_GtkTextChildAnchor");
    }
    public static void glib_slistautoptr_cleanup_GtkTextChildAnchor ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTextChildAnchor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextChildAnchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2297.glib_queueautoptr_cleanup_GtkTextChildAnchor$MH,"glib_queueautoptr_cleanup_GtkTextChildAnchor");
    }
    public static void glib_queueautoptr_cleanup_GtkTextChildAnchor ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTextChildAnchor$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextMark_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextMark_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextMark_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextMark_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextMark$MH() {
        return RuntimeHelper.requireNonNull(constants$2297.glib_autoptr_clear_GtkTextMark$MH,"glib_autoptr_clear_GtkTextMark");
    }
    public static void glib_autoptr_clear_GtkTextMark ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTextMark$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextMark$MH() {
        return RuntimeHelper.requireNonNull(constants$2297.glib_autoptr_cleanup_GtkTextMark$MH,"glib_autoptr_cleanup_GtkTextMark");
    }
    public static void glib_autoptr_cleanup_GtkTextMark ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTextMark$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextMark$MH() {
        return RuntimeHelper.requireNonNull(constants$2297.glib_listautoptr_cleanup_GtkTextMark$MH,"glib_listautoptr_cleanup_GtkTextMark");
    }
    public static void glib_listautoptr_cleanup_GtkTextMark ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTextMark$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextMark$MH() {
        return RuntimeHelper.requireNonNull(constants$2298.glib_slistautoptr_cleanup_GtkTextMark$MH,"glib_slistautoptr_cleanup_GtkTextMark");
    }
    public static void glib_slistautoptr_cleanup_GtkTextMark ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTextMark$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextMark$MH() {
        return RuntimeHelper.requireNonNull(constants$2298.glib_queueautoptr_cleanup_GtkTextMark$MH,"glib_queueautoptr_cleanup_GtkTextMark");
    }
    public static void glib_queueautoptr_cleanup_GtkTextMark ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTextMark$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextTag_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextTag_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextTag_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextTag_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextTag$MH() {
        return RuntimeHelper.requireNonNull(constants$2298.glib_autoptr_clear_GtkTextTag$MH,"glib_autoptr_clear_GtkTextTag");
    }
    public static void glib_autoptr_clear_GtkTextTag ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTextTag$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextTag$MH() {
        return RuntimeHelper.requireNonNull(constants$2298.glib_autoptr_cleanup_GtkTextTag$MH,"glib_autoptr_cleanup_GtkTextTag");
    }
    public static void glib_autoptr_cleanup_GtkTextTag ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTextTag$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextTag$MH() {
        return RuntimeHelper.requireNonNull(constants$2298.glib_listautoptr_cleanup_GtkTextTag$MH,"glib_listautoptr_cleanup_GtkTextTag");
    }
    public static void glib_listautoptr_cleanup_GtkTextTag ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTextTag$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextTag$MH() {
        return RuntimeHelper.requireNonNull(constants$2298.glib_slistautoptr_cleanup_GtkTextTag$MH,"glib_slistautoptr_cleanup_GtkTextTag");
    }
    public static void glib_slistautoptr_cleanup_GtkTextTag ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTextTag$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextTag$MH() {
        return RuntimeHelper.requireNonNull(constants$2299.glib_queueautoptr_cleanup_GtkTextTag$MH,"glib_queueautoptr_cleanup_GtkTextTag");
    }
    public static void glib_queueautoptr_cleanup_GtkTextTag ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTextTag$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextTagTable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextTagTable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextTagTable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextTagTable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextTagTable$MH() {
        return RuntimeHelper.requireNonNull(constants$2299.glib_autoptr_clear_GtkTextTagTable$MH,"glib_autoptr_clear_GtkTextTagTable");
    }
    public static void glib_autoptr_clear_GtkTextTagTable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTextTagTable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextTagTable$MH() {
        return RuntimeHelper.requireNonNull(constants$2299.glib_autoptr_cleanup_GtkTextTagTable$MH,"glib_autoptr_cleanup_GtkTextTagTable");
    }
    public static void glib_autoptr_cleanup_GtkTextTagTable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTextTagTable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextTagTable$MH() {
        return RuntimeHelper.requireNonNull(constants$2299.glib_listautoptr_cleanup_GtkTextTagTable$MH,"glib_listautoptr_cleanup_GtkTextTagTable");
    }
    public static void glib_listautoptr_cleanup_GtkTextTagTable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTextTagTable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextTagTable$MH() {
        return RuntimeHelper.requireNonNull(constants$2299.glib_slistautoptr_cleanup_GtkTextTagTable$MH,"glib_slistautoptr_cleanup_GtkTextTagTable");
    }
    public static void glib_slistautoptr_cleanup_GtkTextTagTable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTextTagTable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextTagTable$MH() {
        return RuntimeHelper.requireNonNull(constants$2299.glib_queueautoptr_cleanup_GtkTextTagTable$MH,"glib_queueautoptr_cleanup_GtkTextTagTable");
    }
    public static void glib_queueautoptr_cleanup_GtkTextTagTable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTextTagTable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextView_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextView_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextView_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextView_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextView$MH() {
        return RuntimeHelper.requireNonNull(constants$2300.glib_autoptr_clear_GtkTextView$MH,"glib_autoptr_clear_GtkTextView");
    }
    public static void glib_autoptr_clear_GtkTextView ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTextView$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextView$MH() {
        return RuntimeHelper.requireNonNull(constants$2300.glib_autoptr_cleanup_GtkTextView$MH,"glib_autoptr_cleanup_GtkTextView");
    }
    public static void glib_autoptr_cleanup_GtkTextView ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTextView$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextView$MH() {
        return RuntimeHelper.requireNonNull(constants$2300.glib_listautoptr_cleanup_GtkTextView$MH,"glib_listautoptr_cleanup_GtkTextView");
    }
    public static void glib_listautoptr_cleanup_GtkTextView ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTextView$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextView$MH() {
        return RuntimeHelper.requireNonNull(constants$2300.glib_slistautoptr_cleanup_GtkTextView$MH,"glib_slistautoptr_cleanup_GtkTextView");
    }
    public static void glib_slistautoptr_cleanup_GtkTextView ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTextView$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextView$MH() {
        return RuntimeHelper.requireNonNull(constants$2300.glib_queueautoptr_cleanup_GtkTextView$MH,"glib_queueautoptr_cleanup_GtkTextView");
    }
    public static void glib_queueautoptr_cleanup_GtkTextView ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTextView$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkToggleButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToggleButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToggleButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToggleButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkToggleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2300.glib_autoptr_clear_GtkToggleButton$MH,"glib_autoptr_clear_GtkToggleButton");
    }
    public static void glib_autoptr_clear_GtkToggleButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkToggleButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkToggleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.glib_autoptr_cleanup_GtkToggleButton$MH,"glib_autoptr_cleanup_GtkToggleButton");
    }
    public static void glib_autoptr_cleanup_GtkToggleButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkToggleButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkToggleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.glib_listautoptr_cleanup_GtkToggleButton$MH,"glib_listautoptr_cleanup_GtkToggleButton");
    }
    public static void glib_listautoptr_cleanup_GtkToggleButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkToggleButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkToggleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.glib_slistautoptr_cleanup_GtkToggleButton$MH,"glib_slistautoptr_cleanup_GtkToggleButton");
    }
    public static void glib_slistautoptr_cleanup_GtkToggleButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkToggleButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkToggleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.glib_queueautoptr_cleanup_GtkToggleButton$MH,"glib_queueautoptr_cleanup_GtkToggleButton");
    }
    public static void glib_queueautoptr_cleanup_GtkToggleButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkToggleButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkToggleToolButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToggleToolButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToggleToolButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToggleToolButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkToggleToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.glib_autoptr_clear_GtkToggleToolButton$MH,"glib_autoptr_clear_GtkToggleToolButton");
    }
    public static void glib_autoptr_clear_GtkToggleToolButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkToggleToolButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkToggleToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.glib_autoptr_cleanup_GtkToggleToolButton$MH,"glib_autoptr_cleanup_GtkToggleToolButton");
    }
    public static void glib_autoptr_cleanup_GtkToggleToolButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkToggleToolButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkToggleToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.glib_listautoptr_cleanup_GtkToggleToolButton$MH,"glib_listautoptr_cleanup_GtkToggleToolButton");
    }
    public static void glib_listautoptr_cleanup_GtkToggleToolButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkToggleToolButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkToggleToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.glib_slistautoptr_cleanup_GtkToggleToolButton$MH,"glib_slistautoptr_cleanup_GtkToggleToolButton");
    }
    public static void glib_slistautoptr_cleanup_GtkToggleToolButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkToggleToolButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkToggleToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.glib_queueautoptr_cleanup_GtkToggleToolButton$MH,"glib_queueautoptr_cleanup_GtkToggleToolButton");
    }
    public static void glib_queueautoptr_cleanup_GtkToggleToolButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkToggleToolButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkToolButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.glib_autoptr_clear_GtkToolButton$MH,"glib_autoptr_clear_GtkToolButton");
    }
    public static void glib_autoptr_clear_GtkToolButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkToolButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.glib_autoptr_cleanup_GtkToolButton$MH,"glib_autoptr_cleanup_GtkToolButton");
    }
    public static void glib_autoptr_cleanup_GtkToolButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkToolButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.glib_listautoptr_cleanup_GtkToolButton$MH,"glib_listautoptr_cleanup_GtkToolButton");
    }
    public static void glib_listautoptr_cleanup_GtkToolButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkToolButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.glib_slistautoptr_cleanup_GtkToolButton$MH,"glib_slistautoptr_cleanup_GtkToolButton");
    }
    public static void glib_slistautoptr_cleanup_GtkToolButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkToolButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkToolButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.glib_queueautoptr_cleanup_GtkToolButton$MH,"glib_queueautoptr_cleanup_GtkToolButton");
    }
    public static void glib_queueautoptr_cleanup_GtkToolButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkToolButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkToolItem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolItem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolItem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolItem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.glib_autoptr_clear_GtkToolItem$MH,"glib_autoptr_clear_GtkToolItem");
    }
    public static void glib_autoptr_clear_GtkToolItem ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkToolItem$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.glib_autoptr_cleanup_GtkToolItem$MH,"glib_autoptr_cleanup_GtkToolItem");
    }
    public static void glib_autoptr_cleanup_GtkToolItem ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkToolItem$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.glib_listautoptr_cleanup_GtkToolItem$MH,"glib_listautoptr_cleanup_GtkToolItem");
    }
    public static void glib_listautoptr_cleanup_GtkToolItem ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkToolItem$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.glib_slistautoptr_cleanup_GtkToolItem$MH,"glib_slistautoptr_cleanup_GtkToolItem");
    }
    public static void glib_slistautoptr_cleanup_GtkToolItem ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkToolItem$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkToolItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.glib_queueautoptr_cleanup_GtkToolItem$MH,"glib_queueautoptr_cleanup_GtkToolItem");
    }
    public static void glib_queueautoptr_cleanup_GtkToolItem ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkToolItem$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkToolItemGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolItemGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolItemGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolItemGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkToolItemGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.glib_autoptr_clear_GtkToolItemGroup$MH,"glib_autoptr_clear_GtkToolItemGroup");
    }
    public static void glib_autoptr_clear_GtkToolItemGroup ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkToolItemGroup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkToolItemGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.glib_autoptr_cleanup_GtkToolItemGroup$MH,"glib_autoptr_cleanup_GtkToolItemGroup");
    }
    public static void glib_autoptr_cleanup_GtkToolItemGroup ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkToolItemGroup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkToolItemGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.glib_listautoptr_cleanup_GtkToolItemGroup$MH,"glib_listautoptr_cleanup_GtkToolItemGroup");
    }
    public static void glib_listautoptr_cleanup_GtkToolItemGroup ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkToolItemGroup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkToolItemGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.glib_slistautoptr_cleanup_GtkToolItemGroup$MH,"glib_slistautoptr_cleanup_GtkToolItemGroup");
    }
    public static void glib_slistautoptr_cleanup_GtkToolItemGroup ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkToolItemGroup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkToolItemGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.glib_queueautoptr_cleanup_GtkToolItemGroup$MH,"glib_queueautoptr_cleanup_GtkToolItemGroup");
    }
    public static void glib_queueautoptr_cleanup_GtkToolItemGroup ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkToolItemGroup$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkToolPalette_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolPalette_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolPalette_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolPalette_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkToolPalette$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.glib_autoptr_clear_GtkToolPalette$MH,"glib_autoptr_clear_GtkToolPalette");
    }
    public static void glib_autoptr_clear_GtkToolPalette ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkToolPalette$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkToolPalette$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.glib_autoptr_cleanup_GtkToolPalette$MH,"glib_autoptr_cleanup_GtkToolPalette");
    }
    public static void glib_autoptr_cleanup_GtkToolPalette ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkToolPalette$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkToolPalette$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.glib_listautoptr_cleanup_GtkToolPalette$MH,"glib_listautoptr_cleanup_GtkToolPalette");
    }
    public static void glib_listautoptr_cleanup_GtkToolPalette ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkToolPalette$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkToolPalette$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.glib_slistautoptr_cleanup_GtkToolPalette$MH,"glib_slistautoptr_cleanup_GtkToolPalette");
    }
    public static void glib_slistautoptr_cleanup_GtkToolPalette ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkToolPalette$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkToolPalette$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.glib_queueautoptr_cleanup_GtkToolPalette$MH,"glib_queueautoptr_cleanup_GtkToolPalette");
    }
    public static void glib_queueautoptr_cleanup_GtkToolPalette ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkToolPalette$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkToolShell_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolShell_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolShell_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolShell_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkToolShell$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.glib_autoptr_clear_GtkToolShell$MH,"glib_autoptr_clear_GtkToolShell");
    }
    public static void glib_autoptr_clear_GtkToolShell ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkToolShell$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkToolShell$MH() {
        return RuntimeHelper.requireNonNull(constants$2306.glib_autoptr_cleanup_GtkToolShell$MH,"glib_autoptr_cleanup_GtkToolShell");
    }
    public static void glib_autoptr_cleanup_GtkToolShell ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkToolShell$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkToolShell$MH() {
        return RuntimeHelper.requireNonNull(constants$2306.glib_listautoptr_cleanup_GtkToolShell$MH,"glib_listautoptr_cleanup_GtkToolShell");
    }
    public static void glib_listautoptr_cleanup_GtkToolShell ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkToolShell$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkToolShell$MH() {
        return RuntimeHelper.requireNonNull(constants$2306.glib_slistautoptr_cleanup_GtkToolShell$MH,"glib_slistautoptr_cleanup_GtkToolShell");
    }
    public static void glib_slistautoptr_cleanup_GtkToolShell ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkToolShell$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkToolShell$MH() {
        return RuntimeHelper.requireNonNull(constants$2306.glib_queueautoptr_cleanup_GtkToolShell$MH,"glib_queueautoptr_cleanup_GtkToolShell");
    }
    public static void glib_queueautoptr_cleanup_GtkToolShell ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkToolShell$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkToolbar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolbar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolbar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToolbar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkToolbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2306.glib_autoptr_clear_GtkToolbar$MH,"glib_autoptr_clear_GtkToolbar");
    }
    public static void glib_autoptr_clear_GtkToolbar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkToolbar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkToolbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2306.glib_autoptr_cleanup_GtkToolbar$MH,"glib_autoptr_cleanup_GtkToolbar");
    }
    public static void glib_autoptr_cleanup_GtkToolbar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkToolbar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkToolbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.glib_listautoptr_cleanup_GtkToolbar$MH,"glib_listautoptr_cleanup_GtkToolbar");
    }
    public static void glib_listautoptr_cleanup_GtkToolbar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkToolbar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkToolbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.glib_slistautoptr_cleanup_GtkToolbar$MH,"glib_slistautoptr_cleanup_GtkToolbar");
    }
    public static void glib_slistautoptr_cleanup_GtkToolbar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkToolbar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkToolbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.glib_queueautoptr_cleanup_GtkToolbar$MH,"glib_queueautoptr_cleanup_GtkToolbar");
    }
    public static void glib_queueautoptr_cleanup_GtkToolbar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkToolbar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTooltip_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTooltip_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTooltip_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTooltip_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.glib_autoptr_clear_GtkTooltip$MH,"glib_autoptr_clear_GtkTooltip");
    }
    public static void glib_autoptr_clear_GtkTooltip ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTooltip$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.glib_autoptr_cleanup_GtkTooltip$MH,"glib_autoptr_cleanup_GtkTooltip");
    }
    public static void glib_autoptr_cleanup_GtkTooltip ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTooltip$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.glib_listautoptr_cleanup_GtkTooltip$MH,"glib_listautoptr_cleanup_GtkTooltip");
    }
    public static void glib_listautoptr_cleanup_GtkTooltip ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTooltip$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$2308.glib_slistautoptr_cleanup_GtkTooltip$MH,"glib_slistautoptr_cleanup_GtkTooltip");
    }
    public static void glib_slistautoptr_cleanup_GtkTooltip ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTooltip$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$2308.glib_queueautoptr_cleanup_GtkTooltip$MH,"glib_queueautoptr_cleanup_GtkTooltip");
    }
    public static void glib_queueautoptr_cleanup_GtkTooltip ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTooltip$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeDragDest_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeDragDest_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeDragDest_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeDragDest_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeDragDest$MH() {
        return RuntimeHelper.requireNonNull(constants$2308.glib_autoptr_clear_GtkTreeDragDest$MH,"glib_autoptr_clear_GtkTreeDragDest");
    }
    public static void glib_autoptr_clear_GtkTreeDragDest ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeDragDest$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeDragDest$MH() {
        return RuntimeHelper.requireNonNull(constants$2308.glib_autoptr_cleanup_GtkTreeDragDest$MH,"glib_autoptr_cleanup_GtkTreeDragDest");
    }
    public static void glib_autoptr_cleanup_GtkTreeDragDest ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeDragDest$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeDragDest$MH() {
        return RuntimeHelper.requireNonNull(constants$2308.glib_listautoptr_cleanup_GtkTreeDragDest$MH,"glib_listautoptr_cleanup_GtkTreeDragDest");
    }
    public static void glib_listautoptr_cleanup_GtkTreeDragDest ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeDragDest$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeDragDest$MH() {
        return RuntimeHelper.requireNonNull(constants$2308.glib_slistautoptr_cleanup_GtkTreeDragDest$MH,"glib_slistautoptr_cleanup_GtkTreeDragDest");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeDragDest ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeDragDest$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeDragDest$MH() {
        return RuntimeHelper.requireNonNull(constants$2309.glib_queueautoptr_cleanup_GtkTreeDragDest$MH,"glib_queueautoptr_cleanup_GtkTreeDragDest");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeDragDest ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeDragDest$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeDragSource_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeDragSource_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeDragSource_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeDragSource_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeDragSource$MH() {
        return RuntimeHelper.requireNonNull(constants$2309.glib_autoptr_clear_GtkTreeDragSource$MH,"glib_autoptr_clear_GtkTreeDragSource");
    }
    public static void glib_autoptr_clear_GtkTreeDragSource ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeDragSource$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeDragSource$MH() {
        return RuntimeHelper.requireNonNull(constants$2309.glib_autoptr_cleanup_GtkTreeDragSource$MH,"glib_autoptr_cleanup_GtkTreeDragSource");
    }
    public static void glib_autoptr_cleanup_GtkTreeDragSource ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeDragSource$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeDragSource$MH() {
        return RuntimeHelper.requireNonNull(constants$2309.glib_listautoptr_cleanup_GtkTreeDragSource$MH,"glib_listautoptr_cleanup_GtkTreeDragSource");
    }
    public static void glib_listautoptr_cleanup_GtkTreeDragSource ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeDragSource$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeDragSource$MH() {
        return RuntimeHelper.requireNonNull(constants$2309.glib_slistautoptr_cleanup_GtkTreeDragSource$MH,"glib_slistautoptr_cleanup_GtkTreeDragSource");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeDragSource ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeDragSource$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeDragSource$MH() {
        return RuntimeHelper.requireNonNull(constants$2309.glib_queueautoptr_cleanup_GtkTreeDragSource$MH,"glib_queueautoptr_cleanup_GtkTreeDragSource");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeDragSource ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeDragSource$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2310.glib_autoptr_clear_GtkTreeModel$MH,"glib_autoptr_clear_GtkTreeModel");
    }
    public static void glib_autoptr_clear_GtkTreeModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2310.glib_autoptr_cleanup_GtkTreeModel$MH,"glib_autoptr_cleanup_GtkTreeModel");
    }
    public static void glib_autoptr_cleanup_GtkTreeModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2310.glib_listautoptr_cleanup_GtkTreeModel$MH,"glib_listautoptr_cleanup_GtkTreeModel");
    }
    public static void glib_listautoptr_cleanup_GtkTreeModel ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2310.glib_slistautoptr_cleanup_GtkTreeModel$MH,"glib_slistautoptr_cleanup_GtkTreeModel");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeModel ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2310.glib_queueautoptr_cleanup_GtkTreeModel$MH,"glib_queueautoptr_cleanup_GtkTreeModel");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeModel ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeModel$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeModelFilter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModelFilter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModelFilter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModelFilter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeModelFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2310.glib_autoptr_clear_GtkTreeModelFilter$MH,"glib_autoptr_clear_GtkTreeModelFilter");
    }
    public static void glib_autoptr_clear_GtkTreeModelFilter ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeModelFilter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeModelFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2311.glib_autoptr_cleanup_GtkTreeModelFilter$MH,"glib_autoptr_cleanup_GtkTreeModelFilter");
    }
    public static void glib_autoptr_cleanup_GtkTreeModelFilter ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeModelFilter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeModelFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2311.glib_listautoptr_cleanup_GtkTreeModelFilter$MH,"glib_listautoptr_cleanup_GtkTreeModelFilter");
    }
    public static void glib_listautoptr_cleanup_GtkTreeModelFilter ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeModelFilter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeModelFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2311.glib_slistautoptr_cleanup_GtkTreeModelFilter$MH,"glib_slistautoptr_cleanup_GtkTreeModelFilter");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeModelFilter ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeModelFilter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeModelFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2311.glib_queueautoptr_cleanup_GtkTreeModelFilter$MH,"glib_queueautoptr_cleanup_GtkTreeModelFilter");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeModelFilter ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeModelFilter$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeModelSort_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModelSort_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModelSort_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModelSort_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeModelSort$MH() {
        return RuntimeHelper.requireNonNull(constants$2311.glib_autoptr_clear_GtkTreeModelSort$MH,"glib_autoptr_clear_GtkTreeModelSort");
    }
    public static void glib_autoptr_clear_GtkTreeModelSort ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeModelSort$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeModelSort$MH() {
        return RuntimeHelper.requireNonNull(constants$2311.glib_autoptr_cleanup_GtkTreeModelSort$MH,"glib_autoptr_cleanup_GtkTreeModelSort");
    }
    public static void glib_autoptr_cleanup_GtkTreeModelSort ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeModelSort$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeModelSort$MH() {
        return RuntimeHelper.requireNonNull(constants$2312.glib_listautoptr_cleanup_GtkTreeModelSort$MH,"glib_listautoptr_cleanup_GtkTreeModelSort");
    }
    public static void glib_listautoptr_cleanup_GtkTreeModelSort ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeModelSort$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeModelSort$MH() {
        return RuntimeHelper.requireNonNull(constants$2312.glib_slistautoptr_cleanup_GtkTreeModelSort$MH,"glib_slistautoptr_cleanup_GtkTreeModelSort");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeModelSort ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeModelSort$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeModelSort$MH() {
        return RuntimeHelper.requireNonNull(constants$2312.glib_queueautoptr_cleanup_GtkTreeModelSort$MH,"glib_queueautoptr_cleanup_GtkTreeModelSort");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeModelSort ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeModelSort$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeSelection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeSelection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeSelection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeSelection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2312.glib_autoptr_clear_GtkTreeSelection$MH,"glib_autoptr_clear_GtkTreeSelection");
    }
    public static void glib_autoptr_clear_GtkTreeSelection ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeSelection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2312.glib_autoptr_cleanup_GtkTreeSelection$MH,"glib_autoptr_cleanup_GtkTreeSelection");
    }
    public static void glib_autoptr_cleanup_GtkTreeSelection ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeSelection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2312.glib_listautoptr_cleanup_GtkTreeSelection$MH,"glib_listautoptr_cleanup_GtkTreeSelection");
    }
    public static void glib_listautoptr_cleanup_GtkTreeSelection ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeSelection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2313.glib_slistautoptr_cleanup_GtkTreeSelection$MH,"glib_slistautoptr_cleanup_GtkTreeSelection");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeSelection ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeSelection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2313.glib_queueautoptr_cleanup_GtkTreeSelection$MH,"glib_queueautoptr_cleanup_GtkTreeSelection");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeSelection ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeSelection$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeSortable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeSortable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeSortable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeSortable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeSortable$MH() {
        return RuntimeHelper.requireNonNull(constants$2313.glib_autoptr_clear_GtkTreeSortable$MH,"glib_autoptr_clear_GtkTreeSortable");
    }
    public static void glib_autoptr_clear_GtkTreeSortable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeSortable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeSortable$MH() {
        return RuntimeHelper.requireNonNull(constants$2313.glib_autoptr_cleanup_GtkTreeSortable$MH,"glib_autoptr_cleanup_GtkTreeSortable");
    }
    public static void glib_autoptr_cleanup_GtkTreeSortable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeSortable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeSortable$MH() {
        return RuntimeHelper.requireNonNull(constants$2313.glib_listautoptr_cleanup_GtkTreeSortable$MH,"glib_listautoptr_cleanup_GtkTreeSortable");
    }
    public static void glib_listautoptr_cleanup_GtkTreeSortable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeSortable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeSortable$MH() {
        return RuntimeHelper.requireNonNull(constants$2313.glib_slistautoptr_cleanup_GtkTreeSortable$MH,"glib_slistautoptr_cleanup_GtkTreeSortable");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeSortable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeSortable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeSortable$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.glib_queueautoptr_cleanup_GtkTreeSortable$MH,"glib_queueautoptr_cleanup_GtkTreeSortable");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeSortable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeSortable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeStore_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeStore_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeStore_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeStore_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.glib_autoptr_clear_GtkTreeStore$MH,"glib_autoptr_clear_GtkTreeStore");
    }
    public static void glib_autoptr_clear_GtkTreeStore ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeStore$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.glib_autoptr_cleanup_GtkTreeStore$MH,"glib_autoptr_cleanup_GtkTreeStore");
    }
    public static void glib_autoptr_cleanup_GtkTreeStore ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeStore$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.glib_listautoptr_cleanup_GtkTreeStore$MH,"glib_listautoptr_cleanup_GtkTreeStore");
    }
    public static void glib_listautoptr_cleanup_GtkTreeStore ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeStore$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.glib_slistautoptr_cleanup_GtkTreeStore$MH,"glib_slistautoptr_cleanup_GtkTreeStore");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeStore ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeStore$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.glib_queueautoptr_cleanup_GtkTreeStore$MH,"glib_queueautoptr_cleanup_GtkTreeStore");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeStore ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeStore$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeView_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeView_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeView_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeView_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeView$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.glib_autoptr_clear_GtkTreeView$MH,"glib_autoptr_clear_GtkTreeView");
    }
    public static void glib_autoptr_clear_GtkTreeView ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeView$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeView$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.glib_autoptr_cleanup_GtkTreeView$MH,"glib_autoptr_cleanup_GtkTreeView");
    }
    public static void glib_autoptr_cleanup_GtkTreeView ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeView$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeView$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.glib_listautoptr_cleanup_GtkTreeView$MH,"glib_listautoptr_cleanup_GtkTreeView");
    }
    public static void glib_listautoptr_cleanup_GtkTreeView ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeView$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeView$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.glib_slistautoptr_cleanup_GtkTreeView$MH,"glib_slistautoptr_cleanup_GtkTreeView");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeView ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeView$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeView$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.glib_queueautoptr_cleanup_GtkTreeView$MH,"glib_queueautoptr_cleanup_GtkTreeView");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeView ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeView$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeViewColumn_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeViewColumn_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeViewColumn_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeViewColumn_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeViewColumn$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.glib_autoptr_clear_GtkTreeViewColumn$MH,"glib_autoptr_clear_GtkTreeViewColumn");
    }
    public static void glib_autoptr_clear_GtkTreeViewColumn ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeViewColumn$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeViewColumn$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.glib_autoptr_cleanup_GtkTreeViewColumn$MH,"glib_autoptr_cleanup_GtkTreeViewColumn");
    }
    public static void glib_autoptr_cleanup_GtkTreeViewColumn ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeViewColumn$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeViewColumn$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.glib_listautoptr_cleanup_GtkTreeViewColumn$MH,"glib_listautoptr_cleanup_GtkTreeViewColumn");
    }
    public static void glib_listautoptr_cleanup_GtkTreeViewColumn ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeViewColumn$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeViewColumn$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.glib_slistautoptr_cleanup_GtkTreeViewColumn$MH,"glib_slistautoptr_cleanup_GtkTreeViewColumn");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeViewColumn ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeViewColumn$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeViewColumn$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.glib_queueautoptr_cleanup_GtkTreeViewColumn$MH,"glib_queueautoptr_cleanup_GtkTreeViewColumn");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeViewColumn ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeViewColumn$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkViewport_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkViewport_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkViewport_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkViewport_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkViewport$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.glib_autoptr_clear_GtkViewport$MH,"glib_autoptr_clear_GtkViewport");
    }
    public static void glib_autoptr_clear_GtkViewport ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkViewport$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkViewport$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.glib_autoptr_cleanup_GtkViewport$MH,"glib_autoptr_cleanup_GtkViewport");
    }
    public static void glib_autoptr_cleanup_GtkViewport ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkViewport$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkViewport$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.glib_listautoptr_cleanup_GtkViewport$MH,"glib_listautoptr_cleanup_GtkViewport");
    }
    public static void glib_listautoptr_cleanup_GtkViewport ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkViewport$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkViewport$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.glib_slistautoptr_cleanup_GtkViewport$MH,"glib_slistautoptr_cleanup_GtkViewport");
    }
    public static void glib_slistautoptr_cleanup_GtkViewport ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkViewport$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkViewport$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.glib_queueautoptr_cleanup_GtkViewport$MH,"glib_queueautoptr_cleanup_GtkViewport");
    }
    public static void glib_queueautoptr_cleanup_GtkViewport ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkViewport$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkVolumeButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkVolumeButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkVolumeButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkVolumeButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkVolumeButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.glib_autoptr_clear_GtkVolumeButton$MH,"glib_autoptr_clear_GtkVolumeButton");
    }
    public static void glib_autoptr_clear_GtkVolumeButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkVolumeButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkVolumeButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.glib_autoptr_cleanup_GtkVolumeButton$MH,"glib_autoptr_cleanup_GtkVolumeButton");
    }
    public static void glib_autoptr_cleanup_GtkVolumeButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkVolumeButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkVolumeButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.glib_listautoptr_cleanup_GtkVolumeButton$MH,"glib_listautoptr_cleanup_GtkVolumeButton");
    }
    public static void glib_listautoptr_cleanup_GtkVolumeButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkVolumeButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkVolumeButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.glib_slistautoptr_cleanup_GtkVolumeButton$MH,"glib_slistautoptr_cleanup_GtkVolumeButton");
    }
    public static void glib_slistautoptr_cleanup_GtkVolumeButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkVolumeButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkVolumeButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.glib_queueautoptr_cleanup_GtkVolumeButton$MH,"glib_queueautoptr_cleanup_GtkVolumeButton");
    }
    public static void glib_queueautoptr_cleanup_GtkVolumeButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkVolumeButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPaperSize_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPaperSize_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPaperSize_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPaperSize_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPaperSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.glib_autoptr_clear_GtkPaperSize$MH,"glib_autoptr_clear_GtkPaperSize");
    }
    public static void glib_autoptr_clear_GtkPaperSize ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPaperSize$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPaperSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.glib_autoptr_cleanup_GtkPaperSize$MH,"glib_autoptr_cleanup_GtkPaperSize");
    }
    public static void glib_autoptr_cleanup_GtkPaperSize ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPaperSize$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPaperSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.glib_listautoptr_cleanup_GtkPaperSize$MH,"glib_listautoptr_cleanup_GtkPaperSize");
    }
    public static void glib_listautoptr_cleanup_GtkPaperSize ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPaperSize$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPaperSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.glib_slistautoptr_cleanup_GtkPaperSize$MH,"glib_slistautoptr_cleanup_GtkPaperSize");
    }
    public static void glib_slistautoptr_cleanup_GtkPaperSize ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPaperSize$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPaperSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2319.glib_queueautoptr_cleanup_GtkPaperSize$MH,"glib_queueautoptr_cleanup_GtkPaperSize");
    }
    public static void glib_queueautoptr_cleanup_GtkPaperSize ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPaperSize$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRecentInfo_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentInfo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentInfo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentInfo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRecentInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2319.glib_autoptr_clear_GtkRecentInfo$MH,"glib_autoptr_clear_GtkRecentInfo");
    }
    public static void glib_autoptr_clear_GtkRecentInfo ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkRecentInfo$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRecentInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2319.glib_autoptr_cleanup_GtkRecentInfo$MH,"glib_autoptr_cleanup_GtkRecentInfo");
    }
    public static void glib_autoptr_cleanup_GtkRecentInfo ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkRecentInfo$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRecentInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2319.glib_listautoptr_cleanup_GtkRecentInfo$MH,"glib_listautoptr_cleanup_GtkRecentInfo");
    }
    public static void glib_listautoptr_cleanup_GtkRecentInfo ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkRecentInfo$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRecentInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2319.glib_slistautoptr_cleanup_GtkRecentInfo$MH,"glib_slistautoptr_cleanup_GtkRecentInfo");
    }
    public static void glib_slistautoptr_cleanup_GtkRecentInfo ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkRecentInfo$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRecentInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2319.glib_queueautoptr_cleanup_GtkRecentInfo$MH,"glib_queueautoptr_cleanup_GtkRecentInfo");
    }
    public static void glib_queueautoptr_cleanup_GtkRecentInfo ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkRecentInfo$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSelectionData_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSelectionData_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSelectionData_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSelectionData_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSelectionData$MH() {
        return RuntimeHelper.requireNonNull(constants$2320.glib_autoptr_clear_GtkSelectionData$MH,"glib_autoptr_clear_GtkSelectionData");
    }
    public static void glib_autoptr_clear_GtkSelectionData ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSelectionData$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSelectionData$MH() {
        return RuntimeHelper.requireNonNull(constants$2320.glib_autoptr_cleanup_GtkSelectionData$MH,"glib_autoptr_cleanup_GtkSelectionData");
    }
    public static void glib_autoptr_cleanup_GtkSelectionData ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSelectionData$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSelectionData$MH() {
        return RuntimeHelper.requireNonNull(constants$2320.glib_listautoptr_cleanup_GtkSelectionData$MH,"glib_listautoptr_cleanup_GtkSelectionData");
    }
    public static void glib_listautoptr_cleanup_GtkSelectionData ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSelectionData$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSelectionData$MH() {
        return RuntimeHelper.requireNonNull(constants$2320.glib_slistautoptr_cleanup_GtkSelectionData$MH,"glib_slistautoptr_cleanup_GtkSelectionData");
    }
    public static void glib_slistautoptr_cleanup_GtkSelectionData ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSelectionData$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSelectionData$MH() {
        return RuntimeHelper.requireNonNull(constants$2320.glib_queueautoptr_cleanup_GtkSelectionData$MH,"glib_queueautoptr_cleanup_GtkSelectionData");
    }
    public static void glib_queueautoptr_cleanup_GtkSelectionData ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSelectionData$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTargetList_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTargetList_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTargetList_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTargetList_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTargetList$MH() {
        return RuntimeHelper.requireNonNull(constants$2320.glib_autoptr_clear_GtkTargetList$MH,"glib_autoptr_clear_GtkTargetList");
    }
    public static void glib_autoptr_clear_GtkTargetList ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTargetList$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTargetList$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.glib_autoptr_cleanup_GtkTargetList$MH,"glib_autoptr_cleanup_GtkTargetList");
    }
    public static void glib_autoptr_cleanup_GtkTargetList ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTargetList$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTargetList$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.glib_listautoptr_cleanup_GtkTargetList$MH,"glib_listautoptr_cleanup_GtkTargetList");
    }
    public static void glib_listautoptr_cleanup_GtkTargetList ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTargetList$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTargetList$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.glib_slistautoptr_cleanup_GtkTargetList$MH,"glib_slistautoptr_cleanup_GtkTargetList");
    }
    public static void glib_slistautoptr_cleanup_GtkTargetList ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTargetList$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTargetList$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.glib_queueautoptr_cleanup_GtkTargetList$MH,"glib_queueautoptr_cleanup_GtkTargetList");
    }
    public static void glib_queueautoptr_cleanup_GtkTargetList ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTargetList$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextAttributes_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextAttributes_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextAttributes_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextAttributes_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextAttributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.glib_autoptr_clear_GtkTextAttributes$MH,"glib_autoptr_clear_GtkTextAttributes");
    }
    public static void glib_autoptr_clear_GtkTextAttributes ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTextAttributes$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextAttributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.glib_autoptr_cleanup_GtkTextAttributes$MH,"glib_autoptr_cleanup_GtkTextAttributes");
    }
    public static void glib_autoptr_cleanup_GtkTextAttributes ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTextAttributes$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextAttributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.glib_listautoptr_cleanup_GtkTextAttributes$MH,"glib_listautoptr_cleanup_GtkTextAttributes");
    }
    public static void glib_listautoptr_cleanup_GtkTextAttributes ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTextAttributes$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextAttributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.glib_slistautoptr_cleanup_GtkTextAttributes$MH,"glib_slistautoptr_cleanup_GtkTextAttributes");
    }
    public static void glib_slistautoptr_cleanup_GtkTextAttributes ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTextAttributes$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextAttributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.glib_queueautoptr_cleanup_GtkTextAttributes$MH,"glib_queueautoptr_cleanup_GtkTextAttributes");
    }
    public static void glib_queueautoptr_cleanup_GtkTextAttributes ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTextAttributes$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.glib_autoptr_clear_GtkTextIter$MH,"glib_autoptr_clear_GtkTextIter");
    }
    public static void glib_autoptr_clear_GtkTextIter ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTextIter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.glib_autoptr_cleanup_GtkTextIter$MH,"glib_autoptr_cleanup_GtkTextIter");
    }
    public static void glib_autoptr_cleanup_GtkTextIter ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTextIter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.glib_listautoptr_cleanup_GtkTextIter$MH,"glib_listautoptr_cleanup_GtkTextIter");
    }
    public static void glib_listautoptr_cleanup_GtkTextIter ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTextIter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2323.glib_slistautoptr_cleanup_GtkTextIter$MH,"glib_slistautoptr_cleanup_GtkTextIter");
    }
    public static void glib_slistautoptr_cleanup_GtkTextIter ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTextIter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2323.glib_queueautoptr_cleanup_GtkTextIter$MH,"glib_queueautoptr_cleanup_GtkTextIter");
    }
    public static void glib_queueautoptr_cleanup_GtkTextIter ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTextIter$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2323.glib_autoptr_clear_GtkTreeIter$MH,"glib_autoptr_clear_GtkTreeIter");
    }
    public static void glib_autoptr_clear_GtkTreeIter ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeIter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2323.glib_autoptr_cleanup_GtkTreeIter$MH,"glib_autoptr_cleanup_GtkTreeIter");
    }
    public static void glib_autoptr_cleanup_GtkTreeIter ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeIter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2323.glib_listautoptr_cleanup_GtkTreeIter$MH,"glib_listautoptr_cleanup_GtkTreeIter");
    }
    public static void glib_listautoptr_cleanup_GtkTreeIter ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeIter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2323.glib_slistautoptr_cleanup_GtkTreeIter$MH,"glib_slistautoptr_cleanup_GtkTreeIter");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeIter ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeIter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2324.glib_queueautoptr_cleanup_GtkTreeIter$MH,"glib_queueautoptr_cleanup_GtkTreeIter");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeIter ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeIter$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreePath_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreePath_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreePath_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreePath_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreePath$MH() {
        return RuntimeHelper.requireNonNull(constants$2324.glib_autoptr_clear_GtkTreePath$MH,"glib_autoptr_clear_GtkTreePath");
    }
    public static void glib_autoptr_clear_GtkTreePath ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreePath$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreePath$MH() {
        return RuntimeHelper.requireNonNull(constants$2324.glib_autoptr_cleanup_GtkTreePath$MH,"glib_autoptr_cleanup_GtkTreePath");
    }
    public static void glib_autoptr_cleanup_GtkTreePath ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreePath$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreePath$MH() {
        return RuntimeHelper.requireNonNull(constants$2324.glib_listautoptr_cleanup_GtkTreePath$MH,"glib_listautoptr_cleanup_GtkTreePath");
    }
    public static void glib_listautoptr_cleanup_GtkTreePath ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreePath$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreePath$MH() {
        return RuntimeHelper.requireNonNull(constants$2324.glib_slistautoptr_cleanup_GtkTreePath$MH,"glib_slistautoptr_cleanup_GtkTreePath");
    }
    public static void glib_slistautoptr_cleanup_GtkTreePath ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreePath$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreePath$MH() {
        return RuntimeHelper.requireNonNull(constants$2324.glib_queueautoptr_cleanup_GtkTreePath$MH,"glib_queueautoptr_cleanup_GtkTreePath");
    }
    public static void glib_queueautoptr_cleanup_GtkTreePath ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreePath$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeRowReference_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeRowReference_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeRowReference_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeRowReference_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeRowReference$MH() {
        return RuntimeHelper.requireNonNull(constants$2325.glib_autoptr_clear_GtkTreeRowReference$MH,"glib_autoptr_clear_GtkTreeRowReference");
    }
    public static void glib_autoptr_clear_GtkTreeRowReference ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeRowReference$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeRowReference$MH() {
        return RuntimeHelper.requireNonNull(constants$2325.glib_autoptr_cleanup_GtkTreeRowReference$MH,"glib_autoptr_cleanup_GtkTreeRowReference");
    }
    public static void glib_autoptr_cleanup_GtkTreeRowReference ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeRowReference$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeRowReference$MH() {
        return RuntimeHelper.requireNonNull(constants$2325.glib_listautoptr_cleanup_GtkTreeRowReference$MH,"glib_listautoptr_cleanup_GtkTreeRowReference");
    }
    public static void glib_listautoptr_cleanup_GtkTreeRowReference ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeRowReference$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeRowReference$MH() {
        return RuntimeHelper.requireNonNull(constants$2325.glib_slistautoptr_cleanup_GtkTreeRowReference$MH,"glib_slistautoptr_cleanup_GtkTreeRowReference");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeRowReference ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeRowReference$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeRowReference$MH() {
        return RuntimeHelper.requireNonNull(constants$2325.glib_queueautoptr_cleanup_GtkTreeRowReference$MH,"glib_queueautoptr_cleanup_GtkTreeRowReference");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeRowReference ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeRowReference$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkWidgetPath_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWidgetPath_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWidgetPath_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWidgetPath_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkWidgetPath$MH() {
        return RuntimeHelper.requireNonNull(constants$2325.glib_autoptr_clear_GtkWidgetPath$MH,"glib_autoptr_clear_GtkWidgetPath");
    }
    public static void glib_autoptr_clear_GtkWidgetPath ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkWidgetPath$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkWidgetPath$MH() {
        return RuntimeHelper.requireNonNull(constants$2326.glib_autoptr_cleanup_GtkWidgetPath$MH,"glib_autoptr_cleanup_GtkWidgetPath");
    }
    public static void glib_autoptr_cleanup_GtkWidgetPath ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkWidgetPath$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkWidgetPath$MH() {
        return RuntimeHelper.requireNonNull(constants$2326.glib_listautoptr_cleanup_GtkWidgetPath$MH,"glib_listautoptr_cleanup_GtkWidgetPath");
    }
    public static void glib_listautoptr_cleanup_GtkWidgetPath ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkWidgetPath$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkWidgetPath$MH() {
        return RuntimeHelper.requireNonNull(constants$2326.glib_slistautoptr_cleanup_GtkWidgetPath$MH,"glib_slistautoptr_cleanup_GtkWidgetPath");
    }
    public static void glib_slistautoptr_cleanup_GtkWidgetPath ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkWidgetPath$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkWidgetPath$MH() {
        return RuntimeHelper.requireNonNull(constants$2326.glib_queueautoptr_cleanup_GtkWidgetPath$MH,"glib_queueautoptr_cleanup_GtkWidgetPath");
    }
    public static void glib_queueautoptr_cleanup_GtkWidgetPath ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkWidgetPath$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int APP_INDICATOR_CATEGORY_APPLICATION_STATUS() {
        return (int)0L;
    }
    public static int APP_INDICATOR_CATEGORY_COMMUNICATIONS() {
        return (int)1L;
    }
    public static int APP_INDICATOR_CATEGORY_SYSTEM_SERVICES() {
        return (int)2L;
    }
    public static int APP_INDICATOR_CATEGORY_HARDWARE() {
        return (int)3L;
    }
    public static int APP_INDICATOR_CATEGORY_OTHER() {
        return (int)4L;
    }
    public static int APP_INDICATOR_STATUS_PASSIVE() {
        return (int)0L;
    }
    public static int APP_INDICATOR_STATUS_ACTIVE() {
        return (int)1L;
    }
    public static int APP_INDICATOR_STATUS_ATTENTION() {
        return (int)2L;
    }
    public static MethodHandle app_indicator_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2326.app_indicator_get_type$MH,"app_indicator_get_type");
    }
    public static long app_indicator_get_type () {
        var mh$ = app_indicator_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2326.app_indicator_new$MH,"app_indicator_new");
    }
    public static MemoryAddress app_indicator_new ( Addressable id,  Addressable icon_name,  int category) {
        var mh$ = app_indicator_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(id, icon_name, category);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_new_with_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2327.app_indicator_new_with_path$MH,"app_indicator_new_with_path");
    }
    public static MemoryAddress app_indicator_new_with_path ( Addressable id,  Addressable icon_name,  int category,  Addressable icon_theme_path) {
        var mh$ = app_indicator_new_with_path$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(id, icon_name, category, icon_theme_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_set_status$MH() {
        return RuntimeHelper.requireNonNull(constants$2327.app_indicator_set_status$MH,"app_indicator_set_status");
    }
    public static void app_indicator_set_status ( Addressable self,  int status) {
        var mh$ = app_indicator_set_status$MH();
        try {
            mh$.invokeExact(self, status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_set_attention_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2327.app_indicator_set_attention_icon$MH,"app_indicator_set_attention_icon");
    }
    public static void app_indicator_set_attention_icon ( Addressable self,  Addressable icon_name) {
        var mh$ = app_indicator_set_attention_icon$MH();
        try {
            mh$.invokeExact(self, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_set_attention_icon_full$MH() {
        return RuntimeHelper.requireNonNull(constants$2327.app_indicator_set_attention_icon_full$MH,"app_indicator_set_attention_icon_full");
    }
    public static void app_indicator_set_attention_icon_full ( Addressable self,  Addressable icon_name,  Addressable icon_desc) {
        var mh$ = app_indicator_set_attention_icon_full$MH();
        try {
            mh$.invokeExact(self, icon_name, icon_desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_set_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$2327.app_indicator_set_menu$MH,"app_indicator_set_menu");
    }
    public static void app_indicator_set_menu ( Addressable self,  Addressable menu) {
        var mh$ = app_indicator_set_menu$MH();
        try {
            mh$.invokeExact(self, menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_set_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2327.app_indicator_set_icon$MH,"app_indicator_set_icon");
    }
    public static void app_indicator_set_icon ( Addressable self,  Addressable icon_name) {
        var mh$ = app_indicator_set_icon$MH();
        try {
            mh$.invokeExact(self, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_set_icon_full$MH() {
        return RuntimeHelper.requireNonNull(constants$2328.app_indicator_set_icon_full$MH,"app_indicator_set_icon_full");
    }
    public static void app_indicator_set_icon_full ( Addressable self,  Addressable icon_name,  Addressable icon_desc) {
        var mh$ = app_indicator_set_icon_full$MH();
        try {
            mh$.invokeExact(self, icon_name, icon_desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2328.app_indicator_set_label$MH,"app_indicator_set_label");
    }
    public static void app_indicator_set_label ( Addressable self,  Addressable label,  Addressable guide) {
        var mh$ = app_indicator_set_label$MH();
        try {
            mh$.invokeExact(self, label, guide);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_set_icon_theme_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2328.app_indicator_set_icon_theme_path$MH,"app_indicator_set_icon_theme_path");
    }
    public static void app_indicator_set_icon_theme_path ( Addressable self,  Addressable icon_theme_path) {
        var mh$ = app_indicator_set_icon_theme_path$MH();
        try {
            mh$.invokeExact(self, icon_theme_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_set_ordering_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2328.app_indicator_set_ordering_index$MH,"app_indicator_set_ordering_index");
    }
    public static void app_indicator_set_ordering_index ( Addressable self,  int ordering_index) {
        var mh$ = app_indicator_set_ordering_index$MH();
        try {
            mh$.invokeExact(self, ordering_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_set_secondary_activate_target$MH() {
        return RuntimeHelper.requireNonNull(constants$2328.app_indicator_set_secondary_activate_target$MH,"app_indicator_set_secondary_activate_target");
    }
    public static void app_indicator_set_secondary_activate_target ( Addressable self,  Addressable menuitem) {
        var mh$ = app_indicator_set_secondary_activate_target$MH();
        try {
            mh$.invokeExact(self, menuitem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2328.app_indicator_set_title$MH,"app_indicator_set_title");
    }
    public static void app_indicator_set_title ( Addressable self,  Addressable title) {
        var mh$ = app_indicator_set_title$MH();
        try {
            mh$.invokeExact(self, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_id$MH() {
        return RuntimeHelper.requireNonNull(constants$2329.app_indicator_get_id$MH,"app_indicator_get_id");
    }
    public static MemoryAddress app_indicator_get_id ( Addressable self) {
        var mh$ = app_indicator_get_id$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_category$MH() {
        return RuntimeHelper.requireNonNull(constants$2329.app_indicator_get_category$MH,"app_indicator_get_category");
    }
    public static int app_indicator_get_category ( Addressable self) {
        var mh$ = app_indicator_get_category$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_status$MH() {
        return RuntimeHelper.requireNonNull(constants$2329.app_indicator_get_status$MH,"app_indicator_get_status");
    }
    public static int app_indicator_get_status ( Addressable self) {
        var mh$ = app_indicator_get_status$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2329.app_indicator_get_icon$MH,"app_indicator_get_icon");
    }
    public static MemoryAddress app_indicator_get_icon ( Addressable self) {
        var mh$ = app_indicator_get_icon$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_icon_desc$MH() {
        return RuntimeHelper.requireNonNull(constants$2329.app_indicator_get_icon_desc$MH,"app_indicator_get_icon_desc");
    }
    public static MemoryAddress app_indicator_get_icon_desc ( Addressable self) {
        var mh$ = app_indicator_get_icon_desc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_icon_theme_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2329.app_indicator_get_icon_theme_path$MH,"app_indicator_get_icon_theme_path");
    }
    public static MemoryAddress app_indicator_get_icon_theme_path ( Addressable self) {
        var mh$ = app_indicator_get_icon_theme_path$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_attention_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2330.app_indicator_get_attention_icon$MH,"app_indicator_get_attention_icon");
    }
    public static MemoryAddress app_indicator_get_attention_icon ( Addressable self) {
        var mh$ = app_indicator_get_attention_icon$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_attention_icon_desc$MH() {
        return RuntimeHelper.requireNonNull(constants$2330.app_indicator_get_attention_icon_desc$MH,"app_indicator_get_attention_icon_desc");
    }
    public static MemoryAddress app_indicator_get_attention_icon_desc ( Addressable self) {
        var mh$ = app_indicator_get_attention_icon_desc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2330.app_indicator_get_title$MH,"app_indicator_get_title");
    }
    public static MemoryAddress app_indicator_get_title ( Addressable self) {
        var mh$ = app_indicator_get_title$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$2330.app_indicator_get_menu$MH,"app_indicator_get_menu");
    }
    public static MemoryAddress app_indicator_get_menu ( Addressable self) {
        var mh$ = app_indicator_get_menu$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2330.app_indicator_get_label$MH,"app_indicator_get_label");
    }
    public static MemoryAddress app_indicator_get_label ( Addressable self) {
        var mh$ = app_indicator_get_label$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_label_guide$MH() {
        return RuntimeHelper.requireNonNull(constants$2330.app_indicator_get_label_guide$MH,"app_indicator_get_label_guide");
    }
    public static MemoryAddress app_indicator_get_label_guide ( Addressable self) {
        var mh$ = app_indicator_get_label_guide$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_ordering_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2331.app_indicator_get_ordering_index$MH,"app_indicator_get_ordering_index");
    }
    public static int app_indicator_get_ordering_index ( Addressable self) {
        var mh$ = app_indicator_get_ordering_index$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_get_secondary_activate_target$MH() {
        return RuntimeHelper.requireNonNull(constants$2331.app_indicator_get_secondary_activate_target$MH,"app_indicator_get_secondary_activate_target");
    }
    public static MemoryAddress app_indicator_get_secondary_activate_target ( Addressable self) {
        var mh$ = app_indicator_get_secondary_activate_target$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle app_indicator_build_menu_from_desktop$MH() {
        return RuntimeHelper.requireNonNull(constants$2331.app_indicator_build_menu_from_desktop$MH,"app_indicator_build_menu_from_desktop");
    }
    public static void app_indicator_build_menu_from_desktop ( Addressable self,  Addressable desktop_file,  Addressable desktop_profile) {
        var mh$ = app_indicator_build_menu_from_desktop$MH();
        try {
            mh$.invokeExact(self, desktop_file, desktop_profile);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryAddress NULL() {
        return constants$2331.NULL$ADDR;
    }
    public static int g_macro__has_attribute() {
        return (int)0L;
    }
    public static int g_macro__has_feature() {
        return (int)0L;
    }
    public static int g_macro__has_builtin() {
        return (int)0L;
    }
    public static int g_macro__has_extension() {
        return (int)0L;
    }
    public static MemorySegment G_GNUC_FUNCTION() {
        return constants$2331.G_GNUC_FUNCTION$SEGMENT;
    }
    public static MemorySegment G_GNUC_PRETTY_FUNCTION() {
        return constants$2331.G_GNUC_PRETTY_FUNCTION$SEGMENT;
    }
    public static MemorySegment G_STRLOC() {
        return constants$2332.G_STRLOC$SEGMENT;
    }
    public static int FALSE() {
        return (int)0L;
    }
    public static int TRUE() {
        return (int)1L;
    }
    public static long _POSIX_C_SOURCE() {
        return 200809L;
    }
    public static int __TIMESIZE() {
        return (int)64L;
    }
    public static long __STDC_IEC_60559_BFP__() {
        return 201404L;
    }
    public static long __STDC_IEC_60559_COMPLEX__() {
        return 201404L;
    }
    public static long __STDC_ISO_10646__() {
        return 201706L;
    }
    public static long LLONG_MIN() {
        return -9223372036854775808L;
    }
    public static long LLONG_MAX() {
        return 9223372036854775807L;
    }
    public static long ULLONG_MAX() {
        return -1L;
    }
    public static int PTHREAD_DESTRUCTOR_ITERATIONS() {
        return (int)4L;
    }
    public static int SEM_VALUE_MAX() {
        return (int)2147483647L;
    }
    public static long SSIZE_MAX() {
        return 9223372036854775807L;
    }
    public static int BC_BASE_MAX() {
        return (int)99L;
    }
    public static int BC_DIM_MAX() {
        return (int)2048L;
    }
    public static int BC_SCALE_MAX() {
        return (int)99L;
    }
    public static int BC_STRING_MAX() {
        return (int)1000L;
    }
    public static int EXPR_NEST_MAX() {
        return (int)32L;
    }
    public static int LINE_MAX() {
        return (int)2048L;
    }
    public static int RE_DUP_MAX() {
        return (int)32767L;
    }
    public static int SCHAR_MAX() {
        return (int)127L;
    }
    public static int SHRT_MAX() {
        return (int)32767L;
    }
    public static int INT_MAX() {
        return (int)2147483647L;
    }
    public static long LONG_MAX() {
        return 9223372036854775807L;
    }
    public static int SCHAR_MIN() {
        return (int)-128L;
    }
    public static int SHRT_MIN() {
        return (int)-32768L;
    }
    public static int INT_MIN() {
        return (int)-2147483648L;
    }
    public static long LONG_MIN() {
        return -9223372036854775808L;
    }
    public static int UCHAR_MAX() {
        return (int)255L;
    }
    public static int USHRT_MAX() {
        return (int)65535L;
    }
    public static int UINT_MAX() {
        return (int)4294967295L;
    }
    public static long ULONG_MAX() {
        return -1L;
    }
    public static int CHAR_BIT() {
        return (int)8L;
    }
    public static int CHAR_MIN() {
        return (int)-128L;
    }
    public static int CHAR_MAX() {
        return (int)127L;
    }
    public static int FLT_EVAL_METHOD() {
        return (int)0L;
    }
    public static int FLT_RADIX() {
        return (int)2L;
    }
    public static int FLT_MANT_DIG() {
        return (int)24L;
    }
    public static int DBL_MANT_DIG() {
        return (int)53L;
    }
    public static int LDBL_MANT_DIG() {
        return (int)64L;
    }
    public static int DECIMAL_DIG() {
        return (int)21L;
    }
    public static int FLT_DIG() {
        return (int)6L;
    }
    public static int DBL_DIG() {
        return (int)15L;
    }
    public static int LDBL_DIG() {
        return (int)18L;
    }
    public static int FLT_MIN_EXP() {
        return (int)-125L;
    }
    public static int DBL_MIN_EXP() {
        return (int)-1021L;
    }
    public static int LDBL_MIN_EXP() {
        return (int)-16381L;
    }
    public static int FLT_MIN_10_EXP() {
        return (int)-37L;
    }
    public static int DBL_MIN_10_EXP() {
        return (int)-307L;
    }
    public static int LDBL_MIN_10_EXP() {
        return (int)-4931L;
    }
    public static int FLT_MAX_EXP() {
        return (int)128L;
    }
    public static int DBL_MAX_EXP() {
        return (int)1024L;
    }
    public static int LDBL_MAX_EXP() {
        return (int)16384L;
    }
    public static int FLT_MAX_10_EXP() {
        return (int)38L;
    }
}


