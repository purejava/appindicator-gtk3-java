// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$873 {

    static final FunctionDescriptor g_tls_server_connection_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_tls_server_connection_new$MH = RuntimeHelper.downcallHandle(
        "g_tls_server_connection_new",
        constants$873.g_tls_server_connection_new$FUNC
    );
    static final FunctionDescriptor GVfsFileLookupFunc$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GVfsFileLookupFunc$MH = RuntimeHelper.downcallHandle(
        constants$873.GVfsFileLookupFunc$FUNC
    );
    static final FunctionDescriptor g_vfs_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle g_vfs_get_type$MH = RuntimeHelper.downcallHandle(
        "g_vfs_get_type",
        constants$873.g_vfs_get_type$FUNC
    );
    static final FunctionDescriptor g_vfs_is_active$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_vfs_is_active$MH = RuntimeHelper.downcallHandle(
        "g_vfs_is_active",
        constants$873.g_vfs_is_active$FUNC
    );
    static final FunctionDescriptor g_vfs_get_file_for_path$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_vfs_get_file_for_path$MH = RuntimeHelper.downcallHandle(
        "g_vfs_get_file_for_path",
        constants$873.g_vfs_get_file_for_path$FUNC
    );
}


