// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$854 {

    static final FunctionDescriptor g_test_dbus_stop$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_test_dbus_stop$MH = RuntimeHelper.downcallHandle(
        "g_test_dbus_stop",
        constants$854.g_test_dbus_stop$FUNC
    );
    static final FunctionDescriptor g_test_dbus_down$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_test_dbus_down$MH = RuntimeHelper.downcallHandle(
        "g_test_dbus_down",
        constants$854.g_test_dbus_down$FUNC
    );
    static final FunctionDescriptor g_test_dbus_unset$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle g_test_dbus_unset$MH = RuntimeHelper.downcallHandle(
        "g_test_dbus_unset",
        constants$854.g_test_dbus_unset$FUNC
    );
    static final FunctionDescriptor g_themed_icon_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle g_themed_icon_get_type$MH = RuntimeHelper.downcallHandle(
        "g_themed_icon_get_type",
        constants$854.g_themed_icon_get_type$FUNC
    );
    static final FunctionDescriptor g_themed_icon_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_themed_icon_new$MH = RuntimeHelper.downcallHandle(
        "g_themed_icon_new",
        constants$854.g_themed_icon_new$FUNC
    );
    static final FunctionDescriptor g_themed_icon_new_with_default_fallbacks$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_themed_icon_new_with_default_fallbacks$MH = RuntimeHelper.downcallHandle(
        "g_themed_icon_new_with_default_fallbacks",
        constants$854.g_themed_icon_new_with_default_fallbacks$FUNC
    );
}


