// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$402 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$402() {}
    static final FunctionDescriptor g_param_spec_pool_list_owned$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle g_param_spec_pool_list_owned$MH = RuntimeHelper.downcallHandle(
        "g_param_spec_pool_list_owned",
        constants$402.g_param_spec_pool_list_owned$FUNC
    );
    static final FunctionDescriptor g_param_spec_pool_list$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_param_spec_pool_list$MH = RuntimeHelper.downcallHandle(
        "g_param_spec_pool_list",
        constants$402.g_param_spec_pool_list$FUNC
    );
    static final FunctionDescriptor GCallback$FUNC = FunctionDescriptor.ofVoid();
    static final FunctionDescriptor GCallback_UP$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle GCallback_UP$MH = RuntimeHelper.upcallHandle(GCallback.class, "apply", constants$402.GCallback_UP$FUNC);
    static final FunctionDescriptor GCallback_DOWN$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle GCallback_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$402.GCallback_DOWN$FUNC
    );
    static final FunctionDescriptor GClosureNotify$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor GClosureNotify_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GClosureNotify_UP$MH = RuntimeHelper.upcallHandle(GClosureNotify.class, "apply", constants$402.GClosureNotify_UP$FUNC);
    static final FunctionDescriptor GClosureNotify_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GClosureNotify_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$402.GClosureNotify_DOWN$FUNC
    );
}


