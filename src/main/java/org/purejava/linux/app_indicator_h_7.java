// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class app_indicator_h_7 extends app_indicator_h_6 {

    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN = 39;
     * }
     */
    public static int G_DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_OBJECT_PATH_IN_USE = 40;
     * }
     */
    public static int G_DBUS_ERROR_OBJECT_PATH_IN_USE() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_UNKNOWN_OBJECT = 41;
     * }
     */
    public static int G_DBUS_ERROR_UNKNOWN_OBJECT() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_UNKNOWN_INTERFACE = 42;
     * }
     */
    public static int G_DBUS_ERROR_UNKNOWN_INTERFACE() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_UNKNOWN_PROPERTY = 43;
     * }
     */
    public static int G_DBUS_ERROR_UNKNOWN_PROPERTY() {
        return (int)43L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_PROPERTY_READ_ONLY = 44;
     * }
     */
    public static int G_DBUS_ERROR_PROPERTY_READ_ONLY() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_CONNECTION_FLAGS_NONE = 0;
     * }
     */
    public static int G_DBUS_CONNECTION_FLAGS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT = 1;
     * }
     */
    public static int G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER = 2;
     * }
     */
    public static int G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS = 4;
     * }
     */
    public static int G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION = 8;
     * }
     */
    public static int G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING = 16;
     * }
     */
    public static int G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_REQUIRE_SAME_USER = 32;
     * }
     */
    public static int G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_REQUIRE_SAME_USER() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_CONNECTION_FLAGS_CROSS_NAMESPACE = 64;
     * }
     */
    public static int G_DBUS_CONNECTION_FLAGS_CROSS_NAMESPACE() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_CAPABILITY_FLAGS_NONE = 0;
     * }
     */
    public static int G_DBUS_CAPABILITY_FLAGS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING = 1;
     * }
     */
    public static int G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_CALL_FLAGS_NONE = 0;
     * }
     */
    public static int G_DBUS_CALL_FLAGS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_CALL_FLAGS_NO_AUTO_START = 1;
     * }
     */
    public static int G_DBUS_CALL_FLAGS_NO_AUTO_START() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_CALL_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION = 2;
     * }
     */
    public static int G_DBUS_CALL_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_TYPE_INVALID = 0;
     * }
     */
    public static int G_DBUS_MESSAGE_TYPE_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_TYPE_METHOD_CALL = 1;
     * }
     */
    public static int G_DBUS_MESSAGE_TYPE_METHOD_CALL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_TYPE_METHOD_RETURN = 2;
     * }
     */
    public static int G_DBUS_MESSAGE_TYPE_METHOD_RETURN() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_TYPE_ERROR = 3;
     * }
     */
    public static int G_DBUS_MESSAGE_TYPE_ERROR() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_TYPE_SIGNAL = 4;
     * }
     */
    public static int G_DBUS_MESSAGE_TYPE_SIGNAL() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_FLAGS_NONE = 0;
     * }
     */
    public static int G_DBUS_MESSAGE_FLAGS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED = 1;
     * }
     */
    public static int G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_FLAGS_NO_AUTO_START = 2;
     * }
     */
    public static int G_DBUS_MESSAGE_FLAGS_NO_AUTO_START() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION = 4;
     * }
     */
    public static int G_DBUS_MESSAGE_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_HEADER_FIELD_INVALID = 0;
     * }
     */
    public static int G_DBUS_MESSAGE_HEADER_FIELD_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_HEADER_FIELD_PATH = 1;
     * }
     */
    public static int G_DBUS_MESSAGE_HEADER_FIELD_PATH() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_HEADER_FIELD_INTERFACE = 2;
     * }
     */
    public static int G_DBUS_MESSAGE_HEADER_FIELD_INTERFACE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_HEADER_FIELD_MEMBER = 3;
     * }
     */
    public static int G_DBUS_MESSAGE_HEADER_FIELD_MEMBER() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME = 4;
     * }
     */
    public static int G_DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL = 5;
     * }
     */
    public static int G_DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_HEADER_FIELD_DESTINATION = 6;
     * }
     */
    public static int G_DBUS_MESSAGE_HEADER_FIELD_DESTINATION() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_HEADER_FIELD_SENDER = 7;
     * }
     */
    public static int G_DBUS_MESSAGE_HEADER_FIELD_SENDER() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_HEADER_FIELD_SIGNATURE = 8;
     * }
     */
    public static int G_DBUS_MESSAGE_HEADER_FIELD_SIGNATURE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS = 9;
     * }
     */
    public static int G_DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_PROPERTY_INFO_FLAGS_NONE = 0;
     * }
     */
    public static int G_DBUS_PROPERTY_INFO_FLAGS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_PROPERTY_INFO_FLAGS_READABLE = 1;
     * }
     */
    public static int G_DBUS_PROPERTY_INFO_FLAGS_READABLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE = 2;
     * }
     */
    public static int G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_SUBTREE_FLAGS_NONE = 0;
     * }
     */
    public static int G_DBUS_SUBTREE_FLAGS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES = 1;
     * }
     */
    public static int G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_SERVER_FLAGS_NONE = 0;
     * }
     */
    public static int G_DBUS_SERVER_FLAGS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_SERVER_FLAGS_RUN_IN_THREAD = 1;
     * }
     */
    public static int G_DBUS_SERVER_FLAGS_RUN_IN_THREAD() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS = 2;
     * }
     */
    public static int G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_SERVER_FLAGS_AUTHENTICATION_REQUIRE_SAME_USER = 4;
     * }
     */
    public static int G_DBUS_SERVER_FLAGS_AUTHENTICATION_REQUIRE_SAME_USER() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_SIGNAL_FLAGS_NONE = 0;
     * }
     */
    public static int G_DBUS_SIGNAL_FLAGS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE = 1;
     * }
     */
    public static int G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_NAMESPACE = 2;
     * }
     */
    public static int G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_NAMESPACE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_PATH = 4;
     * }
     */
    public static int G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_PATH() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_SEND_MESSAGE_FLAGS_NONE = 0;
     * }
     */
    public static int G_DBUS_SEND_MESSAGE_FLAGS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL = 1;
     * }
     */
    public static int G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_CREDENTIALS_TYPE_INVALID = 0;
     * }
     */
    public static int G_CREDENTIALS_TYPE_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_CREDENTIALS_TYPE_LINUX_UCRED = 1;
     * }
     */
    public static int G_CREDENTIALS_TYPE_LINUX_UCRED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED = 2;
     * }
     */
    public static int G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED = 3;
     * }
     */
    public static int G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_CREDENTIALS_TYPE_SOLARIS_UCRED = 4;
     * }
     */
    public static int G_CREDENTIALS_TYPE_SOLARIS_UCRED() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_CREDENTIALS_TYPE_NETBSD_UNPCBID = 5;
     * }
     */
    public static int G_CREDENTIALS_TYPE_NETBSD_UNPCBID() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .G_CREDENTIALS_TYPE_APPLE_XUCRED = 6;
     * }
     */
    public static int G_CREDENTIALS_TYPE_APPLE_XUCRED() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .G_CREDENTIALS_TYPE_WIN32_PID = 7;
     * }
     */
    public static int G_CREDENTIALS_TYPE_WIN32_PID() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN = 66;
     * }
     */
    public static int G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN() {
        return (int)66L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN = 108;
     * }
     */
    public static int G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN() {
        return (int)108L;
    }
    /**
     * {@snippet :
     * enum .G_APPLICATION_FLAGS_NONE = 0;
     * }
     */
    public static int G_APPLICATION_FLAGS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_APPLICATION_DEFAULT_FLAGS = 0;
     * }
     */
    public static int G_APPLICATION_DEFAULT_FLAGS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_APPLICATION_IS_SERVICE = 1;
     * }
     */
    public static int G_APPLICATION_IS_SERVICE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_APPLICATION_IS_LAUNCHER = 2;
     * }
     */
    public static int G_APPLICATION_IS_LAUNCHER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_APPLICATION_HANDLES_OPEN = 4;
     * }
     */
    public static int G_APPLICATION_HANDLES_OPEN() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_APPLICATION_HANDLES_COMMAND_LINE = 8;
     * }
     */
    public static int G_APPLICATION_HANDLES_COMMAND_LINE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_APPLICATION_SEND_ENVIRONMENT = 16;
     * }
     */
    public static int G_APPLICATION_SEND_ENVIRONMENT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .G_APPLICATION_NON_UNIQUE = 32;
     * }
     */
    public static int G_APPLICATION_NON_UNIQUE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum .G_APPLICATION_CAN_OVERRIDE_APP_ID = 64;
     * }
     */
    public static int G_APPLICATION_CAN_OVERRIDE_APP_ID() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum .G_APPLICATION_ALLOW_REPLACEMENT = 128;
     * }
     */
    public static int G_APPLICATION_ALLOW_REPLACEMENT() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum .G_APPLICATION_REPLACE = 256;
     * }
     */
    public static int G_APPLICATION_REPLACE() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_ERROR_UNAVAILABLE = 0;
     * }
     */
    public static int G_TLS_ERROR_UNAVAILABLE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_ERROR_MISC = 1;
     * }
     */
    public static int G_TLS_ERROR_MISC() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_ERROR_BAD_CERTIFICATE = 2;
     * }
     */
    public static int G_TLS_ERROR_BAD_CERTIFICATE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_ERROR_NOT_TLS = 3;
     * }
     */
    public static int G_TLS_ERROR_NOT_TLS() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_ERROR_HANDSHAKE = 4;
     * }
     */
    public static int G_TLS_ERROR_HANDSHAKE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_ERROR_CERTIFICATE_REQUIRED = 5;
     * }
     */
    public static int G_TLS_ERROR_CERTIFICATE_REQUIRED() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_ERROR_EOF = 6;
     * }
     */
    public static int G_TLS_ERROR_EOF() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_ERROR_INAPPROPRIATE_FALLBACK = 7;
     * }
     */
    public static int G_TLS_ERROR_INAPPROPRIATE_FALLBACK() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_ERROR_BAD_CERTIFICATE_PASSWORD = 8;
     * }
     */
    public static int G_TLS_ERROR_BAD_CERTIFICATE_PASSWORD() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_CERTIFICATE_NO_FLAGS = 0;
     * }
     */
    public static int G_TLS_CERTIFICATE_NO_FLAGS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_CERTIFICATE_UNKNOWN_CA = 1;
     * }
     */
    public static int G_TLS_CERTIFICATE_UNKNOWN_CA() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_CERTIFICATE_BAD_IDENTITY = 2;
     * }
     */
    public static int G_TLS_CERTIFICATE_BAD_IDENTITY() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_CERTIFICATE_NOT_ACTIVATED = 4;
     * }
     */
    public static int G_TLS_CERTIFICATE_NOT_ACTIVATED() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_CERTIFICATE_EXPIRED = 8;
     * }
     */
    public static int G_TLS_CERTIFICATE_EXPIRED() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_CERTIFICATE_REVOKED = 16;
     * }
     */
    public static int G_TLS_CERTIFICATE_REVOKED() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_CERTIFICATE_INSECURE = 32;
     * }
     */
    public static int G_TLS_CERTIFICATE_INSECURE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_CERTIFICATE_GENERIC_ERROR = 64;
     * }
     */
    public static int G_TLS_CERTIFICATE_GENERIC_ERROR() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_CERTIFICATE_VALIDATE_ALL = 127;
     * }
     */
    public static int G_TLS_CERTIFICATE_VALIDATE_ALL() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_AUTHENTICATION_NONE = 0;
     * }
     */
    public static int G_TLS_AUTHENTICATION_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_AUTHENTICATION_REQUESTED = 1;
     * }
     */
    public static int G_TLS_AUTHENTICATION_REQUESTED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_AUTHENTICATION_REQUIRED = 2;
     * }
     */
    public static int G_TLS_AUTHENTICATION_REQUIRED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_CHANNEL_BINDING_TLS_UNIQUE = 0;
     * }
     */
    public static int G_TLS_CHANNEL_BINDING_TLS_UNIQUE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_CHANNEL_BINDING_TLS_SERVER_END_POINT = 1;
     * }
     */
    public static int G_TLS_CHANNEL_BINDING_TLS_SERVER_END_POINT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_CHANNEL_BINDING_TLS_EXPORTER = 2;
     * }
     */
    public static int G_TLS_CHANNEL_BINDING_TLS_EXPORTER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_CHANNEL_BINDING_ERROR_NOT_IMPLEMENTED = 0;
     * }
     */
    public static int G_TLS_CHANNEL_BINDING_ERROR_NOT_IMPLEMENTED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_CHANNEL_BINDING_ERROR_INVALID_STATE = 1;
     * }
     */
    public static int G_TLS_CHANNEL_BINDING_ERROR_INVALID_STATE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_CHANNEL_BINDING_ERROR_NOT_AVAILABLE = 2;
     * }
     */
    public static int G_TLS_CHANNEL_BINDING_ERROR_NOT_AVAILABLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_CHANNEL_BINDING_ERROR_NOT_SUPPORTED = 3;
     * }
     */
    public static int G_TLS_CHANNEL_BINDING_ERROR_NOT_SUPPORTED() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_CHANNEL_BINDING_ERROR_GENERAL_ERROR = 4;
     * }
     */
    public static int G_TLS_CHANNEL_BINDING_ERROR_GENERAL_ERROR() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_REHANDSHAKE_NEVER = 0;
     * }
     */
    public static int G_TLS_REHANDSHAKE_NEVER() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_REHANDSHAKE_SAFELY = 1;
     * }
     */
    public static int G_TLS_REHANDSHAKE_SAFELY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_REHANDSHAKE_UNSAFELY = 2;
     * }
     */
    public static int G_TLS_REHANDSHAKE_UNSAFELY() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _GTlsPasswordFlags.G_TLS_PASSWORD_NONE = 0;
     * }
     */
    public static int G_TLS_PASSWORD_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _GTlsPasswordFlags.G_TLS_PASSWORD_RETRY = 2;
     * }
     */
    public static int G_TLS_PASSWORD_RETRY() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _GTlsPasswordFlags.G_TLS_PASSWORD_MANY_TRIES = 4;
     * }
     */
    public static int G_TLS_PASSWORD_MANY_TRIES() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _GTlsPasswordFlags.G_TLS_PASSWORD_FINAL_TRY = 8;
     * }
     */
    public static int G_TLS_PASSWORD_FINAL_TRY() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum _GTlsPasswordFlags.G_TLS_PASSWORD_PKCS11_USER = 16;
     * }
     */
    public static int G_TLS_PASSWORD_PKCS11_USER() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum _GTlsPasswordFlags.G_TLS_PASSWORD_PKCS11_SECURITY_OFFICER = 32;
     * }
     */
    public static int G_TLS_PASSWORD_PKCS11_SECURITY_OFFICER() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum _GTlsPasswordFlags.G_TLS_PASSWORD_PKCS11_CONTEXT_SPECIFIC = 64;
     * }
     */
    public static int G_TLS_PASSWORD_PKCS11_CONTEXT_SPECIFIC() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_INTERACTION_UNHANDLED = 0;
     * }
     */
    public static int G_TLS_INTERACTION_UNHANDLED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_INTERACTION_HANDLED = 1;
     * }
     */
    public static int G_TLS_INTERACTION_HANDLED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_INTERACTION_FAILED = 2;
     * }
     */
    public static int G_TLS_INTERACTION_FAILED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_INTERFACE_SKELETON_FLAGS_NONE = 0;
     * }
     */
    public static int G_DBUS_INTERFACE_SKELETON_FLAGS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_INTERFACE_SKELETON_FLAGS_HANDLE_METHOD_INVOCATIONS_IN_THREAD = 1;
     * }
     */
    public static int G_DBUS_INTERFACE_SKELETON_FLAGS_HANDLE_METHOD_INVOCATIONS_IN_THREAD() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE = 0;
     * }
     */
    public static int G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_DO_NOT_AUTO_START = 1;
     * }
     */
    public static int G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_DO_NOT_AUTO_START() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_DATABASE_VERIFY_NONE = 0;
     * }
     */
    public static int G_TLS_DATABASE_VERIFY_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_DATABASE_LOOKUP_NONE = 0;
     * }
     */
    public static int G_TLS_DATABASE_LOOKUP_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_DATABASE_LOOKUP_KEYPAIR = 1;
     * }
     */
    public static int G_TLS_DATABASE_LOOKUP_KEYPAIR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_CERTIFICATE_REQUEST_NONE = 0;
     * }
     */
    public static int G_TLS_CERTIFICATE_REQUEST_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_PROTOCOL_VERSION_UNKNOWN = 0;
     * }
     */
    public static int G_TLS_PROTOCOL_VERSION_UNKNOWN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_PROTOCOL_VERSION_SSL_3_0 = 1;
     * }
     */
    public static int G_TLS_PROTOCOL_VERSION_SSL_3_0() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_PROTOCOL_VERSION_TLS_1_0 = 2;
     * }
     */
    public static int G_TLS_PROTOCOL_VERSION_TLS_1_0() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_PROTOCOL_VERSION_TLS_1_1 = 3;
     * }
     */
    public static int G_TLS_PROTOCOL_VERSION_TLS_1_1() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_PROTOCOL_VERSION_TLS_1_2 = 4;
     * }
     */
    public static int G_TLS_PROTOCOL_VERSION_TLS_1_2() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_PROTOCOL_VERSION_TLS_1_3 = 5;
     * }
     */
    public static int G_TLS_PROTOCOL_VERSION_TLS_1_3() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_PROTOCOL_VERSION_DTLS_1_0 = 201;
     * }
     */
    public static int G_TLS_PROTOCOL_VERSION_DTLS_1_0() {
        return (int)201L;
    }
    /**
     * {@snippet :
     * enum .G_TLS_PROTOCOL_VERSION_DTLS_1_2 = 202;
     * }
     */
    public static int G_TLS_PROTOCOL_VERSION_DTLS_1_2() {
        return (int)202L;
    }
    /**
     * {@snippet :
     * enum .G_IO_MODULE_SCOPE_NONE = 0;
     * }
     */
    public static int G_IO_MODULE_SCOPE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_IO_MODULE_SCOPE_BLOCK_DUPLICATES = 1;
     * }
     */
    public static int G_IO_MODULE_SCOPE_BLOCK_DUPLICATES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_CLIENT_RESOLVING = 0;
     * }
     */
    public static int G_SOCKET_CLIENT_RESOLVING() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_CLIENT_RESOLVED = 1;
     * }
     */
    public static int G_SOCKET_CLIENT_RESOLVED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_CLIENT_CONNECTING = 2;
     * }
     */
    public static int G_SOCKET_CLIENT_CONNECTING() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_CLIENT_CONNECTED = 3;
     * }
     */
    public static int G_SOCKET_CLIENT_CONNECTED() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_CLIENT_PROXY_NEGOTIATING = 4;
     * }
     */
    public static int G_SOCKET_CLIENT_PROXY_NEGOTIATING() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_CLIENT_PROXY_NEGOTIATED = 5;
     * }
     */
    public static int G_SOCKET_CLIENT_PROXY_NEGOTIATED() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_CLIENT_TLS_HANDSHAKING = 6;
     * }
     */
    public static int G_SOCKET_CLIENT_TLS_HANDSHAKING() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_CLIENT_TLS_HANDSHAKED = 7;
     * }
     */
    public static int G_SOCKET_CLIENT_TLS_HANDSHAKED() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_CLIENT_COMPLETE = 8;
     * }
     */
    public static int G_SOCKET_CLIENT_COMPLETE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_LISTENER_BINDING = 0;
     * }
     */
    public static int G_SOCKET_LISTENER_BINDING() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_LISTENER_BOUND = 1;
     * }
     */
    public static int G_SOCKET_LISTENER_BOUND() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_LISTENER_LISTENING = 2;
     * }
     */
    public static int G_SOCKET_LISTENER_LISTENING() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_LISTENER_LISTENED = 3;
     * }
     */
    public static int G_SOCKET_LISTENER_LISTENED() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_TEST_DBUS_NONE = 0;
     * }
     */
    public static int G_TEST_DBUS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_SUBPROCESS_FLAGS_NONE = 0;
     * }
     */
    public static int G_SUBPROCESS_FLAGS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_SUBPROCESS_FLAGS_STDIN_PIPE = 1;
     * }
     */
    public static int G_SUBPROCESS_FLAGS_STDIN_PIPE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_SUBPROCESS_FLAGS_STDIN_INHERIT = 2;
     * }
     */
    public static int G_SUBPROCESS_FLAGS_STDIN_INHERIT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_SUBPROCESS_FLAGS_STDOUT_PIPE = 4;
     * }
     */
    public static int G_SUBPROCESS_FLAGS_STDOUT_PIPE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_SUBPROCESS_FLAGS_STDOUT_SILENCE = 8;
     * }
     */
    public static int G_SUBPROCESS_FLAGS_STDOUT_SILENCE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_SUBPROCESS_FLAGS_STDERR_PIPE = 16;
     * }
     */
    public static int G_SUBPROCESS_FLAGS_STDERR_PIPE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .G_SUBPROCESS_FLAGS_STDERR_SILENCE = 32;
     * }
     */
    public static int G_SUBPROCESS_FLAGS_STDERR_SILENCE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum .G_SUBPROCESS_FLAGS_STDERR_MERGE = 64;
     * }
     */
    public static int G_SUBPROCESS_FLAGS_STDERR_MERGE() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum .G_SUBPROCESS_FLAGS_INHERIT_FDS = 128;
     * }
     */
    public static int G_SUBPROCESS_FLAGS_INHERIT_FDS() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum .G_SUBPROCESS_FLAGS_SEARCH_PATH_FROM_ENVP = 256;
     * }
     */
    public static int G_SUBPROCESS_FLAGS_SEARCH_PATH_FROM_ENVP() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum .G_NOTIFICATION_PRIORITY_NORMAL = 0;
     * }
     */
    public static int G_NOTIFICATION_PRIORITY_NORMAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_NOTIFICATION_PRIORITY_LOW = 1;
     * }
     */
    public static int G_NOTIFICATION_PRIORITY_LOW() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_NOTIFICATION_PRIORITY_HIGH = 2;
     * }
     */
    public static int G_NOTIFICATION_PRIORITY_HIGH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_NOTIFICATION_PRIORITY_URGENT = 3;
     * }
     */
    public static int G_NOTIFICATION_PRIORITY_URGENT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_NETWORK_CONNECTIVITY_LOCAL = 1;
     * }
     */
    public static int G_NETWORK_CONNECTIVITY_LOCAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_NETWORK_CONNECTIVITY_LIMITED = 2;
     * }
     */
    public static int G_NETWORK_CONNECTIVITY_LIMITED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_NETWORK_CONNECTIVITY_PORTAL = 3;
     * }
     */
    public static int G_NETWORK_CONNECTIVITY_PORTAL() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_NETWORK_CONNECTIVITY_FULL = 4;
     * }
     */
    public static int G_NETWORK_CONNECTIVITY_FULL() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_POLLABLE_RETURN_FAILED = 0;
     * }
     */
    public static int G_POLLABLE_RETURN_FAILED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_POLLABLE_RETURN_OK = 1;
     * }
     */
    public static int G_POLLABLE_RETURN_OK() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_POLLABLE_RETURN_WOULD_BLOCK = -27;
     * }
     */
    public static int G_POLLABLE_RETURN_WOULD_BLOCK() {
        return (int)-27L;
    }
    /**
     * {@snippet :
     * enum .G_MEMORY_MONITOR_WARNING_LEVEL_LOW = 50;
     * }
     */
    public static int G_MEMORY_MONITOR_WARNING_LEVEL_LOW() {
        return (int)50L;
    }
    /**
     * {@snippet :
     * enum .G_MEMORY_MONITOR_WARNING_LEVEL_MEDIUM = 100;
     * }
     */
    public static int G_MEMORY_MONITOR_WARNING_LEVEL_MEDIUM() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * enum .G_MEMORY_MONITOR_WARNING_LEVEL_CRITICAL = 255;
     * }
     */
    public static int G_MEMORY_MONITOR_WARNING_LEVEL_CRITICAL() {
        return (int)255L;
    }
    public static MethodHandle g_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$472.g_action_get_type$MH,"g_action_get_type");
    }
    /**
     * {@snippet :
     * GType g_action_get_type();
     * }
     */
    public static long g_action_get_type() {
        var mh$ = g_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$472.g_action_get_name$MH,"g_action_get_name");
    }
    /**
     * {@snippet :
     * const gchar* g_action_get_name(GAction* action);
     * }
     */
    public static MemorySegment g_action_get_name(MemorySegment action) {
        var mh$ = g_action_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_get_parameter_type$MH() {
        return RuntimeHelper.requireNonNull(constants$473.g_action_get_parameter_type$MH,"g_action_get_parameter_type");
    }
    /**
     * {@snippet :
     * const GVariantType* g_action_get_parameter_type(GAction* action);
     * }
     */
    public static MemorySegment g_action_get_parameter_type(MemorySegment action) {
        var mh$ = g_action_get_parameter_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_get_state_type$MH() {
        return RuntimeHelper.requireNonNull(constants$473.g_action_get_state_type$MH,"g_action_get_state_type");
    }
    /**
     * {@snippet :
     * const GVariantType* g_action_get_state_type(GAction* action);
     * }
     */
    public static MemorySegment g_action_get_state_type(MemorySegment action) {
        var mh$ = g_action_get_state_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_get_state_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$473.g_action_get_state_hint$MH,"g_action_get_state_hint");
    }
    /**
     * {@snippet :
     * GVariant* g_action_get_state_hint(GAction* action);
     * }
     */
    public static MemorySegment g_action_get_state_hint(MemorySegment action) {
        var mh$ = g_action_get_state_hint$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_get_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$473.g_action_get_enabled$MH,"g_action_get_enabled");
    }
    /**
     * {@snippet :
     * gboolean g_action_get_enabled(GAction* action);
     * }
     */
    public static int g_action_get_enabled(MemorySegment action) {
        var mh$ = g_action_get_enabled$MH();
        try {
            return (int)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$473.g_action_get_state$MH,"g_action_get_state");
    }
    /**
     * {@snippet :
     * GVariant* g_action_get_state(GAction* action);
     * }
     */
    public static MemorySegment g_action_get_state(MemorySegment action) {
        var mh$ = g_action_get_state$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_change_state$MH() {
        return RuntimeHelper.requireNonNull(constants$473.g_action_change_state$MH,"g_action_change_state");
    }
    /**
     * {@snippet :
     * void g_action_change_state(GAction* action, GVariant* value);
     * }
     */
    public static void g_action_change_state(MemorySegment action, MemorySegment value) {
        var mh$ = g_action_change_state$MH();
        try {
            mh$.invokeExact(action, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$474.g_action_activate$MH,"g_action_activate");
    }
    /**
     * {@snippet :
     * void g_action_activate(GAction* action, GVariant* parameter);
     * }
     */
    public static void g_action_activate(MemorySegment action, MemorySegment parameter) {
        var mh$ = g_action_activate$MH();
        try {
            mh$.invokeExact(action, parameter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_name_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$474.g_action_name_is_valid$MH,"g_action_name_is_valid");
    }
    /**
     * {@snippet :
     * gboolean g_action_name_is_valid(const gchar* action_name);
     * }
     */
    public static int g_action_name_is_valid(MemorySegment action_name) {
        var mh$ = g_action_name_is_valid$MH();
        try {
            return (int)mh$.invokeExact(action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_parse_detailed_name$MH() {
        return RuntimeHelper.requireNonNull(constants$474.g_action_parse_detailed_name$MH,"g_action_parse_detailed_name");
    }
    /**
     * {@snippet :
     * gboolean g_action_parse_detailed_name(const gchar* detailed_name, gchar** action_name, GVariant** target_value, GError** error);
     * }
     */
    public static int g_action_parse_detailed_name(MemorySegment detailed_name, MemorySegment action_name, MemorySegment target_value, MemorySegment error) {
        var mh$ = g_action_parse_detailed_name$MH();
        try {
            return (int)mh$.invokeExact(detailed_name, action_name, target_value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_print_detailed_name$MH() {
        return RuntimeHelper.requireNonNull(constants$474.g_action_print_detailed_name$MH,"g_action_print_detailed_name");
    }
    /**
     * {@snippet :
     * gchar* g_action_print_detailed_name(const gchar* action_name, GVariant* target_value);
     * }
     */
    public static MemorySegment g_action_print_detailed_name(MemorySegment action_name, MemorySegment target_value) {
        var mh$ = g_action_print_detailed_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action_name, target_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$474.g_action_group_get_type$MH,"g_action_group_get_type");
    }
    /**
     * {@snippet :
     * GType g_action_group_get_type();
     * }
     */
    public static long g_action_group_get_type() {
        var mh$ = g_action_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_has_action$MH() {
        return RuntimeHelper.requireNonNull(constants$474.g_action_group_has_action$MH,"g_action_group_has_action");
    }
    /**
     * {@snippet :
     * gboolean g_action_group_has_action(GActionGroup* action_group, const gchar* action_name);
     * }
     */
    public static int g_action_group_has_action(MemorySegment action_group, MemorySegment action_name) {
        var mh$ = g_action_group_has_action$MH();
        try {
            return (int)mh$.invokeExact(action_group, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_list_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$475.g_action_group_list_actions$MH,"g_action_group_list_actions");
    }
    /**
     * {@snippet :
     * gchar** g_action_group_list_actions(GActionGroup* action_group);
     * }
     */
    public static MemorySegment g_action_group_list_actions(MemorySegment action_group) {
        var mh$ = g_action_group_list_actions$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_get_action_parameter_type$MH() {
        return RuntimeHelper.requireNonNull(constants$475.g_action_group_get_action_parameter_type$MH,"g_action_group_get_action_parameter_type");
    }
    /**
     * {@snippet :
     * const GVariantType* g_action_group_get_action_parameter_type(GActionGroup* action_group, const gchar* action_name);
     * }
     */
    public static MemorySegment g_action_group_get_action_parameter_type(MemorySegment action_group, MemorySegment action_name) {
        var mh$ = g_action_group_get_action_parameter_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action_group, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_get_action_state_type$MH() {
        return RuntimeHelper.requireNonNull(constants$475.g_action_group_get_action_state_type$MH,"g_action_group_get_action_state_type");
    }
    /**
     * {@snippet :
     * const GVariantType* g_action_group_get_action_state_type(GActionGroup* action_group, const gchar* action_name);
     * }
     */
    public static MemorySegment g_action_group_get_action_state_type(MemorySegment action_group, MemorySegment action_name) {
        var mh$ = g_action_group_get_action_state_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action_group, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_get_action_state_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$475.g_action_group_get_action_state_hint$MH,"g_action_group_get_action_state_hint");
    }
    /**
     * {@snippet :
     * GVariant* g_action_group_get_action_state_hint(GActionGroup* action_group, const gchar* action_name);
     * }
     */
    public static MemorySegment g_action_group_get_action_state_hint(MemorySegment action_group, MemorySegment action_name) {
        var mh$ = g_action_group_get_action_state_hint$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action_group, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_get_action_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$475.g_action_group_get_action_enabled$MH,"g_action_group_get_action_enabled");
    }
    /**
     * {@snippet :
     * gboolean g_action_group_get_action_enabled(GActionGroup* action_group, const gchar* action_name);
     * }
     */
    public static int g_action_group_get_action_enabled(MemorySegment action_group, MemorySegment action_name) {
        var mh$ = g_action_group_get_action_enabled$MH();
        try {
            return (int)mh$.invokeExact(action_group, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_get_action_state$MH() {
        return RuntimeHelper.requireNonNull(constants$475.g_action_group_get_action_state$MH,"g_action_group_get_action_state");
    }
    /**
     * {@snippet :
     * GVariant* g_action_group_get_action_state(GActionGroup* action_group, const gchar* action_name);
     * }
     */
    public static MemorySegment g_action_group_get_action_state(MemorySegment action_group, MemorySegment action_name) {
        var mh$ = g_action_group_get_action_state$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action_group, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_change_action_state$MH() {
        return RuntimeHelper.requireNonNull(constants$476.g_action_group_change_action_state$MH,"g_action_group_change_action_state");
    }
    /**
     * {@snippet :
     * void g_action_group_change_action_state(GActionGroup* action_group, const gchar* action_name, GVariant* value);
     * }
     */
    public static void g_action_group_change_action_state(MemorySegment action_group, MemorySegment action_name, MemorySegment value) {
        var mh$ = g_action_group_change_action_state$MH();
        try {
            mh$.invokeExact(action_group, action_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_activate_action$MH() {
        return RuntimeHelper.requireNonNull(constants$476.g_action_group_activate_action$MH,"g_action_group_activate_action");
    }
    /**
     * {@snippet :
     * void g_action_group_activate_action(GActionGroup* action_group, const gchar* action_name, GVariant* parameter);
     * }
     */
    public static void g_action_group_activate_action(MemorySegment action_group, MemorySegment action_name, MemorySegment parameter) {
        var mh$ = g_action_group_activate_action$MH();
        try {
            mh$.invokeExact(action_group, action_name, parameter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_action_added$MH() {
        return RuntimeHelper.requireNonNull(constants$476.g_action_group_action_added$MH,"g_action_group_action_added");
    }
    /**
     * {@snippet :
     * void g_action_group_action_added(GActionGroup* action_group, const gchar* action_name);
     * }
     */
    public static void g_action_group_action_added(MemorySegment action_group, MemorySegment action_name) {
        var mh$ = g_action_group_action_added$MH();
        try {
            mh$.invokeExact(action_group, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_action_removed$MH() {
        return RuntimeHelper.requireNonNull(constants$476.g_action_group_action_removed$MH,"g_action_group_action_removed");
    }
    /**
     * {@snippet :
     * void g_action_group_action_removed(GActionGroup* action_group, const gchar* action_name);
     * }
     */
    public static void g_action_group_action_removed(MemorySegment action_group, MemorySegment action_name) {
        var mh$ = g_action_group_action_removed$MH();
        try {
            mh$.invokeExact(action_group, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_action_enabled_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$476.g_action_group_action_enabled_changed$MH,"g_action_group_action_enabled_changed");
    }
    /**
     * {@snippet :
     * void g_action_group_action_enabled_changed(GActionGroup* action_group, const gchar* action_name, gboolean enabled);
     * }
     */
    public static void g_action_group_action_enabled_changed(MemorySegment action_group, MemorySegment action_name, int enabled) {
        var mh$ = g_action_group_action_enabled_changed$MH();
        try {
            mh$.invokeExact(action_group, action_name, enabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_action_state_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$476.g_action_group_action_state_changed$MH,"g_action_group_action_state_changed");
    }
    /**
     * {@snippet :
     * void g_action_group_action_state_changed(GActionGroup* action_group, const gchar* action_name, GVariant* state);
     * }
     */
    public static void g_action_group_action_state_changed(MemorySegment action_group, MemorySegment action_name, MemorySegment state) {
        var mh$ = g_action_group_action_state_changed$MH();
        try {
            mh$.invokeExact(action_group, action_name, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_query_action$MH() {
        return RuntimeHelper.requireNonNull(constants$477.g_action_group_query_action$MH,"g_action_group_query_action");
    }
    /**
     * {@snippet :
     * gboolean g_action_group_query_action(GActionGroup* action_group, const gchar* action_name, gboolean* enabled, const GVariantType** parameter_type, const GVariantType** state_type, GVariant** state_hint, GVariant** state);
     * }
     */
    public static int g_action_group_query_action(MemorySegment action_group, MemorySegment action_name, MemorySegment enabled, MemorySegment parameter_type, MemorySegment state_type, MemorySegment state_hint, MemorySegment state) {
        var mh$ = g_action_group_query_action$MH();
        try {
            return (int)mh$.invokeExact(action_group, action_name, enabled, parameter_type, state_type, state_hint, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_export_action_group$MH() {
        return RuntimeHelper.requireNonNull(constants$477.g_dbus_connection_export_action_group$MH,"g_dbus_connection_export_action_group");
    }
    /**
     * {@snippet :
     * guint g_dbus_connection_export_action_group(GDBusConnection* connection, const gchar* object_path, GActionGroup* action_group, GError** error);
     * }
     */
    public static int g_dbus_connection_export_action_group(MemorySegment connection, MemorySegment object_path, MemorySegment action_group, MemorySegment error) {
        var mh$ = g_dbus_connection_export_action_group$MH();
        try {
            return (int)mh$.invokeExact(connection, object_path, action_group, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_unexport_action_group$MH() {
        return RuntimeHelper.requireNonNull(constants$477.g_dbus_connection_unexport_action_group$MH,"g_dbus_connection_unexport_action_group");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_unexport_action_group(GDBusConnection* connection, guint export_id);
     * }
     */
    public static void g_dbus_connection_unexport_action_group(MemorySegment connection, int export_id) {
        var mh$ = g_dbus_connection_unexport_action_group$MH();
        try {
            mh$.invokeExact(connection, export_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_map_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$477.g_action_map_get_type$MH,"g_action_map_get_type");
    }
    /**
     * {@snippet :
     * GType g_action_map_get_type();
     * }
     */
    public static long g_action_map_get_type() {
        var mh$ = g_action_map_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_map_lookup_action$MH() {
        return RuntimeHelper.requireNonNull(constants$477.g_action_map_lookup_action$MH,"g_action_map_lookup_action");
    }
    /**
     * {@snippet :
     * GAction* g_action_map_lookup_action(GActionMap* action_map, const gchar* action_name);
     * }
     */
    public static MemorySegment g_action_map_lookup_action(MemorySegment action_map, MemorySegment action_name) {
        var mh$ = g_action_map_lookup_action$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action_map, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_map_add_action$MH() {
        return RuntimeHelper.requireNonNull(constants$477.g_action_map_add_action$MH,"g_action_map_add_action");
    }
    /**
     * {@snippet :
     * void g_action_map_add_action(GActionMap* action_map, GAction* action);
     * }
     */
    public static void g_action_map_add_action(MemorySegment action_map, MemorySegment action) {
        var mh$ = g_action_map_add_action$MH();
        try {
            mh$.invokeExact(action_map, action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_map_remove_action$MH() {
        return RuntimeHelper.requireNonNull(constants$478.g_action_map_remove_action$MH,"g_action_map_remove_action");
    }
    /**
     * {@snippet :
     * void g_action_map_remove_action(GActionMap* action_map, const gchar* action_name);
     * }
     */
    public static void g_action_map_remove_action(MemorySegment action_map, MemorySegment action_name) {
        var mh$ = g_action_map_remove_action$MH();
        try {
            mh$.invokeExact(action_map, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_map_add_action_entries$MH() {
        return RuntimeHelper.requireNonNull(constants$478.g_action_map_add_action_entries$MH,"g_action_map_add_action_entries");
    }
    /**
     * {@snippet :
     * void g_action_map_add_action_entries(GActionMap* action_map, const GActionEntry* entries, gint n_entries, gpointer user_data);
     * }
     */
    public static void g_action_map_add_action_entries(MemorySegment action_map, MemorySegment entries, int n_entries, MemorySegment user_data) {
        var mh$ = g_action_map_add_action_entries$MH();
        try {
            mh$.invokeExact(action_map, entries, n_entries, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$478.g_app_info_get_type$MH,"g_app_info_get_type");
    }
    /**
     * {@snippet :
     * GType g_app_info_get_type();
     * }
     */
    public static long g_app_info_get_type() {
        var mh$ = g_app_info_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_create_from_commandline$MH() {
        return RuntimeHelper.requireNonNull(constants$478.g_app_info_create_from_commandline$MH,"g_app_info_create_from_commandline");
    }
    /**
     * {@snippet :
     * GAppInfo* g_app_info_create_from_commandline(char* commandline, char* application_name, GAppInfoCreateFlags flags, GError** error);
     * }
     */
    public static MemorySegment g_app_info_create_from_commandline(MemorySegment commandline, MemorySegment application_name, int flags, MemorySegment error) {
        var mh$ = g_app_info_create_from_commandline$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(commandline, application_name, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$478.g_app_info_dup$MH,"g_app_info_dup");
    }
    /**
     * {@snippet :
     * GAppInfo* g_app_info_dup(GAppInfo* appinfo);
     * }
     */
    public static MemorySegment g_app_info_dup(MemorySegment appinfo) {
        var mh$ = g_app_info_dup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$478.g_app_info_equal$MH,"g_app_info_equal");
    }
    /**
     * {@snippet :
     * gboolean g_app_info_equal(GAppInfo* appinfo1, GAppInfo* appinfo2);
     * }
     */
    public static int g_app_info_equal(MemorySegment appinfo1, MemorySegment appinfo2) {
        var mh$ = g_app_info_equal$MH();
        try {
            return (int)mh$.invokeExact(appinfo1, appinfo2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_id$MH() {
        return RuntimeHelper.requireNonNull(constants$479.g_app_info_get_id$MH,"g_app_info_get_id");
    }
    /**
     * {@snippet :
     * char* g_app_info_get_id(GAppInfo* appinfo);
     * }
     */
    public static MemorySegment g_app_info_get_id(MemorySegment appinfo) {
        var mh$ = g_app_info_get_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$479.g_app_info_get_name$MH,"g_app_info_get_name");
    }
    /**
     * {@snippet :
     * char* g_app_info_get_name(GAppInfo* appinfo);
     * }
     */
    public static MemorySegment g_app_info_get_name(MemorySegment appinfo) {
        var mh$ = g_app_info_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_display_name$MH() {
        return RuntimeHelper.requireNonNull(constants$479.g_app_info_get_display_name$MH,"g_app_info_get_display_name");
    }
    /**
     * {@snippet :
     * char* g_app_info_get_display_name(GAppInfo* appinfo);
     * }
     */
    public static MemorySegment g_app_info_get_display_name(MemorySegment appinfo) {
        var mh$ = g_app_info_get_display_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$479.g_app_info_get_description$MH,"g_app_info_get_description");
    }
    /**
     * {@snippet :
     * char* g_app_info_get_description(GAppInfo* appinfo);
     * }
     */
    public static MemorySegment g_app_info_get_description(MemorySegment appinfo) {
        var mh$ = g_app_info_get_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_executable$MH() {
        return RuntimeHelper.requireNonNull(constants$479.g_app_info_get_executable$MH,"g_app_info_get_executable");
    }
    /**
     * {@snippet :
     * char* g_app_info_get_executable(GAppInfo* appinfo);
     * }
     */
    public static MemorySegment g_app_info_get_executable(MemorySegment appinfo) {
        var mh$ = g_app_info_get_executable$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_commandline$MH() {
        return RuntimeHelper.requireNonNull(constants$479.g_app_info_get_commandline$MH,"g_app_info_get_commandline");
    }
    /**
     * {@snippet :
     * char* g_app_info_get_commandline(GAppInfo* appinfo);
     * }
     */
    public static MemorySegment g_app_info_get_commandline(MemorySegment appinfo) {
        var mh$ = g_app_info_get_commandline$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$480.g_app_info_get_icon$MH,"g_app_info_get_icon");
    }
    /**
     * {@snippet :
     * GIcon* g_app_info_get_icon(GAppInfo* appinfo);
     * }
     */
    public static MemorySegment g_app_info_get_icon(MemorySegment appinfo) {
        var mh$ = g_app_info_get_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_launch$MH() {
        return RuntimeHelper.requireNonNull(constants$480.g_app_info_launch$MH,"g_app_info_launch");
    }
    /**
     * {@snippet :
     * gboolean g_app_info_launch(GAppInfo* appinfo, GList* files, GAppLaunchContext* context, GError** error);
     * }
     */
    public static int g_app_info_launch(MemorySegment appinfo, MemorySegment files, MemorySegment context, MemorySegment error) {
        var mh$ = g_app_info_launch$MH();
        try {
            return (int)mh$.invokeExact(appinfo, files, context, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_supports_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$480.g_app_info_supports_uris$MH,"g_app_info_supports_uris");
    }
    /**
     * {@snippet :
     * gboolean g_app_info_supports_uris(GAppInfo* appinfo);
     * }
     */
    public static int g_app_info_supports_uris(MemorySegment appinfo) {
        var mh$ = g_app_info_supports_uris$MH();
        try {
            return (int)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_supports_files$MH() {
        return RuntimeHelper.requireNonNull(constants$480.g_app_info_supports_files$MH,"g_app_info_supports_files");
    }
    /**
     * {@snippet :
     * gboolean g_app_info_supports_files(GAppInfo* appinfo);
     * }
     */
    public static int g_app_info_supports_files(MemorySegment appinfo) {
        var mh$ = g_app_info_supports_files$MH();
        try {
            return (int)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_launch_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$480.g_app_info_launch_uris$MH,"g_app_info_launch_uris");
    }
    /**
     * {@snippet :
     * gboolean g_app_info_launch_uris(GAppInfo* appinfo, GList* uris, GAppLaunchContext* context, GError** error);
     * }
     */
    public static int g_app_info_launch_uris(MemorySegment appinfo, MemorySegment uris, MemorySegment context, MemorySegment error) {
        var mh$ = g_app_info_launch_uris$MH();
        try {
            return (int)mh$.invokeExact(appinfo, uris, context, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_launch_uris_async$MH() {
        return RuntimeHelper.requireNonNull(constants$480.g_app_info_launch_uris_async$MH,"g_app_info_launch_uris_async");
    }
    /**
     * {@snippet :
     * void g_app_info_launch_uris_async(GAppInfo* appinfo, GList* uris, GAppLaunchContext* context, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_app_info_launch_uris_async(MemorySegment appinfo, MemorySegment uris, MemorySegment context, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_app_info_launch_uris_async$MH();
        try {
            mh$.invokeExact(appinfo, uris, context, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_launch_uris_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$481.g_app_info_launch_uris_finish$MH,"g_app_info_launch_uris_finish");
    }
    /**
     * {@snippet :
     * gboolean g_app_info_launch_uris_finish(GAppInfo* appinfo, GAsyncResult* result, GError** error);
     * }
     */
    public static int g_app_info_launch_uris_finish(MemorySegment appinfo, MemorySegment result, MemorySegment error) {
        var mh$ = g_app_info_launch_uris_finish$MH();
        try {
            return (int)mh$.invokeExact(appinfo, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_should_show$MH() {
        return RuntimeHelper.requireNonNull(constants$481.g_app_info_should_show$MH,"g_app_info_should_show");
    }
    /**
     * {@snippet :
     * gboolean g_app_info_should_show(GAppInfo* appinfo);
     * }
     */
    public static int g_app_info_should_show(MemorySegment appinfo) {
        var mh$ = g_app_info_should_show$MH();
        try {
            return (int)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_set_as_default_for_type$MH() {
        return RuntimeHelper.requireNonNull(constants$481.g_app_info_set_as_default_for_type$MH,"g_app_info_set_as_default_for_type");
    }
    /**
     * {@snippet :
     * gboolean g_app_info_set_as_default_for_type(GAppInfo* appinfo, char* content_type, GError** error);
     * }
     */
    public static int g_app_info_set_as_default_for_type(MemorySegment appinfo, MemorySegment content_type, MemorySegment error) {
        var mh$ = g_app_info_set_as_default_for_type$MH();
        try {
            return (int)mh$.invokeExact(appinfo, content_type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_set_as_default_for_extension$MH() {
        return RuntimeHelper.requireNonNull(constants$481.g_app_info_set_as_default_for_extension$MH,"g_app_info_set_as_default_for_extension");
    }
    /**
     * {@snippet :
     * gboolean g_app_info_set_as_default_for_extension(GAppInfo* appinfo, char* extension, GError** error);
     * }
     */
    public static int g_app_info_set_as_default_for_extension(MemorySegment appinfo, MemorySegment extension, MemorySegment error) {
        var mh$ = g_app_info_set_as_default_for_extension$MH();
        try {
            return (int)mh$.invokeExact(appinfo, extension, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_add_supports_type$MH() {
        return RuntimeHelper.requireNonNull(constants$481.g_app_info_add_supports_type$MH,"g_app_info_add_supports_type");
    }
    /**
     * {@snippet :
     * gboolean g_app_info_add_supports_type(GAppInfo* appinfo, char* content_type, GError** error);
     * }
     */
    public static int g_app_info_add_supports_type(MemorySegment appinfo, MemorySegment content_type, MemorySegment error) {
        var mh$ = g_app_info_add_supports_type$MH();
        try {
            return (int)mh$.invokeExact(appinfo, content_type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_can_remove_supports_type$MH() {
        return RuntimeHelper.requireNonNull(constants$481.g_app_info_can_remove_supports_type$MH,"g_app_info_can_remove_supports_type");
    }
    /**
     * {@snippet :
     * gboolean g_app_info_can_remove_supports_type(GAppInfo* appinfo);
     * }
     */
    public static int g_app_info_can_remove_supports_type(MemorySegment appinfo) {
        var mh$ = g_app_info_can_remove_supports_type$MH();
        try {
            return (int)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_remove_supports_type$MH() {
        return RuntimeHelper.requireNonNull(constants$482.g_app_info_remove_supports_type$MH,"g_app_info_remove_supports_type");
    }
    /**
     * {@snippet :
     * gboolean g_app_info_remove_supports_type(GAppInfo* appinfo, char* content_type, GError** error);
     * }
     */
    public static int g_app_info_remove_supports_type(MemorySegment appinfo, MemorySegment content_type, MemorySegment error) {
        var mh$ = g_app_info_remove_supports_type$MH();
        try {
            return (int)mh$.invokeExact(appinfo, content_type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_supported_types$MH() {
        return RuntimeHelper.requireNonNull(constants$482.g_app_info_get_supported_types$MH,"g_app_info_get_supported_types");
    }
    /**
     * {@snippet :
     * char** g_app_info_get_supported_types(GAppInfo* appinfo);
     * }
     */
    public static MemorySegment g_app_info_get_supported_types(MemorySegment appinfo) {
        var mh$ = g_app_info_get_supported_types$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_can_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$482.g_app_info_can_delete$MH,"g_app_info_can_delete");
    }
    /**
     * {@snippet :
     * gboolean g_app_info_can_delete(GAppInfo* appinfo);
     * }
     */
    public static int g_app_info_can_delete(MemorySegment appinfo) {
        var mh$ = g_app_info_can_delete$MH();
        try {
            return (int)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$482.g_app_info_delete$MH,"g_app_info_delete");
    }
    /**
     * {@snippet :
     * gboolean g_app_info_delete(GAppInfo* appinfo);
     * }
     */
    public static int g_app_info_delete(MemorySegment appinfo) {
        var mh$ = g_app_info_delete$MH();
        try {
            return (int)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_set_as_last_used_for_type$MH() {
        return RuntimeHelper.requireNonNull(constants$482.g_app_info_set_as_last_used_for_type$MH,"g_app_info_set_as_last_used_for_type");
    }
    /**
     * {@snippet :
     * gboolean g_app_info_set_as_last_used_for_type(GAppInfo* appinfo, char* content_type, GError** error);
     * }
     */
    public static int g_app_info_set_as_last_used_for_type(MemorySegment appinfo, MemorySegment content_type, MemorySegment error) {
        var mh$ = g_app_info_set_as_last_used_for_type$MH();
        try {
            return (int)mh$.invokeExact(appinfo, content_type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_all$MH() {
        return RuntimeHelper.requireNonNull(constants$482.g_app_info_get_all$MH,"g_app_info_get_all");
    }
    /**
     * {@snippet :
     * GList* g_app_info_get_all();
     * }
     */
    public static MemorySegment g_app_info_get_all() {
        var mh$ = g_app_info_get_all$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_all_for_type$MH() {
        return RuntimeHelper.requireNonNull(constants$483.g_app_info_get_all_for_type$MH,"g_app_info_get_all_for_type");
    }
    /**
     * {@snippet :
     * GList* g_app_info_get_all_for_type(char* content_type);
     * }
     */
    public static MemorySegment g_app_info_get_all_for_type(MemorySegment content_type) {
        var mh$ = g_app_info_get_all_for_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(content_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_recommended_for_type$MH() {
        return RuntimeHelper.requireNonNull(constants$483.g_app_info_get_recommended_for_type$MH,"g_app_info_get_recommended_for_type");
    }
    /**
     * {@snippet :
     * GList* g_app_info_get_recommended_for_type(const gchar* content_type);
     * }
     */
    public static MemorySegment g_app_info_get_recommended_for_type(MemorySegment content_type) {
        var mh$ = g_app_info_get_recommended_for_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(content_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_fallback_for_type$MH() {
        return RuntimeHelper.requireNonNull(constants$483.g_app_info_get_fallback_for_type$MH,"g_app_info_get_fallback_for_type");
    }
    /**
     * {@snippet :
     * GList* g_app_info_get_fallback_for_type(const gchar* content_type);
     * }
     */
    public static MemorySegment g_app_info_get_fallback_for_type(MemorySegment content_type) {
        var mh$ = g_app_info_get_fallback_for_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(content_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_reset_type_associations$MH() {
        return RuntimeHelper.requireNonNull(constants$483.g_app_info_reset_type_associations$MH,"g_app_info_reset_type_associations");
    }
    /**
     * {@snippet :
     * void g_app_info_reset_type_associations(char* content_type);
     * }
     */
    public static void g_app_info_reset_type_associations(MemorySegment content_type) {
        var mh$ = g_app_info_reset_type_associations$MH();
        try {
            mh$.invokeExact(content_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_default_for_type$MH() {
        return RuntimeHelper.requireNonNull(constants$483.g_app_info_get_default_for_type$MH,"g_app_info_get_default_for_type");
    }
    /**
     * {@snippet :
     * GAppInfo* g_app_info_get_default_for_type(char* content_type, gboolean must_support_uris);
     * }
     */
    public static MemorySegment g_app_info_get_default_for_type(MemorySegment content_type, int must_support_uris) {
        var mh$ = g_app_info_get_default_for_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(content_type, must_support_uris);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_default_for_type_async$MH() {
        return RuntimeHelper.requireNonNull(constants$483.g_app_info_get_default_for_type_async$MH,"g_app_info_get_default_for_type_async");
    }
    /**
     * {@snippet :
     * void g_app_info_get_default_for_type_async(char* content_type, gboolean must_support_uris, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_app_info_get_default_for_type_async(MemorySegment content_type, int must_support_uris, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_app_info_get_default_for_type_async$MH();
        try {
            mh$.invokeExact(content_type, must_support_uris, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_default_for_type_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$484.g_app_info_get_default_for_type_finish$MH,"g_app_info_get_default_for_type_finish");
    }
    /**
     * {@snippet :
     * GAppInfo* g_app_info_get_default_for_type_finish(GAsyncResult* result, GError** error);
     * }
     */
    public static MemorySegment g_app_info_get_default_for_type_finish(MemorySegment result, MemorySegment error) {
        var mh$ = g_app_info_get_default_for_type_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_default_for_uri_scheme$MH() {
        return RuntimeHelper.requireNonNull(constants$484.g_app_info_get_default_for_uri_scheme$MH,"g_app_info_get_default_for_uri_scheme");
    }
    /**
     * {@snippet :
     * GAppInfo* g_app_info_get_default_for_uri_scheme(char* uri_scheme);
     * }
     */
    public static MemorySegment g_app_info_get_default_for_uri_scheme(MemorySegment uri_scheme) {
        var mh$ = g_app_info_get_default_for_uri_scheme$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(uri_scheme);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_default_for_uri_scheme_async$MH() {
        return RuntimeHelper.requireNonNull(constants$484.g_app_info_get_default_for_uri_scheme_async$MH,"g_app_info_get_default_for_uri_scheme_async");
    }
    /**
     * {@snippet :
     * void g_app_info_get_default_for_uri_scheme_async(char* uri_scheme, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_app_info_get_default_for_uri_scheme_async(MemorySegment uri_scheme, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_app_info_get_default_for_uri_scheme_async$MH();
        try {
            mh$.invokeExact(uri_scheme, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_default_for_uri_scheme_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$484.g_app_info_get_default_for_uri_scheme_finish$MH,"g_app_info_get_default_for_uri_scheme_finish");
    }
    /**
     * {@snippet :
     * GAppInfo* g_app_info_get_default_for_uri_scheme_finish(GAsyncResult* result, GError** error);
     * }
     */
    public static MemorySegment g_app_info_get_default_for_uri_scheme_finish(MemorySegment result, MemorySegment error) {
        var mh$ = g_app_info_get_default_for_uri_scheme_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_launch_default_for_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$484.g_app_info_launch_default_for_uri$MH,"g_app_info_launch_default_for_uri");
    }
    /**
     * {@snippet :
     * gboolean g_app_info_launch_default_for_uri(char* uri, GAppLaunchContext* context, GError** error);
     * }
     */
    public static int g_app_info_launch_default_for_uri(MemorySegment uri, MemorySegment context, MemorySegment error) {
        var mh$ = g_app_info_launch_default_for_uri$MH();
        try {
            return (int)mh$.invokeExact(uri, context, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_launch_default_for_uri_async$MH() {
        return RuntimeHelper.requireNonNull(constants$484.g_app_info_launch_default_for_uri_async$MH,"g_app_info_launch_default_for_uri_async");
    }
    /**
     * {@snippet :
     * void g_app_info_launch_default_for_uri_async(char* uri, GAppLaunchContext* context, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_app_info_launch_default_for_uri_async(MemorySegment uri, MemorySegment context, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_app_info_launch_default_for_uri_async$MH();
        try {
            mh$.invokeExact(uri, context, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_launch_default_for_uri_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$485.g_app_info_launch_default_for_uri_finish$MH,"g_app_info_launch_default_for_uri_finish");
    }
    /**
     * {@snippet :
     * gboolean g_app_info_launch_default_for_uri_finish(GAsyncResult* result, GError** error);
     * }
     */
    public static int g_app_info_launch_default_for_uri_finish(MemorySegment result, MemorySegment error) {
        var mh$ = g_app_info_launch_default_for_uri_finish$MH();
        try {
            return (int)mh$.invokeExact(result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_launch_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$485.g_app_launch_context_get_type$MH,"g_app_launch_context_get_type");
    }
    /**
     * {@snippet :
     * GType g_app_launch_context_get_type();
     * }
     */
    public static long g_app_launch_context_get_type() {
        var mh$ = g_app_launch_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_launch_context_new$MH() {
        return RuntimeHelper.requireNonNull(constants$485.g_app_launch_context_new$MH,"g_app_launch_context_new");
    }
    /**
     * {@snippet :
     * GAppLaunchContext* g_app_launch_context_new();
     * }
     */
    public static MemorySegment g_app_launch_context_new() {
        var mh$ = g_app_launch_context_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_launch_context_setenv$MH() {
        return RuntimeHelper.requireNonNull(constants$485.g_app_launch_context_setenv$MH,"g_app_launch_context_setenv");
    }
    /**
     * {@snippet :
     * void g_app_launch_context_setenv(GAppLaunchContext* context, char* variable, char* value);
     * }
     */
    public static void g_app_launch_context_setenv(MemorySegment context, MemorySegment variable, MemorySegment value) {
        var mh$ = g_app_launch_context_setenv$MH();
        try {
            mh$.invokeExact(context, variable, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_launch_context_unsetenv$MH() {
        return RuntimeHelper.requireNonNull(constants$485.g_app_launch_context_unsetenv$MH,"g_app_launch_context_unsetenv");
    }
    /**
     * {@snippet :
     * void g_app_launch_context_unsetenv(GAppLaunchContext* context, char* variable);
     * }
     */
    public static void g_app_launch_context_unsetenv(MemorySegment context, MemorySegment variable) {
        var mh$ = g_app_launch_context_unsetenv$MH();
        try {
            mh$.invokeExact(context, variable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_launch_context_get_environment$MH() {
        return RuntimeHelper.requireNonNull(constants$485.g_app_launch_context_get_environment$MH,"g_app_launch_context_get_environment");
    }
    /**
     * {@snippet :
     * char** g_app_launch_context_get_environment(GAppLaunchContext* context);
     * }
     */
    public static MemorySegment g_app_launch_context_get_environment(MemorySegment context) {
        var mh$ = g_app_launch_context_get_environment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_launch_context_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$486.g_app_launch_context_get_display$MH,"g_app_launch_context_get_display");
    }
    /**
     * {@snippet :
     * char* g_app_launch_context_get_display(GAppLaunchContext* context, GAppInfo* info, GList* files);
     * }
     */
    public static MemorySegment g_app_launch_context_get_display(MemorySegment context, MemorySegment info, MemorySegment files) {
        var mh$ = g_app_launch_context_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, info, files);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_launch_context_get_startup_notify_id$MH() {
        return RuntimeHelper.requireNonNull(constants$486.g_app_launch_context_get_startup_notify_id$MH,"g_app_launch_context_get_startup_notify_id");
    }
    /**
     * {@snippet :
     * char* g_app_launch_context_get_startup_notify_id(GAppLaunchContext* context, GAppInfo* info, GList* files);
     * }
     */
    public static MemorySegment g_app_launch_context_get_startup_notify_id(MemorySegment context, MemorySegment info, MemorySegment files) {
        var mh$ = g_app_launch_context_get_startup_notify_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, info, files);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_launch_context_launch_failed$MH() {
        return RuntimeHelper.requireNonNull(constants$486.g_app_launch_context_launch_failed$MH,"g_app_launch_context_launch_failed");
    }
    /**
     * {@snippet :
     * void g_app_launch_context_launch_failed(GAppLaunchContext* context, char* startup_notify_id);
     * }
     */
    public static void g_app_launch_context_launch_failed(MemorySegment context, MemorySegment startup_notify_id) {
        var mh$ = g_app_launch_context_launch_failed$MH();
        try {
            mh$.invokeExact(context, startup_notify_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_monitor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$486.g_app_info_monitor_get_type$MH,"g_app_info_monitor_get_type");
    }
    /**
     * {@snippet :
     * GType g_app_info_monitor_get_type();
     * }
     */
    public static long g_app_info_monitor_get_type() {
        var mh$ = g_app_info_monitor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_monitor_get$MH() {
        return RuntimeHelper.requireNonNull(constants$486.g_app_info_monitor_get$MH,"g_app_info_monitor_get");
    }
    /**
     * {@snippet :
     * GAppInfoMonitor* g_app_info_monitor_get();
     * }
     */
    public static MemorySegment g_app_info_monitor_get() {
        var mh$ = g_app_info_monitor_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$486.g_application_get_type$MH,"g_application_get_type");
    }
    /**
     * {@snippet :
     * GType g_application_get_type();
     * }
     */
    public static long g_application_get_type() {
        var mh$ = g_application_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_id_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$487.g_application_id_is_valid$MH,"g_application_id_is_valid");
    }
    /**
     * {@snippet :
     * gboolean g_application_id_is_valid(const gchar* application_id);
     * }
     */
    public static int g_application_id_is_valid(MemorySegment application_id) {
        var mh$ = g_application_id_is_valid$MH();
        try {
            return (int)mh$.invokeExact(application_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_new$MH() {
        return RuntimeHelper.requireNonNull(constants$487.g_application_new$MH,"g_application_new");
    }
    /**
     * {@snippet :
     * GApplication* g_application_new(const gchar* application_id, GApplicationFlags flags);
     * }
     */
    public static MemorySegment g_application_new(MemorySegment application_id, int flags) {
        var mh$ = g_application_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application_id, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_application_id$MH() {
        return RuntimeHelper.requireNonNull(constants$487.g_application_get_application_id$MH,"g_application_get_application_id");
    }
    /**
     * {@snippet :
     * const gchar* g_application_get_application_id(GApplication* application);
     * }
     */
    public static MemorySegment g_application_get_application_id(MemorySegment application) {
        var mh$ = g_application_get_application_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_set_application_id$MH() {
        return RuntimeHelper.requireNonNull(constants$487.g_application_set_application_id$MH,"g_application_set_application_id");
    }
    /**
     * {@snippet :
     * void g_application_set_application_id(GApplication* application, const gchar* application_id);
     * }
     */
    public static void g_application_set_application_id(MemorySegment application, MemorySegment application_id) {
        var mh$ = g_application_set_application_id$MH();
        try {
            mh$.invokeExact(application, application_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_dbus_connection$MH() {
        return RuntimeHelper.requireNonNull(constants$487.g_application_get_dbus_connection$MH,"g_application_get_dbus_connection");
    }
    /**
     * {@snippet :
     * GDBusConnection* g_application_get_dbus_connection(GApplication* application);
     * }
     */
    public static MemorySegment g_application_get_dbus_connection(MemorySegment application) {
        var mh$ = g_application_get_dbus_connection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_dbus_object_path$MH() {
        return RuntimeHelper.requireNonNull(constants$487.g_application_get_dbus_object_path$MH,"g_application_get_dbus_object_path");
    }
    /**
     * {@snippet :
     * const gchar* g_application_get_dbus_object_path(GApplication* application);
     * }
     */
    public static MemorySegment g_application_get_dbus_object_path(MemorySegment application) {
        var mh$ = g_application_get_dbus_object_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_inactivity_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$488.g_application_get_inactivity_timeout$MH,"g_application_get_inactivity_timeout");
    }
    /**
     * {@snippet :
     * guint g_application_get_inactivity_timeout(GApplication* application);
     * }
     */
    public static int g_application_get_inactivity_timeout(MemorySegment application) {
        var mh$ = g_application_get_inactivity_timeout$MH();
        try {
            return (int)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_set_inactivity_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$488.g_application_set_inactivity_timeout$MH,"g_application_set_inactivity_timeout");
    }
    /**
     * {@snippet :
     * void g_application_set_inactivity_timeout(GApplication* application, guint inactivity_timeout);
     * }
     */
    public static void g_application_set_inactivity_timeout(MemorySegment application, int inactivity_timeout) {
        var mh$ = g_application_set_inactivity_timeout$MH();
        try {
            mh$.invokeExact(application, inactivity_timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$488.g_application_get_flags$MH,"g_application_get_flags");
    }
    /**
     * {@snippet :
     * GApplicationFlags g_application_get_flags(GApplication* application);
     * }
     */
    public static int g_application_get_flags(MemorySegment application) {
        var mh$ = g_application_get_flags$MH();
        try {
            return (int)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$488.g_application_set_flags$MH,"g_application_set_flags");
    }
    /**
     * {@snippet :
     * void g_application_set_flags(GApplication* application, GApplicationFlags flags);
     * }
     */
    public static void g_application_set_flags(MemorySegment application, int flags) {
        var mh$ = g_application_set_flags$MH();
        try {
            mh$.invokeExact(application, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_resource_base_path$MH() {
        return RuntimeHelper.requireNonNull(constants$488.g_application_get_resource_base_path$MH,"g_application_get_resource_base_path");
    }
    /**
     * {@snippet :
     * const gchar* g_application_get_resource_base_path(GApplication* application);
     * }
     */
    public static MemorySegment g_application_get_resource_base_path(MemorySegment application) {
        var mh$ = g_application_get_resource_base_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_set_resource_base_path$MH() {
        return RuntimeHelper.requireNonNull(constants$488.g_application_set_resource_base_path$MH,"g_application_set_resource_base_path");
    }
    /**
     * {@snippet :
     * void g_application_set_resource_base_path(GApplication* application, const gchar* resource_path);
     * }
     */
    public static void g_application_set_resource_base_path(MemorySegment application, MemorySegment resource_path) {
        var mh$ = g_application_set_resource_base_path$MH();
        try {
            mh$.invokeExact(application, resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_set_action_group$MH() {
        return RuntimeHelper.requireNonNull(constants$489.g_application_set_action_group$MH,"g_application_set_action_group");
    }
    /**
     * {@snippet :
     * void g_application_set_action_group(GApplication* application, GActionGroup* action_group);
     * }
     */
    public static void g_application_set_action_group(MemorySegment application, MemorySegment action_group) {
        var mh$ = g_application_set_action_group$MH();
        try {
            mh$.invokeExact(application, action_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_add_main_option_entries$MH() {
        return RuntimeHelper.requireNonNull(constants$489.g_application_add_main_option_entries$MH,"g_application_add_main_option_entries");
    }
    /**
     * {@snippet :
     * void g_application_add_main_option_entries(GApplication* application, const GOptionEntry* entries);
     * }
     */
    public static void g_application_add_main_option_entries(MemorySegment application, MemorySegment entries) {
        var mh$ = g_application_add_main_option_entries$MH();
        try {
            mh$.invokeExact(application, entries);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_add_main_option$MH() {
        return RuntimeHelper.requireNonNull(constants$489.g_application_add_main_option$MH,"g_application_add_main_option");
    }
    /**
     * {@snippet :
     * void g_application_add_main_option(GApplication* application, char* long_name, char short_name, GOptionFlags flags, GOptionArg arg, char* description, char* arg_description);
     * }
     */
    public static void g_application_add_main_option(MemorySegment application, MemorySegment long_name, byte short_name, int flags, int arg, MemorySegment description, MemorySegment arg_description) {
        var mh$ = g_application_add_main_option$MH();
        try {
            mh$.invokeExact(application, long_name, short_name, flags, arg, description, arg_description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_add_option_group$MH() {
        return RuntimeHelper.requireNonNull(constants$489.g_application_add_option_group$MH,"g_application_add_option_group");
    }
    /**
     * {@snippet :
     * void g_application_add_option_group(GApplication* application, GOptionGroup* group);
     * }
     */
    public static void g_application_add_option_group(MemorySegment application, MemorySegment group) {
        var mh$ = g_application_add_option_group$MH();
        try {
            mh$.invokeExact(application, group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_set_option_context_parameter_string$MH() {
        return RuntimeHelper.requireNonNull(constants$489.g_application_set_option_context_parameter_string$MH,"g_application_set_option_context_parameter_string");
    }
    /**
     * {@snippet :
     * void g_application_set_option_context_parameter_string(GApplication* application, const gchar* parameter_string);
     * }
     */
    public static void g_application_set_option_context_parameter_string(MemorySegment application, MemorySegment parameter_string) {
        var mh$ = g_application_set_option_context_parameter_string$MH();
        try {
            mh$.invokeExact(application, parameter_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_set_option_context_summary$MH() {
        return RuntimeHelper.requireNonNull(constants$489.g_application_set_option_context_summary$MH,"g_application_set_option_context_summary");
    }
    /**
     * {@snippet :
     * void g_application_set_option_context_summary(GApplication* application, const gchar* summary);
     * }
     */
    public static void g_application_set_option_context_summary(MemorySegment application, MemorySegment summary) {
        var mh$ = g_application_set_option_context_summary$MH();
        try {
            mh$.invokeExact(application, summary);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_set_option_context_description$MH() {
        return RuntimeHelper.requireNonNull(constants$490.g_application_set_option_context_description$MH,"g_application_set_option_context_description");
    }
    /**
     * {@snippet :
     * void g_application_set_option_context_description(GApplication* application, const gchar* description);
     * }
     */
    public static void g_application_set_option_context_description(MemorySegment application, MemorySegment description) {
        var mh$ = g_application_set_option_context_description$MH();
        try {
            mh$.invokeExact(application, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_is_registered$MH() {
        return RuntimeHelper.requireNonNull(constants$490.g_application_get_is_registered$MH,"g_application_get_is_registered");
    }
    /**
     * {@snippet :
     * gboolean g_application_get_is_registered(GApplication* application);
     * }
     */
    public static int g_application_get_is_registered(MemorySegment application) {
        var mh$ = g_application_get_is_registered$MH();
        try {
            return (int)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_is_remote$MH() {
        return RuntimeHelper.requireNonNull(constants$490.g_application_get_is_remote$MH,"g_application_get_is_remote");
    }
    /**
     * {@snippet :
     * gboolean g_application_get_is_remote(GApplication* application);
     * }
     */
    public static int g_application_get_is_remote(MemorySegment application) {
        var mh$ = g_application_get_is_remote$MH();
        try {
            return (int)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_register$MH() {
        return RuntimeHelper.requireNonNull(constants$490.g_application_register$MH,"g_application_register");
    }
    /**
     * {@snippet :
     * gboolean g_application_register(GApplication* application, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_application_register(MemorySegment application, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_application_register$MH();
        try {
            return (int)mh$.invokeExact(application, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_hold$MH() {
        return RuntimeHelper.requireNonNull(constants$490.g_application_hold$MH,"g_application_hold");
    }
    /**
     * {@snippet :
     * void g_application_hold(GApplication* application);
     * }
     */
    public static void g_application_hold(MemorySegment application) {
        var mh$ = g_application_hold$MH();
        try {
            mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_release$MH() {
        return RuntimeHelper.requireNonNull(constants$490.g_application_release$MH,"g_application_release");
    }
    /**
     * {@snippet :
     * void g_application_release(GApplication* application);
     * }
     */
    public static void g_application_release(MemorySegment application) {
        var mh$ = g_application_release$MH();
        try {
            mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$491.g_application_activate$MH,"g_application_activate");
    }
    /**
     * {@snippet :
     * void g_application_activate(GApplication* application);
     * }
     */
    public static void g_application_activate(MemorySegment application) {
        var mh$ = g_application_activate$MH();
        try {
            mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_open$MH() {
        return RuntimeHelper.requireNonNull(constants$491.g_application_open$MH,"g_application_open");
    }
    /**
     * {@snippet :
     * void g_application_open(GApplication* application, GFile** files, gint n_files, const gchar* hint);
     * }
     */
    public static void g_application_open(MemorySegment application, MemorySegment files, int n_files, MemorySegment hint) {
        var mh$ = g_application_open$MH();
        try {
            mh$.invokeExact(application, files, n_files, hint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_run$MH() {
        return RuntimeHelper.requireNonNull(constants$491.g_application_run$MH,"g_application_run");
    }
    /**
     * {@snippet :
     * int g_application_run(GApplication* application, int argc, char** argv);
     * }
     */
    public static int g_application_run(MemorySegment application, int argc, MemorySegment argv) {
        var mh$ = g_application_run$MH();
        try {
            return (int)mh$.invokeExact(application, argc, argv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_quit$MH() {
        return RuntimeHelper.requireNonNull(constants$491.g_application_quit$MH,"g_application_quit");
    }
    /**
     * {@snippet :
     * void g_application_quit(GApplication* application);
     * }
     */
    public static void g_application_quit(MemorySegment application) {
        var mh$ = g_application_quit$MH();
        try {
            mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$491.g_application_get_default$MH,"g_application_get_default");
    }
    /**
     * {@snippet :
     * GApplication* g_application_get_default();
     * }
     */
    public static MemorySegment g_application_get_default() {
        var mh$ = g_application_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_set_default$MH() {
        return RuntimeHelper.requireNonNull(constants$491.g_application_set_default$MH,"g_application_set_default");
    }
    /**
     * {@snippet :
     * void g_application_set_default(GApplication* application);
     * }
     */
    public static void g_application_set_default(MemorySegment application) {
        var mh$ = g_application_set_default$MH();
        try {
            mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_mark_busy$MH() {
        return RuntimeHelper.requireNonNull(constants$492.g_application_mark_busy$MH,"g_application_mark_busy");
    }
    /**
     * {@snippet :
     * void g_application_mark_busy(GApplication* application);
     * }
     */
    public static void g_application_mark_busy(MemorySegment application) {
        var mh$ = g_application_mark_busy$MH();
        try {
            mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_unmark_busy$MH() {
        return RuntimeHelper.requireNonNull(constants$492.g_application_unmark_busy$MH,"g_application_unmark_busy");
    }
    /**
     * {@snippet :
     * void g_application_unmark_busy(GApplication* application);
     * }
     */
    public static void g_application_unmark_busy(MemorySegment application) {
        var mh$ = g_application_unmark_busy$MH();
        try {
            mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_is_busy$MH() {
        return RuntimeHelper.requireNonNull(constants$492.g_application_get_is_busy$MH,"g_application_get_is_busy");
    }
    /**
     * {@snippet :
     * gboolean g_application_get_is_busy(GApplication* application);
     * }
     */
    public static int g_application_get_is_busy(MemorySegment application) {
        var mh$ = g_application_get_is_busy$MH();
        try {
            return (int)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_send_notification$MH() {
        return RuntimeHelper.requireNonNull(constants$492.g_application_send_notification$MH,"g_application_send_notification");
    }
    /**
     * {@snippet :
     * void g_application_send_notification(GApplication* application, const gchar* id, GNotification* notification);
     * }
     */
    public static void g_application_send_notification(MemorySegment application, MemorySegment id, MemorySegment notification) {
        var mh$ = g_application_send_notification$MH();
        try {
            mh$.invokeExact(application, id, notification);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_withdraw_notification$MH() {
        return RuntimeHelper.requireNonNull(constants$492.g_application_withdraw_notification$MH,"g_application_withdraw_notification");
    }
    /**
     * {@snippet :
     * void g_application_withdraw_notification(GApplication* application, const gchar* id);
     * }
     */
    public static void g_application_withdraw_notification(MemorySegment application, MemorySegment id) {
        var mh$ = g_application_withdraw_notification$MH();
        try {
            mh$.invokeExact(application, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_bind_busy_property$MH() {
        return RuntimeHelper.requireNonNull(constants$492.g_application_bind_busy_property$MH,"g_application_bind_busy_property");
    }
    /**
     * {@snippet :
     * void g_application_bind_busy_property(GApplication* application, gpointer object, const gchar* property);
     * }
     */
    public static void g_application_bind_busy_property(MemorySegment application, MemorySegment object, MemorySegment property) {
        var mh$ = g_application_bind_busy_property$MH();
        try {
            mh$.invokeExact(application, object, property);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_unbind_busy_property$MH() {
        return RuntimeHelper.requireNonNull(constants$493.g_application_unbind_busy_property$MH,"g_application_unbind_busy_property");
    }
    /**
     * {@snippet :
     * void g_application_unbind_busy_property(GApplication* application, gpointer object, const gchar* property);
     * }
     */
    public static void g_application_unbind_busy_property(MemorySegment application, MemorySegment object, MemorySegment property) {
        var mh$ = g_application_unbind_busy_property$MH();
        try {
            mh$.invokeExact(application, object, property);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$493.g_application_command_line_get_type$MH,"g_application_command_line_get_type");
    }
    /**
     * {@snippet :
     * GType g_application_command_line_get_type();
     * }
     */
    public static long g_application_command_line_get_type() {
        var mh$ = g_application_command_line_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_get_arguments$MH() {
        return RuntimeHelper.requireNonNull(constants$493.g_application_command_line_get_arguments$MH,"g_application_command_line_get_arguments");
    }
    /**
     * {@snippet :
     * gchar** g_application_command_line_get_arguments(GApplicationCommandLine* cmdline, int* argc);
     * }
     */
    public static MemorySegment g_application_command_line_get_arguments(MemorySegment cmdline, MemorySegment argc) {
        var mh$ = g_application_command_line_get_arguments$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cmdline, argc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_get_options_dict$MH() {
        return RuntimeHelper.requireNonNull(constants$493.g_application_command_line_get_options_dict$MH,"g_application_command_line_get_options_dict");
    }
    /**
     * {@snippet :
     * GVariantDict* g_application_command_line_get_options_dict(GApplicationCommandLine* cmdline);
     * }
     */
    public static MemorySegment g_application_command_line_get_options_dict(MemorySegment cmdline) {
        var mh$ = g_application_command_line_get_options_dict$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cmdline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_get_stdin$MH() {
        return RuntimeHelper.requireNonNull(constants$493.g_application_command_line_get_stdin$MH,"g_application_command_line_get_stdin");
    }
    /**
     * {@snippet :
     * GInputStream* g_application_command_line_get_stdin(GApplicationCommandLine* cmdline);
     * }
     */
    public static MemorySegment g_application_command_line_get_stdin(MemorySegment cmdline) {
        var mh$ = g_application_command_line_get_stdin$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cmdline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_get_environ$MH() {
        return RuntimeHelper.requireNonNull(constants$493.g_application_command_line_get_environ$MH,"g_application_command_line_get_environ");
    }
    /**
     * {@snippet :
     * const gchar** g_application_command_line_get_environ(GApplicationCommandLine* cmdline);
     * }
     */
    public static MemorySegment g_application_command_line_get_environ(MemorySegment cmdline) {
        var mh$ = g_application_command_line_get_environ$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cmdline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_getenv$MH() {
        return RuntimeHelper.requireNonNull(constants$494.g_application_command_line_getenv$MH,"g_application_command_line_getenv");
    }
    /**
     * {@snippet :
     * const gchar* g_application_command_line_getenv(GApplicationCommandLine* cmdline, const gchar* name);
     * }
     */
    public static MemorySegment g_application_command_line_getenv(MemorySegment cmdline, MemorySegment name) {
        var mh$ = g_application_command_line_getenv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cmdline, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_get_cwd$MH() {
        return RuntimeHelper.requireNonNull(constants$494.g_application_command_line_get_cwd$MH,"g_application_command_line_get_cwd");
    }
    /**
     * {@snippet :
     * const gchar* g_application_command_line_get_cwd(GApplicationCommandLine* cmdline);
     * }
     */
    public static MemorySegment g_application_command_line_get_cwd(MemorySegment cmdline) {
        var mh$ = g_application_command_line_get_cwd$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cmdline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_get_is_remote$MH() {
        return RuntimeHelper.requireNonNull(constants$494.g_application_command_line_get_is_remote$MH,"g_application_command_line_get_is_remote");
    }
    /**
     * {@snippet :
     * gboolean g_application_command_line_get_is_remote(GApplicationCommandLine* cmdline);
     * }
     */
    public static int g_application_command_line_get_is_remote(MemorySegment cmdline) {
        var mh$ = g_application_command_line_get_is_remote$MH();
        try {
            return (int)mh$.invokeExact(cmdline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_print$MH() {
        return RuntimeHelper.requireNonNull(constants$494.g_application_command_line_print$MH,"g_application_command_line_print");
    }
    /**
     * {@snippet :
     * void g_application_command_line_print(GApplicationCommandLine* cmdline, const gchar* format,...);
     * }
     */
    public static void g_application_command_line_print(MemorySegment cmdline, MemorySegment format, Object... x2) {
        var mh$ = g_application_command_line_print$MH();
        try {
            mh$.invokeExact(cmdline, format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_printerr$MH() {
        return RuntimeHelper.requireNonNull(constants$494.g_application_command_line_printerr$MH,"g_application_command_line_printerr");
    }
    /**
     * {@snippet :
     * void g_application_command_line_printerr(GApplicationCommandLine* cmdline, const gchar* format,...);
     * }
     */
    public static void g_application_command_line_printerr(MemorySegment cmdline, MemorySegment format, Object... x2) {
        var mh$ = g_application_command_line_printerr$MH();
        try {
            mh$.invokeExact(cmdline, format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_get_exit_status$MH() {
        return RuntimeHelper.requireNonNull(constants$494.g_application_command_line_get_exit_status$MH,"g_application_command_line_get_exit_status");
    }
    /**
     * {@snippet :
     * int g_application_command_line_get_exit_status(GApplicationCommandLine* cmdline);
     * }
     */
    public static int g_application_command_line_get_exit_status(MemorySegment cmdline) {
        var mh$ = g_application_command_line_get_exit_status$MH();
        try {
            return (int)mh$.invokeExact(cmdline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_set_exit_status$MH() {
        return RuntimeHelper.requireNonNull(constants$495.g_application_command_line_set_exit_status$MH,"g_application_command_line_set_exit_status");
    }
    /**
     * {@snippet :
     * void g_application_command_line_set_exit_status(GApplicationCommandLine* cmdline, int exit_status);
     * }
     */
    public static void g_application_command_line_set_exit_status(MemorySegment cmdline, int exit_status) {
        var mh$ = g_application_command_line_set_exit_status$MH();
        try {
            mh$.invokeExact(cmdline, exit_status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_get_platform_data$MH() {
        return RuntimeHelper.requireNonNull(constants$495.g_application_command_line_get_platform_data$MH,"g_application_command_line_get_platform_data");
    }
    /**
     * {@snippet :
     * GVariant* g_application_command_line_get_platform_data(GApplicationCommandLine* cmdline);
     * }
     */
    public static MemorySegment g_application_command_line_get_platform_data(MemorySegment cmdline) {
        var mh$ = g_application_command_line_get_platform_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cmdline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_create_file_for_arg$MH() {
        return RuntimeHelper.requireNonNull(constants$495.g_application_command_line_create_file_for_arg$MH,"g_application_command_line_create_file_for_arg");
    }
    /**
     * {@snippet :
     * GFile* g_application_command_line_create_file_for_arg(GApplicationCommandLine* cmdline, const gchar* arg);
     * }
     */
    public static MemorySegment g_application_command_line_create_file_for_arg(MemorySegment cmdline, MemorySegment arg) {
        var mh$ = g_application_command_line_create_file_for_arg$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cmdline, arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_initable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$495.g_initable_get_type$MH,"g_initable_get_type");
    }
    /**
     * {@snippet :
     * GType g_initable_get_type();
     * }
     */
    public static long g_initable_get_type() {
        var mh$ = g_initable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_initable_init$MH() {
        return RuntimeHelper.requireNonNull(constants$495.g_initable_init$MH,"g_initable_init");
    }
    /**
     * {@snippet :
     * gboolean g_initable_init(GInitable* initable, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_initable_init(MemorySegment initable, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_initable_init$MH();
        try {
            return (int)mh$.invokeExact(initable, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_initable_new$MH() {
        return RuntimeHelper.requireNonNull(constants$495.g_initable_new$MH,"g_initable_new");
    }
    /**
     * {@snippet :
     * gpointer g_initable_new(GType object_type, GCancellable* cancellable, GError** error, const gchar* first_property_name,...);
     * }
     */
    public static MemorySegment g_initable_new(long object_type, MemorySegment cancellable, MemorySegment error, MemorySegment first_property_name, Object... x4) {
        var mh$ = g_initable_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object_type, cancellable, error, first_property_name, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_initable_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$496.g_initable_newv$MH,"g_initable_newv");
    }
    /**
     * {@snippet :
     * gpointer g_initable_newv(GType object_type, guint n_parameters, GParameter* parameters, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_initable_newv(long object_type, int n_parameters, MemorySegment parameters, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_initable_newv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object_type, n_parameters, parameters, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_initable_new_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$496.g_initable_new_valist$MH,"g_initable_new_valist");
    }
    /**
     * {@snippet :
     * GObject* g_initable_new_valist(GType object_type, const gchar* first_property_name, va_list var_args, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_initable_new_valist(long object_type, MemorySegment first_property_name, MemorySegment var_args, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_initable_new_valist$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object_type, first_property_name, var_args, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_initable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$496.g_async_initable_get_type$MH,"g_async_initable_get_type");
    }
    /**
     * {@snippet :
     * GType g_async_initable_get_type();
     * }
     */
    public static long g_async_initable_get_type() {
        var mh$ = g_async_initable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_initable_init_async$MH() {
        return RuntimeHelper.requireNonNull(constants$496.g_async_initable_init_async$MH,"g_async_initable_init_async");
    }
    /**
     * {@snippet :
     * void g_async_initable_init_async(GAsyncInitable* initable, int io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_async_initable_init_async(MemorySegment initable, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_async_initable_init_async$MH();
        try {
            mh$.invokeExact(initable, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_initable_init_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$496.g_async_initable_init_finish$MH,"g_async_initable_init_finish");
    }
    /**
     * {@snippet :
     * gboolean g_async_initable_init_finish(GAsyncInitable* initable, GAsyncResult* res, GError** error);
     * }
     */
    public static int g_async_initable_init_finish(MemorySegment initable, MemorySegment res, MemorySegment error) {
        var mh$ = g_async_initable_init_finish$MH();
        try {
            return (int)mh$.invokeExact(initable, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_initable_new_async$MH() {
        return RuntimeHelper.requireNonNull(constants$496.g_async_initable_new_async$MH,"g_async_initable_new_async");
    }
    /**
     * {@snippet :
     * void g_async_initable_new_async(GType object_type, int io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data, const gchar* first_property_name,...);
     * }
     */
    public static void g_async_initable_new_async(long object_type, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data, MemorySegment first_property_name, Object... x6) {
        var mh$ = g_async_initable_new_async$MH();
        try {
            mh$.invokeExact(object_type, io_priority, cancellable, callback, user_data, first_property_name, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_initable_newv_async$MH() {
        return RuntimeHelper.requireNonNull(constants$497.g_async_initable_newv_async$MH,"g_async_initable_newv_async");
    }
    /**
     * {@snippet :
     * void g_async_initable_newv_async(GType object_type, guint n_parameters, GParameter* parameters, int io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_async_initable_newv_async(long object_type, int n_parameters, MemorySegment parameters, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_async_initable_newv_async$MH();
        try {
            mh$.invokeExact(object_type, n_parameters, parameters, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_initable_new_valist_async$MH() {
        return RuntimeHelper.requireNonNull(constants$497.g_async_initable_new_valist_async$MH,"g_async_initable_new_valist_async");
    }
    /**
     * {@snippet :
     * void g_async_initable_new_valist_async(GType object_type, const gchar* first_property_name, va_list var_args, int io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_async_initable_new_valist_async(long object_type, MemorySegment first_property_name, MemorySegment var_args, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_async_initable_new_valist_async$MH();
        try {
            mh$.invokeExact(object_type, first_property_name, var_args, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_initable_new_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$497.g_async_initable_new_finish$MH,"g_async_initable_new_finish");
    }
    /**
     * {@snippet :
     * GObject* g_async_initable_new_finish(GAsyncInitable* initable, GAsyncResult* res, GError** error);
     * }
     */
    public static MemorySegment g_async_initable_new_finish(MemorySegment initable, MemorySegment res, MemorySegment error) {
        var mh$ = g_async_initable_new_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(initable, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_result_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$497.g_async_result_get_type$MH,"g_async_result_get_type");
    }
    /**
     * {@snippet :
     * GType g_async_result_get_type();
     * }
     */
    public static long g_async_result_get_type() {
        var mh$ = g_async_result_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_result_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$497.g_async_result_get_user_data$MH,"g_async_result_get_user_data");
    }
    /**
     * {@snippet :
     * gpointer g_async_result_get_user_data(GAsyncResult* res);
     * }
     */
    public static MemorySegment g_async_result_get_user_data(MemorySegment res) {
        var mh$ = g_async_result_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_result_get_source_object$MH() {
        return RuntimeHelper.requireNonNull(constants$497.g_async_result_get_source_object$MH,"g_async_result_get_source_object");
    }
    /**
     * {@snippet :
     * GObject* g_async_result_get_source_object(GAsyncResult* res);
     * }
     */
    public static MemorySegment g_async_result_get_source_object(MemorySegment res) {
        var mh$ = g_async_result_get_source_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_result_legacy_propagate_error$MH() {
        return RuntimeHelper.requireNonNull(constants$498.g_async_result_legacy_propagate_error$MH,"g_async_result_legacy_propagate_error");
    }
    /**
     * {@snippet :
     * gboolean g_async_result_legacy_propagate_error(GAsyncResult* res, GError** error);
     * }
     */
    public static int g_async_result_legacy_propagate_error(MemorySegment res, MemorySegment error) {
        var mh$ = g_async_result_legacy_propagate_error$MH();
        try {
            return (int)mh$.invokeExact(res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_result_is_tagged$MH() {
        return RuntimeHelper.requireNonNull(constants$498.g_async_result_is_tagged$MH,"g_async_result_is_tagged");
    }
    /**
     * {@snippet :
     * gboolean g_async_result_is_tagged(GAsyncResult* res, gpointer source_tag);
     * }
     */
    public static int g_async_result_is_tagged(MemorySegment res, MemorySegment source_tag) {
        var mh$ = g_async_result_is_tagged$MH();
        try {
            return (int)mh$.invokeExact(res, source_tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$498.g_input_stream_get_type$MH,"g_input_stream_get_type");
    }
    /**
     * {@snippet :
     * GType g_input_stream_get_type();
     * }
     */
    public static long g_input_stream_get_type() {
        var mh$ = g_input_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_read$MH() {
        return RuntimeHelper.requireNonNull(constants$498.g_input_stream_read$MH,"g_input_stream_read");
    }
    /**
     * {@snippet :
     * gssize g_input_stream_read(GInputStream* stream, void* buffer, gsize count, GCancellable* cancellable, GError** error);
     * }
     */
    public static long g_input_stream_read(MemorySegment stream, MemorySegment buffer, long count, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_input_stream_read$MH();
        try {
            return (long)mh$.invokeExact(stream, buffer, count, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_read_all$MH() {
        return RuntimeHelper.requireNonNull(constants$498.g_input_stream_read_all$MH,"g_input_stream_read_all");
    }
    /**
     * {@snippet :
     * gboolean g_input_stream_read_all(GInputStream* stream, void* buffer, gsize count, gsize* bytes_read, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_input_stream_read_all(MemorySegment stream, MemorySegment buffer, long count, MemorySegment bytes_read, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_input_stream_read_all$MH();
        try {
            return (int)mh$.invokeExact(stream, buffer, count, bytes_read, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_read_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$498.g_input_stream_read_bytes$MH,"g_input_stream_read_bytes");
    }
    /**
     * {@snippet :
     * GBytes* g_input_stream_read_bytes(GInputStream* stream, gsize count, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_input_stream_read_bytes(MemorySegment stream, long count, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_input_stream_read_bytes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, count, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_skip$MH() {
        return RuntimeHelper.requireNonNull(constants$499.g_input_stream_skip$MH,"g_input_stream_skip");
    }
    /**
     * {@snippet :
     * gssize g_input_stream_skip(GInputStream* stream, gsize count, GCancellable* cancellable, GError** error);
     * }
     */
    public static long g_input_stream_skip(MemorySegment stream, long count, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_input_stream_skip$MH();
        try {
            return (long)mh$.invokeExact(stream, count, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_close$MH() {
        return RuntimeHelper.requireNonNull(constants$499.g_input_stream_close$MH,"g_input_stream_close");
    }
    /**
     * {@snippet :
     * gboolean g_input_stream_close(GInputStream* stream, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_input_stream_close(MemorySegment stream, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_input_stream_close$MH();
        try {
            return (int)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_read_async$MH() {
        return RuntimeHelper.requireNonNull(constants$499.g_input_stream_read_async$MH,"g_input_stream_read_async");
    }
    /**
     * {@snippet :
     * void g_input_stream_read_async(GInputStream* stream, void* buffer, gsize count, int io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_input_stream_read_async(MemorySegment stream, MemorySegment buffer, long count, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_input_stream_read_async$MH();
        try {
            mh$.invokeExact(stream, buffer, count, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_read_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$499.g_input_stream_read_finish$MH,"g_input_stream_read_finish");
    }
    /**
     * {@snippet :
     * gssize g_input_stream_read_finish(GInputStream* stream, GAsyncResult* result, GError** error);
     * }
     */
    public static long g_input_stream_read_finish(MemorySegment stream, MemorySegment result, MemorySegment error) {
        var mh$ = g_input_stream_read_finish$MH();
        try {
            return (long)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_read_all_async$MH() {
        return RuntimeHelper.requireNonNull(constants$499.g_input_stream_read_all_async$MH,"g_input_stream_read_all_async");
    }
    /**
     * {@snippet :
     * void g_input_stream_read_all_async(GInputStream* stream, void* buffer, gsize count, int io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_input_stream_read_all_async(MemorySegment stream, MemorySegment buffer, long count, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_input_stream_read_all_async$MH();
        try {
            mh$.invokeExact(stream, buffer, count, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_read_all_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$499.g_input_stream_read_all_finish$MH,"g_input_stream_read_all_finish");
    }
    /**
     * {@snippet :
     * gboolean g_input_stream_read_all_finish(GInputStream* stream, GAsyncResult* result, gsize* bytes_read, GError** error);
     * }
     */
    public static int g_input_stream_read_all_finish(MemorySegment stream, MemorySegment result, MemorySegment bytes_read, MemorySegment error) {
        var mh$ = g_input_stream_read_all_finish$MH();
        try {
            return (int)mh$.invokeExact(stream, result, bytes_read, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_read_bytes_async$MH() {
        return RuntimeHelper.requireNonNull(constants$500.g_input_stream_read_bytes_async$MH,"g_input_stream_read_bytes_async");
    }
    /**
     * {@snippet :
     * void g_input_stream_read_bytes_async(GInputStream* stream, gsize count, int io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_input_stream_read_bytes_async(MemorySegment stream, long count, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_input_stream_read_bytes_async$MH();
        try {
            mh$.invokeExact(stream, count, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_read_bytes_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$500.g_input_stream_read_bytes_finish$MH,"g_input_stream_read_bytes_finish");
    }
    /**
     * {@snippet :
     * GBytes* g_input_stream_read_bytes_finish(GInputStream* stream, GAsyncResult* result, GError** error);
     * }
     */
    public static MemorySegment g_input_stream_read_bytes_finish(MemorySegment stream, MemorySegment result, MemorySegment error) {
        var mh$ = g_input_stream_read_bytes_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_skip_async$MH() {
        return RuntimeHelper.requireNonNull(constants$500.g_input_stream_skip_async$MH,"g_input_stream_skip_async");
    }
    /**
     * {@snippet :
     * void g_input_stream_skip_async(GInputStream* stream, gsize count, int io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_input_stream_skip_async(MemorySegment stream, long count, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_input_stream_skip_async$MH();
        try {
            mh$.invokeExact(stream, count, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_skip_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$500.g_input_stream_skip_finish$MH,"g_input_stream_skip_finish");
    }
    /**
     * {@snippet :
     * gssize g_input_stream_skip_finish(GInputStream* stream, GAsyncResult* result, GError** error);
     * }
     */
    public static long g_input_stream_skip_finish(MemorySegment stream, MemorySegment result, MemorySegment error) {
        var mh$ = g_input_stream_skip_finish$MH();
        try {
            return (long)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_close_async$MH() {
        return RuntimeHelper.requireNonNull(constants$500.g_input_stream_close_async$MH,"g_input_stream_close_async");
    }
    /**
     * {@snippet :
     * void g_input_stream_close_async(GInputStream* stream, int io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_input_stream_close_async(MemorySegment stream, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_input_stream_close_async$MH();
        try {
            mh$.invokeExact(stream, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_close_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$500.g_input_stream_close_finish$MH,"g_input_stream_close_finish");
    }
    /**
     * {@snippet :
     * gboolean g_input_stream_close_finish(GInputStream* stream, GAsyncResult* result, GError** error);
     * }
     */
    public static int g_input_stream_close_finish(MemorySegment stream, MemorySegment result, MemorySegment error) {
        var mh$ = g_input_stream_close_finish$MH();
        try {
            return (int)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_is_closed$MH() {
        return RuntimeHelper.requireNonNull(constants$501.g_input_stream_is_closed$MH,"g_input_stream_is_closed");
    }
    /**
     * {@snippet :
     * gboolean g_input_stream_is_closed(GInputStream* stream);
     * }
     */
    public static int g_input_stream_is_closed(MemorySegment stream) {
        var mh$ = g_input_stream_is_closed$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_has_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$501.g_input_stream_has_pending$MH,"g_input_stream_has_pending");
    }
    /**
     * {@snippet :
     * gboolean g_input_stream_has_pending(GInputStream* stream);
     * }
     */
    public static int g_input_stream_has_pending(MemorySegment stream) {
        var mh$ = g_input_stream_has_pending$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_set_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$501.g_input_stream_set_pending$MH,"g_input_stream_set_pending");
    }
    /**
     * {@snippet :
     * gboolean g_input_stream_set_pending(GInputStream* stream, GError** error);
     * }
     */
    public static int g_input_stream_set_pending(MemorySegment stream, MemorySegment error) {
        var mh$ = g_input_stream_set_pending$MH();
        try {
            return (int)mh$.invokeExact(stream, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_clear_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$501.g_input_stream_clear_pending$MH,"g_input_stream_clear_pending");
    }
    /**
     * {@snippet :
     * void g_input_stream_clear_pending(GInputStream* stream);
     * }
     */
    public static void g_input_stream_clear_pending(MemorySegment stream) {
        var mh$ = g_input_stream_clear_pending$MH();
        try {
            mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filter_input_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$501.g_filter_input_stream_get_type$MH,"g_filter_input_stream_get_type");
    }
    /**
     * {@snippet :
     * GType g_filter_input_stream_get_type();
     * }
     */
    public static long g_filter_input_stream_get_type() {
        var mh$ = g_filter_input_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filter_input_stream_get_base_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$501.g_filter_input_stream_get_base_stream$MH,"g_filter_input_stream_get_base_stream");
    }
    /**
     * {@snippet :
     * GInputStream* g_filter_input_stream_get_base_stream(GFilterInputStream* stream);
     * }
     */
    public static MemorySegment g_filter_input_stream_get_base_stream(MemorySegment stream) {
        var mh$ = g_filter_input_stream_get_base_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filter_input_stream_get_close_base_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$502.g_filter_input_stream_get_close_base_stream$MH,"g_filter_input_stream_get_close_base_stream");
    }
    /**
     * {@snippet :
     * gboolean g_filter_input_stream_get_close_base_stream(GFilterInputStream* stream);
     * }
     */
    public static int g_filter_input_stream_get_close_base_stream(MemorySegment stream) {
        var mh$ = g_filter_input_stream_get_close_base_stream$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filter_input_stream_set_close_base_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$502.g_filter_input_stream_set_close_base_stream$MH,"g_filter_input_stream_set_close_base_stream");
    }
    /**
     * {@snippet :
     * void g_filter_input_stream_set_close_base_stream(GFilterInputStream* stream, gboolean close_base);
     * }
     */
    public static void g_filter_input_stream_set_close_base_stream(MemorySegment stream, int close_base) {
        var mh$ = g_filter_input_stream_set_close_base_stream$MH();
        try {
            mh$.invokeExact(stream, close_base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$502.g_buffered_input_stream_get_type$MH,"g_buffered_input_stream_get_type");
    }
    /**
     * {@snippet :
     * GType g_buffered_input_stream_get_type();
     * }
     */
    public static long g_buffered_input_stream_get_type() {
        var mh$ = g_buffered_input_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_new$MH() {
        return RuntimeHelper.requireNonNull(constants$502.g_buffered_input_stream_new$MH,"g_buffered_input_stream_new");
    }
    /**
     * {@snippet :
     * GInputStream* g_buffered_input_stream_new(GInputStream* base_stream);
     * }
     */
    public static MemorySegment g_buffered_input_stream_new(MemorySegment base_stream) {
        var mh$ = g_buffered_input_stream_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(base_stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_new_sized$MH() {
        return RuntimeHelper.requireNonNull(constants$502.g_buffered_input_stream_new_sized$MH,"g_buffered_input_stream_new_sized");
    }
    /**
     * {@snippet :
     * GInputStream* g_buffered_input_stream_new_sized(GInputStream* base_stream, gsize size);
     * }
     */
    public static MemorySegment g_buffered_input_stream_new_sized(MemorySegment base_stream, long size) {
        var mh$ = g_buffered_input_stream_new_sized$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(base_stream, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_get_buffer_size$MH() {
        return RuntimeHelper.requireNonNull(constants$502.g_buffered_input_stream_get_buffer_size$MH,"g_buffered_input_stream_get_buffer_size");
    }
    /**
     * {@snippet :
     * gsize g_buffered_input_stream_get_buffer_size(GBufferedInputStream* stream);
     * }
     */
    public static long g_buffered_input_stream_get_buffer_size(MemorySegment stream) {
        var mh$ = g_buffered_input_stream_get_buffer_size$MH();
        try {
            return (long)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_set_buffer_size$MH() {
        return RuntimeHelper.requireNonNull(constants$503.g_buffered_input_stream_set_buffer_size$MH,"g_buffered_input_stream_set_buffer_size");
    }
    /**
     * {@snippet :
     * void g_buffered_input_stream_set_buffer_size(GBufferedInputStream* stream, gsize size);
     * }
     */
    public static void g_buffered_input_stream_set_buffer_size(MemorySegment stream, long size) {
        var mh$ = g_buffered_input_stream_set_buffer_size$MH();
        try {
            mh$.invokeExact(stream, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_get_available$MH() {
        return RuntimeHelper.requireNonNull(constants$503.g_buffered_input_stream_get_available$MH,"g_buffered_input_stream_get_available");
    }
    /**
     * {@snippet :
     * gsize g_buffered_input_stream_get_available(GBufferedInputStream* stream);
     * }
     */
    public static long g_buffered_input_stream_get_available(MemorySegment stream) {
        var mh$ = g_buffered_input_stream_get_available$MH();
        try {
            return (long)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$503.g_buffered_input_stream_peek$MH,"g_buffered_input_stream_peek");
    }
    /**
     * {@snippet :
     * gsize g_buffered_input_stream_peek(GBufferedInputStream* stream, void* buffer, gsize offset, gsize count);
     * }
     */
    public static long g_buffered_input_stream_peek(MemorySegment stream, MemorySegment buffer, long offset, long count) {
        var mh$ = g_buffered_input_stream_peek$MH();
        try {
            return (long)mh$.invokeExact(stream, buffer, offset, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_peek_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$503.g_buffered_input_stream_peek_buffer$MH,"g_buffered_input_stream_peek_buffer");
    }
    /**
     * {@snippet :
     * void* g_buffered_input_stream_peek_buffer(GBufferedInputStream* stream, gsize* count);
     * }
     */
    public static MemorySegment g_buffered_input_stream_peek_buffer(MemorySegment stream, MemorySegment count) {
        var mh$ = g_buffered_input_stream_peek_buffer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_fill$MH() {
        return RuntimeHelper.requireNonNull(constants$503.g_buffered_input_stream_fill$MH,"g_buffered_input_stream_fill");
    }
    /**
     * {@snippet :
     * gssize g_buffered_input_stream_fill(GBufferedInputStream* stream, gssize count, GCancellable* cancellable, GError** error);
     * }
     */
    public static long g_buffered_input_stream_fill(MemorySegment stream, long count, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_buffered_input_stream_fill$MH();
        try {
            return (long)mh$.invokeExact(stream, count, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_fill_async$MH() {
        return RuntimeHelper.requireNonNull(constants$503.g_buffered_input_stream_fill_async$MH,"g_buffered_input_stream_fill_async");
    }
    /**
     * {@snippet :
     * void g_buffered_input_stream_fill_async(GBufferedInputStream* stream, gssize count, int io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_buffered_input_stream_fill_async(MemorySegment stream, long count, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_buffered_input_stream_fill_async$MH();
        try {
            mh$.invokeExact(stream, count, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_fill_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$504.g_buffered_input_stream_fill_finish$MH,"g_buffered_input_stream_fill_finish");
    }
    /**
     * {@snippet :
     * gssize g_buffered_input_stream_fill_finish(GBufferedInputStream* stream, GAsyncResult* result, GError** error);
     * }
     */
    public static long g_buffered_input_stream_fill_finish(MemorySegment stream, MemorySegment result, MemorySegment error) {
        var mh$ = g_buffered_input_stream_fill_finish$MH();
        try {
            return (long)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_read_byte$MH() {
        return RuntimeHelper.requireNonNull(constants$504.g_buffered_input_stream_read_byte$MH,"g_buffered_input_stream_read_byte");
    }
    /**
     * {@snippet :
     * int g_buffered_input_stream_read_byte(GBufferedInputStream* stream, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_buffered_input_stream_read_byte(MemorySegment stream, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_buffered_input_stream_read_byte$MH();
        try {
            return (int)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$504.g_output_stream_get_type$MH,"g_output_stream_get_type");
    }
    /**
     * {@snippet :
     * GType g_output_stream_get_type();
     * }
     */
    public static long g_output_stream_get_type() {
        var mh$ = g_output_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_write$MH() {
        return RuntimeHelper.requireNonNull(constants$504.g_output_stream_write$MH,"g_output_stream_write");
    }
    /**
     * {@snippet :
     * gssize g_output_stream_write(GOutputStream* stream, void* buffer, gsize count, GCancellable* cancellable, GError** error);
     * }
     */
    public static long g_output_stream_write(MemorySegment stream, MemorySegment buffer, long count, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_output_stream_write$MH();
        try {
            return (long)mh$.invokeExact(stream, buffer, count, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_write_all$MH() {
        return RuntimeHelper.requireNonNull(constants$504.g_output_stream_write_all$MH,"g_output_stream_write_all");
    }
    /**
     * {@snippet :
     * gboolean g_output_stream_write_all(GOutputStream* stream, void* buffer, gsize count, gsize* bytes_written, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_output_stream_write_all(MemorySegment stream, MemorySegment buffer, long count, MemorySegment bytes_written, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_output_stream_write_all$MH();
        try {
            return (int)mh$.invokeExact(stream, buffer, count, bytes_written, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_writev$MH() {
        return RuntimeHelper.requireNonNull(constants$504.g_output_stream_writev$MH,"g_output_stream_writev");
    }
    /**
     * {@snippet :
     * gboolean g_output_stream_writev(GOutputStream* stream, const GOutputVector* vectors, gsize n_vectors, gsize* bytes_written, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_output_stream_writev(MemorySegment stream, MemorySegment vectors, long n_vectors, MemorySegment bytes_written, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_output_stream_writev$MH();
        try {
            return (int)mh$.invokeExact(stream, vectors, n_vectors, bytes_written, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_writev_all$MH() {
        return RuntimeHelper.requireNonNull(constants$505.g_output_stream_writev_all$MH,"g_output_stream_writev_all");
    }
    /**
     * {@snippet :
     * gboolean g_output_stream_writev_all(GOutputStream* stream, GOutputVector* vectors, gsize n_vectors, gsize* bytes_written, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_output_stream_writev_all(MemorySegment stream, MemorySegment vectors, long n_vectors, MemorySegment bytes_written, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_output_stream_writev_all$MH();
        try {
            return (int)mh$.invokeExact(stream, vectors, n_vectors, bytes_written, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_printf$MH() {
        return RuntimeHelper.requireNonNull(constants$505.g_output_stream_printf$MH,"g_output_stream_printf");
    }
    /**
     * {@snippet :
     * gboolean g_output_stream_printf(GOutputStream* stream, gsize* bytes_written, GCancellable* cancellable, GError** error, const gchar* format,...);
     * }
     */
    public static int g_output_stream_printf(MemorySegment stream, MemorySegment bytes_written, MemorySegment cancellable, MemorySegment error, MemorySegment format, Object... x5) {
        var mh$ = g_output_stream_printf$MH();
        try {
            return (int)mh$.invokeExact(stream, bytes_written, cancellable, error, format, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_vprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$505.g_output_stream_vprintf$MH,"g_output_stream_vprintf");
    }
    /**
     * {@snippet :
     * gboolean g_output_stream_vprintf(GOutputStream* stream, gsize* bytes_written, GCancellable* cancellable, GError** error, const gchar* format, va_list args);
     * }
     */
    public static int g_output_stream_vprintf(MemorySegment stream, MemorySegment bytes_written, MemorySegment cancellable, MemorySegment error, MemorySegment format, MemorySegment args) {
        var mh$ = g_output_stream_vprintf$MH();
        try {
            return (int)mh$.invokeExact(stream, bytes_written, cancellable, error, format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_write_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$505.g_output_stream_write_bytes$MH,"g_output_stream_write_bytes");
    }
    /**
     * {@snippet :
     * gssize g_output_stream_write_bytes(GOutputStream* stream, GBytes* bytes, GCancellable* cancellable, GError** error);
     * }
     */
    public static long g_output_stream_write_bytes(MemorySegment stream, MemorySegment bytes, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_output_stream_write_bytes$MH();
        try {
            return (long)mh$.invokeExact(stream, bytes, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_splice$MH() {
        return RuntimeHelper.requireNonNull(constants$505.g_output_stream_splice$MH,"g_output_stream_splice");
    }
    /**
     * {@snippet :
     * gssize g_output_stream_splice(GOutputStream* stream, GInputStream* source, GOutputStreamSpliceFlags flags, GCancellable* cancellable, GError** error);
     * }
     */
    public static long g_output_stream_splice(MemorySegment stream, MemorySegment source, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_output_stream_splice$MH();
        try {
            return (long)mh$.invokeExact(stream, source, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_flush$MH() {
        return RuntimeHelper.requireNonNull(constants$505.g_output_stream_flush$MH,"g_output_stream_flush");
    }
    /**
     * {@snippet :
     * gboolean g_output_stream_flush(GOutputStream* stream, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_output_stream_flush(MemorySegment stream, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_output_stream_flush$MH();
        try {
            return (int)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_close$MH() {
        return RuntimeHelper.requireNonNull(constants$506.g_output_stream_close$MH,"g_output_stream_close");
    }
    /**
     * {@snippet :
     * gboolean g_output_stream_close(GOutputStream* stream, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_output_stream_close(MemorySegment stream, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_output_stream_close$MH();
        try {
            return (int)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_write_async$MH() {
        return RuntimeHelper.requireNonNull(constants$506.g_output_stream_write_async$MH,"g_output_stream_write_async");
    }
    /**
     * {@snippet :
     * void g_output_stream_write_async(GOutputStream* stream, void* buffer, gsize count, int io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_output_stream_write_async(MemorySegment stream, MemorySegment buffer, long count, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_output_stream_write_async$MH();
        try {
            mh$.invokeExact(stream, buffer, count, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_write_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$506.g_output_stream_write_finish$MH,"g_output_stream_write_finish");
    }
    /**
     * {@snippet :
     * gssize g_output_stream_write_finish(GOutputStream* stream, GAsyncResult* result, GError** error);
     * }
     */
    public static long g_output_stream_write_finish(MemorySegment stream, MemorySegment result, MemorySegment error) {
        var mh$ = g_output_stream_write_finish$MH();
        try {
            return (long)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_write_all_async$MH() {
        return RuntimeHelper.requireNonNull(constants$506.g_output_stream_write_all_async$MH,"g_output_stream_write_all_async");
    }
    /**
     * {@snippet :
     * void g_output_stream_write_all_async(GOutputStream* stream, void* buffer, gsize count, int io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_output_stream_write_all_async(MemorySegment stream, MemorySegment buffer, long count, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_output_stream_write_all_async$MH();
        try {
            mh$.invokeExact(stream, buffer, count, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_write_all_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$506.g_output_stream_write_all_finish$MH,"g_output_stream_write_all_finish");
    }
    /**
     * {@snippet :
     * gboolean g_output_stream_write_all_finish(GOutputStream* stream, GAsyncResult* result, gsize* bytes_written, GError** error);
     * }
     */
    public static int g_output_stream_write_all_finish(MemorySegment stream, MemorySegment result, MemorySegment bytes_written, MemorySegment error) {
        var mh$ = g_output_stream_write_all_finish$MH();
        try {
            return (int)mh$.invokeExact(stream, result, bytes_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_writev_async$MH() {
        return RuntimeHelper.requireNonNull(constants$506.g_output_stream_writev_async$MH,"g_output_stream_writev_async");
    }
    /**
     * {@snippet :
     * void g_output_stream_writev_async(GOutputStream* stream, const GOutputVector* vectors, gsize n_vectors, int io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_output_stream_writev_async(MemorySegment stream, MemorySegment vectors, long n_vectors, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_output_stream_writev_async$MH();
        try {
            mh$.invokeExact(stream, vectors, n_vectors, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_writev_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$507.g_output_stream_writev_finish$MH,"g_output_stream_writev_finish");
    }
    /**
     * {@snippet :
     * gboolean g_output_stream_writev_finish(GOutputStream* stream, GAsyncResult* result, gsize* bytes_written, GError** error);
     * }
     */
    public static int g_output_stream_writev_finish(MemorySegment stream, MemorySegment result, MemorySegment bytes_written, MemorySegment error) {
        var mh$ = g_output_stream_writev_finish$MH();
        try {
            return (int)mh$.invokeExact(stream, result, bytes_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_writev_all_async$MH() {
        return RuntimeHelper.requireNonNull(constants$507.g_output_stream_writev_all_async$MH,"g_output_stream_writev_all_async");
    }
    /**
     * {@snippet :
     * void g_output_stream_writev_all_async(GOutputStream* stream, GOutputVector* vectors, gsize n_vectors, int io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_output_stream_writev_all_async(MemorySegment stream, MemorySegment vectors, long n_vectors, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_output_stream_writev_all_async$MH();
        try {
            mh$.invokeExact(stream, vectors, n_vectors, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_writev_all_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$507.g_output_stream_writev_all_finish$MH,"g_output_stream_writev_all_finish");
    }
    /**
     * {@snippet :
     * gboolean g_output_stream_writev_all_finish(GOutputStream* stream, GAsyncResult* result, gsize* bytes_written, GError** error);
     * }
     */
    public static int g_output_stream_writev_all_finish(MemorySegment stream, MemorySegment result, MemorySegment bytes_written, MemorySegment error) {
        var mh$ = g_output_stream_writev_all_finish$MH();
        try {
            return (int)mh$.invokeExact(stream, result, bytes_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_write_bytes_async$MH() {
        return RuntimeHelper.requireNonNull(constants$507.g_output_stream_write_bytes_async$MH,"g_output_stream_write_bytes_async");
    }
    /**
     * {@snippet :
     * void g_output_stream_write_bytes_async(GOutputStream* stream, GBytes* bytes, int io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_output_stream_write_bytes_async(MemorySegment stream, MemorySegment bytes, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_output_stream_write_bytes_async$MH();
        try {
            mh$.invokeExact(stream, bytes, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_write_bytes_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$507.g_output_stream_write_bytes_finish$MH,"g_output_stream_write_bytes_finish");
    }
    /**
     * {@snippet :
     * gssize g_output_stream_write_bytes_finish(GOutputStream* stream, GAsyncResult* result, GError** error);
     * }
     */
    public static long g_output_stream_write_bytes_finish(MemorySegment stream, MemorySegment result, MemorySegment error) {
        var mh$ = g_output_stream_write_bytes_finish$MH();
        try {
            return (long)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_splice_async$MH() {
        return RuntimeHelper.requireNonNull(constants$507.g_output_stream_splice_async$MH,"g_output_stream_splice_async");
    }
    /**
     * {@snippet :
     * void g_output_stream_splice_async(GOutputStream* stream, GInputStream* source, GOutputStreamSpliceFlags flags, int io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_output_stream_splice_async(MemorySegment stream, MemorySegment source, int flags, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_output_stream_splice_async$MH();
        try {
            mh$.invokeExact(stream, source, flags, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_splice_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$508.g_output_stream_splice_finish$MH,"g_output_stream_splice_finish");
    }
    /**
     * {@snippet :
     * gssize g_output_stream_splice_finish(GOutputStream* stream, GAsyncResult* result, GError** error);
     * }
     */
    public static long g_output_stream_splice_finish(MemorySegment stream, MemorySegment result, MemorySegment error) {
        var mh$ = g_output_stream_splice_finish$MH();
        try {
            return (long)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_flush_async$MH() {
        return RuntimeHelper.requireNonNull(constants$508.g_output_stream_flush_async$MH,"g_output_stream_flush_async");
    }
    /**
     * {@snippet :
     * void g_output_stream_flush_async(GOutputStream* stream, int io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_output_stream_flush_async(MemorySegment stream, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_output_stream_flush_async$MH();
        try {
            mh$.invokeExact(stream, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_flush_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$508.g_output_stream_flush_finish$MH,"g_output_stream_flush_finish");
    }
    /**
     * {@snippet :
     * gboolean g_output_stream_flush_finish(GOutputStream* stream, GAsyncResult* result, GError** error);
     * }
     */
    public static int g_output_stream_flush_finish(MemorySegment stream, MemorySegment result, MemorySegment error) {
        var mh$ = g_output_stream_flush_finish$MH();
        try {
            return (int)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_close_async$MH() {
        return RuntimeHelper.requireNonNull(constants$508.g_output_stream_close_async$MH,"g_output_stream_close_async");
    }
    /**
     * {@snippet :
     * void g_output_stream_close_async(GOutputStream* stream, int io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_output_stream_close_async(MemorySegment stream, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_output_stream_close_async$MH();
        try {
            mh$.invokeExact(stream, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_close_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$508.g_output_stream_close_finish$MH,"g_output_stream_close_finish");
    }
    /**
     * {@snippet :
     * gboolean g_output_stream_close_finish(GOutputStream* stream, GAsyncResult* result, GError** error);
     * }
     */
    public static int g_output_stream_close_finish(MemorySegment stream, MemorySegment result, MemorySegment error) {
        var mh$ = g_output_stream_close_finish$MH();
        try {
            return (int)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_is_closed$MH() {
        return RuntimeHelper.requireNonNull(constants$508.g_output_stream_is_closed$MH,"g_output_stream_is_closed");
    }
    /**
     * {@snippet :
     * gboolean g_output_stream_is_closed(GOutputStream* stream);
     * }
     */
    public static int g_output_stream_is_closed(MemorySegment stream) {
        var mh$ = g_output_stream_is_closed$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_is_closing$MH() {
        return RuntimeHelper.requireNonNull(constants$509.g_output_stream_is_closing$MH,"g_output_stream_is_closing");
    }
    /**
     * {@snippet :
     * gboolean g_output_stream_is_closing(GOutputStream* stream);
     * }
     */
    public static int g_output_stream_is_closing(MemorySegment stream) {
        var mh$ = g_output_stream_is_closing$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_has_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$509.g_output_stream_has_pending$MH,"g_output_stream_has_pending");
    }
    /**
     * {@snippet :
     * gboolean g_output_stream_has_pending(GOutputStream* stream);
     * }
     */
    public static int g_output_stream_has_pending(MemorySegment stream) {
        var mh$ = g_output_stream_has_pending$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_set_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$509.g_output_stream_set_pending$MH,"g_output_stream_set_pending");
    }
    /**
     * {@snippet :
     * gboolean g_output_stream_set_pending(GOutputStream* stream, GError** error);
     * }
     */
    public static int g_output_stream_set_pending(MemorySegment stream, MemorySegment error) {
        var mh$ = g_output_stream_set_pending$MH();
        try {
            return (int)mh$.invokeExact(stream, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_clear_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$509.g_output_stream_clear_pending$MH,"g_output_stream_clear_pending");
    }
    /**
     * {@snippet :
     * void g_output_stream_clear_pending(GOutputStream* stream);
     * }
     */
    public static void g_output_stream_clear_pending(MemorySegment stream) {
        var mh$ = g_output_stream_clear_pending$MH();
        try {
            mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filter_output_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$509.g_filter_output_stream_get_type$MH,"g_filter_output_stream_get_type");
    }
    /**
     * {@snippet :
     * GType g_filter_output_stream_get_type();
     * }
     */
    public static long g_filter_output_stream_get_type() {
        var mh$ = g_filter_output_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filter_output_stream_get_base_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$509.g_filter_output_stream_get_base_stream$MH,"g_filter_output_stream_get_base_stream");
    }
    /**
     * {@snippet :
     * GOutputStream* g_filter_output_stream_get_base_stream(GFilterOutputStream* stream);
     * }
     */
    public static MemorySegment g_filter_output_stream_get_base_stream(MemorySegment stream) {
        var mh$ = g_filter_output_stream_get_base_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filter_output_stream_get_close_base_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$510.g_filter_output_stream_get_close_base_stream$MH,"g_filter_output_stream_get_close_base_stream");
    }
    /**
     * {@snippet :
     * gboolean g_filter_output_stream_get_close_base_stream(GFilterOutputStream* stream);
     * }
     */
    public static int g_filter_output_stream_get_close_base_stream(MemorySegment stream) {
        var mh$ = g_filter_output_stream_get_close_base_stream$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filter_output_stream_set_close_base_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$510.g_filter_output_stream_set_close_base_stream$MH,"g_filter_output_stream_set_close_base_stream");
    }
    /**
     * {@snippet :
     * void g_filter_output_stream_set_close_base_stream(GFilterOutputStream* stream, gboolean close_base);
     * }
     */
    public static void g_filter_output_stream_set_close_base_stream(MemorySegment stream, int close_base) {
        var mh$ = g_filter_output_stream_set_close_base_stream$MH();
        try {
            mh$.invokeExact(stream, close_base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_output_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$510.g_buffered_output_stream_get_type$MH,"g_buffered_output_stream_get_type");
    }
    /**
     * {@snippet :
     * GType g_buffered_output_stream_get_type();
     * }
     */
    public static long g_buffered_output_stream_get_type() {
        var mh$ = g_buffered_output_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_output_stream_new$MH() {
        return RuntimeHelper.requireNonNull(constants$510.g_buffered_output_stream_new$MH,"g_buffered_output_stream_new");
    }
    /**
     * {@snippet :
     * GOutputStream* g_buffered_output_stream_new(GOutputStream* base_stream);
     * }
     */
    public static MemorySegment g_buffered_output_stream_new(MemorySegment base_stream) {
        var mh$ = g_buffered_output_stream_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(base_stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_output_stream_new_sized$MH() {
        return RuntimeHelper.requireNonNull(constants$510.g_buffered_output_stream_new_sized$MH,"g_buffered_output_stream_new_sized");
    }
    /**
     * {@snippet :
     * GOutputStream* g_buffered_output_stream_new_sized(GOutputStream* base_stream, gsize size);
     * }
     */
    public static MemorySegment g_buffered_output_stream_new_sized(MemorySegment base_stream, long size) {
        var mh$ = g_buffered_output_stream_new_sized$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(base_stream, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_output_stream_get_buffer_size$MH() {
        return RuntimeHelper.requireNonNull(constants$510.g_buffered_output_stream_get_buffer_size$MH,"g_buffered_output_stream_get_buffer_size");
    }
    /**
     * {@snippet :
     * gsize g_buffered_output_stream_get_buffer_size(GBufferedOutputStream* stream);
     * }
     */
    public static long g_buffered_output_stream_get_buffer_size(MemorySegment stream) {
        var mh$ = g_buffered_output_stream_get_buffer_size$MH();
        try {
            return (long)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_output_stream_set_buffer_size$MH() {
        return RuntimeHelper.requireNonNull(constants$511.g_buffered_output_stream_set_buffer_size$MH,"g_buffered_output_stream_set_buffer_size");
    }
    /**
     * {@snippet :
     * void g_buffered_output_stream_set_buffer_size(GBufferedOutputStream* stream, gsize size);
     * }
     */
    public static void g_buffered_output_stream_set_buffer_size(MemorySegment stream, long size) {
        var mh$ = g_buffered_output_stream_set_buffer_size$MH();
        try {
            mh$.invokeExact(stream, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_output_stream_get_auto_grow$MH() {
        return RuntimeHelper.requireNonNull(constants$511.g_buffered_output_stream_get_auto_grow$MH,"g_buffered_output_stream_get_auto_grow");
    }
    /**
     * {@snippet :
     * gboolean g_buffered_output_stream_get_auto_grow(GBufferedOutputStream* stream);
     * }
     */
    public static int g_buffered_output_stream_get_auto_grow(MemorySegment stream) {
        var mh$ = g_buffered_output_stream_get_auto_grow$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_output_stream_set_auto_grow$MH() {
        return RuntimeHelper.requireNonNull(constants$511.g_buffered_output_stream_set_auto_grow$MH,"g_buffered_output_stream_set_auto_grow");
    }
    /**
     * {@snippet :
     * void g_buffered_output_stream_set_auto_grow(GBufferedOutputStream* stream, gboolean auto_grow);
     * }
     */
    public static void g_buffered_output_stream_set_auto_grow(MemorySegment stream, int auto_grow) {
        var mh$ = g_buffered_output_stream_set_auto_grow$MH();
        try {
            mh$.invokeExact(stream, auto_grow);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bytes_icon_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$511.g_bytes_icon_get_type$MH,"g_bytes_icon_get_type");
    }
    /**
     * {@snippet :
     * GType g_bytes_icon_get_type();
     * }
     */
    public static long g_bytes_icon_get_type() {
        var mh$ = g_bytes_icon_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bytes_icon_new$MH() {
        return RuntimeHelper.requireNonNull(constants$511.g_bytes_icon_new$MH,"g_bytes_icon_new");
    }
    /**
     * {@snippet :
     * GIcon* g_bytes_icon_new(GBytes* bytes);
     * }
     */
    public static MemorySegment g_bytes_icon_new(MemorySegment bytes) {
        var mh$ = g_bytes_icon_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bytes_icon_get_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$511.g_bytes_icon_get_bytes$MH,"g_bytes_icon_get_bytes");
    }
    /**
     * {@snippet :
     * GBytes* g_bytes_icon_get_bytes(GBytesIcon* icon);
     * }
     */
    public static MemorySegment g_bytes_icon_get_bytes(MemorySegment icon) {
        var mh$ = g_bytes_icon_get_bytes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$512.g_cancellable_get_type$MH,"g_cancellable_get_type");
    }
    /**
     * {@snippet :
     * GType g_cancellable_get_type();
     * }
     */
    public static long g_cancellable_get_type() {
        var mh$ = g_cancellable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_new$MH() {
        return RuntimeHelper.requireNonNull(constants$512.g_cancellable_new$MH,"g_cancellable_new");
    }
    /**
     * {@snippet :
     * GCancellable* g_cancellable_new();
     * }
     */
    public static MemorySegment g_cancellable_new() {
        var mh$ = g_cancellable_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_is_cancelled$MH() {
        return RuntimeHelper.requireNonNull(constants$512.g_cancellable_is_cancelled$MH,"g_cancellable_is_cancelled");
    }
    /**
     * {@snippet :
     * gboolean g_cancellable_is_cancelled(GCancellable* cancellable);
     * }
     */
    public static int g_cancellable_is_cancelled(MemorySegment cancellable) {
        var mh$ = g_cancellable_is_cancelled$MH();
        try {
            return (int)mh$.invokeExact(cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_set_error_if_cancelled$MH() {
        return RuntimeHelper.requireNonNull(constants$512.g_cancellable_set_error_if_cancelled$MH,"g_cancellable_set_error_if_cancelled");
    }
    /**
     * {@snippet :
     * gboolean g_cancellable_set_error_if_cancelled(GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_cancellable_set_error_if_cancelled(MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_cancellable_set_error_if_cancelled$MH();
        try {
            return (int)mh$.invokeExact(cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_get_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$512.g_cancellable_get_fd$MH,"g_cancellable_get_fd");
    }
    /**
     * {@snippet :
     * int g_cancellable_get_fd(GCancellable* cancellable);
     * }
     */
    public static int g_cancellable_get_fd(MemorySegment cancellable) {
        var mh$ = g_cancellable_get_fd$MH();
        try {
            return (int)mh$.invokeExact(cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_make_pollfd$MH() {
        return RuntimeHelper.requireNonNull(constants$512.g_cancellable_make_pollfd$MH,"g_cancellable_make_pollfd");
    }
    /**
     * {@snippet :
     * gboolean g_cancellable_make_pollfd(GCancellable* cancellable, GPollFD* pollfd);
     * }
     */
    public static int g_cancellable_make_pollfd(MemorySegment cancellable, MemorySegment pollfd) {
        var mh$ = g_cancellable_make_pollfd$MH();
        try {
            return (int)mh$.invokeExact(cancellable, pollfd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_release_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$513.g_cancellable_release_fd$MH,"g_cancellable_release_fd");
    }
    /**
     * {@snippet :
     * void g_cancellable_release_fd(GCancellable* cancellable);
     * }
     */
    public static void g_cancellable_release_fd(MemorySegment cancellable) {
        var mh$ = g_cancellable_release_fd$MH();
        try {
            mh$.invokeExact(cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$513.g_cancellable_source_new$MH,"g_cancellable_source_new");
    }
    /**
     * {@snippet :
     * GSource* g_cancellable_source_new(GCancellable* cancellable);
     * }
     */
    public static MemorySegment g_cancellable_source_new(MemorySegment cancellable) {
        var mh$ = g_cancellable_source_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_get_current$MH() {
        return RuntimeHelper.requireNonNull(constants$513.g_cancellable_get_current$MH,"g_cancellable_get_current");
    }
    /**
     * {@snippet :
     * GCancellable* g_cancellable_get_current();
     * }
     */
    public static MemorySegment g_cancellable_get_current() {
        var mh$ = g_cancellable_get_current$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_push_current$MH() {
        return RuntimeHelper.requireNonNull(constants$513.g_cancellable_push_current$MH,"g_cancellable_push_current");
    }
    /**
     * {@snippet :
     * void g_cancellable_push_current(GCancellable* cancellable);
     * }
     */
    public static void g_cancellable_push_current(MemorySegment cancellable) {
        var mh$ = g_cancellable_push_current$MH();
        try {
            mh$.invokeExact(cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_pop_current$MH() {
        return RuntimeHelper.requireNonNull(constants$513.g_cancellable_pop_current$MH,"g_cancellable_pop_current");
    }
    /**
     * {@snippet :
     * void g_cancellable_pop_current(GCancellable* cancellable);
     * }
     */
    public static void g_cancellable_pop_current(MemorySegment cancellable) {
        var mh$ = g_cancellable_pop_current$MH();
        try {
            mh$.invokeExact(cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$513.g_cancellable_reset$MH,"g_cancellable_reset");
    }
    /**
     * {@snippet :
     * void g_cancellable_reset(GCancellable* cancellable);
     * }
     */
    public static void g_cancellable_reset(MemorySegment cancellable) {
        var mh$ = g_cancellable_reset$MH();
        try {
            mh$.invokeExact(cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$514.g_cancellable_connect$MH,"g_cancellable_connect");
    }
    /**
     * {@snippet :
     * gulong g_cancellable_connect(GCancellable* cancellable, GCallback callback, gpointer data, GDestroyNotify data_destroy_func);
     * }
     */
    public static long g_cancellable_connect(MemorySegment cancellable, MemorySegment callback, MemorySegment data, MemorySegment data_destroy_func) {
        var mh$ = g_cancellable_connect$MH();
        try {
            return (long)mh$.invokeExact(cancellable, callback, data, data_destroy_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$514.g_cancellable_disconnect$MH,"g_cancellable_disconnect");
    }
    /**
     * {@snippet :
     * void g_cancellable_disconnect(GCancellable* cancellable, gulong handler_id);
     * }
     */
    public static void g_cancellable_disconnect(MemorySegment cancellable, long handler_id) {
        var mh$ = g_cancellable_disconnect$MH();
        try {
            mh$.invokeExact(cancellable, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$514.g_cancellable_cancel$MH,"g_cancellable_cancel");
    }
    /**
     * {@snippet :
     * void g_cancellable_cancel(GCancellable* cancellable);
     * }
     */
    public static void g_cancellable_cancel(MemorySegment cancellable) {
        var mh$ = g_cancellable_cancel$MH();
        try {
            mh$.invokeExact(cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$514.g_converter_get_type$MH,"g_converter_get_type");
    }
    /**
     * {@snippet :
     * GType g_converter_get_type();
     * }
     */
    public static long g_converter_get_type() {
        var mh$ = g_converter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_convert$MH() {
        return RuntimeHelper.requireNonNull(constants$514.g_converter_convert$MH,"g_converter_convert");
    }
    /**
     * {@snippet :
     * GConverterResult g_converter_convert(GConverter* converter, void* inbuf, gsize inbuf_size, void* outbuf, gsize outbuf_size, GConverterFlags flags, gsize* bytes_read, gsize* bytes_written, GError** error);
     * }
     */
    public static int g_converter_convert(MemorySegment converter, MemorySegment inbuf, long inbuf_size, MemorySegment outbuf, long outbuf_size, int flags, MemorySegment bytes_read, MemorySegment bytes_written, MemorySegment error) {
        var mh$ = g_converter_convert$MH();
        try {
            return (int)mh$.invokeExact(converter, inbuf, inbuf_size, outbuf, outbuf_size, flags, bytes_read, bytes_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$514.g_converter_reset$MH,"g_converter_reset");
    }
    /**
     * {@snippet :
     * void g_converter_reset(GConverter* converter);
     * }
     */
    public static void g_converter_reset(MemorySegment converter) {
        var mh$ = g_converter_reset$MH();
        try {
            mh$.invokeExact(converter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_charset_converter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$515.g_charset_converter_get_type$MH,"g_charset_converter_get_type");
    }
    /**
     * {@snippet :
     * GType g_charset_converter_get_type();
     * }
     */
    public static long g_charset_converter_get_type() {
        var mh$ = g_charset_converter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_charset_converter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$515.g_charset_converter_new$MH,"g_charset_converter_new");
    }
    /**
     * {@snippet :
     * GCharsetConverter* g_charset_converter_new(const gchar* to_charset, const gchar* from_charset, GError** error);
     * }
     */
    public static MemorySegment g_charset_converter_new(MemorySegment to_charset, MemorySegment from_charset, MemorySegment error) {
        var mh$ = g_charset_converter_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(to_charset, from_charset, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_charset_converter_set_use_fallback$MH() {
        return RuntimeHelper.requireNonNull(constants$515.g_charset_converter_set_use_fallback$MH,"g_charset_converter_set_use_fallback");
    }
    /**
     * {@snippet :
     * void g_charset_converter_set_use_fallback(GCharsetConverter* converter, gboolean use_fallback);
     * }
     */
    public static void g_charset_converter_set_use_fallback(MemorySegment converter, int use_fallback) {
        var mh$ = g_charset_converter_set_use_fallback$MH();
        try {
            mh$.invokeExact(converter, use_fallback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_charset_converter_get_use_fallback$MH() {
        return RuntimeHelper.requireNonNull(constants$515.g_charset_converter_get_use_fallback$MH,"g_charset_converter_get_use_fallback");
    }
    /**
     * {@snippet :
     * gboolean g_charset_converter_get_use_fallback(GCharsetConverter* converter);
     * }
     */
    public static int g_charset_converter_get_use_fallback(MemorySegment converter) {
        var mh$ = g_charset_converter_get_use_fallback$MH();
        try {
            return (int)mh$.invokeExact(converter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_charset_converter_get_num_fallbacks$MH() {
        return RuntimeHelper.requireNonNull(constants$515.g_charset_converter_get_num_fallbacks$MH,"g_charset_converter_get_num_fallbacks");
    }
    /**
     * {@snippet :
     * guint g_charset_converter_get_num_fallbacks(GCharsetConverter* converter);
     * }
     */
    public static int g_charset_converter_get_num_fallbacks(MemorySegment converter) {
        var mh$ = g_charset_converter_get_num_fallbacks$MH();
        try {
            return (int)mh$.invokeExact(converter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_equals$MH() {
        return RuntimeHelper.requireNonNull(constants$515.g_content_type_equals$MH,"g_content_type_equals");
    }
    /**
     * {@snippet :
     * gboolean g_content_type_equals(const gchar* type1, const gchar* type2);
     * }
     */
    public static int g_content_type_equals(MemorySegment type1, MemorySegment type2) {
        var mh$ = g_content_type_equals$MH();
        try {
            return (int)mh$.invokeExact(type1, type2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_is_a$MH() {
        return RuntimeHelper.requireNonNull(constants$516.g_content_type_is_a$MH,"g_content_type_is_a");
    }
    /**
     * {@snippet :
     * gboolean g_content_type_is_a(const gchar* type, const gchar* supertype);
     * }
     */
    public static int g_content_type_is_a(MemorySegment type, MemorySegment supertype) {
        var mh$ = g_content_type_is_a$MH();
        try {
            return (int)mh$.invokeExact(type, supertype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_is_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$516.g_content_type_is_mime_type$MH,"g_content_type_is_mime_type");
    }
    /**
     * {@snippet :
     * gboolean g_content_type_is_mime_type(const gchar* type, const gchar* mime_type);
     * }
     */
    public static int g_content_type_is_mime_type(MemorySegment type, MemorySegment mime_type) {
        var mh$ = g_content_type_is_mime_type$MH();
        try {
            return (int)mh$.invokeExact(type, mime_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_is_unknown$MH() {
        return RuntimeHelper.requireNonNull(constants$516.g_content_type_is_unknown$MH,"g_content_type_is_unknown");
    }
    /**
     * {@snippet :
     * gboolean g_content_type_is_unknown(const gchar* type);
     * }
     */
    public static int g_content_type_is_unknown(MemorySegment type) {
        var mh$ = g_content_type_is_unknown$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$516.g_content_type_get_description$MH,"g_content_type_get_description");
    }
    /**
     * {@snippet :
     * gchar* g_content_type_get_description(const gchar* type);
     * }
     */
    public static MemorySegment g_content_type_get_description(MemorySegment type) {
        var mh$ = g_content_type_get_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_get_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$516.g_content_type_get_mime_type$MH,"g_content_type_get_mime_type");
    }
    /**
     * {@snippet :
     * gchar* g_content_type_get_mime_type(const gchar* type);
     * }
     */
    public static MemorySegment g_content_type_get_mime_type(MemorySegment type) {
        var mh$ = g_content_type_get_mime_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_get_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$516.g_content_type_get_icon$MH,"g_content_type_get_icon");
    }
    /**
     * {@snippet :
     * GIcon* g_content_type_get_icon(const gchar* type);
     * }
     */
    public static MemorySegment g_content_type_get_icon(MemorySegment type) {
        var mh$ = g_content_type_get_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_get_symbolic_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$517.g_content_type_get_symbolic_icon$MH,"g_content_type_get_symbolic_icon");
    }
    /**
     * {@snippet :
     * GIcon* g_content_type_get_symbolic_icon(const gchar* type);
     * }
     */
    public static MemorySegment g_content_type_get_symbolic_icon(MemorySegment type) {
        var mh$ = g_content_type_get_symbolic_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_get_generic_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$517.g_content_type_get_generic_icon_name$MH,"g_content_type_get_generic_icon_name");
    }
    /**
     * {@snippet :
     * gchar* g_content_type_get_generic_icon_name(const gchar* type);
     * }
     */
    public static MemorySegment g_content_type_get_generic_icon_name(MemorySegment type) {
        var mh$ = g_content_type_get_generic_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_can_be_executable$MH() {
        return RuntimeHelper.requireNonNull(constants$517.g_content_type_can_be_executable$MH,"g_content_type_can_be_executable");
    }
    /**
     * {@snippet :
     * gboolean g_content_type_can_be_executable(const gchar* type);
     * }
     */
    public static int g_content_type_can_be_executable(MemorySegment type) {
        var mh$ = g_content_type_can_be_executable$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_from_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$517.g_content_type_from_mime_type$MH,"g_content_type_from_mime_type");
    }
    /**
     * {@snippet :
     * gchar* g_content_type_from_mime_type(const gchar* mime_type);
     * }
     */
    public static MemorySegment g_content_type_from_mime_type(MemorySegment mime_type) {
        var mh$ = g_content_type_from_mime_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mime_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_guess$MH() {
        return RuntimeHelper.requireNonNull(constants$517.g_content_type_guess$MH,"g_content_type_guess");
    }
    /**
     * {@snippet :
     * gchar* g_content_type_guess(const gchar* filename, const guchar* data, gsize data_size, gboolean* result_uncertain);
     * }
     */
    public static MemorySegment g_content_type_guess(MemorySegment filename, MemorySegment data, long data_size, MemorySegment result_uncertain) {
        var mh$ = g_content_type_guess$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filename, data, data_size, result_uncertain);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_guess_for_tree$MH() {
        return RuntimeHelper.requireNonNull(constants$517.g_content_type_guess_for_tree$MH,"g_content_type_guess_for_tree");
    }
    /**
     * {@snippet :
     * gchar** g_content_type_guess_for_tree(GFile* root);
     * }
     */
    public static MemorySegment g_content_type_guess_for_tree(MemorySegment root) {
        var mh$ = g_content_type_guess_for_tree$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(root);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_types_get_registered$MH() {
        return RuntimeHelper.requireNonNull(constants$518.g_content_types_get_registered$MH,"g_content_types_get_registered");
    }
    /**
     * {@snippet :
     * GList* g_content_types_get_registered();
     * }
     */
    public static MemorySegment g_content_types_get_registered() {
        var mh$ = g_content_types_get_registered$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_get_mime_dirs$MH() {
        return RuntimeHelper.requireNonNull(constants$518.g_content_type_get_mime_dirs$MH,"g_content_type_get_mime_dirs");
    }
    /**
     * {@snippet :
     * const gchar** g_content_type_get_mime_dirs();
     * }
     */
    public static MemorySegment g_content_type_get_mime_dirs() {
        var mh$ = g_content_type_get_mime_dirs$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_set_mime_dirs$MH() {
        return RuntimeHelper.requireNonNull(constants$518.g_content_type_set_mime_dirs$MH,"g_content_type_set_mime_dirs");
    }
    /**
     * {@snippet :
     * void g_content_type_set_mime_dirs(const gchar** dirs);
     * }
     */
    public static void g_content_type_set_mime_dirs(MemorySegment dirs) {
        var mh$ = g_content_type_set_mime_dirs$MH();
        try {
            mh$.invokeExact(dirs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_input_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$518.g_converter_input_stream_get_type$MH,"g_converter_input_stream_get_type");
    }
    /**
     * {@snippet :
     * GType g_converter_input_stream_get_type();
     * }
     */
    public static long g_converter_input_stream_get_type() {
        var mh$ = g_converter_input_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_input_stream_new$MH() {
        return RuntimeHelper.requireNonNull(constants$518.g_converter_input_stream_new$MH,"g_converter_input_stream_new");
    }
    /**
     * {@snippet :
     * GInputStream* g_converter_input_stream_new(GInputStream* base_stream, GConverter* converter);
     * }
     */
    public static MemorySegment g_converter_input_stream_new(MemorySegment base_stream, MemorySegment converter) {
        var mh$ = g_converter_input_stream_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(base_stream, converter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_input_stream_get_converter$MH() {
        return RuntimeHelper.requireNonNull(constants$518.g_converter_input_stream_get_converter$MH,"g_converter_input_stream_get_converter");
    }
    /**
     * {@snippet :
     * GConverter* g_converter_input_stream_get_converter(GConverterInputStream* converter_stream);
     * }
     */
    public static MemorySegment g_converter_input_stream_get_converter(MemorySegment converter_stream) {
        var mh$ = g_converter_input_stream_get_converter$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(converter_stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_output_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$519.g_converter_output_stream_get_type$MH,"g_converter_output_stream_get_type");
    }
    /**
     * {@snippet :
     * GType g_converter_output_stream_get_type();
     * }
     */
    public static long g_converter_output_stream_get_type() {
        var mh$ = g_converter_output_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_output_stream_new$MH() {
        return RuntimeHelper.requireNonNull(constants$519.g_converter_output_stream_new$MH,"g_converter_output_stream_new");
    }
    /**
     * {@snippet :
     * GOutputStream* g_converter_output_stream_new(GOutputStream* base_stream, GConverter* converter);
     * }
     */
    public static MemorySegment g_converter_output_stream_new(MemorySegment base_stream, MemorySegment converter) {
        var mh$ = g_converter_output_stream_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(base_stream, converter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_output_stream_get_converter$MH() {
        return RuntimeHelper.requireNonNull(constants$519.g_converter_output_stream_get_converter$MH,"g_converter_output_stream_get_converter");
    }
    /**
     * {@snippet :
     * GConverter* g_converter_output_stream_get_converter(GConverterOutputStream* converter_stream);
     * }
     */
    public static MemorySegment g_converter_output_stream_get_converter(MemorySegment converter_stream) {
        var mh$ = g_converter_output_stream_get_converter$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(converter_stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef unsigned int useconds_t;
     * }
     */
    public static final OfInt useconds_t = Constants$root.C_INT$LAYOUT;
    /**
     * {@snippet :
     * typedef long intptr_t;
     * }
     */
    public static final OfLong intptr_t = Constants$root.C_LONG_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned int socklen_t;
     * }
     */
    public static final OfInt socklen_t = Constants$root.C_INT$LAYOUT;
    public static MethodHandle access$MH() {
        return RuntimeHelper.requireNonNull(constants$519.access$MH,"access");
    }
    /**
     * {@snippet :
     * int access(char* __name, int __type);
     * }
     */
    public static int access(MemorySegment __name, int __type) {
        var mh$ = access$MH();
        try {
            return (int)mh$.invokeExact(__name, __type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle faccessat$MH() {
        return RuntimeHelper.requireNonNull(constants$519.faccessat$MH,"faccessat");
    }
    /**
     * {@snippet :
     * int faccessat(int __fd, char* __file, int __type, int __flag);
     * }
     */
    public static int faccessat(int __fd, MemorySegment __file, int __type, int __flag) {
        var mh$ = faccessat$MH();
        try {
            return (int)mh$.invokeExact(__fd, __file, __type, __flag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lseek$MH() {
        return RuntimeHelper.requireNonNull(constants$519.lseek$MH,"lseek");
    }
    /**
     * {@snippet :
     * __off_t lseek(int __fd, __off_t __offset, int __whence);
     * }
     */
    public static long lseek(int __fd, long __offset, int __whence) {
        var mh$ = lseek$MH();
        try {
            return (long)mh$.invokeExact(__fd, __offset, __whence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle close$MH() {
        return RuntimeHelper.requireNonNull(constants$520.close$MH,"close");
    }
    /**
     * {@snippet :
     * int close(int __fd);
     * }
     */
    public static int close(int __fd) {
        var mh$ = close$MH();
        try {
            return (int)mh$.invokeExact(__fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle closefrom$MH() {
        return RuntimeHelper.requireNonNull(constants$520.closefrom$MH,"closefrom");
    }
    /**
     * {@snippet :
     * void closefrom(int __lowfd);
     * }
     */
    public static void closefrom(int __lowfd) {
        var mh$ = closefrom$MH();
        try {
            mh$.invokeExact(__lowfd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle read$MH() {
        return RuntimeHelper.requireNonNull(constants$520.read$MH,"read");
    }
    /**
     * {@snippet :
     * ssize_t read(int __fd, void* __buf, size_t __nbytes);
     * }
     */
    public static long read(int __fd, MemorySegment __buf, long __nbytes) {
        var mh$ = read$MH();
        try {
            return (long)mh$.invokeExact(__fd, __buf, __nbytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle write$MH() {
        return RuntimeHelper.requireNonNull(constants$520.write$MH,"write");
    }
    /**
     * {@snippet :
     * ssize_t write(int __fd, void* __buf, size_t __n);
     * }
     */
    public static long write(int __fd, MemorySegment __buf, long __n) {
        var mh$ = write$MH();
        try {
            return (long)mh$.invokeExact(__fd, __buf, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pread$MH() {
        return RuntimeHelper.requireNonNull(constants$520.pread$MH,"pread");
    }
    /**
     * {@snippet :
     * ssize_t pread(int __fd, void* __buf, size_t __nbytes, __off_t __offset);
     * }
     */
    public static long pread(int __fd, MemorySegment __buf, long __nbytes, long __offset) {
        var mh$ = pread$MH();
        try {
            return (long)mh$.invokeExact(__fd, __buf, __nbytes, __offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pwrite$MH() {
        return RuntimeHelper.requireNonNull(constants$520.pwrite$MH,"pwrite");
    }
    /**
     * {@snippet :
     * ssize_t pwrite(int __fd, void* __buf, size_t __n, __off_t __offset);
     * }
     */
    public static long pwrite(int __fd, MemorySegment __buf, long __n, long __offset) {
        var mh$ = pwrite$MH();
        try {
            return (long)mh$.invokeExact(__fd, __buf, __n, __offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pipe$MH() {
        return RuntimeHelper.requireNonNull(constants$521.pipe$MH,"pipe");
    }
    /**
     * {@snippet :
     * int pipe(int __pipedes[2]);
     * }
     */
    public static int pipe(MemorySegment __pipedes) {
        var mh$ = pipe$MH();
        try {
            return (int)mh$.invokeExact(__pipedes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle alarm$MH() {
        return RuntimeHelper.requireNonNull(constants$521.alarm$MH,"alarm");
    }
    /**
     * {@snippet :
     * unsigned int alarm(unsigned int __seconds);
     * }
     */
    public static int alarm(int __seconds) {
        var mh$ = alarm$MH();
        try {
            return (int)mh$.invokeExact(__seconds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sleep$MH() {
        return RuntimeHelper.requireNonNull(constants$521.sleep$MH,"sleep");
    }
    /**
     * {@snippet :
     * unsigned int sleep(unsigned int __seconds);
     * }
     */
    public static int sleep(int __seconds) {
        var mh$ = sleep$MH();
        try {
            return (int)mh$.invokeExact(__seconds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ualarm$MH() {
        return RuntimeHelper.requireNonNull(constants$521.ualarm$MH,"ualarm");
    }
    /**
     * {@snippet :
     * __useconds_t ualarm(__useconds_t __value, __useconds_t __interval);
     * }
     */
    public static int ualarm(int __value, int __interval) {
        var mh$ = ualarm$MH();
        try {
            return (int)mh$.invokeExact(__value, __interval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle usleep$MH() {
        return RuntimeHelper.requireNonNull(constants$521.usleep$MH,"usleep");
    }
    /**
     * {@snippet :
     * int usleep(__useconds_t __useconds);
     * }
     */
    public static int usleep(int __useconds) {
        var mh$ = usleep$MH();
        try {
            return (int)mh$.invokeExact(__useconds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pause$MH() {
        return RuntimeHelper.requireNonNull(constants$521.pause$MH,"pause");
    }
    /**
     * {@snippet :
     * int pause();
     * }
     */
    public static int pause() {
        var mh$ = pause$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle chown$MH() {
        return RuntimeHelper.requireNonNull(constants$522.chown$MH,"chown");
    }
    /**
     * {@snippet :
     * int chown(char* __file, __uid_t __owner, __gid_t __group);
     * }
     */
    public static int chown(MemorySegment __file, int __owner, int __group) {
        var mh$ = chown$MH();
        try {
            return (int)mh$.invokeExact(__file, __owner, __group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fchown$MH() {
        return RuntimeHelper.requireNonNull(constants$522.fchown$MH,"fchown");
    }
    /**
     * {@snippet :
     * int fchown(int __fd, __uid_t __owner, __gid_t __group);
     * }
     */
    public static int fchown(int __fd, int __owner, int __group) {
        var mh$ = fchown$MH();
        try {
            return (int)mh$.invokeExact(__fd, __owner, __group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lchown$MH() {
        return RuntimeHelper.requireNonNull(constants$522.lchown$MH,"lchown");
    }
    /**
     * {@snippet :
     * int lchown(char* __file, __uid_t __owner, __gid_t __group);
     * }
     */
    public static int lchown(MemorySegment __file, int __owner, int __group) {
        var mh$ = lchown$MH();
        try {
            return (int)mh$.invokeExact(__file, __owner, __group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fchownat$MH() {
        return RuntimeHelper.requireNonNull(constants$522.fchownat$MH,"fchownat");
    }
    /**
     * {@snippet :
     * int fchownat(int __fd, char* __file, __uid_t __owner, __gid_t __group, int __flag);
     * }
     */
    public static int fchownat(int __fd, MemorySegment __file, int __owner, int __group, int __flag) {
        var mh$ = fchownat$MH();
        try {
            return (int)mh$.invokeExact(__fd, __file, __owner, __group, __flag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle chdir$MH() {
        return RuntimeHelper.requireNonNull(constants$522.chdir$MH,"chdir");
    }
    /**
     * {@snippet :
     * int chdir(char* __path);
     * }
     */
    public static int chdir(MemorySegment __path) {
        var mh$ = chdir$MH();
        try {
            return (int)mh$.invokeExact(__path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fchdir$MH() {
        return RuntimeHelper.requireNonNull(constants$522.fchdir$MH,"fchdir");
    }
    /**
     * {@snippet :
     * int fchdir(int __fd);
     * }
     */
    public static int fchdir(int __fd) {
        var mh$ = fchdir$MH();
        try {
            return (int)mh$.invokeExact(__fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getcwd$MH() {
        return RuntimeHelper.requireNonNull(constants$523.getcwd$MH,"getcwd");
    }
    /**
     * {@snippet :
     * char* getcwd(char* __buf, size_t __size);
     * }
     */
    public static MemorySegment getcwd(MemorySegment __buf, long __size) {
        var mh$ = getcwd$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__buf, __size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getwd$MH() {
        return RuntimeHelper.requireNonNull(constants$523.getwd$MH,"getwd");
    }
    /**
     * {@snippet :
     * char* getwd(char* __buf);
     * }
     */
    public static MemorySegment getwd(MemorySegment __buf) {
        var mh$ = getwd$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle dup$MH() {
        return RuntimeHelper.requireNonNull(constants$523.dup$MH,"dup");
    }
    /**
     * {@snippet :
     * int dup(int __fd);
     * }
     */
    public static int dup(int __fd) {
        var mh$ = dup$MH();
        try {
            return (int)mh$.invokeExact(__fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle dup2$MH() {
        return RuntimeHelper.requireNonNull(constants$523.dup2$MH,"dup2");
    }
    /**
     * {@snippet :
     * int dup2(int __fd, int __fd2);
     * }
     */
    public static int dup2(int __fd, int __fd2) {
        var mh$ = dup2$MH();
        try {
            return (int)mh$.invokeExact(__fd, __fd2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout __environ$LAYOUT() {
        return constants$523.__environ$LAYOUT;
    }
    public static VarHandle __environ$VH() {
        return constants$523.__environ$VH;
    }
    public static MemorySegment __environ$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$523.__environ$SEGMENT,"__environ");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * char** __environ;
     * }
     */
    public static MemorySegment __environ$get() {
        return (java.lang.foreign.MemorySegment) constants$523.__environ$VH.get(RuntimeHelper.requireNonNull(constants$523.__environ$SEGMENT, "__environ"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * char** __environ;
     * }
     */
    public static void __environ$set(MemorySegment x) {
        constants$523.__environ$VH.set(RuntimeHelper.requireNonNull(constants$523.__environ$SEGMENT, "__environ"), x);
    }
    public static MethodHandle execve$MH() {
        return RuntimeHelper.requireNonNull(constants$523.execve$MH,"execve");
    }
    /**
     * {@snippet :
     * int execve(char* __path, char* __argv[], char* __envp[]);
     * }
     */
    public static int execve(MemorySegment __path, MemorySegment __argv, MemorySegment __envp) {
        var mh$ = execve$MH();
        try {
            return (int)mh$.invokeExact(__path, __argv, __envp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fexecve$MH() {
        return RuntimeHelper.requireNonNull(constants$524.fexecve$MH,"fexecve");
    }
    /**
     * {@snippet :
     * int fexecve(int __fd, char* __argv[], char* __envp[]);
     * }
     */
    public static int fexecve(int __fd, MemorySegment __argv, MemorySegment __envp) {
        var mh$ = fexecve$MH();
        try {
            return (int)mh$.invokeExact(__fd, __argv, __envp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle execv$MH() {
        return RuntimeHelper.requireNonNull(constants$524.execv$MH,"execv");
    }
    /**
     * {@snippet :
     * int execv(char* __path, char* __argv[]);
     * }
     */
    public static int execv(MemorySegment __path, MemorySegment __argv) {
        var mh$ = execv$MH();
        try {
            return (int)mh$.invokeExact(__path, __argv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle execle$MH() {
        return RuntimeHelper.requireNonNull(constants$524.execle$MH,"execle");
    }
    /**
     * {@snippet :
     * int execle(char* __path, char* __arg,...);
     * }
     */
    public static int execle(MemorySegment __path, MemorySegment __arg, Object... x2) {
        var mh$ = execle$MH();
        try {
            return (int)mh$.invokeExact(__path, __arg, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle execl$MH() {
        return RuntimeHelper.requireNonNull(constants$524.execl$MH,"execl");
    }
    /**
     * {@snippet :
     * int execl(char* __path, char* __arg,...);
     * }
     */
    public static int execl(MemorySegment __path, MemorySegment __arg, Object... x2) {
        var mh$ = execl$MH();
        try {
            return (int)mh$.invokeExact(__path, __arg, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle execvp$MH() {
        return RuntimeHelper.requireNonNull(constants$524.execvp$MH,"execvp");
    }
    /**
     * {@snippet :
     * int execvp(char* __file, char* __argv[]);
     * }
     */
    public static int execvp(MemorySegment __file, MemorySegment __argv) {
        var mh$ = execvp$MH();
        try {
            return (int)mh$.invokeExact(__file, __argv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle execlp$MH() {
        return RuntimeHelper.requireNonNull(constants$524.execlp$MH,"execlp");
    }
    /**
     * {@snippet :
     * int execlp(char* __file, char* __arg,...);
     * }
     */
    public static int execlp(MemorySegment __file, MemorySegment __arg, Object... x2) {
        var mh$ = execlp$MH();
        try {
            return (int)mh$.invokeExact(__file, __arg, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle nice$MH() {
        return RuntimeHelper.requireNonNull(constants$525.nice$MH,"nice");
    }
    /**
     * {@snippet :
     * int nice(int __inc);
     * }
     */
    public static int nice(int __inc) {
        var mh$ = nice$MH();
        try {
            return (int)mh$.invokeExact(__inc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _exit$MH() {
        return RuntimeHelper.requireNonNull(constants$525._exit$MH,"_exit");
    }
    /**
     * {@snippet :
     * void _exit(int __status);
     * }
     */
    public static void _exit(int __status) {
        var mh$ = _exit$MH();
        try {
            mh$.invokeExact(__status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum ._PC_LINK_MAX = 0;
     * }
     */
    public static int _PC_LINK_MAX() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum ._PC_MAX_CANON = 1;
     * }
     */
    public static int _PC_MAX_CANON() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum ._PC_MAX_INPUT = 2;
     * }
     */
    public static int _PC_MAX_INPUT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum ._PC_NAME_MAX = 3;
     * }
     */
    public static int _PC_NAME_MAX() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum ._PC_PATH_MAX = 4;
     * }
     */
    public static int _PC_PATH_MAX() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum ._PC_PIPE_BUF = 5;
     * }
     */
    public static int _PC_PIPE_BUF() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum ._PC_CHOWN_RESTRICTED = 6;
     * }
     */
    public static int _PC_CHOWN_RESTRICTED() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum ._PC_NO_TRUNC = 7;
     * }
     */
    public static int _PC_NO_TRUNC() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum ._PC_VDISABLE = 8;
     * }
     */
    public static int _PC_VDISABLE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum ._PC_SYNC_IO = 9;
     * }
     */
    public static int _PC_SYNC_IO() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum ._PC_ASYNC_IO = 10;
     * }
     */
    public static int _PC_ASYNC_IO() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum ._PC_PRIO_IO = 11;
     * }
     */
    public static int _PC_PRIO_IO() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum ._PC_SOCK_MAXBUF = 12;
     * }
     */
    public static int _PC_SOCK_MAXBUF() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum ._PC_FILESIZEBITS = 13;
     * }
     */
    public static int _PC_FILESIZEBITS() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum ._PC_REC_INCR_XFER_SIZE = 14;
     * }
     */
    public static int _PC_REC_INCR_XFER_SIZE() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum ._PC_REC_MAX_XFER_SIZE = 15;
     * }
     */
    public static int _PC_REC_MAX_XFER_SIZE() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum ._PC_REC_MIN_XFER_SIZE = 16;
     * }
     */
    public static int _PC_REC_MIN_XFER_SIZE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum ._PC_REC_XFER_ALIGN = 17;
     * }
     */
    public static int _PC_REC_XFER_ALIGN() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum ._PC_ALLOC_SIZE_MIN = 18;
     * }
     */
    public static int _PC_ALLOC_SIZE_MIN() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum ._PC_SYMLINK_MAX = 19;
     * }
     */
    public static int _PC_SYMLINK_MAX() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum ._PC_2_SYMLINKS = 20;
     * }
     */
    public static int _PC_2_SYMLINKS() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum ._SC_ARG_MAX = 0;
     * }
     */
    public static int _SC_ARG_MAX() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum ._SC_CHILD_MAX = 1;
     * }
     */
    public static int _SC_CHILD_MAX() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum ._SC_CLK_TCK = 2;
     * }
     */
    public static int _SC_CLK_TCK() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum ._SC_NGROUPS_MAX = 3;
     * }
     */
    public static int _SC_NGROUPS_MAX() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum ._SC_OPEN_MAX = 4;
     * }
     */
    public static int _SC_OPEN_MAX() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum ._SC_STREAM_MAX = 5;
     * }
     */
    public static int _SC_STREAM_MAX() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum ._SC_TZNAME_MAX = 6;
     * }
     */
    public static int _SC_TZNAME_MAX() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum ._SC_JOB_CONTROL = 7;
     * }
     */
    public static int _SC_JOB_CONTROL() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum ._SC_SAVED_IDS = 8;
     * }
     */
    public static int _SC_SAVED_IDS() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum ._SC_REALTIME_SIGNALS = 9;
     * }
     */
    public static int _SC_REALTIME_SIGNALS() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum ._SC_PRIORITY_SCHEDULING = 10;
     * }
     */
    public static int _SC_PRIORITY_SCHEDULING() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum ._SC_TIMERS = 11;
     * }
     */
    public static int _SC_TIMERS() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum ._SC_ASYNCHRONOUS_IO = 12;
     * }
     */
    public static int _SC_ASYNCHRONOUS_IO() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum ._SC_PRIORITIZED_IO = 13;
     * }
     */
    public static int _SC_PRIORITIZED_IO() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum ._SC_SYNCHRONIZED_IO = 14;
     * }
     */
    public static int _SC_SYNCHRONIZED_IO() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum ._SC_FSYNC = 15;
     * }
     */
    public static int _SC_FSYNC() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum ._SC_MAPPED_FILES = 16;
     * }
     */
    public static int _SC_MAPPED_FILES() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum ._SC_MEMLOCK = 17;
     * }
     */
    public static int _SC_MEMLOCK() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum ._SC_MEMLOCK_RANGE = 18;
     * }
     */
    public static int _SC_MEMLOCK_RANGE() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum ._SC_MEMORY_PROTECTION = 19;
     * }
     */
    public static int _SC_MEMORY_PROTECTION() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum ._SC_MESSAGE_PASSING = 20;
     * }
     */
    public static int _SC_MESSAGE_PASSING() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum ._SC_SEMAPHORES = 21;
     * }
     */
    public static int _SC_SEMAPHORES() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum ._SC_SHARED_MEMORY_OBJECTS = 22;
     * }
     */
    public static int _SC_SHARED_MEMORY_OBJECTS() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum ._SC_AIO_LISTIO_MAX = 23;
     * }
     */
    public static int _SC_AIO_LISTIO_MAX() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum ._SC_AIO_MAX = 24;
     * }
     */
    public static int _SC_AIO_MAX() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum ._SC_AIO_PRIO_DELTA_MAX = 25;
     * }
     */
    public static int _SC_AIO_PRIO_DELTA_MAX() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum ._SC_DELAYTIMER_MAX = 26;
     * }
     */
    public static int _SC_DELAYTIMER_MAX() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum ._SC_MQ_OPEN_MAX = 27;
     * }
     */
    public static int _SC_MQ_OPEN_MAX() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum ._SC_MQ_PRIO_MAX = 28;
     * }
     */
    public static int _SC_MQ_PRIO_MAX() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum ._SC_VERSION = 29;
     * }
     */
    public static int _SC_VERSION() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum ._SC_PAGESIZE = 30;
     * }
     */
    public static int _SC_PAGESIZE() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum ._SC_RTSIG_MAX = 31;
     * }
     */
    public static int _SC_RTSIG_MAX() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum ._SC_SEM_NSEMS_MAX = 32;
     * }
     */
    public static int _SC_SEM_NSEMS_MAX() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum ._SC_SEM_VALUE_MAX = 33;
     * }
     */
    public static int _SC_SEM_VALUE_MAX() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum ._SC_SIGQUEUE_MAX = 34;
     * }
     */
    public static int _SC_SIGQUEUE_MAX() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum ._SC_TIMER_MAX = 35;
     * }
     */
    public static int _SC_TIMER_MAX() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum ._SC_BC_BASE_MAX = 36;
     * }
     */
    public static int _SC_BC_BASE_MAX() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum ._SC_BC_DIM_MAX = 37;
     * }
     */
    public static int _SC_BC_DIM_MAX() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum ._SC_BC_SCALE_MAX = 38;
     * }
     */
    public static int _SC_BC_SCALE_MAX() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * enum ._SC_BC_STRING_MAX = 39;
     * }
     */
    public static int _SC_BC_STRING_MAX() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * enum ._SC_COLL_WEIGHTS_MAX = 40;
     * }
     */
    public static int _SC_COLL_WEIGHTS_MAX() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * enum ._SC_EQUIV_CLASS_MAX = 41;
     * }
     */
    public static int _SC_EQUIV_CLASS_MAX() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * enum ._SC_EXPR_NEST_MAX = 42;
     * }
     */
    public static int _SC_EXPR_NEST_MAX() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * enum ._SC_LINE_MAX = 43;
     * }
     */
    public static int _SC_LINE_MAX() {
        return (int)43L;
    }
    /**
     * {@snippet :
     * enum ._SC_RE_DUP_MAX = 44;
     * }
     */
    public static int _SC_RE_DUP_MAX() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * enum ._SC_CHARCLASS_NAME_MAX = 45;
     * }
     */
    public static int _SC_CHARCLASS_NAME_MAX() {
        return (int)45L;
    }
    /**
     * {@snippet :
     * enum ._SC_2_VERSION = 46;
     * }
     */
    public static int _SC_2_VERSION() {
        return (int)46L;
    }
    /**
     * {@snippet :
     * enum ._SC_2_C_BIND = 47;
     * }
     */
    public static int _SC_2_C_BIND() {
        return (int)47L;
    }
    /**
     * {@snippet :
     * enum ._SC_2_C_DEV = 48;
     * }
     */
    public static int _SC_2_C_DEV() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * enum ._SC_2_FORT_DEV = 49;
     * }
     */
    public static int _SC_2_FORT_DEV() {
        return (int)49L;
    }
    /**
     * {@snippet :
     * enum ._SC_2_FORT_RUN = 50;
     * }
     */
    public static int _SC_2_FORT_RUN() {
        return (int)50L;
    }
    /**
     * {@snippet :
     * enum ._SC_2_SW_DEV = 51;
     * }
     */
    public static int _SC_2_SW_DEV() {
        return (int)51L;
    }
    /**
     * {@snippet :
     * enum ._SC_2_LOCALEDEF = 52;
     * }
     */
    public static int _SC_2_LOCALEDEF() {
        return (int)52L;
    }
    /**
     * {@snippet :
     * enum ._SC_PII = 53;
     * }
     */
    public static int _SC_PII() {
        return (int)53L;
    }
    /**
     * {@snippet :
     * enum ._SC_PII_XTI = 54;
     * }
     */
    public static int _SC_PII_XTI() {
        return (int)54L;
    }
    /**
     * {@snippet :
     * enum ._SC_PII_SOCKET = 55;
     * }
     */
    public static int _SC_PII_SOCKET() {
        return (int)55L;
    }
    /**
     * {@snippet :
     * enum ._SC_PII_INTERNET = 56;
     * }
     */
    public static int _SC_PII_INTERNET() {
        return (int)56L;
    }
    /**
     * {@snippet :
     * enum ._SC_PII_OSI = 57;
     * }
     */
    public static int _SC_PII_OSI() {
        return (int)57L;
    }
    /**
     * {@snippet :
     * enum ._SC_POLL = 58;
     * }
     */
    public static int _SC_POLL() {
        return (int)58L;
    }
    /**
     * {@snippet :
     * enum ._SC_SELECT = 59;
     * }
     */
    public static int _SC_SELECT() {
        return (int)59L;
    }
    /**
     * {@snippet :
     * enum ._SC_UIO_MAXIOV = 60;
     * }
     */
    public static int _SC_UIO_MAXIOV() {
        return (int)60L;
    }
    /**
     * {@snippet :
     * enum ._SC_IOV_MAX = 60;
     * }
     */
    public static int _SC_IOV_MAX() {
        return (int)60L;
    }
    /**
     * {@snippet :
     * enum ._SC_PII_INTERNET_STREAM = 61;
     * }
     */
    public static int _SC_PII_INTERNET_STREAM() {
        return (int)61L;
    }
    /**
     * {@snippet :
     * enum ._SC_PII_INTERNET_DGRAM = 62;
     * }
     */
    public static int _SC_PII_INTERNET_DGRAM() {
        return (int)62L;
    }
    /**
     * {@snippet :
     * enum ._SC_PII_OSI_COTS = 63;
     * }
     */
    public static int _SC_PII_OSI_COTS() {
        return (int)63L;
    }
    /**
     * {@snippet :
     * enum ._SC_PII_OSI_CLTS = 64;
     * }
     */
    public static int _SC_PII_OSI_CLTS() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum ._SC_PII_OSI_M = 65;
     * }
     */
    public static int _SC_PII_OSI_M() {
        return (int)65L;
    }
    /**
     * {@snippet :
     * enum ._SC_T_IOV_MAX = 66;
     * }
     */
    public static int _SC_T_IOV_MAX() {
        return (int)66L;
    }
    /**
     * {@snippet :
     * enum ._SC_THREADS = 67;
     * }
     */
    public static int _SC_THREADS() {
        return (int)67L;
    }
    /**
     * {@snippet :
     * enum ._SC_THREAD_SAFE_FUNCTIONS = 68;
     * }
     */
    public static int _SC_THREAD_SAFE_FUNCTIONS() {
        return (int)68L;
    }
    /**
     * {@snippet :
     * enum ._SC_GETGR_R_SIZE_MAX = 69;
     * }
     */
    public static int _SC_GETGR_R_SIZE_MAX() {
        return (int)69L;
    }
    /**
     * {@snippet :
     * enum ._SC_GETPW_R_SIZE_MAX = 70;
     * }
     */
    public static int _SC_GETPW_R_SIZE_MAX() {
        return (int)70L;
    }
    /**
     * {@snippet :
     * enum ._SC_LOGIN_NAME_MAX = 71;
     * }
     */
    public static int _SC_LOGIN_NAME_MAX() {
        return (int)71L;
    }
    /**
     * {@snippet :
     * enum ._SC_TTY_NAME_MAX = 72;
     * }
     */
    public static int _SC_TTY_NAME_MAX() {
        return (int)72L;
    }
    /**
     * {@snippet :
     * enum ._SC_THREAD_DESTRUCTOR_ITERATIONS = 73;
     * }
     */
    public static int _SC_THREAD_DESTRUCTOR_ITERATIONS() {
        return (int)73L;
    }
    /**
     * {@snippet :
     * enum ._SC_THREAD_KEYS_MAX = 74;
     * }
     */
    public static int _SC_THREAD_KEYS_MAX() {
        return (int)74L;
    }
    /**
     * {@snippet :
     * enum ._SC_THREAD_STACK_MIN = 75;
     * }
     */
    public static int _SC_THREAD_STACK_MIN() {
        return (int)75L;
    }
    /**
     * {@snippet :
     * enum ._SC_THREAD_THREADS_MAX = 76;
     * }
     */
    public static int _SC_THREAD_THREADS_MAX() {
        return (int)76L;
    }
    /**
     * {@snippet :
     * enum ._SC_THREAD_ATTR_STACKADDR = 77;
     * }
     */
    public static int _SC_THREAD_ATTR_STACKADDR() {
        return (int)77L;
    }
    /**
     * {@snippet :
     * enum ._SC_THREAD_ATTR_STACKSIZE = 78;
     * }
     */
    public static int _SC_THREAD_ATTR_STACKSIZE() {
        return (int)78L;
    }
    /**
     * {@snippet :
     * enum ._SC_THREAD_PRIORITY_SCHEDULING = 79;
     * }
     */
    public static int _SC_THREAD_PRIORITY_SCHEDULING() {
        return (int)79L;
    }
    /**
     * {@snippet :
     * enum ._SC_THREAD_PRIO_INHERIT = 80;
     * }
     */
    public static int _SC_THREAD_PRIO_INHERIT() {
        return (int)80L;
    }
    /**
     * {@snippet :
     * enum ._SC_THREAD_PRIO_PROTECT = 81;
     * }
     */
    public static int _SC_THREAD_PRIO_PROTECT() {
        return (int)81L;
    }
    /**
     * {@snippet :
     * enum ._SC_THREAD_PROCESS_SHARED = 82;
     * }
     */
    public static int _SC_THREAD_PROCESS_SHARED() {
        return (int)82L;
    }
    /**
     * {@snippet :
     * enum ._SC_NPROCESSORS_CONF = 83;
     * }
     */
    public static int _SC_NPROCESSORS_CONF() {
        return (int)83L;
    }
    /**
     * {@snippet :
     * enum ._SC_NPROCESSORS_ONLN = 84;
     * }
     */
    public static int _SC_NPROCESSORS_ONLN() {
        return (int)84L;
    }
    /**
     * {@snippet :
     * enum ._SC_PHYS_PAGES = 85;
     * }
     */
    public static int _SC_PHYS_PAGES() {
        return (int)85L;
    }
    /**
     * {@snippet :
     * enum ._SC_AVPHYS_PAGES = 86;
     * }
     */
    public static int _SC_AVPHYS_PAGES() {
        return (int)86L;
    }
    /**
     * {@snippet :
     * enum ._SC_ATEXIT_MAX = 87;
     * }
     */
    public static int _SC_ATEXIT_MAX() {
        return (int)87L;
    }
    /**
     * {@snippet :
     * enum ._SC_PASS_MAX = 88;
     * }
     */
    public static int _SC_PASS_MAX() {
        return (int)88L;
    }
    /**
     * {@snippet :
     * enum ._SC_XOPEN_VERSION = 89;
     * }
     */
    public static int _SC_XOPEN_VERSION() {
        return (int)89L;
    }
    /**
     * {@snippet :
     * enum ._SC_XOPEN_XCU_VERSION = 90;
     * }
     */
    public static int _SC_XOPEN_XCU_VERSION() {
        return (int)90L;
    }
    /**
     * {@snippet :
     * enum ._SC_XOPEN_UNIX = 91;
     * }
     */
    public static int _SC_XOPEN_UNIX() {
        return (int)91L;
    }
    /**
     * {@snippet :
     * enum ._SC_XOPEN_CRYPT = 92;
     * }
     */
    public static int _SC_XOPEN_CRYPT() {
        return (int)92L;
    }
    /**
     * {@snippet :
     * enum ._SC_XOPEN_ENH_I18N = 93;
     * }
     */
    public static int _SC_XOPEN_ENH_I18N() {
        return (int)93L;
    }
    /**
     * {@snippet :
     * enum ._SC_XOPEN_SHM = 94;
     * }
     */
    public static int _SC_XOPEN_SHM() {
        return (int)94L;
    }
    /**
     * {@snippet :
     * enum ._SC_2_CHAR_TERM = 95;
     * }
     */
    public static int _SC_2_CHAR_TERM() {
        return (int)95L;
    }
    /**
     * {@snippet :
     * enum ._SC_2_C_VERSION = 96;
     * }
     */
    public static int _SC_2_C_VERSION() {
        return (int)96L;
    }
    /**
     * {@snippet :
     * enum ._SC_2_UPE = 97;
     * }
     */
    public static int _SC_2_UPE() {
        return (int)97L;
    }
    /**
     * {@snippet :
     * enum ._SC_XOPEN_XPG2 = 98;
     * }
     */
    public static int _SC_XOPEN_XPG2() {
        return (int)98L;
    }
    /**
     * {@snippet :
     * enum ._SC_XOPEN_XPG3 = 99;
     * }
     */
    public static int _SC_XOPEN_XPG3() {
        return (int)99L;
    }
    /**
     * {@snippet :
     * enum ._SC_XOPEN_XPG4 = 100;
     * }
     */
    public static int _SC_XOPEN_XPG4() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * enum ._SC_CHAR_BIT = 101;
     * }
     */
    public static int _SC_CHAR_BIT() {
        return (int)101L;
    }
    /**
     * {@snippet :
     * enum ._SC_CHAR_MAX = 102;
     * }
     */
    public static int _SC_CHAR_MAX() {
        return (int)102L;
    }
    /**
     * {@snippet :
     * enum ._SC_CHAR_MIN = 103;
     * }
     */
    public static int _SC_CHAR_MIN() {
        return (int)103L;
    }
    /**
     * {@snippet :
     * enum ._SC_INT_MAX = 104;
     * }
     */
    public static int _SC_INT_MAX() {
        return (int)104L;
    }
    /**
     * {@snippet :
     * enum ._SC_INT_MIN = 105;
     * }
     */
    public static int _SC_INT_MIN() {
        return (int)105L;
    }
    /**
     * {@snippet :
     * enum ._SC_LONG_BIT = 106;
     * }
     */
    public static int _SC_LONG_BIT() {
        return (int)106L;
    }
    /**
     * {@snippet :
     * enum ._SC_WORD_BIT = 107;
     * }
     */
    public static int _SC_WORD_BIT() {
        return (int)107L;
    }
    /**
     * {@snippet :
     * enum ._SC_MB_LEN_MAX = 108;
     * }
     */
    public static int _SC_MB_LEN_MAX() {
        return (int)108L;
    }
    /**
     * {@snippet :
     * enum ._SC_NZERO = 109;
     * }
     */
    public static int _SC_NZERO() {
        return (int)109L;
    }
    /**
     * {@snippet :
     * enum ._SC_SSIZE_MAX = 110;
     * }
     */
    public static int _SC_SSIZE_MAX() {
        return (int)110L;
    }
    /**
     * {@snippet :
     * enum ._SC_SCHAR_MAX = 111;
     * }
     */
    public static int _SC_SCHAR_MAX() {
        return (int)111L;
    }
    /**
     * {@snippet :
     * enum ._SC_SCHAR_MIN = 112;
     * }
     */
    public static int _SC_SCHAR_MIN() {
        return (int)112L;
    }
    /**
     * {@snippet :
     * enum ._SC_SHRT_MAX = 113;
     * }
     */
    public static int _SC_SHRT_MAX() {
        return (int)113L;
    }
    /**
     * {@snippet :
     * enum ._SC_SHRT_MIN = 114;
     * }
     */
    public static int _SC_SHRT_MIN() {
        return (int)114L;
    }
    /**
     * {@snippet :
     * enum ._SC_UCHAR_MAX = 115;
     * }
     */
    public static int _SC_UCHAR_MAX() {
        return (int)115L;
    }
    /**
     * {@snippet :
     * enum ._SC_UINT_MAX = 116;
     * }
     */
    public static int _SC_UINT_MAX() {
        return (int)116L;
    }
    /**
     * {@snippet :
     * enum ._SC_ULONG_MAX = 117;
     * }
     */
    public static int _SC_ULONG_MAX() {
        return (int)117L;
    }
    /**
     * {@snippet :
     * enum ._SC_USHRT_MAX = 118;
     * }
     */
    public static int _SC_USHRT_MAX() {
        return (int)118L;
    }
    /**
     * {@snippet :
     * enum ._SC_NL_ARGMAX = 119;
     * }
     */
    public static int _SC_NL_ARGMAX() {
        return (int)119L;
    }
    /**
     * {@snippet :
     * enum ._SC_NL_LANGMAX = 120;
     * }
     */
    public static int _SC_NL_LANGMAX() {
        return (int)120L;
    }
    /**
     * {@snippet :
     * enum ._SC_NL_MSGMAX = 121;
     * }
     */
    public static int _SC_NL_MSGMAX() {
        return (int)121L;
    }
    /**
     * {@snippet :
     * enum ._SC_NL_NMAX = 122;
     * }
     */
    public static int _SC_NL_NMAX() {
        return (int)122L;
    }
    /**
     * {@snippet :
     * enum ._SC_NL_SETMAX = 123;
     * }
     */
    public static int _SC_NL_SETMAX() {
        return (int)123L;
    }
    /**
     * {@snippet :
     * enum ._SC_NL_TEXTMAX = 124;
     * }
     */
    public static int _SC_NL_TEXTMAX() {
        return (int)124L;
    }
    /**
     * {@snippet :
     * enum ._SC_XBS5_ILP32_OFF32 = 125;
     * }
     */
    public static int _SC_XBS5_ILP32_OFF32() {
        return (int)125L;
    }
    /**
     * {@snippet :
     * enum ._SC_XBS5_ILP32_OFFBIG = 126;
     * }
     */
    public static int _SC_XBS5_ILP32_OFFBIG() {
        return (int)126L;
    }
    /**
     * {@snippet :
     * enum ._SC_XBS5_LP64_OFF64 = 127;
     * }
     */
    public static int _SC_XBS5_LP64_OFF64() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * enum ._SC_XBS5_LPBIG_OFFBIG = 128;
     * }
     */
    public static int _SC_XBS5_LPBIG_OFFBIG() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum ._SC_XOPEN_LEGACY = 129;
     * }
     */
    public static int _SC_XOPEN_LEGACY() {
        return (int)129L;
    }
    /**
     * {@snippet :
     * enum ._SC_XOPEN_REALTIME = 130;
     * }
     */
    public static int _SC_XOPEN_REALTIME() {
        return (int)130L;
    }
    /**
     * {@snippet :
     * enum ._SC_XOPEN_REALTIME_THREADS = 131;
     * }
     */
    public static int _SC_XOPEN_REALTIME_THREADS() {
        return (int)131L;
    }
    /**
     * {@snippet :
     * enum ._SC_ADVISORY_INFO = 132;
     * }
     */
    public static int _SC_ADVISORY_INFO() {
        return (int)132L;
    }
    /**
     * {@snippet :
     * enum ._SC_BARRIERS = 133;
     * }
     */
    public static int _SC_BARRIERS() {
        return (int)133L;
    }
    /**
     * {@snippet :
     * enum ._SC_BASE = 134;
     * }
     */
    public static int _SC_BASE() {
        return (int)134L;
    }
    /**
     * {@snippet :
     * enum ._SC_C_LANG_SUPPORT = 135;
     * }
     */
    public static int _SC_C_LANG_SUPPORT() {
        return (int)135L;
    }
    /**
     * {@snippet :
     * enum ._SC_C_LANG_SUPPORT_R = 136;
     * }
     */
    public static int _SC_C_LANG_SUPPORT_R() {
        return (int)136L;
    }
    /**
     * {@snippet :
     * enum ._SC_CLOCK_SELECTION = 137;
     * }
     */
    public static int _SC_CLOCK_SELECTION() {
        return (int)137L;
    }
    /**
     * {@snippet :
     * enum ._SC_CPUTIME = 138;
     * }
     */
    public static int _SC_CPUTIME() {
        return (int)138L;
    }
    /**
     * {@snippet :
     * enum ._SC_THREAD_CPUTIME = 139;
     * }
     */
    public static int _SC_THREAD_CPUTIME() {
        return (int)139L;
    }
    /**
     * {@snippet :
     * enum ._SC_DEVICE_IO = 140;
     * }
     */
    public static int _SC_DEVICE_IO() {
        return (int)140L;
    }
    /**
     * {@snippet :
     * enum ._SC_DEVICE_SPECIFIC = 141;
     * }
     */
    public static int _SC_DEVICE_SPECIFIC() {
        return (int)141L;
    }
    /**
     * {@snippet :
     * enum ._SC_DEVICE_SPECIFIC_R = 142;
     * }
     */
    public static int _SC_DEVICE_SPECIFIC_R() {
        return (int)142L;
    }
    /**
     * {@snippet :
     * enum ._SC_FD_MGMT = 143;
     * }
     */
    public static int _SC_FD_MGMT() {
        return (int)143L;
    }
    /**
     * {@snippet :
     * enum ._SC_FIFO = 144;
     * }
     */
    public static int _SC_FIFO() {
        return (int)144L;
    }
    /**
     * {@snippet :
     * enum ._SC_PIPE = 145;
     * }
     */
    public static int _SC_PIPE() {
        return (int)145L;
    }
    /**
     * {@snippet :
     * enum ._SC_FILE_ATTRIBUTES = 146;
     * }
     */
    public static int _SC_FILE_ATTRIBUTES() {
        return (int)146L;
    }
    /**
     * {@snippet :
     * enum ._SC_FILE_LOCKING = 147;
     * }
     */
    public static int _SC_FILE_LOCKING() {
        return (int)147L;
    }
    /**
     * {@snippet :
     * enum ._SC_FILE_SYSTEM = 148;
     * }
     */
    public static int _SC_FILE_SYSTEM() {
        return (int)148L;
    }
    /**
     * {@snippet :
     * enum ._SC_MONOTONIC_CLOCK = 149;
     * }
     */
    public static int _SC_MONOTONIC_CLOCK() {
        return (int)149L;
    }
    /**
     * {@snippet :
     * enum ._SC_MULTI_PROCESS = 150;
     * }
     */
    public static int _SC_MULTI_PROCESS() {
        return (int)150L;
    }
    /**
     * {@snippet :
     * enum ._SC_SINGLE_PROCESS = 151;
     * }
     */
    public static int _SC_SINGLE_PROCESS() {
        return (int)151L;
    }
    /**
     * {@snippet :
     * enum ._SC_NETWORKING = 152;
     * }
     */
    public static int _SC_NETWORKING() {
        return (int)152L;
    }
    /**
     * {@snippet :
     * enum ._SC_READER_WRITER_LOCKS = 153;
     * }
     */
    public static int _SC_READER_WRITER_LOCKS() {
        return (int)153L;
    }
    /**
     * {@snippet :
     * enum ._SC_SPIN_LOCKS = 154;
     * }
     */
    public static int _SC_SPIN_LOCKS() {
        return (int)154L;
    }
    /**
     * {@snippet :
     * enum ._SC_REGEXP = 155;
     * }
     */
    public static int _SC_REGEXP() {
        return (int)155L;
    }
    /**
     * {@snippet :
     * enum ._SC_REGEX_VERSION = 156;
     * }
     */
    public static int _SC_REGEX_VERSION() {
        return (int)156L;
    }
    /**
     * {@snippet :
     * enum ._SC_SHELL = 157;
     * }
     */
    public static int _SC_SHELL() {
        return (int)157L;
    }
    /**
     * {@snippet :
     * enum ._SC_SIGNALS = 158;
     * }
     */
    public static int _SC_SIGNALS() {
        return (int)158L;
    }
    /**
     * {@snippet :
     * enum ._SC_SPAWN = 159;
     * }
     */
    public static int _SC_SPAWN() {
        return (int)159L;
    }
    /**
     * {@snippet :
     * enum ._SC_SPORADIC_SERVER = 160;
     * }
     */
    public static int _SC_SPORADIC_SERVER() {
        return (int)160L;
    }
    /**
     * {@snippet :
     * enum ._SC_THREAD_SPORADIC_SERVER = 161;
     * }
     */
    public static int _SC_THREAD_SPORADIC_SERVER() {
        return (int)161L;
    }
    /**
     * {@snippet :
     * enum ._SC_SYSTEM_DATABASE = 162;
     * }
     */
    public static int _SC_SYSTEM_DATABASE() {
        return (int)162L;
    }
    /**
     * {@snippet :
     * enum ._SC_SYSTEM_DATABASE_R = 163;
     * }
     */
    public static int _SC_SYSTEM_DATABASE_R() {
        return (int)163L;
    }
    /**
     * {@snippet :
     * enum ._SC_TIMEOUTS = 164;
     * }
     */
    public static int _SC_TIMEOUTS() {
        return (int)164L;
    }
    /**
     * {@snippet :
     * enum ._SC_TYPED_MEMORY_OBJECTS = 165;
     * }
     */
    public static int _SC_TYPED_MEMORY_OBJECTS() {
        return (int)165L;
    }
    /**
     * {@snippet :
     * enum ._SC_USER_GROUPS = 166;
     * }
     */
    public static int _SC_USER_GROUPS() {
        return (int)166L;
    }
    /**
     * {@snippet :
     * enum ._SC_USER_GROUPS_R = 167;
     * }
     */
    public static int _SC_USER_GROUPS_R() {
        return (int)167L;
    }
    /**
     * {@snippet :
     * enum ._SC_2_PBS = 168;
     * }
     */
    public static int _SC_2_PBS() {
        return (int)168L;
    }
    /**
     * {@snippet :
     * enum ._SC_2_PBS_ACCOUNTING = 169;
     * }
     */
    public static int _SC_2_PBS_ACCOUNTING() {
        return (int)169L;
    }
    /**
     * {@snippet :
     * enum ._SC_2_PBS_LOCATE = 170;
     * }
     */
    public static int _SC_2_PBS_LOCATE() {
        return (int)170L;
    }
    /**
     * {@snippet :
     * enum ._SC_2_PBS_MESSAGE = 171;
     * }
     */
    public static int _SC_2_PBS_MESSAGE() {
        return (int)171L;
    }
    /**
     * {@snippet :
     * enum ._SC_2_PBS_TRACK = 172;
     * }
     */
    public static int _SC_2_PBS_TRACK() {
        return (int)172L;
    }
    /**
     * {@snippet :
     * enum ._SC_SYMLOOP_MAX = 173;
     * }
     */
    public static int _SC_SYMLOOP_MAX() {
        return (int)173L;
    }
    /**
     * {@snippet :
     * enum ._SC_STREAMS = 174;
     * }
     */
    public static int _SC_STREAMS() {
        return (int)174L;
    }
    /**
     * {@snippet :
     * enum ._SC_2_PBS_CHECKPOINT = 175;
     * }
     */
    public static int _SC_2_PBS_CHECKPOINT() {
        return (int)175L;
    }
    /**
     * {@snippet :
     * enum ._SC_V6_ILP32_OFF32 = 176;
     * }
     */
    public static int _SC_V6_ILP32_OFF32() {
        return (int)176L;
    }
    /**
     * {@snippet :
     * enum ._SC_V6_ILP32_OFFBIG = 177;
     * }
     */
    public static int _SC_V6_ILP32_OFFBIG() {
        return (int)177L;
    }
    /**
     * {@snippet :
     * enum ._SC_V6_LP64_OFF64 = 178;
     * }
     */
    public static int _SC_V6_LP64_OFF64() {
        return (int)178L;
    }
    /**
     * {@snippet :
     * enum ._SC_V6_LPBIG_OFFBIG = 179;
     * }
     */
    public static int _SC_V6_LPBIG_OFFBIG() {
        return (int)179L;
    }
    /**
     * {@snippet :
     * enum ._SC_HOST_NAME_MAX = 180;
     * }
     */
    public static int _SC_HOST_NAME_MAX() {
        return (int)180L;
    }
    /**
     * {@snippet :
     * enum ._SC_TRACE = 181;
     * }
     */
    public static int _SC_TRACE() {
        return (int)181L;
    }
    /**
     * {@snippet :
     * enum ._SC_TRACE_EVENT_FILTER = 182;
     * }
     */
    public static int _SC_TRACE_EVENT_FILTER() {
        return (int)182L;
    }
    /**
     * {@snippet :
     * enum ._SC_TRACE_INHERIT = 183;
     * }
     */
    public static int _SC_TRACE_INHERIT() {
        return (int)183L;
    }
    /**
     * {@snippet :
     * enum ._SC_TRACE_LOG = 184;
     * }
     */
    public static int _SC_TRACE_LOG() {
        return (int)184L;
    }
    /**
     * {@snippet :
     * enum ._SC_LEVEL1_ICACHE_SIZE = 185;
     * }
     */
    public static int _SC_LEVEL1_ICACHE_SIZE() {
        return (int)185L;
    }
    /**
     * {@snippet :
     * enum ._SC_LEVEL1_ICACHE_ASSOC = 186;
     * }
     */
    public static int _SC_LEVEL1_ICACHE_ASSOC() {
        return (int)186L;
    }
    /**
     * {@snippet :
     * enum ._SC_LEVEL1_ICACHE_LINESIZE = 187;
     * }
     */
    public static int _SC_LEVEL1_ICACHE_LINESIZE() {
        return (int)187L;
    }
    /**
     * {@snippet :
     * enum ._SC_LEVEL1_DCACHE_SIZE = 188;
     * }
     */
    public static int _SC_LEVEL1_DCACHE_SIZE() {
        return (int)188L;
    }
    /**
     * {@snippet :
     * enum ._SC_LEVEL1_DCACHE_ASSOC = 189;
     * }
     */
    public static int _SC_LEVEL1_DCACHE_ASSOC() {
        return (int)189L;
    }
    /**
     * {@snippet :
     * enum ._SC_LEVEL1_DCACHE_LINESIZE = 190;
     * }
     */
    public static int _SC_LEVEL1_DCACHE_LINESIZE() {
        return (int)190L;
    }
    /**
     * {@snippet :
     * enum ._SC_LEVEL2_CACHE_SIZE = 191;
     * }
     */
    public static int _SC_LEVEL2_CACHE_SIZE() {
        return (int)191L;
    }
    /**
     * {@snippet :
     * enum ._SC_LEVEL2_CACHE_ASSOC = 192;
     * }
     */
    public static int _SC_LEVEL2_CACHE_ASSOC() {
        return (int)192L;
    }
    /**
     * {@snippet :
     * enum ._SC_LEVEL2_CACHE_LINESIZE = 193;
     * }
     */
    public static int _SC_LEVEL2_CACHE_LINESIZE() {
        return (int)193L;
    }
    /**
     * {@snippet :
     * enum ._SC_LEVEL3_CACHE_SIZE = 194;
     * }
     */
    public static int _SC_LEVEL3_CACHE_SIZE() {
        return (int)194L;
    }
    /**
     * {@snippet :
     * enum ._SC_LEVEL3_CACHE_ASSOC = 195;
     * }
     */
    public static int _SC_LEVEL3_CACHE_ASSOC() {
        return (int)195L;
    }
    /**
     * {@snippet :
     * enum ._SC_LEVEL3_CACHE_LINESIZE = 196;
     * }
     */
    public static int _SC_LEVEL3_CACHE_LINESIZE() {
        return (int)196L;
    }
    /**
     * {@snippet :
     * enum ._SC_LEVEL4_CACHE_SIZE = 197;
     * }
     */
    public static int _SC_LEVEL4_CACHE_SIZE() {
        return (int)197L;
    }
    /**
     * {@snippet :
     * enum ._SC_LEVEL4_CACHE_ASSOC = 198;
     * }
     */
    public static int _SC_LEVEL4_CACHE_ASSOC() {
        return (int)198L;
    }
    /**
     * {@snippet :
     * enum ._SC_LEVEL4_CACHE_LINESIZE = 199;
     * }
     */
    public static int _SC_LEVEL4_CACHE_LINESIZE() {
        return (int)199L;
    }
    /**
     * {@snippet :
     * enum ._SC_IPV6 = 235;
     * }
     */
    public static int _SC_IPV6() {
        return (int)235L;
    }
    /**
     * {@snippet :
     * enum ._SC_RAW_SOCKETS = 236;
     * }
     */
    public static int _SC_RAW_SOCKETS() {
        return (int)236L;
    }
    /**
     * {@snippet :
     * enum ._SC_V7_ILP32_OFF32 = 237;
     * }
     */
    public static int _SC_V7_ILP32_OFF32() {
        return (int)237L;
    }
    /**
     * {@snippet :
     * enum ._SC_V7_ILP32_OFFBIG = 238;
     * }
     */
    public static int _SC_V7_ILP32_OFFBIG() {
        return (int)238L;
    }
    /**
     * {@snippet :
     * enum ._SC_V7_LP64_OFF64 = 239;
     * }
     */
    public static int _SC_V7_LP64_OFF64() {
        return (int)239L;
    }
    /**
     * {@snippet :
     * enum ._SC_V7_LPBIG_OFFBIG = 240;
     * }
     */
    public static int _SC_V7_LPBIG_OFFBIG() {
        return (int)240L;
    }
    /**
     * {@snippet :
     * enum ._SC_SS_REPL_MAX = 241;
     * }
     */
    public static int _SC_SS_REPL_MAX() {
        return (int)241L;
    }
    /**
     * {@snippet :
     * enum ._SC_TRACE_EVENT_NAME_MAX = 242;
     * }
     */
    public static int _SC_TRACE_EVENT_NAME_MAX() {
        return (int)242L;
    }
    /**
     * {@snippet :
     * enum ._SC_TRACE_NAME_MAX = 243;
     * }
     */
    public static int _SC_TRACE_NAME_MAX() {
        return (int)243L;
    }
    /**
     * {@snippet :
     * enum ._SC_TRACE_SYS_MAX = 244;
     * }
     */
    public static int _SC_TRACE_SYS_MAX() {
        return (int)244L;
    }
    /**
     * {@snippet :
     * enum ._SC_TRACE_USER_EVENT_MAX = 245;
     * }
     */
    public static int _SC_TRACE_USER_EVENT_MAX() {
        return (int)245L;
    }
    /**
     * {@snippet :
     * enum ._SC_XOPEN_STREAMS = 246;
     * }
     */
    public static int _SC_XOPEN_STREAMS() {
        return (int)246L;
    }
    /**
     * {@snippet :
     * enum ._SC_THREAD_ROBUST_PRIO_INHERIT = 247;
     * }
     */
    public static int _SC_THREAD_ROBUST_PRIO_INHERIT() {
        return (int)247L;
    }
    /**
     * {@snippet :
     * enum ._SC_THREAD_ROBUST_PRIO_PROTECT = 248;
     * }
     */
    public static int _SC_THREAD_ROBUST_PRIO_PROTECT() {
        return (int)248L;
    }
    /**
     * {@snippet :
     * enum ._SC_MINSIGSTKSZ = 249;
     * }
     */
    public static int _SC_MINSIGSTKSZ() {
        return (int)249L;
    }
    /**
     * {@snippet :
     * enum ._SC_SIGSTKSZ = 250;
     * }
     */
    public static int _SC_SIGSTKSZ() {
        return (int)250L;
    }
    /**
     * {@snippet :
     * enum ._CS_PATH = 0;
     * }
     */
    public static int _CS_PATH() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum ._CS_V6_WIDTH_RESTRICTED_ENVS = 1;
     * }
     */
    public static int _CS_V6_WIDTH_RESTRICTED_ENVS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum ._CS_GNU_LIBC_VERSION = 2;
     * }
     */
    public static int _CS_GNU_LIBC_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum ._CS_GNU_LIBPTHREAD_VERSION = 3;
     * }
     */
    public static int _CS_GNU_LIBPTHREAD_VERSION() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum ._CS_V5_WIDTH_RESTRICTED_ENVS = 4;
     * }
     */
    public static int _CS_V5_WIDTH_RESTRICTED_ENVS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum ._CS_V7_WIDTH_RESTRICTED_ENVS = 5;
     * }
     */
    public static int _CS_V7_WIDTH_RESTRICTED_ENVS() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum ._CS_LFS_CFLAGS = 1000;
     * }
     */
    public static int _CS_LFS_CFLAGS() {
        return (int)1000L;
    }
    /**
     * {@snippet :
     * enum ._CS_LFS_LDFLAGS = 1001;
     * }
     */
    public static int _CS_LFS_LDFLAGS() {
        return (int)1001L;
    }
    /**
     * {@snippet :
     * enum ._CS_LFS_LIBS = 1002;
     * }
     */
    public static int _CS_LFS_LIBS() {
        return (int)1002L;
    }
    /**
     * {@snippet :
     * enum ._CS_LFS_LINTFLAGS = 1003;
     * }
     */
    public static int _CS_LFS_LINTFLAGS() {
        return (int)1003L;
    }
    /**
     * {@snippet :
     * enum ._CS_LFS64_CFLAGS = 1004;
     * }
     */
    public static int _CS_LFS64_CFLAGS() {
        return (int)1004L;
    }
    /**
     * {@snippet :
     * enum ._CS_LFS64_LDFLAGS = 1005;
     * }
     */
    public static int _CS_LFS64_LDFLAGS() {
        return (int)1005L;
    }
    /**
     * {@snippet :
     * enum ._CS_LFS64_LIBS = 1006;
     * }
     */
    public static int _CS_LFS64_LIBS() {
        return (int)1006L;
    }
    /**
     * {@snippet :
     * enum ._CS_LFS64_LINTFLAGS = 1007;
     * }
     */
    public static int _CS_LFS64_LINTFLAGS() {
        return (int)1007L;
    }
    /**
     * {@snippet :
     * enum ._CS_XBS5_ILP32_OFF32_CFLAGS = 1100;
     * }
     */
    public static int _CS_XBS5_ILP32_OFF32_CFLAGS() {
        return (int)1100L;
    }
    /**
     * {@snippet :
     * enum ._CS_XBS5_ILP32_OFF32_LDFLAGS = 1101;
     * }
     */
    public static int _CS_XBS5_ILP32_OFF32_LDFLAGS() {
        return (int)1101L;
    }
    /**
     * {@snippet :
     * enum ._CS_XBS5_ILP32_OFF32_LIBS = 1102;
     * }
     */
    public static int _CS_XBS5_ILP32_OFF32_LIBS() {
        return (int)1102L;
    }
    /**
     * {@snippet :
     * enum ._CS_XBS5_ILP32_OFF32_LINTFLAGS = 1103;
     * }
     */
    public static int _CS_XBS5_ILP32_OFF32_LINTFLAGS() {
        return (int)1103L;
    }
    /**
     * {@snippet :
     * enum ._CS_XBS5_ILP32_OFFBIG_CFLAGS = 1104;
     * }
     */
    public static int _CS_XBS5_ILP32_OFFBIG_CFLAGS() {
        return (int)1104L;
    }
    /**
     * {@snippet :
     * enum ._CS_XBS5_ILP32_OFFBIG_LDFLAGS = 1105;
     * }
     */
    public static int _CS_XBS5_ILP32_OFFBIG_LDFLAGS() {
        return (int)1105L;
    }
    /**
     * {@snippet :
     * enum ._CS_XBS5_ILP32_OFFBIG_LIBS = 1106;
     * }
     */
    public static int _CS_XBS5_ILP32_OFFBIG_LIBS() {
        return (int)1106L;
    }
    /**
     * {@snippet :
     * enum ._CS_XBS5_ILP32_OFFBIG_LINTFLAGS = 1107;
     * }
     */
    public static int _CS_XBS5_ILP32_OFFBIG_LINTFLAGS() {
        return (int)1107L;
    }
    /**
     * {@snippet :
     * enum ._CS_XBS5_LP64_OFF64_CFLAGS = 1108;
     * }
     */
    public static int _CS_XBS5_LP64_OFF64_CFLAGS() {
        return (int)1108L;
    }
    /**
     * {@snippet :
     * enum ._CS_XBS5_LP64_OFF64_LDFLAGS = 1109;
     * }
     */
    public static int _CS_XBS5_LP64_OFF64_LDFLAGS() {
        return (int)1109L;
    }
    /**
     * {@snippet :
     * enum ._CS_XBS5_LP64_OFF64_LIBS = 1110;
     * }
     */
    public static int _CS_XBS5_LP64_OFF64_LIBS() {
        return (int)1110L;
    }
    /**
     * {@snippet :
     * enum ._CS_XBS5_LP64_OFF64_LINTFLAGS = 1111;
     * }
     */
    public static int _CS_XBS5_LP64_OFF64_LINTFLAGS() {
        return (int)1111L;
    }
    /**
     * {@snippet :
     * enum ._CS_XBS5_LPBIG_OFFBIG_CFLAGS = 1112;
     * }
     */
    public static int _CS_XBS5_LPBIG_OFFBIG_CFLAGS() {
        return (int)1112L;
    }
    /**
     * {@snippet :
     * enum ._CS_XBS5_LPBIG_OFFBIG_LDFLAGS = 1113;
     * }
     */
    public static int _CS_XBS5_LPBIG_OFFBIG_LDFLAGS() {
        return (int)1113L;
    }
    /**
     * {@snippet :
     * enum ._CS_XBS5_LPBIG_OFFBIG_LIBS = 1114;
     * }
     */
    public static int _CS_XBS5_LPBIG_OFFBIG_LIBS() {
        return (int)1114L;
    }
    /**
     * {@snippet :
     * enum ._CS_XBS5_LPBIG_OFFBIG_LINTFLAGS = 1115;
     * }
     */
    public static int _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS() {
        return (int)1115L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V6_ILP32_OFF32_CFLAGS = 1116;
     * }
     */
    public static int _CS_POSIX_V6_ILP32_OFF32_CFLAGS() {
        return (int)1116L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V6_ILP32_OFF32_LDFLAGS = 1117;
     * }
     */
    public static int _CS_POSIX_V6_ILP32_OFF32_LDFLAGS() {
        return (int)1117L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V6_ILP32_OFF32_LIBS = 1118;
     * }
     */
    public static int _CS_POSIX_V6_ILP32_OFF32_LIBS() {
        return (int)1118L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V6_ILP32_OFF32_LINTFLAGS = 1119;
     * }
     */
    public static int _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS() {
        return (int)1119L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V6_ILP32_OFFBIG_CFLAGS = 1120;
     * }
     */
    public static int _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS() {
        return (int)1120L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS = 1121;
     * }
     */
    public static int _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS() {
        return (int)1121L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V6_ILP32_OFFBIG_LIBS = 1122;
     * }
     */
    public static int _CS_POSIX_V6_ILP32_OFFBIG_LIBS() {
        return (int)1122L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS = 1123;
     * }
     */
    public static int _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS() {
        return (int)1123L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V6_LP64_OFF64_CFLAGS = 1124;
     * }
     */
    public static int _CS_POSIX_V6_LP64_OFF64_CFLAGS() {
        return (int)1124L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V6_LP64_OFF64_LDFLAGS = 1125;
     * }
     */
    public static int _CS_POSIX_V6_LP64_OFF64_LDFLAGS() {
        return (int)1125L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V6_LP64_OFF64_LIBS = 1126;
     * }
     */
    public static int _CS_POSIX_V6_LP64_OFF64_LIBS() {
        return (int)1126L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V6_LP64_OFF64_LINTFLAGS = 1127;
     * }
     */
    public static int _CS_POSIX_V6_LP64_OFF64_LINTFLAGS() {
        return (int)1127L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS = 1128;
     * }
     */
    public static int _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS() {
        return (int)1128L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS = 1129;
     * }
     */
    public static int _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS() {
        return (int)1129L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V6_LPBIG_OFFBIG_LIBS = 1130;
     * }
     */
    public static int _CS_POSIX_V6_LPBIG_OFFBIG_LIBS() {
        return (int)1130L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS = 1131;
     * }
     */
    public static int _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS() {
        return (int)1131L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V7_ILP32_OFF32_CFLAGS = 1132;
     * }
     */
    public static int _CS_POSIX_V7_ILP32_OFF32_CFLAGS() {
        return (int)1132L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V7_ILP32_OFF32_LDFLAGS = 1133;
     * }
     */
    public static int _CS_POSIX_V7_ILP32_OFF32_LDFLAGS() {
        return (int)1133L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V7_ILP32_OFF32_LIBS = 1134;
     * }
     */
    public static int _CS_POSIX_V7_ILP32_OFF32_LIBS() {
        return (int)1134L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V7_ILP32_OFF32_LINTFLAGS = 1135;
     * }
     */
    public static int _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS() {
        return (int)1135L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V7_ILP32_OFFBIG_CFLAGS = 1136;
     * }
     */
    public static int _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS() {
        return (int)1136L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS = 1137;
     * }
     */
    public static int _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS() {
        return (int)1137L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V7_ILP32_OFFBIG_LIBS = 1138;
     * }
     */
    public static int _CS_POSIX_V7_ILP32_OFFBIG_LIBS() {
        return (int)1138L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS = 1139;
     * }
     */
    public static int _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS() {
        return (int)1139L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V7_LP64_OFF64_CFLAGS = 1140;
     * }
     */
    public static int _CS_POSIX_V7_LP64_OFF64_CFLAGS() {
        return (int)1140L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V7_LP64_OFF64_LDFLAGS = 1141;
     * }
     */
    public static int _CS_POSIX_V7_LP64_OFF64_LDFLAGS() {
        return (int)1141L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V7_LP64_OFF64_LIBS = 1142;
     * }
     */
    public static int _CS_POSIX_V7_LP64_OFF64_LIBS() {
        return (int)1142L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V7_LP64_OFF64_LINTFLAGS = 1143;
     * }
     */
    public static int _CS_POSIX_V7_LP64_OFF64_LINTFLAGS() {
        return (int)1143L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS = 1144;
     * }
     */
    public static int _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS() {
        return (int)1144L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS = 1145;
     * }
     */
    public static int _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS() {
        return (int)1145L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V7_LPBIG_OFFBIG_LIBS = 1146;
     * }
     */
    public static int _CS_POSIX_V7_LPBIG_OFFBIG_LIBS() {
        return (int)1146L;
    }
    /**
     * {@snippet :
     * enum ._CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS = 1147;
     * }
     */
    public static int _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS() {
        return (int)1147L;
    }
    /**
     * {@snippet :
     * enum ._CS_V6_ENV = 1148;
     * }
     */
    public static int _CS_V6_ENV() {
        return (int)1148L;
    }
    /**
     * {@snippet :
     * enum ._CS_V7_ENV = 1149;
     * }
     */
    public static int _CS_V7_ENV() {
        return (int)1149L;
    }
    public static MethodHandle pathconf$MH() {
        return RuntimeHelper.requireNonNull(constants$525.pathconf$MH,"pathconf");
    }
    /**
     * {@snippet :
     * long pathconf(char* __path, int __name);
     * }
     */
    public static long pathconf(MemorySegment __path, int __name) {
        var mh$ = pathconf$MH();
        try {
            return (long)mh$.invokeExact(__path, __name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fpathconf$MH() {
        return RuntimeHelper.requireNonNull(constants$525.fpathconf$MH,"fpathconf");
    }
    /**
     * {@snippet :
     * long fpathconf(int __fd, int __name);
     * }
     */
    public static long fpathconf(int __fd, int __name) {
        var mh$ = fpathconf$MH();
        try {
            return (long)mh$.invokeExact(__fd, __name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sysconf$MH() {
        return RuntimeHelper.requireNonNull(constants$525.sysconf$MH,"sysconf");
    }
    /**
     * {@snippet :
     * long sysconf(int __name);
     * }
     */
    public static long sysconf(int __name) {
        var mh$ = sysconf$MH();
        try {
            return (long)mh$.invokeExact(__name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle confstr$MH() {
        return RuntimeHelper.requireNonNull(constants$525.confstr$MH,"confstr");
    }
    /**
     * {@snippet :
     * size_t confstr(int __name, char* __buf, size_t __len);
     * }
     */
    public static long confstr(int __name, MemorySegment __buf, long __len) {
        var mh$ = confstr$MH();
        try {
            return (long)mh$.invokeExact(__name, __buf, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getpid$MH() {
        return RuntimeHelper.requireNonNull(constants$526.getpid$MH,"getpid");
    }
    /**
     * {@snippet :
     * __pid_t getpid();
     * }
     */
    public static int getpid() {
        var mh$ = getpid$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getppid$MH() {
        return RuntimeHelper.requireNonNull(constants$526.getppid$MH,"getppid");
    }
    /**
     * {@snippet :
     * __pid_t getppid();
     * }
     */
    public static int getppid() {
        var mh$ = getppid$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getpgrp$MH() {
        return RuntimeHelper.requireNonNull(constants$526.getpgrp$MH,"getpgrp");
    }
    /**
     * {@snippet :
     * __pid_t getpgrp();
     * }
     */
    public static int getpgrp() {
        var mh$ = getpgrp$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __getpgid$MH() {
        return RuntimeHelper.requireNonNull(constants$526.__getpgid$MH,"__getpgid");
    }
    /**
     * {@snippet :
     * __pid_t __getpgid(__pid_t __pid);
     * }
     */
    public static int __getpgid(int __pid) {
        var mh$ = __getpgid$MH();
        try {
            return (int)mh$.invokeExact(__pid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getpgid$MH() {
        return RuntimeHelper.requireNonNull(constants$526.getpgid$MH,"getpgid");
    }
    /**
     * {@snippet :
     * __pid_t getpgid(__pid_t __pid);
     * }
     */
    public static int getpgid(int __pid) {
        var mh$ = getpgid$MH();
        try {
            return (int)mh$.invokeExact(__pid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setpgid$MH() {
        return RuntimeHelper.requireNonNull(constants$526.setpgid$MH,"setpgid");
    }
    /**
     * {@snippet :
     * int setpgid(__pid_t __pid, __pid_t __pgid);
     * }
     */
    public static int setpgid(int __pid, int __pgid) {
        var mh$ = setpgid$MH();
        try {
            return (int)mh$.invokeExact(__pid, __pgid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setpgrp$MH() {
        return RuntimeHelper.requireNonNull(constants$527.setpgrp$MH,"setpgrp");
    }
    /**
     * {@snippet :
     * int setpgrp();
     * }
     */
    public static int setpgrp() {
        var mh$ = setpgrp$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setsid$MH() {
        return RuntimeHelper.requireNonNull(constants$527.setsid$MH,"setsid");
    }
    /**
     * {@snippet :
     * __pid_t setsid();
     * }
     */
    public static int setsid() {
        var mh$ = setsid$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getsid$MH() {
        return RuntimeHelper.requireNonNull(constants$527.getsid$MH,"getsid");
    }
    /**
     * {@snippet :
     * __pid_t getsid(__pid_t __pid);
     * }
     */
    public static int getsid(int __pid) {
        var mh$ = getsid$MH();
        try {
            return (int)mh$.invokeExact(__pid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getuid$MH() {
        return RuntimeHelper.requireNonNull(constants$527.getuid$MH,"getuid");
    }
    /**
     * {@snippet :
     * __uid_t getuid();
     * }
     */
    public static int getuid() {
        var mh$ = getuid$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle geteuid$MH() {
        return RuntimeHelper.requireNonNull(constants$527.geteuid$MH,"geteuid");
    }
    /**
     * {@snippet :
     * __uid_t geteuid();
     * }
     */
    public static int geteuid() {
        var mh$ = geteuid$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getgid$MH() {
        return RuntimeHelper.requireNonNull(constants$527.getgid$MH,"getgid");
    }
    /**
     * {@snippet :
     * __gid_t getgid();
     * }
     */
    public static int getgid() {
        var mh$ = getgid$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getegid$MH() {
        return RuntimeHelper.requireNonNull(constants$528.getegid$MH,"getegid");
    }
    /**
     * {@snippet :
     * __gid_t getegid();
     * }
     */
    public static int getegid() {
        var mh$ = getegid$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getgroups$MH() {
        return RuntimeHelper.requireNonNull(constants$528.getgroups$MH,"getgroups");
    }
    /**
     * {@snippet :
     * int getgroups(int __size, __gid_t __list[]);
     * }
     */
    public static int getgroups(int __size, MemorySegment __list) {
        var mh$ = getgroups$MH();
        try {
            return (int)mh$.invokeExact(__size, __list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setuid$MH() {
        return RuntimeHelper.requireNonNull(constants$528.setuid$MH,"setuid");
    }
    /**
     * {@snippet :
     * int setuid(__uid_t __uid);
     * }
     */
    public static int setuid(int __uid) {
        var mh$ = setuid$MH();
        try {
            return (int)mh$.invokeExact(__uid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setreuid$MH() {
        return RuntimeHelper.requireNonNull(constants$528.setreuid$MH,"setreuid");
    }
    /**
     * {@snippet :
     * int setreuid(__uid_t __ruid, __uid_t __euid);
     * }
     */
    public static int setreuid(int __ruid, int __euid) {
        var mh$ = setreuid$MH();
        try {
            return (int)mh$.invokeExact(__ruid, __euid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle seteuid$MH() {
        return RuntimeHelper.requireNonNull(constants$528.seteuid$MH,"seteuid");
    }
    /**
     * {@snippet :
     * int seteuid(__uid_t __uid);
     * }
     */
    public static int seteuid(int __uid) {
        var mh$ = seteuid$MH();
        try {
            return (int)mh$.invokeExact(__uid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setgid$MH() {
        return RuntimeHelper.requireNonNull(constants$528.setgid$MH,"setgid");
    }
    /**
     * {@snippet :
     * int setgid(__gid_t __gid);
     * }
     */
    public static int setgid(int __gid) {
        var mh$ = setgid$MH();
        try {
            return (int)mh$.invokeExact(__gid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setregid$MH() {
        return RuntimeHelper.requireNonNull(constants$529.setregid$MH,"setregid");
    }
    /**
     * {@snippet :
     * int setregid(__gid_t __rgid, __gid_t __egid);
     * }
     */
    public static int setregid(int __rgid, int __egid) {
        var mh$ = setregid$MH();
        try {
            return (int)mh$.invokeExact(__rgid, __egid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setegid$MH() {
        return RuntimeHelper.requireNonNull(constants$529.setegid$MH,"setegid");
    }
    /**
     * {@snippet :
     * int setegid(__gid_t __gid);
     * }
     */
    public static int setegid(int __gid) {
        var mh$ = setegid$MH();
        try {
            return (int)mh$.invokeExact(__gid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fork$MH() {
        return RuntimeHelper.requireNonNull(constants$529.fork$MH,"fork");
    }
    /**
     * {@snippet :
     * __pid_t fork();
     * }
     */
    public static int fork() {
        var mh$ = fork$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfork$MH() {
        return RuntimeHelper.requireNonNull(constants$529.vfork$MH,"vfork");
    }
    /**
     * {@snippet :
     * int vfork();
     * }
     */
    public static int vfork() {
        var mh$ = vfork$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ttyname$MH() {
        return RuntimeHelper.requireNonNull(constants$529.ttyname$MH,"ttyname");
    }
    /**
     * {@snippet :
     * char* ttyname(int __fd);
     * }
     */
    public static MemorySegment ttyname(int __fd) {
        var mh$ = ttyname$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ttyname_r$MH() {
        return RuntimeHelper.requireNonNull(constants$529.ttyname_r$MH,"ttyname_r");
    }
    /**
     * {@snippet :
     * int ttyname_r(int __fd, char* __buf, size_t __buflen);
     * }
     */
    public static int ttyname_r(int __fd, MemorySegment __buf, long __buflen) {
        var mh$ = ttyname_r$MH();
        try {
            return (int)mh$.invokeExact(__fd, __buf, __buflen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isatty$MH() {
        return RuntimeHelper.requireNonNull(constants$530.isatty$MH,"isatty");
    }
    /**
     * {@snippet :
     * int isatty(int __fd);
     * }
     */
    public static int isatty(int __fd) {
        var mh$ = isatty$MH();
        try {
            return (int)mh$.invokeExact(__fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ttyslot$MH() {
        return RuntimeHelper.requireNonNull(constants$530.ttyslot$MH,"ttyslot");
    }
    /**
     * {@snippet :
     * int ttyslot();
     * }
     */
    public static int ttyslot() {
        var mh$ = ttyslot$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle link$MH() {
        return RuntimeHelper.requireNonNull(constants$530.link$MH,"link");
    }
    /**
     * {@snippet :
     * int link(char* __from, char* __to);
     * }
     */
    public static int link(MemorySegment __from, MemorySegment __to) {
        var mh$ = link$MH();
        try {
            return (int)mh$.invokeExact(__from, __to);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle linkat$MH() {
        return RuntimeHelper.requireNonNull(constants$530.linkat$MH,"linkat");
    }
    /**
     * {@snippet :
     * int linkat(int __fromfd, char* __from, int __tofd, char* __to, int __flags);
     * }
     */
    public static int linkat(int __fromfd, MemorySegment __from, int __tofd, MemorySegment __to, int __flags) {
        var mh$ = linkat$MH();
        try {
            return (int)mh$.invokeExact(__fromfd, __from, __tofd, __to, __flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle symlink$MH() {
        return RuntimeHelper.requireNonNull(constants$530.symlink$MH,"symlink");
    }
    /**
     * {@snippet :
     * int symlink(char* __from, char* __to);
     * }
     */
    public static int symlink(MemorySegment __from, MemorySegment __to) {
        var mh$ = symlink$MH();
        try {
            return (int)mh$.invokeExact(__from, __to);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle readlink$MH() {
        return RuntimeHelper.requireNonNull(constants$530.readlink$MH,"readlink");
    }
    /**
     * {@snippet :
     * ssize_t readlink(char* __path, char* __buf, size_t __len);
     * }
     */
    public static long readlink(MemorySegment __path, MemorySegment __buf, long __len) {
        var mh$ = readlink$MH();
        try {
            return (long)mh$.invokeExact(__path, __buf, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle symlinkat$MH() {
        return RuntimeHelper.requireNonNull(constants$531.symlinkat$MH,"symlinkat");
    }
    /**
     * {@snippet :
     * int symlinkat(char* __from, int __tofd, char* __to);
     * }
     */
    public static int symlinkat(MemorySegment __from, int __tofd, MemorySegment __to) {
        var mh$ = symlinkat$MH();
        try {
            return (int)mh$.invokeExact(__from, __tofd, __to);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle readlinkat$MH() {
        return RuntimeHelper.requireNonNull(constants$531.readlinkat$MH,"readlinkat");
    }
    /**
     * {@snippet :
     * ssize_t readlinkat(int __fd, char* __path, char* __buf, size_t __len);
     * }
     */
    public static long readlinkat(int __fd, MemorySegment __path, MemorySegment __buf, long __len) {
        var mh$ = readlinkat$MH();
        try {
            return (long)mh$.invokeExact(__fd, __path, __buf, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle unlink$MH() {
        return RuntimeHelper.requireNonNull(constants$531.unlink$MH,"unlink");
    }
    /**
     * {@snippet :
     * int unlink(char* __name);
     * }
     */
    public static int unlink(MemorySegment __name) {
        var mh$ = unlink$MH();
        try {
            return (int)mh$.invokeExact(__name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle unlinkat$MH() {
        return RuntimeHelper.requireNonNull(constants$531.unlinkat$MH,"unlinkat");
    }
    /**
     * {@snippet :
     * int unlinkat(int __fd, char* __name, int __flag);
     * }
     */
    public static int unlinkat(int __fd, MemorySegment __name, int __flag) {
        var mh$ = unlinkat$MH();
        try {
            return (int)mh$.invokeExact(__fd, __name, __flag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rmdir$MH() {
        return RuntimeHelper.requireNonNull(constants$531.rmdir$MH,"rmdir");
    }
    /**
     * {@snippet :
     * int rmdir(char* __path);
     * }
     */
    public static int rmdir(MemorySegment __path) {
        var mh$ = rmdir$MH();
        try {
            return (int)mh$.invokeExact(__path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tcgetpgrp$MH() {
        return RuntimeHelper.requireNonNull(constants$531.tcgetpgrp$MH,"tcgetpgrp");
    }
    /**
     * {@snippet :
     * __pid_t tcgetpgrp(int __fd);
     * }
     */
    public static int tcgetpgrp(int __fd) {
        var mh$ = tcgetpgrp$MH();
        try {
            return (int)mh$.invokeExact(__fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tcsetpgrp$MH() {
        return RuntimeHelper.requireNonNull(constants$532.tcsetpgrp$MH,"tcsetpgrp");
    }
    /**
     * {@snippet :
     * int tcsetpgrp(int __fd, __pid_t __pgrp_id);
     * }
     */
    public static int tcsetpgrp(int __fd, int __pgrp_id) {
        var mh$ = tcsetpgrp$MH();
        try {
            return (int)mh$.invokeExact(__fd, __pgrp_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getlogin$MH() {
        return RuntimeHelper.requireNonNull(constants$532.getlogin$MH,"getlogin");
    }
    /**
     * {@snippet :
     * char* getlogin();
     * }
     */
    public static MemorySegment getlogin() {
        var mh$ = getlogin$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getlogin_r$MH() {
        return RuntimeHelper.requireNonNull(constants$532.getlogin_r$MH,"getlogin_r");
    }
    /**
     * {@snippet :
     * int getlogin_r(char* __name, size_t __name_len);
     * }
     */
    public static int getlogin_r(MemorySegment __name, long __name_len) {
        var mh$ = getlogin_r$MH();
        try {
            return (int)mh$.invokeExact(__name, __name_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setlogin$MH() {
        return RuntimeHelper.requireNonNull(constants$532.setlogin$MH,"setlogin");
    }
    /**
     * {@snippet :
     * int setlogin(char* __name);
     * }
     */
    public static int setlogin(MemorySegment __name) {
        var mh$ = setlogin$MH();
        try {
            return (int)mh$.invokeExact(__name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout optarg$LAYOUT() {
        return constants$532.optarg$LAYOUT;
    }
    public static VarHandle optarg$VH() {
        return constants$532.optarg$VH;
    }
    public static MemorySegment optarg$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$532.optarg$SEGMENT,"optarg");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * char* optarg;
     * }
     */
    public static MemorySegment optarg$get() {
        return (java.lang.foreign.MemorySegment) constants$532.optarg$VH.get(RuntimeHelper.requireNonNull(constants$532.optarg$SEGMENT, "optarg"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * char* optarg;
     * }
     */
    public static void optarg$set(MemorySegment x) {
        constants$532.optarg$VH.set(RuntimeHelper.requireNonNull(constants$532.optarg$SEGMENT, "optarg"), x);
    }
    public static MemoryLayout optind$LAYOUT() {
        return constants$532.optind$LAYOUT;
    }
    public static VarHandle optind$VH() {
        return constants$532.optind$VH;
    }
    public static MemorySegment optind$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$532.optind$SEGMENT,"optind");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * int optind;
     * }
     */
    public static int optind$get() {
        return (int) constants$532.optind$VH.get(RuntimeHelper.requireNonNull(constants$532.optind$SEGMENT, "optind"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * int optind;
     * }
     */
    public static void optind$set(int x) {
        constants$532.optind$VH.set(RuntimeHelper.requireNonNull(constants$532.optind$SEGMENT, "optind"), x);
    }
    public static MemoryLayout opterr$LAYOUT() {
        return constants$533.opterr$LAYOUT;
    }
    public static VarHandle opterr$VH() {
        return constants$533.opterr$VH;
    }
    public static MemorySegment opterr$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$533.opterr$SEGMENT,"opterr");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * int opterr;
     * }
     */
    public static int opterr$get() {
        return (int) constants$533.opterr$VH.get(RuntimeHelper.requireNonNull(constants$533.opterr$SEGMENT, "opterr"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * int opterr;
     * }
     */
    public static void opterr$set(int x) {
        constants$533.opterr$VH.set(RuntimeHelper.requireNonNull(constants$533.opterr$SEGMENT, "opterr"), x);
    }
    public static MemoryLayout optopt$LAYOUT() {
        return constants$533.optopt$LAYOUT;
    }
    public static VarHandle optopt$VH() {
        return constants$533.optopt$VH;
    }
    public static MemorySegment optopt$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$533.optopt$SEGMENT,"optopt");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * int optopt;
     * }
     */
    public static int optopt$get() {
        return (int) constants$533.optopt$VH.get(RuntimeHelper.requireNonNull(constants$533.optopt$SEGMENT, "optopt"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * int optopt;
     * }
     */
    public static void optopt$set(int x) {
        constants$533.optopt$VH.set(RuntimeHelper.requireNonNull(constants$533.optopt$SEGMENT, "optopt"), x);
    }
    public static MethodHandle getopt$MH() {
        return RuntimeHelper.requireNonNull(constants$533.getopt$MH,"getopt");
    }
    /**
     * {@snippet :
     * int getopt(int ___argc, char** ___argv, char* __shortopts);
     * }
     */
    public static int getopt(int ___argc, MemorySegment ___argv, MemorySegment __shortopts) {
        var mh$ = getopt$MH();
        try {
            return (int)mh$.invokeExact(___argc, ___argv, __shortopts);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gethostname$MH() {
        return RuntimeHelper.requireNonNull(constants$533.gethostname$MH,"gethostname");
    }
    /**
     * {@snippet :
     * int gethostname(char* __name, size_t __len);
     * }
     */
    public static int gethostname(MemorySegment __name, long __len) {
        var mh$ = gethostname$MH();
        try {
            return (int)mh$.invokeExact(__name, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sethostname$MH() {
        return RuntimeHelper.requireNonNull(constants$533.sethostname$MH,"sethostname");
    }
    /**
     * {@snippet :
     * int sethostname(char* __name, size_t __len);
     * }
     */
    public static int sethostname(MemorySegment __name, long __len) {
        var mh$ = sethostname$MH();
        try {
            return (int)mh$.invokeExact(__name, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sethostid$MH() {
        return RuntimeHelper.requireNonNull(constants$533.sethostid$MH,"sethostid");
    }
    /**
     * {@snippet :
     * int sethostid(long __id);
     * }
     */
    public static int sethostid(long __id) {
        var mh$ = sethostid$MH();
        try {
            return (int)mh$.invokeExact(__id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getdomainname$MH() {
        return RuntimeHelper.requireNonNull(constants$534.getdomainname$MH,"getdomainname");
    }
    /**
     * {@snippet :
     * int getdomainname(char* __name, size_t __len);
     * }
     */
    public static int getdomainname(MemorySegment __name, long __len) {
        var mh$ = getdomainname$MH();
        try {
            return (int)mh$.invokeExact(__name, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setdomainname$MH() {
        return RuntimeHelper.requireNonNull(constants$534.setdomainname$MH,"setdomainname");
    }
    /**
     * {@snippet :
     * int setdomainname(char* __name, size_t __len);
     * }
     */
    public static int setdomainname(MemorySegment __name, long __len) {
        var mh$ = setdomainname$MH();
        try {
            return (int)mh$.invokeExact(__name, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vhangup$MH() {
        return RuntimeHelper.requireNonNull(constants$534.vhangup$MH,"vhangup");
    }
    /**
     * {@snippet :
     * int vhangup();
     * }
     */
    public static int vhangup() {
        var mh$ = vhangup$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle revoke$MH() {
        return RuntimeHelper.requireNonNull(constants$534.revoke$MH,"revoke");
    }
    /**
     * {@snippet :
     * int revoke(char* __file);
     * }
     */
    public static int revoke(MemorySegment __file) {
        var mh$ = revoke$MH();
        try {
            return (int)mh$.invokeExact(__file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle profil$MH() {
        return RuntimeHelper.requireNonNull(constants$534.profil$MH,"profil");
    }
    /**
     * {@snippet :
     * int profil(unsigned short* __sample_buffer, size_t __size, size_t __offset, unsigned int __scale);
     * }
     */
    public static int profil(MemorySegment __sample_buffer, long __size, long __offset, int __scale) {
        var mh$ = profil$MH();
        try {
            return (int)mh$.invokeExact(__sample_buffer, __size, __offset, __scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle acct$MH() {
        return RuntimeHelper.requireNonNull(constants$534.acct$MH,"acct");
    }
    /**
     * {@snippet :
     * int acct(char* __name);
     * }
     */
    public static int acct(MemorySegment __name) {
        var mh$ = acct$MH();
        try {
            return (int)mh$.invokeExact(__name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getusershell$MH() {
        return RuntimeHelper.requireNonNull(constants$535.getusershell$MH,"getusershell");
    }
    /**
     * {@snippet :
     * char* getusershell();
     * }
     */
    public static MemorySegment getusershell() {
        var mh$ = getusershell$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle endusershell$MH() {
        return RuntimeHelper.requireNonNull(constants$535.endusershell$MH,"endusershell");
    }
    /**
     * {@snippet :
     * void endusershell();
     * }
     */
    public static void endusershell() {
        var mh$ = endusershell$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setusershell$MH() {
        return RuntimeHelper.requireNonNull(constants$535.setusershell$MH,"setusershell");
    }
    /**
     * {@snippet :
     * void setusershell();
     * }
     */
    public static void setusershell() {
        var mh$ = setusershell$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle daemon$MH() {
        return RuntimeHelper.requireNonNull(constants$535.daemon$MH,"daemon");
    }
    /**
     * {@snippet :
     * int daemon(int __nochdir, int __noclose);
     * }
     */
    public static int daemon(int __nochdir, int __noclose) {
        var mh$ = daemon$MH();
        try {
            return (int)mh$.invokeExact(__nochdir, __noclose);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle chroot$MH() {
        return RuntimeHelper.requireNonNull(constants$535.chroot$MH,"chroot");
    }
    /**
     * {@snippet :
     * int chroot(char* __path);
     * }
     */
    public static int chroot(MemorySegment __path) {
        var mh$ = chroot$MH();
        try {
            return (int)mh$.invokeExact(__path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getpass$MH() {
        return RuntimeHelper.requireNonNull(constants$535.getpass$MH,"getpass");
    }
    /**
     * {@snippet :
     * char* getpass(char* __prompt);
     * }
     */
    public static MemorySegment getpass(MemorySegment __prompt) {
        var mh$ = getpass$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__prompt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fsync$MH() {
        return RuntimeHelper.requireNonNull(constants$536.fsync$MH,"fsync");
    }
    /**
     * {@snippet :
     * int fsync(int __fd);
     * }
     */
    public static int fsync(int __fd) {
        var mh$ = fsync$MH();
        try {
            return (int)mh$.invokeExact(__fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gethostid$MH() {
        return RuntimeHelper.requireNonNull(constants$536.gethostid$MH,"gethostid");
    }
    /**
     * {@snippet :
     * long gethostid();
     * }
     */
    public static long gethostid() {
        var mh$ = gethostid$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sync$MH() {
        return RuntimeHelper.requireNonNull(constants$536.sync$MH,"sync");
    }
    /**
     * {@snippet :
     * void sync();
     * }
     */
    public static void sync() {
        var mh$ = sync$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getpagesize$MH() {
        return RuntimeHelper.requireNonNull(constants$536.getpagesize$MH,"getpagesize");
    }
    /**
     * {@snippet :
     * int getpagesize();
     * }
     */
    public static int getpagesize() {
        var mh$ = getpagesize$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getdtablesize$MH() {
        return RuntimeHelper.requireNonNull(constants$536.getdtablesize$MH,"getdtablesize");
    }
    /**
     * {@snippet :
     * int getdtablesize();
     * }
     */
    public static int getdtablesize() {
        var mh$ = getdtablesize$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle truncate$MH() {
        return RuntimeHelper.requireNonNull(constants$536.truncate$MH,"truncate");
    }
    /**
     * {@snippet :
     * int truncate(char* __file, __off_t __length);
     * }
     */
    public static int truncate(MemorySegment __file, long __length) {
        var mh$ = truncate$MH();
        try {
            return (int)mh$.invokeExact(__file, __length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ftruncate$MH() {
        return RuntimeHelper.requireNonNull(constants$537.ftruncate$MH,"ftruncate");
    }
    /**
     * {@snippet :
     * int ftruncate(int __fd, __off_t __length);
     * }
     */
    public static int ftruncate(int __fd, long __length) {
        var mh$ = ftruncate$MH();
        try {
            return (int)mh$.invokeExact(__fd, __length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle brk$MH() {
        return RuntimeHelper.requireNonNull(constants$537.brk$MH,"brk");
    }
    /**
     * {@snippet :
     * int brk(void* __addr);
     * }
     */
    public static int brk(MemorySegment __addr) {
        var mh$ = brk$MH();
        try {
            return (int)mh$.invokeExact(__addr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sbrk$MH() {
        return RuntimeHelper.requireNonNull(constants$537.sbrk$MH,"sbrk");
    }
    /**
     * {@snippet :
     * void* sbrk(intptr_t __delta);
     * }
     */
    public static MemorySegment sbrk(long __delta) {
        var mh$ = sbrk$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__delta);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle syscall$MH() {
        return RuntimeHelper.requireNonNull(constants$537.syscall$MH,"syscall");
    }
    /**
     * {@snippet :
     * long syscall(long __sysno,...);
     * }
     */
    public static long syscall(long __sysno, Object... x1) {
        var mh$ = syscall$MH();
        try {
            return (long)mh$.invokeExact(__sysno, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lockf$MH() {
        return RuntimeHelper.requireNonNull(constants$537.lockf$MH,"lockf");
    }
    /**
     * {@snippet :
     * int lockf(int __fd, int __cmd, __off_t __len);
     * }
     */
    public static int lockf(int __fd, int __cmd, long __len) {
        var mh$ = lockf$MH();
        try {
            return (int)mh$.invokeExact(__fd, __cmd, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fdatasync$MH() {
        return RuntimeHelper.requireNonNull(constants$537.fdatasync$MH,"fdatasync");
    }
    /**
     * {@snippet :
     * int fdatasync(int __fildes);
     * }
     */
    public static int fdatasync(int __fildes) {
        var mh$ = fdatasync$MH();
        try {
            return (int)mh$.invokeExact(__fildes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypt$MH() {
        return RuntimeHelper.requireNonNull(constants$538.crypt$MH,"crypt");
    }
    /**
     * {@snippet :
     * char* crypt(char* __key, char* __salt);
     * }
     */
    public static MemorySegment crypt(MemorySegment __key, MemorySegment __salt) {
        var mh$ = crypt$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__key, __salt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getentropy$MH() {
        return RuntimeHelper.requireNonNull(constants$538.getentropy$MH,"getentropy");
    }
    /**
     * {@snippet :
     * int getentropy(void* __buffer, size_t __length);
     * }
     */
    public static int getentropy(MemorySegment __buffer, long __length) {
        var mh$ = getentropy$MH();
        try {
            return (int)mh$.invokeExact(__buffer, __length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_credentials_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$538.g_credentials_get_type$MH,"g_credentials_get_type");
    }
    /**
     * {@snippet :
     * GType g_credentials_get_type();
     * }
     */
    public static long g_credentials_get_type() {
        var mh$ = g_credentials_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_credentials_new$MH() {
        return RuntimeHelper.requireNonNull(constants$538.g_credentials_new$MH,"g_credentials_new");
    }
    /**
     * {@snippet :
     * GCredentials* g_credentials_new();
     * }
     */
    public static MemorySegment g_credentials_new() {
        var mh$ = g_credentials_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_credentials_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$538.g_credentials_to_string$MH,"g_credentials_to_string");
    }
    /**
     * {@snippet :
     * gchar* g_credentials_to_string(GCredentials* credentials);
     * }
     */
    public static MemorySegment g_credentials_to_string(MemorySegment credentials) {
        var mh$ = g_credentials_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(credentials);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_credentials_get_native$MH() {
        return RuntimeHelper.requireNonNull(constants$538.g_credentials_get_native$MH,"g_credentials_get_native");
    }
    /**
     * {@snippet :
     * gpointer g_credentials_get_native(GCredentials* credentials, GCredentialsType native_type);
     * }
     */
    public static MemorySegment g_credentials_get_native(MemorySegment credentials, int native_type) {
        var mh$ = g_credentials_get_native$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(credentials, native_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_credentials_set_native$MH() {
        return RuntimeHelper.requireNonNull(constants$539.g_credentials_set_native$MH,"g_credentials_set_native");
    }
    /**
     * {@snippet :
     * void g_credentials_set_native(GCredentials* credentials, GCredentialsType native_type, gpointer native);
     * }
     */
    public static void g_credentials_set_native(MemorySegment credentials, int native_type, MemorySegment native_) {
        var mh$ = g_credentials_set_native$MH();
        try {
            mh$.invokeExact(credentials, native_type, native_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_credentials_is_same_user$MH() {
        return RuntimeHelper.requireNonNull(constants$539.g_credentials_is_same_user$MH,"g_credentials_is_same_user");
    }
    /**
     * {@snippet :
     * gboolean g_credentials_is_same_user(GCredentials* credentials, GCredentials* other_credentials, GError** error);
     * }
     */
    public static int g_credentials_is_same_user(MemorySegment credentials, MemorySegment other_credentials, MemorySegment error) {
        var mh$ = g_credentials_is_same_user$MH();
        try {
            return (int)mh$.invokeExact(credentials, other_credentials, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_credentials_get_unix_pid$MH() {
        return RuntimeHelper.requireNonNull(constants$539.g_credentials_get_unix_pid$MH,"g_credentials_get_unix_pid");
    }
    /**
     * {@snippet :
     * pid_t g_credentials_get_unix_pid(GCredentials* credentials, GError** error);
     * }
     */
    public static int g_credentials_get_unix_pid(MemorySegment credentials, MemorySegment error) {
        var mh$ = g_credentials_get_unix_pid$MH();
        try {
            return (int)mh$.invokeExact(credentials, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_credentials_get_unix_user$MH() {
        return RuntimeHelper.requireNonNull(constants$539.g_credentials_get_unix_user$MH,"g_credentials_get_unix_user");
    }
    /**
     * {@snippet :
     * uid_t g_credentials_get_unix_user(GCredentials* credentials, GError** error);
     * }
     */
    public static int g_credentials_get_unix_user(MemorySegment credentials, MemorySegment error) {
        var mh$ = g_credentials_get_unix_user$MH();
        try {
            return (int)mh$.invokeExact(credentials, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_credentials_set_unix_user$MH() {
        return RuntimeHelper.requireNonNull(constants$539.g_credentials_set_unix_user$MH,"g_credentials_set_unix_user");
    }
    /**
     * {@snippet :
     * gboolean g_credentials_set_unix_user(GCredentials* credentials, uid_t uid, GError** error);
     * }
     */
    public static int g_credentials_set_unix_user(MemorySegment credentials, int uid, MemorySegment error) {
        var mh$ = g_credentials_set_unix_user$MH();
        try {
            return (int)mh$.invokeExact(credentials, uid, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_datagram_based_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$539.g_datagram_based_get_type$MH,"g_datagram_based_get_type");
    }
    /**
     * {@snippet :
     * GType g_datagram_based_get_type();
     * }
     */
    public static long g_datagram_based_get_type() {
        var mh$ = g_datagram_based_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_datagram_based_receive_messages$MH() {
        return RuntimeHelper.requireNonNull(constants$540.g_datagram_based_receive_messages$MH,"g_datagram_based_receive_messages");
    }
    /**
     * {@snippet :
     * gint g_datagram_based_receive_messages(GDatagramBased* datagram_based, GInputMessage* messages, guint num_messages, gint flags, gint64 timeout, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_datagram_based_receive_messages(MemorySegment datagram_based, MemorySegment messages, int num_messages, int flags, long timeout, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_datagram_based_receive_messages$MH();
        try {
            return (int)mh$.invokeExact(datagram_based, messages, num_messages, flags, timeout, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_datagram_based_send_messages$MH() {
        return RuntimeHelper.requireNonNull(constants$540.g_datagram_based_send_messages$MH,"g_datagram_based_send_messages");
    }
    /**
     * {@snippet :
     * gint g_datagram_based_send_messages(GDatagramBased* datagram_based, GOutputMessage* messages, guint num_messages, gint flags, gint64 timeout, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_datagram_based_send_messages(MemorySegment datagram_based, MemorySegment messages, int num_messages, int flags, long timeout, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_datagram_based_send_messages$MH();
        try {
            return (int)mh$.invokeExact(datagram_based, messages, num_messages, flags, timeout, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_datagram_based_create_source$MH() {
        return RuntimeHelper.requireNonNull(constants$540.g_datagram_based_create_source$MH,"g_datagram_based_create_source");
    }
    /**
     * {@snippet :
     * GSource* g_datagram_based_create_source(GDatagramBased* datagram_based, GIOCondition condition, GCancellable* cancellable);
     * }
     */
    public static MemorySegment g_datagram_based_create_source(MemorySegment datagram_based, int condition, MemorySegment cancellable) {
        var mh$ = g_datagram_based_create_source$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(datagram_based, condition, cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_datagram_based_condition_check$MH() {
        return RuntimeHelper.requireNonNull(constants$540.g_datagram_based_condition_check$MH,"g_datagram_based_condition_check");
    }
    /**
     * {@snippet :
     * GIOCondition g_datagram_based_condition_check(GDatagramBased* datagram_based, GIOCondition condition);
     * }
     */
    public static int g_datagram_based_condition_check(MemorySegment datagram_based, int condition) {
        var mh$ = g_datagram_based_condition_check$MH();
        try {
            return (int)mh$.invokeExact(datagram_based, condition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_datagram_based_condition_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$540.g_datagram_based_condition_wait$MH,"g_datagram_based_condition_wait");
    }
    /**
     * {@snippet :
     * gboolean g_datagram_based_condition_wait(GDatagramBased* datagram_based, GIOCondition condition, gint64 timeout, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_datagram_based_condition_wait(MemorySegment datagram_based, int condition, long timeout, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_datagram_based_condition_wait$MH();
        try {
            return (int)mh$.invokeExact(datagram_based, condition, timeout, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$540.g_data_input_stream_get_type$MH,"g_data_input_stream_get_type");
    }
    /**
     * {@snippet :
     * GType g_data_input_stream_get_type();
     * }
     */
    public static long g_data_input_stream_get_type() {
        var mh$ = g_data_input_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_new$MH() {
        return RuntimeHelper.requireNonNull(constants$541.g_data_input_stream_new$MH,"g_data_input_stream_new");
    }
    /**
     * {@snippet :
     * GDataInputStream* g_data_input_stream_new(GInputStream* base_stream);
     * }
     */
    public static MemorySegment g_data_input_stream_new(MemorySegment base_stream) {
        var mh$ = g_data_input_stream_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(base_stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_set_byte_order$MH() {
        return RuntimeHelper.requireNonNull(constants$541.g_data_input_stream_set_byte_order$MH,"g_data_input_stream_set_byte_order");
    }
    /**
     * {@snippet :
     * void g_data_input_stream_set_byte_order(GDataInputStream* stream, GDataStreamByteOrder order);
     * }
     */
    public static void g_data_input_stream_set_byte_order(MemorySegment stream, int order) {
        var mh$ = g_data_input_stream_set_byte_order$MH();
        try {
            mh$.invokeExact(stream, order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_get_byte_order$MH() {
        return RuntimeHelper.requireNonNull(constants$541.g_data_input_stream_get_byte_order$MH,"g_data_input_stream_get_byte_order");
    }
    /**
     * {@snippet :
     * GDataStreamByteOrder g_data_input_stream_get_byte_order(GDataInputStream* stream);
     * }
     */
    public static int g_data_input_stream_get_byte_order(MemorySegment stream) {
        var mh$ = g_data_input_stream_get_byte_order$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_set_newline_type$MH() {
        return RuntimeHelper.requireNonNull(constants$541.g_data_input_stream_set_newline_type$MH,"g_data_input_stream_set_newline_type");
    }
    /**
     * {@snippet :
     * void g_data_input_stream_set_newline_type(GDataInputStream* stream, GDataStreamNewlineType type);
     * }
     */
    public static void g_data_input_stream_set_newline_type(MemorySegment stream, int type) {
        var mh$ = g_data_input_stream_set_newline_type$MH();
        try {
            mh$.invokeExact(stream, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_get_newline_type$MH() {
        return RuntimeHelper.requireNonNull(constants$541.g_data_input_stream_get_newline_type$MH,"g_data_input_stream_get_newline_type");
    }
    /**
     * {@snippet :
     * GDataStreamNewlineType g_data_input_stream_get_newline_type(GDataInputStream* stream);
     * }
     */
    public static int g_data_input_stream_get_newline_type(MemorySegment stream) {
        var mh$ = g_data_input_stream_get_newline_type$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_read_byte$MH() {
        return RuntimeHelper.requireNonNull(constants$541.g_data_input_stream_read_byte$MH,"g_data_input_stream_read_byte");
    }
    /**
     * {@snippet :
     * guchar g_data_input_stream_read_byte(GDataInputStream* stream, GCancellable* cancellable, GError** error);
     * }
     */
    public static byte g_data_input_stream_read_byte(MemorySegment stream, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_data_input_stream_read_byte$MH();
        try {
            return (byte)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_read_int16$MH() {
        return RuntimeHelper.requireNonNull(constants$542.g_data_input_stream_read_int16$MH,"g_data_input_stream_read_int16");
    }
    /**
     * {@snippet :
     * gint16 g_data_input_stream_read_int16(GDataInputStream* stream, GCancellable* cancellable, GError** error);
     * }
     */
    public static short g_data_input_stream_read_int16(MemorySegment stream, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_data_input_stream_read_int16$MH();
        try {
            return (short)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_read_uint16$MH() {
        return RuntimeHelper.requireNonNull(constants$542.g_data_input_stream_read_uint16$MH,"g_data_input_stream_read_uint16");
    }
    /**
     * {@snippet :
     * guint16 g_data_input_stream_read_uint16(GDataInputStream* stream, GCancellable* cancellable, GError** error);
     * }
     */
    public static short g_data_input_stream_read_uint16(MemorySegment stream, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_data_input_stream_read_uint16$MH();
        try {
            return (short)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_read_int32$MH() {
        return RuntimeHelper.requireNonNull(constants$542.g_data_input_stream_read_int32$MH,"g_data_input_stream_read_int32");
    }
    /**
     * {@snippet :
     * gint32 g_data_input_stream_read_int32(GDataInputStream* stream, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_data_input_stream_read_int32(MemorySegment stream, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_data_input_stream_read_int32$MH();
        try {
            return (int)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_read_uint32$MH() {
        return RuntimeHelper.requireNonNull(constants$542.g_data_input_stream_read_uint32$MH,"g_data_input_stream_read_uint32");
    }
    /**
     * {@snippet :
     * guint32 g_data_input_stream_read_uint32(GDataInputStream* stream, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_data_input_stream_read_uint32(MemorySegment stream, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_data_input_stream_read_uint32$MH();
        try {
            return (int)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_read_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$542.g_data_input_stream_read_int64$MH,"g_data_input_stream_read_int64");
    }
    /**
     * {@snippet :
     * gint64 g_data_input_stream_read_int64(GDataInputStream* stream, GCancellable* cancellable, GError** error);
     * }
     */
    public static long g_data_input_stream_read_int64(MemorySegment stream, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_data_input_stream_read_int64$MH();
        try {
            return (long)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_read_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$542.g_data_input_stream_read_uint64$MH,"g_data_input_stream_read_uint64");
    }
    /**
     * {@snippet :
     * guint64 g_data_input_stream_read_uint64(GDataInputStream* stream, GCancellable* cancellable, GError** error);
     * }
     */
    public static long g_data_input_stream_read_uint64(MemorySegment stream, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_data_input_stream_read_uint64$MH();
        try {
            return (long)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_read_line$MH() {
        return RuntimeHelper.requireNonNull(constants$543.g_data_input_stream_read_line$MH,"g_data_input_stream_read_line");
    }
    /**
     * {@snippet :
     * char* g_data_input_stream_read_line(GDataInputStream* stream, gsize* length, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_data_input_stream_read_line(MemorySegment stream, MemorySegment length, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_data_input_stream_read_line$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, length, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_read_line_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$543.g_data_input_stream_read_line_utf8$MH,"g_data_input_stream_read_line_utf8");
    }
    /**
     * {@snippet :
     * char* g_data_input_stream_read_line_utf8(GDataInputStream* stream, gsize* length, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_data_input_stream_read_line_utf8(MemorySegment stream, MemorySegment length, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_data_input_stream_read_line_utf8$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, length, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_read_line_async$MH() {
        return RuntimeHelper.requireNonNull(constants$543.g_data_input_stream_read_line_async$MH,"g_data_input_stream_read_line_async");
    }
    /**
     * {@snippet :
     * void g_data_input_stream_read_line_async(GDataInputStream* stream, gint io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_data_input_stream_read_line_async(MemorySegment stream, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_data_input_stream_read_line_async$MH();
        try {
            mh$.invokeExact(stream, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_read_line_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$543.g_data_input_stream_read_line_finish$MH,"g_data_input_stream_read_line_finish");
    }
    /**
     * {@snippet :
     * char* g_data_input_stream_read_line_finish(GDataInputStream* stream, GAsyncResult* result, gsize* length, GError** error);
     * }
     */
    public static MemorySegment g_data_input_stream_read_line_finish(MemorySegment stream, MemorySegment result, MemorySegment length, MemorySegment error) {
        var mh$ = g_data_input_stream_read_line_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, result, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_read_line_finish_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$543.g_data_input_stream_read_line_finish_utf8$MH,"g_data_input_stream_read_line_finish_utf8");
    }
    /**
     * {@snippet :
     * char* g_data_input_stream_read_line_finish_utf8(GDataInputStream* stream, GAsyncResult* result, gsize* length, GError** error);
     * }
     */
    public static MemorySegment g_data_input_stream_read_line_finish_utf8(MemorySegment stream, MemorySegment result, MemorySegment length, MemorySegment error) {
        var mh$ = g_data_input_stream_read_line_finish_utf8$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, result, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_read_until$MH() {
        return RuntimeHelper.requireNonNull(constants$543.g_data_input_stream_read_until$MH,"g_data_input_stream_read_until");
    }
    /**
     * {@snippet :
     * char* g_data_input_stream_read_until(GDataInputStream* stream, const gchar* stop_chars, gsize* length, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_data_input_stream_read_until(MemorySegment stream, MemorySegment stop_chars, MemorySegment length, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_data_input_stream_read_until$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, stop_chars, length, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_read_until_async$MH() {
        return RuntimeHelper.requireNonNull(constants$544.g_data_input_stream_read_until_async$MH,"g_data_input_stream_read_until_async");
    }
    /**
     * {@snippet :
     * void g_data_input_stream_read_until_async(GDataInputStream* stream, const gchar* stop_chars, gint io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_data_input_stream_read_until_async(MemorySegment stream, MemorySegment stop_chars, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_data_input_stream_read_until_async$MH();
        try {
            mh$.invokeExact(stream, stop_chars, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_read_until_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$544.g_data_input_stream_read_until_finish$MH,"g_data_input_stream_read_until_finish");
    }
    /**
     * {@snippet :
     * char* g_data_input_stream_read_until_finish(GDataInputStream* stream, GAsyncResult* result, gsize* length, GError** error);
     * }
     */
    public static MemorySegment g_data_input_stream_read_until_finish(MemorySegment stream, MemorySegment result, MemorySegment length, MemorySegment error) {
        var mh$ = g_data_input_stream_read_until_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, result, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_read_upto$MH() {
        return RuntimeHelper.requireNonNull(constants$544.g_data_input_stream_read_upto$MH,"g_data_input_stream_read_upto");
    }
    /**
     * {@snippet :
     * char* g_data_input_stream_read_upto(GDataInputStream* stream, const gchar* stop_chars, gssize stop_chars_len, gsize* length, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_data_input_stream_read_upto(MemorySegment stream, MemorySegment stop_chars, long stop_chars_len, MemorySegment length, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_data_input_stream_read_upto$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, stop_chars, stop_chars_len, length, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_read_upto_async$MH() {
        return RuntimeHelper.requireNonNull(constants$544.g_data_input_stream_read_upto_async$MH,"g_data_input_stream_read_upto_async");
    }
    /**
     * {@snippet :
     * void g_data_input_stream_read_upto_async(GDataInputStream* stream, const gchar* stop_chars, gssize stop_chars_len, gint io_priority, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_data_input_stream_read_upto_async(MemorySegment stream, MemorySegment stop_chars, long stop_chars_len, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_data_input_stream_read_upto_async$MH();
        try {
            mh$.invokeExact(stream, stop_chars, stop_chars_len, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_input_stream_read_upto_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$544.g_data_input_stream_read_upto_finish$MH,"g_data_input_stream_read_upto_finish");
    }
    /**
     * {@snippet :
     * char* g_data_input_stream_read_upto_finish(GDataInputStream* stream, GAsyncResult* result, gsize* length, GError** error);
     * }
     */
    public static MemorySegment g_data_input_stream_read_upto_finish(MemorySegment stream, MemorySegment result, MemorySegment length, MemorySegment error) {
        var mh$ = g_data_input_stream_read_upto_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, result, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_output_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$544.g_data_output_stream_get_type$MH,"g_data_output_stream_get_type");
    }
    /**
     * {@snippet :
     * GType g_data_output_stream_get_type();
     * }
     */
    public static long g_data_output_stream_get_type() {
        var mh$ = g_data_output_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_output_stream_new$MH() {
        return RuntimeHelper.requireNonNull(constants$545.g_data_output_stream_new$MH,"g_data_output_stream_new");
    }
    /**
     * {@snippet :
     * GDataOutputStream* g_data_output_stream_new(GOutputStream* base_stream);
     * }
     */
    public static MemorySegment g_data_output_stream_new(MemorySegment base_stream) {
        var mh$ = g_data_output_stream_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(base_stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_output_stream_set_byte_order$MH() {
        return RuntimeHelper.requireNonNull(constants$545.g_data_output_stream_set_byte_order$MH,"g_data_output_stream_set_byte_order");
    }
    /**
     * {@snippet :
     * void g_data_output_stream_set_byte_order(GDataOutputStream* stream, GDataStreamByteOrder order);
     * }
     */
    public static void g_data_output_stream_set_byte_order(MemorySegment stream, int order) {
        var mh$ = g_data_output_stream_set_byte_order$MH();
        try {
            mh$.invokeExact(stream, order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_output_stream_get_byte_order$MH() {
        return RuntimeHelper.requireNonNull(constants$545.g_data_output_stream_get_byte_order$MH,"g_data_output_stream_get_byte_order");
    }
    /**
     * {@snippet :
     * GDataStreamByteOrder g_data_output_stream_get_byte_order(GDataOutputStream* stream);
     * }
     */
    public static int g_data_output_stream_get_byte_order(MemorySegment stream) {
        var mh$ = g_data_output_stream_get_byte_order$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_output_stream_put_byte$MH() {
        return RuntimeHelper.requireNonNull(constants$545.g_data_output_stream_put_byte$MH,"g_data_output_stream_put_byte");
    }
    /**
     * {@snippet :
     * gboolean g_data_output_stream_put_byte(GDataOutputStream* stream, guchar data, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_data_output_stream_put_byte(MemorySegment stream, byte data, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_data_output_stream_put_byte$MH();
        try {
            return (int)mh$.invokeExact(stream, data, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_output_stream_put_int16$MH() {
        return RuntimeHelper.requireNonNull(constants$545.g_data_output_stream_put_int16$MH,"g_data_output_stream_put_int16");
    }
    /**
     * {@snippet :
     * gboolean g_data_output_stream_put_int16(GDataOutputStream* stream, gint16 data, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_data_output_stream_put_int16(MemorySegment stream, short data, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_data_output_stream_put_int16$MH();
        try {
            return (int)mh$.invokeExact(stream, data, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_output_stream_put_uint16$MH() {
        return RuntimeHelper.requireNonNull(constants$545.g_data_output_stream_put_uint16$MH,"g_data_output_stream_put_uint16");
    }
    /**
     * {@snippet :
     * gboolean g_data_output_stream_put_uint16(GDataOutputStream* stream, guint16 data, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_data_output_stream_put_uint16(MemorySegment stream, short data, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_data_output_stream_put_uint16$MH();
        try {
            return (int)mh$.invokeExact(stream, data, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_output_stream_put_int32$MH() {
        return RuntimeHelper.requireNonNull(constants$546.g_data_output_stream_put_int32$MH,"g_data_output_stream_put_int32");
    }
    /**
     * {@snippet :
     * gboolean g_data_output_stream_put_int32(GDataOutputStream* stream, gint32 data, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_data_output_stream_put_int32(MemorySegment stream, int data, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_data_output_stream_put_int32$MH();
        try {
            return (int)mh$.invokeExact(stream, data, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_output_stream_put_uint32$MH() {
        return RuntimeHelper.requireNonNull(constants$546.g_data_output_stream_put_uint32$MH,"g_data_output_stream_put_uint32");
    }
    /**
     * {@snippet :
     * gboolean g_data_output_stream_put_uint32(GDataOutputStream* stream, guint32 data, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_data_output_stream_put_uint32(MemorySegment stream, int data, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_data_output_stream_put_uint32$MH();
        try {
            return (int)mh$.invokeExact(stream, data, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_output_stream_put_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$546.g_data_output_stream_put_int64$MH,"g_data_output_stream_put_int64");
    }
    /**
     * {@snippet :
     * gboolean g_data_output_stream_put_int64(GDataOutputStream* stream, gint64 data, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_data_output_stream_put_int64(MemorySegment stream, long data, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_data_output_stream_put_int64$MH();
        try {
            return (int)mh$.invokeExact(stream, data, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_output_stream_put_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$546.g_data_output_stream_put_uint64$MH,"g_data_output_stream_put_uint64");
    }
    /**
     * {@snippet :
     * gboolean g_data_output_stream_put_uint64(GDataOutputStream* stream, guint64 data, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_data_output_stream_put_uint64(MemorySegment stream, long data, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_data_output_stream_put_uint64$MH();
        try {
            return (int)mh$.invokeExact(stream, data, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_output_stream_put_string$MH() {
        return RuntimeHelper.requireNonNull(constants$546.g_data_output_stream_put_string$MH,"g_data_output_stream_put_string");
    }
    /**
     * {@snippet :
     * gboolean g_data_output_stream_put_string(GDataOutputStream* stream, char* str, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_data_output_stream_put_string(MemorySegment stream, MemorySegment str, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_data_output_stream_put_string$MH();
        try {
            return (int)mh$.invokeExact(stream, str, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_action_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$546.g_dbus_action_group_get_type$MH,"g_dbus_action_group_get_type");
    }
    /**
     * {@snippet :
     * GType g_dbus_action_group_get_type();
     * }
     */
    public static long g_dbus_action_group_get_type() {
        var mh$ = g_dbus_action_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_action_group_get$MH() {
        return RuntimeHelper.requireNonNull(constants$547.g_dbus_action_group_get$MH,"g_dbus_action_group_get");
    }
    /**
     * {@snippet :
     * GDBusActionGroup* g_dbus_action_group_get(GDBusConnection* connection, const gchar* bus_name, const gchar* object_path);
     * }
     */
    public static MemorySegment g_dbus_action_group_get(MemorySegment connection, MemorySegment bus_name, MemorySegment object_path) {
        var mh$ = g_dbus_action_group_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, bus_name, object_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_address_escape_value$MH() {
        return RuntimeHelper.requireNonNull(constants$547.g_dbus_address_escape_value$MH,"g_dbus_address_escape_value");
    }
    /**
     * {@snippet :
     * gchar* g_dbus_address_escape_value(const gchar* string);
     * }
     */
    public static MemorySegment g_dbus_address_escape_value(MemorySegment string) {
        var mh$ = g_dbus_address_escape_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_is_address$MH() {
        return RuntimeHelper.requireNonNull(constants$547.g_dbus_is_address$MH,"g_dbus_is_address");
    }
    /**
     * {@snippet :
     * gboolean g_dbus_is_address(const gchar* string);
     * }
     */
    public static int g_dbus_is_address(MemorySegment string) {
        var mh$ = g_dbus_is_address$MH();
        try {
            return (int)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_is_supported_address$MH() {
        return RuntimeHelper.requireNonNull(constants$547.g_dbus_is_supported_address$MH,"g_dbus_is_supported_address");
    }
    /**
     * {@snippet :
     * gboolean g_dbus_is_supported_address(const gchar* string, GError** error);
     * }
     */
    public static int g_dbus_is_supported_address(MemorySegment string, MemorySegment error) {
        var mh$ = g_dbus_is_supported_address$MH();
        try {
            return (int)mh$.invokeExact(string, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_address_get_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$547.g_dbus_address_get_stream$MH,"g_dbus_address_get_stream");
    }
    /**
     * {@snippet :
     * void g_dbus_address_get_stream(const gchar* address, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_dbus_address_get_stream(MemorySegment address, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_address_get_stream$MH();
        try {
            mh$.invokeExact(address, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_address_get_stream_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$547.g_dbus_address_get_stream_finish$MH,"g_dbus_address_get_stream_finish");
    }
    /**
     * {@snippet :
     * GIOStream* g_dbus_address_get_stream_finish(GAsyncResult* res, gchar** out_guid, GError** error);
     * }
     */
    public static MemorySegment g_dbus_address_get_stream_finish(MemorySegment res, MemorySegment out_guid, MemorySegment error) {
        var mh$ = g_dbus_address_get_stream_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(res, out_guid, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_address_get_stream_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$548.g_dbus_address_get_stream_sync$MH,"g_dbus_address_get_stream_sync");
    }
    /**
     * {@snippet :
     * GIOStream* g_dbus_address_get_stream_sync(const gchar* address, gchar** out_guid, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_dbus_address_get_stream_sync(MemorySegment address, MemorySegment out_guid, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_address_get_stream_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(address, out_guid, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_address_get_for_bus_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$548.g_dbus_address_get_for_bus_sync$MH,"g_dbus_address_get_for_bus_sync");
    }
    /**
     * {@snippet :
     * gchar* g_dbus_address_get_for_bus_sync(GBusType bus_type, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_dbus_address_get_for_bus_sync(int bus_type, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_address_get_for_bus_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bus_type, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_auth_observer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$548.g_dbus_auth_observer_get_type$MH,"g_dbus_auth_observer_get_type");
    }
    /**
     * {@snippet :
     * GType g_dbus_auth_observer_get_type();
     * }
     */
    public static long g_dbus_auth_observer_get_type() {
        var mh$ = g_dbus_auth_observer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_auth_observer_new$MH() {
        return RuntimeHelper.requireNonNull(constants$548.g_dbus_auth_observer_new$MH,"g_dbus_auth_observer_new");
    }
    /**
     * {@snippet :
     * GDBusAuthObserver* g_dbus_auth_observer_new();
     * }
     */
    public static MemorySegment g_dbus_auth_observer_new() {
        var mh$ = g_dbus_auth_observer_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_auth_observer_authorize_authenticated_peer$MH() {
        return RuntimeHelper.requireNonNull(constants$548.g_dbus_auth_observer_authorize_authenticated_peer$MH,"g_dbus_auth_observer_authorize_authenticated_peer");
    }
    /**
     * {@snippet :
     * gboolean g_dbus_auth_observer_authorize_authenticated_peer(GDBusAuthObserver* observer, GIOStream* stream, GCredentials* credentials);
     * }
     */
    public static int g_dbus_auth_observer_authorize_authenticated_peer(MemorySegment observer, MemorySegment stream, MemorySegment credentials) {
        var mh$ = g_dbus_auth_observer_authorize_authenticated_peer$MH();
        try {
            return (int)mh$.invokeExact(observer, stream, credentials);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_auth_observer_allow_mechanism$MH() {
        return RuntimeHelper.requireNonNull(constants$548.g_dbus_auth_observer_allow_mechanism$MH,"g_dbus_auth_observer_allow_mechanism");
    }
    /**
     * {@snippet :
     * gboolean g_dbus_auth_observer_allow_mechanism(GDBusAuthObserver* observer, const gchar* mechanism);
     * }
     */
    public static int g_dbus_auth_observer_allow_mechanism(MemorySegment observer, MemorySegment mechanism) {
        var mh$ = g_dbus_auth_observer_allow_mechanism$MH();
        try {
            return (int)mh$.invokeExact(observer, mechanism);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$549.g_dbus_connection_get_type$MH,"g_dbus_connection_get_type");
    }
    /**
     * {@snippet :
     * GType g_dbus_connection_get_type();
     * }
     */
    public static long g_dbus_connection_get_type() {
        var mh$ = g_dbus_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bus_get$MH() {
        return RuntimeHelper.requireNonNull(constants$549.g_bus_get$MH,"g_bus_get");
    }
    /**
     * {@snippet :
     * void g_bus_get(GBusType bus_type, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_bus_get(int bus_type, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_bus_get$MH();
        try {
            mh$.invokeExact(bus_type, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bus_get_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$549.g_bus_get_finish$MH,"g_bus_get_finish");
    }
    /**
     * {@snippet :
     * GDBusConnection* g_bus_get_finish(GAsyncResult* res, GError** error);
     * }
     */
    public static MemorySegment g_bus_get_finish(MemorySegment res, MemorySegment error) {
        var mh$ = g_bus_get_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bus_get_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$549.g_bus_get_sync$MH,"g_bus_get_sync");
    }
    /**
     * {@snippet :
     * GDBusConnection* g_bus_get_sync(GBusType bus_type, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_bus_get_sync(int bus_type, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_bus_get_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bus_type, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_new$MH() {
        return RuntimeHelper.requireNonNull(constants$549.g_dbus_connection_new$MH,"g_dbus_connection_new");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_new(GIOStream* stream, const gchar* guid, GDBusConnectionFlags flags, GDBusAuthObserver* observer, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_dbus_connection_new(MemorySegment stream, MemorySegment guid, int flags, MemorySegment observer, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_connection_new$MH();
        try {
            mh$.invokeExact(stream, guid, flags, observer, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_new_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$549.g_dbus_connection_new_finish$MH,"g_dbus_connection_new_finish");
    }
    /**
     * {@snippet :
     * GDBusConnection* g_dbus_connection_new_finish(GAsyncResult* res, GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_new_finish(MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_connection_new_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_new_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$550.g_dbus_connection_new_sync$MH,"g_dbus_connection_new_sync");
    }
    /**
     * {@snippet :
     * GDBusConnection* g_dbus_connection_new_sync(GIOStream* stream, const gchar* guid, GDBusConnectionFlags flags, GDBusAuthObserver* observer, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_new_sync(MemorySegment stream, MemorySegment guid, int flags, MemorySegment observer, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_connection_new_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, guid, flags, observer, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_new_for_address$MH() {
        return RuntimeHelper.requireNonNull(constants$550.g_dbus_connection_new_for_address$MH,"g_dbus_connection_new_for_address");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_new_for_address(const gchar* address, GDBusConnectionFlags flags, GDBusAuthObserver* observer, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_dbus_connection_new_for_address(MemorySegment address, int flags, MemorySegment observer, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_connection_new_for_address$MH();
        try {
            mh$.invokeExact(address, flags, observer, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_new_for_address_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$550.g_dbus_connection_new_for_address_finish$MH,"g_dbus_connection_new_for_address_finish");
    }
    /**
     * {@snippet :
     * GDBusConnection* g_dbus_connection_new_for_address_finish(GAsyncResult* res, GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_new_for_address_finish(MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_connection_new_for_address_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_new_for_address_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$550.g_dbus_connection_new_for_address_sync$MH,"g_dbus_connection_new_for_address_sync");
    }
    /**
     * {@snippet :
     * GDBusConnection* g_dbus_connection_new_for_address_sync(const gchar* address, GDBusConnectionFlags flags, GDBusAuthObserver* observer, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_new_for_address_sync(MemorySegment address, int flags, MemorySegment observer, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_connection_new_for_address_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(address, flags, observer, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_start_message_processing$MH() {
        return RuntimeHelper.requireNonNull(constants$550.g_dbus_connection_start_message_processing$MH,"g_dbus_connection_start_message_processing");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_start_message_processing(GDBusConnection* connection);
     * }
     */
    public static void g_dbus_connection_start_message_processing(MemorySegment connection) {
        var mh$ = g_dbus_connection_start_message_processing$MH();
        try {
            mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_is_closed$MH() {
        return RuntimeHelper.requireNonNull(constants$550.g_dbus_connection_is_closed$MH,"g_dbus_connection_is_closed");
    }
    /**
     * {@snippet :
     * gboolean g_dbus_connection_is_closed(GDBusConnection* connection);
     * }
     */
    public static int g_dbus_connection_is_closed(MemorySegment connection) {
        var mh$ = g_dbus_connection_is_closed$MH();
        try {
            return (int)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_get_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$551.g_dbus_connection_get_stream$MH,"g_dbus_connection_get_stream");
    }
    /**
     * {@snippet :
     * GIOStream* g_dbus_connection_get_stream(GDBusConnection* connection);
     * }
     */
    public static MemorySegment g_dbus_connection_get_stream(MemorySegment connection) {
        var mh$ = g_dbus_connection_get_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_get_guid$MH() {
        return RuntimeHelper.requireNonNull(constants$551.g_dbus_connection_get_guid$MH,"g_dbus_connection_get_guid");
    }
    /**
     * {@snippet :
     * const gchar* g_dbus_connection_get_guid(GDBusConnection* connection);
     * }
     */
    public static MemorySegment g_dbus_connection_get_guid(MemorySegment connection) {
        var mh$ = g_dbus_connection_get_guid$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_get_unique_name$MH() {
        return RuntimeHelper.requireNonNull(constants$551.g_dbus_connection_get_unique_name$MH,"g_dbus_connection_get_unique_name");
    }
    /**
     * {@snippet :
     * const gchar* g_dbus_connection_get_unique_name(GDBusConnection* connection);
     * }
     */
    public static MemorySegment g_dbus_connection_get_unique_name(MemorySegment connection) {
        var mh$ = g_dbus_connection_get_unique_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_get_peer_credentials$MH() {
        return RuntimeHelper.requireNonNull(constants$551.g_dbus_connection_get_peer_credentials$MH,"g_dbus_connection_get_peer_credentials");
    }
    /**
     * {@snippet :
     * GCredentials* g_dbus_connection_get_peer_credentials(GDBusConnection* connection);
     * }
     */
    public static MemorySegment g_dbus_connection_get_peer_credentials(MemorySegment connection) {
        var mh$ = g_dbus_connection_get_peer_credentials$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_get_last_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$551.g_dbus_connection_get_last_serial$MH,"g_dbus_connection_get_last_serial");
    }
    /**
     * {@snippet :
     * guint32 g_dbus_connection_get_last_serial(GDBusConnection* connection);
     * }
     */
    public static int g_dbus_connection_get_last_serial(MemorySegment connection) {
        var mh$ = g_dbus_connection_get_last_serial$MH();
        try {
            return (int)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_get_exit_on_close$MH() {
        return RuntimeHelper.requireNonNull(constants$551.g_dbus_connection_get_exit_on_close$MH,"g_dbus_connection_get_exit_on_close");
    }
    /**
     * {@snippet :
     * gboolean g_dbus_connection_get_exit_on_close(GDBusConnection* connection);
     * }
     */
    public static int g_dbus_connection_get_exit_on_close(MemorySegment connection) {
        var mh$ = g_dbus_connection_get_exit_on_close$MH();
        try {
            return (int)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_set_exit_on_close$MH() {
        return RuntimeHelper.requireNonNull(constants$552.g_dbus_connection_set_exit_on_close$MH,"g_dbus_connection_set_exit_on_close");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_set_exit_on_close(GDBusConnection* connection, gboolean exit_on_close);
     * }
     */
    public static void g_dbus_connection_set_exit_on_close(MemorySegment connection, int exit_on_close) {
        var mh$ = g_dbus_connection_set_exit_on_close$MH();
        try {
            mh$.invokeExact(connection, exit_on_close);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_get_capabilities$MH() {
        return RuntimeHelper.requireNonNull(constants$552.g_dbus_connection_get_capabilities$MH,"g_dbus_connection_get_capabilities");
    }
    /**
     * {@snippet :
     * GDBusCapabilityFlags g_dbus_connection_get_capabilities(GDBusConnection* connection);
     * }
     */
    public static int g_dbus_connection_get_capabilities(MemorySegment connection) {
        var mh$ = g_dbus_connection_get_capabilities$MH();
        try {
            return (int)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$552.g_dbus_connection_get_flags$MH,"g_dbus_connection_get_flags");
    }
    /**
     * {@snippet :
     * GDBusConnectionFlags g_dbus_connection_get_flags(GDBusConnection* connection);
     * }
     */
    public static int g_dbus_connection_get_flags(MemorySegment connection) {
        var mh$ = g_dbus_connection_get_flags$MH();
        try {
            return (int)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_close$MH() {
        return RuntimeHelper.requireNonNull(constants$552.g_dbus_connection_close$MH,"g_dbus_connection_close");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_close(GDBusConnection* connection, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_dbus_connection_close(MemorySegment connection, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_connection_close$MH();
        try {
            mh$.invokeExact(connection, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_close_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$552.g_dbus_connection_close_finish$MH,"g_dbus_connection_close_finish");
    }
    /**
     * {@snippet :
     * gboolean g_dbus_connection_close_finish(GDBusConnection* connection, GAsyncResult* res, GError** error);
     * }
     */
    public static int g_dbus_connection_close_finish(MemorySegment connection, MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_connection_close_finish$MH();
        try {
            return (int)mh$.invokeExact(connection, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_close_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$552.g_dbus_connection_close_sync$MH,"g_dbus_connection_close_sync");
    }
    /**
     * {@snippet :
     * gboolean g_dbus_connection_close_sync(GDBusConnection* connection, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_dbus_connection_close_sync(MemorySegment connection, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_connection_close_sync$MH();
        try {
            return (int)mh$.invokeExact(connection, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_flush$MH() {
        return RuntimeHelper.requireNonNull(constants$553.g_dbus_connection_flush$MH,"g_dbus_connection_flush");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_flush(GDBusConnection* connection, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_dbus_connection_flush(MemorySegment connection, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_connection_flush$MH();
        try {
            mh$.invokeExact(connection, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_flush_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$553.g_dbus_connection_flush_finish$MH,"g_dbus_connection_flush_finish");
    }
    /**
     * {@snippet :
     * gboolean g_dbus_connection_flush_finish(GDBusConnection* connection, GAsyncResult* res, GError** error);
     * }
     */
    public static int g_dbus_connection_flush_finish(MemorySegment connection, MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_connection_flush_finish$MH();
        try {
            return (int)mh$.invokeExact(connection, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_flush_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$553.g_dbus_connection_flush_sync$MH,"g_dbus_connection_flush_sync");
    }
    /**
     * {@snippet :
     * gboolean g_dbus_connection_flush_sync(GDBusConnection* connection, GCancellable* cancellable, GError** error);
     * }
     */
    public static int g_dbus_connection_flush_sync(MemorySegment connection, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_connection_flush_sync$MH();
        try {
            return (int)mh$.invokeExact(connection, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_send_message$MH() {
        return RuntimeHelper.requireNonNull(constants$553.g_dbus_connection_send_message$MH,"g_dbus_connection_send_message");
    }
    /**
     * {@snippet :
     * gboolean g_dbus_connection_send_message(GDBusConnection* connection, GDBusMessage* message, GDBusSendMessageFlags flags, volatile guint32* out_serial, GError** error);
     * }
     */
    public static int g_dbus_connection_send_message(MemorySegment connection, MemorySegment message, int flags, MemorySegment out_serial, MemorySegment error) {
        var mh$ = g_dbus_connection_send_message$MH();
        try {
            return (int)mh$.invokeExact(connection, message, flags, out_serial, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_send_message_with_reply$MH() {
        return RuntimeHelper.requireNonNull(constants$553.g_dbus_connection_send_message_with_reply$MH,"g_dbus_connection_send_message_with_reply");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_send_message_with_reply(GDBusConnection* connection, GDBusMessage* message, GDBusSendMessageFlags flags, gint timeout_msec, volatile guint32* out_serial, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_dbus_connection_send_message_with_reply(MemorySegment connection, MemorySegment message, int flags, int timeout_msec, MemorySegment out_serial, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_connection_send_message_with_reply$MH();
        try {
            mh$.invokeExact(connection, message, flags, timeout_msec, out_serial, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_send_message_with_reply_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$553.g_dbus_connection_send_message_with_reply_finish$MH,"g_dbus_connection_send_message_with_reply_finish");
    }
    /**
     * {@snippet :
     * GDBusMessage* g_dbus_connection_send_message_with_reply_finish(GDBusConnection* connection, GAsyncResult* res, GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_send_message_with_reply_finish(MemorySegment connection, MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_connection_send_message_with_reply_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_send_message_with_reply_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$554.g_dbus_connection_send_message_with_reply_sync$MH,"g_dbus_connection_send_message_with_reply_sync");
    }
    /**
     * {@snippet :
     * GDBusMessage* g_dbus_connection_send_message_with_reply_sync(GDBusConnection* connection, GDBusMessage* message, GDBusSendMessageFlags flags, gint timeout_msec, volatile guint32* out_serial, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_send_message_with_reply_sync(MemorySegment connection, MemorySegment message, int flags, int timeout_msec, MemorySegment out_serial, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_connection_send_message_with_reply_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, message, flags, timeout_msec, out_serial, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_emit_signal$MH() {
        return RuntimeHelper.requireNonNull(constants$554.g_dbus_connection_emit_signal$MH,"g_dbus_connection_emit_signal");
    }
    /**
     * {@snippet :
     * gboolean g_dbus_connection_emit_signal(GDBusConnection* connection, const gchar* destination_bus_name, const gchar* object_path, const gchar* interface_name, const gchar* signal_name, GVariant* parameters, GError** error);
     * }
     */
    public static int g_dbus_connection_emit_signal(MemorySegment connection, MemorySegment destination_bus_name, MemorySegment object_path, MemorySegment interface_name, MemorySegment signal_name, MemorySegment parameters, MemorySegment error) {
        var mh$ = g_dbus_connection_emit_signal$MH();
        try {
            return (int)mh$.invokeExact(connection, destination_bus_name, object_path, interface_name, signal_name, parameters, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_call$MH() {
        return RuntimeHelper.requireNonNull(constants$554.g_dbus_connection_call$MH,"g_dbus_connection_call");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_call(GDBusConnection* connection, const gchar* bus_name, const gchar* object_path, const gchar* interface_name, const gchar* method_name, GVariant* parameters, const GVariantType* reply_type, GDBusCallFlags flags, gint timeout_msec, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_dbus_connection_call(MemorySegment connection, MemorySegment bus_name, MemorySegment object_path, MemorySegment interface_name, MemorySegment method_name, MemorySegment parameters, MemorySegment reply_type, int flags, int timeout_msec, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_connection_call$MH();
        try {
            mh$.invokeExact(connection, bus_name, object_path, interface_name, method_name, parameters, reply_type, flags, timeout_msec, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_call_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$554.g_dbus_connection_call_finish$MH,"g_dbus_connection_call_finish");
    }
    /**
     * {@snippet :
     * GVariant* g_dbus_connection_call_finish(GDBusConnection* connection, GAsyncResult* res, GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_call_finish(MemorySegment connection, MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_connection_call_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_call_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$554.g_dbus_connection_call_sync$MH,"g_dbus_connection_call_sync");
    }
    /**
     * {@snippet :
     * GVariant* g_dbus_connection_call_sync(GDBusConnection* connection, const gchar* bus_name, const gchar* object_path, const gchar* interface_name, const gchar* method_name, GVariant* parameters, const GVariantType* reply_type, GDBusCallFlags flags, gint timeout_msec, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_call_sync(MemorySegment connection, MemorySegment bus_name, MemorySegment object_path, MemorySegment interface_name, MemorySegment method_name, MemorySegment parameters, MemorySegment reply_type, int flags, int timeout_msec, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_connection_call_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, bus_name, object_path, interface_name, method_name, parameters, reply_type, flags, timeout_msec, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_call_with_unix_fd_list$MH() {
        return RuntimeHelper.requireNonNull(constants$554.g_dbus_connection_call_with_unix_fd_list$MH,"g_dbus_connection_call_with_unix_fd_list");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_call_with_unix_fd_list(GDBusConnection* connection, const gchar* bus_name, const gchar* object_path, const gchar* interface_name, const gchar* method_name, GVariant* parameters, const GVariantType* reply_type, GDBusCallFlags flags, gint timeout_msec, GUnixFDList* fd_list, GCancellable* cancellable, GAsyncReadyCallback callback, gpointer user_data);
     * }
     */
    public static void g_dbus_connection_call_with_unix_fd_list(MemorySegment connection, MemorySegment bus_name, MemorySegment object_path, MemorySegment interface_name, MemorySegment method_name, MemorySegment parameters, MemorySegment reply_type, int flags, int timeout_msec, MemorySegment fd_list, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_connection_call_with_unix_fd_list$MH();
        try {
            mh$.invokeExact(connection, bus_name, object_path, interface_name, method_name, parameters, reply_type, flags, timeout_msec, fd_list, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_call_with_unix_fd_list_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$555.g_dbus_connection_call_with_unix_fd_list_finish$MH,"g_dbus_connection_call_with_unix_fd_list_finish");
    }
    /**
     * {@snippet :
     * GVariant* g_dbus_connection_call_with_unix_fd_list_finish(GDBusConnection* connection, GUnixFDList** out_fd_list, GAsyncResult* res, GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_call_with_unix_fd_list_finish(MemorySegment connection, MemorySegment out_fd_list, MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_connection_call_with_unix_fd_list_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, out_fd_list, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_call_with_unix_fd_list_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$555.g_dbus_connection_call_with_unix_fd_list_sync$MH,"g_dbus_connection_call_with_unix_fd_list_sync");
    }
    /**
     * {@snippet :
     * GVariant* g_dbus_connection_call_with_unix_fd_list_sync(GDBusConnection* connection, const gchar* bus_name, const gchar* object_path, const gchar* interface_name, const gchar* method_name, GVariant* parameters, const GVariantType* reply_type, GDBusCallFlags flags, gint timeout_msec, GUnixFDList* fd_list, GUnixFDList** out_fd_list, GCancellable* cancellable, GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_call_with_unix_fd_list_sync(MemorySegment connection, MemorySegment bus_name, MemorySegment object_path, MemorySegment interface_name, MemorySegment method_name, MemorySegment parameters, MemorySegment reply_type, int flags, int timeout_msec, MemorySegment fd_list, MemorySegment out_fd_list, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_connection_call_with_unix_fd_list_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, bus_name, object_path, interface_name, method_name, parameters, reply_type, flags, timeout_msec, fd_list, out_fd_list, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_register_object$MH() {
        return RuntimeHelper.requireNonNull(constants$556.g_dbus_connection_register_object$MH,"g_dbus_connection_register_object");
    }
    /**
     * {@snippet :
     * guint g_dbus_connection_register_object(GDBusConnection* connection, const gchar* object_path, GDBusInterfaceInfo* interface_info, const GDBusInterfaceVTable* vtable, gpointer user_data, GDestroyNotify user_data_free_func, GError** error);
     * }
     */
    public static int g_dbus_connection_register_object(MemorySegment connection, MemorySegment object_path, MemorySegment interface_info, MemorySegment vtable, MemorySegment user_data, MemorySegment user_data_free_func, MemorySegment error) {
        var mh$ = g_dbus_connection_register_object$MH();
        try {
            return (int)mh$.invokeExact(connection, object_path, interface_info, vtable, user_data, user_data_free_func, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_register_object_with_closures$MH() {
        return RuntimeHelper.requireNonNull(constants$556.g_dbus_connection_register_object_with_closures$MH,"g_dbus_connection_register_object_with_closures");
    }
    /**
     * {@snippet :
     * guint g_dbus_connection_register_object_with_closures(GDBusConnection* connection, const gchar* object_path, GDBusInterfaceInfo* interface_info, GClosure* method_call_closure, GClosure* get_property_closure, GClosure* set_property_closure, GError** error);
     * }
     */
    public static int g_dbus_connection_register_object_with_closures(MemorySegment connection, MemorySegment object_path, MemorySegment interface_info, MemorySegment method_call_closure, MemorySegment get_property_closure, MemorySegment set_property_closure, MemorySegment error) {
        var mh$ = g_dbus_connection_register_object_with_closures$MH();
        try {
            return (int)mh$.invokeExact(connection, object_path, interface_info, method_call_closure, get_property_closure, set_property_closure, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_unregister_object$MH() {
        return RuntimeHelper.requireNonNull(constants$556.g_dbus_connection_unregister_object$MH,"g_dbus_connection_unregister_object");
    }
    /**
     * {@snippet :
     * gboolean g_dbus_connection_unregister_object(GDBusConnection* connection, guint registration_id);
     * }
     */
    public static int g_dbus_connection_unregister_object(MemorySegment connection, int registration_id) {
        var mh$ = g_dbus_connection_unregister_object$MH();
        try {
            return (int)mh$.invokeExact(connection, registration_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_register_subtree$MH() {
        return RuntimeHelper.requireNonNull(constants$557.g_dbus_connection_register_subtree$MH,"g_dbus_connection_register_subtree");
    }
    /**
     * {@snippet :
     * guint g_dbus_connection_register_subtree(GDBusConnection* connection, const gchar* object_path, const GDBusSubtreeVTable* vtable, GDBusSubtreeFlags flags, gpointer user_data, GDestroyNotify user_data_free_func, GError** error);
     * }
     */
    public static int g_dbus_connection_register_subtree(MemorySegment connection, MemorySegment object_path, MemorySegment vtable, int flags, MemorySegment user_data, MemorySegment user_data_free_func, MemorySegment error) {
        var mh$ = g_dbus_connection_register_subtree$MH();
        try {
            return (int)mh$.invokeExact(connection, object_path, vtable, flags, user_data, user_data_free_func, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_unregister_subtree$MH() {
        return RuntimeHelper.requireNonNull(constants$558.g_dbus_connection_unregister_subtree$MH,"g_dbus_connection_unregister_subtree");
    }
    /**
     * {@snippet :
     * gboolean g_dbus_connection_unregister_subtree(GDBusConnection* connection, guint registration_id);
     * }
     */
    public static int g_dbus_connection_unregister_subtree(MemorySegment connection, int registration_id) {
        var mh$ = g_dbus_connection_unregister_subtree$MH();
        try {
            return (int)mh$.invokeExact(connection, registration_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_signal_subscribe$MH() {
        return RuntimeHelper.requireNonNull(constants$558.g_dbus_connection_signal_subscribe$MH,"g_dbus_connection_signal_subscribe");
    }
    /**
     * {@snippet :
     * guint g_dbus_connection_signal_subscribe(GDBusConnection* connection, const gchar* sender, const gchar* interface_name, const gchar* member, const gchar* object_path, const gchar* arg0, GDBusSignalFlags flags, GDBusSignalCallback callback, gpointer user_data, GDestroyNotify user_data_free_func);
     * }
     */
    public static int g_dbus_connection_signal_subscribe(MemorySegment connection, MemorySegment sender, MemorySegment interface_name, MemorySegment member, MemorySegment object_path, MemorySegment arg0, int flags, MemorySegment callback, MemorySegment user_data, MemorySegment user_data_free_func) {
        var mh$ = g_dbus_connection_signal_subscribe$MH();
        try {
            return (int)mh$.invokeExact(connection, sender, interface_name, member, object_path, arg0, flags, callback, user_data, user_data_free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_signal_unsubscribe$MH() {
        return RuntimeHelper.requireNonNull(constants$558.g_dbus_connection_signal_unsubscribe$MH,"g_dbus_connection_signal_unsubscribe");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_signal_unsubscribe(GDBusConnection* connection, guint subscription_id);
     * }
     */
    public static void g_dbus_connection_signal_unsubscribe(MemorySegment connection, int subscription_id) {
        var mh$ = g_dbus_connection_signal_unsubscribe$MH();
        try {
            mh$.invokeExact(connection, subscription_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_add_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$559.g_dbus_connection_add_filter$MH,"g_dbus_connection_add_filter");
    }
    /**
     * {@snippet :
     * guint g_dbus_connection_add_filter(GDBusConnection* connection, GDBusMessageFilterFunction filter_function, gpointer user_data, GDestroyNotify user_data_free_func);
     * }
     */
    public static int g_dbus_connection_add_filter(MemorySegment connection, MemorySegment filter_function, MemorySegment user_data, MemorySegment user_data_free_func) {
        var mh$ = g_dbus_connection_add_filter$MH();
        try {
            return (int)mh$.invokeExact(connection, filter_function, user_data, user_data_free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_remove_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$559.g_dbus_connection_remove_filter$MH,"g_dbus_connection_remove_filter");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_remove_filter(GDBusConnection* connection, guint filter_id);
     * }
     */
    public static void g_dbus_connection_remove_filter(MemorySegment connection, int filter_id) {
        var mh$ = g_dbus_connection_remove_filter$MH();
        try {
            mh$.invokeExact(connection, filter_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$559.g_dbus_error_quark$MH,"g_dbus_error_quark");
    }
    /**
     * {@snippet :
     * GQuark g_dbus_error_quark();
     * }
     */
    public static int g_dbus_error_quark() {
        var mh$ = g_dbus_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_is_remote_error$MH() {
        return RuntimeHelper.requireNonNull(constants$559.g_dbus_error_is_remote_error$MH,"g_dbus_error_is_remote_error");
    }
    /**
     * {@snippet :
     * gboolean g_dbus_error_is_remote_error(const GError* error);
     * }
     */
    public static int g_dbus_error_is_remote_error(MemorySegment error) {
        var mh$ = g_dbus_error_is_remote_error$MH();
        try {
            return (int)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_get_remote_error$MH() {
        return RuntimeHelper.requireNonNull(constants$559.g_dbus_error_get_remote_error$MH,"g_dbus_error_get_remote_error");
    }
    /**
     * {@snippet :
     * gchar* g_dbus_error_get_remote_error(const GError* error);
     * }
     */
    public static MemorySegment g_dbus_error_get_remote_error(MemorySegment error) {
        var mh$ = g_dbus_error_get_remote_error$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_strip_remote_error$MH() {
        return RuntimeHelper.requireNonNull(constants$560.g_dbus_error_strip_remote_error$MH,"g_dbus_error_strip_remote_error");
    }
    /**
     * {@snippet :
     * gboolean g_dbus_error_strip_remote_error(GError* error);
     * }
     */
    public static int g_dbus_error_strip_remote_error(MemorySegment error) {
        var mh$ = g_dbus_error_strip_remote_error$MH();
        try {
            return (int)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_register_error$MH() {
        return RuntimeHelper.requireNonNull(constants$560.g_dbus_error_register_error$MH,"g_dbus_error_register_error");
    }
    /**
     * {@snippet :
     * gboolean g_dbus_error_register_error(GQuark error_domain, gint error_code, const gchar* dbus_error_name);
     * }
     */
    public static int g_dbus_error_register_error(int error_domain, int error_code, MemorySegment dbus_error_name) {
        var mh$ = g_dbus_error_register_error$MH();
        try {
            return (int)mh$.invokeExact(error_domain, error_code, dbus_error_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_unregister_error$MH() {
        return RuntimeHelper.requireNonNull(constants$560.g_dbus_error_unregister_error$MH,"g_dbus_error_unregister_error");
    }
    /**
     * {@snippet :
     * gboolean g_dbus_error_unregister_error(GQuark error_domain, gint error_code, const gchar* dbus_error_name);
     * }
     */
    public static int g_dbus_error_unregister_error(int error_domain, int error_code, MemorySegment dbus_error_name) {
        var mh$ = g_dbus_error_unregister_error$MH();
        try {
            return (int)mh$.invokeExact(error_domain, error_code, dbus_error_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_register_error_domain$MH() {
        return RuntimeHelper.requireNonNull(constants$560.g_dbus_error_register_error_domain$MH,"g_dbus_error_register_error_domain");
    }
    /**
     * {@snippet :
     * void g_dbus_error_register_error_domain(const gchar* error_domain_quark_name, volatile gsize* quark_volatile, const GDBusErrorEntry* entries, guint num_entries);
     * }
     */
    public static void g_dbus_error_register_error_domain(MemorySegment error_domain_quark_name, MemorySegment quark_volatile, MemorySegment entries, int num_entries) {
        var mh$ = g_dbus_error_register_error_domain$MH();
        try {
            mh$.invokeExact(error_domain_quark_name, quark_volatile, entries, num_entries);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_new_for_dbus_error$MH() {
        return RuntimeHelper.requireNonNull(constants$560.g_dbus_error_new_for_dbus_error$MH,"g_dbus_error_new_for_dbus_error");
    }
    /**
     * {@snippet :
     * GError* g_dbus_error_new_for_dbus_error(const gchar* dbus_error_name, const gchar* dbus_error_message);
     * }
     */
    public static MemorySegment g_dbus_error_new_for_dbus_error(MemorySegment dbus_error_name, MemorySegment dbus_error_message) {
        var mh$ = g_dbus_error_new_for_dbus_error$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(dbus_error_name, dbus_error_message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_set_dbus_error$MH() {
        return RuntimeHelper.requireNonNull(constants$560.g_dbus_error_set_dbus_error$MH,"g_dbus_error_set_dbus_error");
    }
    /**
     * {@snippet :
     * void g_dbus_error_set_dbus_error(GError** error, const gchar* dbus_error_name, const gchar* dbus_error_message, const gchar* format,...);
     * }
     */
    public static void g_dbus_error_set_dbus_error(MemorySegment error, MemorySegment dbus_error_name, MemorySegment dbus_error_message, MemorySegment format, Object... x4) {
        var mh$ = g_dbus_error_set_dbus_error$MH();
        try {
            mh$.invokeExact(error, dbus_error_name, dbus_error_message, format, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_set_dbus_error_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$561.g_dbus_error_set_dbus_error_valist$MH,"g_dbus_error_set_dbus_error_valist");
    }
    /**
     * {@snippet :
     * void g_dbus_error_set_dbus_error_valist(GError** error, const gchar* dbus_error_name, const gchar* dbus_error_message, const gchar* format, va_list var_args);
     * }
     */
    public static void g_dbus_error_set_dbus_error_valist(MemorySegment error, MemorySegment dbus_error_name, MemorySegment dbus_error_message, MemorySegment format, MemorySegment var_args) {
        var mh$ = g_dbus_error_set_dbus_error_valist$MH();
        try {
            mh$.invokeExact(error, dbus_error_name, dbus_error_message, format, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_encode_gerror$MH() {
        return RuntimeHelper.requireNonNull(constants$561.g_dbus_error_encode_gerror$MH,"g_dbus_error_encode_gerror");
    }
    /**
     * {@snippet :
     * gchar* g_dbus_error_encode_gerror(const GError* error);
     * }
     */
    public static MemorySegment g_dbus_error_encode_gerror(MemorySegment error) {
        var mh$ = g_dbus_error_encode_gerror$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$561.g_dbus_interface_get_type$MH,"g_dbus_interface_get_type");
    }
    /**
     * {@snippet :
     * GType g_dbus_interface_get_type();
     * }
     */
    public static long g_dbus_interface_get_type() {
        var mh$ = g_dbus_interface_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_get_info$MH() {
        return RuntimeHelper.requireNonNull(constants$561.g_dbus_interface_get_info$MH,"g_dbus_interface_get_info");
    }
    /**
     * {@snippet :
     * GDBusInterfaceInfo* g_dbus_interface_get_info(GDBusInterface* interface_);
     * }
     */
    public static MemorySegment g_dbus_interface_get_info(MemorySegment interface_) {
        var mh$ = g_dbus_interface_get_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(interface_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_get_object$MH() {
        return RuntimeHelper.requireNonNull(constants$561.g_dbus_interface_get_object$MH,"g_dbus_interface_get_object");
    }
    /**
     * {@snippet :
     * GDBusObject* g_dbus_interface_get_object(GDBusInterface* interface_);
     * }
     */
    public static MemorySegment g_dbus_interface_get_object(MemorySegment interface_) {
        var mh$ = g_dbus_interface_get_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(interface_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_set_object$MH() {
        return RuntimeHelper.requireNonNull(constants$561.g_dbus_interface_set_object$MH,"g_dbus_interface_set_object");
    }
    /**
     * {@snippet :
     * void g_dbus_interface_set_object(GDBusInterface* interface_, GDBusObject* object);
     * }
     */
    public static void g_dbus_interface_set_object(MemorySegment interface_, MemorySegment object) {
        var mh$ = g_dbus_interface_set_object$MH();
        try {
            mh$.invokeExact(interface_, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_dup_object$MH() {
        return RuntimeHelper.requireNonNull(constants$562.g_dbus_interface_dup_object$MH,"g_dbus_interface_dup_object");
    }
    /**
     * {@snippet :
     * GDBusObject* g_dbus_interface_dup_object(GDBusInterface* interface_);
     * }
     */
    public static MemorySegment g_dbus_interface_dup_object(MemorySegment interface_) {
        var mh$ = g_dbus_interface_dup_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(interface_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_skeleton_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$562.g_dbus_interface_skeleton_get_type$MH,"g_dbus_interface_skeleton_get_type");
    }
    /**
     * {@snippet :
     * GType g_dbus_interface_skeleton_get_type();
     * }
     */
    public static long g_dbus_interface_skeleton_get_type() {
        var mh$ = g_dbus_interface_skeleton_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_skeleton_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$562.g_dbus_interface_skeleton_get_flags$MH,"g_dbus_interface_skeleton_get_flags");
    }
    /**
     * {@snippet :
     * GDBusInterfaceSkeletonFlags g_dbus_interface_skeleton_get_flags(GDBusInterfaceSkeleton* interface_);
     * }
     */
    public static int g_dbus_interface_skeleton_get_flags(MemorySegment interface_) {
        var mh$ = g_dbus_interface_skeleton_get_flags$MH();
        try {
            return (int)mh$.invokeExact(interface_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


