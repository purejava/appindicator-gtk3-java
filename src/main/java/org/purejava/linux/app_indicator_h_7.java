// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class app_indicator_h_7 extends app_indicator_h_6 {

    public static int G_FILE_TYPE_REGULAR() {
        return (int)1L;
    }
    public static int G_FILE_TYPE_DIRECTORY() {
        return (int)2L;
    }
    public static int G_FILE_TYPE_SYMBOLIC_LINK() {
        return (int)3L;
    }
    public static int G_FILE_TYPE_SPECIAL() {
        return (int)4L;
    }
    public static int G_FILE_TYPE_SHORTCUT() {
        return (int)5L;
    }
    public static int G_FILE_TYPE_MOUNTABLE() {
        return (int)6L;
    }
    public static int G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS() {
        return (int)0L;
    }
    public static int G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL() {
        return (int)1L;
    }
    public static int G_FILESYSTEM_PREVIEW_TYPE_NEVER() {
        return (int)2L;
    }
    public static int G_FILE_MONITOR_EVENT_CHANGED() {
        return (int)0L;
    }
    public static int G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT() {
        return (int)1L;
    }
    public static int G_FILE_MONITOR_EVENT_DELETED() {
        return (int)2L;
    }
    public static int G_FILE_MONITOR_EVENT_CREATED() {
        return (int)3L;
    }
    public static int G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED() {
        return (int)4L;
    }
    public static int G_FILE_MONITOR_EVENT_PRE_UNMOUNT() {
        return (int)5L;
    }
    public static int G_FILE_MONITOR_EVENT_UNMOUNTED() {
        return (int)6L;
    }
    public static int G_FILE_MONITOR_EVENT_MOVED() {
        return (int)7L;
    }
    public static int G_FILE_MONITOR_EVENT_RENAMED() {
        return (int)8L;
    }
    public static int G_FILE_MONITOR_EVENT_MOVED_IN() {
        return (int)9L;
    }
    public static int G_FILE_MONITOR_EVENT_MOVED_OUT() {
        return (int)10L;
    }
    public static int G_IO_ERROR_FAILED() {
        return (int)0L;
    }
    public static int G_IO_ERROR_NOT_FOUND() {
        return (int)1L;
    }
    public static int G_IO_ERROR_EXISTS() {
        return (int)2L;
    }
    public static int G_IO_ERROR_IS_DIRECTORY() {
        return (int)3L;
    }
    public static int G_IO_ERROR_NOT_DIRECTORY() {
        return (int)4L;
    }
    public static int G_IO_ERROR_NOT_EMPTY() {
        return (int)5L;
    }
    public static int G_IO_ERROR_NOT_REGULAR_FILE() {
        return (int)6L;
    }
    public static int G_IO_ERROR_NOT_SYMBOLIC_LINK() {
        return (int)7L;
    }
    public static int G_IO_ERROR_NOT_MOUNTABLE_FILE() {
        return (int)8L;
    }
    public static int G_IO_ERROR_FILENAME_TOO_LONG() {
        return (int)9L;
    }
    public static int G_IO_ERROR_INVALID_FILENAME() {
        return (int)10L;
    }
    public static int G_IO_ERROR_TOO_MANY_LINKS() {
        return (int)11L;
    }
    public static int G_IO_ERROR_NO_SPACE() {
        return (int)12L;
    }
    public static int G_IO_ERROR_INVALID_ARGUMENT() {
        return (int)13L;
    }
    public static int G_IO_ERROR_PERMISSION_DENIED() {
        return (int)14L;
    }
    public static int G_IO_ERROR_NOT_SUPPORTED() {
        return (int)15L;
    }
    public static int G_IO_ERROR_NOT_MOUNTED() {
        return (int)16L;
    }
    public static int G_IO_ERROR_ALREADY_MOUNTED() {
        return (int)17L;
    }
    public static int G_IO_ERROR_CLOSED() {
        return (int)18L;
    }
    public static int G_IO_ERROR_CANCELLED() {
        return (int)19L;
    }
    public static int G_IO_ERROR_PENDING() {
        return (int)20L;
    }
    public static int G_IO_ERROR_READ_ONLY() {
        return (int)21L;
    }
    public static int G_IO_ERROR_CANT_CREATE_BACKUP() {
        return (int)22L;
    }
    public static int G_IO_ERROR_WRONG_ETAG() {
        return (int)23L;
    }
    public static int G_IO_ERROR_TIMED_OUT() {
        return (int)24L;
    }
    public static int G_IO_ERROR_WOULD_RECURSE() {
        return (int)25L;
    }
    public static int G_IO_ERROR_BUSY() {
        return (int)26L;
    }
    public static int G_IO_ERROR_WOULD_BLOCK() {
        return (int)27L;
    }
    public static int G_IO_ERROR_HOST_NOT_FOUND() {
        return (int)28L;
    }
    public static int G_IO_ERROR_WOULD_MERGE() {
        return (int)29L;
    }
    public static int G_IO_ERROR_FAILED_HANDLED() {
        return (int)30L;
    }
    public static int G_IO_ERROR_TOO_MANY_OPEN_FILES() {
        return (int)31L;
    }
    public static int G_IO_ERROR_NOT_INITIALIZED() {
        return (int)32L;
    }
    public static int G_IO_ERROR_ADDRESS_IN_USE() {
        return (int)33L;
    }
    public static int G_IO_ERROR_PARTIAL_INPUT() {
        return (int)34L;
    }
    public static int G_IO_ERROR_INVALID_DATA() {
        return (int)35L;
    }
    public static int G_IO_ERROR_DBUS_ERROR() {
        return (int)36L;
    }
    public static int G_IO_ERROR_HOST_UNREACHABLE() {
        return (int)37L;
    }
    public static int G_IO_ERROR_NETWORK_UNREACHABLE() {
        return (int)38L;
    }
    public static int G_IO_ERROR_CONNECTION_REFUSED() {
        return (int)39L;
    }
    public static int G_IO_ERROR_PROXY_FAILED() {
        return (int)40L;
    }
    public static int G_IO_ERROR_PROXY_AUTH_FAILED() {
        return (int)41L;
    }
    public static int G_IO_ERROR_PROXY_NEED_AUTH() {
        return (int)42L;
    }
    public static int G_IO_ERROR_PROXY_NOT_ALLOWED() {
        return (int)43L;
    }
    public static int G_IO_ERROR_BROKEN_PIPE() {
        return (int)44L;
    }
    public static int G_IO_ERROR_CONNECTION_CLOSED() {
        return (int)44L;
    }
    public static int G_IO_ERROR_NOT_CONNECTED() {
        return (int)45L;
    }
    public static int G_IO_ERROR_MESSAGE_TOO_LARGE() {
        return (int)46L;
    }
    public static int G_ASK_PASSWORD_NEED_PASSWORD() {
        return (int)1L;
    }
    public static int G_ASK_PASSWORD_NEED_USERNAME() {
        return (int)2L;
    }
    public static int G_ASK_PASSWORD_NEED_DOMAIN() {
        return (int)4L;
    }
    public static int G_ASK_PASSWORD_SAVING_SUPPORTED() {
        return (int)8L;
    }
    public static int G_ASK_PASSWORD_ANONYMOUS_SUPPORTED() {
        return (int)16L;
    }
    public static int G_ASK_PASSWORD_TCRYPT() {
        return (int)32L;
    }
    public static int G_PASSWORD_SAVE_NEVER() {
        return (int)0L;
    }
    public static int G_PASSWORD_SAVE_FOR_SESSION() {
        return (int)1L;
    }
    public static int G_PASSWORD_SAVE_PERMANENTLY() {
        return (int)2L;
    }
    public static int G_MOUNT_OPERATION_HANDLED() {
        return (int)0L;
    }
    public static int G_MOUNT_OPERATION_ABORTED() {
        return (int)1L;
    }
    public static int G_MOUNT_OPERATION_UNHANDLED() {
        return (int)2L;
    }
    public static int G_OUTPUT_STREAM_SPLICE_NONE() {
        return (int)0L;
    }
    public static int G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE() {
        return (int)1L;
    }
    public static int G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET() {
        return (int)2L;
    }
    public static int G_IO_STREAM_SPLICE_NONE() {
        return (int)0L;
    }
    public static int G_IO_STREAM_SPLICE_CLOSE_STREAM1() {
        return (int)1L;
    }
    public static int G_IO_STREAM_SPLICE_CLOSE_STREAM2() {
        return (int)2L;
    }
    public static int G_IO_STREAM_SPLICE_WAIT_FOR_BOTH() {
        return (int)4L;
    }
    public static int G_EMBLEM_ORIGIN_UNKNOWN() {
        return (int)0L;
    }
    public static int G_EMBLEM_ORIGIN_DEVICE() {
        return (int)1L;
    }
    public static int G_EMBLEM_ORIGIN_LIVEMETADATA() {
        return (int)2L;
    }
    public static int G_EMBLEM_ORIGIN_TAG() {
        return (int)3L;
    }
    public static int G_RESOLVER_ERROR_NOT_FOUND() {
        return (int)0L;
    }
    public static int G_RESOLVER_ERROR_TEMPORARY_FAILURE() {
        return (int)1L;
    }
    public static int G_RESOLVER_ERROR_INTERNAL() {
        return (int)2L;
    }
    public static int G_RESOLVER_RECORD_SRV() {
        return (int)1L;
    }
    public static int G_RESOLVER_RECORD_MX() {
        return (int)2L;
    }
    public static int G_RESOLVER_RECORD_TXT() {
        return (int)3L;
    }
    public static int G_RESOLVER_RECORD_SOA() {
        return (int)4L;
    }
    public static int G_RESOLVER_RECORD_NS() {
        return (int)5L;
    }
    public static int G_RESOURCE_ERROR_NOT_FOUND() {
        return (int)0L;
    }
    public static int G_RESOURCE_ERROR_INTERNAL() {
        return (int)1L;
    }
    public static int G_RESOURCE_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_RESOURCE_FLAGS_COMPRESSED() {
        return (int)1L;
    }
    public static int G_RESOURCE_LOOKUP_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_SOCKET_FAMILY_INVALID() {
        return (int)0L;
    }
    public static int G_SOCKET_FAMILY_UNIX() {
        return (int)1L;
    }
    public static int G_SOCKET_FAMILY_IPV4() {
        return (int)2L;
    }
    public static int G_SOCKET_FAMILY_IPV6() {
        return (int)10L;
    }
    public static int G_SOCKET_TYPE_INVALID() {
        return (int)0L;
    }
    public static int G_SOCKET_TYPE_STREAM() {
        return (int)1L;
    }
    public static int G_SOCKET_TYPE_DATAGRAM() {
        return (int)2L;
    }
    public static int G_SOCKET_TYPE_SEQPACKET() {
        return (int)3L;
    }
    public static int G_SOCKET_MSG_NONE() {
        return (int)0L;
    }
    public static int G_SOCKET_MSG_OOB() {
        return (int)1L;
    }
    public static int G_SOCKET_MSG_PEEK() {
        return (int)2L;
    }
    public static int G_SOCKET_MSG_DONTROUTE() {
        return (int)4L;
    }
    public static int G_SOCKET_PROTOCOL_UNKNOWN() {
        return (int)-1L;
    }
    public static int G_SOCKET_PROTOCOL_DEFAULT() {
        return (int)0L;
    }
    public static int G_SOCKET_PROTOCOL_TCP() {
        return (int)6L;
    }
    public static int G_SOCKET_PROTOCOL_UDP() {
        return (int)17L;
    }
    public static int G_SOCKET_PROTOCOL_SCTP() {
        return (int)132L;
    }
    public static int G_ZLIB_COMPRESSOR_FORMAT_ZLIB() {
        return (int)0L;
    }
    public static int G_ZLIB_COMPRESSOR_FORMAT_GZIP() {
        return (int)1L;
    }
    public static int G_ZLIB_COMPRESSOR_FORMAT_RAW() {
        return (int)2L;
    }
    public static int G_UNIX_SOCKET_ADDRESS_INVALID() {
        return (int)0L;
    }
    public static int G_UNIX_SOCKET_ADDRESS_ANONYMOUS() {
        return (int)1L;
    }
    public static int G_UNIX_SOCKET_ADDRESS_PATH() {
        return (int)2L;
    }
    public static int G_UNIX_SOCKET_ADDRESS_ABSTRACT() {
        return (int)3L;
    }
    public static int G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED() {
        return (int)4L;
    }
    public static int G_BUS_TYPE_STARTER() {
        return (int)-1L;
    }
    public static int G_BUS_TYPE_NONE() {
        return (int)0L;
    }
    public static int G_BUS_TYPE_SYSTEM() {
        return (int)1L;
    }
    public static int G_BUS_TYPE_SESSION() {
        return (int)2L;
    }
    public static int G_BUS_NAME_OWNER_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT() {
        return (int)1L;
    }
    public static int G_BUS_NAME_OWNER_FLAGS_REPLACE() {
        return (int)2L;
    }
    public static int G_BUS_NAME_OWNER_FLAGS_DO_NOT_QUEUE() {
        return (int)4L;
    }
    public static int G_BUS_NAME_WATCHER_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_BUS_NAME_WATCHER_FLAGS_AUTO_START() {
        return (int)1L;
    }
    public static int G_DBUS_PROXY_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES() {
        return (int)1L;
    }
    public static int G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS() {
        return (int)2L;
    }
    public static int G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START() {
        return (int)4L;
    }
    public static int G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES() {
        return (int)8L;
    }
    public static int G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START_AT_CONSTRUCTION() {
        return (int)16L;
    }
    public static int G_DBUS_PROXY_FLAGS_NO_MATCH_RULE() {
        return (int)32L;
    }
    public static int G_DBUS_ERROR_FAILED() {
        return (int)0L;
    }
    public static int G_DBUS_ERROR_NO_MEMORY() {
        return (int)1L;
    }
    public static int G_DBUS_ERROR_SERVICE_UNKNOWN() {
        return (int)2L;
    }
    public static int G_DBUS_ERROR_NAME_HAS_NO_OWNER() {
        return (int)3L;
    }
    public static int G_DBUS_ERROR_NO_REPLY() {
        return (int)4L;
    }
    public static int G_DBUS_ERROR_IO_ERROR() {
        return (int)5L;
    }
    public static int G_DBUS_ERROR_BAD_ADDRESS() {
        return (int)6L;
    }
    public static int G_DBUS_ERROR_NOT_SUPPORTED() {
        return (int)7L;
    }
    public static int G_DBUS_ERROR_LIMITS_EXCEEDED() {
        return (int)8L;
    }
    public static int G_DBUS_ERROR_ACCESS_DENIED() {
        return (int)9L;
    }
    public static int G_DBUS_ERROR_AUTH_FAILED() {
        return (int)10L;
    }
    public static int G_DBUS_ERROR_NO_SERVER() {
        return (int)11L;
    }
    public static int G_DBUS_ERROR_TIMEOUT() {
        return (int)12L;
    }
    public static int G_DBUS_ERROR_NO_NETWORK() {
        return (int)13L;
    }
    public static int G_DBUS_ERROR_ADDRESS_IN_USE() {
        return (int)14L;
    }
    public static int G_DBUS_ERROR_DISCONNECTED() {
        return (int)15L;
    }
    public static int G_DBUS_ERROR_INVALID_ARGS() {
        return (int)16L;
    }
    public static int G_DBUS_ERROR_FILE_NOT_FOUND() {
        return (int)17L;
    }
    public static int G_DBUS_ERROR_FILE_EXISTS() {
        return (int)18L;
    }
    public static int G_DBUS_ERROR_UNKNOWN_METHOD() {
        return (int)19L;
    }
    public static int G_DBUS_ERROR_TIMED_OUT() {
        return (int)20L;
    }
    public static int G_DBUS_ERROR_MATCH_RULE_NOT_FOUND() {
        return (int)21L;
    }
    public static int G_DBUS_ERROR_MATCH_RULE_INVALID() {
        return (int)22L;
    }
    public static int G_DBUS_ERROR_SPAWN_EXEC_FAILED() {
        return (int)23L;
    }
    public static int G_DBUS_ERROR_SPAWN_FORK_FAILED() {
        return (int)24L;
    }
    public static int G_DBUS_ERROR_SPAWN_CHILD_EXITED() {
        return (int)25L;
    }
    public static int G_DBUS_ERROR_SPAWN_CHILD_SIGNALED() {
        return (int)26L;
    }
    public static int G_DBUS_ERROR_SPAWN_FAILED() {
        return (int)27L;
    }
    public static int G_DBUS_ERROR_SPAWN_SETUP_FAILED() {
        return (int)28L;
    }
    public static int G_DBUS_ERROR_SPAWN_CONFIG_INVALID() {
        return (int)29L;
    }
    public static int G_DBUS_ERROR_SPAWN_SERVICE_INVALID() {
        return (int)30L;
    }
    public static int G_DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND() {
        return (int)31L;
    }
    public static int G_DBUS_ERROR_SPAWN_PERMISSIONS_INVALID() {
        return (int)32L;
    }
    public static int G_DBUS_ERROR_SPAWN_FILE_INVALID() {
        return (int)33L;
    }
    public static int G_DBUS_ERROR_SPAWN_NO_MEMORY() {
        return (int)34L;
    }
    public static int G_DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN() {
        return (int)35L;
    }
    public static int G_DBUS_ERROR_INVALID_SIGNATURE() {
        return (int)36L;
    }
    public static int G_DBUS_ERROR_INVALID_FILE_CONTENT() {
        return (int)37L;
    }
    public static int G_DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN() {
        return (int)38L;
    }
    public static int G_DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN() {
        return (int)39L;
    }
    public static int G_DBUS_ERROR_OBJECT_PATH_IN_USE() {
        return (int)40L;
    }
    public static int G_DBUS_ERROR_UNKNOWN_OBJECT() {
        return (int)41L;
    }
    public static int G_DBUS_ERROR_UNKNOWN_INTERFACE() {
        return (int)42L;
    }
    public static int G_DBUS_ERROR_UNKNOWN_PROPERTY() {
        return (int)43L;
    }
    public static int G_DBUS_ERROR_PROPERTY_READ_ONLY() {
        return (int)44L;
    }
    public static int G_DBUS_CONNECTION_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT() {
        return (int)1L;
    }
    public static int G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER() {
        return (int)2L;
    }
    public static int G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS() {
        return (int)4L;
    }
    public static int G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION() {
        return (int)8L;
    }
    public static int G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING() {
        return (int)16L;
    }
    public static int G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_REQUIRE_SAME_USER() {
        return (int)32L;
    }
    public static int G_DBUS_CAPABILITY_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING() {
        return (int)1L;
    }
    public static int G_DBUS_CALL_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_CALL_FLAGS_NO_AUTO_START() {
        return (int)1L;
    }
    public static int G_DBUS_CALL_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION() {
        return (int)2L;
    }
    public static int G_DBUS_MESSAGE_TYPE_INVALID() {
        return (int)0L;
    }
    public static int G_DBUS_MESSAGE_TYPE_METHOD_CALL() {
        return (int)1L;
    }
    public static int G_DBUS_MESSAGE_TYPE_METHOD_RETURN() {
        return (int)2L;
    }
    public static int G_DBUS_MESSAGE_TYPE_ERROR() {
        return (int)3L;
    }
    public static int G_DBUS_MESSAGE_TYPE_SIGNAL() {
        return (int)4L;
    }
    public static int G_DBUS_MESSAGE_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED() {
        return (int)1L;
    }
    public static int G_DBUS_MESSAGE_FLAGS_NO_AUTO_START() {
        return (int)2L;
    }
    public static int G_DBUS_MESSAGE_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION() {
        return (int)4L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_INVALID() {
        return (int)0L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_PATH() {
        return (int)1L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_INTERFACE() {
        return (int)2L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_MEMBER() {
        return (int)3L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME() {
        return (int)4L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL() {
        return (int)5L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_DESTINATION() {
        return (int)6L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_SENDER() {
        return (int)7L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_SIGNATURE() {
        return (int)8L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS() {
        return (int)9L;
    }
    public static int G_DBUS_PROPERTY_INFO_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_PROPERTY_INFO_FLAGS_READABLE() {
        return (int)1L;
    }
    public static int G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE() {
        return (int)2L;
    }
    public static int G_DBUS_SUBTREE_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES() {
        return (int)1L;
    }
    public static int G_DBUS_SERVER_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_SERVER_FLAGS_RUN_IN_THREAD() {
        return (int)1L;
    }
    public static int G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS() {
        return (int)2L;
    }
    public static int G_DBUS_SERVER_FLAGS_AUTHENTICATION_REQUIRE_SAME_USER() {
        return (int)4L;
    }
    public static int G_DBUS_SIGNAL_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE() {
        return (int)1L;
    }
    public static int G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_NAMESPACE() {
        return (int)2L;
    }
    public static int G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_PATH() {
        return (int)4L;
    }
    public static int G_DBUS_SEND_MESSAGE_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL() {
        return (int)1L;
    }
    public static int G_CREDENTIALS_TYPE_INVALID() {
        return (int)0L;
    }
    public static int G_CREDENTIALS_TYPE_LINUX_UCRED() {
        return (int)1L;
    }
    public static int G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED() {
        return (int)2L;
    }
    public static int G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED() {
        return (int)3L;
    }
    public static int G_CREDENTIALS_TYPE_SOLARIS_UCRED() {
        return (int)4L;
    }
    public static int G_CREDENTIALS_TYPE_NETBSD_UNPCBID() {
        return (int)5L;
    }
    public static int G_CREDENTIALS_TYPE_APPLE_XUCRED() {
        return (int)6L;
    }
    public static int G_CREDENTIALS_TYPE_WIN32_PID() {
        return (int)7L;
    }
    public static int G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN() {
        return (int)66L;
    }
    public static int G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN() {
        return (int)108L;
    }
    public static int G_APPLICATION_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_APPLICATION_IS_SERVICE() {
        return (int)1L;
    }
    public static int G_APPLICATION_IS_LAUNCHER() {
        return (int)2L;
    }
    public static int G_APPLICATION_HANDLES_OPEN() {
        return (int)4L;
    }
    public static int G_APPLICATION_HANDLES_COMMAND_LINE() {
        return (int)8L;
    }
    public static int G_APPLICATION_SEND_ENVIRONMENT() {
        return (int)16L;
    }
    public static int G_APPLICATION_NON_UNIQUE() {
        return (int)32L;
    }
    public static int G_APPLICATION_CAN_OVERRIDE_APP_ID() {
        return (int)64L;
    }
    public static int G_APPLICATION_ALLOW_REPLACEMENT() {
        return (int)128L;
    }
    public static int G_APPLICATION_REPLACE() {
        return (int)256L;
    }
    public static int G_TLS_ERROR_UNAVAILABLE() {
        return (int)0L;
    }
    public static int G_TLS_ERROR_MISC() {
        return (int)1L;
    }
    public static int G_TLS_ERROR_BAD_CERTIFICATE() {
        return (int)2L;
    }
    public static int G_TLS_ERROR_NOT_TLS() {
        return (int)3L;
    }
    public static int G_TLS_ERROR_HANDSHAKE() {
        return (int)4L;
    }
    public static int G_TLS_ERROR_CERTIFICATE_REQUIRED() {
        return (int)5L;
    }
    public static int G_TLS_ERROR_EOF() {
        return (int)6L;
    }
    public static int G_TLS_ERROR_INAPPROPRIATE_FALLBACK() {
        return (int)7L;
    }
    public static int G_TLS_ERROR_BAD_CERTIFICATE_PASSWORD() {
        return (int)8L;
    }
    public static int G_TLS_CERTIFICATE_UNKNOWN_CA() {
        return (int)1L;
    }
    public static int G_TLS_CERTIFICATE_BAD_IDENTITY() {
        return (int)2L;
    }
    public static int G_TLS_CERTIFICATE_NOT_ACTIVATED() {
        return (int)4L;
    }
    public static int G_TLS_CERTIFICATE_EXPIRED() {
        return (int)8L;
    }
    public static int G_TLS_CERTIFICATE_REVOKED() {
        return (int)16L;
    }
    public static int G_TLS_CERTIFICATE_INSECURE() {
        return (int)32L;
    }
    public static int G_TLS_CERTIFICATE_GENERIC_ERROR() {
        return (int)64L;
    }
    public static int G_TLS_CERTIFICATE_VALIDATE_ALL() {
        return (int)127L;
    }
    public static int G_TLS_AUTHENTICATION_NONE() {
        return (int)0L;
    }
    public static int G_TLS_AUTHENTICATION_REQUESTED() {
        return (int)1L;
    }
    public static int G_TLS_AUTHENTICATION_REQUIRED() {
        return (int)2L;
    }
    public static int G_TLS_CHANNEL_BINDING_TLS_UNIQUE() {
        return (int)0L;
    }
    public static int G_TLS_CHANNEL_BINDING_TLS_SERVER_END_POINT() {
        return (int)1L;
    }
    public static int G_TLS_CHANNEL_BINDING_ERROR_NOT_IMPLEMENTED() {
        return (int)0L;
    }
    public static int G_TLS_CHANNEL_BINDING_ERROR_INVALID_STATE() {
        return (int)1L;
    }
    public static int G_TLS_CHANNEL_BINDING_ERROR_NOT_AVAILABLE() {
        return (int)2L;
    }
    public static int G_TLS_CHANNEL_BINDING_ERROR_NOT_SUPPORTED() {
        return (int)3L;
    }
    public static int G_TLS_CHANNEL_BINDING_ERROR_GENERAL_ERROR() {
        return (int)4L;
    }
    public static int G_TLS_REHANDSHAKE_NEVER() {
        return (int)0L;
    }
    public static int G_TLS_REHANDSHAKE_SAFELY() {
        return (int)1L;
    }
    public static int G_TLS_REHANDSHAKE_UNSAFELY() {
        return (int)2L;
    }
    public static int G_TLS_PASSWORD_NONE() {
        return (int)0L;
    }
    public static int G_TLS_PASSWORD_RETRY() {
        return (int)2L;
    }
    public static int G_TLS_PASSWORD_MANY_TRIES() {
        return (int)4L;
    }
    public static int G_TLS_PASSWORD_FINAL_TRY() {
        return (int)8L;
    }
    public static int G_TLS_PASSWORD_PKCS11_USER() {
        return (int)16L;
    }
    public static int G_TLS_PASSWORD_PKCS11_SECURITY_OFFICER() {
        return (int)32L;
    }
    public static int G_TLS_PASSWORD_PKCS11_CONTEXT_SPECIFIC() {
        return (int)64L;
    }
    public static int G_TLS_INTERACTION_UNHANDLED() {
        return (int)0L;
    }
    public static int G_TLS_INTERACTION_HANDLED() {
        return (int)1L;
    }
    public static int G_TLS_INTERACTION_FAILED() {
        return (int)2L;
    }
    public static int G_DBUS_INTERFACE_SKELETON_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_INTERFACE_SKELETON_FLAGS_HANDLE_METHOD_INVOCATIONS_IN_THREAD() {
        return (int)1L;
    }
    public static int G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_DO_NOT_AUTO_START() {
        return (int)1L;
    }
    public static int G_TLS_DATABASE_VERIFY_NONE() {
        return (int)0L;
    }
    public static int G_TLS_DATABASE_LOOKUP_NONE() {
        return (int)0L;
    }
    public static int G_TLS_DATABASE_LOOKUP_KEYPAIR() {
        return (int)1L;
    }
    public static int G_TLS_CERTIFICATE_REQUEST_NONE() {
        return (int)0L;
    }
    public static int G_TLS_PROTOCOL_VERSION_UNKNOWN() {
        return (int)0L;
    }
    public static int G_TLS_PROTOCOL_VERSION_SSL_3_0() {
        return (int)1L;
    }
    public static int G_TLS_PROTOCOL_VERSION_TLS_1_0() {
        return (int)2L;
    }
    public static int G_TLS_PROTOCOL_VERSION_TLS_1_1() {
        return (int)3L;
    }
    public static int G_TLS_PROTOCOL_VERSION_TLS_1_2() {
        return (int)4L;
    }
    public static int G_TLS_PROTOCOL_VERSION_TLS_1_3() {
        return (int)5L;
    }
    public static int G_TLS_PROTOCOL_VERSION_DTLS_1_0() {
        return (int)201L;
    }
    public static int G_TLS_PROTOCOL_VERSION_DTLS_1_2() {
        return (int)202L;
    }
    public static int G_IO_MODULE_SCOPE_NONE() {
        return (int)0L;
    }
    public static int G_IO_MODULE_SCOPE_BLOCK_DUPLICATES() {
        return (int)1L;
    }
    public static int G_SOCKET_CLIENT_RESOLVING() {
        return (int)0L;
    }
    public static int G_SOCKET_CLIENT_RESOLVED() {
        return (int)1L;
    }
    public static int G_SOCKET_CLIENT_CONNECTING() {
        return (int)2L;
    }
    public static int G_SOCKET_CLIENT_CONNECTED() {
        return (int)3L;
    }
    public static int G_SOCKET_CLIENT_PROXY_NEGOTIATING() {
        return (int)4L;
    }
    public static int G_SOCKET_CLIENT_PROXY_NEGOTIATED() {
        return (int)5L;
    }
    public static int G_SOCKET_CLIENT_TLS_HANDSHAKING() {
        return (int)6L;
    }
    public static int G_SOCKET_CLIENT_TLS_HANDSHAKED() {
        return (int)7L;
    }
    public static int G_SOCKET_CLIENT_COMPLETE() {
        return (int)8L;
    }
    public static int G_SOCKET_LISTENER_BINDING() {
        return (int)0L;
    }
    public static int G_SOCKET_LISTENER_BOUND() {
        return (int)1L;
    }
    public static int G_SOCKET_LISTENER_LISTENING() {
        return (int)2L;
    }
    public static int G_SOCKET_LISTENER_LISTENED() {
        return (int)3L;
    }
    public static int G_TEST_DBUS_NONE() {
        return (int)0L;
    }
    public static int G_SUBPROCESS_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_SUBPROCESS_FLAGS_STDIN_PIPE() {
        return (int)1L;
    }
    public static int G_SUBPROCESS_FLAGS_STDIN_INHERIT() {
        return (int)2L;
    }
    public static int G_SUBPROCESS_FLAGS_STDOUT_PIPE() {
        return (int)4L;
    }
    public static int G_SUBPROCESS_FLAGS_STDOUT_SILENCE() {
        return (int)8L;
    }
    public static int G_SUBPROCESS_FLAGS_STDERR_PIPE() {
        return (int)16L;
    }
    public static int G_SUBPROCESS_FLAGS_STDERR_SILENCE() {
        return (int)32L;
    }
    public static int G_SUBPROCESS_FLAGS_STDERR_MERGE() {
        return (int)64L;
    }
    public static int G_SUBPROCESS_FLAGS_INHERIT_FDS() {
        return (int)128L;
    }
    public static int G_SUBPROCESS_FLAGS_SEARCH_PATH_FROM_ENVP() {
        return (int)256L;
    }
    public static int G_NOTIFICATION_PRIORITY_NORMAL() {
        return (int)0L;
    }
    public static int G_NOTIFICATION_PRIORITY_LOW() {
        return (int)1L;
    }
    public static int G_NOTIFICATION_PRIORITY_HIGH() {
        return (int)2L;
    }
    public static int G_NOTIFICATION_PRIORITY_URGENT() {
        return (int)3L;
    }
    public static int G_NETWORK_CONNECTIVITY_LOCAL() {
        return (int)1L;
    }
    public static int G_NETWORK_CONNECTIVITY_LIMITED() {
        return (int)2L;
    }
    public static int G_NETWORK_CONNECTIVITY_PORTAL() {
        return (int)3L;
    }
    public static int G_NETWORK_CONNECTIVITY_FULL() {
        return (int)4L;
    }
    public static int G_POLLABLE_RETURN_FAILED() {
        return (int)0L;
    }
    public static int G_POLLABLE_RETURN_OK() {
        return (int)1L;
    }
    public static int G_POLLABLE_RETURN_WOULD_BLOCK() {
        return (int)-27L;
    }
    public static int G_MEMORY_MONITOR_WARNING_LEVEL_LOW() {
        return (int)50L;
    }
    public static int G_MEMORY_MONITOR_WARNING_LEVEL_MEDIUM() {
        return (int)100L;
    }
    public static int G_MEMORY_MONITOR_WARNING_LEVEL_CRITICAL() {
        return (int)255L;
    }
    public static MethodHandle g_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$519.g_action_get_type$MH,"g_action_get_type");
    }
    public static long g_action_get_type () {
        var mh$ = g_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$519.g_action_get_name$MH,"g_action_get_name");
    }
    public static MemoryAddress g_action_get_name ( Addressable action) {
        var mh$ = g_action_get_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_get_parameter_type$MH() {
        return RuntimeHelper.requireNonNull(constants$519.g_action_get_parameter_type$MH,"g_action_get_parameter_type");
    }
    public static MemoryAddress g_action_get_parameter_type ( Addressable action) {
        var mh$ = g_action_get_parameter_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_get_state_type$MH() {
        return RuntimeHelper.requireNonNull(constants$519.g_action_get_state_type$MH,"g_action_get_state_type");
    }
    public static MemoryAddress g_action_get_state_type ( Addressable action) {
        var mh$ = g_action_get_state_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_get_state_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$520.g_action_get_state_hint$MH,"g_action_get_state_hint");
    }
    public static MemoryAddress g_action_get_state_hint ( Addressable action) {
        var mh$ = g_action_get_state_hint$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_get_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$520.g_action_get_enabled$MH,"g_action_get_enabled");
    }
    public static int g_action_get_enabled ( Addressable action) {
        var mh$ = g_action_get_enabled$MH();
        try {
            return (int)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$520.g_action_get_state$MH,"g_action_get_state");
    }
    public static MemoryAddress g_action_get_state ( Addressable action) {
        var mh$ = g_action_get_state$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_change_state$MH() {
        return RuntimeHelper.requireNonNull(constants$520.g_action_change_state$MH,"g_action_change_state");
    }
    public static void g_action_change_state ( Addressable action,  Addressable value) {
        var mh$ = g_action_change_state$MH();
        try {
            mh$.invokeExact(action, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$520.g_action_activate$MH,"g_action_activate");
    }
    public static void g_action_activate ( Addressable action,  Addressable parameter) {
        var mh$ = g_action_activate$MH();
        try {
            mh$.invokeExact(action, parameter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_name_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$520.g_action_name_is_valid$MH,"g_action_name_is_valid");
    }
    public static int g_action_name_is_valid ( Addressable action_name) {
        var mh$ = g_action_name_is_valid$MH();
        try {
            return (int)mh$.invokeExact(action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_parse_detailed_name$MH() {
        return RuntimeHelper.requireNonNull(constants$521.g_action_parse_detailed_name$MH,"g_action_parse_detailed_name");
    }
    public static int g_action_parse_detailed_name ( Addressable detailed_name,  Addressable action_name,  Addressable target_value,  Addressable error) {
        var mh$ = g_action_parse_detailed_name$MH();
        try {
            return (int)mh$.invokeExact(detailed_name, action_name, target_value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_print_detailed_name$MH() {
        return RuntimeHelper.requireNonNull(constants$521.g_action_print_detailed_name$MH,"g_action_print_detailed_name");
    }
    public static MemoryAddress g_action_print_detailed_name ( Addressable action_name,  Addressable target_value) {
        var mh$ = g_action_print_detailed_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action_name, target_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$521.g_action_group_get_type$MH,"g_action_group_get_type");
    }
    public static long g_action_group_get_type () {
        var mh$ = g_action_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_has_action$MH() {
        return RuntimeHelper.requireNonNull(constants$521.g_action_group_has_action$MH,"g_action_group_has_action");
    }
    public static int g_action_group_has_action ( Addressable action_group,  Addressable action_name) {
        var mh$ = g_action_group_has_action$MH();
        try {
            return (int)mh$.invokeExact(action_group, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_list_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$521.g_action_group_list_actions$MH,"g_action_group_list_actions");
    }
    public static MemoryAddress g_action_group_list_actions ( Addressable action_group) {
        var mh$ = g_action_group_list_actions$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_get_action_parameter_type$MH() {
        return RuntimeHelper.requireNonNull(constants$521.g_action_group_get_action_parameter_type$MH,"g_action_group_get_action_parameter_type");
    }
    public static MemoryAddress g_action_group_get_action_parameter_type ( Addressable action_group,  Addressable action_name) {
        var mh$ = g_action_group_get_action_parameter_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action_group, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_get_action_state_type$MH() {
        return RuntimeHelper.requireNonNull(constants$522.g_action_group_get_action_state_type$MH,"g_action_group_get_action_state_type");
    }
    public static MemoryAddress g_action_group_get_action_state_type ( Addressable action_group,  Addressable action_name) {
        var mh$ = g_action_group_get_action_state_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action_group, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_get_action_state_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$522.g_action_group_get_action_state_hint$MH,"g_action_group_get_action_state_hint");
    }
    public static MemoryAddress g_action_group_get_action_state_hint ( Addressable action_group,  Addressable action_name) {
        var mh$ = g_action_group_get_action_state_hint$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action_group, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_get_action_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$522.g_action_group_get_action_enabled$MH,"g_action_group_get_action_enabled");
    }
    public static int g_action_group_get_action_enabled ( Addressable action_group,  Addressable action_name) {
        var mh$ = g_action_group_get_action_enabled$MH();
        try {
            return (int)mh$.invokeExact(action_group, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_get_action_state$MH() {
        return RuntimeHelper.requireNonNull(constants$522.g_action_group_get_action_state$MH,"g_action_group_get_action_state");
    }
    public static MemoryAddress g_action_group_get_action_state ( Addressable action_group,  Addressable action_name) {
        var mh$ = g_action_group_get_action_state$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action_group, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_change_action_state$MH() {
        return RuntimeHelper.requireNonNull(constants$522.g_action_group_change_action_state$MH,"g_action_group_change_action_state");
    }
    public static void g_action_group_change_action_state ( Addressable action_group,  Addressable action_name,  Addressable value) {
        var mh$ = g_action_group_change_action_state$MH();
        try {
            mh$.invokeExact(action_group, action_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_activate_action$MH() {
        return RuntimeHelper.requireNonNull(constants$522.g_action_group_activate_action$MH,"g_action_group_activate_action");
    }
    public static void g_action_group_activate_action ( Addressable action_group,  Addressable action_name,  Addressable parameter) {
        var mh$ = g_action_group_activate_action$MH();
        try {
            mh$.invokeExact(action_group, action_name, parameter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_action_added$MH() {
        return RuntimeHelper.requireNonNull(constants$523.g_action_group_action_added$MH,"g_action_group_action_added");
    }
    public static void g_action_group_action_added ( Addressable action_group,  Addressable action_name) {
        var mh$ = g_action_group_action_added$MH();
        try {
            mh$.invokeExact(action_group, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_action_removed$MH() {
        return RuntimeHelper.requireNonNull(constants$523.g_action_group_action_removed$MH,"g_action_group_action_removed");
    }
    public static void g_action_group_action_removed ( Addressable action_group,  Addressable action_name) {
        var mh$ = g_action_group_action_removed$MH();
        try {
            mh$.invokeExact(action_group, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_action_enabled_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$523.g_action_group_action_enabled_changed$MH,"g_action_group_action_enabled_changed");
    }
    public static void g_action_group_action_enabled_changed ( Addressable action_group,  Addressable action_name,  int enabled) {
        var mh$ = g_action_group_action_enabled_changed$MH();
        try {
            mh$.invokeExact(action_group, action_name, enabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_action_state_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$523.g_action_group_action_state_changed$MH,"g_action_group_action_state_changed");
    }
    public static void g_action_group_action_state_changed ( Addressable action_group,  Addressable action_name,  Addressable state) {
        var mh$ = g_action_group_action_state_changed$MH();
        try {
            mh$.invokeExact(action_group, action_name, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_query_action$MH() {
        return RuntimeHelper.requireNonNull(constants$523.g_action_group_query_action$MH,"g_action_group_query_action");
    }
    public static int g_action_group_query_action ( Addressable action_group,  Addressable action_name,  Addressable enabled,  Addressable parameter_type,  Addressable state_type,  Addressable state_hint,  Addressable state) {
        var mh$ = g_action_group_query_action$MH();
        try {
            return (int)mh$.invokeExact(action_group, action_name, enabled, parameter_type, state_type, state_hint, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_export_action_group$MH() {
        return RuntimeHelper.requireNonNull(constants$523.g_dbus_connection_export_action_group$MH,"g_dbus_connection_export_action_group");
    }
    public static int g_dbus_connection_export_action_group ( Addressable connection,  Addressable object_path,  Addressable action_group,  Addressable error) {
        var mh$ = g_dbus_connection_export_action_group$MH();
        try {
            return (int)mh$.invokeExact(connection, object_path, action_group, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_unexport_action_group$MH() {
        return RuntimeHelper.requireNonNull(constants$524.g_dbus_connection_unexport_action_group$MH,"g_dbus_connection_unexport_action_group");
    }
    public static void g_dbus_connection_unexport_action_group ( Addressable connection,  int export_id) {
        var mh$ = g_dbus_connection_unexport_action_group$MH();
        try {
            mh$.invokeExact(connection, export_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_map_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$524.g_action_map_get_type$MH,"g_action_map_get_type");
    }
    public static long g_action_map_get_type () {
        var mh$ = g_action_map_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_map_lookup_action$MH() {
        return RuntimeHelper.requireNonNull(constants$524.g_action_map_lookup_action$MH,"g_action_map_lookup_action");
    }
    public static MemoryAddress g_action_map_lookup_action ( Addressable action_map,  Addressable action_name) {
        var mh$ = g_action_map_lookup_action$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action_map, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_map_add_action$MH() {
        return RuntimeHelper.requireNonNull(constants$524.g_action_map_add_action$MH,"g_action_map_add_action");
    }
    public static void g_action_map_add_action ( Addressable action_map,  Addressable action) {
        var mh$ = g_action_map_add_action$MH();
        try {
            mh$.invokeExact(action_map, action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_map_remove_action$MH() {
        return RuntimeHelper.requireNonNull(constants$524.g_action_map_remove_action$MH,"g_action_map_remove_action");
    }
    public static void g_action_map_remove_action ( Addressable action_map,  Addressable action_name) {
        var mh$ = g_action_map_remove_action$MH();
        try {
            mh$.invokeExact(action_map, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_map_add_action_entries$MH() {
        return RuntimeHelper.requireNonNull(constants$524.g_action_map_add_action_entries$MH,"g_action_map_add_action_entries");
    }
    public static void g_action_map_add_action_entries ( Addressable action_map,  Addressable entries,  int n_entries,  Addressable user_data) {
        var mh$ = g_action_map_add_action_entries$MH();
        try {
            mh$.invokeExact(action_map, entries, n_entries, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$525.g_app_info_get_type$MH,"g_app_info_get_type");
    }
    public static long g_app_info_get_type () {
        var mh$ = g_app_info_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_create_from_commandline$MH() {
        return RuntimeHelper.requireNonNull(constants$525.g_app_info_create_from_commandline$MH,"g_app_info_create_from_commandline");
    }
    public static MemoryAddress g_app_info_create_from_commandline ( Addressable commandline,  Addressable application_name,  int flags,  Addressable error) {
        var mh$ = g_app_info_create_from_commandline$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(commandline, application_name, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$525.g_app_info_dup$MH,"g_app_info_dup");
    }
    public static MemoryAddress g_app_info_dup ( Addressable appinfo) {
        var mh$ = g_app_info_dup$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$525.g_app_info_equal$MH,"g_app_info_equal");
    }
    public static int g_app_info_equal ( Addressable appinfo1,  Addressable appinfo2) {
        var mh$ = g_app_info_equal$MH();
        try {
            return (int)mh$.invokeExact(appinfo1, appinfo2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_id$MH() {
        return RuntimeHelper.requireNonNull(constants$525.g_app_info_get_id$MH,"g_app_info_get_id");
    }
    public static MemoryAddress g_app_info_get_id ( Addressable appinfo) {
        var mh$ = g_app_info_get_id$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$525.g_app_info_get_name$MH,"g_app_info_get_name");
    }
    public static MemoryAddress g_app_info_get_name ( Addressable appinfo) {
        var mh$ = g_app_info_get_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_display_name$MH() {
        return RuntimeHelper.requireNonNull(constants$526.g_app_info_get_display_name$MH,"g_app_info_get_display_name");
    }
    public static MemoryAddress g_app_info_get_display_name ( Addressable appinfo) {
        var mh$ = g_app_info_get_display_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$526.g_app_info_get_description$MH,"g_app_info_get_description");
    }
    public static MemoryAddress g_app_info_get_description ( Addressable appinfo) {
        var mh$ = g_app_info_get_description$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_executable$MH() {
        return RuntimeHelper.requireNonNull(constants$526.g_app_info_get_executable$MH,"g_app_info_get_executable");
    }
    public static MemoryAddress g_app_info_get_executable ( Addressable appinfo) {
        var mh$ = g_app_info_get_executable$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_commandline$MH() {
        return RuntimeHelper.requireNonNull(constants$526.g_app_info_get_commandline$MH,"g_app_info_get_commandline");
    }
    public static MemoryAddress g_app_info_get_commandline ( Addressable appinfo) {
        var mh$ = g_app_info_get_commandline$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$526.g_app_info_get_icon$MH,"g_app_info_get_icon");
    }
    public static MemoryAddress g_app_info_get_icon ( Addressable appinfo) {
        var mh$ = g_app_info_get_icon$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_launch$MH() {
        return RuntimeHelper.requireNonNull(constants$526.g_app_info_launch$MH,"g_app_info_launch");
    }
    public static int g_app_info_launch ( Addressable appinfo,  Addressable files,  Addressable context,  Addressable error) {
        var mh$ = g_app_info_launch$MH();
        try {
            return (int)mh$.invokeExact(appinfo, files, context, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_supports_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$527.g_app_info_supports_uris$MH,"g_app_info_supports_uris");
    }
    public static int g_app_info_supports_uris ( Addressable appinfo) {
        var mh$ = g_app_info_supports_uris$MH();
        try {
            return (int)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_supports_files$MH() {
        return RuntimeHelper.requireNonNull(constants$527.g_app_info_supports_files$MH,"g_app_info_supports_files");
    }
    public static int g_app_info_supports_files ( Addressable appinfo) {
        var mh$ = g_app_info_supports_files$MH();
        try {
            return (int)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_launch_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$527.g_app_info_launch_uris$MH,"g_app_info_launch_uris");
    }
    public static int g_app_info_launch_uris ( Addressable appinfo,  Addressable uris,  Addressable context,  Addressable error) {
        var mh$ = g_app_info_launch_uris$MH();
        try {
            return (int)mh$.invokeExact(appinfo, uris, context, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_launch_uris_async$MH() {
        return RuntimeHelper.requireNonNull(constants$527.g_app_info_launch_uris_async$MH,"g_app_info_launch_uris_async");
    }
    public static void g_app_info_launch_uris_async ( Addressable appinfo,  Addressable uris,  Addressable context,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_app_info_launch_uris_async$MH();
        try {
            mh$.invokeExact(appinfo, uris, context, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_launch_uris_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$527.g_app_info_launch_uris_finish$MH,"g_app_info_launch_uris_finish");
    }
    public static int g_app_info_launch_uris_finish ( Addressable appinfo,  Addressable result,  Addressable error) {
        var mh$ = g_app_info_launch_uris_finish$MH();
        try {
            return (int)mh$.invokeExact(appinfo, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_should_show$MH() {
        return RuntimeHelper.requireNonNull(constants$527.g_app_info_should_show$MH,"g_app_info_should_show");
    }
    public static int g_app_info_should_show ( Addressable appinfo) {
        var mh$ = g_app_info_should_show$MH();
        try {
            return (int)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_set_as_default_for_type$MH() {
        return RuntimeHelper.requireNonNull(constants$528.g_app_info_set_as_default_for_type$MH,"g_app_info_set_as_default_for_type");
    }
    public static int g_app_info_set_as_default_for_type ( Addressable appinfo,  Addressable content_type,  Addressable error) {
        var mh$ = g_app_info_set_as_default_for_type$MH();
        try {
            return (int)mh$.invokeExact(appinfo, content_type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_set_as_default_for_extension$MH() {
        return RuntimeHelper.requireNonNull(constants$528.g_app_info_set_as_default_for_extension$MH,"g_app_info_set_as_default_for_extension");
    }
    public static int g_app_info_set_as_default_for_extension ( Addressable appinfo,  Addressable extension,  Addressable error) {
        var mh$ = g_app_info_set_as_default_for_extension$MH();
        try {
            return (int)mh$.invokeExact(appinfo, extension, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_add_supports_type$MH() {
        return RuntimeHelper.requireNonNull(constants$528.g_app_info_add_supports_type$MH,"g_app_info_add_supports_type");
    }
    public static int g_app_info_add_supports_type ( Addressable appinfo,  Addressable content_type,  Addressable error) {
        var mh$ = g_app_info_add_supports_type$MH();
        try {
            return (int)mh$.invokeExact(appinfo, content_type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_can_remove_supports_type$MH() {
        return RuntimeHelper.requireNonNull(constants$528.g_app_info_can_remove_supports_type$MH,"g_app_info_can_remove_supports_type");
    }
    public static int g_app_info_can_remove_supports_type ( Addressable appinfo) {
        var mh$ = g_app_info_can_remove_supports_type$MH();
        try {
            return (int)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_remove_supports_type$MH() {
        return RuntimeHelper.requireNonNull(constants$528.g_app_info_remove_supports_type$MH,"g_app_info_remove_supports_type");
    }
    public static int g_app_info_remove_supports_type ( Addressable appinfo,  Addressable content_type,  Addressable error) {
        var mh$ = g_app_info_remove_supports_type$MH();
        try {
            return (int)mh$.invokeExact(appinfo, content_type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_supported_types$MH() {
        return RuntimeHelper.requireNonNull(constants$528.g_app_info_get_supported_types$MH,"g_app_info_get_supported_types");
    }
    public static MemoryAddress g_app_info_get_supported_types ( Addressable appinfo) {
        var mh$ = g_app_info_get_supported_types$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_can_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$529.g_app_info_can_delete$MH,"g_app_info_can_delete");
    }
    public static int g_app_info_can_delete ( Addressable appinfo) {
        var mh$ = g_app_info_can_delete$MH();
        try {
            return (int)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$529.g_app_info_delete$MH,"g_app_info_delete");
    }
    public static int g_app_info_delete ( Addressable appinfo) {
        var mh$ = g_app_info_delete$MH();
        try {
            return (int)mh$.invokeExact(appinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_set_as_last_used_for_type$MH() {
        return RuntimeHelper.requireNonNull(constants$529.g_app_info_set_as_last_used_for_type$MH,"g_app_info_set_as_last_used_for_type");
    }
    public static int g_app_info_set_as_last_used_for_type ( Addressable appinfo,  Addressable content_type,  Addressable error) {
        var mh$ = g_app_info_set_as_last_used_for_type$MH();
        try {
            return (int)mh$.invokeExact(appinfo, content_type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_all$MH() {
        return RuntimeHelper.requireNonNull(constants$529.g_app_info_get_all$MH,"g_app_info_get_all");
    }
    public static MemoryAddress g_app_info_get_all () {
        var mh$ = g_app_info_get_all$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_all_for_type$MH() {
        return RuntimeHelper.requireNonNull(constants$529.g_app_info_get_all_for_type$MH,"g_app_info_get_all_for_type");
    }
    public static MemoryAddress g_app_info_get_all_for_type ( Addressable content_type) {
        var mh$ = g_app_info_get_all_for_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(content_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_recommended_for_type$MH() {
        return RuntimeHelper.requireNonNull(constants$529.g_app_info_get_recommended_for_type$MH,"g_app_info_get_recommended_for_type");
    }
    public static MemoryAddress g_app_info_get_recommended_for_type ( Addressable content_type) {
        var mh$ = g_app_info_get_recommended_for_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(content_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_fallback_for_type$MH() {
        return RuntimeHelper.requireNonNull(constants$530.g_app_info_get_fallback_for_type$MH,"g_app_info_get_fallback_for_type");
    }
    public static MemoryAddress g_app_info_get_fallback_for_type ( Addressable content_type) {
        var mh$ = g_app_info_get_fallback_for_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(content_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_reset_type_associations$MH() {
        return RuntimeHelper.requireNonNull(constants$530.g_app_info_reset_type_associations$MH,"g_app_info_reset_type_associations");
    }
    public static void g_app_info_reset_type_associations ( Addressable content_type) {
        var mh$ = g_app_info_reset_type_associations$MH();
        try {
            mh$.invokeExact(content_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_default_for_type$MH() {
        return RuntimeHelper.requireNonNull(constants$530.g_app_info_get_default_for_type$MH,"g_app_info_get_default_for_type");
    }
    public static MemoryAddress g_app_info_get_default_for_type ( Addressable content_type,  int must_support_uris) {
        var mh$ = g_app_info_get_default_for_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(content_type, must_support_uris);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_get_default_for_uri_scheme$MH() {
        return RuntimeHelper.requireNonNull(constants$530.g_app_info_get_default_for_uri_scheme$MH,"g_app_info_get_default_for_uri_scheme");
    }
    public static MemoryAddress g_app_info_get_default_for_uri_scheme ( Addressable uri_scheme) {
        var mh$ = g_app_info_get_default_for_uri_scheme$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(uri_scheme);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_launch_default_for_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$530.g_app_info_launch_default_for_uri$MH,"g_app_info_launch_default_for_uri");
    }
    public static int g_app_info_launch_default_for_uri ( Addressable uri,  Addressable context,  Addressable error) {
        var mh$ = g_app_info_launch_default_for_uri$MH();
        try {
            return (int)mh$.invokeExact(uri, context, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_launch_default_for_uri_async$MH() {
        return RuntimeHelper.requireNonNull(constants$530.g_app_info_launch_default_for_uri_async$MH,"g_app_info_launch_default_for_uri_async");
    }
    public static void g_app_info_launch_default_for_uri_async ( Addressable uri,  Addressable context,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_app_info_launch_default_for_uri_async$MH();
        try {
            mh$.invokeExact(uri, context, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_launch_default_for_uri_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$531.g_app_info_launch_default_for_uri_finish$MH,"g_app_info_launch_default_for_uri_finish");
    }
    public static int g_app_info_launch_default_for_uri_finish ( Addressable result,  Addressable error) {
        var mh$ = g_app_info_launch_default_for_uri_finish$MH();
        try {
            return (int)mh$.invokeExact(result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_launch_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$531.g_app_launch_context_get_type$MH,"g_app_launch_context_get_type");
    }
    public static long g_app_launch_context_get_type () {
        var mh$ = g_app_launch_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_launch_context_new$MH() {
        return RuntimeHelper.requireNonNull(constants$531.g_app_launch_context_new$MH,"g_app_launch_context_new");
    }
    public static MemoryAddress g_app_launch_context_new () {
        var mh$ = g_app_launch_context_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_launch_context_setenv$MH() {
        return RuntimeHelper.requireNonNull(constants$531.g_app_launch_context_setenv$MH,"g_app_launch_context_setenv");
    }
    public static void g_app_launch_context_setenv ( Addressable context,  Addressable variable,  Addressable value) {
        var mh$ = g_app_launch_context_setenv$MH();
        try {
            mh$.invokeExact(context, variable, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_launch_context_unsetenv$MH() {
        return RuntimeHelper.requireNonNull(constants$531.g_app_launch_context_unsetenv$MH,"g_app_launch_context_unsetenv");
    }
    public static void g_app_launch_context_unsetenv ( Addressable context,  Addressable variable) {
        var mh$ = g_app_launch_context_unsetenv$MH();
        try {
            mh$.invokeExact(context, variable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_launch_context_get_environment$MH() {
        return RuntimeHelper.requireNonNull(constants$531.g_app_launch_context_get_environment$MH,"g_app_launch_context_get_environment");
    }
    public static MemoryAddress g_app_launch_context_get_environment ( Addressable context) {
        var mh$ = g_app_launch_context_get_environment$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_launch_context_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$532.g_app_launch_context_get_display$MH,"g_app_launch_context_get_display");
    }
    public static MemoryAddress g_app_launch_context_get_display ( Addressable context,  Addressable info,  Addressable files) {
        var mh$ = g_app_launch_context_get_display$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context, info, files);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_launch_context_get_startup_notify_id$MH() {
        return RuntimeHelper.requireNonNull(constants$532.g_app_launch_context_get_startup_notify_id$MH,"g_app_launch_context_get_startup_notify_id");
    }
    public static MemoryAddress g_app_launch_context_get_startup_notify_id ( Addressable context,  Addressable info,  Addressable files) {
        var mh$ = g_app_launch_context_get_startup_notify_id$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context, info, files);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_launch_context_launch_failed$MH() {
        return RuntimeHelper.requireNonNull(constants$532.g_app_launch_context_launch_failed$MH,"g_app_launch_context_launch_failed");
    }
    public static void g_app_launch_context_launch_failed ( Addressable context,  Addressable startup_notify_id) {
        var mh$ = g_app_launch_context_launch_failed$MH();
        try {
            mh$.invokeExact(context, startup_notify_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_monitor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$532.g_app_info_monitor_get_type$MH,"g_app_info_monitor_get_type");
    }
    public static long g_app_info_monitor_get_type () {
        var mh$ = g_app_info_monitor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_monitor_get$MH() {
        return RuntimeHelper.requireNonNull(constants$532.g_app_info_monitor_get$MH,"g_app_info_monitor_get");
    }
    public static MemoryAddress g_app_info_monitor_get () {
        var mh$ = g_app_info_monitor_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$532.g_application_get_type$MH,"g_application_get_type");
    }
    public static long g_application_get_type () {
        var mh$ = g_application_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_id_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$533.g_application_id_is_valid$MH,"g_application_id_is_valid");
    }
    public static int g_application_id_is_valid ( Addressable application_id) {
        var mh$ = g_application_id_is_valid$MH();
        try {
            return (int)mh$.invokeExact(application_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_new$MH() {
        return RuntimeHelper.requireNonNull(constants$533.g_application_new$MH,"g_application_new");
    }
    public static MemoryAddress g_application_new ( Addressable application_id,  int flags) {
        var mh$ = g_application_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(application_id, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_application_id$MH() {
        return RuntimeHelper.requireNonNull(constants$533.g_application_get_application_id$MH,"g_application_get_application_id");
    }
    public static MemoryAddress g_application_get_application_id ( Addressable application) {
        var mh$ = g_application_get_application_id$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_set_application_id$MH() {
        return RuntimeHelper.requireNonNull(constants$533.g_application_set_application_id$MH,"g_application_set_application_id");
    }
    public static void g_application_set_application_id ( Addressable application,  Addressable application_id) {
        var mh$ = g_application_set_application_id$MH();
        try {
            mh$.invokeExact(application, application_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_dbus_connection$MH() {
        return RuntimeHelper.requireNonNull(constants$533.g_application_get_dbus_connection$MH,"g_application_get_dbus_connection");
    }
    public static MemoryAddress g_application_get_dbus_connection ( Addressable application) {
        var mh$ = g_application_get_dbus_connection$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_dbus_object_path$MH() {
        return RuntimeHelper.requireNonNull(constants$533.g_application_get_dbus_object_path$MH,"g_application_get_dbus_object_path");
    }
    public static MemoryAddress g_application_get_dbus_object_path ( Addressable application) {
        var mh$ = g_application_get_dbus_object_path$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_inactivity_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$534.g_application_get_inactivity_timeout$MH,"g_application_get_inactivity_timeout");
    }
    public static int g_application_get_inactivity_timeout ( Addressable application) {
        var mh$ = g_application_get_inactivity_timeout$MH();
        try {
            return (int)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_set_inactivity_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$534.g_application_set_inactivity_timeout$MH,"g_application_set_inactivity_timeout");
    }
    public static void g_application_set_inactivity_timeout ( Addressable application,  int inactivity_timeout) {
        var mh$ = g_application_set_inactivity_timeout$MH();
        try {
            mh$.invokeExact(application, inactivity_timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$534.g_application_get_flags$MH,"g_application_get_flags");
    }
    public static int g_application_get_flags ( Addressable application) {
        var mh$ = g_application_get_flags$MH();
        try {
            return (int)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$534.g_application_set_flags$MH,"g_application_set_flags");
    }
    public static void g_application_set_flags ( Addressable application,  int flags) {
        var mh$ = g_application_set_flags$MH();
        try {
            mh$.invokeExact(application, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_resource_base_path$MH() {
        return RuntimeHelper.requireNonNull(constants$534.g_application_get_resource_base_path$MH,"g_application_get_resource_base_path");
    }
    public static MemoryAddress g_application_get_resource_base_path ( Addressable application) {
        var mh$ = g_application_get_resource_base_path$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_set_resource_base_path$MH() {
        return RuntimeHelper.requireNonNull(constants$534.g_application_set_resource_base_path$MH,"g_application_set_resource_base_path");
    }
    public static void g_application_set_resource_base_path ( Addressable application,  Addressable resource_path) {
        var mh$ = g_application_set_resource_base_path$MH();
        try {
            mh$.invokeExact(application, resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_set_action_group$MH() {
        return RuntimeHelper.requireNonNull(constants$535.g_application_set_action_group$MH,"g_application_set_action_group");
    }
    public static void g_application_set_action_group ( Addressable application,  Addressable action_group) {
        var mh$ = g_application_set_action_group$MH();
        try {
            mh$.invokeExact(application, action_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_add_main_option_entries$MH() {
        return RuntimeHelper.requireNonNull(constants$535.g_application_add_main_option_entries$MH,"g_application_add_main_option_entries");
    }
    public static void g_application_add_main_option_entries ( Addressable application,  Addressable entries) {
        var mh$ = g_application_add_main_option_entries$MH();
        try {
            mh$.invokeExact(application, entries);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_add_main_option$MH() {
        return RuntimeHelper.requireNonNull(constants$535.g_application_add_main_option$MH,"g_application_add_main_option");
    }
    public static void g_application_add_main_option ( Addressable application,  Addressable long_name,  byte short_name,  int flags,  int arg,  Addressable description,  Addressable arg_description) {
        var mh$ = g_application_add_main_option$MH();
        try {
            mh$.invokeExact(application, long_name, short_name, flags, arg, description, arg_description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_add_option_group$MH() {
        return RuntimeHelper.requireNonNull(constants$535.g_application_add_option_group$MH,"g_application_add_option_group");
    }
    public static void g_application_add_option_group ( Addressable application,  Addressable group) {
        var mh$ = g_application_add_option_group$MH();
        try {
            mh$.invokeExact(application, group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_set_option_context_parameter_string$MH() {
        return RuntimeHelper.requireNonNull(constants$535.g_application_set_option_context_parameter_string$MH,"g_application_set_option_context_parameter_string");
    }
    public static void g_application_set_option_context_parameter_string ( Addressable application,  Addressable parameter_string) {
        var mh$ = g_application_set_option_context_parameter_string$MH();
        try {
            mh$.invokeExact(application, parameter_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_set_option_context_summary$MH() {
        return RuntimeHelper.requireNonNull(constants$535.g_application_set_option_context_summary$MH,"g_application_set_option_context_summary");
    }
    public static void g_application_set_option_context_summary ( Addressable application,  Addressable summary) {
        var mh$ = g_application_set_option_context_summary$MH();
        try {
            mh$.invokeExact(application, summary);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_set_option_context_description$MH() {
        return RuntimeHelper.requireNonNull(constants$536.g_application_set_option_context_description$MH,"g_application_set_option_context_description");
    }
    public static void g_application_set_option_context_description ( Addressable application,  Addressable description) {
        var mh$ = g_application_set_option_context_description$MH();
        try {
            mh$.invokeExact(application, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_is_registered$MH() {
        return RuntimeHelper.requireNonNull(constants$536.g_application_get_is_registered$MH,"g_application_get_is_registered");
    }
    public static int g_application_get_is_registered ( Addressable application) {
        var mh$ = g_application_get_is_registered$MH();
        try {
            return (int)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_is_remote$MH() {
        return RuntimeHelper.requireNonNull(constants$536.g_application_get_is_remote$MH,"g_application_get_is_remote");
    }
    public static int g_application_get_is_remote ( Addressable application) {
        var mh$ = g_application_get_is_remote$MH();
        try {
            return (int)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_register$MH() {
        return RuntimeHelper.requireNonNull(constants$536.g_application_register$MH,"g_application_register");
    }
    public static int g_application_register ( Addressable application,  Addressable cancellable,  Addressable error) {
        var mh$ = g_application_register$MH();
        try {
            return (int)mh$.invokeExact(application, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_hold$MH() {
        return RuntimeHelper.requireNonNull(constants$536.g_application_hold$MH,"g_application_hold");
    }
    public static void g_application_hold ( Addressable application) {
        var mh$ = g_application_hold$MH();
        try {
            mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_release$MH() {
        return RuntimeHelper.requireNonNull(constants$536.g_application_release$MH,"g_application_release");
    }
    public static void g_application_release ( Addressable application) {
        var mh$ = g_application_release$MH();
        try {
            mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$537.g_application_activate$MH,"g_application_activate");
    }
    public static void g_application_activate ( Addressable application) {
        var mh$ = g_application_activate$MH();
        try {
            mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_open$MH() {
        return RuntimeHelper.requireNonNull(constants$537.g_application_open$MH,"g_application_open");
    }
    public static void g_application_open ( Addressable application,  Addressable files,  int n_files,  Addressable hint) {
        var mh$ = g_application_open$MH();
        try {
            mh$.invokeExact(application, files, n_files, hint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_run$MH() {
        return RuntimeHelper.requireNonNull(constants$537.g_application_run$MH,"g_application_run");
    }
    public static int g_application_run ( Addressable application,  int argc,  Addressable argv) {
        var mh$ = g_application_run$MH();
        try {
            return (int)mh$.invokeExact(application, argc, argv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_quit$MH() {
        return RuntimeHelper.requireNonNull(constants$537.g_application_quit$MH,"g_application_quit");
    }
    public static void g_application_quit ( Addressable application) {
        var mh$ = g_application_quit$MH();
        try {
            mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$537.g_application_get_default$MH,"g_application_get_default");
    }
    public static MemoryAddress g_application_get_default () {
        var mh$ = g_application_get_default$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_set_default$MH() {
        return RuntimeHelper.requireNonNull(constants$537.g_application_set_default$MH,"g_application_set_default");
    }
    public static void g_application_set_default ( Addressable application) {
        var mh$ = g_application_set_default$MH();
        try {
            mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_mark_busy$MH() {
        return RuntimeHelper.requireNonNull(constants$538.g_application_mark_busy$MH,"g_application_mark_busy");
    }
    public static void g_application_mark_busy ( Addressable application) {
        var mh$ = g_application_mark_busy$MH();
        try {
            mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_unmark_busy$MH() {
        return RuntimeHelper.requireNonNull(constants$538.g_application_unmark_busy$MH,"g_application_unmark_busy");
    }
    public static void g_application_unmark_busy ( Addressable application) {
        var mh$ = g_application_unmark_busy$MH();
        try {
            mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_get_is_busy$MH() {
        return RuntimeHelper.requireNonNull(constants$538.g_application_get_is_busy$MH,"g_application_get_is_busy");
    }
    public static int g_application_get_is_busy ( Addressable application) {
        var mh$ = g_application_get_is_busy$MH();
        try {
            return (int)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_send_notification$MH() {
        return RuntimeHelper.requireNonNull(constants$538.g_application_send_notification$MH,"g_application_send_notification");
    }
    public static void g_application_send_notification ( Addressable application,  Addressable id,  Addressable notification) {
        var mh$ = g_application_send_notification$MH();
        try {
            mh$.invokeExact(application, id, notification);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_withdraw_notification$MH() {
        return RuntimeHelper.requireNonNull(constants$538.g_application_withdraw_notification$MH,"g_application_withdraw_notification");
    }
    public static void g_application_withdraw_notification ( Addressable application,  Addressable id) {
        var mh$ = g_application_withdraw_notification$MH();
        try {
            mh$.invokeExact(application, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_bind_busy_property$MH() {
        return RuntimeHelper.requireNonNull(constants$538.g_application_bind_busy_property$MH,"g_application_bind_busy_property");
    }
    public static void g_application_bind_busy_property ( Addressable application,  Addressable object,  Addressable property) {
        var mh$ = g_application_bind_busy_property$MH();
        try {
            mh$.invokeExact(application, object, property);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_unbind_busy_property$MH() {
        return RuntimeHelper.requireNonNull(constants$539.g_application_unbind_busy_property$MH,"g_application_unbind_busy_property");
    }
    public static void g_application_unbind_busy_property ( Addressable application,  Addressable object,  Addressable property) {
        var mh$ = g_application_unbind_busy_property$MH();
        try {
            mh$.invokeExact(application, object, property);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$539.g_application_command_line_get_type$MH,"g_application_command_line_get_type");
    }
    public static long g_application_command_line_get_type () {
        var mh$ = g_application_command_line_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_get_arguments$MH() {
        return RuntimeHelper.requireNonNull(constants$539.g_application_command_line_get_arguments$MH,"g_application_command_line_get_arguments");
    }
    public static MemoryAddress g_application_command_line_get_arguments ( Addressable cmdline,  Addressable argc) {
        var mh$ = g_application_command_line_get_arguments$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cmdline, argc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_get_options_dict$MH() {
        return RuntimeHelper.requireNonNull(constants$539.g_application_command_line_get_options_dict$MH,"g_application_command_line_get_options_dict");
    }
    public static MemoryAddress g_application_command_line_get_options_dict ( Addressable cmdline) {
        var mh$ = g_application_command_line_get_options_dict$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cmdline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_get_stdin$MH() {
        return RuntimeHelper.requireNonNull(constants$539.g_application_command_line_get_stdin$MH,"g_application_command_line_get_stdin");
    }
    public static MemoryAddress g_application_command_line_get_stdin ( Addressable cmdline) {
        var mh$ = g_application_command_line_get_stdin$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cmdline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_get_environ$MH() {
        return RuntimeHelper.requireNonNull(constants$539.g_application_command_line_get_environ$MH,"g_application_command_line_get_environ");
    }
    public static MemoryAddress g_application_command_line_get_environ ( Addressable cmdline) {
        var mh$ = g_application_command_line_get_environ$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cmdline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_getenv$MH() {
        return RuntimeHelper.requireNonNull(constants$540.g_application_command_line_getenv$MH,"g_application_command_line_getenv");
    }
    public static MemoryAddress g_application_command_line_getenv ( Addressable cmdline,  Addressable name) {
        var mh$ = g_application_command_line_getenv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cmdline, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_get_cwd$MH() {
        return RuntimeHelper.requireNonNull(constants$540.g_application_command_line_get_cwd$MH,"g_application_command_line_get_cwd");
    }
    public static MemoryAddress g_application_command_line_get_cwd ( Addressable cmdline) {
        var mh$ = g_application_command_line_get_cwd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cmdline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_get_is_remote$MH() {
        return RuntimeHelper.requireNonNull(constants$540.g_application_command_line_get_is_remote$MH,"g_application_command_line_get_is_remote");
    }
    public static int g_application_command_line_get_is_remote ( Addressable cmdline) {
        var mh$ = g_application_command_line_get_is_remote$MH();
        try {
            return (int)mh$.invokeExact(cmdline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_print$MH() {
        return RuntimeHelper.requireNonNull(constants$540.g_application_command_line_print$MH,"g_application_command_line_print");
    }
    public static void g_application_command_line_print ( Addressable cmdline,  Addressable format, Object... x2) {
        var mh$ = g_application_command_line_print$MH();
        try {
            mh$.invokeExact(cmdline, format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_printerr$MH() {
        return RuntimeHelper.requireNonNull(constants$540.g_application_command_line_printerr$MH,"g_application_command_line_printerr");
    }
    public static void g_application_command_line_printerr ( Addressable cmdline,  Addressable format, Object... x2) {
        var mh$ = g_application_command_line_printerr$MH();
        try {
            mh$.invokeExact(cmdline, format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_get_exit_status$MH() {
        return RuntimeHelper.requireNonNull(constants$540.g_application_command_line_get_exit_status$MH,"g_application_command_line_get_exit_status");
    }
    public static int g_application_command_line_get_exit_status ( Addressable cmdline) {
        var mh$ = g_application_command_line_get_exit_status$MH();
        try {
            return (int)mh$.invokeExact(cmdline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_set_exit_status$MH() {
        return RuntimeHelper.requireNonNull(constants$541.g_application_command_line_set_exit_status$MH,"g_application_command_line_set_exit_status");
    }
    public static void g_application_command_line_set_exit_status ( Addressable cmdline,  int exit_status) {
        var mh$ = g_application_command_line_set_exit_status$MH();
        try {
            mh$.invokeExact(cmdline, exit_status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_get_platform_data$MH() {
        return RuntimeHelper.requireNonNull(constants$541.g_application_command_line_get_platform_data$MH,"g_application_command_line_get_platform_data");
    }
    public static MemoryAddress g_application_command_line_get_platform_data ( Addressable cmdline) {
        var mh$ = g_application_command_line_get_platform_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cmdline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_command_line_create_file_for_arg$MH() {
        return RuntimeHelper.requireNonNull(constants$541.g_application_command_line_create_file_for_arg$MH,"g_application_command_line_create_file_for_arg");
    }
    public static MemoryAddress g_application_command_line_create_file_for_arg ( Addressable cmdline,  Addressable arg) {
        var mh$ = g_application_command_line_create_file_for_arg$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cmdline, arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_initable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$541.g_initable_get_type$MH,"g_initable_get_type");
    }
    public static long g_initable_get_type () {
        var mh$ = g_initable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_initable_init$MH() {
        return RuntimeHelper.requireNonNull(constants$541.g_initable_init$MH,"g_initable_init");
    }
    public static int g_initable_init ( Addressable initable,  Addressable cancellable,  Addressable error) {
        var mh$ = g_initable_init$MH();
        try {
            return (int)mh$.invokeExact(initable, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_initable_new$MH() {
        return RuntimeHelper.requireNonNull(constants$541.g_initable_new$MH,"g_initable_new");
    }
    public static MemoryAddress g_initable_new ( long object_type,  Addressable cancellable,  Addressable error,  Addressable first_property_name, Object... x4) {
        var mh$ = g_initable_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object_type, cancellable, error, first_property_name, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_initable_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$542.g_initable_newv$MH,"g_initable_newv");
    }
    public static MemoryAddress g_initable_newv ( long object_type,  int n_parameters,  Addressable parameters,  Addressable cancellable,  Addressable error) {
        var mh$ = g_initable_newv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object_type, n_parameters, parameters, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_initable_new_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$542.g_initable_new_valist$MH,"g_initable_new_valist");
    }
    public static MemoryAddress g_initable_new_valist ( long object_type,  Addressable first_property_name,  Addressable var_args,  Addressable cancellable,  Addressable error) {
        var mh$ = g_initable_new_valist$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object_type, first_property_name, var_args, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_initable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$542.g_async_initable_get_type$MH,"g_async_initable_get_type");
    }
    public static long g_async_initable_get_type () {
        var mh$ = g_async_initable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_initable_init_async$MH() {
        return RuntimeHelper.requireNonNull(constants$542.g_async_initable_init_async$MH,"g_async_initable_init_async");
    }
    public static void g_async_initable_init_async ( Addressable initable,  int io_priority,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_async_initable_init_async$MH();
        try {
            mh$.invokeExact(initable, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_initable_init_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$542.g_async_initable_init_finish$MH,"g_async_initable_init_finish");
    }
    public static int g_async_initable_init_finish ( Addressable initable,  Addressable res,  Addressable error) {
        var mh$ = g_async_initable_init_finish$MH();
        try {
            return (int)mh$.invokeExact(initable, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_initable_new_async$MH() {
        return RuntimeHelper.requireNonNull(constants$542.g_async_initable_new_async$MH,"g_async_initable_new_async");
    }
    public static void g_async_initable_new_async ( long object_type,  int io_priority,  Addressable cancellable,  Addressable callback,  Addressable user_data,  Addressable first_property_name, Object... x6) {
        var mh$ = g_async_initable_new_async$MH();
        try {
            mh$.invokeExact(object_type, io_priority, cancellable, callback, user_data, first_property_name, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_initable_newv_async$MH() {
        return RuntimeHelper.requireNonNull(constants$543.g_async_initable_newv_async$MH,"g_async_initable_newv_async");
    }
    public static void g_async_initable_newv_async ( long object_type,  int n_parameters,  Addressable parameters,  int io_priority,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_async_initable_newv_async$MH();
        try {
            mh$.invokeExact(object_type, n_parameters, parameters, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_initable_new_valist_async$MH() {
        return RuntimeHelper.requireNonNull(constants$543.g_async_initable_new_valist_async$MH,"g_async_initable_new_valist_async");
    }
    public static void g_async_initable_new_valist_async ( long object_type,  Addressable first_property_name,  Addressable var_args,  int io_priority,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_async_initable_new_valist_async$MH();
        try {
            mh$.invokeExact(object_type, first_property_name, var_args, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_initable_new_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$543.g_async_initable_new_finish$MH,"g_async_initable_new_finish");
    }
    public static MemoryAddress g_async_initable_new_finish ( Addressable initable,  Addressable res,  Addressable error) {
        var mh$ = g_async_initable_new_finish$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(initable, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_result_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$543.g_async_result_get_type$MH,"g_async_result_get_type");
    }
    public static long g_async_result_get_type () {
        var mh$ = g_async_result_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_result_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$543.g_async_result_get_user_data$MH,"g_async_result_get_user_data");
    }
    public static MemoryAddress g_async_result_get_user_data ( Addressable res) {
        var mh$ = g_async_result_get_user_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_result_get_source_object$MH() {
        return RuntimeHelper.requireNonNull(constants$543.g_async_result_get_source_object$MH,"g_async_result_get_source_object");
    }
    public static MemoryAddress g_async_result_get_source_object ( Addressable res) {
        var mh$ = g_async_result_get_source_object$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_result_legacy_propagate_error$MH() {
        return RuntimeHelper.requireNonNull(constants$544.g_async_result_legacy_propagate_error$MH,"g_async_result_legacy_propagate_error");
    }
    public static int g_async_result_legacy_propagate_error ( Addressable res,  Addressable error) {
        var mh$ = g_async_result_legacy_propagate_error$MH();
        try {
            return (int)mh$.invokeExact(res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_async_result_is_tagged$MH() {
        return RuntimeHelper.requireNonNull(constants$544.g_async_result_is_tagged$MH,"g_async_result_is_tagged");
    }
    public static int g_async_result_is_tagged ( Addressable res,  Addressable source_tag) {
        var mh$ = g_async_result_is_tagged$MH();
        try {
            return (int)mh$.invokeExact(res, source_tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$544.g_input_stream_get_type$MH,"g_input_stream_get_type");
    }
    public static long g_input_stream_get_type () {
        var mh$ = g_input_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_read$MH() {
        return RuntimeHelper.requireNonNull(constants$544.g_input_stream_read$MH,"g_input_stream_read");
    }
    public static long g_input_stream_read ( Addressable stream,  Addressable buffer,  long count,  Addressable cancellable,  Addressable error) {
        var mh$ = g_input_stream_read$MH();
        try {
            return (long)mh$.invokeExact(stream, buffer, count, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_read_all$MH() {
        return RuntimeHelper.requireNonNull(constants$544.g_input_stream_read_all$MH,"g_input_stream_read_all");
    }
    public static int g_input_stream_read_all ( Addressable stream,  Addressable buffer,  long count,  Addressable bytes_read,  Addressable cancellable,  Addressable error) {
        var mh$ = g_input_stream_read_all$MH();
        try {
            return (int)mh$.invokeExact(stream, buffer, count, bytes_read, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_read_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$544.g_input_stream_read_bytes$MH,"g_input_stream_read_bytes");
    }
    public static MemoryAddress g_input_stream_read_bytes ( Addressable stream,  long count,  Addressable cancellable,  Addressable error) {
        var mh$ = g_input_stream_read_bytes$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stream, count, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_skip$MH() {
        return RuntimeHelper.requireNonNull(constants$545.g_input_stream_skip$MH,"g_input_stream_skip");
    }
    public static long g_input_stream_skip ( Addressable stream,  long count,  Addressable cancellable,  Addressable error) {
        var mh$ = g_input_stream_skip$MH();
        try {
            return (long)mh$.invokeExact(stream, count, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_close$MH() {
        return RuntimeHelper.requireNonNull(constants$545.g_input_stream_close$MH,"g_input_stream_close");
    }
    public static int g_input_stream_close ( Addressable stream,  Addressable cancellable,  Addressable error) {
        var mh$ = g_input_stream_close$MH();
        try {
            return (int)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_read_async$MH() {
        return RuntimeHelper.requireNonNull(constants$545.g_input_stream_read_async$MH,"g_input_stream_read_async");
    }
    public static void g_input_stream_read_async ( Addressable stream,  Addressable buffer,  long count,  int io_priority,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_input_stream_read_async$MH();
        try {
            mh$.invokeExact(stream, buffer, count, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_read_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$545.g_input_stream_read_finish$MH,"g_input_stream_read_finish");
    }
    public static long g_input_stream_read_finish ( Addressable stream,  Addressable result,  Addressable error) {
        var mh$ = g_input_stream_read_finish$MH();
        try {
            return (long)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_read_all_async$MH() {
        return RuntimeHelper.requireNonNull(constants$545.g_input_stream_read_all_async$MH,"g_input_stream_read_all_async");
    }
    public static void g_input_stream_read_all_async ( Addressable stream,  Addressable buffer,  long count,  int io_priority,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_input_stream_read_all_async$MH();
        try {
            mh$.invokeExact(stream, buffer, count, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_read_all_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$545.g_input_stream_read_all_finish$MH,"g_input_stream_read_all_finish");
    }
    public static int g_input_stream_read_all_finish ( Addressable stream,  Addressable result,  Addressable bytes_read,  Addressable error) {
        var mh$ = g_input_stream_read_all_finish$MH();
        try {
            return (int)mh$.invokeExact(stream, result, bytes_read, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_read_bytes_async$MH() {
        return RuntimeHelper.requireNonNull(constants$546.g_input_stream_read_bytes_async$MH,"g_input_stream_read_bytes_async");
    }
    public static void g_input_stream_read_bytes_async ( Addressable stream,  long count,  int io_priority,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_input_stream_read_bytes_async$MH();
        try {
            mh$.invokeExact(stream, count, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_read_bytes_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$546.g_input_stream_read_bytes_finish$MH,"g_input_stream_read_bytes_finish");
    }
    public static MemoryAddress g_input_stream_read_bytes_finish ( Addressable stream,  Addressable result,  Addressable error) {
        var mh$ = g_input_stream_read_bytes_finish$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_skip_async$MH() {
        return RuntimeHelper.requireNonNull(constants$546.g_input_stream_skip_async$MH,"g_input_stream_skip_async");
    }
    public static void g_input_stream_skip_async ( Addressable stream,  long count,  int io_priority,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_input_stream_skip_async$MH();
        try {
            mh$.invokeExact(stream, count, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_skip_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$546.g_input_stream_skip_finish$MH,"g_input_stream_skip_finish");
    }
    public static long g_input_stream_skip_finish ( Addressable stream,  Addressable result,  Addressable error) {
        var mh$ = g_input_stream_skip_finish$MH();
        try {
            return (long)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_close_async$MH() {
        return RuntimeHelper.requireNonNull(constants$546.g_input_stream_close_async$MH,"g_input_stream_close_async");
    }
    public static void g_input_stream_close_async ( Addressable stream,  int io_priority,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_input_stream_close_async$MH();
        try {
            mh$.invokeExact(stream, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_close_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$546.g_input_stream_close_finish$MH,"g_input_stream_close_finish");
    }
    public static int g_input_stream_close_finish ( Addressable stream,  Addressable result,  Addressable error) {
        var mh$ = g_input_stream_close_finish$MH();
        try {
            return (int)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_is_closed$MH() {
        return RuntimeHelper.requireNonNull(constants$547.g_input_stream_is_closed$MH,"g_input_stream_is_closed");
    }
    public static int g_input_stream_is_closed ( Addressable stream) {
        var mh$ = g_input_stream_is_closed$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_has_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$547.g_input_stream_has_pending$MH,"g_input_stream_has_pending");
    }
    public static int g_input_stream_has_pending ( Addressable stream) {
        var mh$ = g_input_stream_has_pending$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_set_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$547.g_input_stream_set_pending$MH,"g_input_stream_set_pending");
    }
    public static int g_input_stream_set_pending ( Addressable stream,  Addressable error) {
        var mh$ = g_input_stream_set_pending$MH();
        try {
            return (int)mh$.invokeExact(stream, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_input_stream_clear_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$547.g_input_stream_clear_pending$MH,"g_input_stream_clear_pending");
    }
    public static void g_input_stream_clear_pending ( Addressable stream) {
        var mh$ = g_input_stream_clear_pending$MH();
        try {
            mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filter_input_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$547.g_filter_input_stream_get_type$MH,"g_filter_input_stream_get_type");
    }
    public static long g_filter_input_stream_get_type () {
        var mh$ = g_filter_input_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filter_input_stream_get_base_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$547.g_filter_input_stream_get_base_stream$MH,"g_filter_input_stream_get_base_stream");
    }
    public static MemoryAddress g_filter_input_stream_get_base_stream ( Addressable stream) {
        var mh$ = g_filter_input_stream_get_base_stream$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filter_input_stream_get_close_base_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$548.g_filter_input_stream_get_close_base_stream$MH,"g_filter_input_stream_get_close_base_stream");
    }
    public static int g_filter_input_stream_get_close_base_stream ( Addressable stream) {
        var mh$ = g_filter_input_stream_get_close_base_stream$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filter_input_stream_set_close_base_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$548.g_filter_input_stream_set_close_base_stream$MH,"g_filter_input_stream_set_close_base_stream");
    }
    public static void g_filter_input_stream_set_close_base_stream ( Addressable stream,  int close_base) {
        var mh$ = g_filter_input_stream_set_close_base_stream$MH();
        try {
            mh$.invokeExact(stream, close_base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$548.g_buffered_input_stream_get_type$MH,"g_buffered_input_stream_get_type");
    }
    public static long g_buffered_input_stream_get_type () {
        var mh$ = g_buffered_input_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_new$MH() {
        return RuntimeHelper.requireNonNull(constants$548.g_buffered_input_stream_new$MH,"g_buffered_input_stream_new");
    }
    public static MemoryAddress g_buffered_input_stream_new ( Addressable base_stream) {
        var mh$ = g_buffered_input_stream_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(base_stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_new_sized$MH() {
        return RuntimeHelper.requireNonNull(constants$548.g_buffered_input_stream_new_sized$MH,"g_buffered_input_stream_new_sized");
    }
    public static MemoryAddress g_buffered_input_stream_new_sized ( Addressable base_stream,  long size) {
        var mh$ = g_buffered_input_stream_new_sized$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(base_stream, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_get_buffer_size$MH() {
        return RuntimeHelper.requireNonNull(constants$548.g_buffered_input_stream_get_buffer_size$MH,"g_buffered_input_stream_get_buffer_size");
    }
    public static long g_buffered_input_stream_get_buffer_size ( Addressable stream) {
        var mh$ = g_buffered_input_stream_get_buffer_size$MH();
        try {
            return (long)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_set_buffer_size$MH() {
        return RuntimeHelper.requireNonNull(constants$549.g_buffered_input_stream_set_buffer_size$MH,"g_buffered_input_stream_set_buffer_size");
    }
    public static void g_buffered_input_stream_set_buffer_size ( Addressable stream,  long size) {
        var mh$ = g_buffered_input_stream_set_buffer_size$MH();
        try {
            mh$.invokeExact(stream, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_get_available$MH() {
        return RuntimeHelper.requireNonNull(constants$549.g_buffered_input_stream_get_available$MH,"g_buffered_input_stream_get_available");
    }
    public static long g_buffered_input_stream_get_available ( Addressable stream) {
        var mh$ = g_buffered_input_stream_get_available$MH();
        try {
            return (long)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$549.g_buffered_input_stream_peek$MH,"g_buffered_input_stream_peek");
    }
    public static long g_buffered_input_stream_peek ( Addressable stream,  Addressable buffer,  long offset,  long count) {
        var mh$ = g_buffered_input_stream_peek$MH();
        try {
            return (long)mh$.invokeExact(stream, buffer, offset, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_peek_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$549.g_buffered_input_stream_peek_buffer$MH,"g_buffered_input_stream_peek_buffer");
    }
    public static MemoryAddress g_buffered_input_stream_peek_buffer ( Addressable stream,  Addressable count) {
        var mh$ = g_buffered_input_stream_peek_buffer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stream, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_fill$MH() {
        return RuntimeHelper.requireNonNull(constants$549.g_buffered_input_stream_fill$MH,"g_buffered_input_stream_fill");
    }
    public static long g_buffered_input_stream_fill ( Addressable stream,  long count,  Addressable cancellable,  Addressable error) {
        var mh$ = g_buffered_input_stream_fill$MH();
        try {
            return (long)mh$.invokeExact(stream, count, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_fill_async$MH() {
        return RuntimeHelper.requireNonNull(constants$549.g_buffered_input_stream_fill_async$MH,"g_buffered_input_stream_fill_async");
    }
    public static void g_buffered_input_stream_fill_async ( Addressable stream,  long count,  int io_priority,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_buffered_input_stream_fill_async$MH();
        try {
            mh$.invokeExact(stream, count, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_fill_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$550.g_buffered_input_stream_fill_finish$MH,"g_buffered_input_stream_fill_finish");
    }
    public static long g_buffered_input_stream_fill_finish ( Addressable stream,  Addressable result,  Addressable error) {
        var mh$ = g_buffered_input_stream_fill_finish$MH();
        try {
            return (long)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_input_stream_read_byte$MH() {
        return RuntimeHelper.requireNonNull(constants$550.g_buffered_input_stream_read_byte$MH,"g_buffered_input_stream_read_byte");
    }
    public static int g_buffered_input_stream_read_byte ( Addressable stream,  Addressable cancellable,  Addressable error) {
        var mh$ = g_buffered_input_stream_read_byte$MH();
        try {
            return (int)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$550.g_output_stream_get_type$MH,"g_output_stream_get_type");
    }
    public static long g_output_stream_get_type () {
        var mh$ = g_output_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_write$MH() {
        return RuntimeHelper.requireNonNull(constants$550.g_output_stream_write$MH,"g_output_stream_write");
    }
    public static long g_output_stream_write ( Addressable stream,  Addressable buffer,  long count,  Addressable cancellable,  Addressable error) {
        var mh$ = g_output_stream_write$MH();
        try {
            return (long)mh$.invokeExact(stream, buffer, count, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_write_all$MH() {
        return RuntimeHelper.requireNonNull(constants$550.g_output_stream_write_all$MH,"g_output_stream_write_all");
    }
    public static int g_output_stream_write_all ( Addressable stream,  Addressable buffer,  long count,  Addressable bytes_written,  Addressable cancellable,  Addressable error) {
        var mh$ = g_output_stream_write_all$MH();
        try {
            return (int)mh$.invokeExact(stream, buffer, count, bytes_written, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_writev$MH() {
        return RuntimeHelper.requireNonNull(constants$550.g_output_stream_writev$MH,"g_output_stream_writev");
    }
    public static int g_output_stream_writev ( Addressable stream,  Addressable vectors,  long n_vectors,  Addressable bytes_written,  Addressable cancellable,  Addressable error) {
        var mh$ = g_output_stream_writev$MH();
        try {
            return (int)mh$.invokeExact(stream, vectors, n_vectors, bytes_written, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_writev_all$MH() {
        return RuntimeHelper.requireNonNull(constants$551.g_output_stream_writev_all$MH,"g_output_stream_writev_all");
    }
    public static int g_output_stream_writev_all ( Addressable stream,  Addressable vectors,  long n_vectors,  Addressable bytes_written,  Addressable cancellable,  Addressable error) {
        var mh$ = g_output_stream_writev_all$MH();
        try {
            return (int)mh$.invokeExact(stream, vectors, n_vectors, bytes_written, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_printf$MH() {
        return RuntimeHelper.requireNonNull(constants$551.g_output_stream_printf$MH,"g_output_stream_printf");
    }
    public static int g_output_stream_printf ( Addressable stream,  Addressable bytes_written,  Addressable cancellable,  Addressable error,  Addressable format, Object... x5) {
        var mh$ = g_output_stream_printf$MH();
        try {
            return (int)mh$.invokeExact(stream, bytes_written, cancellable, error, format, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_vprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$551.g_output_stream_vprintf$MH,"g_output_stream_vprintf");
    }
    public static int g_output_stream_vprintf ( Addressable stream,  Addressable bytes_written,  Addressable cancellable,  Addressable error,  Addressable format,  Addressable args) {
        var mh$ = g_output_stream_vprintf$MH();
        try {
            return (int)mh$.invokeExact(stream, bytes_written, cancellable, error, format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_write_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$551.g_output_stream_write_bytes$MH,"g_output_stream_write_bytes");
    }
    public static long g_output_stream_write_bytes ( Addressable stream,  Addressable bytes,  Addressable cancellable,  Addressable error) {
        var mh$ = g_output_stream_write_bytes$MH();
        try {
            return (long)mh$.invokeExact(stream, bytes, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_splice$MH() {
        return RuntimeHelper.requireNonNull(constants$551.g_output_stream_splice$MH,"g_output_stream_splice");
    }
    public static long g_output_stream_splice ( Addressable stream,  Addressable source,  int flags,  Addressable cancellable,  Addressable error) {
        var mh$ = g_output_stream_splice$MH();
        try {
            return (long)mh$.invokeExact(stream, source, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_flush$MH() {
        return RuntimeHelper.requireNonNull(constants$551.g_output_stream_flush$MH,"g_output_stream_flush");
    }
    public static int g_output_stream_flush ( Addressable stream,  Addressable cancellable,  Addressable error) {
        var mh$ = g_output_stream_flush$MH();
        try {
            return (int)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_close$MH() {
        return RuntimeHelper.requireNonNull(constants$552.g_output_stream_close$MH,"g_output_stream_close");
    }
    public static int g_output_stream_close ( Addressable stream,  Addressable cancellable,  Addressable error) {
        var mh$ = g_output_stream_close$MH();
        try {
            return (int)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_write_async$MH() {
        return RuntimeHelper.requireNonNull(constants$552.g_output_stream_write_async$MH,"g_output_stream_write_async");
    }
    public static void g_output_stream_write_async ( Addressable stream,  Addressable buffer,  long count,  int io_priority,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_output_stream_write_async$MH();
        try {
            mh$.invokeExact(stream, buffer, count, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_write_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$552.g_output_stream_write_finish$MH,"g_output_stream_write_finish");
    }
    public static long g_output_stream_write_finish ( Addressable stream,  Addressable result,  Addressable error) {
        var mh$ = g_output_stream_write_finish$MH();
        try {
            return (long)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_write_all_async$MH() {
        return RuntimeHelper.requireNonNull(constants$552.g_output_stream_write_all_async$MH,"g_output_stream_write_all_async");
    }
    public static void g_output_stream_write_all_async ( Addressable stream,  Addressable buffer,  long count,  int io_priority,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_output_stream_write_all_async$MH();
        try {
            mh$.invokeExact(stream, buffer, count, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_write_all_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$552.g_output_stream_write_all_finish$MH,"g_output_stream_write_all_finish");
    }
    public static int g_output_stream_write_all_finish ( Addressable stream,  Addressable result,  Addressable bytes_written,  Addressable error) {
        var mh$ = g_output_stream_write_all_finish$MH();
        try {
            return (int)mh$.invokeExact(stream, result, bytes_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_writev_async$MH() {
        return RuntimeHelper.requireNonNull(constants$552.g_output_stream_writev_async$MH,"g_output_stream_writev_async");
    }
    public static void g_output_stream_writev_async ( Addressable stream,  Addressable vectors,  long n_vectors,  int io_priority,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_output_stream_writev_async$MH();
        try {
            mh$.invokeExact(stream, vectors, n_vectors, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_writev_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$553.g_output_stream_writev_finish$MH,"g_output_stream_writev_finish");
    }
    public static int g_output_stream_writev_finish ( Addressable stream,  Addressable result,  Addressable bytes_written,  Addressable error) {
        var mh$ = g_output_stream_writev_finish$MH();
        try {
            return (int)mh$.invokeExact(stream, result, bytes_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_writev_all_async$MH() {
        return RuntimeHelper.requireNonNull(constants$553.g_output_stream_writev_all_async$MH,"g_output_stream_writev_all_async");
    }
    public static void g_output_stream_writev_all_async ( Addressable stream,  Addressable vectors,  long n_vectors,  int io_priority,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_output_stream_writev_all_async$MH();
        try {
            mh$.invokeExact(stream, vectors, n_vectors, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_writev_all_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$553.g_output_stream_writev_all_finish$MH,"g_output_stream_writev_all_finish");
    }
    public static int g_output_stream_writev_all_finish ( Addressable stream,  Addressable result,  Addressable bytes_written,  Addressable error) {
        var mh$ = g_output_stream_writev_all_finish$MH();
        try {
            return (int)mh$.invokeExact(stream, result, bytes_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_write_bytes_async$MH() {
        return RuntimeHelper.requireNonNull(constants$553.g_output_stream_write_bytes_async$MH,"g_output_stream_write_bytes_async");
    }
    public static void g_output_stream_write_bytes_async ( Addressable stream,  Addressable bytes,  int io_priority,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_output_stream_write_bytes_async$MH();
        try {
            mh$.invokeExact(stream, bytes, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_write_bytes_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$553.g_output_stream_write_bytes_finish$MH,"g_output_stream_write_bytes_finish");
    }
    public static long g_output_stream_write_bytes_finish ( Addressable stream,  Addressable result,  Addressable error) {
        var mh$ = g_output_stream_write_bytes_finish$MH();
        try {
            return (long)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_splice_async$MH() {
        return RuntimeHelper.requireNonNull(constants$553.g_output_stream_splice_async$MH,"g_output_stream_splice_async");
    }
    public static void g_output_stream_splice_async ( Addressable stream,  Addressable source,  int flags,  int io_priority,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_output_stream_splice_async$MH();
        try {
            mh$.invokeExact(stream, source, flags, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_splice_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$554.g_output_stream_splice_finish$MH,"g_output_stream_splice_finish");
    }
    public static long g_output_stream_splice_finish ( Addressable stream,  Addressable result,  Addressable error) {
        var mh$ = g_output_stream_splice_finish$MH();
        try {
            return (long)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_flush_async$MH() {
        return RuntimeHelper.requireNonNull(constants$554.g_output_stream_flush_async$MH,"g_output_stream_flush_async");
    }
    public static void g_output_stream_flush_async ( Addressable stream,  int io_priority,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_output_stream_flush_async$MH();
        try {
            mh$.invokeExact(stream, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_flush_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$554.g_output_stream_flush_finish$MH,"g_output_stream_flush_finish");
    }
    public static int g_output_stream_flush_finish ( Addressable stream,  Addressable result,  Addressable error) {
        var mh$ = g_output_stream_flush_finish$MH();
        try {
            return (int)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_close_async$MH() {
        return RuntimeHelper.requireNonNull(constants$554.g_output_stream_close_async$MH,"g_output_stream_close_async");
    }
    public static void g_output_stream_close_async ( Addressable stream,  int io_priority,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_output_stream_close_async$MH();
        try {
            mh$.invokeExact(stream, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_close_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$554.g_output_stream_close_finish$MH,"g_output_stream_close_finish");
    }
    public static int g_output_stream_close_finish ( Addressable stream,  Addressable result,  Addressable error) {
        var mh$ = g_output_stream_close_finish$MH();
        try {
            return (int)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_is_closed$MH() {
        return RuntimeHelper.requireNonNull(constants$554.g_output_stream_is_closed$MH,"g_output_stream_is_closed");
    }
    public static int g_output_stream_is_closed ( Addressable stream) {
        var mh$ = g_output_stream_is_closed$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_is_closing$MH() {
        return RuntimeHelper.requireNonNull(constants$555.g_output_stream_is_closing$MH,"g_output_stream_is_closing");
    }
    public static int g_output_stream_is_closing ( Addressable stream) {
        var mh$ = g_output_stream_is_closing$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_has_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$555.g_output_stream_has_pending$MH,"g_output_stream_has_pending");
    }
    public static int g_output_stream_has_pending ( Addressable stream) {
        var mh$ = g_output_stream_has_pending$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_set_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$555.g_output_stream_set_pending$MH,"g_output_stream_set_pending");
    }
    public static int g_output_stream_set_pending ( Addressable stream,  Addressable error) {
        var mh$ = g_output_stream_set_pending$MH();
        try {
            return (int)mh$.invokeExact(stream, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_clear_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$555.g_output_stream_clear_pending$MH,"g_output_stream_clear_pending");
    }
    public static void g_output_stream_clear_pending ( Addressable stream) {
        var mh$ = g_output_stream_clear_pending$MH();
        try {
            mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filter_output_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$555.g_filter_output_stream_get_type$MH,"g_filter_output_stream_get_type");
    }
    public static long g_filter_output_stream_get_type () {
        var mh$ = g_filter_output_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filter_output_stream_get_base_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$555.g_filter_output_stream_get_base_stream$MH,"g_filter_output_stream_get_base_stream");
    }
    public static MemoryAddress g_filter_output_stream_get_base_stream ( Addressable stream) {
        var mh$ = g_filter_output_stream_get_base_stream$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filter_output_stream_get_close_base_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$556.g_filter_output_stream_get_close_base_stream$MH,"g_filter_output_stream_get_close_base_stream");
    }
    public static int g_filter_output_stream_get_close_base_stream ( Addressable stream) {
        var mh$ = g_filter_output_stream_get_close_base_stream$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filter_output_stream_set_close_base_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$556.g_filter_output_stream_set_close_base_stream$MH,"g_filter_output_stream_set_close_base_stream");
    }
    public static void g_filter_output_stream_set_close_base_stream ( Addressable stream,  int close_base) {
        var mh$ = g_filter_output_stream_set_close_base_stream$MH();
        try {
            mh$.invokeExact(stream, close_base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_output_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$556.g_buffered_output_stream_get_type$MH,"g_buffered_output_stream_get_type");
    }
    public static long g_buffered_output_stream_get_type () {
        var mh$ = g_buffered_output_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_output_stream_new$MH() {
        return RuntimeHelper.requireNonNull(constants$556.g_buffered_output_stream_new$MH,"g_buffered_output_stream_new");
    }
    public static MemoryAddress g_buffered_output_stream_new ( Addressable base_stream) {
        var mh$ = g_buffered_output_stream_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(base_stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_output_stream_new_sized$MH() {
        return RuntimeHelper.requireNonNull(constants$556.g_buffered_output_stream_new_sized$MH,"g_buffered_output_stream_new_sized");
    }
    public static MemoryAddress g_buffered_output_stream_new_sized ( Addressable base_stream,  long size) {
        var mh$ = g_buffered_output_stream_new_sized$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(base_stream, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_output_stream_get_buffer_size$MH() {
        return RuntimeHelper.requireNonNull(constants$556.g_buffered_output_stream_get_buffer_size$MH,"g_buffered_output_stream_get_buffer_size");
    }
    public static long g_buffered_output_stream_get_buffer_size ( Addressable stream) {
        var mh$ = g_buffered_output_stream_get_buffer_size$MH();
        try {
            return (long)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_output_stream_set_buffer_size$MH() {
        return RuntimeHelper.requireNonNull(constants$557.g_buffered_output_stream_set_buffer_size$MH,"g_buffered_output_stream_set_buffer_size");
    }
    public static void g_buffered_output_stream_set_buffer_size ( Addressable stream,  long size) {
        var mh$ = g_buffered_output_stream_set_buffer_size$MH();
        try {
            mh$.invokeExact(stream, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_output_stream_get_auto_grow$MH() {
        return RuntimeHelper.requireNonNull(constants$557.g_buffered_output_stream_get_auto_grow$MH,"g_buffered_output_stream_get_auto_grow");
    }
    public static int g_buffered_output_stream_get_auto_grow ( Addressable stream) {
        var mh$ = g_buffered_output_stream_get_auto_grow$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_buffered_output_stream_set_auto_grow$MH() {
        return RuntimeHelper.requireNonNull(constants$557.g_buffered_output_stream_set_auto_grow$MH,"g_buffered_output_stream_set_auto_grow");
    }
    public static void g_buffered_output_stream_set_auto_grow ( Addressable stream,  int auto_grow) {
        var mh$ = g_buffered_output_stream_set_auto_grow$MH();
        try {
            mh$.invokeExact(stream, auto_grow);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bytes_icon_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$557.g_bytes_icon_get_type$MH,"g_bytes_icon_get_type");
    }
    public static long g_bytes_icon_get_type () {
        var mh$ = g_bytes_icon_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bytes_icon_new$MH() {
        return RuntimeHelper.requireNonNull(constants$557.g_bytes_icon_new$MH,"g_bytes_icon_new");
    }
    public static MemoryAddress g_bytes_icon_new ( Addressable bytes) {
        var mh$ = g_bytes_icon_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bytes_icon_get_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$557.g_bytes_icon_get_bytes$MH,"g_bytes_icon_get_bytes");
    }
    public static MemoryAddress g_bytes_icon_get_bytes ( Addressable icon) {
        var mh$ = g_bytes_icon_get_bytes$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$558.g_cancellable_get_type$MH,"g_cancellable_get_type");
    }
    public static long g_cancellable_get_type () {
        var mh$ = g_cancellable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_new$MH() {
        return RuntimeHelper.requireNonNull(constants$558.g_cancellable_new$MH,"g_cancellable_new");
    }
    public static MemoryAddress g_cancellable_new () {
        var mh$ = g_cancellable_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_is_cancelled$MH() {
        return RuntimeHelper.requireNonNull(constants$558.g_cancellable_is_cancelled$MH,"g_cancellable_is_cancelled");
    }
    public static int g_cancellable_is_cancelled ( Addressable cancellable) {
        var mh$ = g_cancellable_is_cancelled$MH();
        try {
            return (int)mh$.invokeExact(cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_set_error_if_cancelled$MH() {
        return RuntimeHelper.requireNonNull(constants$558.g_cancellable_set_error_if_cancelled$MH,"g_cancellable_set_error_if_cancelled");
    }
    public static int g_cancellable_set_error_if_cancelled ( Addressable cancellable,  Addressable error) {
        var mh$ = g_cancellable_set_error_if_cancelled$MH();
        try {
            return (int)mh$.invokeExact(cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_get_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$558.g_cancellable_get_fd$MH,"g_cancellable_get_fd");
    }
    public static int g_cancellable_get_fd ( Addressable cancellable) {
        var mh$ = g_cancellable_get_fd$MH();
        try {
            return (int)mh$.invokeExact(cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_make_pollfd$MH() {
        return RuntimeHelper.requireNonNull(constants$558.g_cancellable_make_pollfd$MH,"g_cancellable_make_pollfd");
    }
    public static int g_cancellable_make_pollfd ( Addressable cancellable,  Addressable pollfd) {
        var mh$ = g_cancellable_make_pollfd$MH();
        try {
            return (int)mh$.invokeExact(cancellable, pollfd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_release_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$559.g_cancellable_release_fd$MH,"g_cancellable_release_fd");
    }
    public static void g_cancellable_release_fd ( Addressable cancellable) {
        var mh$ = g_cancellable_release_fd$MH();
        try {
            mh$.invokeExact(cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$559.g_cancellable_source_new$MH,"g_cancellable_source_new");
    }
    public static MemoryAddress g_cancellable_source_new ( Addressable cancellable) {
        var mh$ = g_cancellable_source_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_get_current$MH() {
        return RuntimeHelper.requireNonNull(constants$559.g_cancellable_get_current$MH,"g_cancellable_get_current");
    }
    public static MemoryAddress g_cancellable_get_current () {
        var mh$ = g_cancellable_get_current$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_push_current$MH() {
        return RuntimeHelper.requireNonNull(constants$559.g_cancellable_push_current$MH,"g_cancellable_push_current");
    }
    public static void g_cancellable_push_current ( Addressable cancellable) {
        var mh$ = g_cancellable_push_current$MH();
        try {
            mh$.invokeExact(cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_pop_current$MH() {
        return RuntimeHelper.requireNonNull(constants$559.g_cancellable_pop_current$MH,"g_cancellable_pop_current");
    }
    public static void g_cancellable_pop_current ( Addressable cancellable) {
        var mh$ = g_cancellable_pop_current$MH();
        try {
            mh$.invokeExact(cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$559.g_cancellable_reset$MH,"g_cancellable_reset");
    }
    public static void g_cancellable_reset ( Addressable cancellable) {
        var mh$ = g_cancellable_reset$MH();
        try {
            mh$.invokeExact(cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$560.g_cancellable_connect$MH,"g_cancellable_connect");
    }
    public static long g_cancellable_connect ( Addressable cancellable,  Addressable callback,  Addressable data,  Addressable data_destroy_func) {
        var mh$ = g_cancellable_connect$MH();
        try {
            return (long)mh$.invokeExact(cancellable, callback, data, data_destroy_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$560.g_cancellable_disconnect$MH,"g_cancellable_disconnect");
    }
    public static void g_cancellable_disconnect ( Addressable cancellable,  long handler_id) {
        var mh$ = g_cancellable_disconnect$MH();
        try {
            mh$.invokeExact(cancellable, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cancellable_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$560.g_cancellable_cancel$MH,"g_cancellable_cancel");
    }
    public static void g_cancellable_cancel ( Addressable cancellable) {
        var mh$ = g_cancellable_cancel$MH();
        try {
            mh$.invokeExact(cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$560.g_converter_get_type$MH,"g_converter_get_type");
    }
    public static long g_converter_get_type () {
        var mh$ = g_converter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_convert$MH() {
        return RuntimeHelper.requireNonNull(constants$560.g_converter_convert$MH,"g_converter_convert");
    }
    public static int g_converter_convert ( Addressable converter,  Addressable inbuf,  long inbuf_size,  Addressable outbuf,  long outbuf_size,  int flags,  Addressable bytes_read,  Addressable bytes_written,  Addressable error) {
        var mh$ = g_converter_convert$MH();
        try {
            return (int)mh$.invokeExact(converter, inbuf, inbuf_size, outbuf, outbuf_size, flags, bytes_read, bytes_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$560.g_converter_reset$MH,"g_converter_reset");
    }
    public static void g_converter_reset ( Addressable converter) {
        var mh$ = g_converter_reset$MH();
        try {
            mh$.invokeExact(converter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_charset_converter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$561.g_charset_converter_get_type$MH,"g_charset_converter_get_type");
    }
    public static long g_charset_converter_get_type () {
        var mh$ = g_charset_converter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_charset_converter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$561.g_charset_converter_new$MH,"g_charset_converter_new");
    }
    public static MemoryAddress g_charset_converter_new ( Addressable to_charset,  Addressable from_charset,  Addressable error) {
        var mh$ = g_charset_converter_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(to_charset, from_charset, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_charset_converter_set_use_fallback$MH() {
        return RuntimeHelper.requireNonNull(constants$561.g_charset_converter_set_use_fallback$MH,"g_charset_converter_set_use_fallback");
    }
    public static void g_charset_converter_set_use_fallback ( Addressable converter,  int use_fallback) {
        var mh$ = g_charset_converter_set_use_fallback$MH();
        try {
            mh$.invokeExact(converter, use_fallback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_charset_converter_get_use_fallback$MH() {
        return RuntimeHelper.requireNonNull(constants$561.g_charset_converter_get_use_fallback$MH,"g_charset_converter_get_use_fallback");
    }
    public static int g_charset_converter_get_use_fallback ( Addressable converter) {
        var mh$ = g_charset_converter_get_use_fallback$MH();
        try {
            return (int)mh$.invokeExact(converter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_charset_converter_get_num_fallbacks$MH() {
        return RuntimeHelper.requireNonNull(constants$561.g_charset_converter_get_num_fallbacks$MH,"g_charset_converter_get_num_fallbacks");
    }
    public static int g_charset_converter_get_num_fallbacks ( Addressable converter) {
        var mh$ = g_charset_converter_get_num_fallbacks$MH();
        try {
            return (int)mh$.invokeExact(converter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_equals$MH() {
        return RuntimeHelper.requireNonNull(constants$561.g_content_type_equals$MH,"g_content_type_equals");
    }
    public static int g_content_type_equals ( Addressable type1,  Addressable type2) {
        var mh$ = g_content_type_equals$MH();
        try {
            return (int)mh$.invokeExact(type1, type2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_is_a$MH() {
        return RuntimeHelper.requireNonNull(constants$562.g_content_type_is_a$MH,"g_content_type_is_a");
    }
    public static int g_content_type_is_a ( Addressable type,  Addressable supertype) {
        var mh$ = g_content_type_is_a$MH();
        try {
            return (int)mh$.invokeExact(type, supertype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_is_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$562.g_content_type_is_mime_type$MH,"g_content_type_is_mime_type");
    }
    public static int g_content_type_is_mime_type ( Addressable type,  Addressable mime_type) {
        var mh$ = g_content_type_is_mime_type$MH();
        try {
            return (int)mh$.invokeExact(type, mime_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_is_unknown$MH() {
        return RuntimeHelper.requireNonNull(constants$562.g_content_type_is_unknown$MH,"g_content_type_is_unknown");
    }
    public static int g_content_type_is_unknown ( Addressable type) {
        var mh$ = g_content_type_is_unknown$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$562.g_content_type_get_description$MH,"g_content_type_get_description");
    }
    public static MemoryAddress g_content_type_get_description ( Addressable type) {
        var mh$ = g_content_type_get_description$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_get_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$562.g_content_type_get_mime_type$MH,"g_content_type_get_mime_type");
    }
    public static MemoryAddress g_content_type_get_mime_type ( Addressable type) {
        var mh$ = g_content_type_get_mime_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_get_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$562.g_content_type_get_icon$MH,"g_content_type_get_icon");
    }
    public static MemoryAddress g_content_type_get_icon ( Addressable type) {
        var mh$ = g_content_type_get_icon$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_get_symbolic_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$563.g_content_type_get_symbolic_icon$MH,"g_content_type_get_symbolic_icon");
    }
    public static MemoryAddress g_content_type_get_symbolic_icon ( Addressable type) {
        var mh$ = g_content_type_get_symbolic_icon$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_get_generic_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$563.g_content_type_get_generic_icon_name$MH,"g_content_type_get_generic_icon_name");
    }
    public static MemoryAddress g_content_type_get_generic_icon_name ( Addressable type) {
        var mh$ = g_content_type_get_generic_icon_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_can_be_executable$MH() {
        return RuntimeHelper.requireNonNull(constants$563.g_content_type_can_be_executable$MH,"g_content_type_can_be_executable");
    }
    public static int g_content_type_can_be_executable ( Addressable type) {
        var mh$ = g_content_type_can_be_executable$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_from_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$563.g_content_type_from_mime_type$MH,"g_content_type_from_mime_type");
    }
    public static MemoryAddress g_content_type_from_mime_type ( Addressable mime_type) {
        var mh$ = g_content_type_from_mime_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mime_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_guess$MH() {
        return RuntimeHelper.requireNonNull(constants$563.g_content_type_guess$MH,"g_content_type_guess");
    }
    public static MemoryAddress g_content_type_guess ( Addressable filename,  Addressable data,  long data_size,  Addressable result_uncertain) {
        var mh$ = g_content_type_guess$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, data, data_size, result_uncertain);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_guess_for_tree$MH() {
        return RuntimeHelper.requireNonNull(constants$563.g_content_type_guess_for_tree$MH,"g_content_type_guess_for_tree");
    }
    public static MemoryAddress g_content_type_guess_for_tree ( Addressable root) {
        var mh$ = g_content_type_guess_for_tree$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(root);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_types_get_registered$MH() {
        return RuntimeHelper.requireNonNull(constants$564.g_content_types_get_registered$MH,"g_content_types_get_registered");
    }
    public static MemoryAddress g_content_types_get_registered () {
        var mh$ = g_content_types_get_registered$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_get_mime_dirs$MH() {
        return RuntimeHelper.requireNonNull(constants$564.g_content_type_get_mime_dirs$MH,"g_content_type_get_mime_dirs");
    }
    public static MemoryAddress g_content_type_get_mime_dirs () {
        var mh$ = g_content_type_get_mime_dirs$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_content_type_set_mime_dirs$MH() {
        return RuntimeHelper.requireNonNull(constants$564.g_content_type_set_mime_dirs$MH,"g_content_type_set_mime_dirs");
    }
    public static void g_content_type_set_mime_dirs ( Addressable dirs) {
        var mh$ = g_content_type_set_mime_dirs$MH();
        try {
            mh$.invokeExact(dirs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_input_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$564.g_converter_input_stream_get_type$MH,"g_converter_input_stream_get_type");
    }
    public static long g_converter_input_stream_get_type () {
        var mh$ = g_converter_input_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_input_stream_new$MH() {
        return RuntimeHelper.requireNonNull(constants$564.g_converter_input_stream_new$MH,"g_converter_input_stream_new");
    }
    public static MemoryAddress g_converter_input_stream_new ( Addressable base_stream,  Addressable converter) {
        var mh$ = g_converter_input_stream_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(base_stream, converter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_input_stream_get_converter$MH() {
        return RuntimeHelper.requireNonNull(constants$564.g_converter_input_stream_get_converter$MH,"g_converter_input_stream_get_converter");
    }
    public static MemoryAddress g_converter_input_stream_get_converter ( Addressable converter_stream) {
        var mh$ = g_converter_input_stream_get_converter$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(converter_stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_output_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$565.g_converter_output_stream_get_type$MH,"g_converter_output_stream_get_type");
    }
    public static long g_converter_output_stream_get_type () {
        var mh$ = g_converter_output_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_output_stream_new$MH() {
        return RuntimeHelper.requireNonNull(constants$565.g_converter_output_stream_new$MH,"g_converter_output_stream_new");
    }
    public static MemoryAddress g_converter_output_stream_new ( Addressable base_stream,  Addressable converter) {
        var mh$ = g_converter_output_stream_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(base_stream, converter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_output_stream_get_converter$MH() {
        return RuntimeHelper.requireNonNull(constants$565.g_converter_output_stream_get_converter$MH,"g_converter_output_stream_get_converter");
    }
    public static MemoryAddress g_converter_output_stream_get_converter ( Addressable converter_stream) {
        var mh$ = g_converter_output_stream_get_converter$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(converter_stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfLong intptr_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static MethodHandle access$MH() {
        return RuntimeHelper.requireNonNull(constants$565.access$MH,"access");
    }
    public static int access ( Addressable __name,  int __type) {
        var mh$ = access$MH();
        try {
            return (int)mh$.invokeExact(__name, __type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle faccessat$MH() {
        return RuntimeHelper.requireNonNull(constants$565.faccessat$MH,"faccessat");
    }
    public static int faccessat ( int __fd,  Addressable __file,  int __type,  int __flag) {
        var mh$ = faccessat$MH();
        try {
            return (int)mh$.invokeExact(__fd, __file, __type, __flag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lseek$MH() {
        return RuntimeHelper.requireNonNull(constants$565.lseek$MH,"lseek");
    }
    public static long lseek ( int __fd,  long __offset,  int __whence) {
        var mh$ = lseek$MH();
        try {
            return (long)mh$.invokeExact(__fd, __offset, __whence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle close$MH() {
        return RuntimeHelper.requireNonNull(constants$566.close$MH,"close");
    }
    public static int close ( int __fd) {
        var mh$ = close$MH();
        try {
            return (int)mh$.invokeExact(__fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle closefrom$MH() {
        return RuntimeHelper.requireNonNull(constants$566.closefrom$MH,"closefrom");
    }
    public static void closefrom ( int __lowfd) {
        var mh$ = closefrom$MH();
        try {
            mh$.invokeExact(__lowfd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle read$MH() {
        return RuntimeHelper.requireNonNull(constants$566.read$MH,"read");
    }
    public static long read ( int __fd,  Addressable __buf,  long __nbytes) {
        var mh$ = read$MH();
        try {
            return (long)mh$.invokeExact(__fd, __buf, __nbytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle write$MH() {
        return RuntimeHelper.requireNonNull(constants$566.write$MH,"write");
    }
    public static long write ( int __fd,  Addressable __buf,  long __n) {
        var mh$ = write$MH();
        try {
            return (long)mh$.invokeExact(__fd, __buf, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pread$MH() {
        return RuntimeHelper.requireNonNull(constants$566.pread$MH,"pread");
    }
    public static long pread ( int __fd,  Addressable __buf,  long __nbytes,  long __offset) {
        var mh$ = pread$MH();
        try {
            return (long)mh$.invokeExact(__fd, __buf, __nbytes, __offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pwrite$MH() {
        return RuntimeHelper.requireNonNull(constants$566.pwrite$MH,"pwrite");
    }
    public static long pwrite ( int __fd,  Addressable __buf,  long __n,  long __offset) {
        var mh$ = pwrite$MH();
        try {
            return (long)mh$.invokeExact(__fd, __buf, __n, __offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pipe$MH() {
        return RuntimeHelper.requireNonNull(constants$567.pipe$MH,"pipe");
    }
    public static int pipe ( Addressable __pipedes) {
        var mh$ = pipe$MH();
        try {
            return (int)mh$.invokeExact(__pipedes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle alarm$MH() {
        return RuntimeHelper.requireNonNull(constants$567.alarm$MH,"alarm");
    }
    public static int alarm ( int __seconds) {
        var mh$ = alarm$MH();
        try {
            return (int)mh$.invokeExact(__seconds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sleep$MH() {
        return RuntimeHelper.requireNonNull(constants$567.sleep$MH,"sleep");
    }
    public static int sleep ( int __seconds) {
        var mh$ = sleep$MH();
        try {
            return (int)mh$.invokeExact(__seconds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ualarm$MH() {
        return RuntimeHelper.requireNonNull(constants$567.ualarm$MH,"ualarm");
    }
    public static int ualarm ( int __value,  int __interval) {
        var mh$ = ualarm$MH();
        try {
            return (int)mh$.invokeExact(__value, __interval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle usleep$MH() {
        return RuntimeHelper.requireNonNull(constants$567.usleep$MH,"usleep");
    }
    public static int usleep ( int __useconds) {
        var mh$ = usleep$MH();
        try {
            return (int)mh$.invokeExact(__useconds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pause$MH() {
        return RuntimeHelper.requireNonNull(constants$567.pause$MH,"pause");
    }
    public static int pause () {
        var mh$ = pause$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle chown$MH() {
        return RuntimeHelper.requireNonNull(constants$568.chown$MH,"chown");
    }
    public static int chown ( Addressable __file,  int __owner,  int __group) {
        var mh$ = chown$MH();
        try {
            return (int)mh$.invokeExact(__file, __owner, __group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fchown$MH() {
        return RuntimeHelper.requireNonNull(constants$568.fchown$MH,"fchown");
    }
    public static int fchown ( int __fd,  int __owner,  int __group) {
        var mh$ = fchown$MH();
        try {
            return (int)mh$.invokeExact(__fd, __owner, __group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lchown$MH() {
        return RuntimeHelper.requireNonNull(constants$568.lchown$MH,"lchown");
    }
    public static int lchown ( Addressable __file,  int __owner,  int __group) {
        var mh$ = lchown$MH();
        try {
            return (int)mh$.invokeExact(__file, __owner, __group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fchownat$MH() {
        return RuntimeHelper.requireNonNull(constants$568.fchownat$MH,"fchownat");
    }
    public static int fchownat ( int __fd,  Addressable __file,  int __owner,  int __group,  int __flag) {
        var mh$ = fchownat$MH();
        try {
            return (int)mh$.invokeExact(__fd, __file, __owner, __group, __flag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle chdir$MH() {
        return RuntimeHelper.requireNonNull(constants$568.chdir$MH,"chdir");
    }
    public static int chdir ( Addressable __path) {
        var mh$ = chdir$MH();
        try {
            return (int)mh$.invokeExact(__path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fchdir$MH() {
        return RuntimeHelper.requireNonNull(constants$568.fchdir$MH,"fchdir");
    }
    public static int fchdir ( int __fd) {
        var mh$ = fchdir$MH();
        try {
            return (int)mh$.invokeExact(__fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getcwd$MH() {
        return RuntimeHelper.requireNonNull(constants$569.getcwd$MH,"getcwd");
    }
    public static MemoryAddress getcwd ( Addressable __buf,  long __size) {
        var mh$ = getcwd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__buf, __size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getwd$MH() {
        return RuntimeHelper.requireNonNull(constants$569.getwd$MH,"getwd");
    }
    public static MemoryAddress getwd ( Addressable __buf) {
        var mh$ = getwd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle dup$MH() {
        return RuntimeHelper.requireNonNull(constants$569.dup$MH,"dup");
    }
    public static int dup ( int __fd) {
        var mh$ = dup$MH();
        try {
            return (int)mh$.invokeExact(__fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle dup2$MH() {
        return RuntimeHelper.requireNonNull(constants$569.dup2$MH,"dup2");
    }
    public static int dup2 ( int __fd,  int __fd2) {
        var mh$ = dup2$MH();
        try {
            return (int)mh$.invokeExact(__fd, __fd2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout __environ$LAYOUT() {
        return constants$569.__environ$LAYOUT;
    }
    public static VarHandle __environ$VH() {
        return constants$569.__environ$VH;
    }
    public static MemorySegment __environ$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$569.__environ$SEGMENT,"__environ");
    }
    public static MemoryAddress __environ$get() {
        return (java.lang.foreign.MemoryAddress) constants$569.__environ$VH.get(RuntimeHelper.requireNonNull(constants$569.__environ$SEGMENT, "__environ"));
    }
    public static void __environ$set( MemoryAddress x) {
        constants$569.__environ$VH.set(RuntimeHelper.requireNonNull(constants$569.__environ$SEGMENT, "__environ"), x);
    }
    public static MethodHandle execve$MH() {
        return RuntimeHelper.requireNonNull(constants$569.execve$MH,"execve");
    }
    public static int execve ( Addressable __path,  Addressable __argv,  Addressable __envp) {
        var mh$ = execve$MH();
        try {
            return (int)mh$.invokeExact(__path, __argv, __envp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fexecve$MH() {
        return RuntimeHelper.requireNonNull(constants$570.fexecve$MH,"fexecve");
    }
    public static int fexecve ( int __fd,  Addressable __argv,  Addressable __envp) {
        var mh$ = fexecve$MH();
        try {
            return (int)mh$.invokeExact(__fd, __argv, __envp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle execv$MH() {
        return RuntimeHelper.requireNonNull(constants$570.execv$MH,"execv");
    }
    public static int execv ( Addressable __path,  Addressable __argv) {
        var mh$ = execv$MH();
        try {
            return (int)mh$.invokeExact(__path, __argv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle execle$MH() {
        return RuntimeHelper.requireNonNull(constants$570.execle$MH,"execle");
    }
    public static int execle ( Addressable __path,  Addressable __arg, Object... x2) {
        var mh$ = execle$MH();
        try {
            return (int)mh$.invokeExact(__path, __arg, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle execl$MH() {
        return RuntimeHelper.requireNonNull(constants$570.execl$MH,"execl");
    }
    public static int execl ( Addressable __path,  Addressable __arg, Object... x2) {
        var mh$ = execl$MH();
        try {
            return (int)mh$.invokeExact(__path, __arg, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle execvp$MH() {
        return RuntimeHelper.requireNonNull(constants$570.execvp$MH,"execvp");
    }
    public static int execvp ( Addressable __file,  Addressable __argv) {
        var mh$ = execvp$MH();
        try {
            return (int)mh$.invokeExact(__file, __argv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle execlp$MH() {
        return RuntimeHelper.requireNonNull(constants$570.execlp$MH,"execlp");
    }
    public static int execlp ( Addressable __file,  Addressable __arg, Object... x2) {
        var mh$ = execlp$MH();
        try {
            return (int)mh$.invokeExact(__file, __arg, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle nice$MH() {
        return RuntimeHelper.requireNonNull(constants$571.nice$MH,"nice");
    }
    public static int nice ( int __inc) {
        var mh$ = nice$MH();
        try {
            return (int)mh$.invokeExact(__inc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _exit$MH() {
        return RuntimeHelper.requireNonNull(constants$571._exit$MH,"_exit");
    }
    public static void _exit ( int __status) {
        var mh$ = _exit$MH();
        try {
            mh$.invokeExact(__status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int _PC_LINK_MAX() {
        return (int)0L;
    }
    public static int _PC_MAX_CANON() {
        return (int)1L;
    }
    public static int _PC_MAX_INPUT() {
        return (int)2L;
    }
    public static int _PC_NAME_MAX() {
        return (int)3L;
    }
    public static int _PC_PATH_MAX() {
        return (int)4L;
    }
    public static int _PC_PIPE_BUF() {
        return (int)5L;
    }
    public static int _PC_CHOWN_RESTRICTED() {
        return (int)6L;
    }
    public static int _PC_NO_TRUNC() {
        return (int)7L;
    }
    public static int _PC_VDISABLE() {
        return (int)8L;
    }
    public static int _PC_SYNC_IO() {
        return (int)9L;
    }
    public static int _PC_ASYNC_IO() {
        return (int)10L;
    }
    public static int _PC_PRIO_IO() {
        return (int)11L;
    }
    public static int _PC_SOCK_MAXBUF() {
        return (int)12L;
    }
    public static int _PC_FILESIZEBITS() {
        return (int)13L;
    }
    public static int _PC_REC_INCR_XFER_SIZE() {
        return (int)14L;
    }
    public static int _PC_REC_MAX_XFER_SIZE() {
        return (int)15L;
    }
    public static int _PC_REC_MIN_XFER_SIZE() {
        return (int)16L;
    }
    public static int _PC_REC_XFER_ALIGN() {
        return (int)17L;
    }
    public static int _PC_ALLOC_SIZE_MIN() {
        return (int)18L;
    }
    public static int _PC_SYMLINK_MAX() {
        return (int)19L;
    }
    public static int _PC_2_SYMLINKS() {
        return (int)20L;
    }
    public static int _SC_ARG_MAX() {
        return (int)0L;
    }
    public static int _SC_CHILD_MAX() {
        return (int)1L;
    }
    public static int _SC_CLK_TCK() {
        return (int)2L;
    }
    public static int _SC_NGROUPS_MAX() {
        return (int)3L;
    }
    public static int _SC_OPEN_MAX() {
        return (int)4L;
    }
    public static int _SC_STREAM_MAX() {
        return (int)5L;
    }
    public static int _SC_TZNAME_MAX() {
        return (int)6L;
    }
    public static int _SC_JOB_CONTROL() {
        return (int)7L;
    }
    public static int _SC_SAVED_IDS() {
        return (int)8L;
    }
    public static int _SC_REALTIME_SIGNALS() {
        return (int)9L;
    }
    public static int _SC_PRIORITY_SCHEDULING() {
        return (int)10L;
    }
    public static int _SC_TIMERS() {
        return (int)11L;
    }
    public static int _SC_ASYNCHRONOUS_IO() {
        return (int)12L;
    }
    public static int _SC_PRIORITIZED_IO() {
        return (int)13L;
    }
    public static int _SC_SYNCHRONIZED_IO() {
        return (int)14L;
    }
    public static int _SC_FSYNC() {
        return (int)15L;
    }
    public static int _SC_MAPPED_FILES() {
        return (int)16L;
    }
    public static int _SC_MEMLOCK() {
        return (int)17L;
    }
    public static int _SC_MEMLOCK_RANGE() {
        return (int)18L;
    }
    public static int _SC_MEMORY_PROTECTION() {
        return (int)19L;
    }
    public static int _SC_MESSAGE_PASSING() {
        return (int)20L;
    }
    public static int _SC_SEMAPHORES() {
        return (int)21L;
    }
    public static int _SC_SHARED_MEMORY_OBJECTS() {
        return (int)22L;
    }
    public static int _SC_AIO_LISTIO_MAX() {
        return (int)23L;
    }
    public static int _SC_AIO_MAX() {
        return (int)24L;
    }
    public static int _SC_AIO_PRIO_DELTA_MAX() {
        return (int)25L;
    }
    public static int _SC_DELAYTIMER_MAX() {
        return (int)26L;
    }
    public static int _SC_MQ_OPEN_MAX() {
        return (int)27L;
    }
    public static int _SC_MQ_PRIO_MAX() {
        return (int)28L;
    }
    public static int _SC_VERSION() {
        return (int)29L;
    }
    public static int _SC_PAGESIZE() {
        return (int)30L;
    }
    public static int _SC_RTSIG_MAX() {
        return (int)31L;
    }
    public static int _SC_SEM_NSEMS_MAX() {
        return (int)32L;
    }
    public static int _SC_SEM_VALUE_MAX() {
        return (int)33L;
    }
    public static int _SC_SIGQUEUE_MAX() {
        return (int)34L;
    }
    public static int _SC_TIMER_MAX() {
        return (int)35L;
    }
    public static int _SC_BC_BASE_MAX() {
        return (int)36L;
    }
    public static int _SC_BC_DIM_MAX() {
        return (int)37L;
    }
    public static int _SC_BC_SCALE_MAX() {
        return (int)38L;
    }
    public static int _SC_BC_STRING_MAX() {
        return (int)39L;
    }
    public static int _SC_COLL_WEIGHTS_MAX() {
        return (int)40L;
    }
    public static int _SC_EQUIV_CLASS_MAX() {
        return (int)41L;
    }
    public static int _SC_EXPR_NEST_MAX() {
        return (int)42L;
    }
    public static int _SC_LINE_MAX() {
        return (int)43L;
    }
    public static int _SC_RE_DUP_MAX() {
        return (int)44L;
    }
    public static int _SC_CHARCLASS_NAME_MAX() {
        return (int)45L;
    }
    public static int _SC_2_VERSION() {
        return (int)46L;
    }
    public static int _SC_2_C_BIND() {
        return (int)47L;
    }
    public static int _SC_2_C_DEV() {
        return (int)48L;
    }
    public static int _SC_2_FORT_DEV() {
        return (int)49L;
    }
    public static int _SC_2_FORT_RUN() {
        return (int)50L;
    }
    public static int _SC_2_SW_DEV() {
        return (int)51L;
    }
    public static int _SC_2_LOCALEDEF() {
        return (int)52L;
    }
    public static int _SC_PII() {
        return (int)53L;
    }
    public static int _SC_PII_XTI() {
        return (int)54L;
    }
    public static int _SC_PII_SOCKET() {
        return (int)55L;
    }
    public static int _SC_PII_INTERNET() {
        return (int)56L;
    }
    public static int _SC_PII_OSI() {
        return (int)57L;
    }
    public static int _SC_POLL() {
        return (int)58L;
    }
    public static int _SC_SELECT() {
        return (int)59L;
    }
    public static int _SC_UIO_MAXIOV() {
        return (int)60L;
    }
    public static int _SC_IOV_MAX() {
        return (int)60L;
    }
    public static int _SC_PII_INTERNET_STREAM() {
        return (int)61L;
    }
    public static int _SC_PII_INTERNET_DGRAM() {
        return (int)62L;
    }
    public static int _SC_PII_OSI_COTS() {
        return (int)63L;
    }
    public static int _SC_PII_OSI_CLTS() {
        return (int)64L;
    }
    public static int _SC_PII_OSI_M() {
        return (int)65L;
    }
    public static int _SC_T_IOV_MAX() {
        return (int)66L;
    }
    public static int _SC_THREADS() {
        return (int)67L;
    }
    public static int _SC_THREAD_SAFE_FUNCTIONS() {
        return (int)68L;
    }
    public static int _SC_GETGR_R_SIZE_MAX() {
        return (int)69L;
    }
    public static int _SC_GETPW_R_SIZE_MAX() {
        return (int)70L;
    }
    public static int _SC_LOGIN_NAME_MAX() {
        return (int)71L;
    }
    public static int _SC_TTY_NAME_MAX() {
        return (int)72L;
    }
    public static int _SC_THREAD_DESTRUCTOR_ITERATIONS() {
        return (int)73L;
    }
    public static int _SC_THREAD_KEYS_MAX() {
        return (int)74L;
    }
    public static int _SC_THREAD_STACK_MIN() {
        return (int)75L;
    }
    public static int _SC_THREAD_THREADS_MAX() {
        return (int)76L;
    }
    public static int _SC_THREAD_ATTR_STACKADDR() {
        return (int)77L;
    }
    public static int _SC_THREAD_ATTR_STACKSIZE() {
        return (int)78L;
    }
    public static int _SC_THREAD_PRIORITY_SCHEDULING() {
        return (int)79L;
    }
    public static int _SC_THREAD_PRIO_INHERIT() {
        return (int)80L;
    }
    public static int _SC_THREAD_PRIO_PROTECT() {
        return (int)81L;
    }
    public static int _SC_THREAD_PROCESS_SHARED() {
        return (int)82L;
    }
    public static int _SC_NPROCESSORS_CONF() {
        return (int)83L;
    }
    public static int _SC_NPROCESSORS_ONLN() {
        return (int)84L;
    }
    public static int _SC_PHYS_PAGES() {
        return (int)85L;
    }
    public static int _SC_AVPHYS_PAGES() {
        return (int)86L;
    }
    public static int _SC_ATEXIT_MAX() {
        return (int)87L;
    }
    public static int _SC_PASS_MAX() {
        return (int)88L;
    }
    public static int _SC_XOPEN_VERSION() {
        return (int)89L;
    }
    public static int _SC_XOPEN_XCU_VERSION() {
        return (int)90L;
    }
    public static int _SC_XOPEN_UNIX() {
        return (int)91L;
    }
    public static int _SC_XOPEN_CRYPT() {
        return (int)92L;
    }
    public static int _SC_XOPEN_ENH_I18N() {
        return (int)93L;
    }
    public static int _SC_XOPEN_SHM() {
        return (int)94L;
    }
    public static int _SC_2_CHAR_TERM() {
        return (int)95L;
    }
    public static int _SC_2_C_VERSION() {
        return (int)96L;
    }
    public static int _SC_2_UPE() {
        return (int)97L;
    }
    public static int _SC_XOPEN_XPG2() {
        return (int)98L;
    }
    public static int _SC_XOPEN_XPG3() {
        return (int)99L;
    }
    public static int _SC_XOPEN_XPG4() {
        return (int)100L;
    }
    public static int _SC_CHAR_BIT() {
        return (int)101L;
    }
    public static int _SC_CHAR_MAX() {
        return (int)102L;
    }
    public static int _SC_CHAR_MIN() {
        return (int)103L;
    }
    public static int _SC_INT_MAX() {
        return (int)104L;
    }
    public static int _SC_INT_MIN() {
        return (int)105L;
    }
    public static int _SC_LONG_BIT() {
        return (int)106L;
    }
    public static int _SC_WORD_BIT() {
        return (int)107L;
    }
    public static int _SC_MB_LEN_MAX() {
        return (int)108L;
    }
    public static int _SC_NZERO() {
        return (int)109L;
    }
    public static int _SC_SSIZE_MAX() {
        return (int)110L;
    }
    public static int _SC_SCHAR_MAX() {
        return (int)111L;
    }
    public static int _SC_SCHAR_MIN() {
        return (int)112L;
    }
    public static int _SC_SHRT_MAX() {
        return (int)113L;
    }
    public static int _SC_SHRT_MIN() {
        return (int)114L;
    }
    public static int _SC_UCHAR_MAX() {
        return (int)115L;
    }
    public static int _SC_UINT_MAX() {
        return (int)116L;
    }
    public static int _SC_ULONG_MAX() {
        return (int)117L;
    }
    public static int _SC_USHRT_MAX() {
        return (int)118L;
    }
    public static int _SC_NL_ARGMAX() {
        return (int)119L;
    }
    public static int _SC_NL_LANGMAX() {
        return (int)120L;
    }
    public static int _SC_NL_MSGMAX() {
        return (int)121L;
    }
    public static int _SC_NL_NMAX() {
        return (int)122L;
    }
    public static int _SC_NL_SETMAX() {
        return (int)123L;
    }
    public static int _SC_NL_TEXTMAX() {
        return (int)124L;
    }
    public static int _SC_XBS5_ILP32_OFF32() {
        return (int)125L;
    }
    public static int _SC_XBS5_ILP32_OFFBIG() {
        return (int)126L;
    }
    public static int _SC_XBS5_LP64_OFF64() {
        return (int)127L;
    }
    public static int _SC_XBS5_LPBIG_OFFBIG() {
        return (int)128L;
    }
    public static int _SC_XOPEN_LEGACY() {
        return (int)129L;
    }
    public static int _SC_XOPEN_REALTIME() {
        return (int)130L;
    }
    public static int _SC_XOPEN_REALTIME_THREADS() {
        return (int)131L;
    }
    public static int _SC_ADVISORY_INFO() {
        return (int)132L;
    }
    public static int _SC_BARRIERS() {
        return (int)133L;
    }
    public static int _SC_BASE() {
        return (int)134L;
    }
    public static int _SC_C_LANG_SUPPORT() {
        return (int)135L;
    }
    public static int _SC_C_LANG_SUPPORT_R() {
        return (int)136L;
    }
    public static int _SC_CLOCK_SELECTION() {
        return (int)137L;
    }
    public static int _SC_CPUTIME() {
        return (int)138L;
    }
    public static int _SC_THREAD_CPUTIME() {
        return (int)139L;
    }
    public static int _SC_DEVICE_IO() {
        return (int)140L;
    }
    public static int _SC_DEVICE_SPECIFIC() {
        return (int)141L;
    }
    public static int _SC_DEVICE_SPECIFIC_R() {
        return (int)142L;
    }
    public static int _SC_FD_MGMT() {
        return (int)143L;
    }
    public static int _SC_FIFO() {
        return (int)144L;
    }
    public static int _SC_PIPE() {
        return (int)145L;
    }
    public static int _SC_FILE_ATTRIBUTES() {
        return (int)146L;
    }
    public static int _SC_FILE_LOCKING() {
        return (int)147L;
    }
    public static int _SC_FILE_SYSTEM() {
        return (int)148L;
    }
    public static int _SC_MONOTONIC_CLOCK() {
        return (int)149L;
    }
    public static int _SC_MULTI_PROCESS() {
        return (int)150L;
    }
    public static int _SC_SINGLE_PROCESS() {
        return (int)151L;
    }
    public static int _SC_NETWORKING() {
        return (int)152L;
    }
    public static int _SC_READER_WRITER_LOCKS() {
        return (int)153L;
    }
    public static int _SC_SPIN_LOCKS() {
        return (int)154L;
    }
    public static int _SC_REGEXP() {
        return (int)155L;
    }
    public static int _SC_REGEX_VERSION() {
        return (int)156L;
    }
    public static int _SC_SHELL() {
        return (int)157L;
    }
    public static int _SC_SIGNALS() {
        return (int)158L;
    }
    public static int _SC_SPAWN() {
        return (int)159L;
    }
    public static int _SC_SPORADIC_SERVER() {
        return (int)160L;
    }
    public static int _SC_THREAD_SPORADIC_SERVER() {
        return (int)161L;
    }
    public static int _SC_SYSTEM_DATABASE() {
        return (int)162L;
    }
    public static int _SC_SYSTEM_DATABASE_R() {
        return (int)163L;
    }
    public static int _SC_TIMEOUTS() {
        return (int)164L;
    }
    public static int _SC_TYPED_MEMORY_OBJECTS() {
        return (int)165L;
    }
    public static int _SC_USER_GROUPS() {
        return (int)166L;
    }
    public static int _SC_USER_GROUPS_R() {
        return (int)167L;
    }
    public static int _SC_2_PBS() {
        return (int)168L;
    }
    public static int _SC_2_PBS_ACCOUNTING() {
        return (int)169L;
    }
    public static int _SC_2_PBS_LOCATE() {
        return (int)170L;
    }
    public static int _SC_2_PBS_MESSAGE() {
        return (int)171L;
    }
    public static int _SC_2_PBS_TRACK() {
        return (int)172L;
    }
    public static int _SC_SYMLOOP_MAX() {
        return (int)173L;
    }
    public static int _SC_STREAMS() {
        return (int)174L;
    }
    public static int _SC_2_PBS_CHECKPOINT() {
        return (int)175L;
    }
    public static int _SC_V6_ILP32_OFF32() {
        return (int)176L;
    }
    public static int _SC_V6_ILP32_OFFBIG() {
        return (int)177L;
    }
    public static int _SC_V6_LP64_OFF64() {
        return (int)178L;
    }
    public static int _SC_V6_LPBIG_OFFBIG() {
        return (int)179L;
    }
    public static int _SC_HOST_NAME_MAX() {
        return (int)180L;
    }
    public static int _SC_TRACE() {
        return (int)181L;
    }
    public static int _SC_TRACE_EVENT_FILTER() {
        return (int)182L;
    }
    public static int _SC_TRACE_INHERIT() {
        return (int)183L;
    }
    public static int _SC_TRACE_LOG() {
        return (int)184L;
    }
    public static int _SC_LEVEL1_ICACHE_SIZE() {
        return (int)185L;
    }
    public static int _SC_LEVEL1_ICACHE_ASSOC() {
        return (int)186L;
    }
    public static int _SC_LEVEL1_ICACHE_LINESIZE() {
        return (int)187L;
    }
    public static int _SC_LEVEL1_DCACHE_SIZE() {
        return (int)188L;
    }
    public static int _SC_LEVEL1_DCACHE_ASSOC() {
        return (int)189L;
    }
    public static int _SC_LEVEL1_DCACHE_LINESIZE() {
        return (int)190L;
    }
    public static int _SC_LEVEL2_CACHE_SIZE() {
        return (int)191L;
    }
    public static int _SC_LEVEL2_CACHE_ASSOC() {
        return (int)192L;
    }
    public static int _SC_LEVEL2_CACHE_LINESIZE() {
        return (int)193L;
    }
    public static int _SC_LEVEL3_CACHE_SIZE() {
        return (int)194L;
    }
    public static int _SC_LEVEL3_CACHE_ASSOC() {
        return (int)195L;
    }
    public static int _SC_LEVEL3_CACHE_LINESIZE() {
        return (int)196L;
    }
    public static int _SC_LEVEL4_CACHE_SIZE() {
        return (int)197L;
    }
    public static int _SC_LEVEL4_CACHE_ASSOC() {
        return (int)198L;
    }
    public static int _SC_LEVEL4_CACHE_LINESIZE() {
        return (int)199L;
    }
    public static int _SC_IPV6() {
        return (int)235L;
    }
    public static int _SC_RAW_SOCKETS() {
        return (int)236L;
    }
    public static int _SC_V7_ILP32_OFF32() {
        return (int)237L;
    }
    public static int _SC_V7_ILP32_OFFBIG() {
        return (int)238L;
    }
    public static int _SC_V7_LP64_OFF64() {
        return (int)239L;
    }
    public static int _SC_V7_LPBIG_OFFBIG() {
        return (int)240L;
    }
    public static int _SC_SS_REPL_MAX() {
        return (int)241L;
    }
    public static int _SC_TRACE_EVENT_NAME_MAX() {
        return (int)242L;
    }
    public static int _SC_TRACE_NAME_MAX() {
        return (int)243L;
    }
    public static int _SC_TRACE_SYS_MAX() {
        return (int)244L;
    }
    public static int _SC_TRACE_USER_EVENT_MAX() {
        return (int)245L;
    }
    public static int _SC_XOPEN_STREAMS() {
        return (int)246L;
    }
    public static int _SC_THREAD_ROBUST_PRIO_INHERIT() {
        return (int)247L;
    }
    public static int _SC_THREAD_ROBUST_PRIO_PROTECT() {
        return (int)248L;
    }
    public static int _SC_MINSIGSTKSZ() {
        return (int)249L;
    }
    public static int _SC_SIGSTKSZ() {
        return (int)250L;
    }
    public static int _CS_PATH() {
        return (int)0L;
    }
    public static int _CS_V6_WIDTH_RESTRICTED_ENVS() {
        return (int)1L;
    }
    public static int _CS_GNU_LIBC_VERSION() {
        return (int)2L;
    }
    public static int _CS_GNU_LIBPTHREAD_VERSION() {
        return (int)3L;
    }
    public static int _CS_V5_WIDTH_RESTRICTED_ENVS() {
        return (int)4L;
    }
    public static int _CS_V7_WIDTH_RESTRICTED_ENVS() {
        return (int)5L;
    }
    public static int _CS_LFS_CFLAGS() {
        return (int)1000L;
    }
    public static int _CS_LFS_LDFLAGS() {
        return (int)1001L;
    }
    public static int _CS_LFS_LIBS() {
        return (int)1002L;
    }
    public static int _CS_LFS_LINTFLAGS() {
        return (int)1003L;
    }
    public static int _CS_LFS64_CFLAGS() {
        return (int)1004L;
    }
    public static int _CS_LFS64_LDFLAGS() {
        return (int)1005L;
    }
    public static int _CS_LFS64_LIBS() {
        return (int)1006L;
    }
    public static int _CS_LFS64_LINTFLAGS() {
        return (int)1007L;
    }
    public static int _CS_XBS5_ILP32_OFF32_CFLAGS() {
        return (int)1100L;
    }
    public static int _CS_XBS5_ILP32_OFF32_LDFLAGS() {
        return (int)1101L;
    }
    public static int _CS_XBS5_ILP32_OFF32_LIBS() {
        return (int)1102L;
    }
    public static int _CS_XBS5_ILP32_OFF32_LINTFLAGS() {
        return (int)1103L;
    }
    public static int _CS_XBS5_ILP32_OFFBIG_CFLAGS() {
        return (int)1104L;
    }
    public static int _CS_XBS5_ILP32_OFFBIG_LDFLAGS() {
        return (int)1105L;
    }
    public static int _CS_XBS5_ILP32_OFFBIG_LIBS() {
        return (int)1106L;
    }
    public static int _CS_XBS5_ILP32_OFFBIG_LINTFLAGS() {
        return (int)1107L;
    }
    public static int _CS_XBS5_LP64_OFF64_CFLAGS() {
        return (int)1108L;
    }
    public static int _CS_XBS5_LP64_OFF64_LDFLAGS() {
        return (int)1109L;
    }
    public static int _CS_XBS5_LP64_OFF64_LIBS() {
        return (int)1110L;
    }
    public static int _CS_XBS5_LP64_OFF64_LINTFLAGS() {
        return (int)1111L;
    }
    public static int _CS_XBS5_LPBIG_OFFBIG_CFLAGS() {
        return (int)1112L;
    }
    public static int _CS_XBS5_LPBIG_OFFBIG_LDFLAGS() {
        return (int)1113L;
    }
    public static int _CS_XBS5_LPBIG_OFFBIG_LIBS() {
        return (int)1114L;
    }
    public static int _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS() {
        return (int)1115L;
    }
    public static int _CS_POSIX_V6_ILP32_OFF32_CFLAGS() {
        return (int)1116L;
    }
    public static int _CS_POSIX_V6_ILP32_OFF32_LDFLAGS() {
        return (int)1117L;
    }
    public static int _CS_POSIX_V6_ILP32_OFF32_LIBS() {
        return (int)1118L;
    }
    public static int _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS() {
        return (int)1119L;
    }
    public static int _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS() {
        return (int)1120L;
    }
    public static int _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS() {
        return (int)1121L;
    }
    public static int _CS_POSIX_V6_ILP32_OFFBIG_LIBS() {
        return (int)1122L;
    }
    public static int _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS() {
        return (int)1123L;
    }
    public static int _CS_POSIX_V6_LP64_OFF64_CFLAGS() {
        return (int)1124L;
    }
    public static int _CS_POSIX_V6_LP64_OFF64_LDFLAGS() {
        return (int)1125L;
    }
    public static int _CS_POSIX_V6_LP64_OFF64_LIBS() {
        return (int)1126L;
    }
    public static int _CS_POSIX_V6_LP64_OFF64_LINTFLAGS() {
        return (int)1127L;
    }
    public static int _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS() {
        return (int)1128L;
    }
    public static int _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS() {
        return (int)1129L;
    }
    public static int _CS_POSIX_V6_LPBIG_OFFBIG_LIBS() {
        return (int)1130L;
    }
    public static int _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS() {
        return (int)1131L;
    }
    public static int _CS_POSIX_V7_ILP32_OFF32_CFLAGS() {
        return (int)1132L;
    }
    public static int _CS_POSIX_V7_ILP32_OFF32_LDFLAGS() {
        return (int)1133L;
    }
    public static int _CS_POSIX_V7_ILP32_OFF32_LIBS() {
        return (int)1134L;
    }
    public static int _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS() {
        return (int)1135L;
    }
    public static int _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS() {
        return (int)1136L;
    }
    public static int _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS() {
        return (int)1137L;
    }
    public static int _CS_POSIX_V7_ILP32_OFFBIG_LIBS() {
        return (int)1138L;
    }
    public static int _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS() {
        return (int)1139L;
    }
    public static int _CS_POSIX_V7_LP64_OFF64_CFLAGS() {
        return (int)1140L;
    }
    public static int _CS_POSIX_V7_LP64_OFF64_LDFLAGS() {
        return (int)1141L;
    }
    public static int _CS_POSIX_V7_LP64_OFF64_LIBS() {
        return (int)1142L;
    }
    public static int _CS_POSIX_V7_LP64_OFF64_LINTFLAGS() {
        return (int)1143L;
    }
    public static int _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS() {
        return (int)1144L;
    }
    public static int _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS() {
        return (int)1145L;
    }
    public static int _CS_POSIX_V7_LPBIG_OFFBIG_LIBS() {
        return (int)1146L;
    }
    public static int _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS() {
        return (int)1147L;
    }
    public static int _CS_V6_ENV() {
        return (int)1148L;
    }
    public static int _CS_V7_ENV() {
        return (int)1149L;
    }
    public static MethodHandle pathconf$MH() {
        return RuntimeHelper.requireNonNull(constants$571.pathconf$MH,"pathconf");
    }
    public static long pathconf ( Addressable __path,  int __name) {
        var mh$ = pathconf$MH();
        try {
            return (long)mh$.invokeExact(__path, __name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fpathconf$MH() {
        return RuntimeHelper.requireNonNull(constants$571.fpathconf$MH,"fpathconf");
    }
    public static long fpathconf ( int __fd,  int __name) {
        var mh$ = fpathconf$MH();
        try {
            return (long)mh$.invokeExact(__fd, __name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sysconf$MH() {
        return RuntimeHelper.requireNonNull(constants$571.sysconf$MH,"sysconf");
    }
    public static long sysconf ( int __name) {
        var mh$ = sysconf$MH();
        try {
            return (long)mh$.invokeExact(__name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle confstr$MH() {
        return RuntimeHelper.requireNonNull(constants$571.confstr$MH,"confstr");
    }
    public static long confstr ( int __name,  Addressable __buf,  long __len) {
        var mh$ = confstr$MH();
        try {
            return (long)mh$.invokeExact(__name, __buf, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getpid$MH() {
        return RuntimeHelper.requireNonNull(constants$572.getpid$MH,"getpid");
    }
    public static int getpid () {
        var mh$ = getpid$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getppid$MH() {
        return RuntimeHelper.requireNonNull(constants$572.getppid$MH,"getppid");
    }
    public static int getppid () {
        var mh$ = getppid$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getpgrp$MH() {
        return RuntimeHelper.requireNonNull(constants$572.getpgrp$MH,"getpgrp");
    }
    public static int getpgrp () {
        var mh$ = getpgrp$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __getpgid$MH() {
        return RuntimeHelper.requireNonNull(constants$572.__getpgid$MH,"__getpgid");
    }
    public static int __getpgid ( int __pid) {
        var mh$ = __getpgid$MH();
        try {
            return (int)mh$.invokeExact(__pid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getpgid$MH() {
        return RuntimeHelper.requireNonNull(constants$572.getpgid$MH,"getpgid");
    }
    public static int getpgid ( int __pid) {
        var mh$ = getpgid$MH();
        try {
            return (int)mh$.invokeExact(__pid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setpgid$MH() {
        return RuntimeHelper.requireNonNull(constants$572.setpgid$MH,"setpgid");
    }
    public static int setpgid ( int __pid,  int __pgid) {
        var mh$ = setpgid$MH();
        try {
            return (int)mh$.invokeExact(__pid, __pgid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setpgrp$MH() {
        return RuntimeHelper.requireNonNull(constants$573.setpgrp$MH,"setpgrp");
    }
    public static int setpgrp () {
        var mh$ = setpgrp$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setsid$MH() {
        return RuntimeHelper.requireNonNull(constants$573.setsid$MH,"setsid");
    }
    public static int setsid () {
        var mh$ = setsid$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getsid$MH() {
        return RuntimeHelper.requireNonNull(constants$573.getsid$MH,"getsid");
    }
    public static int getsid ( int __pid) {
        var mh$ = getsid$MH();
        try {
            return (int)mh$.invokeExact(__pid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getuid$MH() {
        return RuntimeHelper.requireNonNull(constants$573.getuid$MH,"getuid");
    }
    public static int getuid () {
        var mh$ = getuid$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle geteuid$MH() {
        return RuntimeHelper.requireNonNull(constants$573.geteuid$MH,"geteuid");
    }
    public static int geteuid () {
        var mh$ = geteuid$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getgid$MH() {
        return RuntimeHelper.requireNonNull(constants$573.getgid$MH,"getgid");
    }
    public static int getgid () {
        var mh$ = getgid$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getegid$MH() {
        return RuntimeHelper.requireNonNull(constants$574.getegid$MH,"getegid");
    }
    public static int getegid () {
        var mh$ = getegid$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getgroups$MH() {
        return RuntimeHelper.requireNonNull(constants$574.getgroups$MH,"getgroups");
    }
    public static int getgroups ( int __size,  Addressable __list) {
        var mh$ = getgroups$MH();
        try {
            return (int)mh$.invokeExact(__size, __list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setuid$MH() {
        return RuntimeHelper.requireNonNull(constants$574.setuid$MH,"setuid");
    }
    public static int setuid ( int __uid) {
        var mh$ = setuid$MH();
        try {
            return (int)mh$.invokeExact(__uid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setreuid$MH() {
        return RuntimeHelper.requireNonNull(constants$574.setreuid$MH,"setreuid");
    }
    public static int setreuid ( int __ruid,  int __euid) {
        var mh$ = setreuid$MH();
        try {
            return (int)mh$.invokeExact(__ruid, __euid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle seteuid$MH() {
        return RuntimeHelper.requireNonNull(constants$574.seteuid$MH,"seteuid");
    }
    public static int seteuid ( int __uid) {
        var mh$ = seteuid$MH();
        try {
            return (int)mh$.invokeExact(__uid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setgid$MH() {
        return RuntimeHelper.requireNonNull(constants$574.setgid$MH,"setgid");
    }
    public static int setgid ( int __gid) {
        var mh$ = setgid$MH();
        try {
            return (int)mh$.invokeExact(__gid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setregid$MH() {
        return RuntimeHelper.requireNonNull(constants$575.setregid$MH,"setregid");
    }
    public static int setregid ( int __rgid,  int __egid) {
        var mh$ = setregid$MH();
        try {
            return (int)mh$.invokeExact(__rgid, __egid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setegid$MH() {
        return RuntimeHelper.requireNonNull(constants$575.setegid$MH,"setegid");
    }
    public static int setegid ( int __gid) {
        var mh$ = setegid$MH();
        try {
            return (int)mh$.invokeExact(__gid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fork$MH() {
        return RuntimeHelper.requireNonNull(constants$575.fork$MH,"fork");
    }
    public static int fork () {
        var mh$ = fork$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfork$MH() {
        return RuntimeHelper.requireNonNull(constants$575.vfork$MH,"vfork");
    }
    public static int vfork () {
        var mh$ = vfork$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ttyname$MH() {
        return RuntimeHelper.requireNonNull(constants$575.ttyname$MH,"ttyname");
    }
    public static MemoryAddress ttyname ( int __fd) {
        var mh$ = ttyname$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ttyname_r$MH() {
        return RuntimeHelper.requireNonNull(constants$575.ttyname_r$MH,"ttyname_r");
    }
    public static int ttyname_r ( int __fd,  Addressable __buf,  long __buflen) {
        var mh$ = ttyname_r$MH();
        try {
            return (int)mh$.invokeExact(__fd, __buf, __buflen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isatty$MH() {
        return RuntimeHelper.requireNonNull(constants$576.isatty$MH,"isatty");
    }
    public static int isatty ( int __fd) {
        var mh$ = isatty$MH();
        try {
            return (int)mh$.invokeExact(__fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ttyslot$MH() {
        return RuntimeHelper.requireNonNull(constants$576.ttyslot$MH,"ttyslot");
    }
    public static int ttyslot () {
        var mh$ = ttyslot$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle link$MH() {
        return RuntimeHelper.requireNonNull(constants$576.link$MH,"link");
    }
    public static int link ( Addressable __from,  Addressable __to) {
        var mh$ = link$MH();
        try {
            return (int)mh$.invokeExact(__from, __to);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle linkat$MH() {
        return RuntimeHelper.requireNonNull(constants$576.linkat$MH,"linkat");
    }
    public static int linkat ( int __fromfd,  Addressable __from,  int __tofd,  Addressable __to,  int __flags) {
        var mh$ = linkat$MH();
        try {
            return (int)mh$.invokeExact(__fromfd, __from, __tofd, __to, __flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


