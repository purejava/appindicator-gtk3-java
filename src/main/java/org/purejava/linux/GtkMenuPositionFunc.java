// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface GtkMenuPositionFunc {

    void apply(java.lang.foreign.MemoryAddress menu, java.lang.foreign.MemoryAddress x, java.lang.foreign.MemoryAddress y, java.lang.foreign.MemoryAddress push_in, java.lang.foreign.MemoryAddress user_data);
    static MemorySegment allocate(GtkMenuPositionFunc fi, MemorySession session) {
        return RuntimeHelper.upcallStub(GtkMenuPositionFunc.class, fi, constants$1517.GtkMenuPositionFunc$FUNC, session);
    }
    static GtkMenuPositionFunc ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _menu, java.lang.foreign.MemoryAddress _x, java.lang.foreign.MemoryAddress _y, java.lang.foreign.MemoryAddress _push_in, java.lang.foreign.MemoryAddress _user_data) -> {
            try {
                constants$1517.GtkMenuPositionFunc$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_menu, (java.lang.foreign.Addressable)_x, (java.lang.foreign.Addressable)_y, (java.lang.foreign.Addressable)_push_in, (java.lang.foreign.Addressable)_user_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


