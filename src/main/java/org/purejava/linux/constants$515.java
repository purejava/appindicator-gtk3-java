// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$515 {

    static final FunctionDescriptor glib_listautoptr_cleanup_GTypeClass$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_listautoptr_cleanup_GTypeClass$MH = RuntimeHelper.downcallHandle(
        "glib_listautoptr_cleanup_GTypeClass",
        constants$515.glib_listautoptr_cleanup_GTypeClass$FUNC
    );
    static final FunctionDescriptor glib_slistautoptr_cleanup_GTypeClass$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_slistautoptr_cleanup_GTypeClass$MH = RuntimeHelper.downcallHandle(
        "glib_slistautoptr_cleanup_GTypeClass",
        constants$515.glib_slistautoptr_cleanup_GTypeClass$FUNC
    );
    static final FunctionDescriptor glib_queueautoptr_cleanup_GTypeClass$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_queueautoptr_cleanup_GTypeClass$MH = RuntimeHelper.downcallHandle(
        "glib_queueautoptr_cleanup_GTypeClass",
        constants$515.glib_queueautoptr_cleanup_GTypeClass$FUNC
    );
    static final FunctionDescriptor glib_auto_cleanup_GValue$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_auto_cleanup_GValue$MH = RuntimeHelper.downcallHandle(
        "glib_auto_cleanup_GValue",
        constants$515.glib_auto_cleanup_GValue$FUNC
    );
    static final FunctionDescriptor GAsyncReadyCallback$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GAsyncReadyCallback$MH = RuntimeHelper.downcallHandle(
        constants$515.GAsyncReadyCallback$FUNC
    );
}


