// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$1933 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$1933() {}
    static final FunctionDescriptor gtk_symbolic_color_new_win32$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle gtk_symbolic_color_new_win32$MH = RuntimeHelper.downcallHandle(
        "gtk_symbolic_color_new_win32",
        constants$1933.gtk_symbolic_color_new_win32$FUNC
    );
    static final FunctionDescriptor gtk_symbolic_color_ref$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_symbolic_color_ref$MH = RuntimeHelper.downcallHandle(
        "gtk_symbolic_color_ref",
        constants$1933.gtk_symbolic_color_ref$FUNC
    );
    static final FunctionDescriptor gtk_symbolic_color_unref$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_symbolic_color_unref$MH = RuntimeHelper.downcallHandle(
        "gtk_symbolic_color_unref",
        constants$1933.gtk_symbolic_color_unref$FUNC
    );
    static final FunctionDescriptor gtk_symbolic_color_to_string$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_symbolic_color_to_string$MH = RuntimeHelper.downcallHandle(
        "gtk_symbolic_color_to_string",
        constants$1933.gtk_symbolic_color_to_string$FUNC
    );
    static final FunctionDescriptor gtk_symbolic_color_resolve$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_symbolic_color_resolve$MH = RuntimeHelper.downcallHandle(
        "gtk_symbolic_color_resolve",
        constants$1933.gtk_symbolic_color_resolve$FUNC
    );
    static final FunctionDescriptor gtk_gradient_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle gtk_gradient_get_type$MH = RuntimeHelper.downcallHandle(
        "gtk_gradient_get_type",
        constants$1933.gtk_gradient_get_type$FUNC
    );
}


