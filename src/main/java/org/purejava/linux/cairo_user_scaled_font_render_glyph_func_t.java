// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * enum _cairo_status (*cairo_user_scaled_font_render_glyph_func_t)(struct _cairo_scaled_font* scaled_font,unsigned long glyph,struct _cairo* cr,struct * extents);
 * }
 */
public interface cairo_user_scaled_font_render_glyph_func_t {

    int apply(java.lang.foreign.MemorySegment scaled_font, long glyph, java.lang.foreign.MemorySegment cr, java.lang.foreign.MemorySegment extents);
    static MemorySegment allocate(cairo_user_scaled_font_render_glyph_func_t fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$1019.cairo_user_scaled_font_render_glyph_func_t_UP$MH, fi, constants$1019.cairo_user_scaled_font_render_glyph_func_t$FUNC, scope);
    }
    static cairo_user_scaled_font_render_glyph_func_t ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _scaled_font, long _glyph, java.lang.foreign.MemorySegment _cr, java.lang.foreign.MemorySegment _extents) -> {
            try {
                return (int)constants$1019.cairo_user_scaled_font_render_glyph_func_t_DOWN$MH.invokeExact(symbol, _scaled_font, _glyph, _cr, _extents);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


