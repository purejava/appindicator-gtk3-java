// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$68 {

    static final FunctionDescriptor g_async_queue_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle g_async_queue_new$MH = RuntimeHelper.downcallHandle(
        "g_async_queue_new",
        constants$68.g_async_queue_new$FUNC
    );
    static final FunctionDescriptor g_async_queue_new_full$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_async_queue_new_full$MH = RuntimeHelper.downcallHandle(
        "g_async_queue_new_full",
        constants$68.g_async_queue_new_full$FUNC
    );
    static final FunctionDescriptor g_async_queue_lock$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_async_queue_lock$MH = RuntimeHelper.downcallHandle(
        "g_async_queue_lock",
        constants$68.g_async_queue_lock$FUNC
    );
    static final FunctionDescriptor g_async_queue_unlock$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_async_queue_unlock$MH = RuntimeHelper.downcallHandle(
        "g_async_queue_unlock",
        constants$68.g_async_queue_unlock$FUNC
    );
    static final FunctionDescriptor g_async_queue_ref$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_async_queue_ref$MH = RuntimeHelper.downcallHandle(
        "g_async_queue_ref",
        constants$68.g_async_queue_ref$FUNC
    );
    static final FunctionDescriptor g_async_queue_unref$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_async_queue_unref$MH = RuntimeHelper.downcallHandle(
        "g_async_queue_unref",
        constants$68.g_async_queue_unref$FUNC
    );
}


