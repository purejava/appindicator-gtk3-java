// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _GInterfaceInfo {
 *     GInterfaceInitFunc interface_init;
 *     GInterfaceFinalizeFunc interface_finalize;
 *     gpointer interface_data;
 * };
 * }
 */
public class _GInterfaceInfo {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("interface_init"),
        Constants$root.C_POINTER$LAYOUT.withName("interface_finalize"),
        Constants$root.C_POINTER$LAYOUT.withName("interface_data")
    ).withName("_GInterfaceInfo");
    public static MemoryLayout $LAYOUT() {
        return _GInterfaceInfo.$struct$LAYOUT;
    }
    static final VarHandle interface_init$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("interface_init"));
    public static VarHandle interface_init$VH() {
        return _GInterfaceInfo.interface_init$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * GInterfaceInitFunc interface_init;
     * }
     */
    public static MemorySegment interface_init$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GInterfaceInfo.interface_init$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * GInterfaceInitFunc interface_init;
     * }
     */
    public static void interface_init$set(MemorySegment seg, MemorySegment x) {
        _GInterfaceInfo.interface_init$VH.set(seg, x);
    }
    public static MemorySegment interface_init$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GInterfaceInfo.interface_init$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void interface_init$set(MemorySegment seg, long index, MemorySegment x) {
        _GInterfaceInfo.interface_init$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static GInterfaceInitFunc interface_init(MemorySegment segment, SegmentScope scope) {
        return GInterfaceInitFunc.ofAddress(interface_init$get(segment), scope);
    }
    static final VarHandle interface_finalize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("interface_finalize"));
    public static VarHandle interface_finalize$VH() {
        return _GInterfaceInfo.interface_finalize$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * GInterfaceFinalizeFunc interface_finalize;
     * }
     */
    public static MemorySegment interface_finalize$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GInterfaceInfo.interface_finalize$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * GInterfaceFinalizeFunc interface_finalize;
     * }
     */
    public static void interface_finalize$set(MemorySegment seg, MemorySegment x) {
        _GInterfaceInfo.interface_finalize$VH.set(seg, x);
    }
    public static MemorySegment interface_finalize$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GInterfaceInfo.interface_finalize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void interface_finalize$set(MemorySegment seg, long index, MemorySegment x) {
        _GInterfaceInfo.interface_finalize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static GInterfaceFinalizeFunc interface_finalize(MemorySegment segment, SegmentScope scope) {
        return GInterfaceFinalizeFunc.ofAddress(interface_finalize$get(segment), scope);
    }
    static final VarHandle interface_data$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("interface_data"));
    public static VarHandle interface_data$VH() {
        return _GInterfaceInfo.interface_data$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * gpointer interface_data;
     * }
     */
    public static MemorySegment interface_data$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GInterfaceInfo.interface_data$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * gpointer interface_data;
     * }
     */
    public static void interface_data$set(MemorySegment seg, MemorySegment x) {
        _GInterfaceInfo.interface_data$VH.set(seg, x);
    }
    public static MemorySegment interface_data$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GInterfaceInfo.interface_data$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void interface_data$set(MemorySegment seg, long index, MemorySegment x) {
        _GInterfaceInfo.interface_data$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


