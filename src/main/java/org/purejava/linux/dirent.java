// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct dirent {
 *     __ino_t d_ino;
 *     __off_t d_off;
 *     unsigned short d_reclen;
 *     unsigned char d_type;
 *     char d_name[256];
 * };
 * }
 */
public class dirent {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG_LONG$LAYOUT.withName("d_ino"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("d_off"),
        Constants$root.C_SHORT$LAYOUT.withName("d_reclen"),
        Constants$root.C_CHAR$LAYOUT.withName("d_type"),
        MemoryLayout.sequenceLayout(256, Constants$root.C_CHAR$LAYOUT).withName("d_name"),
        MemoryLayout.paddingLayout(40)
    ).withName("dirent");
    public static MemoryLayout $LAYOUT() {
        return dirent.$struct$LAYOUT;
    }
    static final VarHandle d_ino$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("d_ino"));
    public static VarHandle d_ino$VH() {
        return dirent.d_ino$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * __ino_t d_ino;
     * }
     */
    public static long d_ino$get(MemorySegment seg) {
        return (long)dirent.d_ino$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * __ino_t d_ino;
     * }
     */
    public static void d_ino$set(MemorySegment seg, long x) {
        dirent.d_ino$VH.set(seg, x);
    }
    public static long d_ino$get(MemorySegment seg, long index) {
        return (long)dirent.d_ino$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void d_ino$set(MemorySegment seg, long index, long x) {
        dirent.d_ino$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle d_off$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("d_off"));
    public static VarHandle d_off$VH() {
        return dirent.d_off$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * __off_t d_off;
     * }
     */
    public static long d_off$get(MemorySegment seg) {
        return (long)dirent.d_off$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * __off_t d_off;
     * }
     */
    public static void d_off$set(MemorySegment seg, long x) {
        dirent.d_off$VH.set(seg, x);
    }
    public static long d_off$get(MemorySegment seg, long index) {
        return (long)dirent.d_off$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void d_off$set(MemorySegment seg, long index, long x) {
        dirent.d_off$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle d_reclen$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("d_reclen"));
    public static VarHandle d_reclen$VH() {
        return dirent.d_reclen$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned short d_reclen;
     * }
     */
    public static short d_reclen$get(MemorySegment seg) {
        return (short)dirent.d_reclen$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned short d_reclen;
     * }
     */
    public static void d_reclen$set(MemorySegment seg, short x) {
        dirent.d_reclen$VH.set(seg, x);
    }
    public static short d_reclen$get(MemorySegment seg, long index) {
        return (short)dirent.d_reclen$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void d_reclen$set(MemorySegment seg, long index, short x) {
        dirent.d_reclen$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle d_type$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("d_type"));
    public static VarHandle d_type$VH() {
        return dirent.d_type$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char d_type;
     * }
     */
    public static byte d_type$get(MemorySegment seg) {
        return (byte)dirent.d_type$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char d_type;
     * }
     */
    public static void d_type$set(MemorySegment seg, byte x) {
        dirent.d_type$VH.set(seg, x);
    }
    public static byte d_type$get(MemorySegment seg, long index) {
        return (byte)dirent.d_type$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void d_type$set(MemorySegment seg, long index, byte x) {
        dirent.d_type$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment d_name$slice(MemorySegment seg) {
        return seg.asSlice(19, 256);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


