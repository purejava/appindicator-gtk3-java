// Generated by jextract

package org.purejava.linux;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class app_indicator_h_14 extends app_indicator_h_13 {

    /**
     * {@snippet :
     * enum .ATK_ROLE_CHECK_MENU_ITEM = 8;
     * }
     */
    public static int ATK_ROLE_CHECK_MENU_ITEM() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_COLOR_CHOOSER = 9;
     * }
     */
    public static int ATK_ROLE_COLOR_CHOOSER() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_COLUMN_HEADER = 10;
     * }
     */
    public static int ATK_ROLE_COLUMN_HEADER() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_COMBO_BOX = 11;
     * }
     */
    public static int ATK_ROLE_COMBO_BOX() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_DATE_EDITOR = 12;
     * }
     */
    public static int ATK_ROLE_DATE_EDITOR() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_DESKTOP_ICON = 13;
     * }
     */
    public static int ATK_ROLE_DESKTOP_ICON() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_DESKTOP_FRAME = 14;
     * }
     */
    public static int ATK_ROLE_DESKTOP_FRAME() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_DIAL = 15;
     * }
     */
    public static int ATK_ROLE_DIAL() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_DIALOG = 16;
     * }
     */
    public static int ATK_ROLE_DIALOG() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_DIRECTORY_PANE = 17;
     * }
     */
    public static int ATK_ROLE_DIRECTORY_PANE() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_DRAWING_AREA = 18;
     * }
     */
    public static int ATK_ROLE_DRAWING_AREA() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_FILE_CHOOSER = 19;
     * }
     */
    public static int ATK_ROLE_FILE_CHOOSER() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_FILLER = 20;
     * }
     */
    public static int ATK_ROLE_FILLER() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_FONT_CHOOSER = 21;
     * }
     */
    public static int ATK_ROLE_FONT_CHOOSER() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_FRAME = 22;
     * }
     */
    public static int ATK_ROLE_FRAME() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_GLASS_PANE = 23;
     * }
     */
    public static int ATK_ROLE_GLASS_PANE() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_HTML_CONTAINER = 24;
     * }
     */
    public static int ATK_ROLE_HTML_CONTAINER() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_ICON = 25;
     * }
     */
    public static int ATK_ROLE_ICON() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_IMAGE = 26;
     * }
     */
    public static int ATK_ROLE_IMAGE() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_INTERNAL_FRAME = 27;
     * }
     */
    public static int ATK_ROLE_INTERNAL_FRAME() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_LABEL = 28;
     * }
     */
    public static int ATK_ROLE_LABEL() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_LAYERED_PANE = 29;
     * }
     */
    public static int ATK_ROLE_LAYERED_PANE() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_LIST = 30;
     * }
     */
    public static int ATK_ROLE_LIST() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_LIST_ITEM = 31;
     * }
     */
    public static int ATK_ROLE_LIST_ITEM() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_MENU = 32;
     * }
     */
    public static int ATK_ROLE_MENU() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_MENU_BAR = 33;
     * }
     */
    public static int ATK_ROLE_MENU_BAR() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_MENU_ITEM = 34;
     * }
     */
    public static int ATK_ROLE_MENU_ITEM() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_OPTION_PANE = 35;
     * }
     */
    public static int ATK_ROLE_OPTION_PANE() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_PAGE_TAB = 36;
     * }
     */
    public static int ATK_ROLE_PAGE_TAB() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_PAGE_TAB_LIST = 37;
     * }
     */
    public static int ATK_ROLE_PAGE_TAB_LIST() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_PANEL = 38;
     * }
     */
    public static int ATK_ROLE_PANEL() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_PASSWORD_TEXT = 39;
     * }
     */
    public static int ATK_ROLE_PASSWORD_TEXT() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_POPUP_MENU = 40;
     * }
     */
    public static int ATK_ROLE_POPUP_MENU() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_PROGRESS_BAR = 41;
     * }
     */
    public static int ATK_ROLE_PROGRESS_BAR() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_PUSH_BUTTON = 42;
     * }
     */
    public static int ATK_ROLE_PUSH_BUTTON() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_RADIO_BUTTON = 43;
     * }
     */
    public static int ATK_ROLE_RADIO_BUTTON() {
        return (int)43L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_RADIO_MENU_ITEM = 44;
     * }
     */
    public static int ATK_ROLE_RADIO_MENU_ITEM() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_ROOT_PANE = 45;
     * }
     */
    public static int ATK_ROLE_ROOT_PANE() {
        return (int)45L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_ROW_HEADER = 46;
     * }
     */
    public static int ATK_ROLE_ROW_HEADER() {
        return (int)46L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_SCROLL_BAR = 47;
     * }
     */
    public static int ATK_ROLE_SCROLL_BAR() {
        return (int)47L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_SCROLL_PANE = 48;
     * }
     */
    public static int ATK_ROLE_SCROLL_PANE() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_SEPARATOR = 49;
     * }
     */
    public static int ATK_ROLE_SEPARATOR() {
        return (int)49L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_SLIDER = 50;
     * }
     */
    public static int ATK_ROLE_SLIDER() {
        return (int)50L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_SPLIT_PANE = 51;
     * }
     */
    public static int ATK_ROLE_SPLIT_PANE() {
        return (int)51L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_SPIN_BUTTON = 52;
     * }
     */
    public static int ATK_ROLE_SPIN_BUTTON() {
        return (int)52L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_STATUSBAR = 53;
     * }
     */
    public static int ATK_ROLE_STATUSBAR() {
        return (int)53L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_TABLE = 54;
     * }
     */
    public static int ATK_ROLE_TABLE() {
        return (int)54L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_TABLE_CELL = 55;
     * }
     */
    public static int ATK_ROLE_TABLE_CELL() {
        return (int)55L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_TABLE_COLUMN_HEADER = 56;
     * }
     */
    public static int ATK_ROLE_TABLE_COLUMN_HEADER() {
        return (int)56L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_TABLE_ROW_HEADER = 57;
     * }
     */
    public static int ATK_ROLE_TABLE_ROW_HEADER() {
        return (int)57L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_TEAR_OFF_MENU_ITEM = 58;
     * }
     */
    public static int ATK_ROLE_TEAR_OFF_MENU_ITEM() {
        return (int)58L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_TERMINAL = 59;
     * }
     */
    public static int ATK_ROLE_TERMINAL() {
        return (int)59L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_TEXT = 60;
     * }
     */
    public static int ATK_ROLE_TEXT() {
        return (int)60L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_TOGGLE_BUTTON = 61;
     * }
     */
    public static int ATK_ROLE_TOGGLE_BUTTON() {
        return (int)61L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_TOOL_BAR = 62;
     * }
     */
    public static int ATK_ROLE_TOOL_BAR() {
        return (int)62L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_TOOL_TIP = 63;
     * }
     */
    public static int ATK_ROLE_TOOL_TIP() {
        return (int)63L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_TREE = 64;
     * }
     */
    public static int ATK_ROLE_TREE() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_TREE_TABLE = 65;
     * }
     */
    public static int ATK_ROLE_TREE_TABLE() {
        return (int)65L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_UNKNOWN = 66;
     * }
     */
    public static int ATK_ROLE_UNKNOWN() {
        return (int)66L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_VIEWPORT = 67;
     * }
     */
    public static int ATK_ROLE_VIEWPORT() {
        return (int)67L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_WINDOW = 68;
     * }
     */
    public static int ATK_ROLE_WINDOW() {
        return (int)68L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_HEADER = 69;
     * }
     */
    public static int ATK_ROLE_HEADER() {
        return (int)69L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_FOOTER = 70;
     * }
     */
    public static int ATK_ROLE_FOOTER() {
        return (int)70L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_PARAGRAPH = 71;
     * }
     */
    public static int ATK_ROLE_PARAGRAPH() {
        return (int)71L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_RULER = 72;
     * }
     */
    public static int ATK_ROLE_RULER() {
        return (int)72L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_APPLICATION = 73;
     * }
     */
    public static int ATK_ROLE_APPLICATION() {
        return (int)73L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_AUTOCOMPLETE = 74;
     * }
     */
    public static int ATK_ROLE_AUTOCOMPLETE() {
        return (int)74L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_EDITBAR = 75;
     * }
     */
    public static int ATK_ROLE_EDITBAR() {
        return (int)75L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_EMBEDDED = 76;
     * }
     */
    public static int ATK_ROLE_EMBEDDED() {
        return (int)76L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_ENTRY = 77;
     * }
     */
    public static int ATK_ROLE_ENTRY() {
        return (int)77L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_CHART = 78;
     * }
     */
    public static int ATK_ROLE_CHART() {
        return (int)78L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_CAPTION = 79;
     * }
     */
    public static int ATK_ROLE_CAPTION() {
        return (int)79L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_DOCUMENT_FRAME = 80;
     * }
     */
    public static int ATK_ROLE_DOCUMENT_FRAME() {
        return (int)80L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_HEADING = 81;
     * }
     */
    public static int ATK_ROLE_HEADING() {
        return (int)81L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_PAGE = 82;
     * }
     */
    public static int ATK_ROLE_PAGE() {
        return (int)82L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_SECTION = 83;
     * }
     */
    public static int ATK_ROLE_SECTION() {
        return (int)83L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_REDUNDANT_OBJECT = 84;
     * }
     */
    public static int ATK_ROLE_REDUNDANT_OBJECT() {
        return (int)84L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_FORM = 85;
     * }
     */
    public static int ATK_ROLE_FORM() {
        return (int)85L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_LINK = 86;
     * }
     */
    public static int ATK_ROLE_LINK() {
        return (int)86L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_INPUT_METHOD_WINDOW = 87;
     * }
     */
    public static int ATK_ROLE_INPUT_METHOD_WINDOW() {
        return (int)87L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_TABLE_ROW = 88;
     * }
     */
    public static int ATK_ROLE_TABLE_ROW() {
        return (int)88L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_TREE_ITEM = 89;
     * }
     */
    public static int ATK_ROLE_TREE_ITEM() {
        return (int)89L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_DOCUMENT_SPREADSHEET = 90;
     * }
     */
    public static int ATK_ROLE_DOCUMENT_SPREADSHEET() {
        return (int)90L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_DOCUMENT_PRESENTATION = 91;
     * }
     */
    public static int ATK_ROLE_DOCUMENT_PRESENTATION() {
        return (int)91L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_DOCUMENT_TEXT = 92;
     * }
     */
    public static int ATK_ROLE_DOCUMENT_TEXT() {
        return (int)92L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_DOCUMENT_WEB = 93;
     * }
     */
    public static int ATK_ROLE_DOCUMENT_WEB() {
        return (int)93L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_DOCUMENT_EMAIL = 94;
     * }
     */
    public static int ATK_ROLE_DOCUMENT_EMAIL() {
        return (int)94L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_COMMENT = 95;
     * }
     */
    public static int ATK_ROLE_COMMENT() {
        return (int)95L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_LIST_BOX = 96;
     * }
     */
    public static int ATK_ROLE_LIST_BOX() {
        return (int)96L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_GROUPING = 97;
     * }
     */
    public static int ATK_ROLE_GROUPING() {
        return (int)97L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_IMAGE_MAP = 98;
     * }
     */
    public static int ATK_ROLE_IMAGE_MAP() {
        return (int)98L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_NOTIFICATION = 99;
     * }
     */
    public static int ATK_ROLE_NOTIFICATION() {
        return (int)99L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_INFO_BAR = 100;
     * }
     */
    public static int ATK_ROLE_INFO_BAR() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_LEVEL_BAR = 101;
     * }
     */
    public static int ATK_ROLE_LEVEL_BAR() {
        return (int)101L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_TITLE_BAR = 102;
     * }
     */
    public static int ATK_ROLE_TITLE_BAR() {
        return (int)102L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_BLOCK_QUOTE = 103;
     * }
     */
    public static int ATK_ROLE_BLOCK_QUOTE() {
        return (int)103L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_AUDIO = 104;
     * }
     */
    public static int ATK_ROLE_AUDIO() {
        return (int)104L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_VIDEO = 105;
     * }
     */
    public static int ATK_ROLE_VIDEO() {
        return (int)105L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_DEFINITION = 106;
     * }
     */
    public static int ATK_ROLE_DEFINITION() {
        return (int)106L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_ARTICLE = 107;
     * }
     */
    public static int ATK_ROLE_ARTICLE() {
        return (int)107L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_LANDMARK = 108;
     * }
     */
    public static int ATK_ROLE_LANDMARK() {
        return (int)108L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_LOG = 109;
     * }
     */
    public static int ATK_ROLE_LOG() {
        return (int)109L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_MARQUEE = 110;
     * }
     */
    public static int ATK_ROLE_MARQUEE() {
        return (int)110L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_MATH = 111;
     * }
     */
    public static int ATK_ROLE_MATH() {
        return (int)111L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_RATING = 112;
     * }
     */
    public static int ATK_ROLE_RATING() {
        return (int)112L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_TIMER = 113;
     * }
     */
    public static int ATK_ROLE_TIMER() {
        return (int)113L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_DESCRIPTION_LIST = 114;
     * }
     */
    public static int ATK_ROLE_DESCRIPTION_LIST() {
        return (int)114L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_DESCRIPTION_TERM = 115;
     * }
     */
    public static int ATK_ROLE_DESCRIPTION_TERM() {
        return (int)115L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_DESCRIPTION_VALUE = 116;
     * }
     */
    public static int ATK_ROLE_DESCRIPTION_VALUE() {
        return (int)116L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_STATIC = 117;
     * }
     */
    public static int ATK_ROLE_STATIC() {
        return (int)117L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_MATH_FRACTION = 118;
     * }
     */
    public static int ATK_ROLE_MATH_FRACTION() {
        return (int)118L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_MATH_ROOT = 119;
     * }
     */
    public static int ATK_ROLE_MATH_ROOT() {
        return (int)119L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_SUBSCRIPT = 120;
     * }
     */
    public static int ATK_ROLE_SUBSCRIPT() {
        return (int)120L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_SUPERSCRIPT = 121;
     * }
     */
    public static int ATK_ROLE_SUPERSCRIPT() {
        return (int)121L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_FOOTNOTE = 122;
     * }
     */
    public static int ATK_ROLE_FOOTNOTE() {
        return (int)122L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_CONTENT_DELETION = 123;
     * }
     */
    public static int ATK_ROLE_CONTENT_DELETION() {
        return (int)123L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_CONTENT_INSERTION = 124;
     * }
     */
    public static int ATK_ROLE_CONTENT_INSERTION() {
        return (int)124L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_MARK = 125;
     * }
     */
    public static int ATK_ROLE_MARK() {
        return (int)125L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_SUGGESTION = 126;
     * }
     */
    public static int ATK_ROLE_SUGGESTION() {
        return (int)126L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_PUSH_BUTTON_MENU = 127;
     * }
     */
    public static int ATK_ROLE_PUSH_BUTTON_MENU() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * enum .ATK_ROLE_LAST_DEFINED = 128;
     * }
     */
    public static int ATK_ROLE_LAST_DEFINED() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum .ATK_LAYER_INVALID = 0;
     * }
     */
    public static int ATK_LAYER_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .ATK_LAYER_BACKGROUND = 1;
     * }
     */
    public static int ATK_LAYER_BACKGROUND() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .ATK_LAYER_CANVAS = 2;
     * }
     */
    public static int ATK_LAYER_CANVAS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .ATK_LAYER_WIDGET = 3;
     * }
     */
    public static int ATK_LAYER_WIDGET() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .ATK_LAYER_MDI = 4;
     * }
     */
    public static int ATK_LAYER_MDI() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .ATK_LAYER_POPUP = 5;
     * }
     */
    public static int ATK_LAYER_POPUP() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .ATK_LAYER_OVERLAY = 6;
     * }
     */
    public static int ATK_LAYER_OVERLAY() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .ATK_LAYER_WINDOW = 7;
     * }
     */
    public static int ATK_LAYER_WINDOW() {
        return (int)7L;
    }
    public static MethodHandle atk_object_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1199.atk_object_get_type$MH,"atk_object_get_type");
    }
    /**
     * {@snippet :
     * GType atk_object_get_type();
     * }
     */
    public static long atk_object_get_type() {
        var mh$ = atk_object_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_implementor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1200.atk_implementor_get_type$MH,"atk_implementor_get_type");
    }
    /**
     * {@snippet :
     * GType atk_implementor_get_type();
     * }
     */
    public static long atk_implementor_get_type() {
        var mh$ = atk_implementor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_implementor_ref_accessible$MH() {
        return RuntimeHelper.requireNonNull(constants$1200.atk_implementor_ref_accessible$MH,"atk_implementor_ref_accessible");
    }
    /**
     * {@snippet :
     * AtkObject* atk_implementor_ref_accessible(AtkImplementor* implementor);
     * }
     */
    public static MemorySegment atk_implementor_ref_accessible(MemorySegment implementor) {
        var mh$ = atk_implementor_ref_accessible$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(implementor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1200.atk_object_get_name$MH,"atk_object_get_name");
    }
    /**
     * {@snippet :
     * const gchar* atk_object_get_name(AtkObject* accessible);
     * }
     */
    public static MemorySegment atk_object_get_name(MemorySegment accessible) {
        var mh$ = atk_object_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1200.atk_object_get_description$MH,"atk_object_get_description");
    }
    /**
     * {@snippet :
     * const gchar* atk_object_get_description(AtkObject* accessible);
     * }
     */
    public static MemorySegment atk_object_get_description(MemorySegment accessible) {
        var mh$ = atk_object_get_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1200.atk_object_get_parent$MH,"atk_object_get_parent");
    }
    /**
     * {@snippet :
     * AtkObject* atk_object_get_parent(AtkObject* accessible);
     * }
     */
    public static MemorySegment atk_object_get_parent(MemorySegment accessible) {
        var mh$ = atk_object_get_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_peek_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1200.atk_object_peek_parent$MH,"atk_object_peek_parent");
    }
    /**
     * {@snippet :
     * AtkObject* atk_object_peek_parent(AtkObject* accessible);
     * }
     */
    public static MemorySegment atk_object_peek_parent(MemorySegment accessible) {
        var mh$ = atk_object_peek_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_n_accessible_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1201.atk_object_get_n_accessible_children$MH,"atk_object_get_n_accessible_children");
    }
    /**
     * {@snippet :
     * gint atk_object_get_n_accessible_children(AtkObject* accessible);
     * }
     */
    public static int atk_object_get_n_accessible_children(MemorySegment accessible) {
        var mh$ = atk_object_get_n_accessible_children$MH();
        try {
            return (int)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_ref_accessible_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1201.atk_object_ref_accessible_child$MH,"atk_object_ref_accessible_child");
    }
    /**
     * {@snippet :
     * AtkObject* atk_object_ref_accessible_child(AtkObject* accessible, gint i);
     * }
     */
    public static MemorySegment atk_object_ref_accessible_child(MemorySegment accessible, int i) {
        var mh$ = atk_object_ref_accessible_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_ref_relation_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1201.atk_object_ref_relation_set$MH,"atk_object_ref_relation_set");
    }
    /**
     * {@snippet :
     * AtkRelationSet* atk_object_ref_relation_set(AtkObject* accessible);
     * }
     */
    public static MemorySegment atk_object_ref_relation_set(MemorySegment accessible) {
        var mh$ = atk_object_ref_relation_set$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_role$MH() {
        return RuntimeHelper.requireNonNull(constants$1201.atk_object_get_role$MH,"atk_object_get_role");
    }
    /**
     * {@snippet :
     * AtkRole atk_object_get_role(AtkObject* accessible);
     * }
     */
    public static int atk_object_get_role(MemorySegment accessible) {
        var mh$ = atk_object_get_role$MH();
        try {
            return (int)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_layer$MH() {
        return RuntimeHelper.requireNonNull(constants$1201.atk_object_get_layer$MH,"atk_object_get_layer");
    }
    /**
     * {@snippet :
     * AtkLayer atk_object_get_layer(AtkObject* accessible);
     * }
     */
    public static int atk_object_get_layer(MemorySegment accessible) {
        var mh$ = atk_object_get_layer$MH();
        try {
            return (int)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_mdi_zorder$MH() {
        return RuntimeHelper.requireNonNull(constants$1201.atk_object_get_mdi_zorder$MH,"atk_object_get_mdi_zorder");
    }
    /**
     * {@snippet :
     * gint atk_object_get_mdi_zorder(AtkObject* accessible);
     * }
     */
    public static int atk_object_get_mdi_zorder(MemorySegment accessible) {
        var mh$ = atk_object_get_mdi_zorder$MH();
        try {
            return (int)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1202.atk_object_get_attributes$MH,"atk_object_get_attributes");
    }
    /**
     * {@snippet :
     * AtkAttributeSet* atk_object_get_attributes(AtkObject* accessible);
     * }
     */
    public static MemorySegment atk_object_get_attributes(MemorySegment accessible) {
        var mh$ = atk_object_get_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_ref_state_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1202.atk_object_ref_state_set$MH,"atk_object_ref_state_set");
    }
    /**
     * {@snippet :
     * AtkStateSet* atk_object_ref_state_set(AtkObject* accessible);
     * }
     */
    public static MemorySegment atk_object_ref_state_set(MemorySegment accessible) {
        var mh$ = atk_object_ref_state_set$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_index_in_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1202.atk_object_get_index_in_parent$MH,"atk_object_get_index_in_parent");
    }
    /**
     * {@snippet :
     * gint atk_object_get_index_in_parent(AtkObject* accessible);
     * }
     */
    public static int atk_object_get_index_in_parent(MemorySegment accessible) {
        var mh$ = atk_object_get_index_in_parent$MH();
        try {
            return (int)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1202.atk_object_set_name$MH,"atk_object_set_name");
    }
    /**
     * {@snippet :
     * void atk_object_set_name(AtkObject* accessible, const gchar* name);
     * }
     */
    public static void atk_object_set_name(MemorySegment accessible, MemorySegment name) {
        var mh$ = atk_object_set_name$MH();
        try {
            mh$.invokeExact(accessible, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_set_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1202.atk_object_set_description$MH,"atk_object_set_description");
    }
    /**
     * {@snippet :
     * void atk_object_set_description(AtkObject* accessible, const gchar* description);
     * }
     */
    public static void atk_object_set_description(MemorySegment accessible, MemorySegment description) {
        var mh$ = atk_object_set_description$MH();
        try {
            mh$.invokeExact(accessible, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_set_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1202.atk_object_set_parent$MH,"atk_object_set_parent");
    }
    /**
     * {@snippet :
     * void atk_object_set_parent(AtkObject* accessible, AtkObject* parent);
     * }
     */
    public static void atk_object_set_parent(MemorySegment accessible, MemorySegment parent) {
        var mh$ = atk_object_set_parent$MH();
        try {
            mh$.invokeExact(accessible, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_set_role$MH() {
        return RuntimeHelper.requireNonNull(constants$1203.atk_object_set_role$MH,"atk_object_set_role");
    }
    /**
     * {@snippet :
     * void atk_object_set_role(AtkObject* accessible, AtkRole role);
     * }
     */
    public static void atk_object_set_role(MemorySegment accessible, int role) {
        var mh$ = atk_object_set_role$MH();
        try {
            mh$.invokeExact(accessible, role);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_connect_property_change_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$1203.atk_object_connect_property_change_handler$MH,"atk_object_connect_property_change_handler");
    }
    /**
     * {@snippet :
     * guint atk_object_connect_property_change_handler(AtkObject* accessible, AtkPropertyChangeHandler* handler);
     * }
     */
    public static int atk_object_connect_property_change_handler(MemorySegment accessible, MemorySegment handler) {
        var mh$ = atk_object_connect_property_change_handler$MH();
        try {
            return (int)mh$.invokeExact(accessible, handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_remove_property_change_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$1203.atk_object_remove_property_change_handler$MH,"atk_object_remove_property_change_handler");
    }
    /**
     * {@snippet :
     * void atk_object_remove_property_change_handler(AtkObject* accessible, guint handler_id);
     * }
     */
    public static void atk_object_remove_property_change_handler(MemorySegment accessible, int handler_id) {
        var mh$ = atk_object_remove_property_change_handler$MH();
        try {
            mh$.invokeExact(accessible, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_notify_state_change$MH() {
        return RuntimeHelper.requireNonNull(constants$1203.atk_object_notify_state_change$MH,"atk_object_notify_state_change");
    }
    /**
     * {@snippet :
     * void atk_object_notify_state_change(AtkObject* accessible, AtkState state, gboolean value);
     * }
     */
    public static void atk_object_notify_state_change(MemorySegment accessible, long state, int value) {
        var mh$ = atk_object_notify_state_change$MH();
        try {
            mh$.invokeExact(accessible, state, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_initialize$MH() {
        return RuntimeHelper.requireNonNull(constants$1203.atk_object_initialize$MH,"atk_object_initialize");
    }
    /**
     * {@snippet :
     * void atk_object_initialize(AtkObject* accessible, gpointer data);
     * }
     */
    public static void atk_object_initialize(MemorySegment accessible, MemorySegment data) {
        var mh$ = atk_object_initialize$MH();
        try {
            mh$.invokeExact(accessible, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_role_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1203.atk_role_get_name$MH,"atk_role_get_name");
    }
    /**
     * {@snippet :
     * const gchar* atk_role_get_name(AtkRole role);
     * }
     */
    public static MemorySegment atk_role_get_name(int role) {
        var mh$ = atk_role_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(role);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_role_for_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1204.atk_role_for_name$MH,"atk_role_for_name");
    }
    /**
     * {@snippet :
     * AtkRole atk_role_for_name(const gchar* name);
     * }
     */
    public static int atk_role_for_name(MemorySegment name) {
        var mh$ = atk_role_for_name$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_add_relationship$MH() {
        return RuntimeHelper.requireNonNull(constants$1204.atk_object_add_relationship$MH,"atk_object_add_relationship");
    }
    /**
     * {@snippet :
     * gboolean atk_object_add_relationship(AtkObject* object, AtkRelationType relationship, AtkObject* target);
     * }
     */
    public static int atk_object_add_relationship(MemorySegment object, int relationship, MemorySegment target) {
        var mh$ = atk_object_add_relationship$MH();
        try {
            return (int)mh$.invokeExact(object, relationship, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_remove_relationship$MH() {
        return RuntimeHelper.requireNonNull(constants$1204.atk_object_remove_relationship$MH,"atk_object_remove_relationship");
    }
    /**
     * {@snippet :
     * gboolean atk_object_remove_relationship(AtkObject* object, AtkRelationType relationship, AtkObject* target);
     * }
     */
    public static int atk_object_remove_relationship(MemorySegment object, int relationship, MemorySegment target) {
        var mh$ = atk_object_remove_relationship$MH();
        try {
            return (int)mh$.invokeExact(object, relationship, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_role_get_localized_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1204.atk_role_get_localized_name$MH,"atk_role_get_localized_name");
    }
    /**
     * {@snippet :
     * const gchar* atk_role_get_localized_name(AtkRole role);
     * }
     */
    public static MemorySegment atk_role_get_localized_name(int role) {
        var mh$ = atk_role_get_localized_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(role);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_role_register$MH() {
        return RuntimeHelper.requireNonNull(constants$1204.atk_role_register$MH,"atk_role_register");
    }
    /**
     * {@snippet :
     * AtkRole atk_role_register(const gchar* name);
     * }
     */
    public static int atk_role_register(MemorySegment name) {
        var mh$ = atk_role_register$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_object_locale$MH() {
        return RuntimeHelper.requireNonNull(constants$1204.atk_object_get_object_locale$MH,"atk_object_get_object_locale");
    }
    /**
     * {@snippet :
     * const gchar* atk_object_get_object_locale(AtkObject* accessible);
     * }
     */
    public static MemorySegment atk_object_get_object_locale(MemorySegment accessible) {
        var mh$ = atk_object_get_object_locale$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_get_accessible_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1205.atk_object_get_accessible_id$MH,"atk_object_get_accessible_id");
    }
    /**
     * {@snippet :
     * const gchar* atk_object_get_accessible_id(AtkObject* accessible);
     * }
     */
    public static MemorySegment atk_object_get_accessible_id(MemorySegment accessible) {
        var mh$ = atk_object_get_accessible_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_set_accessible_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1205.atk_object_set_accessible_id$MH,"atk_object_set_accessible_id");
    }
    /**
     * {@snippet :
     * void atk_object_set_accessible_id(AtkObject* accessible, const gchar* name);
     * }
     */
    public static void atk_object_set_accessible_id(MemorySegment accessible, MemorySegment name) {
        var mh$ = atk_object_set_accessible_id$MH();
        try {
            mh$.invokeExact(accessible, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1205.atk_action_get_type$MH,"atk_action_get_type");
    }
    /**
     * {@snippet :
     * GType atk_action_get_type();
     * }
     */
    public static long atk_action_get_type() {
        var mh$ = atk_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_do_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1205.atk_action_do_action$MH,"atk_action_do_action");
    }
    /**
     * {@snippet :
     * gboolean atk_action_do_action(AtkAction* action, gint i);
     * }
     */
    public static int atk_action_do_action(MemorySegment action, int i) {
        var mh$ = atk_action_do_action$MH();
        try {
            return (int)mh$.invokeExact(action, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_get_n_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$1205.atk_action_get_n_actions$MH,"atk_action_get_n_actions");
    }
    /**
     * {@snippet :
     * gint atk_action_get_n_actions(AtkAction* action);
     * }
     */
    public static int atk_action_get_n_actions(MemorySegment action) {
        var mh$ = atk_action_get_n_actions$MH();
        try {
            return (int)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1205.atk_action_get_description$MH,"atk_action_get_description");
    }
    /**
     * {@snippet :
     * const gchar* atk_action_get_description(AtkAction* action, gint i);
     * }
     */
    public static MemorySegment atk_action_get_description(MemorySegment action, int i) {
        var mh$ = atk_action_get_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1206.atk_action_get_name$MH,"atk_action_get_name");
    }
    /**
     * {@snippet :
     * const gchar* atk_action_get_name(AtkAction* action, gint i);
     * }
     */
    public static MemorySegment atk_action_get_name(MemorySegment action, int i) {
        var mh$ = atk_action_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_get_keybinding$MH() {
        return RuntimeHelper.requireNonNull(constants$1206.atk_action_get_keybinding$MH,"atk_action_get_keybinding");
    }
    /**
     * {@snippet :
     * const gchar* atk_action_get_keybinding(AtkAction* action, gint i);
     * }
     */
    public static MemorySegment atk_action_get_keybinding(MemorySegment action, int i) {
        var mh$ = atk_action_get_keybinding$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_set_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1206.atk_action_set_description$MH,"atk_action_set_description");
    }
    /**
     * {@snippet :
     * gboolean atk_action_set_description(AtkAction* action, gint i, const gchar* desc);
     * }
     */
    public static int atk_action_set_description(MemorySegment action, int i, MemorySegment desc) {
        var mh$ = atk_action_set_description$MH();
        try {
            return (int)mh$.invokeExact(action, i, desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_action_get_localized_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1206.atk_action_get_localized_name$MH,"atk_action_get_localized_name");
    }
    /**
     * {@snippet :
     * const gchar* atk_action_get_localized_name(AtkAction* action, gint i);
     * }
     */
    public static MemorySegment atk_action_get_localized_name(MemorySegment action, int i) {
        var mh$ = atk_action_get_localized_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .ATK_KEY_EVENT_PRESS = 0;
     * }
     */
    public static int ATK_KEY_EVENT_PRESS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .ATK_KEY_EVENT_RELEASE = 1;
     * }
     */
    public static int ATK_KEY_EVENT_RELEASE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .ATK_KEY_EVENT_LAST_DEFINED = 2;
     * }
     */
    public static int ATK_KEY_EVENT_LAST_DEFINED() {
        return (int)2L;
    }
    public static MethodHandle atk_util_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1207.atk_util_get_type$MH,"atk_util_get_type");
    }
    /**
     * {@snippet :
     * GType atk_util_get_type();
     * }
     */
    public static long atk_util_get_type() {
        var mh$ = atk_util_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .ATK_XY_SCREEN = 0;
     * }
     */
    public static int ATK_XY_SCREEN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .ATK_XY_WINDOW = 1;
     * }
     */
    public static int ATK_XY_WINDOW() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .ATK_XY_PARENT = 2;
     * }
     */
    public static int ATK_XY_PARENT() {
        return (int)2L;
    }
    public static MethodHandle atk_add_focus_tracker$MH() {
        return RuntimeHelper.requireNonNull(constants$1207.atk_add_focus_tracker$MH,"atk_add_focus_tracker");
    }
    /**
     * {@snippet :
     * guint atk_add_focus_tracker(AtkEventListener focus_tracker);
     * }
     */
    public static int atk_add_focus_tracker(MemorySegment focus_tracker) {
        var mh$ = atk_add_focus_tracker$MH();
        try {
            return (int)mh$.invokeExact(focus_tracker);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_remove_focus_tracker$MH() {
        return RuntimeHelper.requireNonNull(constants$1208.atk_remove_focus_tracker$MH,"atk_remove_focus_tracker");
    }
    /**
     * {@snippet :
     * void atk_remove_focus_tracker(guint tracker_id);
     * }
     */
    public static void atk_remove_focus_tracker(int tracker_id) {
        var mh$ = atk_remove_focus_tracker$MH();
        try {
            mh$.invokeExact(tracker_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_focus_tracker_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1208.atk_focus_tracker_init$MH,"atk_focus_tracker_init");
    }
    /**
     * {@snippet :
     * void atk_focus_tracker_init(AtkEventListenerInit init);
     * }
     */
    public static void atk_focus_tracker_init(MemorySegment init) {
        var mh$ = atk_focus_tracker_init$MH();
        try {
            mh$.invokeExact(init);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_focus_tracker_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$1208.atk_focus_tracker_notify$MH,"atk_focus_tracker_notify");
    }
    /**
     * {@snippet :
     * void atk_focus_tracker_notify(AtkObject* object);
     * }
     */
    public static void atk_focus_tracker_notify(MemorySegment object) {
        var mh$ = atk_focus_tracker_notify$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_add_global_event_listener$MH() {
        return RuntimeHelper.requireNonNull(constants$1208.atk_add_global_event_listener$MH,"atk_add_global_event_listener");
    }
    /**
     * {@snippet :
     * guint atk_add_global_event_listener(GSignalEmissionHook listener, const gchar* event_type);
     * }
     */
    public static int atk_add_global_event_listener(MemorySegment listener, MemorySegment event_type) {
        var mh$ = atk_add_global_event_listener$MH();
        try {
            return (int)mh$.invokeExact(listener, event_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_remove_global_event_listener$MH() {
        return RuntimeHelper.requireNonNull(constants$1208.atk_remove_global_event_listener$MH,"atk_remove_global_event_listener");
    }
    /**
     * {@snippet :
     * void atk_remove_global_event_listener(guint listener_id);
     * }
     */
    public static void atk_remove_global_event_listener(int listener_id) {
        var mh$ = atk_remove_global_event_listener$MH();
        try {
            mh$.invokeExact(listener_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_add_key_event_listener$MH() {
        return RuntimeHelper.requireNonNull(constants$1208.atk_add_key_event_listener$MH,"atk_add_key_event_listener");
    }
    /**
     * {@snippet :
     * guint atk_add_key_event_listener(AtkKeySnoopFunc listener, gpointer data);
     * }
     */
    public static int atk_add_key_event_listener(MemorySegment listener, MemorySegment data) {
        var mh$ = atk_add_key_event_listener$MH();
        try {
            return (int)mh$.invokeExact(listener, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_remove_key_event_listener$MH() {
        return RuntimeHelper.requireNonNull(constants$1209.atk_remove_key_event_listener$MH,"atk_remove_key_event_listener");
    }
    /**
     * {@snippet :
     * void atk_remove_key_event_listener(guint listener_id);
     * }
     */
    public static void atk_remove_key_event_listener(int listener_id) {
        var mh$ = atk_remove_key_event_listener$MH();
        try {
            mh$.invokeExact(listener_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_root$MH() {
        return RuntimeHelper.requireNonNull(constants$1209.atk_get_root$MH,"atk_get_root");
    }
    /**
     * {@snippet :
     * AtkObject* atk_get_root();
     * }
     */
    public static MemorySegment atk_get_root() {
        var mh$ = atk_get_root$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_focus_object$MH() {
        return RuntimeHelper.requireNonNull(constants$1209.atk_get_focus_object$MH,"atk_get_focus_object");
    }
    /**
     * {@snippet :
     * AtkObject* atk_get_focus_object();
     * }
     */
    public static MemorySegment atk_get_focus_object() {
        var mh$ = atk_get_focus_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_toolkit_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1209.atk_get_toolkit_name$MH,"atk_get_toolkit_name");
    }
    /**
     * {@snippet :
     * const gchar* atk_get_toolkit_name();
     * }
     */
    public static MemorySegment atk_get_toolkit_name() {
        var mh$ = atk_get_toolkit_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_toolkit_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1209.atk_get_toolkit_version$MH,"atk_get_toolkit_version");
    }
    /**
     * {@snippet :
     * const gchar* atk_get_toolkit_version();
     * }
     */
    public static MemorySegment atk_get_toolkit_version() {
        var mh$ = atk_get_toolkit_version$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1209.atk_get_version$MH,"atk_get_version");
    }
    /**
     * {@snippet :
     * const gchar* atk_get_version();
     * }
     */
    public static MemorySegment atk_get_version() {
        var mh$ = atk_get_version$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .ATK_SCROLL_TOP_LEFT = 0;
     * }
     */
    public static int ATK_SCROLL_TOP_LEFT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .ATK_SCROLL_BOTTOM_RIGHT = 1;
     * }
     */
    public static int ATK_SCROLL_BOTTOM_RIGHT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .ATK_SCROLL_TOP_EDGE = 2;
     * }
     */
    public static int ATK_SCROLL_TOP_EDGE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .ATK_SCROLL_BOTTOM_EDGE = 3;
     * }
     */
    public static int ATK_SCROLL_BOTTOM_EDGE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .ATK_SCROLL_LEFT_EDGE = 4;
     * }
     */
    public static int ATK_SCROLL_LEFT_EDGE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .ATK_SCROLL_RIGHT_EDGE = 5;
     * }
     */
    public static int ATK_SCROLL_RIGHT_EDGE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .ATK_SCROLL_ANYWHERE = 6;
     * }
     */
    public static int ATK_SCROLL_ANYWHERE() {
        return (int)6L;
    }
    public static MethodHandle atk_rectangle_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1210.atk_rectangle_get_type$MH,"atk_rectangle_get_type");
    }
    /**
     * {@snippet :
     * GType atk_rectangle_get_type();
     * }
     */
    public static long atk_rectangle_get_type() {
        var mh$ = atk_rectangle_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1210.atk_component_get_type$MH,"atk_component_get_type");
    }
    /**
     * {@snippet :
     * GType atk_component_get_type();
     * }
     */
    public static long atk_component_get_type() {
        var mh$ = atk_component_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_add_focus_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$1210.atk_component_add_focus_handler$MH,"atk_component_add_focus_handler");
    }
    /**
     * {@snippet :
     * guint atk_component_add_focus_handler(AtkComponent* component, AtkFocusHandler handler);
     * }
     */
    public static int atk_component_add_focus_handler(MemorySegment component, MemorySegment handler) {
        var mh$ = atk_component_add_focus_handler$MH();
        try {
            return (int)mh$.invokeExact(component, handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_contains$MH() {
        return RuntimeHelper.requireNonNull(constants$1210.atk_component_contains$MH,"atk_component_contains");
    }
    /**
     * {@snippet :
     * gboolean atk_component_contains(AtkComponent* component, gint x, gint y, AtkCoordType coord_type);
     * }
     */
    public static int atk_component_contains(MemorySegment component, int x, int y, int coord_type) {
        var mh$ = atk_component_contains$MH();
        try {
            return (int)mh$.invokeExact(component, x, y, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_ref_accessible_at_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1211.atk_component_ref_accessible_at_point$MH,"atk_component_ref_accessible_at_point");
    }
    /**
     * {@snippet :
     * AtkObject* atk_component_ref_accessible_at_point(AtkComponent* component, gint x, gint y, AtkCoordType coord_type);
     * }
     */
    public static MemorySegment atk_component_ref_accessible_at_point(MemorySegment component, int x, int y, int coord_type) {
        var mh$ = atk_component_ref_accessible_at_point$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(component, x, y, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1211.atk_component_get_extents$MH,"atk_component_get_extents");
    }
    /**
     * {@snippet :
     * void atk_component_get_extents(AtkComponent* component, gint* x, gint* y, gint* width, gint* height, AtkCoordType coord_type);
     * }
     */
    public static void atk_component_get_extents(MemorySegment component, MemorySegment x, MemorySegment y, MemorySegment width, MemorySegment height, int coord_type) {
        var mh$ = atk_component_get_extents$MH();
        try {
            mh$.invokeExact(component, x, y, width, height, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1211.atk_component_get_position$MH,"atk_component_get_position");
    }
    /**
     * {@snippet :
     * void atk_component_get_position(AtkComponent* component, gint* x, gint* y, AtkCoordType coord_type);
     * }
     */
    public static void atk_component_get_position(MemorySegment component, MemorySegment x, MemorySegment y, int coord_type) {
        var mh$ = atk_component_get_position$MH();
        try {
            mh$.invokeExact(component, x, y, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1211.atk_component_get_size$MH,"atk_component_get_size");
    }
    /**
     * {@snippet :
     * void atk_component_get_size(AtkComponent* component, gint* width, gint* height);
     * }
     */
    public static void atk_component_get_size(MemorySegment component, MemorySegment width, MemorySegment height) {
        var mh$ = atk_component_get_size$MH();
        try {
            mh$.invokeExact(component, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_layer$MH() {
        return RuntimeHelper.requireNonNull(constants$1211.atk_component_get_layer$MH,"atk_component_get_layer");
    }
    /**
     * {@snippet :
     * AtkLayer atk_component_get_layer(AtkComponent* component);
     * }
     */
    public static int atk_component_get_layer(MemorySegment component) {
        var mh$ = atk_component_get_layer$MH();
        try {
            return (int)mh$.invokeExact(component);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_mdi_zorder$MH() {
        return RuntimeHelper.requireNonNull(constants$1211.atk_component_get_mdi_zorder$MH,"atk_component_get_mdi_zorder");
    }
    /**
     * {@snippet :
     * gint atk_component_get_mdi_zorder(AtkComponent* component);
     * }
     */
    public static int atk_component_get_mdi_zorder(MemorySegment component) {
        var mh$ = atk_component_get_mdi_zorder$MH();
        try {
            return (int)mh$.invokeExact(component);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_grab_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1212.atk_component_grab_focus$MH,"atk_component_grab_focus");
    }
    /**
     * {@snippet :
     * gboolean atk_component_grab_focus(AtkComponent* component);
     * }
     */
    public static int atk_component_grab_focus(MemorySegment component) {
        var mh$ = atk_component_grab_focus$MH();
        try {
            return (int)mh$.invokeExact(component);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_remove_focus_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$1212.atk_component_remove_focus_handler$MH,"atk_component_remove_focus_handler");
    }
    /**
     * {@snippet :
     * void atk_component_remove_focus_handler(AtkComponent* component, guint handler_id);
     * }
     */
    public static void atk_component_remove_focus_handler(MemorySegment component, int handler_id) {
        var mh$ = atk_component_remove_focus_handler$MH();
        try {
            mh$.invokeExact(component, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_set_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1212.atk_component_set_extents$MH,"atk_component_set_extents");
    }
    /**
     * {@snippet :
     * gboolean atk_component_set_extents(AtkComponent* component, gint x, gint y, gint width, gint height, AtkCoordType coord_type);
     * }
     */
    public static int atk_component_set_extents(MemorySegment component, int x, int y, int width, int height, int coord_type) {
        var mh$ = atk_component_set_extents$MH();
        try {
            return (int)mh$.invokeExact(component, x, y, width, height, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_set_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1212.atk_component_set_position$MH,"atk_component_set_position");
    }
    /**
     * {@snippet :
     * gboolean atk_component_set_position(AtkComponent* component, gint x, gint y, AtkCoordType coord_type);
     * }
     */
    public static int atk_component_set_position(MemorySegment component, int x, int y, int coord_type) {
        var mh$ = atk_component_set_position$MH();
        try {
            return (int)mh$.invokeExact(component, x, y, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_set_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1212.atk_component_set_size$MH,"atk_component_set_size");
    }
    /**
     * {@snippet :
     * gboolean atk_component_set_size(AtkComponent* component, gint width, gint height);
     * }
     */
    public static int atk_component_set_size(MemorySegment component, int width, int height) {
        var mh$ = atk_component_set_size$MH();
        try {
            return (int)mh$.invokeExact(component, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_get_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1212.atk_component_get_alpha$MH,"atk_component_get_alpha");
    }
    /**
     * {@snippet :
     * gdouble atk_component_get_alpha(AtkComponent* component);
     * }
     */
    public static double atk_component_get_alpha(MemorySegment component) {
        var mh$ = atk_component_get_alpha$MH();
        try {
            return (double)mh$.invokeExact(component);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_scroll_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.atk_component_scroll_to$MH,"atk_component_scroll_to");
    }
    /**
     * {@snippet :
     * gboolean atk_component_scroll_to(AtkComponent* component, AtkScrollType type);
     * }
     */
    public static int atk_component_scroll_to(MemorySegment component, int type) {
        var mh$ = atk_component_scroll_to$MH();
        try {
            return (int)mh$.invokeExact(component, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_component_scroll_to_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.atk_component_scroll_to_point$MH,"atk_component_scroll_to_point");
    }
    /**
     * {@snippet :
     * gboolean atk_component_scroll_to_point(AtkComponent* component, AtkCoordType coords, gint x, gint y);
     * }
     */
    public static int atk_component_scroll_to_point(MemorySegment component, int coords, int x, int y) {
        var mh$ = atk_component_scroll_to_point$MH();
        try {
            return (int)mh$.invokeExact(component, coords, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.atk_document_get_type$MH,"atk_document_get_type");
    }
    /**
     * {@snippet :
     * GType atk_document_get_type();
     * }
     */
    public static long atk_document_get_type() {
        var mh$ = atk_document_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_document_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.atk_document_get_document_type$MH,"atk_document_get_document_type");
    }
    /**
     * {@snippet :
     * const gchar* atk_document_get_document_type(AtkDocument* document);
     * }
     */
    public static MemorySegment atk_document_get_document_type(MemorySegment document) {
        var mh$ = atk_document_get_document_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(document);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_document$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.atk_document_get_document$MH,"atk_document_get_document");
    }
    /**
     * {@snippet :
     * gpointer atk_document_get_document(AtkDocument* document);
     * }
     */
    public static MemorySegment atk_document_get_document(MemorySegment document) {
        var mh$ = atk_document_get_document$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(document);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_locale$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.atk_document_get_locale$MH,"atk_document_get_locale");
    }
    /**
     * {@snippet :
     * const gchar* atk_document_get_locale(AtkDocument* document);
     * }
     */
    public static MemorySegment atk_document_get_locale(MemorySegment document) {
        var mh$ = atk_document_get_locale$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(document);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.atk_document_get_attributes$MH,"atk_document_get_attributes");
    }
    /**
     * {@snippet :
     * AtkAttributeSet* atk_document_get_attributes(AtkDocument* document);
     * }
     */
    public static MemorySegment atk_document_get_attributes(MemorySegment document) {
        var mh$ = atk_document_get_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(document);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_attribute_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.atk_document_get_attribute_value$MH,"atk_document_get_attribute_value");
    }
    /**
     * {@snippet :
     * const gchar* atk_document_get_attribute_value(AtkDocument* document, const gchar* attribute_name);
     * }
     */
    public static MemorySegment atk_document_get_attribute_value(MemorySegment document, MemorySegment attribute_name) {
        var mh$ = atk_document_get_attribute_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(document, attribute_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_set_attribute_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.atk_document_set_attribute_value$MH,"atk_document_set_attribute_value");
    }
    /**
     * {@snippet :
     * gboolean atk_document_set_attribute_value(AtkDocument* document, const gchar* attribute_name, const gchar* attribute_value);
     * }
     */
    public static int atk_document_set_attribute_value(MemorySegment document, MemorySegment attribute_name, MemorySegment attribute_value) {
        var mh$ = atk_document_set_attribute_value$MH();
        try {
            return (int)mh$.invokeExact(document, attribute_name, attribute_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_current_page_number$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.atk_document_get_current_page_number$MH,"atk_document_get_current_page_number");
    }
    /**
     * {@snippet :
     * gint atk_document_get_current_page_number(AtkDocument* document);
     * }
     */
    public static int atk_document_get_current_page_number(MemorySegment document) {
        var mh$ = atk_document_get_current_page_number$MH();
        try {
            return (int)mh$.invokeExact(document);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_document_get_page_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.atk_document_get_page_count$MH,"atk_document_get_page_count");
    }
    /**
     * {@snippet :
     * gint atk_document_get_page_count(AtkDocument* document);
     * }
     */
    public static int atk_document_get_page_count(MemorySegment document) {
        var mh$ = atk_document_get_page_count$MH();
        try {
            return (int)mh$.invokeExact(document);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_INVALID = 0;
     * }
     */
    public static int ATK_TEXT_ATTR_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_LEFT_MARGIN = 1;
     * }
     */
    public static int ATK_TEXT_ATTR_LEFT_MARGIN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_RIGHT_MARGIN = 2;
     * }
     */
    public static int ATK_TEXT_ATTR_RIGHT_MARGIN() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_INDENT = 3;
     * }
     */
    public static int ATK_TEXT_ATTR_INDENT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_INVISIBLE = 4;
     * }
     */
    public static int ATK_TEXT_ATTR_INVISIBLE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_EDITABLE = 5;
     * }
     */
    public static int ATK_TEXT_ATTR_EDITABLE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_PIXELS_ABOVE_LINES = 6;
     * }
     */
    public static int ATK_TEXT_ATTR_PIXELS_ABOVE_LINES() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_PIXELS_BELOW_LINES = 7;
     * }
     */
    public static int ATK_TEXT_ATTR_PIXELS_BELOW_LINES() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_PIXELS_INSIDE_WRAP = 8;
     * }
     */
    public static int ATK_TEXT_ATTR_PIXELS_INSIDE_WRAP() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_BG_FULL_HEIGHT = 9;
     * }
     */
    public static int ATK_TEXT_ATTR_BG_FULL_HEIGHT() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_RISE = 10;
     * }
     */
    public static int ATK_TEXT_ATTR_RISE() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_UNDERLINE = 11;
     * }
     */
    public static int ATK_TEXT_ATTR_UNDERLINE() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_STRIKETHROUGH = 12;
     * }
     */
    public static int ATK_TEXT_ATTR_STRIKETHROUGH() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_SIZE = 13;
     * }
     */
    public static int ATK_TEXT_ATTR_SIZE() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_SCALE = 14;
     * }
     */
    public static int ATK_TEXT_ATTR_SCALE() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_WEIGHT = 15;
     * }
     */
    public static int ATK_TEXT_ATTR_WEIGHT() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_LANGUAGE = 16;
     * }
     */
    public static int ATK_TEXT_ATTR_LANGUAGE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_FAMILY_NAME = 17;
     * }
     */
    public static int ATK_TEXT_ATTR_FAMILY_NAME() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_BG_COLOR = 18;
     * }
     */
    public static int ATK_TEXT_ATTR_BG_COLOR() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_FG_COLOR = 19;
     * }
     */
    public static int ATK_TEXT_ATTR_FG_COLOR() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_BG_STIPPLE = 20;
     * }
     */
    public static int ATK_TEXT_ATTR_BG_STIPPLE() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_FG_STIPPLE = 21;
     * }
     */
    public static int ATK_TEXT_ATTR_FG_STIPPLE() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_WRAP_MODE = 22;
     * }
     */
    public static int ATK_TEXT_ATTR_WRAP_MODE() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_DIRECTION = 23;
     * }
     */
    public static int ATK_TEXT_ATTR_DIRECTION() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_JUSTIFICATION = 24;
     * }
     */
    public static int ATK_TEXT_ATTR_JUSTIFICATION() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_STRETCH = 25;
     * }
     */
    public static int ATK_TEXT_ATTR_STRETCH() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_VARIANT = 26;
     * }
     */
    public static int ATK_TEXT_ATTR_VARIANT() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_STYLE = 27;
     * }
     */
    public static int ATK_TEXT_ATTR_STYLE() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_TEXT_POSITION = 28;
     * }
     */
    public static int ATK_TEXT_ATTR_TEXT_POSITION() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_ATTR_LAST_DEFINED = 29;
     * }
     */
    public static int ATK_TEXT_ATTR_LAST_DEFINED() {
        return (int)29L;
    }
    public static MethodHandle atk_text_attribute_register$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.atk_text_attribute_register$MH,"atk_text_attribute_register");
    }
    /**
     * {@snippet :
     * AtkTextAttribute atk_text_attribute_register(const gchar* name);
     * }
     */
    public static int atk_text_attribute_register(MemorySegment name) {
        var mh$ = atk_text_attribute_register$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_BOUNDARY_CHAR = 0;
     * }
     */
    public static int ATK_TEXT_BOUNDARY_CHAR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_BOUNDARY_WORD_START = 1;
     * }
     */
    public static int ATK_TEXT_BOUNDARY_WORD_START() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_BOUNDARY_WORD_END = 2;
     * }
     */
    public static int ATK_TEXT_BOUNDARY_WORD_END() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_BOUNDARY_SENTENCE_START = 3;
     * }
     */
    public static int ATK_TEXT_BOUNDARY_SENTENCE_START() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_BOUNDARY_SENTENCE_END = 4;
     * }
     */
    public static int ATK_TEXT_BOUNDARY_SENTENCE_END() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_BOUNDARY_LINE_START = 5;
     * }
     */
    public static int ATK_TEXT_BOUNDARY_LINE_START() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_BOUNDARY_LINE_END = 6;
     * }
     */
    public static int ATK_TEXT_BOUNDARY_LINE_END() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_GRANULARITY_CHAR = 0;
     * }
     */
    public static int ATK_TEXT_GRANULARITY_CHAR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_GRANULARITY_WORD = 1;
     * }
     */
    public static int ATK_TEXT_GRANULARITY_WORD() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_GRANULARITY_SENTENCE = 2;
     * }
     */
    public static int ATK_TEXT_GRANULARITY_SENTENCE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_GRANULARITY_LINE = 3;
     * }
     */
    public static int ATK_TEXT_GRANULARITY_LINE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_GRANULARITY_PARAGRAPH = 4;
     * }
     */
    public static int ATK_TEXT_GRANULARITY_PARAGRAPH() {
        return (int)4L;
    }
    public static MethodHandle atk_text_range_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.atk_text_range_get_type$MH,"atk_text_range_get_type");
    }
    /**
     * {@snippet :
     * GType atk_text_range_get_type();
     * }
     */
    public static long atk_text_range_get_type() {
        var mh$ = atk_text_range_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_CLIP_NONE = 0;
     * }
     */
    public static int ATK_TEXT_CLIP_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_CLIP_MIN = 1;
     * }
     */
    public static int ATK_TEXT_CLIP_MIN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_CLIP_MAX = 2;
     * }
     */
    public static int ATK_TEXT_CLIP_MAX() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .ATK_TEXT_CLIP_BOTH = 3;
     * }
     */
    public static int ATK_TEXT_CLIP_BOTH() {
        return (int)3L;
    }
    public static MethodHandle atk_text_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.atk_text_get_type$MH,"atk_text_get_type");
    }
    /**
     * {@snippet :
     * GType atk_text_get_type();
     * }
     */
    public static long atk_text_get_type() {
        var mh$ = atk_text_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.atk_text_get_text$MH,"atk_text_get_text");
    }
    /**
     * {@snippet :
     * gchar* atk_text_get_text(AtkText* text, gint start_offset, gint end_offset);
     * }
     */
    public static MemorySegment atk_text_get_text(MemorySegment text, int start_offset, int end_offset) {
        var mh$ = atk_text_get_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_character_at_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.atk_text_get_character_at_offset$MH,"atk_text_get_character_at_offset");
    }
    /**
     * {@snippet :
     * gunichar atk_text_get_character_at_offset(AtkText* text, gint offset);
     * }
     */
    public static int atk_text_get_character_at_offset(MemorySegment text, int offset) {
        var mh$ = atk_text_get_character_at_offset$MH();
        try {
            return (int)mh$.invokeExact(text, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_text_after_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.atk_text_get_text_after_offset$MH,"atk_text_get_text_after_offset");
    }
    /**
     * {@snippet :
     * gchar* atk_text_get_text_after_offset(AtkText* text, gint offset, AtkTextBoundary boundary_type, gint* start_offset, gint* end_offset);
     * }
     */
    public static MemorySegment atk_text_get_text_after_offset(MemorySegment text, int offset, int boundary_type, MemorySegment start_offset, MemorySegment end_offset) {
        var mh$ = atk_text_get_text_after_offset$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text, offset, boundary_type, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_text_at_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.atk_text_get_text_at_offset$MH,"atk_text_get_text_at_offset");
    }
    /**
     * {@snippet :
     * gchar* atk_text_get_text_at_offset(AtkText* text, gint offset, AtkTextBoundary boundary_type, gint* start_offset, gint* end_offset);
     * }
     */
    public static MemorySegment atk_text_get_text_at_offset(MemorySegment text, int offset, int boundary_type, MemorySegment start_offset, MemorySegment end_offset) {
        var mh$ = atk_text_get_text_at_offset$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text, offset, boundary_type, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_text_before_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.atk_text_get_text_before_offset$MH,"atk_text_get_text_before_offset");
    }
    /**
     * {@snippet :
     * gchar* atk_text_get_text_before_offset(AtkText* text, gint offset, AtkTextBoundary boundary_type, gint* start_offset, gint* end_offset);
     * }
     */
    public static MemorySegment atk_text_get_text_before_offset(MemorySegment text, int offset, int boundary_type, MemorySegment start_offset, MemorySegment end_offset) {
        var mh$ = atk_text_get_text_before_offset$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text, offset, boundary_type, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_string_at_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.atk_text_get_string_at_offset$MH,"atk_text_get_string_at_offset");
    }
    /**
     * {@snippet :
     * gchar* atk_text_get_string_at_offset(AtkText* text, gint offset, AtkTextGranularity granularity, gint* start_offset, gint* end_offset);
     * }
     */
    public static MemorySegment atk_text_get_string_at_offset(MemorySegment text, int offset, int granularity, MemorySegment start_offset, MemorySegment end_offset) {
        var mh$ = atk_text_get_string_at_offset$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text, offset, granularity, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_caret_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.atk_text_get_caret_offset$MH,"atk_text_get_caret_offset");
    }
    /**
     * {@snippet :
     * gint atk_text_get_caret_offset(AtkText* text);
     * }
     */
    public static int atk_text_get_caret_offset(MemorySegment text) {
        var mh$ = atk_text_get_caret_offset$MH();
        try {
            return (int)mh$.invokeExact(text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_character_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.atk_text_get_character_extents$MH,"atk_text_get_character_extents");
    }
    /**
     * {@snippet :
     * void atk_text_get_character_extents(AtkText* text, gint offset, gint* x, gint* y, gint* width, gint* height, AtkCoordType coords);
     * }
     */
    public static void atk_text_get_character_extents(MemorySegment text, int offset, MemorySegment x, MemorySegment y, MemorySegment width, MemorySegment height, int coords) {
        var mh$ = atk_text_get_character_extents$MH();
        try {
            mh$.invokeExact(text, offset, x, y, width, height, coords);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_run_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.atk_text_get_run_attributes$MH,"atk_text_get_run_attributes");
    }
    /**
     * {@snippet :
     * AtkAttributeSet* atk_text_get_run_attributes(AtkText* text, gint offset, gint* start_offset, gint* end_offset);
     * }
     */
    public static MemorySegment atk_text_get_run_attributes(MemorySegment text, int offset, MemorySegment start_offset, MemorySegment end_offset) {
        var mh$ = atk_text_get_run_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text, offset, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_default_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.atk_text_get_default_attributes$MH,"atk_text_get_default_attributes");
    }
    /**
     * {@snippet :
     * AtkAttributeSet* atk_text_get_default_attributes(AtkText* text);
     * }
     */
    public static MemorySegment atk_text_get_default_attributes(MemorySegment text) {
        var mh$ = atk_text_get_default_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_character_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1217.atk_text_get_character_count$MH,"atk_text_get_character_count");
    }
    /**
     * {@snippet :
     * gint atk_text_get_character_count(AtkText* text);
     * }
     */
    public static int atk_text_get_character_count(MemorySegment text) {
        var mh$ = atk_text_get_character_count$MH();
        try {
            return (int)mh$.invokeExact(text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_offset_at_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1217.atk_text_get_offset_at_point$MH,"atk_text_get_offset_at_point");
    }
    /**
     * {@snippet :
     * gint atk_text_get_offset_at_point(AtkText* text, gint x, gint y, AtkCoordType coords);
     * }
     */
    public static int atk_text_get_offset_at_point(MemorySegment text, int x, int y, int coords) {
        var mh$ = atk_text_get_offset_at_point$MH();
        try {
            return (int)mh$.invokeExact(text, x, y, coords);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_n_selections$MH() {
        return RuntimeHelper.requireNonNull(constants$1217.atk_text_get_n_selections$MH,"atk_text_get_n_selections");
    }
    /**
     * {@snippet :
     * gint atk_text_get_n_selections(AtkText* text);
     * }
     */
    public static int atk_text_get_n_selections(MemorySegment text) {
        var mh$ = atk_text_get_n_selections$MH();
        try {
            return (int)mh$.invokeExact(text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1217.atk_text_get_selection$MH,"atk_text_get_selection");
    }
    /**
     * {@snippet :
     * gchar* atk_text_get_selection(AtkText* text, gint selection_num, gint* start_offset, gint* end_offset);
     * }
     */
    public static MemorySegment atk_text_get_selection(MemorySegment text, int selection_num, MemorySegment start_offset, MemorySegment end_offset) {
        var mh$ = atk_text_get_selection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text, selection_num, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_add_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1217.atk_text_add_selection$MH,"atk_text_add_selection");
    }
    /**
     * {@snippet :
     * gboolean atk_text_add_selection(AtkText* text, gint start_offset, gint end_offset);
     * }
     */
    public static int atk_text_add_selection(MemorySegment text, int start_offset, int end_offset) {
        var mh$ = atk_text_add_selection$MH();
        try {
            return (int)mh$.invokeExact(text, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_remove_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1217.atk_text_remove_selection$MH,"atk_text_remove_selection");
    }
    /**
     * {@snippet :
     * gboolean atk_text_remove_selection(AtkText* text, gint selection_num);
     * }
     */
    public static int atk_text_remove_selection(MemorySegment text, int selection_num) {
        var mh$ = atk_text_remove_selection$MH();
        try {
            return (int)mh$.invokeExact(text, selection_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_set_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.atk_text_set_selection$MH,"atk_text_set_selection");
    }
    /**
     * {@snippet :
     * gboolean atk_text_set_selection(AtkText* text, gint selection_num, gint start_offset, gint end_offset);
     * }
     */
    public static int atk_text_set_selection(MemorySegment text, int selection_num, int start_offset, int end_offset) {
        var mh$ = atk_text_set_selection$MH();
        try {
            return (int)mh$.invokeExact(text, selection_num, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_set_caret_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.atk_text_set_caret_offset$MH,"atk_text_set_caret_offset");
    }
    /**
     * {@snippet :
     * gboolean atk_text_set_caret_offset(AtkText* text, gint offset);
     * }
     */
    public static int atk_text_set_caret_offset(MemorySegment text, int offset) {
        var mh$ = atk_text_set_caret_offset$MH();
        try {
            return (int)mh$.invokeExact(text, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_range_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.atk_text_get_range_extents$MH,"atk_text_get_range_extents");
    }
    /**
     * {@snippet :
     * void atk_text_get_range_extents(AtkText* text, gint start_offset, gint end_offset, AtkCoordType coord_type, AtkTextRectangle* rect);
     * }
     */
    public static void atk_text_get_range_extents(MemorySegment text, int start_offset, int end_offset, int coord_type, MemorySegment rect) {
        var mh$ = atk_text_get_range_extents$MH();
        try {
            mh$.invokeExact(text, start_offset, end_offset, coord_type, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_get_bounded_ranges$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.atk_text_get_bounded_ranges$MH,"atk_text_get_bounded_ranges");
    }
    /**
     * {@snippet :
     * AtkTextRange** atk_text_get_bounded_ranges(AtkText* text, AtkTextRectangle* rect, AtkCoordType coord_type, AtkTextClipType x_clip_type, AtkTextClipType y_clip_type);
     * }
     */
    public static MemorySegment atk_text_get_bounded_ranges(MemorySegment text, MemorySegment rect, int coord_type, int x_clip_type, int y_clip_type) {
        var mh$ = atk_text_get_bounded_ranges$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text, rect, coord_type, x_clip_type, y_clip_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_free_ranges$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.atk_text_free_ranges$MH,"atk_text_free_ranges");
    }
    /**
     * {@snippet :
     * void atk_text_free_ranges(AtkTextRange** ranges);
     * }
     */
    public static void atk_text_free_ranges(MemorySegment ranges) {
        var mh$ = atk_text_free_ranges$MH();
        try {
            mh$.invokeExact(ranges);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_attribute_set_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.atk_attribute_set_free$MH,"atk_attribute_set_free");
    }
    /**
     * {@snippet :
     * void atk_attribute_set_free(AtkAttributeSet* attrib_set);
     * }
     */
    public static void atk_attribute_set_free(MemorySegment attrib_set) {
        var mh$ = atk_attribute_set_free$MH();
        try {
            mh$.invokeExact(attrib_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_attribute_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.atk_text_attribute_get_name$MH,"atk_text_attribute_get_name");
    }
    /**
     * {@snippet :
     * const gchar* atk_text_attribute_get_name(AtkTextAttribute attr);
     * }
     */
    public static MemorySegment atk_text_attribute_get_name(int attr) {
        var mh$ = atk_text_attribute_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_attribute_for_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.atk_text_attribute_for_name$MH,"atk_text_attribute_for_name");
    }
    /**
     * {@snippet :
     * AtkTextAttribute atk_text_attribute_for_name(const gchar* name);
     * }
     */
    public static int atk_text_attribute_for_name(MemorySegment name) {
        var mh$ = atk_text_attribute_for_name$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_attribute_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.atk_text_attribute_get_value$MH,"atk_text_attribute_get_value");
    }
    /**
     * {@snippet :
     * const gchar* atk_text_attribute_get_value(AtkTextAttribute attr, gint index_);
     * }
     */
    public static MemorySegment atk_text_attribute_get_value(int attr, int index_) {
        var mh$ = atk_text_attribute_get_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(attr, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_scroll_substring_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.atk_text_scroll_substring_to$MH,"atk_text_scroll_substring_to");
    }
    /**
     * {@snippet :
     * gboolean atk_text_scroll_substring_to(AtkText* text, gint start_offset, gint end_offset, AtkScrollType type);
     * }
     */
    public static int atk_text_scroll_substring_to(MemorySegment text, int start_offset, int end_offset, int type) {
        var mh$ = atk_text_scroll_substring_to$MH();
        try {
            return (int)mh$.invokeExact(text, start_offset, end_offset, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_text_scroll_substring_to_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.atk_text_scroll_substring_to_point$MH,"atk_text_scroll_substring_to_point");
    }
    /**
     * {@snippet :
     * gboolean atk_text_scroll_substring_to_point(AtkText* text, gint start_offset, gint end_offset, AtkCoordType coords, gint x, gint y);
     * }
     */
    public static int atk_text_scroll_substring_to_point(MemorySegment text, int start_offset, int end_offset, int coords, int x, int y) {
        var mh$ = atk_text_scroll_substring_to_point$MH();
        try {
            return (int)mh$.invokeExact(text, start_offset, end_offset, coords, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.atk_editable_text_get_type$MH,"atk_editable_text_get_type");
    }
    /**
     * {@snippet :
     * GType atk_editable_text_get_type();
     * }
     */
    public static long atk_editable_text_get_type() {
        var mh$ = atk_editable_text_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_set_run_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.atk_editable_text_set_run_attributes$MH,"atk_editable_text_set_run_attributes");
    }
    /**
     * {@snippet :
     * gboolean atk_editable_text_set_run_attributes(AtkEditableText* text, AtkAttributeSet* attrib_set, gint start_offset, gint end_offset);
     * }
     */
    public static int atk_editable_text_set_run_attributes(MemorySegment text, MemorySegment attrib_set, int start_offset, int end_offset) {
        var mh$ = atk_editable_text_set_run_attributes$MH();
        try {
            return (int)mh$.invokeExact(text, attrib_set, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_set_text_contents$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.atk_editable_text_set_text_contents$MH,"atk_editable_text_set_text_contents");
    }
    /**
     * {@snippet :
     * void atk_editable_text_set_text_contents(AtkEditableText* text, const gchar* string);
     * }
     */
    public static void atk_editable_text_set_text_contents(MemorySegment text, MemorySegment string) {
        var mh$ = atk_editable_text_set_text_contents$MH();
        try {
            mh$.invokeExact(text, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_insert_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.atk_editable_text_insert_text$MH,"atk_editable_text_insert_text");
    }
    /**
     * {@snippet :
     * void atk_editable_text_insert_text(AtkEditableText* text, const gchar* string, gint length, gint* position);
     * }
     */
    public static void atk_editable_text_insert_text(MemorySegment text, MemorySegment string, int length, MemorySegment position) {
        var mh$ = atk_editable_text_insert_text$MH();
        try {
            mh$.invokeExact(text, string, length, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_copy_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.atk_editable_text_copy_text$MH,"atk_editable_text_copy_text");
    }
    /**
     * {@snippet :
     * void atk_editable_text_copy_text(AtkEditableText* text, gint start_pos, gint end_pos);
     * }
     */
    public static void atk_editable_text_copy_text(MemorySegment text, int start_pos, int end_pos) {
        var mh$ = atk_editable_text_copy_text$MH();
        try {
            mh$.invokeExact(text, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_cut_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.atk_editable_text_cut_text$MH,"atk_editable_text_cut_text");
    }
    /**
     * {@snippet :
     * void atk_editable_text_cut_text(AtkEditableText* text, gint start_pos, gint end_pos);
     * }
     */
    public static void atk_editable_text_cut_text(MemorySegment text, int start_pos, int end_pos) {
        var mh$ = atk_editable_text_cut_text$MH();
        try {
            mh$.invokeExact(text, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_delete_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.atk_editable_text_delete_text$MH,"atk_editable_text_delete_text");
    }
    /**
     * {@snippet :
     * void atk_editable_text_delete_text(AtkEditableText* text, gint start_pos, gint end_pos);
     * }
     */
    public static void atk_editable_text_delete_text(MemorySegment text, int start_pos, int end_pos) {
        var mh$ = atk_editable_text_delete_text$MH();
        try {
            mh$.invokeExact(text, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_editable_text_paste_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.atk_editable_text_paste_text$MH,"atk_editable_text_paste_text");
    }
    /**
     * {@snippet :
     * void atk_editable_text_paste_text(AtkEditableText* text, gint position);
     * }
     */
    public static void atk_editable_text_paste_text(MemorySegment text, int position) {
        var mh$ = atk_editable_text_paste_text$MH();
        try {
            mh$.invokeExact(text, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_gobject_accessible_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.atk_gobject_accessible_get_type$MH,"atk_gobject_accessible_get_type");
    }
    /**
     * {@snippet :
     * GType atk_gobject_accessible_get_type();
     * }
     */
    public static long atk_gobject_accessible_get_type() {
        var mh$ = atk_gobject_accessible_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_gobject_accessible_for_object$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.atk_gobject_accessible_for_object$MH,"atk_gobject_accessible_for_object");
    }
    /**
     * {@snippet :
     * AtkObject* atk_gobject_accessible_for_object(GObject* obj);
     * }
     */
    public static MemorySegment atk_gobject_accessible_for_object(MemorySegment obj) {
        var mh$ = atk_gobject_accessible_for_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_gobject_accessible_get_object$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.atk_gobject_accessible_get_object$MH,"atk_gobject_accessible_get_object");
    }
    /**
     * {@snippet :
     * GObject* atk_gobject_accessible_get_object(AtkGObjectAccessible* obj);
     * }
     */
    public static MemorySegment atk_gobject_accessible_get_object(MemorySegment obj) {
        var mh$ = atk_gobject_accessible_get_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .ATK_HYPERLINK_IS_INLINE = 1;
     * }
     */
    public static int ATK_HYPERLINK_IS_INLINE() {
        return (int)1L;
    }
    public static MethodHandle atk_hyperlink_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.atk_hyperlink_get_type$MH,"atk_hyperlink_get_type");
    }
    /**
     * {@snippet :
     * GType atk_hyperlink_get_type();
     * }
     */
    public static long atk_hyperlink_get_type() {
        var mh$ = atk_hyperlink_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_get_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.atk_hyperlink_get_uri$MH,"atk_hyperlink_get_uri");
    }
    /**
     * {@snippet :
     * gchar* atk_hyperlink_get_uri(AtkHyperlink* link_, gint i);
     * }
     */
    public static MemorySegment atk_hyperlink_get_uri(MemorySegment link_, int i) {
        var mh$ = atk_hyperlink_get_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(link_, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_get_object$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.atk_hyperlink_get_object$MH,"atk_hyperlink_get_object");
    }
    /**
     * {@snippet :
     * AtkObject* atk_hyperlink_get_object(AtkHyperlink* link_, gint i);
     * }
     */
    public static MemorySegment atk_hyperlink_get_object(MemorySegment link_, int i) {
        var mh$ = atk_hyperlink_get_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(link_, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_get_end_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.atk_hyperlink_get_end_index$MH,"atk_hyperlink_get_end_index");
    }
    /**
     * {@snippet :
     * gint atk_hyperlink_get_end_index(AtkHyperlink* link_);
     * }
     */
    public static int atk_hyperlink_get_end_index(MemorySegment link_) {
        var mh$ = atk_hyperlink_get_end_index$MH();
        try {
            return (int)mh$.invokeExact(link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_get_start_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.atk_hyperlink_get_start_index$MH,"atk_hyperlink_get_start_index");
    }
    /**
     * {@snippet :
     * gint atk_hyperlink_get_start_index(AtkHyperlink* link_);
     * }
     */
    public static int atk_hyperlink_get_start_index(MemorySegment link_) {
        var mh$ = atk_hyperlink_get_start_index$MH();
        try {
            return (int)mh$.invokeExact(link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.atk_hyperlink_is_valid$MH,"atk_hyperlink_is_valid");
    }
    /**
     * {@snippet :
     * gboolean atk_hyperlink_is_valid(AtkHyperlink* link_);
     * }
     */
    public static int atk_hyperlink_is_valid(MemorySegment link_) {
        var mh$ = atk_hyperlink_is_valid$MH();
        try {
            return (int)mh$.invokeExact(link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_is_inline$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.atk_hyperlink_is_inline$MH,"atk_hyperlink_is_inline");
    }
    /**
     * {@snippet :
     * gboolean atk_hyperlink_is_inline(AtkHyperlink* link_);
     * }
     */
    public static int atk_hyperlink_is_inline(MemorySegment link_) {
        var mh$ = atk_hyperlink_is_inline$MH();
        try {
            return (int)mh$.invokeExact(link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_get_n_anchors$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.atk_hyperlink_get_n_anchors$MH,"atk_hyperlink_get_n_anchors");
    }
    /**
     * {@snippet :
     * gint atk_hyperlink_get_n_anchors(AtkHyperlink* link_);
     * }
     */
    public static int atk_hyperlink_get_n_anchors(MemorySegment link_) {
        var mh$ = atk_hyperlink_get_n_anchors$MH();
        try {
            return (int)mh$.invokeExact(link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_is_selected_link$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.atk_hyperlink_is_selected_link$MH,"atk_hyperlink_is_selected_link");
    }
    /**
     * {@snippet :
     * gboolean atk_hyperlink_is_selected_link(AtkHyperlink* link_);
     * }
     */
    public static int atk_hyperlink_is_selected_link(MemorySegment link_) {
        var mh$ = atk_hyperlink_is_selected_link$MH();
        try {
            return (int)mh$.invokeExact(link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_impl_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.atk_hyperlink_impl_get_type$MH,"atk_hyperlink_impl_get_type");
    }
    /**
     * {@snippet :
     * GType atk_hyperlink_impl_get_type();
     * }
     */
    public static long atk_hyperlink_impl_get_type() {
        var mh$ = atk_hyperlink_impl_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hyperlink_impl_get_hyperlink$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.atk_hyperlink_impl_get_hyperlink$MH,"atk_hyperlink_impl_get_hyperlink");
    }
    /**
     * {@snippet :
     * AtkHyperlink* atk_hyperlink_impl_get_hyperlink(AtkHyperlinkImpl* impl);
     * }
     */
    public static MemorySegment atk_hyperlink_impl_get_hyperlink(MemorySegment impl) {
        var mh$ = atk_hyperlink_impl_get_hyperlink$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(impl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hypertext_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.atk_hypertext_get_type$MH,"atk_hypertext_get_type");
    }
    /**
     * {@snippet :
     * GType atk_hypertext_get_type();
     * }
     */
    public static long atk_hypertext_get_type() {
        var mh$ = atk_hypertext_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hypertext_get_link$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.atk_hypertext_get_link$MH,"atk_hypertext_get_link");
    }
    /**
     * {@snippet :
     * AtkHyperlink* atk_hypertext_get_link(AtkHypertext* hypertext, gint link_index);
     * }
     */
    public static MemorySegment atk_hypertext_get_link(MemorySegment hypertext, int link_index) {
        var mh$ = atk_hypertext_get_link$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hypertext, link_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hypertext_get_n_links$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.atk_hypertext_get_n_links$MH,"atk_hypertext_get_n_links");
    }
    /**
     * {@snippet :
     * gint atk_hypertext_get_n_links(AtkHypertext* hypertext);
     * }
     */
    public static int atk_hypertext_get_n_links(MemorySegment hypertext) {
        var mh$ = atk_hypertext_get_n_links$MH();
        try {
            return (int)mh$.invokeExact(hypertext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_hypertext_get_link_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1224.atk_hypertext_get_link_index$MH,"atk_hypertext_get_link_index");
    }
    /**
     * {@snippet :
     * gint atk_hypertext_get_link_index(AtkHypertext* hypertext, gint char_index);
     * }
     */
    public static int atk_hypertext_get_link_index(MemorySegment hypertext, int char_index) {
        var mh$ = atk_hypertext_get_link_index$MH();
        try {
            return (int)mh$.invokeExact(hypertext, char_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_image_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1224.atk_image_get_type$MH,"atk_image_get_type");
    }
    /**
     * {@snippet :
     * GType atk_image_get_type();
     * }
     */
    public static long atk_image_get_type() {
        var mh$ = atk_image_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_image_get_image_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1224.atk_image_get_image_description$MH,"atk_image_get_image_description");
    }
    /**
     * {@snippet :
     * const gchar* atk_image_get_image_description(AtkImage* image);
     * }
     */
    public static MemorySegment atk_image_get_image_description(MemorySegment image) {
        var mh$ = atk_image_get_image_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_image_get_image_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1224.atk_image_get_image_size$MH,"atk_image_get_image_size");
    }
    /**
     * {@snippet :
     * void atk_image_get_image_size(AtkImage* image, gint* width, gint* height);
     * }
     */
    public static void atk_image_get_image_size(MemorySegment image, MemorySegment width, MemorySegment height) {
        var mh$ = atk_image_get_image_size$MH();
        try {
            mh$.invokeExact(image, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_image_set_image_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1224.atk_image_set_image_description$MH,"atk_image_set_image_description");
    }
    /**
     * {@snippet :
     * gboolean atk_image_set_image_description(AtkImage* image, const gchar* description);
     * }
     */
    public static int atk_image_set_image_description(MemorySegment image, MemorySegment description) {
        var mh$ = atk_image_set_image_description$MH();
        try {
            return (int)mh$.invokeExact(image, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_image_get_image_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1224.atk_image_get_image_position$MH,"atk_image_get_image_position");
    }
    /**
     * {@snippet :
     * void atk_image_get_image_position(AtkImage* image, gint* x, gint* y, AtkCoordType coord_type);
     * }
     */
    public static void atk_image_get_image_position(MemorySegment image, MemorySegment x, MemorySegment y, int coord_type) {
        var mh$ = atk_image_get_image_position$MH();
        try {
            mh$.invokeExact(image, x, y, coord_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_image_get_image_locale$MH() {
        return RuntimeHelper.requireNonNull(constants$1225.atk_image_get_image_locale$MH,"atk_image_get_image_locale");
    }
    /**
     * {@snippet :
     * const gchar* atk_image_get_image_locale(AtkImage* image);
     * }
     */
    public static MemorySegment atk_image_get_image_locale(MemorySegment image) {
        var mh$ = atk_image_get_image_locale$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout atk_misc_instance$LAYOUT() {
        return constants$1225.atk_misc_instance$LAYOUT;
    }
    public static VarHandle atk_misc_instance$VH() {
        return constants$1225.atk_misc_instance$VH;
    }
    public static MemorySegment atk_misc_instance$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1225.atk_misc_instance$SEGMENT,"atk_misc_instance");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * AtkMisc* atk_misc_instance;
     * }
     */
    public static MemorySegment atk_misc_instance$get() {
        return (java.lang.foreign.MemorySegment) constants$1225.atk_misc_instance$VH.get(RuntimeHelper.requireNonNull(constants$1225.atk_misc_instance$SEGMENT, "atk_misc_instance"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * AtkMisc* atk_misc_instance;
     * }
     */
    public static void atk_misc_instance$set(MemorySegment x) {
        constants$1225.atk_misc_instance$VH.set(RuntimeHelper.requireNonNull(constants$1225.atk_misc_instance$SEGMENT, "atk_misc_instance"), x);
    }
    public static MethodHandle atk_misc_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1225.atk_misc_get_type$MH,"atk_misc_get_type");
    }
    /**
     * {@snippet :
     * GType atk_misc_get_type();
     * }
     */
    public static long atk_misc_get_type() {
        var mh$ = atk_misc_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_misc_threads_enter$MH() {
        return RuntimeHelper.requireNonNull(constants$1225.atk_misc_threads_enter$MH,"atk_misc_threads_enter");
    }
    /**
     * {@snippet :
     * void atk_misc_threads_enter(AtkMisc* misc);
     * }
     */
    public static void atk_misc_threads_enter(MemorySegment misc) {
        var mh$ = atk_misc_threads_enter$MH();
        try {
            mh$.invokeExact(misc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_misc_threads_leave$MH() {
        return RuntimeHelper.requireNonNull(constants$1225.atk_misc_threads_leave$MH,"atk_misc_threads_leave");
    }
    /**
     * {@snippet :
     * void atk_misc_threads_leave(AtkMisc* misc);
     * }
     */
    public static void atk_misc_threads_leave(MemorySegment misc) {
        var mh$ = atk_misc_threads_leave$MH();
        try {
            mh$.invokeExact(misc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_misc_get_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$1225.atk_misc_get_instance$MH,"atk_misc_get_instance");
    }
    /**
     * {@snippet :
     * const AtkMisc* atk_misc_get_instance();
     * }
     */
    public static MemorySegment atk_misc_get_instance() {
        var mh$ = atk_misc_get_instance$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_no_op_object_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1226.atk_no_op_object_get_type$MH,"atk_no_op_object_get_type");
    }
    /**
     * {@snippet :
     * GType atk_no_op_object_get_type();
     * }
     */
    public static long atk_no_op_object_get_type() {
        var mh$ = atk_no_op_object_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_no_op_object_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1226.atk_no_op_object_new$MH,"atk_no_op_object_new");
    }
    /**
     * {@snippet :
     * AtkObject* atk_no_op_object_new(GObject* obj);
     * }
     */
    public static MemorySegment atk_no_op_object_new(MemorySegment obj) {
        var mh$ = atk_no_op_object_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_factory_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1226.atk_object_factory_get_type$MH,"atk_object_factory_get_type");
    }
    /**
     * {@snippet :
     * GType atk_object_factory_get_type();
     * }
     */
    public static long atk_object_factory_get_type() {
        var mh$ = atk_object_factory_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_factory_create_accessible$MH() {
        return RuntimeHelper.requireNonNull(constants$1226.atk_object_factory_create_accessible$MH,"atk_object_factory_create_accessible");
    }
    /**
     * {@snippet :
     * AtkObject* atk_object_factory_create_accessible(AtkObjectFactory* factory, GObject* obj);
     * }
     */
    public static MemorySegment atk_object_factory_create_accessible(MemorySegment factory, MemorySegment obj) {
        var mh$ = atk_object_factory_create_accessible$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(factory, obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_factory_invalidate$MH() {
        return RuntimeHelper.requireNonNull(constants$1226.atk_object_factory_invalidate$MH,"atk_object_factory_invalidate");
    }
    /**
     * {@snippet :
     * void atk_object_factory_invalidate(AtkObjectFactory* factory);
     * }
     */
    public static void atk_object_factory_invalidate(MemorySegment factory) {
        var mh$ = atk_object_factory_invalidate$MH();
        try {
            mh$.invokeExact(factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_object_factory_get_accessible_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1226.atk_object_factory_get_accessible_type$MH,"atk_object_factory_get_accessible_type");
    }
    /**
     * {@snippet :
     * GType atk_object_factory_get_accessible_type(AtkObjectFactory* factory);
     * }
     */
    public static long atk_object_factory_get_accessible_type(MemorySegment factory) {
        var mh$ = atk_object_factory_get_accessible_type$MH();
        try {
            return (long)mh$.invokeExact(factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_no_op_object_factory_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1227.atk_no_op_object_factory_get_type$MH,"atk_no_op_object_factory_get_type");
    }
    /**
     * {@snippet :
     * GType atk_no_op_object_factory_get_type();
     * }
     */
    public static long atk_no_op_object_factory_get_type() {
        var mh$ = atk_no_op_object_factory_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_no_op_object_factory_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1227.atk_no_op_object_factory_new$MH,"atk_no_op_object_factory_new");
    }
    /**
     * {@snippet :
     * AtkObjectFactory* atk_no_op_object_factory_new();
     * }
     */
    public static MemorySegment atk_no_op_object_factory_new() {
        var mh$ = atk_no_op_object_factory_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_plug_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1227.atk_plug_get_type$MH,"atk_plug_get_type");
    }
    /**
     * {@snippet :
     * GType atk_plug_get_type();
     * }
     */
    public static long atk_plug_get_type() {
        var mh$ = atk_plug_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_plug_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1227.atk_plug_new$MH,"atk_plug_new");
    }
    /**
     * {@snippet :
     * AtkObject* atk_plug_new();
     * }
     */
    public static MemorySegment atk_plug_new() {
        var mh$ = atk_plug_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_plug_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1227.atk_plug_set_child$MH,"atk_plug_set_child");
    }
    /**
     * {@snippet :
     * void atk_plug_set_child(AtkPlug* plug, AtkObject* child);
     * }
     */
    public static void atk_plug_set_child(MemorySegment plug, MemorySegment child) {
        var mh$ = atk_plug_set_child$MH();
        try {
            mh$.invokeExact(plug, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_plug_get_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1227.atk_plug_get_id$MH,"atk_plug_get_id");
    }
    /**
     * {@snippet :
     * gchar* atk_plug_get_id(AtkPlug* plug);
     * }
     */
    public static MemorySegment atk_plug_get_id(MemorySegment plug) {
        var mh$ = atk_plug_get_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(plug);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.atk_range_get_type$MH,"atk_range_get_type");
    }
    /**
     * {@snippet :
     * GType atk_range_get_type();
     * }
     */
    public static long atk_range_get_type() {
        var mh$ = atk_range_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.atk_range_copy$MH,"atk_range_copy");
    }
    /**
     * {@snippet :
     * AtkRange* atk_range_copy(AtkRange* src);
     * }
     */
    public static MemorySegment atk_range_copy(MemorySegment src) {
        var mh$ = atk_range_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.atk_range_free$MH,"atk_range_free");
    }
    /**
     * {@snippet :
     * void atk_range_free(AtkRange* range);
     * }
     */
    public static void atk_range_free(MemorySegment range) {
        var mh$ = atk_range_free$MH();
        try {
            mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_get_lower_limit$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.atk_range_get_lower_limit$MH,"atk_range_get_lower_limit");
    }
    /**
     * {@snippet :
     * gdouble atk_range_get_lower_limit(AtkRange* range);
     * }
     */
    public static double atk_range_get_lower_limit(MemorySegment range) {
        var mh$ = atk_range_get_lower_limit$MH();
        try {
            return (double)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_get_upper_limit$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.atk_range_get_upper_limit$MH,"atk_range_get_upper_limit");
    }
    /**
     * {@snippet :
     * gdouble atk_range_get_upper_limit(AtkRange* range);
     * }
     */
    public static double atk_range_get_upper_limit(MemorySegment range) {
        var mh$ = atk_range_get_upper_limit$MH();
        try {
            return (double)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.atk_range_get_description$MH,"atk_range_get_description");
    }
    /**
     * {@snippet :
     * const gchar* atk_range_get_description(AtkRange* range);
     * }
     */
    public static MemorySegment atk_range_get_description(MemorySegment range) {
        var mh$ = atk_range_get_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_range_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1229.atk_range_new$MH,"atk_range_new");
    }
    /**
     * {@snippet :
     * AtkRange* atk_range_new(gdouble lower_limit, gdouble upper_limit, const gchar* description);
     * }
     */
    public static MemorySegment atk_range_new(double lower_limit, double upper_limit, MemorySegment description) {
        var mh$ = atk_range_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(lower_limit, upper_limit, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_registry_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1229.atk_registry_get_type$MH,"atk_registry_get_type");
    }
    /**
     * {@snippet :
     * GType atk_registry_get_type();
     * }
     */
    public static long atk_registry_get_type() {
        var mh$ = atk_registry_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_registry_set_factory_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1229.atk_registry_set_factory_type$MH,"atk_registry_set_factory_type");
    }
    /**
     * {@snippet :
     * void atk_registry_set_factory_type(AtkRegistry* registry, GType type, GType factory_type);
     * }
     */
    public static void atk_registry_set_factory_type(MemorySegment registry, long type, long factory_type) {
        var mh$ = atk_registry_set_factory_type$MH();
        try {
            mh$.invokeExact(registry, type, factory_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_registry_get_factory_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1229.atk_registry_get_factory_type$MH,"atk_registry_get_factory_type");
    }
    /**
     * {@snippet :
     * GType atk_registry_get_factory_type(AtkRegistry* registry, GType type);
     * }
     */
    public static long atk_registry_get_factory_type(MemorySegment registry, long type) {
        var mh$ = atk_registry_get_factory_type$MH();
        try {
            return (long)mh$.invokeExact(registry, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_registry_get_factory$MH() {
        return RuntimeHelper.requireNonNull(constants$1229.atk_registry_get_factory$MH,"atk_registry_get_factory");
    }
    /**
     * {@snippet :
     * AtkObjectFactory* atk_registry_get_factory(AtkRegistry* registry, GType type);
     * }
     */
    public static MemorySegment atk_registry_get_factory(MemorySegment registry, long type) {
        var mh$ = atk_registry_get_factory$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(registry, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_get_default_registry$MH() {
        return RuntimeHelper.requireNonNull(constants$1229.atk_get_default_registry$MH,"atk_get_default_registry");
    }
    /**
     * {@snippet :
     * AtkRegistry* atk_get_default_registry();
     * }
     */
    public static MemorySegment atk_get_default_registry() {
        var mh$ = atk_get_default_registry$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.atk_relation_get_type$MH,"atk_relation_get_type");
    }
    /**
     * {@snippet :
     * GType atk_relation_get_type();
     * }
     */
    public static long atk_relation_get_type() {
        var mh$ = atk_relation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_type_register$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.atk_relation_type_register$MH,"atk_relation_type_register");
    }
    /**
     * {@snippet :
     * AtkRelationType atk_relation_type_register(const gchar* name);
     * }
     */
    public static int atk_relation_type_register(MemorySegment name) {
        var mh$ = atk_relation_type_register$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_type_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.atk_relation_type_get_name$MH,"atk_relation_type_get_name");
    }
    /**
     * {@snippet :
     * const gchar* atk_relation_type_get_name(AtkRelationType type);
     * }
     */
    public static MemorySegment atk_relation_type_get_name(int type) {
        var mh$ = atk_relation_type_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_type_for_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.atk_relation_type_for_name$MH,"atk_relation_type_for_name");
    }
    /**
     * {@snippet :
     * AtkRelationType atk_relation_type_for_name(const gchar* name);
     * }
     */
    public static int atk_relation_type_for_name(MemorySegment name) {
        var mh$ = atk_relation_type_for_name$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.atk_relation_new$MH,"atk_relation_new");
    }
    /**
     * {@snippet :
     * AtkRelation* atk_relation_new(AtkObject** targets, gint n_targets, AtkRelationType relationship);
     * }
     */
    public static MemorySegment atk_relation_new(MemorySegment targets, int n_targets, int relationship) {
        var mh$ = atk_relation_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(targets, n_targets, relationship);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_get_relation_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.atk_relation_get_relation_type$MH,"atk_relation_get_relation_type");
    }
    /**
     * {@snippet :
     * AtkRelationType atk_relation_get_relation_type(AtkRelation* relation);
     * }
     */
    public static int atk_relation_get_relation_type(MemorySegment relation) {
        var mh$ = atk_relation_get_relation_type$MH();
        try {
            return (int)mh$.invokeExact(relation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_get_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1231.atk_relation_get_target$MH,"atk_relation_get_target");
    }
    /**
     * {@snippet :
     * GPtrArray* atk_relation_get_target(AtkRelation* relation);
     * }
     */
    public static MemorySegment atk_relation_get_target(MemorySegment relation) {
        var mh$ = atk_relation_get_target$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(relation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_add_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1231.atk_relation_add_target$MH,"atk_relation_add_target");
    }
    /**
     * {@snippet :
     * void atk_relation_add_target(AtkRelation* relation, AtkObject* target);
     * }
     */
    public static void atk_relation_add_target(MemorySegment relation, MemorySegment target) {
        var mh$ = atk_relation_add_target$MH();
        try {
            mh$.invokeExact(relation, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_remove_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1231.atk_relation_remove_target$MH,"atk_relation_remove_target");
    }
    /**
     * {@snippet :
     * gboolean atk_relation_remove_target(AtkRelation* relation, AtkObject* target);
     * }
     */
    public static int atk_relation_remove_target(MemorySegment relation, MemorySegment target) {
        var mh$ = atk_relation_remove_target$MH();
        try {
            return (int)mh$.invokeExact(relation, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1231.atk_relation_set_get_type$MH,"atk_relation_set_get_type");
    }
    /**
     * {@snippet :
     * GType atk_relation_set_get_type();
     * }
     */
    public static long atk_relation_set_get_type() {
        var mh$ = atk_relation_set_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1231.atk_relation_set_new$MH,"atk_relation_set_new");
    }
    /**
     * {@snippet :
     * AtkRelationSet* atk_relation_set_new();
     * }
     */
    public static MemorySegment atk_relation_set_new() {
        var mh$ = atk_relation_set_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_contains$MH() {
        return RuntimeHelper.requireNonNull(constants$1231.atk_relation_set_contains$MH,"atk_relation_set_contains");
    }
    /**
     * {@snippet :
     * gboolean atk_relation_set_contains(AtkRelationSet* set, AtkRelationType relationship);
     * }
     */
    public static int atk_relation_set_contains(MemorySegment set, int relationship) {
        var mh$ = atk_relation_set_contains$MH();
        try {
            return (int)mh$.invokeExact(set, relationship);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_contains_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.atk_relation_set_contains_target$MH,"atk_relation_set_contains_target");
    }
    /**
     * {@snippet :
     * gboolean atk_relation_set_contains_target(AtkRelationSet* set, AtkRelationType relationship, AtkObject* target);
     * }
     */
    public static int atk_relation_set_contains_target(MemorySegment set, int relationship, MemorySegment target) {
        var mh$ = atk_relation_set_contains_target$MH();
        try {
            return (int)mh$.invokeExact(set, relationship, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.atk_relation_set_remove$MH,"atk_relation_set_remove");
    }
    /**
     * {@snippet :
     * void atk_relation_set_remove(AtkRelationSet* set, AtkRelation* relation);
     * }
     */
    public static void atk_relation_set_remove(MemorySegment set, MemorySegment relation) {
        var mh$ = atk_relation_set_remove$MH();
        try {
            mh$.invokeExact(set, relation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_add$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.atk_relation_set_add$MH,"atk_relation_set_add");
    }
    /**
     * {@snippet :
     * void atk_relation_set_add(AtkRelationSet* set, AtkRelation* relation);
     * }
     */
    public static void atk_relation_set_add(MemorySegment set, MemorySegment relation) {
        var mh$ = atk_relation_set_add$MH();
        try {
            mh$.invokeExact(set, relation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_get_n_relations$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.atk_relation_set_get_n_relations$MH,"atk_relation_set_get_n_relations");
    }
    /**
     * {@snippet :
     * gint atk_relation_set_get_n_relations(AtkRelationSet* set);
     * }
     */
    public static int atk_relation_set_get_n_relations(MemorySegment set) {
        var mh$ = atk_relation_set_get_n_relations$MH();
        try {
            return (int)mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_get_relation$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.atk_relation_set_get_relation$MH,"atk_relation_set_get_relation");
    }
    /**
     * {@snippet :
     * AtkRelation* atk_relation_set_get_relation(AtkRelationSet* set, gint i);
     * }
     */
    public static MemorySegment atk_relation_set_get_relation(MemorySegment set, int i) {
        var mh$ = atk_relation_set_get_relation$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(set, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_get_relation_by_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.atk_relation_set_get_relation_by_type$MH,"atk_relation_set_get_relation_by_type");
    }
    /**
     * {@snippet :
     * AtkRelation* atk_relation_set_get_relation_by_type(AtkRelationSet* set, AtkRelationType relationship);
     * }
     */
    public static MemorySegment atk_relation_set_get_relation_by_type(MemorySegment set, int relationship) {
        var mh$ = atk_relation_set_get_relation_by_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(set, relationship);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_relation_set_add_relation_by_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1233.atk_relation_set_add_relation_by_type$MH,"atk_relation_set_add_relation_by_type");
    }
    /**
     * {@snippet :
     * void atk_relation_set_add_relation_by_type(AtkRelationSet* set, AtkRelationType relationship, AtkObject* target);
     * }
     */
    public static void atk_relation_set_add_relation_by_type(MemorySegment set, int relationship, MemorySegment target) {
        var mh$ = atk_relation_set_add_relation_by_type$MH();
        try {
            mh$.invokeExact(set, relationship, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1233.atk_selection_get_type$MH,"atk_selection_get_type");
    }
    /**
     * {@snippet :
     * GType atk_selection_get_type();
     * }
     */
    public static long atk_selection_get_type() {
        var mh$ = atk_selection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_add_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1233.atk_selection_add_selection$MH,"atk_selection_add_selection");
    }
    /**
     * {@snippet :
     * gboolean atk_selection_add_selection(AtkSelection* selection, gint i);
     * }
     */
    public static int atk_selection_add_selection(MemorySegment selection, int i) {
        var mh$ = atk_selection_add_selection$MH();
        try {
            return (int)mh$.invokeExact(selection, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_clear_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1233.atk_selection_clear_selection$MH,"atk_selection_clear_selection");
    }
    /**
     * {@snippet :
     * gboolean atk_selection_clear_selection(AtkSelection* selection);
     * }
     */
    public static int atk_selection_clear_selection(MemorySegment selection) {
        var mh$ = atk_selection_clear_selection$MH();
        try {
            return (int)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_ref_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1233.atk_selection_ref_selection$MH,"atk_selection_ref_selection");
    }
    /**
     * {@snippet :
     * AtkObject* atk_selection_ref_selection(AtkSelection* selection, gint i);
     * }
     */
    public static MemorySegment atk_selection_ref_selection(MemorySegment selection, int i) {
        var mh$ = atk_selection_ref_selection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(selection, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_get_selection_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1233.atk_selection_get_selection_count$MH,"atk_selection_get_selection_count");
    }
    /**
     * {@snippet :
     * gint atk_selection_get_selection_count(AtkSelection* selection);
     * }
     */
    public static int atk_selection_get_selection_count(MemorySegment selection) {
        var mh$ = atk_selection_get_selection_count$MH();
        try {
            return (int)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_is_child_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$1234.atk_selection_is_child_selected$MH,"atk_selection_is_child_selected");
    }
    /**
     * {@snippet :
     * gboolean atk_selection_is_child_selected(AtkSelection* selection, gint i);
     * }
     */
    public static int atk_selection_is_child_selected(MemorySegment selection, int i) {
        var mh$ = atk_selection_is_child_selected$MH();
        try {
            return (int)mh$.invokeExact(selection, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_remove_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1234.atk_selection_remove_selection$MH,"atk_selection_remove_selection");
    }
    /**
     * {@snippet :
     * gboolean atk_selection_remove_selection(AtkSelection* selection, gint i);
     * }
     */
    public static int atk_selection_remove_selection(MemorySegment selection, int i) {
        var mh$ = atk_selection_remove_selection$MH();
        try {
            return (int)mh$.invokeExact(selection, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_selection_select_all_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1234.atk_selection_select_all_selection$MH,"atk_selection_select_all_selection");
    }
    /**
     * {@snippet :
     * gboolean atk_selection_select_all_selection(AtkSelection* selection);
     * }
     */
    public static int atk_selection_select_all_selection(MemorySegment selection) {
        var mh$ = atk_selection_select_all_selection$MH();
        try {
            return (int)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_socket_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1234.atk_socket_get_type$MH,"atk_socket_get_type");
    }
    /**
     * {@snippet :
     * GType atk_socket_get_type();
     * }
     */
    public static long atk_socket_get_type() {
        var mh$ = atk_socket_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_socket_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1234.atk_socket_new$MH,"atk_socket_new");
    }
    /**
     * {@snippet :
     * AtkObject* atk_socket_new();
     * }
     */
    public static MemorySegment atk_socket_new() {
        var mh$ = atk_socket_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_socket_embed$MH() {
        return RuntimeHelper.requireNonNull(constants$1234.atk_socket_embed$MH,"atk_socket_embed");
    }
    /**
     * {@snippet :
     * void atk_socket_embed(AtkSocket* obj, const gchar* plug_id);
     * }
     */
    public static void atk_socket_embed(MemorySegment obj, MemorySegment plug_id) {
        var mh$ = atk_socket_embed$MH();
        try {
            mh$.invokeExact(obj, plug_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_socket_is_occupied$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.atk_socket_is_occupied$MH,"atk_socket_is_occupied");
    }
    /**
     * {@snippet :
     * gboolean atk_socket_is_occupied(AtkSocket* obj);
     * }
     */
    public static int atk_socket_is_occupied(MemorySegment obj) {
        var mh$ = atk_socket_is_occupied$MH();
        try {
            return (int)mh$.invokeExact(obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.atk_state_set_get_type$MH,"atk_state_set_get_type");
    }
    /**
     * {@snippet :
     * GType atk_state_set_get_type();
     * }
     */
    public static long atk_state_set_get_type() {
        var mh$ = atk_state_set_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.atk_state_set_new$MH,"atk_state_set_new");
    }
    /**
     * {@snippet :
     * AtkStateSet* atk_state_set_new();
     * }
     */
    public static MemorySegment atk_state_set_new() {
        var mh$ = atk_state_set_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_is_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.atk_state_set_is_empty$MH,"atk_state_set_is_empty");
    }
    /**
     * {@snippet :
     * gboolean atk_state_set_is_empty(AtkStateSet* set);
     * }
     */
    public static int atk_state_set_is_empty(MemorySegment set) {
        var mh$ = atk_state_set_is_empty$MH();
        try {
            return (int)mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_add_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.atk_state_set_add_state$MH,"atk_state_set_add_state");
    }
    /**
     * {@snippet :
     * gboolean atk_state_set_add_state(AtkStateSet* set, AtkStateType type);
     * }
     */
    public static int atk_state_set_add_state(MemorySegment set, int type) {
        var mh$ = atk_state_set_add_state$MH();
        try {
            return (int)mh$.invokeExact(set, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_add_states$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.atk_state_set_add_states$MH,"atk_state_set_add_states");
    }
    /**
     * {@snippet :
     * void atk_state_set_add_states(AtkStateSet* set, AtkStateType* types, gint n_types);
     * }
     */
    public static void atk_state_set_add_states(MemorySegment set, MemorySegment types, int n_types) {
        var mh$ = atk_state_set_add_states$MH();
        try {
            mh$.invokeExact(set, types, n_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_clear_states$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.atk_state_set_clear_states$MH,"atk_state_set_clear_states");
    }
    /**
     * {@snippet :
     * void atk_state_set_clear_states(AtkStateSet* set);
     * }
     */
    public static void atk_state_set_clear_states(MemorySegment set) {
        var mh$ = atk_state_set_clear_states$MH();
        try {
            mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_contains_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.atk_state_set_contains_state$MH,"atk_state_set_contains_state");
    }
    /**
     * {@snippet :
     * gboolean atk_state_set_contains_state(AtkStateSet* set, AtkStateType type);
     * }
     */
    public static int atk_state_set_contains_state(MemorySegment set, int type) {
        var mh$ = atk_state_set_contains_state$MH();
        try {
            return (int)mh$.invokeExact(set, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_contains_states$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.atk_state_set_contains_states$MH,"atk_state_set_contains_states");
    }
    /**
     * {@snippet :
     * gboolean atk_state_set_contains_states(AtkStateSet* set, AtkStateType* types, gint n_types);
     * }
     */
    public static int atk_state_set_contains_states(MemorySegment set, MemorySegment types, int n_types) {
        var mh$ = atk_state_set_contains_states$MH();
        try {
            return (int)mh$.invokeExact(set, types, n_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_remove_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.atk_state_set_remove_state$MH,"atk_state_set_remove_state");
    }
    /**
     * {@snippet :
     * gboolean atk_state_set_remove_state(AtkStateSet* set, AtkStateType type);
     * }
     */
    public static int atk_state_set_remove_state(MemorySegment set, int type) {
        var mh$ = atk_state_set_remove_state$MH();
        try {
            return (int)mh$.invokeExact(set, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_and_sets$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.atk_state_set_and_sets$MH,"atk_state_set_and_sets");
    }
    /**
     * {@snippet :
     * AtkStateSet* atk_state_set_and_sets(AtkStateSet* set, AtkStateSet* compare_set);
     * }
     */
    public static MemorySegment atk_state_set_and_sets(MemorySegment set, MemorySegment compare_set) {
        var mh$ = atk_state_set_and_sets$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(set, compare_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_or_sets$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.atk_state_set_or_sets$MH,"atk_state_set_or_sets");
    }
    /**
     * {@snippet :
     * AtkStateSet* atk_state_set_or_sets(AtkStateSet* set, AtkStateSet* compare_set);
     * }
     */
    public static MemorySegment atk_state_set_or_sets(MemorySegment set, MemorySegment compare_set) {
        var mh$ = atk_state_set_or_sets$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(set, compare_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_state_set_xor_sets$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.atk_state_set_xor_sets$MH,"atk_state_set_xor_sets");
    }
    /**
     * {@snippet :
     * AtkStateSet* atk_state_set_xor_sets(AtkStateSet* set, AtkStateSet* compare_set);
     * }
     */
    public static MemorySegment atk_state_set_xor_sets(MemorySegment set, MemorySegment compare_set) {
        var mh$ = atk_state_set_xor_sets$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(set, compare_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_streamable_content_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.atk_streamable_content_get_type$MH,"atk_streamable_content_get_type");
    }
    /**
     * {@snippet :
     * GType atk_streamable_content_get_type();
     * }
     */
    public static long atk_streamable_content_get_type() {
        var mh$ = atk_streamable_content_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_streamable_content_get_n_mime_types$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.atk_streamable_content_get_n_mime_types$MH,"atk_streamable_content_get_n_mime_types");
    }
    /**
     * {@snippet :
     * gint atk_streamable_content_get_n_mime_types(AtkStreamableContent* streamable);
     * }
     */
    public static int atk_streamable_content_get_n_mime_types(MemorySegment streamable) {
        var mh$ = atk_streamable_content_get_n_mime_types$MH();
        try {
            return (int)mh$.invokeExact(streamable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_streamable_content_get_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.atk_streamable_content_get_mime_type$MH,"atk_streamable_content_get_mime_type");
    }
    /**
     * {@snippet :
     * const gchar* atk_streamable_content_get_mime_type(AtkStreamableContent* streamable, gint i);
     * }
     */
    public static MemorySegment atk_streamable_content_get_mime_type(MemorySegment streamable, int i) {
        var mh$ = atk_streamable_content_get_mime_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(streamable, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_streamable_content_get_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.atk_streamable_content_get_stream$MH,"atk_streamable_content_get_stream");
    }
    /**
     * {@snippet :
     * GIOChannel* atk_streamable_content_get_stream(AtkStreamableContent* streamable, const gchar* mime_type);
     * }
     */
    public static MemorySegment atk_streamable_content_get_stream(MemorySegment streamable, MemorySegment mime_type) {
        var mh$ = atk_streamable_content_get_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(streamable, mime_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_streamable_content_get_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.atk_streamable_content_get_uri$MH,"atk_streamable_content_get_uri");
    }
    /**
     * {@snippet :
     * const gchar* atk_streamable_content_get_uri(AtkStreamableContent* streamable, const gchar* mime_type);
     * }
     */
    public static MemorySegment atk_streamable_content_get_uri(MemorySegment streamable, MemorySegment mime_type) {
        var mh$ = atk_streamable_content_get_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(streamable, mime_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.atk_table_get_type$MH,"atk_table_get_type");
    }
    /**
     * {@snippet :
     * GType atk_table_get_type();
     * }
     */
    public static long atk_table_get_type() {
        var mh$ = atk_table_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_ref_at$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.atk_table_ref_at$MH,"atk_table_ref_at");
    }
    /**
     * {@snippet :
     * AtkObject* atk_table_ref_at(AtkTable* table, gint row, gint column);
     * }
     */
    public static MemorySegment atk_table_ref_at(MemorySegment table, int row, int column) {
        var mh$ = atk_table_ref_at$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(table, row, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_index_at$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.atk_table_get_index_at$MH,"atk_table_get_index_at");
    }
    /**
     * {@snippet :
     * gint atk_table_get_index_at(AtkTable* table, gint row, gint column);
     * }
     */
    public static int atk_table_get_index_at(MemorySegment table, int row, int column) {
        var mh$ = atk_table_get_index_at$MH();
        try {
            return (int)mh$.invokeExact(table, row, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_column_at_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.atk_table_get_column_at_index$MH,"atk_table_get_column_at_index");
    }
    /**
     * {@snippet :
     * gint atk_table_get_column_at_index(AtkTable* table, gint index_);
     * }
     */
    public static int atk_table_get_column_at_index(MemorySegment table, int index_) {
        var mh$ = atk_table_get_column_at_index$MH();
        try {
            return (int)mh$.invokeExact(table, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_row_at_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.atk_table_get_row_at_index$MH,"atk_table_get_row_at_index");
    }
    /**
     * {@snippet :
     * gint atk_table_get_row_at_index(AtkTable* table, gint index_);
     * }
     */
    public static int atk_table_get_row_at_index(MemorySegment table, int index_) {
        var mh$ = atk_table_get_row_at_index$MH();
        try {
            return (int)mh$.invokeExact(table, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_n_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.atk_table_get_n_columns$MH,"atk_table_get_n_columns");
    }
    /**
     * {@snippet :
     * gint atk_table_get_n_columns(AtkTable* table);
     * }
     */
    public static int atk_table_get_n_columns(MemorySegment table) {
        var mh$ = atk_table_get_n_columns$MH();
        try {
            return (int)mh$.invokeExact(table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_n_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.atk_table_get_n_rows$MH,"atk_table_get_n_rows");
    }
    /**
     * {@snippet :
     * gint atk_table_get_n_rows(AtkTable* table);
     * }
     */
    public static int atk_table_get_n_rows(MemorySegment table) {
        var mh$ = atk_table_get_n_rows$MH();
        try {
            return (int)mh$.invokeExact(table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_column_extent_at$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.atk_table_get_column_extent_at$MH,"atk_table_get_column_extent_at");
    }
    /**
     * {@snippet :
     * gint atk_table_get_column_extent_at(AtkTable* table, gint row, gint column);
     * }
     */
    public static int atk_table_get_column_extent_at(MemorySegment table, int row, int column) {
        var mh$ = atk_table_get_column_extent_at$MH();
        try {
            return (int)mh$.invokeExact(table, row, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_row_extent_at$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.atk_table_get_row_extent_at$MH,"atk_table_get_row_extent_at");
    }
    /**
     * {@snippet :
     * gint atk_table_get_row_extent_at(AtkTable* table, gint row, gint column);
     * }
     */
    public static int atk_table_get_row_extent_at(MemorySegment table, int row, int column) {
        var mh$ = atk_table_get_row_extent_at$MH();
        try {
            return (int)mh$.invokeExact(table, row, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_caption$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.atk_table_get_caption$MH,"atk_table_get_caption");
    }
    /**
     * {@snippet :
     * AtkObject* atk_table_get_caption(AtkTable* table);
     * }
     */
    public static MemorySegment atk_table_get_caption(MemorySegment table) {
        var mh$ = atk_table_get_caption$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_column_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.atk_table_get_column_description$MH,"atk_table_get_column_description");
    }
    /**
     * {@snippet :
     * const gchar* atk_table_get_column_description(AtkTable* table, gint column);
     * }
     */
    public static MemorySegment atk_table_get_column_description(MemorySegment table, int column) {
        var mh$ = atk_table_get_column_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(table, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_column_header$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.atk_table_get_column_header$MH,"atk_table_get_column_header");
    }
    /**
     * {@snippet :
     * AtkObject* atk_table_get_column_header(AtkTable* table, gint column);
     * }
     */
    public static MemorySegment atk_table_get_column_header(MemorySegment table, int column) {
        var mh$ = atk_table_get_column_header$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(table, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_row_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.atk_table_get_row_description$MH,"atk_table_get_row_description");
    }
    /**
     * {@snippet :
     * const gchar* atk_table_get_row_description(AtkTable* table, gint row);
     * }
     */
    public static MemorySegment atk_table_get_row_description(MemorySegment table, int row) {
        var mh$ = atk_table_get_row_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(table, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_row_header$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.atk_table_get_row_header$MH,"atk_table_get_row_header");
    }
    /**
     * {@snippet :
     * AtkObject* atk_table_get_row_header(AtkTable* table, gint row);
     * }
     */
    public static MemorySegment atk_table_get_row_header(MemorySegment table, int row) {
        var mh$ = atk_table_get_row_header$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(table, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_summary$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.atk_table_get_summary$MH,"atk_table_get_summary");
    }
    /**
     * {@snippet :
     * AtkObject* atk_table_get_summary(AtkTable* table);
     * }
     */
    public static MemorySegment atk_table_get_summary(MemorySegment table) {
        var mh$ = atk_table_get_summary$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_set_caption$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.atk_table_set_caption$MH,"atk_table_set_caption");
    }
    /**
     * {@snippet :
     * void atk_table_set_caption(AtkTable* table, AtkObject* caption);
     * }
     */
    public static void atk_table_set_caption(MemorySegment table, MemorySegment caption) {
        var mh$ = atk_table_set_caption$MH();
        try {
            mh$.invokeExact(table, caption);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_set_column_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.atk_table_set_column_description$MH,"atk_table_set_column_description");
    }
    /**
     * {@snippet :
     * void atk_table_set_column_description(AtkTable* table, gint column, const gchar* description);
     * }
     */
    public static void atk_table_set_column_description(MemorySegment table, int column, MemorySegment description) {
        var mh$ = atk_table_set_column_description$MH();
        try {
            mh$.invokeExact(table, column, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_set_column_header$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.atk_table_set_column_header$MH,"atk_table_set_column_header");
    }
    /**
     * {@snippet :
     * void atk_table_set_column_header(AtkTable* table, gint column, AtkObject* header);
     * }
     */
    public static void atk_table_set_column_header(MemorySegment table, int column, MemorySegment header) {
        var mh$ = atk_table_set_column_header$MH();
        try {
            mh$.invokeExact(table, column, header);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_set_row_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.atk_table_set_row_description$MH,"atk_table_set_row_description");
    }
    /**
     * {@snippet :
     * void atk_table_set_row_description(AtkTable* table, gint row, const gchar* description);
     * }
     */
    public static void atk_table_set_row_description(MemorySegment table, int row, MemorySegment description) {
        var mh$ = atk_table_set_row_description$MH();
        try {
            mh$.invokeExact(table, row, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_set_row_header$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.atk_table_set_row_header$MH,"atk_table_set_row_header");
    }
    /**
     * {@snippet :
     * void atk_table_set_row_header(AtkTable* table, gint row, AtkObject* header);
     * }
     */
    public static void atk_table_set_row_header(MemorySegment table, int row, MemorySegment header) {
        var mh$ = atk_table_set_row_header$MH();
        try {
            mh$.invokeExact(table, row, header);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_set_summary$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.atk_table_set_summary$MH,"atk_table_set_summary");
    }
    /**
     * {@snippet :
     * void atk_table_set_summary(AtkTable* table, AtkObject* accessible);
     * }
     */
    public static void atk_table_set_summary(MemorySegment table, MemorySegment accessible) {
        var mh$ = atk_table_set_summary$MH();
        try {
            mh$.invokeExact(table, accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_selected_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.atk_table_get_selected_columns$MH,"atk_table_get_selected_columns");
    }
    /**
     * {@snippet :
     * gint atk_table_get_selected_columns(AtkTable* table, gint** selected);
     * }
     */
    public static int atk_table_get_selected_columns(MemorySegment table, MemorySegment selected) {
        var mh$ = atk_table_get_selected_columns$MH();
        try {
            return (int)mh$.invokeExact(table, selected);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_get_selected_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.atk_table_get_selected_rows$MH,"atk_table_get_selected_rows");
    }
    /**
     * {@snippet :
     * gint atk_table_get_selected_rows(AtkTable* table, gint** selected);
     * }
     */
    public static int atk_table_get_selected_rows(MemorySegment table, MemorySegment selected) {
        var mh$ = atk_table_get_selected_rows$MH();
        try {
            return (int)mh$.invokeExact(table, selected);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_is_column_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.atk_table_is_column_selected$MH,"atk_table_is_column_selected");
    }
    /**
     * {@snippet :
     * gboolean atk_table_is_column_selected(AtkTable* table, gint column);
     * }
     */
    public static int atk_table_is_column_selected(MemorySegment table, int column) {
        var mh$ = atk_table_is_column_selected$MH();
        try {
            return (int)mh$.invokeExact(table, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_is_row_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.atk_table_is_row_selected$MH,"atk_table_is_row_selected");
    }
    /**
     * {@snippet :
     * gboolean atk_table_is_row_selected(AtkTable* table, gint row);
     * }
     */
    public static int atk_table_is_row_selected(MemorySegment table, int row) {
        var mh$ = atk_table_is_row_selected$MH();
        try {
            return (int)mh$.invokeExact(table, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_is_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.atk_table_is_selected$MH,"atk_table_is_selected");
    }
    /**
     * {@snippet :
     * gboolean atk_table_is_selected(AtkTable* table, gint row, gint column);
     * }
     */
    public static int atk_table_is_selected(MemorySegment table, int row, int column) {
        var mh$ = atk_table_is_selected$MH();
        try {
            return (int)mh$.invokeExact(table, row, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_add_row_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.atk_table_add_row_selection$MH,"atk_table_add_row_selection");
    }
    /**
     * {@snippet :
     * gboolean atk_table_add_row_selection(AtkTable* table, gint row);
     * }
     */
    public static int atk_table_add_row_selection(MemorySegment table, int row) {
        var mh$ = atk_table_add_row_selection$MH();
        try {
            return (int)mh$.invokeExact(table, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_remove_row_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.atk_table_remove_row_selection$MH,"atk_table_remove_row_selection");
    }
    /**
     * {@snippet :
     * gboolean atk_table_remove_row_selection(AtkTable* table, gint row);
     * }
     */
    public static int atk_table_remove_row_selection(MemorySegment table, int row) {
        var mh$ = atk_table_remove_row_selection$MH();
        try {
            return (int)mh$.invokeExact(table, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_add_column_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.atk_table_add_column_selection$MH,"atk_table_add_column_selection");
    }
    /**
     * {@snippet :
     * gboolean atk_table_add_column_selection(AtkTable* table, gint column);
     * }
     */
    public static int atk_table_add_column_selection(MemorySegment table, int column) {
        var mh$ = atk_table_add_column_selection$MH();
        try {
            return (int)mh$.invokeExact(table, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_remove_column_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.atk_table_remove_column_selection$MH,"atk_table_remove_column_selection");
    }
    /**
     * {@snippet :
     * gboolean atk_table_remove_column_selection(AtkTable* table, gint column);
     * }
     */
    public static int atk_table_remove_column_selection(MemorySegment table, int column) {
        var mh$ = atk_table_remove_column_selection$MH();
        try {
            return (int)mh$.invokeExact(table, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_cell_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.atk_table_cell_get_type$MH,"atk_table_cell_get_type");
    }
    /**
     * {@snippet :
     * GType atk_table_cell_get_type();
     * }
     */
    public static long atk_table_cell_get_type() {
        var mh$ = atk_table_cell_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_cell_get_column_span$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.atk_table_cell_get_column_span$MH,"atk_table_cell_get_column_span");
    }
    /**
     * {@snippet :
     * gint atk_table_cell_get_column_span(AtkTableCell* cell);
     * }
     */
    public static int atk_table_cell_get_column_span(MemorySegment cell) {
        var mh$ = atk_table_cell_get_column_span$MH();
        try {
            return (int)mh$.invokeExact(cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_cell_get_column_header_cells$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.atk_table_cell_get_column_header_cells$MH,"atk_table_cell_get_column_header_cells");
    }
    /**
     * {@snippet :
     * GPtrArray* atk_table_cell_get_column_header_cells(AtkTableCell* cell);
     * }
     */
    public static MemorySegment atk_table_cell_get_column_header_cells(MemorySegment cell) {
        var mh$ = atk_table_cell_get_column_header_cells$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_cell_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.atk_table_cell_get_position$MH,"atk_table_cell_get_position");
    }
    /**
     * {@snippet :
     * gboolean atk_table_cell_get_position(AtkTableCell* cell, gint* row, gint* column);
     * }
     */
    public static int atk_table_cell_get_position(MemorySegment cell, MemorySegment row, MemorySegment column) {
        var mh$ = atk_table_cell_get_position$MH();
        try {
            return (int)mh$.invokeExact(cell, row, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_cell_get_row_span$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.atk_table_cell_get_row_span$MH,"atk_table_cell_get_row_span");
    }
    /**
     * {@snippet :
     * gint atk_table_cell_get_row_span(AtkTableCell* cell);
     * }
     */
    public static int atk_table_cell_get_row_span(MemorySegment cell) {
        var mh$ = atk_table_cell_get_row_span$MH();
        try {
            return (int)mh$.invokeExact(cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_cell_get_row_header_cells$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.atk_table_cell_get_row_header_cells$MH,"atk_table_cell_get_row_header_cells");
    }
    /**
     * {@snippet :
     * GPtrArray* atk_table_cell_get_row_header_cells(AtkTableCell* cell);
     * }
     */
    public static MemorySegment atk_table_cell_get_row_header_cells(MemorySegment cell) {
        var mh$ = atk_table_cell_get_row_header_cells$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_cell_get_row_column_span$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.atk_table_cell_get_row_column_span$MH,"atk_table_cell_get_row_column_span");
    }
    /**
     * {@snippet :
     * gboolean atk_table_cell_get_row_column_span(AtkTableCell* cell, gint* row, gint* column, gint* row_span, gint* column_span);
     * }
     */
    public static int atk_table_cell_get_row_column_span(MemorySegment cell, MemorySegment row, MemorySegment column, MemorySegment row_span, MemorySegment column_span) {
        var mh$ = atk_table_cell_get_row_column_span$MH();
        try {
            return (int)mh$.invokeExact(cell, row, column, row_span, column_span);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_table_cell_get_table$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.atk_table_cell_get_table$MH,"atk_table_cell_get_table");
    }
    /**
     * {@snippet :
     * AtkObject* atk_table_cell_get_table(AtkTableCell* cell);
     * }
     */
    public static MemorySegment atk_table_cell_get_table(MemorySegment cell) {
        var mh$ = atk_table_cell_get_table$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .ATK_VALUE_VERY_WEAK = 0;
     * }
     */
    public static int ATK_VALUE_VERY_WEAK() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .ATK_VALUE_WEAK = 1;
     * }
     */
    public static int ATK_VALUE_WEAK() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .ATK_VALUE_ACCEPTABLE = 2;
     * }
     */
    public static int ATK_VALUE_ACCEPTABLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .ATK_VALUE_STRONG = 3;
     * }
     */
    public static int ATK_VALUE_STRONG() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .ATK_VALUE_VERY_STRONG = 4;
     * }
     */
    public static int ATK_VALUE_VERY_STRONG() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .ATK_VALUE_VERY_LOW = 5;
     * }
     */
    public static int ATK_VALUE_VERY_LOW() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .ATK_VALUE_LOW = 6;
     * }
     */
    public static int ATK_VALUE_LOW() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .ATK_VALUE_MEDIUM = 7;
     * }
     */
    public static int ATK_VALUE_MEDIUM() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .ATK_VALUE_HIGH = 8;
     * }
     */
    public static int ATK_VALUE_HIGH() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .ATK_VALUE_VERY_HIGH = 9;
     * }
     */
    public static int ATK_VALUE_VERY_HIGH() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .ATK_VALUE_VERY_BAD = 10;
     * }
     */
    public static int ATK_VALUE_VERY_BAD() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum .ATK_VALUE_BAD = 11;
     * }
     */
    public static int ATK_VALUE_BAD() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum .ATK_VALUE_GOOD = 12;
     * }
     */
    public static int ATK_VALUE_GOOD() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum .ATK_VALUE_VERY_GOOD = 13;
     * }
     */
    public static int ATK_VALUE_VERY_GOOD() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum .ATK_VALUE_BEST = 14;
     * }
     */
    public static int ATK_VALUE_BEST() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum .ATK_VALUE_LAST_DEFINED = 15;
     * }
     */
    public static int ATK_VALUE_LAST_DEFINED() {
        return (int)15L;
    }
    public static MethodHandle atk_value_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.atk_value_get_type$MH,"atk_value_get_type");
    }
    /**
     * {@snippet :
     * GType atk_value_get_type();
     * }
     */
    public static long atk_value_get_type() {
        var mh$ = atk_value_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_get_current_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.atk_value_get_current_value$MH,"atk_value_get_current_value");
    }
    /**
     * {@snippet :
     * void atk_value_get_current_value(AtkValue* obj, GValue* value);
     * }
     */
    public static void atk_value_get_current_value(MemorySegment obj, MemorySegment value) {
        var mh$ = atk_value_get_current_value$MH();
        try {
            mh$.invokeExact(obj, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_get_maximum_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.atk_value_get_maximum_value$MH,"atk_value_get_maximum_value");
    }
    /**
     * {@snippet :
     * void atk_value_get_maximum_value(AtkValue* obj, GValue* value);
     * }
     */
    public static void atk_value_get_maximum_value(MemorySegment obj, MemorySegment value) {
        var mh$ = atk_value_get_maximum_value$MH();
        try {
            mh$.invokeExact(obj, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_get_minimum_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.atk_value_get_minimum_value$MH,"atk_value_get_minimum_value");
    }
    /**
     * {@snippet :
     * void atk_value_get_minimum_value(AtkValue* obj, GValue* value);
     * }
     */
    public static void atk_value_get_minimum_value(MemorySegment obj, MemorySegment value) {
        var mh$ = atk_value_get_minimum_value$MH();
        try {
            mh$.invokeExact(obj, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_set_current_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.atk_value_set_current_value$MH,"atk_value_set_current_value");
    }
    /**
     * {@snippet :
     * gboolean atk_value_set_current_value(AtkValue* obj, const GValue* value);
     * }
     */
    public static int atk_value_set_current_value(MemorySegment obj, MemorySegment value) {
        var mh$ = atk_value_set_current_value$MH();
        try {
            return (int)mh$.invokeExact(obj, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_get_minimum_increment$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.atk_value_get_minimum_increment$MH,"atk_value_get_minimum_increment");
    }
    /**
     * {@snippet :
     * void atk_value_get_minimum_increment(AtkValue* obj, GValue* value);
     * }
     */
    public static void atk_value_get_minimum_increment(MemorySegment obj, MemorySegment value) {
        var mh$ = atk_value_get_minimum_increment$MH();
        try {
            mh$.invokeExact(obj, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_get_value_and_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.atk_value_get_value_and_text$MH,"atk_value_get_value_and_text");
    }
    /**
     * {@snippet :
     * void atk_value_get_value_and_text(AtkValue* obj, gdouble* value, gchar** text);
     * }
     */
    public static void atk_value_get_value_and_text(MemorySegment obj, MemorySegment value, MemorySegment text) {
        var mh$ = atk_value_get_value_and_text$MH();
        try {
            mh$.invokeExact(obj, value, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_get_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.atk_value_get_range$MH,"atk_value_get_range");
    }
    /**
     * {@snippet :
     * AtkRange* atk_value_get_range(AtkValue* obj);
     * }
     */
    public static MemorySegment atk_value_get_range(MemorySegment obj) {
        var mh$ = atk_value_get_range$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_get_increment$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.atk_value_get_increment$MH,"atk_value_get_increment");
    }
    /**
     * {@snippet :
     * gdouble atk_value_get_increment(AtkValue* obj);
     * }
     */
    public static double atk_value_get_increment(MemorySegment obj) {
        var mh$ = atk_value_get_increment$MH();
        try {
            return (double)mh$.invokeExact(obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_get_sub_ranges$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.atk_value_get_sub_ranges$MH,"atk_value_get_sub_ranges");
    }
    /**
     * {@snippet :
     * GSList* atk_value_get_sub_ranges(AtkValue* obj);
     * }
     */
    public static MemorySegment atk_value_get_sub_ranges(MemorySegment obj) {
        var mh$ = atk_value_get_sub_ranges$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.atk_value_set_value$MH,"atk_value_set_value");
    }
    /**
     * {@snippet :
     * void atk_value_set_value(AtkValue* obj, const gdouble new_value);
     * }
     */
    public static void atk_value_set_value(MemorySegment obj, double new_value) {
        var mh$ = atk_value_set_value$MH();
        try {
            mh$.invokeExact(obj, new_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_type_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.atk_value_type_get_name$MH,"atk_value_type_get_name");
    }
    /**
     * {@snippet :
     * const gchar* atk_value_type_get_name(AtkValueType value_type);
     * }
     */
    public static MemorySegment atk_value_type_get_name(int value_type) {
        var mh$ = atk_value_type_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_value_type_get_localized_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.atk_value_type_get_localized_name$MH,"atk_value_type_get_localized_name");
    }
    /**
     * {@snippet :
     * const gchar* atk_value_type_get_localized_name(AtkValueType value_type);
     * }
     */
    public static MemorySegment atk_value_type_get_localized_name(int value_type) {
        var mh$ = atk_value_type_get_localized_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atk_window_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.atk_window_get_type$MH,"atk_window_get_type");
    }
    /**
     * {@snippet :
     * GType atk_window_get_type();
     * }
     */
    public static long atk_window_get_type() {
        var mh$ = atk_window_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _AtkAction* AtkAction_autoptr;
     * }
     */
    public static final OfAddress AtkAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkAction_listautoptr;
     * }
     */
    public static final OfAddress AtkAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkAction_slistautoptr;
     * }
     */
    public static final OfAddress AtkAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkAction_queueautoptr;
     * }
     */
    public static final OfAddress AtkAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkComponent* AtkComponent_autoptr;
     * }
     */
    public static final OfAddress AtkComponent_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkComponent_listautoptr;
     * }
     */
    public static final OfAddress AtkComponent_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkComponent_slistautoptr;
     * }
     */
    public static final OfAddress AtkComponent_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkComponent_queueautoptr;
     * }
     */
    public static final OfAddress AtkComponent_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkDocument* AtkDocument_autoptr;
     * }
     */
    public static final OfAddress AtkDocument_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkDocument_listautoptr;
     * }
     */
    public static final OfAddress AtkDocument_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkDocument_slistautoptr;
     * }
     */
    public static final OfAddress AtkDocument_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkDocument_queueautoptr;
     * }
     */
    public static final OfAddress AtkDocument_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkEditableText* AtkEditableText_autoptr;
     * }
     */
    public static final OfAddress AtkEditableText_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkEditableText_listautoptr;
     * }
     */
    public static final OfAddress AtkEditableText_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkEditableText_slistautoptr;
     * }
     */
    public static final OfAddress AtkEditableText_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkEditableText_queueautoptr;
     * }
     */
    public static final OfAddress AtkEditableText_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkGObjectAccessible* AtkGObjectAccessible_autoptr;
     * }
     */
    public static final OfAddress AtkGObjectAccessible_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkGObjectAccessible_listautoptr;
     * }
     */
    public static final OfAddress AtkGObjectAccessible_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkGObjectAccessible_slistautoptr;
     * }
     */
    public static final OfAddress AtkGObjectAccessible_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkGObjectAccessible_queueautoptr;
     * }
     */
    public static final OfAddress AtkGObjectAccessible_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkHyperlink* AtkHyperlink_autoptr;
     * }
     */
    public static final OfAddress AtkHyperlink_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkHyperlink_listautoptr;
     * }
     */
    public static final OfAddress AtkHyperlink_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkHyperlink_slistautoptr;
     * }
     */
    public static final OfAddress AtkHyperlink_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkHyperlink_queueautoptr;
     * }
     */
    public static final OfAddress AtkHyperlink_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkHyperlinkImpl* AtkHyperlinkImpl_autoptr;
     * }
     */
    public static final OfAddress AtkHyperlinkImpl_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkHyperlinkImpl_listautoptr;
     * }
     */
    public static final OfAddress AtkHyperlinkImpl_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkHyperlinkImpl_slistautoptr;
     * }
     */
    public static final OfAddress AtkHyperlinkImpl_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkHyperlinkImpl_queueautoptr;
     * }
     */
    public static final OfAddress AtkHyperlinkImpl_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkHypertext* AtkHypertext_autoptr;
     * }
     */
    public static final OfAddress AtkHypertext_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkHypertext_listautoptr;
     * }
     */
    public static final OfAddress AtkHypertext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkHypertext_slistautoptr;
     * }
     */
    public static final OfAddress AtkHypertext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkHypertext_queueautoptr;
     * }
     */
    public static final OfAddress AtkHypertext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkImage* AtkImage_autoptr;
     * }
     */
    public static final OfAddress AtkImage_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkImage_listautoptr;
     * }
     */
    public static final OfAddress AtkImage_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkImage_slistautoptr;
     * }
     */
    public static final OfAddress AtkImage_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkImage_queueautoptr;
     * }
     */
    public static final OfAddress AtkImage_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkImplementor* AtkImplementor_autoptr;
     * }
     */
    public static final OfAddress AtkImplementor_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkImplementor_listautoptr;
     * }
     */
    public static final OfAddress AtkImplementor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkImplementor_slistautoptr;
     * }
     */
    public static final OfAddress AtkImplementor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkImplementor_queueautoptr;
     * }
     */
    public static final OfAddress AtkImplementor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkMisc* AtkMisc_autoptr;
     * }
     */
    public static final OfAddress AtkMisc_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkMisc_listautoptr;
     * }
     */
    public static final OfAddress AtkMisc_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkMisc_slistautoptr;
     * }
     */
    public static final OfAddress AtkMisc_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkMisc_queueautoptr;
     * }
     */
    public static final OfAddress AtkMisc_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkNoOpObjectFactory* AtkNoOpObjectFactory_autoptr;
     * }
     */
    public static final OfAddress AtkNoOpObjectFactory_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkNoOpObjectFactory_listautoptr;
     * }
     */
    public static final OfAddress AtkNoOpObjectFactory_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkNoOpObjectFactory_slistautoptr;
     * }
     */
    public static final OfAddress AtkNoOpObjectFactory_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkNoOpObjectFactory_queueautoptr;
     * }
     */
    public static final OfAddress AtkNoOpObjectFactory_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkNoOpObject* AtkNoOpObject_autoptr;
     * }
     */
    public static final OfAddress AtkNoOpObject_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkNoOpObject_listautoptr;
     * }
     */
    public static final OfAddress AtkNoOpObject_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkNoOpObject_slistautoptr;
     * }
     */
    public static final OfAddress AtkNoOpObject_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkNoOpObject_queueautoptr;
     * }
     */
    public static final OfAddress AtkNoOpObject_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkObjectFactory* AtkObjectFactory_autoptr;
     * }
     */
    public static final OfAddress AtkObjectFactory_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkObjectFactory_listautoptr;
     * }
     */
    public static final OfAddress AtkObjectFactory_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkObjectFactory_slistautoptr;
     * }
     */
    public static final OfAddress AtkObjectFactory_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkObjectFactory_queueautoptr;
     * }
     */
    public static final OfAddress AtkObjectFactory_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkObject* AtkObject_autoptr;
     * }
     */
    public static final OfAddress AtkObject_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkObject_listautoptr;
     * }
     */
    public static final OfAddress AtkObject_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkObject_slistautoptr;
     * }
     */
    public static final OfAddress AtkObject_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkObject_queueautoptr;
     * }
     */
    public static final OfAddress AtkObject_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkPlug* AtkPlug_autoptr;
     * }
     */
    public static final OfAddress AtkPlug_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkPlug_listautoptr;
     * }
     */
    public static final OfAddress AtkPlug_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkPlug_slistautoptr;
     * }
     */
    public static final OfAddress AtkPlug_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkPlug_queueautoptr;
     * }
     */
    public static final OfAddress AtkPlug_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkRegistry* AtkRegistry_autoptr;
     * }
     */
    public static final OfAddress AtkRegistry_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkRegistry_listautoptr;
     * }
     */
    public static final OfAddress AtkRegistry_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkRegistry_slistautoptr;
     * }
     */
    public static final OfAddress AtkRegistry_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkRegistry_queueautoptr;
     * }
     */
    public static final OfAddress AtkRegistry_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkRelationSet* AtkRelationSet_autoptr;
     * }
     */
    public static final OfAddress AtkRelationSet_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkRelationSet_listautoptr;
     * }
     */
    public static final OfAddress AtkRelationSet_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkRelationSet_slistautoptr;
     * }
     */
    public static final OfAddress AtkRelationSet_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkRelationSet_queueautoptr;
     * }
     */
    public static final OfAddress AtkRelationSet_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkRelation* AtkRelation_autoptr;
     * }
     */
    public static final OfAddress AtkRelation_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkRelation_listautoptr;
     * }
     */
    public static final OfAddress AtkRelation_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkRelation_slistautoptr;
     * }
     */
    public static final OfAddress AtkRelation_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkRelation_queueautoptr;
     * }
     */
    public static final OfAddress AtkRelation_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkSelection* AtkSelection_autoptr;
     * }
     */
    public static final OfAddress AtkSelection_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkSelection_listautoptr;
     * }
     */
    public static final OfAddress AtkSelection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkSelection_slistautoptr;
     * }
     */
    public static final OfAddress AtkSelection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkSelection_queueautoptr;
     * }
     */
    public static final OfAddress AtkSelection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkSocket* AtkSocket_autoptr;
     * }
     */
    public static final OfAddress AtkSocket_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkSocket_listautoptr;
     * }
     */
    public static final OfAddress AtkSocket_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkSocket_slistautoptr;
     * }
     */
    public static final OfAddress AtkSocket_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkSocket_queueautoptr;
     * }
     */
    public static final OfAddress AtkSocket_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkStateSet* AtkStateSet_autoptr;
     * }
     */
    public static final OfAddress AtkStateSet_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkStateSet_listautoptr;
     * }
     */
    public static final OfAddress AtkStateSet_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkStateSet_slistautoptr;
     * }
     */
    public static final OfAddress AtkStateSet_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkStateSet_queueautoptr;
     * }
     */
    public static final OfAddress AtkStateSet_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkStreamableContent* AtkStreamableContent_autoptr;
     * }
     */
    public static final OfAddress AtkStreamableContent_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkStreamableContent_listautoptr;
     * }
     */
    public static final OfAddress AtkStreamableContent_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkStreamableContent_slistautoptr;
     * }
     */
    public static final OfAddress AtkStreamableContent_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkStreamableContent_queueautoptr;
     * }
     */
    public static final OfAddress AtkStreamableContent_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkTableCell* AtkTableCell_autoptr;
     * }
     */
    public static final OfAddress AtkTableCell_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkTableCell_listautoptr;
     * }
     */
    public static final OfAddress AtkTableCell_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkTableCell_slistautoptr;
     * }
     */
    public static final OfAddress AtkTableCell_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkTableCell_queueautoptr;
     * }
     */
    public static final OfAddress AtkTableCell_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkTable* AtkTable_autoptr;
     * }
     */
    public static final OfAddress AtkTable_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkTable_listautoptr;
     * }
     */
    public static final OfAddress AtkTable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkTable_slistautoptr;
     * }
     */
    public static final OfAddress AtkTable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkTable_queueautoptr;
     * }
     */
    public static final OfAddress AtkTable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkText* AtkText_autoptr;
     * }
     */
    public static final OfAddress AtkText_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkText_listautoptr;
     * }
     */
    public static final OfAddress AtkText_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkText_slistautoptr;
     * }
     */
    public static final OfAddress AtkText_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkText_queueautoptr;
     * }
     */
    public static final OfAddress AtkText_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkUtil* AtkUtil_autoptr;
     * }
     */
    public static final OfAddress AtkUtil_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkUtil_listautoptr;
     * }
     */
    public static final OfAddress AtkUtil_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkUtil_slistautoptr;
     * }
     */
    public static final OfAddress AtkUtil_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkUtil_queueautoptr;
     * }
     */
    public static final OfAddress AtkUtil_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkValue* AtkValue_autoptr;
     * }
     */
    public static final OfAddress AtkValue_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkValue_listautoptr;
     * }
     */
    public static final OfAddress AtkValue_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkValue_slistautoptr;
     * }
     */
    public static final OfAddress AtkValue_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkValue_queueautoptr;
     * }
     */
    public static final OfAddress AtkValue_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _AtkWindow* AtkWindow_autoptr;
     * }
     */
    public static final OfAddress AtkWindow_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* AtkWindow_listautoptr;
     * }
     */
    public static final OfAddress AtkWindow_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* AtkWindow_slistautoptr;
     * }
     */
    public static final OfAddress AtkWindow_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* AtkWindow_queueautoptr;
     * }
     */
    public static final OfAddress AtkWindow_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum .GTK_WIDGET_HELP_TOOLTIP = 0;
     * }
     */
    public static int GTK_WIDGET_HELP_TOOLTIP() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_WIDGET_HELP_WHATS_THIS = 1;
     * }
     */
    public static int GTK_WIDGET_HELP_WHATS_THIS() {
        return (int)1L;
    }
    public static MethodHandle gtk_widget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.gtk_widget_get_type$MH,"gtk_widget_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_widget_get_type();
     * }
     */
    public static long gtk_widget_get_type() {
        var mh$ = gtk_widget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.gtk_widget_new$MH,"gtk_widget_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_widget_new(GType type, const gchar* first_property_name,...);
     * }
     */
    public static MemorySegment gtk_widget_new(long type, MemorySegment first_property_name, Object... x2) {
        var mh$ = gtk_widget_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type, first_property_name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.gtk_widget_destroy$MH,"gtk_widget_destroy");
    }
    /**
     * {@snippet :
     * void gtk_widget_destroy(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_destroy(MemorySegment widget) {
        var mh$ = gtk_widget_destroy$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_destroyed$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.gtk_widget_destroyed$MH,"gtk_widget_destroyed");
    }
    /**
     * {@snippet :
     * void gtk_widget_destroyed(GtkWidget* widget, GtkWidget** widget_pointer);
     * }
     */
    public static void gtk_widget_destroyed(MemorySegment widget, MemorySegment widget_pointer) {
        var mh$ = gtk_widget_destroyed$MH();
        try {
            mh$.invokeExact(widget, widget_pointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_unparent$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.gtk_widget_unparent$MH,"gtk_widget_unparent");
    }
    /**
     * {@snippet :
     * void gtk_widget_unparent(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_unparent(MemorySegment widget) {
        var mh$ = gtk_widget_unparent$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_show$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.gtk_widget_show$MH,"gtk_widget_show");
    }
    /**
     * {@snippet :
     * void gtk_widget_show(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_show(MemorySegment widget) {
        var mh$ = gtk_widget_show$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_hide$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.gtk_widget_hide$MH,"gtk_widget_hide");
    }
    /**
     * {@snippet :
     * void gtk_widget_hide(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_hide(MemorySegment widget) {
        var mh$ = gtk_widget_hide$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_show_now$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.gtk_widget_show_now$MH,"gtk_widget_show_now");
    }
    /**
     * {@snippet :
     * void gtk_widget_show_now(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_show_now(MemorySegment widget) {
        var mh$ = gtk_widget_show_now$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_show_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.gtk_widget_show_all$MH,"gtk_widget_show_all");
    }
    /**
     * {@snippet :
     * void gtk_widget_show_all(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_show_all(MemorySegment widget) {
        var mh$ = gtk_widget_show_all$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_no_show_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.gtk_widget_set_no_show_all$MH,"gtk_widget_set_no_show_all");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_no_show_all(GtkWidget* widget, gboolean no_show_all);
     * }
     */
    public static void gtk_widget_set_no_show_all(MemorySegment widget, int no_show_all) {
        var mh$ = gtk_widget_set_no_show_all$MH();
        try {
            mh$.invokeExact(widget, no_show_all);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_no_show_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.gtk_widget_get_no_show_all$MH,"gtk_widget_get_no_show_all");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_no_show_all(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_no_show_all(MemorySegment widget) {
        var mh$ = gtk_widget_get_no_show_all$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.gtk_widget_map$MH,"gtk_widget_map");
    }
    /**
     * {@snippet :
     * void gtk_widget_map(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_map(MemorySegment widget) {
        var mh$ = gtk_widget_map$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_unmap$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.gtk_widget_unmap$MH,"gtk_widget_unmap");
    }
    /**
     * {@snippet :
     * void gtk_widget_unmap(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_unmap(MemorySegment widget) {
        var mh$ = gtk_widget_unmap$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_realize$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.gtk_widget_realize$MH,"gtk_widget_realize");
    }
    /**
     * {@snippet :
     * void gtk_widget_realize(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_realize(MemorySegment widget) {
        var mh$ = gtk_widget_realize$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_unrealize$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.gtk_widget_unrealize$MH,"gtk_widget_unrealize");
    }
    /**
     * {@snippet :
     * void gtk_widget_unrealize(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_unrealize(MemorySegment widget) {
        var mh$ = gtk_widget_unrealize$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_draw$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.gtk_widget_draw$MH,"gtk_widget_draw");
    }
    /**
     * {@snippet :
     * void gtk_widget_draw(GtkWidget* widget, cairo_t* cr);
     * }
     */
    public static void gtk_widget_draw(MemorySegment widget, MemorySegment cr) {
        var mh$ = gtk_widget_draw$MH();
        try {
            mh$.invokeExact(widget, cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_draw$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.gtk_widget_queue_draw$MH,"gtk_widget_queue_draw");
    }
    /**
     * {@snippet :
     * void gtk_widget_queue_draw(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_queue_draw(MemorySegment widget) {
        var mh$ = gtk_widget_queue_draw$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_draw_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.gtk_widget_queue_draw_area$MH,"gtk_widget_queue_draw_area");
    }
    /**
     * {@snippet :
     * void gtk_widget_queue_draw_area(GtkWidget* widget, gint x, gint y, gint width, gint height);
     * }
     */
    public static void gtk_widget_queue_draw_area(MemorySegment widget, int x, int y, int width, int height) {
        var mh$ = gtk_widget_queue_draw_area$MH();
        try {
            mh$.invokeExact(widget, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_draw_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.gtk_widget_queue_draw_region$MH,"gtk_widget_queue_draw_region");
    }
    /**
     * {@snippet :
     * void gtk_widget_queue_draw_region(GtkWidget* widget, const cairo_region_t* region);
     * }
     */
    public static void gtk_widget_queue_draw_region(MemorySegment widget, MemorySegment region) {
        var mh$ = gtk_widget_queue_draw_region$MH();
        try {
            mh$.invokeExact(widget, region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_resize$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.gtk_widget_queue_resize$MH,"gtk_widget_queue_resize");
    }
    /**
     * {@snippet :
     * void gtk_widget_queue_resize(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_queue_resize(MemorySegment widget) {
        var mh$ = gtk_widget_queue_resize$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_resize_no_redraw$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.gtk_widget_queue_resize_no_redraw$MH,"gtk_widget_queue_resize_no_redraw");
    }
    /**
     * {@snippet :
     * void gtk_widget_queue_resize_no_redraw(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_queue_resize_no_redraw(MemorySegment widget) {
        var mh$ = gtk_widget_queue_resize_no_redraw$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.gtk_widget_queue_allocate$MH,"gtk_widget_queue_allocate");
    }
    /**
     * {@snippet :
     * void gtk_widget_queue_allocate(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_queue_allocate(MemorySegment widget) {
        var mh$ = gtk_widget_queue_allocate$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_frame_clock$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.gtk_widget_get_frame_clock$MH,"gtk_widget_get_frame_clock");
    }
    /**
     * {@snippet :
     * GdkFrameClock* gtk_widget_get_frame_clock(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_frame_clock(MemorySegment widget) {
        var mh$ = gtk_widget_get_frame_clock$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_size_request$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.gtk_widget_size_request$MH,"gtk_widget_size_request");
    }
    /**
     * {@snippet :
     * void gtk_widget_size_request(GtkWidget* widget, GtkRequisition* requisition);
     * }
     */
    public static void gtk_widget_size_request(MemorySegment widget, MemorySegment requisition) {
        var mh$ = gtk_widget_size_request$MH();
        try {
            mh$.invokeExact(widget, requisition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_size_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.gtk_widget_size_allocate$MH,"gtk_widget_size_allocate");
    }
    /**
     * {@snippet :
     * void gtk_widget_size_allocate(GtkWidget* widget, GtkAllocation* allocation);
     * }
     */
    public static void gtk_widget_size_allocate(MemorySegment widget, MemorySegment allocation) {
        var mh$ = gtk_widget_size_allocate$MH();
        try {
            mh$.invokeExact(widget, allocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_size_allocate_with_baseline$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.gtk_widget_size_allocate_with_baseline$MH,"gtk_widget_size_allocate_with_baseline");
    }
    /**
     * {@snippet :
     * void gtk_widget_size_allocate_with_baseline(GtkWidget* widget, GtkAllocation* allocation, gint baseline);
     * }
     */
    public static void gtk_widget_size_allocate_with_baseline(MemorySegment widget, MemorySegment allocation, int baseline) {
        var mh$ = gtk_widget_size_allocate_with_baseline$MH();
        try {
            mh$.invokeExact(widget, allocation, baseline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_request_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.gtk_widget_get_request_mode$MH,"gtk_widget_get_request_mode");
    }
    /**
     * {@snippet :
     * GtkSizeRequestMode gtk_widget_get_request_mode(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_request_mode(MemorySegment widget) {
        var mh$ = gtk_widget_get_request_mode$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_preferred_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.gtk_widget_get_preferred_width$MH,"gtk_widget_get_preferred_width");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_preferred_width(GtkWidget* widget, gint* minimum_width, gint* natural_width);
     * }
     */
    public static void gtk_widget_get_preferred_width(MemorySegment widget, MemorySegment minimum_width, MemorySegment natural_width) {
        var mh$ = gtk_widget_get_preferred_width$MH();
        try {
            mh$.invokeExact(widget, minimum_width, natural_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_preferred_height_for_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.gtk_widget_get_preferred_height_for_width$MH,"gtk_widget_get_preferred_height_for_width");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_preferred_height_for_width(GtkWidget* widget, gint width, gint* minimum_height, gint* natural_height);
     * }
     */
    public static void gtk_widget_get_preferred_height_for_width(MemorySegment widget, int width, MemorySegment minimum_height, MemorySegment natural_height) {
        var mh$ = gtk_widget_get_preferred_height_for_width$MH();
        try {
            mh$.invokeExact(widget, width, minimum_height, natural_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_preferred_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.gtk_widget_get_preferred_height$MH,"gtk_widget_get_preferred_height");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_preferred_height(GtkWidget* widget, gint* minimum_height, gint* natural_height);
     * }
     */
    public static void gtk_widget_get_preferred_height(MemorySegment widget, MemorySegment minimum_height, MemorySegment natural_height) {
        var mh$ = gtk_widget_get_preferred_height$MH();
        try {
            mh$.invokeExact(widget, minimum_height, natural_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_preferred_width_for_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.gtk_widget_get_preferred_width_for_height$MH,"gtk_widget_get_preferred_width_for_height");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_preferred_width_for_height(GtkWidget* widget, gint height, gint* minimum_width, gint* natural_width);
     * }
     */
    public static void gtk_widget_get_preferred_width_for_height(MemorySegment widget, int height, MemorySegment minimum_width, MemorySegment natural_width) {
        var mh$ = gtk_widget_get_preferred_width_for_height$MH();
        try {
            mh$.invokeExact(widget, height, minimum_width, natural_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_preferred_height_and_baseline_for_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.gtk_widget_get_preferred_height_and_baseline_for_width$MH,"gtk_widget_get_preferred_height_and_baseline_for_width");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_preferred_height_and_baseline_for_width(GtkWidget* widget, gint width, gint* minimum_height, gint* natural_height, gint* minimum_baseline, gint* natural_baseline);
     * }
     */
    public static void gtk_widget_get_preferred_height_and_baseline_for_width(MemorySegment widget, int width, MemorySegment minimum_height, MemorySegment natural_height, MemorySegment minimum_baseline, MemorySegment natural_baseline) {
        var mh$ = gtk_widget_get_preferred_height_and_baseline_for_width$MH();
        try {
            mh$.invokeExact(widget, width, minimum_height, natural_height, minimum_baseline, natural_baseline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_preferred_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.gtk_widget_get_preferred_size$MH,"gtk_widget_get_preferred_size");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_preferred_size(GtkWidget* widget, GtkRequisition* minimum_size, GtkRequisition* natural_size);
     * }
     */
    public static void gtk_widget_get_preferred_size(MemorySegment widget, MemorySegment minimum_size, MemorySegment natural_size) {
        var mh$ = gtk_widget_get_preferred_size$MH();
        try {
            mh$.invokeExact(widget, minimum_size, natural_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_child_requisition$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.gtk_widget_get_child_requisition$MH,"gtk_widget_get_child_requisition");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_child_requisition(GtkWidget* widget, GtkRequisition* requisition);
     * }
     */
    public static void gtk_widget_get_child_requisition(MemorySegment widget, MemorySegment requisition) {
        var mh$ = gtk_widget_get_child_requisition$MH();
        try {
            mh$.invokeExact(widget, requisition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_add_accelerator$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.gtk_widget_add_accelerator$MH,"gtk_widget_add_accelerator");
    }
    /**
     * {@snippet :
     * void gtk_widget_add_accelerator(GtkWidget* widget, const gchar* accel_signal, GtkAccelGroup* accel_group, guint accel_key, GdkModifierType accel_mods, GtkAccelFlags accel_flags);
     * }
     */
    public static void gtk_widget_add_accelerator(MemorySegment widget, MemorySegment accel_signal, MemorySegment accel_group, int accel_key, int accel_mods, int accel_flags) {
        var mh$ = gtk_widget_add_accelerator$MH();
        try {
            mh$.invokeExact(widget, accel_signal, accel_group, accel_key, accel_mods, accel_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_remove_accelerator$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.gtk_widget_remove_accelerator$MH,"gtk_widget_remove_accelerator");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_remove_accelerator(GtkWidget* widget, GtkAccelGroup* accel_group, guint accel_key, GdkModifierType accel_mods);
     * }
     */
    public static int gtk_widget_remove_accelerator(MemorySegment widget, MemorySegment accel_group, int accel_key, int accel_mods) {
        var mh$ = gtk_widget_remove_accelerator$MH();
        try {
            return (int)mh$.invokeExact(widget, accel_group, accel_key, accel_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_accel_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.gtk_widget_set_accel_path$MH,"gtk_widget_set_accel_path");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_accel_path(GtkWidget* widget, const gchar* accel_path, GtkAccelGroup* accel_group);
     * }
     */
    public static void gtk_widget_set_accel_path(MemorySegment widget, MemorySegment accel_path, MemorySegment accel_group) {
        var mh$ = gtk_widget_set_accel_path$MH();
        try {
            mh$.invokeExact(widget, accel_path, accel_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_list_accel_closures$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.gtk_widget_list_accel_closures$MH,"gtk_widget_list_accel_closures");
    }
    /**
     * {@snippet :
     * GList* gtk_widget_list_accel_closures(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_list_accel_closures(MemorySegment widget) {
        var mh$ = gtk_widget_list_accel_closures$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_can_activate_accel$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.gtk_widget_can_activate_accel$MH,"gtk_widget_can_activate_accel");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_can_activate_accel(GtkWidget* widget, guint signal_id);
     * }
     */
    public static int gtk_widget_can_activate_accel(MemorySegment widget, int signal_id) {
        var mh$ = gtk_widget_can_activate_accel$MH();
        try {
            return (int)mh$.invokeExact(widget, signal_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_mnemonic_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.gtk_widget_mnemonic_activate$MH,"gtk_widget_mnemonic_activate");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_mnemonic_activate(GtkWidget* widget, gboolean group_cycling);
     * }
     */
    public static int gtk_widget_mnemonic_activate(MemorySegment widget, int group_cycling) {
        var mh$ = gtk_widget_mnemonic_activate$MH();
        try {
            return (int)mh$.invokeExact(widget, group_cycling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_event$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.gtk_widget_event$MH,"gtk_widget_event");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_event(GtkWidget* widget, GdkEvent* event);
     * }
     */
    public static int gtk_widget_event(MemorySegment widget, MemorySegment event) {
        var mh$ = gtk_widget_event$MH();
        try {
            return (int)mh$.invokeExact(widget, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_send_expose$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.gtk_widget_send_expose$MH,"gtk_widget_send_expose");
    }
    /**
     * {@snippet :
     * gint gtk_widget_send_expose(GtkWidget* widget, GdkEvent* event);
     * }
     */
    public static int gtk_widget_send_expose(MemorySegment widget, MemorySegment event) {
        var mh$ = gtk_widget_send_expose$MH();
        try {
            return (int)mh$.invokeExact(widget, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_send_focus_change$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.gtk_widget_send_focus_change$MH,"gtk_widget_send_focus_change");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_send_focus_change(GtkWidget* widget, GdkEvent* event);
     * }
     */
    public static int gtk_widget_send_focus_change(MemorySegment widget, MemorySegment event) {
        var mh$ = gtk_widget_send_focus_change$MH();
        try {
            return (int)mh$.invokeExact(widget, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.gtk_widget_activate$MH,"gtk_widget_activate");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_activate(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_activate(MemorySegment widget) {
        var mh$ = gtk_widget_activate$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_reparent$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.gtk_widget_reparent$MH,"gtk_widget_reparent");
    }
    /**
     * {@snippet :
     * void gtk_widget_reparent(GtkWidget* widget, GtkWidget* new_parent);
     * }
     */
    public static void gtk_widget_reparent(MemorySegment widget, MemorySegment new_parent) {
        var mh$ = gtk_widget_reparent$MH();
        try {
            mh$.invokeExact(widget, new_parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_intersect$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.gtk_widget_intersect$MH,"gtk_widget_intersect");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_intersect(GtkWidget* widget, const GdkRectangle* area, GdkRectangle* intersection);
     * }
     */
    public static int gtk_widget_intersect(MemorySegment widget, MemorySegment area, MemorySegment intersection) {
        var mh$ = gtk_widget_intersect$MH();
        try {
            return (int)mh$.invokeExact(widget, area, intersection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_region_intersect$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.gtk_widget_region_intersect$MH,"gtk_widget_region_intersect");
    }
    /**
     * {@snippet :
     * cairo_region_t* gtk_widget_region_intersect(GtkWidget* widget, const cairo_region_t* region);
     * }
     */
    public static MemorySegment gtk_widget_region_intersect(MemorySegment widget, MemorySegment region) {
        var mh$ = gtk_widget_region_intersect$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_freeze_child_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.gtk_widget_freeze_child_notify$MH,"gtk_widget_freeze_child_notify");
    }
    /**
     * {@snippet :
     * void gtk_widget_freeze_child_notify(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_freeze_child_notify(MemorySegment widget) {
        var mh$ = gtk_widget_freeze_child_notify$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_child_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.gtk_widget_child_notify$MH,"gtk_widget_child_notify");
    }
    /**
     * {@snippet :
     * void gtk_widget_child_notify(GtkWidget* widget, const gchar* child_property);
     * }
     */
    public static void gtk_widget_child_notify(MemorySegment widget, MemorySegment child_property) {
        var mh$ = gtk_widget_child_notify$MH();
        try {
            mh$.invokeExact(widget, child_property);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_thaw_child_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.gtk_widget_thaw_child_notify$MH,"gtk_widget_thaw_child_notify");
    }
    /**
     * {@snippet :
     * void gtk_widget_thaw_child_notify(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_thaw_child_notify(MemorySegment widget) {
        var mh$ = gtk_widget_thaw_child_notify$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_can_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.gtk_widget_set_can_focus$MH,"gtk_widget_set_can_focus");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_can_focus(GtkWidget* widget, gboolean can_focus);
     * }
     */
    public static void gtk_widget_set_can_focus(MemorySegment widget, int can_focus) {
        var mh$ = gtk_widget_set_can_focus$MH();
        try {
            mh$.invokeExact(widget, can_focus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_can_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.gtk_widget_get_can_focus$MH,"gtk_widget_get_can_focus");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_can_focus(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_can_focus(MemorySegment widget) {
        var mh$ = gtk_widget_get_can_focus$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_has_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.gtk_widget_has_focus$MH,"gtk_widget_has_focus");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_has_focus(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_has_focus(MemorySegment widget) {
        var mh$ = gtk_widget_has_focus$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_is_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.gtk_widget_is_focus$MH,"gtk_widget_is_focus");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_is_focus(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_is_focus(MemorySegment widget) {
        var mh$ = gtk_widget_is_focus$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_has_visible_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.gtk_widget_has_visible_focus$MH,"gtk_widget_has_visible_focus");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_has_visible_focus(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_has_visible_focus(MemorySegment widget) {
        var mh$ = gtk_widget_has_visible_focus$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_grab_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.gtk_widget_grab_focus$MH,"gtk_widget_grab_focus");
    }
    /**
     * {@snippet :
     * void gtk_widget_grab_focus(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_grab_focus(MemorySegment widget) {
        var mh$ = gtk_widget_grab_focus$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.gtk_widget_set_focus_on_click$MH,"gtk_widget_set_focus_on_click");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_focus_on_click(GtkWidget* widget, gboolean focus_on_click);
     * }
     */
    public static void gtk_widget_set_focus_on_click(MemorySegment widget, int focus_on_click) {
        var mh$ = gtk_widget_set_focus_on_click$MH();
        try {
            mh$.invokeExact(widget, focus_on_click);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.gtk_widget_get_focus_on_click$MH,"gtk_widget_get_focus_on_click");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_focus_on_click(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_focus_on_click(MemorySegment widget) {
        var mh$ = gtk_widget_get_focus_on_click$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_can_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.gtk_widget_set_can_default$MH,"gtk_widget_set_can_default");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_can_default(GtkWidget* widget, gboolean can_default);
     * }
     */
    public static void gtk_widget_set_can_default(MemorySegment widget, int can_default) {
        var mh$ = gtk_widget_set_can_default$MH();
        try {
            mh$.invokeExact(widget, can_default);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_can_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.gtk_widget_get_can_default$MH,"gtk_widget_get_can_default");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_can_default(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_can_default(MemorySegment widget) {
        var mh$ = gtk_widget_get_can_default$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_has_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.gtk_widget_has_default$MH,"gtk_widget_has_default");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_has_default(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_has_default(MemorySegment widget) {
        var mh$ = gtk_widget_has_default$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_grab_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.gtk_widget_grab_default$MH,"gtk_widget_grab_default");
    }
    /**
     * {@snippet :
     * void gtk_widget_grab_default(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_grab_default(MemorySegment widget) {
        var mh$ = gtk_widget_grab_default$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_receives_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.gtk_widget_set_receives_default$MH,"gtk_widget_set_receives_default");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_receives_default(GtkWidget* widget, gboolean receives_default);
     * }
     */
    public static void gtk_widget_set_receives_default(MemorySegment widget, int receives_default) {
        var mh$ = gtk_widget_set_receives_default$MH();
        try {
            mh$.invokeExact(widget, receives_default);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_receives_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.gtk_widget_get_receives_default$MH,"gtk_widget_get_receives_default");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_receives_default(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_receives_default(MemorySegment widget) {
        var mh$ = gtk_widget_get_receives_default$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_has_grab$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.gtk_widget_has_grab$MH,"gtk_widget_has_grab");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_has_grab(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_has_grab(MemorySegment widget) {
        var mh$ = gtk_widget_has_grab$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_device_is_shadowed$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.gtk_widget_device_is_shadowed$MH,"gtk_widget_device_is_shadowed");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_device_is_shadowed(GtkWidget* widget, GdkDevice* device);
     * }
     */
    public static int gtk_widget_device_is_shadowed(MemorySegment widget, MemorySegment device) {
        var mh$ = gtk_widget_device_is_shadowed$MH();
        try {
            return (int)mh$.invokeExact(widget, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.gtk_widget_set_name$MH,"gtk_widget_set_name");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_name(GtkWidget* widget, const gchar* name);
     * }
     */
    public static void gtk_widget_set_name(MemorySegment widget, MemorySegment name) {
        var mh$ = gtk_widget_set_name$MH();
        try {
            mh$.invokeExact(widget, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.gtk_widget_get_name$MH,"gtk_widget_get_name");
    }
    /**
     * {@snippet :
     * const gchar* gtk_widget_get_name(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_name(MemorySegment widget) {
        var mh$ = gtk_widget_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.gtk_widget_set_state$MH,"gtk_widget_set_state");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_state(GtkWidget* widget, GtkStateType state);
     * }
     */
    public static void gtk_widget_set_state(MemorySegment widget, int state) {
        var mh$ = gtk_widget_set_state$MH();
        try {
            mh$.invokeExact(widget, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.gtk_widget_get_state$MH,"gtk_widget_get_state");
    }
    /**
     * {@snippet :
     * GtkStateType gtk_widget_get_state(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_state(MemorySegment widget) {
        var mh$ = gtk_widget_get_state$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_state_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.gtk_widget_set_state_flags$MH,"gtk_widget_set_state_flags");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_state_flags(GtkWidget* widget, GtkStateFlags flags, gboolean clear);
     * }
     */
    public static void gtk_widget_set_state_flags(MemorySegment widget, int flags, int clear) {
        var mh$ = gtk_widget_set_state_flags$MH();
        try {
            mh$.invokeExact(widget, flags, clear);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_unset_state_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.gtk_widget_unset_state_flags$MH,"gtk_widget_unset_state_flags");
    }
    /**
     * {@snippet :
     * void gtk_widget_unset_state_flags(GtkWidget* widget, GtkStateFlags flags);
     * }
     */
    public static void gtk_widget_unset_state_flags(MemorySegment widget, int flags) {
        var mh$ = gtk_widget_unset_state_flags$MH();
        try {
            mh$.invokeExact(widget, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_state_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.gtk_widget_get_state_flags$MH,"gtk_widget_get_state_flags");
    }
    /**
     * {@snippet :
     * GtkStateFlags gtk_widget_get_state_flags(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_state_flags(MemorySegment widget) {
        var mh$ = gtk_widget_get_state_flags$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.gtk_widget_set_sensitive$MH,"gtk_widget_set_sensitive");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_sensitive(GtkWidget* widget, gboolean sensitive);
     * }
     */
    public static void gtk_widget_set_sensitive(MemorySegment widget, int sensitive) {
        var mh$ = gtk_widget_set_sensitive$MH();
        try {
            mh$.invokeExact(widget, sensitive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.gtk_widget_get_sensitive$MH,"gtk_widget_get_sensitive");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_sensitive(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_sensitive(MemorySegment widget) {
        var mh$ = gtk_widget_get_sensitive$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_is_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.gtk_widget_is_sensitive$MH,"gtk_widget_is_sensitive");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_is_sensitive(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_is_sensitive(MemorySegment widget) {
        var mh$ = gtk_widget_is_sensitive$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.gtk_widget_set_visible$MH,"gtk_widget_set_visible");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_visible(GtkWidget* widget, gboolean visible);
     * }
     */
    public static void gtk_widget_set_visible(MemorySegment widget, int visible) {
        var mh$ = gtk_widget_set_visible$MH();
        try {
            mh$.invokeExact(widget, visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.gtk_widget_get_visible$MH,"gtk_widget_get_visible");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_visible(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_visible(MemorySegment widget) {
        var mh$ = gtk_widget_get_visible$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_is_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.gtk_widget_is_visible$MH,"gtk_widget_is_visible");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_is_visible(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_is_visible(MemorySegment widget) {
        var mh$ = gtk_widget_is_visible$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_has_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.gtk_widget_set_has_window$MH,"gtk_widget_set_has_window");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_has_window(GtkWidget* widget, gboolean has_window);
     * }
     */
    public static void gtk_widget_set_has_window(MemorySegment widget, int has_window) {
        var mh$ = gtk_widget_set_has_window$MH();
        try {
            mh$.invokeExact(widget, has_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_has_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.gtk_widget_get_has_window$MH,"gtk_widget_get_has_window");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_has_window(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_has_window(MemorySegment widget) {
        var mh$ = gtk_widget_get_has_window$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_is_toplevel$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.gtk_widget_is_toplevel$MH,"gtk_widget_is_toplevel");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_is_toplevel(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_is_toplevel(MemorySegment widget) {
        var mh$ = gtk_widget_is_toplevel$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_is_drawable$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.gtk_widget_is_drawable$MH,"gtk_widget_is_drawable");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_is_drawable(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_is_drawable(MemorySegment widget) {
        var mh$ = gtk_widget_is_drawable$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_realized$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.gtk_widget_set_realized$MH,"gtk_widget_set_realized");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_realized(GtkWidget* widget, gboolean realized);
     * }
     */
    public static void gtk_widget_set_realized(MemorySegment widget, int realized) {
        var mh$ = gtk_widget_set_realized$MH();
        try {
            mh$.invokeExact(widget, realized);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_realized$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.gtk_widget_get_realized$MH,"gtk_widget_get_realized");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_realized(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_realized(MemorySegment widget) {
        var mh$ = gtk_widget_get_realized$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_mapped$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.gtk_widget_set_mapped$MH,"gtk_widget_set_mapped");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_mapped(GtkWidget* widget, gboolean mapped);
     * }
     */
    public static void gtk_widget_set_mapped(MemorySegment widget, int mapped) {
        var mh$ = gtk_widget_set_mapped$MH();
        try {
            mh$.invokeExact(widget, mapped);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_mapped$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.gtk_widget_get_mapped$MH,"gtk_widget_get_mapped");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_mapped(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_mapped(MemorySegment widget) {
        var mh$ = gtk_widget_get_mapped$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_app_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.gtk_widget_set_app_paintable$MH,"gtk_widget_set_app_paintable");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_app_paintable(GtkWidget* widget, gboolean app_paintable);
     * }
     */
    public static void gtk_widget_set_app_paintable(MemorySegment widget, int app_paintable) {
        var mh$ = gtk_widget_set_app_paintable$MH();
        try {
            mh$.invokeExact(widget, app_paintable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_app_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.gtk_widget_get_app_paintable$MH,"gtk_widget_get_app_paintable");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_app_paintable(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_app_paintable(MemorySegment widget) {
        var mh$ = gtk_widget_get_app_paintable$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_double_buffered$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.gtk_widget_set_double_buffered$MH,"gtk_widget_set_double_buffered");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_double_buffered(GtkWidget* widget, gboolean double_buffered);
     * }
     */
    public static void gtk_widget_set_double_buffered(MemorySegment widget, int double_buffered) {
        var mh$ = gtk_widget_set_double_buffered$MH();
        try {
            mh$.invokeExact(widget, double_buffered);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_double_buffered$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.gtk_widget_get_double_buffered$MH,"gtk_widget_get_double_buffered");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_double_buffered(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_double_buffered(MemorySegment widget) {
        var mh$ = gtk_widget_get_double_buffered$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_redraw_on_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.gtk_widget_set_redraw_on_allocate$MH,"gtk_widget_set_redraw_on_allocate");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_redraw_on_allocate(GtkWidget* widget, gboolean redraw_on_allocate);
     * }
     */
    public static void gtk_widget_set_redraw_on_allocate(MemorySegment widget, int redraw_on_allocate) {
        var mh$ = gtk_widget_set_redraw_on_allocate$MH();
        try {
            mh$.invokeExact(widget, redraw_on_allocate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.gtk_widget_set_parent$MH,"gtk_widget_set_parent");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_parent(GtkWidget* widget, GtkWidget* parent);
     * }
     */
    public static void gtk_widget_set_parent(MemorySegment widget, MemorySegment parent) {
        var mh$ = gtk_widget_set_parent$MH();
        try {
            mh$.invokeExact(widget, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.gtk_widget_get_parent$MH,"gtk_widget_get_parent");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_widget_get_parent(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_parent(MemorySegment widget) {
        var mh$ = gtk_widget_get_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_parent_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.gtk_widget_set_parent_window$MH,"gtk_widget_set_parent_window");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_parent_window(GtkWidget* widget, GdkWindow* parent_window);
     * }
     */
    public static void gtk_widget_set_parent_window(MemorySegment widget, MemorySegment parent_window) {
        var mh$ = gtk_widget_set_parent_window$MH();
        try {
            mh$.invokeExact(widget, parent_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_parent_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.gtk_widget_get_parent_window$MH,"gtk_widget_get_parent_window");
    }
    /**
     * {@snippet :
     * GdkWindow* gtk_widget_get_parent_window(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_parent_window(MemorySegment widget) {
        var mh$ = gtk_widget_get_parent_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_child_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.gtk_widget_set_child_visible$MH,"gtk_widget_set_child_visible");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_child_visible(GtkWidget* widget, gboolean is_visible);
     * }
     */
    public static void gtk_widget_set_child_visible(MemorySegment widget, int is_visible) {
        var mh$ = gtk_widget_set_child_visible$MH();
        try {
            mh$.invokeExact(widget, is_visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_child_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.gtk_widget_get_child_visible$MH,"gtk_widget_get_child_visible");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_child_visible(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_child_visible(MemorySegment widget) {
        var mh$ = gtk_widget_get_child_visible$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.gtk_widget_set_window$MH,"gtk_widget_set_window");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_window(GtkWidget* widget, GdkWindow* window);
     * }
     */
    public static void gtk_widget_set_window(MemorySegment widget, MemorySegment window) {
        var mh$ = gtk_widget_set_window$MH();
        try {
            mh$.invokeExact(widget, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.gtk_widget_get_window$MH,"gtk_widget_get_window");
    }
    /**
     * {@snippet :
     * GdkWindow* gtk_widget_get_window(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_window(MemorySegment widget) {
        var mh$ = gtk_widget_get_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_register_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.gtk_widget_register_window$MH,"gtk_widget_register_window");
    }
    /**
     * {@snippet :
     * void gtk_widget_register_window(GtkWidget* widget, GdkWindow* window);
     * }
     */
    public static void gtk_widget_register_window(MemorySegment widget, MemorySegment window) {
        var mh$ = gtk_widget_register_window$MH();
        try {
            mh$.invokeExact(widget, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_unregister_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.gtk_widget_unregister_window$MH,"gtk_widget_unregister_window");
    }
    /**
     * {@snippet :
     * void gtk_widget_unregister_window(GtkWidget* widget, GdkWindow* window);
     * }
     */
    public static void gtk_widget_unregister_window(MemorySegment widget, MemorySegment window) {
        var mh$ = gtk_widget_unregister_window$MH();
        try {
            mh$.invokeExact(widget, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_allocated_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.gtk_widget_get_allocated_width$MH,"gtk_widget_get_allocated_width");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_allocated_width(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_allocated_width(MemorySegment widget) {
        var mh$ = gtk_widget_get_allocated_width$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_allocated_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.gtk_widget_get_allocated_height$MH,"gtk_widget_get_allocated_height");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_allocated_height(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_allocated_height(MemorySegment widget) {
        var mh$ = gtk_widget_get_allocated_height$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_allocated_baseline$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.gtk_widget_get_allocated_baseline$MH,"gtk_widget_get_allocated_baseline");
    }
    /**
     * {@snippet :
     * int gtk_widget_get_allocated_baseline(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_allocated_baseline(MemorySegment widget) {
        var mh$ = gtk_widget_get_allocated_baseline$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_allocated_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.gtk_widget_get_allocated_size$MH,"gtk_widget_get_allocated_size");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_allocated_size(GtkWidget* widget, GtkAllocation* allocation, int* baseline);
     * }
     */
    public static void gtk_widget_get_allocated_size(MemorySegment widget, MemorySegment allocation, MemorySegment baseline) {
        var mh$ = gtk_widget_get_allocated_size$MH();
        try {
            mh$.invokeExact(widget, allocation, baseline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_allocation$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.gtk_widget_get_allocation$MH,"gtk_widget_get_allocation");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_allocation(GtkWidget* widget, GtkAllocation* allocation);
     * }
     */
    public static void gtk_widget_get_allocation(MemorySegment widget, MemorySegment allocation) {
        var mh$ = gtk_widget_get_allocation$MH();
        try {
            mh$.invokeExact(widget, allocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_allocation$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.gtk_widget_set_allocation$MH,"gtk_widget_set_allocation");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_allocation(GtkWidget* widget, const GtkAllocation* allocation);
     * }
     */
    public static void gtk_widget_set_allocation(MemorySegment widget, MemorySegment allocation) {
        var mh$ = gtk_widget_set_allocation$MH();
        try {
            mh$.invokeExact(widget, allocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.gtk_widget_set_clip$MH,"gtk_widget_set_clip");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_clip(GtkWidget* widget, const GtkAllocation* clip);
     * }
     */
    public static void gtk_widget_set_clip(MemorySegment widget, MemorySegment clip) {
        var mh$ = gtk_widget_set_clip$MH();
        try {
            mh$.invokeExact(widget, clip);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.gtk_widget_get_clip$MH,"gtk_widget_get_clip");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_clip(GtkWidget* widget, GtkAllocation* clip);
     * }
     */
    public static void gtk_widget_get_clip(MemorySegment widget, MemorySegment clip) {
        var mh$ = gtk_widget_get_clip$MH();
        try {
            mh$.invokeExact(widget, clip);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_requisition$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.gtk_widget_get_requisition$MH,"gtk_widget_get_requisition");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_requisition(GtkWidget* widget, GtkRequisition* requisition);
     * }
     */
    public static void gtk_widget_get_requisition(MemorySegment widget, MemorySegment requisition) {
        var mh$ = gtk_widget_get_requisition$MH();
        try {
            mh$.invokeExact(widget, requisition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_child_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.gtk_widget_child_focus$MH,"gtk_widget_child_focus");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_child_focus(GtkWidget* widget, GtkDirectionType direction);
     * }
     */
    public static int gtk_widget_child_focus(MemorySegment widget, int direction) {
        var mh$ = gtk_widget_child_focus$MH();
        try {
            return (int)mh$.invokeExact(widget, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_keynav_failed$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.gtk_widget_keynav_failed$MH,"gtk_widget_keynav_failed");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_keynav_failed(GtkWidget* widget, GtkDirectionType direction);
     * }
     */
    public static int gtk_widget_keynav_failed(MemorySegment widget, int direction) {
        var mh$ = gtk_widget_keynav_failed$MH();
        try {
            return (int)mh$.invokeExact(widget, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_error_bell$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.gtk_widget_error_bell$MH,"gtk_widget_error_bell");
    }
    /**
     * {@snippet :
     * void gtk_widget_error_bell(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_error_bell(MemorySegment widget) {
        var mh$ = gtk_widget_error_bell$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_size_request$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.gtk_widget_set_size_request$MH,"gtk_widget_set_size_request");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_size_request(GtkWidget* widget, gint width, gint height);
     * }
     */
    public static void gtk_widget_set_size_request(MemorySegment widget, int width, int height) {
        var mh$ = gtk_widget_set_size_request$MH();
        try {
            mh$.invokeExact(widget, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_size_request$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.gtk_widget_get_size_request$MH,"gtk_widget_get_size_request");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_size_request(GtkWidget* widget, gint* width, gint* height);
     * }
     */
    public static void gtk_widget_get_size_request(MemorySegment widget, MemorySegment width, MemorySegment height) {
        var mh$ = gtk_widget_get_size_request$MH();
        try {
            mh$.invokeExact(widget, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.gtk_widget_set_events$MH,"gtk_widget_set_events");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_events(GtkWidget* widget, gint events);
     * }
     */
    public static void gtk_widget_set_events(MemorySegment widget, int events) {
        var mh$ = gtk_widget_set_events$MH();
        try {
            mh$.invokeExact(widget, events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_add_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.gtk_widget_add_events$MH,"gtk_widget_add_events");
    }
    /**
     * {@snippet :
     * void gtk_widget_add_events(GtkWidget* widget, gint events);
     * }
     */
    public static void gtk_widget_add_events(MemorySegment widget, int events) {
        var mh$ = gtk_widget_add_events$MH();
        try {
            mh$.invokeExact(widget, events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_device_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.gtk_widget_set_device_events$MH,"gtk_widget_set_device_events");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_device_events(GtkWidget* widget, GdkDevice* device, GdkEventMask events);
     * }
     */
    public static void gtk_widget_set_device_events(MemorySegment widget, MemorySegment device, int events) {
        var mh$ = gtk_widget_set_device_events$MH();
        try {
            mh$.invokeExact(widget, device, events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_add_device_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.gtk_widget_add_device_events$MH,"gtk_widget_add_device_events");
    }
    /**
     * {@snippet :
     * void gtk_widget_add_device_events(GtkWidget* widget, GdkDevice* device, GdkEventMask events);
     * }
     */
    public static void gtk_widget_add_device_events(MemorySegment widget, MemorySegment device, int events) {
        var mh$ = gtk_widget_add_device_events$MH();
        try {
            mh$.invokeExact(widget, device, events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_opacity$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.gtk_widget_set_opacity$MH,"gtk_widget_set_opacity");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_opacity(GtkWidget* widget, double opacity);
     * }
     */
    public static void gtk_widget_set_opacity(MemorySegment widget, double opacity) {
        var mh$ = gtk_widget_set_opacity$MH();
        try {
            mh$.invokeExact(widget, opacity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_opacity$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.gtk_widget_get_opacity$MH,"gtk_widget_get_opacity");
    }
    /**
     * {@snippet :
     * double gtk_widget_get_opacity(GtkWidget* widget);
     * }
     */
    public static double gtk_widget_get_opacity(MemorySegment widget) {
        var mh$ = gtk_widget_get_opacity$MH();
        try {
            return (double)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_device_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.gtk_widget_set_device_enabled$MH,"gtk_widget_set_device_enabled");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_device_enabled(GtkWidget* widget, GdkDevice* device, gboolean enabled);
     * }
     */
    public static void gtk_widget_set_device_enabled(MemorySegment widget, MemorySegment device, int enabled) {
        var mh$ = gtk_widget_set_device_enabled$MH();
        try {
            mh$.invokeExact(widget, device, enabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_device_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.gtk_widget_get_device_enabled$MH,"gtk_widget_get_device_enabled");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_device_enabled(GtkWidget* widget, GdkDevice* device);
     * }
     */
    public static int gtk_widget_get_device_enabled(MemorySegment widget, MemorySegment device) {
        var mh$ = gtk_widget_get_device_enabled$MH();
        try {
            return (int)mh$.invokeExact(widget, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_toplevel$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.gtk_widget_get_toplevel$MH,"gtk_widget_get_toplevel");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_widget_get_toplevel(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_toplevel(MemorySegment widget) {
        var mh$ = gtk_widget_get_toplevel$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_ancestor$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.gtk_widget_get_ancestor$MH,"gtk_widget_get_ancestor");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_widget_get_ancestor(GtkWidget* widget, GType widget_type);
     * }
     */
    public static MemorySegment gtk_widget_get_ancestor(MemorySegment widget, long widget_type) {
        var mh$ = gtk_widget_get_ancestor$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, widget_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_visual$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.gtk_widget_get_visual$MH,"gtk_widget_get_visual");
    }
    /**
     * {@snippet :
     * GdkVisual* gtk_widget_get_visual(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_visual(MemorySegment widget) {
        var mh$ = gtk_widget_get_visual$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_visual$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.gtk_widget_set_visual$MH,"gtk_widget_set_visual");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_visual(GtkWidget* widget, GdkVisual* visual);
     * }
     */
    public static void gtk_widget_set_visual(MemorySegment widget, MemorySegment visual) {
        var mh$ = gtk_widget_set_visual$MH();
        try {
            mh$.invokeExact(widget, visual);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.gtk_widget_get_screen$MH,"gtk_widget_get_screen");
    }
    /**
     * {@snippet :
     * GdkScreen* gtk_widget_get_screen(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_screen(MemorySegment widget) {
        var mh$ = gtk_widget_get_screen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_has_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.gtk_widget_has_screen$MH,"gtk_widget_has_screen");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_has_screen(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_has_screen(MemorySegment widget) {
        var mh$ = gtk_widget_has_screen$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_scale_factor$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.gtk_widget_get_scale_factor$MH,"gtk_widget_get_scale_factor");
    }
    /**
     * {@snippet :
     * gint gtk_widget_get_scale_factor(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_scale_factor(MemorySegment widget) {
        var mh$ = gtk_widget_get_scale_factor$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.gtk_widget_get_display$MH,"gtk_widget_get_display");
    }
    /**
     * {@snippet :
     * GdkDisplay* gtk_widget_get_display(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_display(MemorySegment widget) {
        var mh$ = gtk_widget_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_root_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.gtk_widget_get_root_window$MH,"gtk_widget_get_root_window");
    }
    /**
     * {@snippet :
     * GdkWindow* gtk_widget_get_root_window(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_root_window(MemorySegment widget) {
        var mh$ = gtk_widget_get_root_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_settings$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.gtk_widget_get_settings$MH,"gtk_widget_get_settings");
    }
    /**
     * {@snippet :
     * GtkSettings* gtk_widget_get_settings(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_settings(MemorySegment widget) {
        var mh$ = gtk_widget_get_settings$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.gtk_widget_get_clipboard$MH,"gtk_widget_get_clipboard");
    }
    /**
     * {@snippet :
     * GtkClipboard* gtk_widget_get_clipboard(GtkWidget* widget, GdkAtom selection);
     * }
     */
    public static MemorySegment gtk_widget_get_clipboard(MemorySegment widget, MemorySegment selection) {
        var mh$ = gtk_widget_get_clipboard$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_hexpand$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.gtk_widget_get_hexpand$MH,"gtk_widget_get_hexpand");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_hexpand(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_hexpand(MemorySegment widget) {
        var mh$ = gtk_widget_get_hexpand$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_hexpand$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.gtk_widget_set_hexpand$MH,"gtk_widget_set_hexpand");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_hexpand(GtkWidget* widget, gboolean expand);
     * }
     */
    public static void gtk_widget_set_hexpand(MemorySegment widget, int expand) {
        var mh$ = gtk_widget_set_hexpand$MH();
        try {
            mh$.invokeExact(widget, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_hexpand_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.gtk_widget_get_hexpand_set$MH,"gtk_widget_get_hexpand_set");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_hexpand_set(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_hexpand_set(MemorySegment widget) {
        var mh$ = gtk_widget_get_hexpand_set$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_hexpand_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.gtk_widget_set_hexpand_set$MH,"gtk_widget_set_hexpand_set");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_hexpand_set(GtkWidget* widget, gboolean set);
     * }
     */
    public static void gtk_widget_set_hexpand_set(MemorySegment widget, int set) {
        var mh$ = gtk_widget_set_hexpand_set$MH();
        try {
            mh$.invokeExact(widget, set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_vexpand$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.gtk_widget_get_vexpand$MH,"gtk_widget_get_vexpand");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_vexpand(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_vexpand(MemorySegment widget) {
        var mh$ = gtk_widget_get_vexpand$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_vexpand$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.gtk_widget_set_vexpand$MH,"gtk_widget_set_vexpand");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_vexpand(GtkWidget* widget, gboolean expand);
     * }
     */
    public static void gtk_widget_set_vexpand(MemorySegment widget, int expand) {
        var mh$ = gtk_widget_set_vexpand$MH();
        try {
            mh$.invokeExact(widget, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_vexpand_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.gtk_widget_get_vexpand_set$MH,"gtk_widget_get_vexpand_set");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_vexpand_set(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_vexpand_set(MemorySegment widget) {
        var mh$ = gtk_widget_get_vexpand_set$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_vexpand_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.gtk_widget_set_vexpand_set$MH,"gtk_widget_set_vexpand_set");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_vexpand_set(GtkWidget* widget, gboolean set);
     * }
     */
    public static void gtk_widget_set_vexpand_set(MemorySegment widget, int set) {
        var mh$ = gtk_widget_set_vexpand_set$MH();
        try {
            mh$.invokeExact(widget, set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_compute_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.gtk_widget_queue_compute_expand$MH,"gtk_widget_queue_compute_expand");
    }
    /**
     * {@snippet :
     * void gtk_widget_queue_compute_expand(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_queue_compute_expand(MemorySegment widget) {
        var mh$ = gtk_widget_queue_compute_expand$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_compute_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.gtk_widget_compute_expand$MH,"gtk_widget_compute_expand");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_compute_expand(GtkWidget* widget, GtkOrientation orientation);
     * }
     */
    public static int gtk_widget_compute_expand(MemorySegment widget, int orientation) {
        var mh$ = gtk_widget_compute_expand$MH();
        try {
            return (int)mh$.invokeExact(widget, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_support_multidevice$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.gtk_widget_get_support_multidevice$MH,"gtk_widget_get_support_multidevice");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_support_multidevice(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_support_multidevice(MemorySegment widget) {
        var mh$ = gtk_widget_get_support_multidevice$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_support_multidevice$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.gtk_widget_set_support_multidevice$MH,"gtk_widget_set_support_multidevice");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_support_multidevice(GtkWidget* widget, gboolean support_multidevice);
     * }
     */
    public static void gtk_widget_set_support_multidevice(MemorySegment widget, int support_multidevice) {
        var mh$ = gtk_widget_set_support_multidevice$MH();
        try {
            mh$.invokeExact(widget, support_multidevice);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_accessible_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.gtk_widget_class_set_accessible_type$MH,"gtk_widget_class_set_accessible_type");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_accessible_type(GtkWidgetClass* widget_class, GType type);
     * }
     */
    public static void gtk_widget_class_set_accessible_type(MemorySegment widget_class, long type) {
        var mh$ = gtk_widget_class_set_accessible_type$MH();
        try {
            mh$.invokeExact(widget_class, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_accessible_role$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.gtk_widget_class_set_accessible_role$MH,"gtk_widget_class_set_accessible_role");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_accessible_role(GtkWidgetClass* widget_class, AtkRole role);
     * }
     */
    public static void gtk_widget_class_set_accessible_role(MemorySegment widget_class, int role) {
        var mh$ = gtk_widget_class_set_accessible_role$MH();
        try {
            mh$.invokeExact(widget_class, role);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_accessible$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.gtk_widget_get_accessible$MH,"gtk_widget_get_accessible");
    }
    /**
     * {@snippet :
     * AtkObject* gtk_widget_get_accessible(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_accessible(MemorySegment widget) {
        var mh$ = gtk_widget_get_accessible$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_halign$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.gtk_widget_get_halign$MH,"gtk_widget_get_halign");
    }
    /**
     * {@snippet :
     * GtkAlign gtk_widget_get_halign(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_halign(MemorySegment widget) {
        var mh$ = gtk_widget_get_halign$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_halign$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.gtk_widget_set_halign$MH,"gtk_widget_set_halign");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_halign(GtkWidget* widget, GtkAlign align);
     * }
     */
    public static void gtk_widget_set_halign(MemorySegment widget, int align) {
        var mh$ = gtk_widget_set_halign$MH();
        try {
            mh$.invokeExact(widget, align);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_valign$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.gtk_widget_get_valign$MH,"gtk_widget_get_valign");
    }
    /**
     * {@snippet :
     * GtkAlign gtk_widget_get_valign(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_valign(MemorySegment widget) {
        var mh$ = gtk_widget_get_valign$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_valign_with_baseline$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.gtk_widget_get_valign_with_baseline$MH,"gtk_widget_get_valign_with_baseline");
    }
    /**
     * {@snippet :
     * GtkAlign gtk_widget_get_valign_with_baseline(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_valign_with_baseline(MemorySegment widget) {
        var mh$ = gtk_widget_get_valign_with_baseline$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_valign$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.gtk_widget_set_valign$MH,"gtk_widget_set_valign");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_valign(GtkWidget* widget, GtkAlign align);
     * }
     */
    public static void gtk_widget_set_valign(MemorySegment widget, int align) {
        var mh$ = gtk_widget_set_valign$MH();
        try {
            mh$.invokeExact(widget, align);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_margin_left$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.gtk_widget_get_margin_left$MH,"gtk_widget_get_margin_left");
    }
    /**
     * {@snippet :
     * gint gtk_widget_get_margin_left(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_margin_left(MemorySegment widget) {
        var mh$ = gtk_widget_get_margin_left$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_margin_left$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.gtk_widget_set_margin_left$MH,"gtk_widget_set_margin_left");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_margin_left(GtkWidget* widget, gint margin);
     * }
     */
    public static void gtk_widget_set_margin_left(MemorySegment widget, int margin) {
        var mh$ = gtk_widget_set_margin_left$MH();
        try {
            mh$.invokeExact(widget, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_margin_right$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.gtk_widget_get_margin_right$MH,"gtk_widget_get_margin_right");
    }
    /**
     * {@snippet :
     * gint gtk_widget_get_margin_right(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_margin_right(MemorySegment widget) {
        var mh$ = gtk_widget_get_margin_right$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_margin_right$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.gtk_widget_set_margin_right$MH,"gtk_widget_set_margin_right");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_margin_right(GtkWidget* widget, gint margin);
     * }
     */
    public static void gtk_widget_set_margin_right(MemorySegment widget, int margin) {
        var mh$ = gtk_widget_set_margin_right$MH();
        try {
            mh$.invokeExact(widget, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_margin_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.gtk_widget_get_margin_start$MH,"gtk_widget_get_margin_start");
    }
    /**
     * {@snippet :
     * gint gtk_widget_get_margin_start(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_margin_start(MemorySegment widget) {
        var mh$ = gtk_widget_get_margin_start$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_margin_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.gtk_widget_set_margin_start$MH,"gtk_widget_set_margin_start");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_margin_start(GtkWidget* widget, gint margin);
     * }
     */
    public static void gtk_widget_set_margin_start(MemorySegment widget, int margin) {
        var mh$ = gtk_widget_set_margin_start$MH();
        try {
            mh$.invokeExact(widget, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_margin_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.gtk_widget_get_margin_end$MH,"gtk_widget_get_margin_end");
    }
    /**
     * {@snippet :
     * gint gtk_widget_get_margin_end(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_margin_end(MemorySegment widget) {
        var mh$ = gtk_widget_get_margin_end$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_margin_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.gtk_widget_set_margin_end$MH,"gtk_widget_set_margin_end");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_margin_end(GtkWidget* widget, gint margin);
     * }
     */
    public static void gtk_widget_set_margin_end(MemorySegment widget, int margin) {
        var mh$ = gtk_widget_set_margin_end$MH();
        try {
            mh$.invokeExact(widget, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_margin_top$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.gtk_widget_get_margin_top$MH,"gtk_widget_get_margin_top");
    }
    /**
     * {@snippet :
     * gint gtk_widget_get_margin_top(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_margin_top(MemorySegment widget) {
        var mh$ = gtk_widget_get_margin_top$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_margin_top$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.gtk_widget_set_margin_top$MH,"gtk_widget_set_margin_top");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_margin_top(GtkWidget* widget, gint margin);
     * }
     */
    public static void gtk_widget_set_margin_top(MemorySegment widget, int margin) {
        var mh$ = gtk_widget_set_margin_top$MH();
        try {
            mh$.invokeExact(widget, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_margin_bottom$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.gtk_widget_get_margin_bottom$MH,"gtk_widget_get_margin_bottom");
    }
    /**
     * {@snippet :
     * gint gtk_widget_get_margin_bottom(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_margin_bottom(MemorySegment widget) {
        var mh$ = gtk_widget_get_margin_bottom$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_margin_bottom$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.gtk_widget_set_margin_bottom$MH,"gtk_widget_set_margin_bottom");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_margin_bottom(GtkWidget* widget, gint margin);
     * }
     */
    public static void gtk_widget_set_margin_bottom(MemorySegment widget, int margin) {
        var mh$ = gtk_widget_set_margin_bottom$MH();
        try {
            mh$.invokeExact(widget, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.gtk_widget_get_events$MH,"gtk_widget_get_events");
    }
    /**
     * {@snippet :
     * gint gtk_widget_get_events(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_events(MemorySegment widget) {
        var mh$ = gtk_widget_get_events$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_device_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.gtk_widget_get_device_events$MH,"gtk_widget_get_device_events");
    }
    /**
     * {@snippet :
     * GdkEventMask gtk_widget_get_device_events(GtkWidget* widget, GdkDevice* device);
     * }
     */
    public static int gtk_widget_get_device_events(MemorySegment widget, MemorySegment device) {
        var mh$ = gtk_widget_get_device_events$MH();
        try {
            return (int)mh$.invokeExact(widget, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.gtk_widget_get_pointer$MH,"gtk_widget_get_pointer");
    }
    /**
     * {@snippet :
     * void gtk_widget_get_pointer(GtkWidget* widget, gint* x, gint* y);
     * }
     */
    public static void gtk_widget_get_pointer(MemorySegment widget, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_widget_get_pointer$MH();
        try {
            mh$.invokeExact(widget, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_is_ancestor$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.gtk_widget_is_ancestor$MH,"gtk_widget_is_ancestor");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_is_ancestor(GtkWidget* widget, GtkWidget* ancestor);
     * }
     */
    public static int gtk_widget_is_ancestor(MemorySegment widget, MemorySegment ancestor) {
        var mh$ = gtk_widget_is_ancestor$MH();
        try {
            return (int)mh$.invokeExact(widget, ancestor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_translate_coordinates$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.gtk_widget_translate_coordinates$MH,"gtk_widget_translate_coordinates");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_translate_coordinates(GtkWidget* src_widget, GtkWidget* dest_widget, gint src_x, gint src_y, gint* dest_x, gint* dest_y);
     * }
     */
    public static int gtk_widget_translate_coordinates(MemorySegment src_widget, MemorySegment dest_widget, int src_x, int src_y, MemorySegment dest_x, MemorySegment dest_y) {
        var mh$ = gtk_widget_translate_coordinates$MH();
        try {
            return (int)mh$.invokeExact(src_widget, dest_widget, src_x, src_y, dest_x, dest_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_hide_on_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.gtk_widget_hide_on_delete$MH,"gtk_widget_hide_on_delete");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_hide_on_delete(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_hide_on_delete(MemorySegment widget) {
        var mh$ = gtk_widget_hide_on_delete$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_override_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.gtk_widget_override_color$MH,"gtk_widget_override_color");
    }
    /**
     * {@snippet :
     * void gtk_widget_override_color(GtkWidget* widget, GtkStateFlags state, const GdkRGBA* color);
     * }
     */
    public static void gtk_widget_override_color(MemorySegment widget, int state, MemorySegment color) {
        var mh$ = gtk_widget_override_color$MH();
        try {
            mh$.invokeExact(widget, state, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_override_background_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.gtk_widget_override_background_color$MH,"gtk_widget_override_background_color");
    }
    /**
     * {@snippet :
     * void gtk_widget_override_background_color(GtkWidget* widget, GtkStateFlags state, const GdkRGBA* color);
     * }
     */
    public static void gtk_widget_override_background_color(MemorySegment widget, int state, MemorySegment color) {
        var mh$ = gtk_widget_override_background_color$MH();
        try {
            mh$.invokeExact(widget, state, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_override_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.gtk_widget_override_font$MH,"gtk_widget_override_font");
    }
    /**
     * {@snippet :
     * void gtk_widget_override_font(GtkWidget* widget, const PangoFontDescription* font_desc);
     * }
     */
    public static void gtk_widget_override_font(MemorySegment widget, MemorySegment font_desc) {
        var mh$ = gtk_widget_override_font$MH();
        try {
            mh$.invokeExact(widget, font_desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_override_symbolic_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.gtk_widget_override_symbolic_color$MH,"gtk_widget_override_symbolic_color");
    }
    /**
     * {@snippet :
     * void gtk_widget_override_symbolic_color(GtkWidget* widget, const gchar* name, const GdkRGBA* color);
     * }
     */
    public static void gtk_widget_override_symbolic_color(MemorySegment widget, MemorySegment name, MemorySegment color) {
        var mh$ = gtk_widget_override_symbolic_color$MH();
        try {
            mh$.invokeExact(widget, name, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_override_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.gtk_widget_override_cursor$MH,"gtk_widget_override_cursor");
    }
    /**
     * {@snippet :
     * void gtk_widget_override_cursor(GtkWidget* widget, const GdkRGBA* cursor, const GdkRGBA* secondary_cursor);
     * }
     */
    public static void gtk_widget_override_cursor(MemorySegment widget, MemorySegment cursor, MemorySegment secondary_cursor) {
        var mh$ = gtk_widget_override_cursor$MH();
        try {
            mh$.invokeExact(widget, cursor, secondary_cursor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_reset_style$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.gtk_widget_reset_style$MH,"gtk_widget_reset_style");
    }
    /**
     * {@snippet :
     * void gtk_widget_reset_style(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_reset_style(MemorySegment widget) {
        var mh$ = gtk_widget_reset_style$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_create_pango_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.gtk_widget_create_pango_context$MH,"gtk_widget_create_pango_context");
    }
    /**
     * {@snippet :
     * PangoContext* gtk_widget_create_pango_context(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_create_pango_context(MemorySegment widget) {
        var mh$ = gtk_widget_create_pango_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_pango_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.gtk_widget_get_pango_context$MH,"gtk_widget_get_pango_context");
    }
    /**
     * {@snippet :
     * PangoContext* gtk_widget_get_pango_context(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_pango_context(MemorySegment widget) {
        var mh$ = gtk_widget_get_pango_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.gtk_widget_set_font_options$MH,"gtk_widget_set_font_options");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_font_options(GtkWidget* widget, const cairo_font_options_t* options);
     * }
     */
    public static void gtk_widget_set_font_options(MemorySegment widget, MemorySegment options) {
        var mh$ = gtk_widget_set_font_options$MH();
        try {
            mh$.invokeExact(widget, options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.gtk_widget_get_font_options$MH,"gtk_widget_get_font_options");
    }
    /**
     * {@snippet :
     * const cairo_font_options_t* gtk_widget_get_font_options(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_font_options(MemorySegment widget) {
        var mh$ = gtk_widget_get_font_options$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_create_pango_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.gtk_widget_create_pango_layout$MH,"gtk_widget_create_pango_layout");
    }
    /**
     * {@snippet :
     * PangoLayout* gtk_widget_create_pango_layout(GtkWidget* widget, const gchar* text);
     * }
     */
    public static MemorySegment gtk_widget_create_pango_layout(MemorySegment widget, MemorySegment text) {
        var mh$ = gtk_widget_create_pango_layout$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_render_icon_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.gtk_widget_render_icon_pixbuf$MH,"gtk_widget_render_icon_pixbuf");
    }
    /**
     * {@snippet :
     * GdkPixbuf* gtk_widget_render_icon_pixbuf(GtkWidget* widget, const gchar* stock_id, GtkIconSize size);
     * }
     */
    public static MemorySegment gtk_widget_render_icon_pixbuf(MemorySegment widget, MemorySegment stock_id, int size) {
        var mh$ = gtk_widget_render_icon_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, stock_id, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_composite_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.gtk_widget_set_composite_name$MH,"gtk_widget_set_composite_name");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_composite_name(GtkWidget* widget, const gchar* name);
     * }
     */
    public static void gtk_widget_set_composite_name(MemorySegment widget, MemorySegment name) {
        var mh$ = gtk_widget_set_composite_name$MH();
        try {
            mh$.invokeExact(widget, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_composite_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.gtk_widget_get_composite_name$MH,"gtk_widget_get_composite_name");
    }
    /**
     * {@snippet :
     * gchar* gtk_widget_get_composite_name(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_composite_name(MemorySegment widget) {
        var mh$ = gtk_widget_get_composite_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_push_composite_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.gtk_widget_push_composite_child$MH,"gtk_widget_push_composite_child");
    }
    /**
     * {@snippet :
     * void gtk_widget_push_composite_child();
     * }
     */
    public static void gtk_widget_push_composite_child() {
        var mh$ = gtk_widget_push_composite_child$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_pop_composite_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.gtk_widget_pop_composite_child$MH,"gtk_widget_pop_composite_child");
    }
    /**
     * {@snippet :
     * void gtk_widget_pop_composite_child();
     * }
     */
    public static void gtk_widget_pop_composite_child() {
        var mh$ = gtk_widget_pop_composite_child$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_install_style_property$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.gtk_widget_class_install_style_property$MH,"gtk_widget_class_install_style_property");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_install_style_property(GtkWidgetClass* klass, GParamSpec* pspec);
     * }
     */
    public static void gtk_widget_class_install_style_property(MemorySegment klass, MemorySegment pspec) {
        var mh$ = gtk_widget_class_install_style_property$MH();
        try {
            mh$.invokeExact(klass, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_install_style_property_parser$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.gtk_widget_class_install_style_property_parser$MH,"gtk_widget_class_install_style_property_parser");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_install_style_property_parser(GtkWidgetClass* klass, GParamSpec* pspec, GtkRcPropertyParser parser);
     * }
     */
    public static void gtk_widget_class_install_style_property_parser(MemorySegment klass, MemorySegment pspec, MemorySegment parser) {
        var mh$ = gtk_widget_class_install_style_property_parser$MH();
        try {
            mh$.invokeExact(klass, pspec, parser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_find_style_property$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.gtk_widget_class_find_style_property$MH,"gtk_widget_class_find_style_property");
    }
    /**
     * {@snippet :
     * GParamSpec* gtk_widget_class_find_style_property(GtkWidgetClass* klass, const gchar* property_name);
     * }
     */
    public static MemorySegment gtk_widget_class_find_style_property(MemorySegment klass, MemorySegment property_name) {
        var mh$ = gtk_widget_class_find_style_property$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(klass, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_list_style_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.gtk_widget_class_list_style_properties$MH,"gtk_widget_class_list_style_properties");
    }
    /**
     * {@snippet :
     * GParamSpec** gtk_widget_class_list_style_properties(GtkWidgetClass* klass, guint* n_properties);
     * }
     */
    public static MemorySegment gtk_widget_class_list_style_properties(MemorySegment klass, MemorySegment n_properties) {
        var mh$ = gtk_widget_class_list_style_properties$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(klass, n_properties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_style_get_property$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.gtk_widget_style_get_property$MH,"gtk_widget_style_get_property");
    }
    /**
     * {@snippet :
     * void gtk_widget_style_get_property(GtkWidget* widget, const gchar* property_name, GValue* value);
     * }
     */
    public static void gtk_widget_style_get_property(MemorySegment widget, MemorySegment property_name, MemorySegment value) {
        var mh$ = gtk_widget_style_get_property$MH();
        try {
            mh$.invokeExact(widget, property_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_style_get_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.gtk_widget_style_get_valist$MH,"gtk_widget_style_get_valist");
    }
    /**
     * {@snippet :
     * void gtk_widget_style_get_valist(GtkWidget* widget, const gchar* first_property_name, va_list var_args);
     * }
     */
    public static void gtk_widget_style_get_valist(MemorySegment widget, MemorySegment first_property_name, MemorySegment var_args) {
        var mh$ = gtk_widget_style_get_valist$MH();
        try {
            mh$.invokeExact(widget, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_style_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.gtk_widget_style_get$MH,"gtk_widget_style_get");
    }
    /**
     * {@snippet :
     * void gtk_widget_style_get(GtkWidget* widget, const gchar* first_property_name,...);
     * }
     */
    public static void gtk_widget_style_get(MemorySegment widget, MemorySegment first_property_name, Object... x2) {
        var mh$ = gtk_widget_style_get$MH();
        try {
            mh$.invokeExact(widget, first_property_name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.gtk_widget_set_direction$MH,"gtk_widget_set_direction");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_direction(GtkWidget* widget, GtkTextDirection dir);
     * }
     */
    public static void gtk_widget_set_direction(MemorySegment widget, int dir) {
        var mh$ = gtk_widget_set_direction$MH();
        try {
            mh$.invokeExact(widget, dir);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.gtk_widget_get_direction$MH,"gtk_widget_get_direction");
    }
    /**
     * {@snippet :
     * GtkTextDirection gtk_widget_get_direction(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_direction(MemorySegment widget) {
        var mh$ = gtk_widget_get_direction$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_default_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.gtk_widget_set_default_direction$MH,"gtk_widget_set_default_direction");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_default_direction(GtkTextDirection dir);
     * }
     */
    public static void gtk_widget_set_default_direction(int dir) {
        var mh$ = gtk_widget_set_default_direction$MH();
        try {
            mh$.invokeExact(dir);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_default_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.gtk_widget_get_default_direction$MH,"gtk_widget_get_default_direction");
    }
    /**
     * {@snippet :
     * GtkTextDirection gtk_widget_get_default_direction();
     * }
     */
    public static int gtk_widget_get_default_direction() {
        var mh$ = gtk_widget_get_default_direction$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_is_composited$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.gtk_widget_is_composited$MH,"gtk_widget_is_composited");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_is_composited(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_is_composited(MemorySegment widget) {
        var mh$ = gtk_widget_is_composited$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_shape_combine_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.gtk_widget_shape_combine_region$MH,"gtk_widget_shape_combine_region");
    }
    /**
     * {@snippet :
     * void gtk_widget_shape_combine_region(GtkWidget* widget, cairo_region_t* region);
     * }
     */
    public static void gtk_widget_shape_combine_region(MemorySegment widget, MemorySegment region) {
        var mh$ = gtk_widget_shape_combine_region$MH();
        try {
            mh$.invokeExact(widget, region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_input_shape_combine_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.gtk_widget_input_shape_combine_region$MH,"gtk_widget_input_shape_combine_region");
    }
    /**
     * {@snippet :
     * void gtk_widget_input_shape_combine_region(GtkWidget* widget, cairo_region_t* region);
     * }
     */
    public static void gtk_widget_input_shape_combine_region(MemorySegment widget, MemorySegment region) {
        var mh$ = gtk_widget_input_shape_combine_region$MH();
        try {
            mh$.invokeExact(widget, region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_list_mnemonic_labels$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.gtk_widget_list_mnemonic_labels$MH,"gtk_widget_list_mnemonic_labels");
    }
    /**
     * {@snippet :
     * GList* gtk_widget_list_mnemonic_labels(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_list_mnemonic_labels(MemorySegment widget) {
        var mh$ = gtk_widget_list_mnemonic_labels$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_add_mnemonic_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.gtk_widget_add_mnemonic_label$MH,"gtk_widget_add_mnemonic_label");
    }
    /**
     * {@snippet :
     * void gtk_widget_add_mnemonic_label(GtkWidget* widget, GtkWidget* label);
     * }
     */
    public static void gtk_widget_add_mnemonic_label(MemorySegment widget, MemorySegment label) {
        var mh$ = gtk_widget_add_mnemonic_label$MH();
        try {
            mh$.invokeExact(widget, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_remove_mnemonic_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.gtk_widget_remove_mnemonic_label$MH,"gtk_widget_remove_mnemonic_label");
    }
    /**
     * {@snippet :
     * void gtk_widget_remove_mnemonic_label(GtkWidget* widget, GtkWidget* label);
     * }
     */
    public static void gtk_widget_remove_mnemonic_label(MemorySegment widget, MemorySegment label) {
        var mh$ = gtk_widget_remove_mnemonic_label$MH();
        try {
            mh$.invokeExact(widget, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_tooltip_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.gtk_widget_set_tooltip_window$MH,"gtk_widget_set_tooltip_window");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_tooltip_window(GtkWidget* widget, GtkWindow* custom_window);
     * }
     */
    public static void gtk_widget_set_tooltip_window(MemorySegment widget, MemorySegment custom_window) {
        var mh$ = gtk_widget_set_tooltip_window$MH();
        try {
            mh$.invokeExact(widget, custom_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_tooltip_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.gtk_widget_get_tooltip_window$MH,"gtk_widget_get_tooltip_window");
    }
    /**
     * {@snippet :
     * GtkWindow* gtk_widget_get_tooltip_window(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_tooltip_window(MemorySegment widget) {
        var mh$ = gtk_widget_get_tooltip_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_trigger_tooltip_query$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.gtk_widget_trigger_tooltip_query$MH,"gtk_widget_trigger_tooltip_query");
    }
    /**
     * {@snippet :
     * void gtk_widget_trigger_tooltip_query(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_trigger_tooltip_query(MemorySegment widget) {
        var mh$ = gtk_widget_trigger_tooltip_query$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_tooltip_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.gtk_widget_set_tooltip_text$MH,"gtk_widget_set_tooltip_text");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_tooltip_text(GtkWidget* widget, const gchar* text);
     * }
     */
    public static void gtk_widget_set_tooltip_text(MemorySegment widget, MemorySegment text) {
        var mh$ = gtk_widget_set_tooltip_text$MH();
        try {
            mh$.invokeExact(widget, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_tooltip_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.gtk_widget_get_tooltip_text$MH,"gtk_widget_get_tooltip_text");
    }
    /**
     * {@snippet :
     * gchar* gtk_widget_get_tooltip_text(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_tooltip_text(MemorySegment widget) {
        var mh$ = gtk_widget_get_tooltip_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_tooltip_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.gtk_widget_set_tooltip_markup$MH,"gtk_widget_set_tooltip_markup");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_tooltip_markup(GtkWidget* widget, const gchar* markup);
     * }
     */
    public static void gtk_widget_set_tooltip_markup(MemorySegment widget, MemorySegment markup) {
        var mh$ = gtk_widget_set_tooltip_markup$MH();
        try {
            mh$.invokeExact(widget, markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_tooltip_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.gtk_widget_get_tooltip_markup$MH,"gtk_widget_get_tooltip_markup");
    }
    /**
     * {@snippet :
     * gchar* gtk_widget_get_tooltip_markup(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_tooltip_markup(MemorySegment widget) {
        var mh$ = gtk_widget_get_tooltip_markup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_has_tooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.gtk_widget_set_has_tooltip$MH,"gtk_widget_set_has_tooltip");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_has_tooltip(GtkWidget* widget, gboolean has_tooltip);
     * }
     */
    public static void gtk_widget_set_has_tooltip(MemorySegment widget, int has_tooltip) {
        var mh$ = gtk_widget_set_has_tooltip$MH();
        try {
            mh$.invokeExact(widget, has_tooltip);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_has_tooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.gtk_widget_get_has_tooltip$MH,"gtk_widget_get_has_tooltip");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_get_has_tooltip(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_get_has_tooltip(MemorySegment widget) {
        var mh$ = gtk_widget_get_has_tooltip$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cairo_should_draw_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.gtk_cairo_should_draw_window$MH,"gtk_cairo_should_draw_window");
    }
    /**
     * {@snippet :
     * gboolean gtk_cairo_should_draw_window(cairo_t* cr, GdkWindow* window);
     * }
     */
    public static int gtk_cairo_should_draw_window(MemorySegment cr, MemorySegment window) {
        var mh$ = gtk_cairo_should_draw_window$MH();
        try {
            return (int)mh$.invokeExact(cr, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cairo_transform_to_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.gtk_cairo_transform_to_window$MH,"gtk_cairo_transform_to_window");
    }
    /**
     * {@snippet :
     * void gtk_cairo_transform_to_window(cairo_t* cr, GtkWidget* widget, GdkWindow* window);
     * }
     */
    public static void gtk_cairo_transform_to_window(MemorySegment cr, MemorySegment widget, MemorySegment window) {
        var mh$ = gtk_cairo_transform_to_window$MH();
        try {
            mh$.invokeExact(cr, widget, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_requisition_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.gtk_requisition_get_type$MH,"gtk_requisition_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_requisition_get_type();
     * }
     */
    public static long gtk_requisition_get_type() {
        var mh$ = gtk_requisition_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_requisition_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.gtk_requisition_new$MH,"gtk_requisition_new");
    }
    /**
     * {@snippet :
     * GtkRequisition* gtk_requisition_new();
     * }
     */
    public static MemorySegment gtk_requisition_new() {
        var mh$ = gtk_requisition_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_requisition_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.gtk_requisition_copy$MH,"gtk_requisition_copy");
    }
    /**
     * {@snippet :
     * GtkRequisition* gtk_requisition_copy(const GtkRequisition* requisition);
     * }
     */
    public static MemorySegment gtk_requisition_copy(MemorySegment requisition) {
        var mh$ = gtk_requisition_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(requisition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_requisition_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.gtk_requisition_free$MH,"gtk_requisition_free");
    }
    /**
     * {@snippet :
     * void gtk_requisition_free(GtkRequisition* requisition);
     * }
     */
    public static void gtk_requisition_free(MemorySegment requisition) {
        var mh$ = gtk_requisition_free$MH();
        try {
            mh$.invokeExact(requisition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_in_destruction$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.gtk_widget_in_destruction$MH,"gtk_widget_in_destruction");
    }
    /**
     * {@snippet :
     * gboolean gtk_widget_in_destruction(GtkWidget* widget);
     * }
     */
    public static int gtk_widget_in_destruction(MemorySegment widget) {
        var mh$ = gtk_widget_in_destruction$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_style_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.gtk_widget_get_style_context$MH,"gtk_widget_get_style_context");
    }
    /**
     * {@snippet :
     * GtkStyleContext* gtk_widget_get_style_context(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_style_context(MemorySegment widget) {
        var mh$ = gtk_widget_get_style_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.gtk_widget_get_path$MH,"gtk_widget_get_path");
    }
    /**
     * {@snippet :
     * GtkWidgetPath* gtk_widget_get_path(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_path(MemorySegment widget) {
        var mh$ = gtk_widget_get_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_css_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.gtk_widget_class_set_css_name$MH,"gtk_widget_class_set_css_name");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_css_name(GtkWidgetClass* widget_class, char* name);
     * }
     */
    public static void gtk_widget_class_set_css_name(MemorySegment widget_class, MemorySegment name) {
        var mh$ = gtk_widget_class_set_css_name$MH();
        try {
            mh$.invokeExact(widget_class, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_get_css_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.gtk_widget_class_get_css_name$MH,"gtk_widget_class_get_css_name");
    }
    /**
     * {@snippet :
     * char* gtk_widget_class_get_css_name(GtkWidgetClass* widget_class);
     * }
     */
    public static MemorySegment gtk_widget_class_get_css_name(MemorySegment widget_class) {
        var mh$ = gtk_widget_class_get_css_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_modifier_mask$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.gtk_widget_get_modifier_mask$MH,"gtk_widget_get_modifier_mask");
    }
    /**
     * {@snippet :
     * GdkModifierType gtk_widget_get_modifier_mask(GtkWidget* widget, GdkModifierIntent intent);
     * }
     */
    public static int gtk_widget_get_modifier_mask(MemorySegment widget, int intent) {
        var mh$ = gtk_widget_get_modifier_mask$MH();
        try {
            return (int)mh$.invokeExact(widget, intent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_insert_action_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.gtk_widget_insert_action_group$MH,"gtk_widget_insert_action_group");
    }
    /**
     * {@snippet :
     * void gtk_widget_insert_action_group(GtkWidget* widget, const gchar* name, GActionGroup* group);
     * }
     */
    public static void gtk_widget_insert_action_group(MemorySegment widget, MemorySegment name, MemorySegment group) {
        var mh$ = gtk_widget_insert_action_group$MH();
        try {
            mh$.invokeExact(widget, name, group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_add_tick_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.gtk_widget_add_tick_callback$MH,"gtk_widget_add_tick_callback");
    }
    /**
     * {@snippet :
     * guint gtk_widget_add_tick_callback(GtkWidget* widget, GtkTickCallback callback, gpointer user_data, GDestroyNotify notify);
     * }
     */
    public static int gtk_widget_add_tick_callback(MemorySegment widget, MemorySegment callback, MemorySegment user_data, MemorySegment notify) {
        var mh$ = gtk_widget_add_tick_callback$MH();
        try {
            return (int)mh$.invokeExact(widget, callback, user_data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_remove_tick_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.gtk_widget_remove_tick_callback$MH,"gtk_widget_remove_tick_callback");
    }
    /**
     * {@snippet :
     * void gtk_widget_remove_tick_callback(GtkWidget* widget, guint id);
     * }
     */
    public static void gtk_widget_remove_tick_callback(MemorySegment widget, int id) {
        var mh$ = gtk_widget_remove_tick_callback$MH();
        try {
            mh$.invokeExact(widget, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_init_template$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.gtk_widget_init_template$MH,"gtk_widget_init_template");
    }
    /**
     * {@snippet :
     * void gtk_widget_init_template(GtkWidget* widget);
     * }
     */
    public static void gtk_widget_init_template(MemorySegment widget) {
        var mh$ = gtk_widget_init_template$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_template_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.gtk_widget_get_template_child$MH,"gtk_widget_get_template_child");
    }
    /**
     * {@snippet :
     * GObject* gtk_widget_get_template_child(GtkWidget* widget, GType widget_type, const gchar* name);
     * }
     */
    public static MemorySegment gtk_widget_get_template_child(MemorySegment widget, long widget_type, MemorySegment name) {
        var mh$ = gtk_widget_get_template_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, widget_type, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_template$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.gtk_widget_class_set_template$MH,"gtk_widget_class_set_template");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_template(GtkWidgetClass* widget_class, GBytes* template_bytes);
     * }
     */
    public static void gtk_widget_class_set_template(MemorySegment widget_class, MemorySegment template_bytes) {
        var mh$ = gtk_widget_class_set_template$MH();
        try {
            mh$.invokeExact(widget_class, template_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_template_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.gtk_widget_class_set_template_from_resource$MH,"gtk_widget_class_set_template_from_resource");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_template_from_resource(GtkWidgetClass* widget_class, const gchar* resource_name);
     * }
     */
    public static void gtk_widget_class_set_template_from_resource(MemorySegment widget_class, MemorySegment resource_name) {
        var mh$ = gtk_widget_class_set_template_from_resource$MH();
        try {
            mh$.invokeExact(widget_class, resource_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_bind_template_callback_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.gtk_widget_class_bind_template_callback_full$MH,"gtk_widget_class_bind_template_callback_full");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_bind_template_callback_full(GtkWidgetClass* widget_class, const gchar* callback_name, GCallback callback_symbol);
     * }
     */
    public static void gtk_widget_class_bind_template_callback_full(MemorySegment widget_class, MemorySegment callback_name, MemorySegment callback_symbol) {
        var mh$ = gtk_widget_class_bind_template_callback_full$MH();
        try {
            mh$.invokeExact(widget_class, callback_name, callback_symbol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_connect_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.gtk_widget_class_set_connect_func$MH,"gtk_widget_class_set_connect_func");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_connect_func(GtkWidgetClass* widget_class, GtkBuilderConnectFunc connect_func, gpointer connect_data, GDestroyNotify connect_data_destroy);
     * }
     */
    public static void gtk_widget_class_set_connect_func(MemorySegment widget_class, MemorySegment connect_func, MemorySegment connect_data, MemorySegment connect_data_destroy) {
        var mh$ = gtk_widget_class_set_connect_func$MH();
        try {
            mh$.invokeExact(widget_class, connect_func, connect_data, connect_data_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_bind_template_child_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.gtk_widget_class_bind_template_child_full$MH,"gtk_widget_class_bind_template_child_full");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_bind_template_child_full(GtkWidgetClass* widget_class, const gchar* name, gboolean internal_child, gssize struct_offset);
     * }
     */
    public static void gtk_widget_class_bind_template_child_full(MemorySegment widget_class, MemorySegment name, int internal_child, long struct_offset) {
        var mh$ = gtk_widget_class_bind_template_child_full$MH();
        try {
            mh$.invokeExact(widget_class, name, internal_child, struct_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_action_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.gtk_widget_get_action_group$MH,"gtk_widget_get_action_group");
    }
    /**
     * {@snippet :
     * GActionGroup* gtk_widget_get_action_group(GtkWidget* widget, const gchar* prefix);
     * }
     */
    public static MemorySegment gtk_widget_get_action_group(MemorySegment widget, MemorySegment prefix) {
        var mh$ = gtk_widget_get_action_group$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, prefix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_list_action_prefixes$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.gtk_widget_list_action_prefixes$MH,"gtk_widget_list_action_prefixes");
    }
    /**
     * {@snippet :
     * const gchar** gtk_widget_list_action_prefixes(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_list_action_prefixes(MemorySegment widget) {
        var mh$ = gtk_widget_list_action_prefixes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_font_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.gtk_widget_set_font_map$MH,"gtk_widget_set_font_map");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_font_map(GtkWidget* widget, PangoFontMap* font_map);
     * }
     */
    public static void gtk_widget_set_font_map(MemorySegment widget, MemorySegment font_map) {
        var mh$ = gtk_widget_set_font_map$MH();
        try {
            mh$.invokeExact(widget, font_map);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_font_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.gtk_widget_get_font_map$MH,"gtk_widget_get_font_map");
    }
    /**
     * {@snippet :
     * PangoFontMap* gtk_widget_get_font_map(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_font_map(MemorySegment widget) {
        var mh$ = gtk_widget_get_font_map$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkWidget* GtkWidget_autoptr;
     * }
     */
    public static final OfAddress GtkWidget_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkWidget_listautoptr;
     * }
     */
    public static final OfAddress GtkWidget_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkWidget_slistautoptr;
     * }
     */
    public static final OfAddress GtkWidget_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkWidget_queueautoptr;
     * }
     */
    public static final OfAddress GtkWidget_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkRequisition* GtkRequisition_autoptr;
     * }
     */
    public static final OfAddress GtkRequisition_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkRequisition_listautoptr;
     * }
     */
    public static final OfAddress GtkRequisition_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkRequisition_slistautoptr;
     * }
     */
    public static final OfAddress GtkRequisition_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkRequisition_queueautoptr;
     * }
     */
    public static final OfAddress GtkRequisition_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_application_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.gtk_application_get_type$MH,"gtk_application_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_application_get_type();
     * }
     */
    public static long gtk_application_get_type() {
        var mh$ = gtk_application_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.gtk_application_new$MH,"gtk_application_new");
    }
    /**
     * {@snippet :
     * GtkApplication* gtk_application_new(const gchar* application_id, GApplicationFlags flags);
     * }
     */
    public static MemorySegment gtk_application_new(MemorySegment application_id, int flags) {
        var mh$ = gtk_application_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application_id, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_add_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.gtk_application_add_window$MH,"gtk_application_add_window");
    }
    /**
     * {@snippet :
     * void gtk_application_add_window(GtkApplication* application, GtkWindow* window);
     * }
     */
    public static void gtk_application_add_window(MemorySegment application, MemorySegment window) {
        var mh$ = gtk_application_add_window$MH();
        try {
            mh$.invokeExact(application, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_remove_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.gtk_application_remove_window$MH,"gtk_application_remove_window");
    }
    /**
     * {@snippet :
     * void gtk_application_remove_window(GtkApplication* application, GtkWindow* window);
     * }
     */
    public static void gtk_application_remove_window(MemorySegment application, MemorySegment window) {
        var mh$ = gtk_application_remove_window$MH();
        try {
            mh$.invokeExact(application, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_windows$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.gtk_application_get_windows$MH,"gtk_application_get_windows");
    }
    /**
     * {@snippet :
     * GList* gtk_application_get_windows(GtkApplication* application);
     * }
     */
    public static MemorySegment gtk_application_get_windows(MemorySegment application) {
        var mh$ = gtk_application_get_windows$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_app_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.gtk_application_get_app_menu$MH,"gtk_application_get_app_menu");
    }
    /**
     * {@snippet :
     * GMenuModel* gtk_application_get_app_menu(GtkApplication* application);
     * }
     */
    public static MemorySegment gtk_application_get_app_menu(MemorySegment application) {
        var mh$ = gtk_application_get_app_menu$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_set_app_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.gtk_application_set_app_menu$MH,"gtk_application_set_app_menu");
    }
    /**
     * {@snippet :
     * void gtk_application_set_app_menu(GtkApplication* application, GMenuModel* app_menu);
     * }
     */
    public static void gtk_application_set_app_menu(MemorySegment application, MemorySegment app_menu) {
        var mh$ = gtk_application_set_app_menu$MH();
        try {
            mh$.invokeExact(application, app_menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_menubar$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.gtk_application_get_menubar$MH,"gtk_application_get_menubar");
    }
    /**
     * {@snippet :
     * GMenuModel* gtk_application_get_menubar(GtkApplication* application);
     * }
     */
    public static MemorySegment gtk_application_get_menubar(MemorySegment application) {
        var mh$ = gtk_application_get_menubar$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_set_menubar$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.gtk_application_set_menubar$MH,"gtk_application_set_menubar");
    }
    /**
     * {@snippet :
     * void gtk_application_set_menubar(GtkApplication* application, GMenuModel* menubar);
     * }
     */
    public static void gtk_application_set_menubar(MemorySegment application, MemorySegment menubar) {
        var mh$ = gtk_application_set_menubar$MH();
        try {
            mh$.invokeExact(application, menubar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_add_accelerator$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.gtk_application_add_accelerator$MH,"gtk_application_add_accelerator");
    }
    /**
     * {@snippet :
     * void gtk_application_add_accelerator(GtkApplication* application, const gchar* accelerator, const gchar* action_name, GVariant* parameter);
     * }
     */
    public static void gtk_application_add_accelerator(MemorySegment application, MemorySegment accelerator, MemorySegment action_name, MemorySegment parameter) {
        var mh$ = gtk_application_add_accelerator$MH();
        try {
            mh$.invokeExact(application, accelerator, action_name, parameter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_remove_accelerator$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.gtk_application_remove_accelerator$MH,"gtk_application_remove_accelerator");
    }
    /**
     * {@snippet :
     * void gtk_application_remove_accelerator(GtkApplication* application, const gchar* action_name, GVariant* parameter);
     * }
     */
    public static void gtk_application_remove_accelerator(MemorySegment application, MemorySegment action_name, MemorySegment parameter) {
        var mh$ = gtk_application_remove_accelerator$MH();
        try {
            mh$.invokeExact(application, action_name, parameter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_APPLICATION_INHIBIT_LOGOUT = 1;
     * }
     */
    public static int GTK_APPLICATION_INHIBIT_LOGOUT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_APPLICATION_INHIBIT_SWITCH = 2;
     * }
     */
    public static int GTK_APPLICATION_INHIBIT_SWITCH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_APPLICATION_INHIBIT_SUSPEND = 4;
     * }
     */
    public static int GTK_APPLICATION_INHIBIT_SUSPEND() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_APPLICATION_INHIBIT_IDLE = 8;
     * }
     */
    public static int GTK_APPLICATION_INHIBIT_IDLE() {
        return (int)8L;
    }
    public static MethodHandle gtk_application_inhibit$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.gtk_application_inhibit$MH,"gtk_application_inhibit");
    }
    /**
     * {@snippet :
     * guint gtk_application_inhibit(GtkApplication* application, GtkWindow* window, GtkApplicationInhibitFlags flags, const gchar* reason);
     * }
     */
    public static int gtk_application_inhibit(MemorySegment application, MemorySegment window, int flags, MemorySegment reason) {
        var mh$ = gtk_application_inhibit$MH();
        try {
            return (int)mh$.invokeExact(application, window, flags, reason);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_uninhibit$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.gtk_application_uninhibit$MH,"gtk_application_uninhibit");
    }
    /**
     * {@snippet :
     * void gtk_application_uninhibit(GtkApplication* application, guint cookie);
     * }
     */
    public static void gtk_application_uninhibit(MemorySegment application, int cookie) {
        var mh$ = gtk_application_uninhibit$MH();
        try {
            mh$.invokeExact(application, cookie);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_is_inhibited$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.gtk_application_is_inhibited$MH,"gtk_application_is_inhibited");
    }
    /**
     * {@snippet :
     * gboolean gtk_application_is_inhibited(GtkApplication* application, GtkApplicationInhibitFlags flags);
     * }
     */
    public static int gtk_application_is_inhibited(MemorySegment application, int flags) {
        var mh$ = gtk_application_is_inhibited$MH();
        try {
            return (int)mh$.invokeExact(application, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_window_by_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.gtk_application_get_window_by_id$MH,"gtk_application_get_window_by_id");
    }
    /**
     * {@snippet :
     * GtkWindow* gtk_application_get_window_by_id(GtkApplication* application, guint id);
     * }
     */
    public static MemorySegment gtk_application_get_window_by_id(MemorySegment application, int id) {
        var mh$ = gtk_application_get_window_by_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_active_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.gtk_application_get_active_window$MH,"gtk_application_get_active_window");
    }
    /**
     * {@snippet :
     * GtkWindow* gtk_application_get_active_window(GtkApplication* application);
     * }
     */
    public static MemorySegment gtk_application_get_active_window(MemorySegment application) {
        var mh$ = gtk_application_get_active_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_list_action_descriptions$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.gtk_application_list_action_descriptions$MH,"gtk_application_list_action_descriptions");
    }
    /**
     * {@snippet :
     * gchar** gtk_application_list_action_descriptions(GtkApplication* application);
     * }
     */
    public static MemorySegment gtk_application_list_action_descriptions(MemorySegment application) {
        var mh$ = gtk_application_list_action_descriptions$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_accels_for_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.gtk_application_get_accels_for_action$MH,"gtk_application_get_accels_for_action");
    }
    /**
     * {@snippet :
     * gchar** gtk_application_get_accels_for_action(GtkApplication* application, const gchar* detailed_action_name);
     * }
     */
    public static MemorySegment gtk_application_get_accels_for_action(MemorySegment application, MemorySegment detailed_action_name) {
        var mh$ = gtk_application_get_accels_for_action$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application, detailed_action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_actions_for_accel$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.gtk_application_get_actions_for_accel$MH,"gtk_application_get_actions_for_accel");
    }
    /**
     * {@snippet :
     * gchar** gtk_application_get_actions_for_accel(GtkApplication* application, const gchar* accel);
     * }
     */
    public static MemorySegment gtk_application_get_actions_for_accel(MemorySegment application, MemorySegment accel) {
        var mh$ = gtk_application_get_actions_for_accel$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application, accel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_set_accels_for_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.gtk_application_set_accels_for_action$MH,"gtk_application_set_accels_for_action");
    }
    /**
     * {@snippet :
     * void gtk_application_set_accels_for_action(GtkApplication* application, const gchar* detailed_action_name, const gchar** accels);
     * }
     */
    public static void gtk_application_set_accels_for_action(MemorySegment application, MemorySegment detailed_action_name, MemorySegment accels) {
        var mh$ = gtk_application_set_accels_for_action$MH();
        try {
            mh$.invokeExact(application, detailed_action_name, accels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_prefers_app_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.gtk_application_prefers_app_menu$MH,"gtk_application_prefers_app_menu");
    }
    /**
     * {@snippet :
     * gboolean gtk_application_prefers_app_menu(GtkApplication* application);
     * }
     */
    public static int gtk_application_prefers_app_menu(MemorySegment application) {
        var mh$ = gtk_application_prefers_app_menu$MH();
        try {
            return (int)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_menu_by_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.gtk_application_get_menu_by_id$MH,"gtk_application_get_menu_by_id");
    }
    /**
     * {@snippet :
     * GMenu* gtk_application_get_menu_by_id(GtkApplication* application, const gchar* id);
     * }
     */
    public static MemorySegment gtk_application_get_menu_by_id(MemorySegment application, MemorySegment id) {
        var mh$ = gtk_application_get_menu_by_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkApplication* GtkApplication_autoptr;
     * }
     */
    public static final OfAddress GtkApplication_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkApplication_listautoptr;
     * }
     */
    public static final OfAddress GtkApplication_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkApplication_slistautoptr;
     * }
     */
    public static final OfAddress GtkApplication_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkApplication_queueautoptr;
     * }
     */
    public static final OfAddress GtkApplication_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum .GTK_RESIZE_PARENT = 0;
     * }
     */
    public static int GTK_RESIZE_PARENT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_RESIZE_QUEUE = 1;
     * }
     */
    public static int GTK_RESIZE_QUEUE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_RESIZE_IMMEDIATE = 2;
     * }
     */
    public static int GTK_RESIZE_IMMEDIATE() {
        return (int)2L;
    }
    public static MethodHandle gtk_container_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.gtk_container_get_type$MH,"gtk_container_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_container_get_type();
     * }
     */
    public static long gtk_container_get_type() {
        var mh$ = gtk_container_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_set_border_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.gtk_container_set_border_width$MH,"gtk_container_set_border_width");
    }
    /**
     * {@snippet :
     * void gtk_container_set_border_width(GtkContainer* container, guint border_width);
     * }
     */
    public static void gtk_container_set_border_width(MemorySegment container, int border_width) {
        var mh$ = gtk_container_set_border_width$MH();
        try {
            mh$.invokeExact(container, border_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_get_border_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.gtk_container_get_border_width$MH,"gtk_container_get_border_width");
    }
    /**
     * {@snippet :
     * guint gtk_container_get_border_width(GtkContainer* container);
     * }
     */
    public static int gtk_container_get_border_width(MemorySegment container) {
        var mh$ = gtk_container_get_border_width$MH();
        try {
            return (int)mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_add$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.gtk_container_add$MH,"gtk_container_add");
    }
    /**
     * {@snippet :
     * void gtk_container_add(GtkContainer* container, GtkWidget* widget);
     * }
     */
    public static void gtk_container_add(MemorySegment container, MemorySegment widget) {
        var mh$ = gtk_container_add$MH();
        try {
            mh$.invokeExact(container, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.gtk_container_remove$MH,"gtk_container_remove");
    }
    /**
     * {@snippet :
     * void gtk_container_remove(GtkContainer* container, GtkWidget* widget);
     * }
     */
    public static void gtk_container_remove(MemorySegment container, MemorySegment widget) {
        var mh$ = gtk_container_remove$MH();
        try {
            mh$.invokeExact(container, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_set_resize_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.gtk_container_set_resize_mode$MH,"gtk_container_set_resize_mode");
    }
    /**
     * {@snippet :
     * void gtk_container_set_resize_mode(GtkContainer* container, GtkResizeMode resize_mode);
     * }
     */
    public static void gtk_container_set_resize_mode(MemorySegment container, int resize_mode) {
        var mh$ = gtk_container_set_resize_mode$MH();
        try {
            mh$.invokeExact(container, resize_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_get_resize_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.gtk_container_get_resize_mode$MH,"gtk_container_get_resize_mode");
    }
    /**
     * {@snippet :
     * GtkResizeMode gtk_container_get_resize_mode(GtkContainer* container);
     * }
     */
    public static int gtk_container_get_resize_mode(MemorySegment container) {
        var mh$ = gtk_container_get_resize_mode$MH();
        try {
            return (int)mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_check_resize$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.gtk_container_check_resize$MH,"gtk_container_check_resize");
    }
    /**
     * {@snippet :
     * void gtk_container_check_resize(GtkContainer* container);
     * }
     */
    public static void gtk_container_check_resize(MemorySegment container) {
        var mh$ = gtk_container_check_resize$MH();
        try {
            mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.gtk_container_foreach$MH,"gtk_container_foreach");
    }
    /**
     * {@snippet :
     * void gtk_container_foreach(GtkContainer* container, GtkCallback callback, gpointer callback_data);
     * }
     */
    public static void gtk_container_foreach(MemorySegment container, MemorySegment callback, MemorySegment callback_data) {
        var mh$ = gtk_container_foreach$MH();
        try {
            mh$.invokeExact(container, callback, callback_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_get_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.gtk_container_get_children$MH,"gtk_container_get_children");
    }
    /**
     * {@snippet :
     * GList* gtk_container_get_children(GtkContainer* container);
     * }
     */
    public static MemorySegment gtk_container_get_children(MemorySegment container) {
        var mh$ = gtk_container_get_children$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_propagate_draw$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.gtk_container_propagate_draw$MH,"gtk_container_propagate_draw");
    }
    /**
     * {@snippet :
     * void gtk_container_propagate_draw(GtkContainer* container, GtkWidget* child, cairo_t* cr);
     * }
     */
    public static void gtk_container_propagate_draw(MemorySegment container, MemorySegment child, MemorySegment cr) {
        var mh$ = gtk_container_propagate_draw$MH();
        try {
            mh$.invokeExact(container, child, cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_set_focus_chain$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.gtk_container_set_focus_chain$MH,"gtk_container_set_focus_chain");
    }
    /**
     * {@snippet :
     * void gtk_container_set_focus_chain(GtkContainer* container, GList* focusable_widgets);
     * }
     */
    public static void gtk_container_set_focus_chain(MemorySegment container, MemorySegment focusable_widgets) {
        var mh$ = gtk_container_set_focus_chain$MH();
        try {
            mh$.invokeExact(container, focusable_widgets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_get_focus_chain$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.gtk_container_get_focus_chain$MH,"gtk_container_get_focus_chain");
    }
    /**
     * {@snippet :
     * gboolean gtk_container_get_focus_chain(GtkContainer* container, GList** focusable_widgets);
     * }
     */
    public static int gtk_container_get_focus_chain(MemorySegment container, MemorySegment focusable_widgets) {
        var mh$ = gtk_container_get_focus_chain$MH();
        try {
            return (int)mh$.invokeExact(container, focusable_widgets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_unset_focus_chain$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.gtk_container_unset_focus_chain$MH,"gtk_container_unset_focus_chain");
    }
    /**
     * {@snippet :
     * void gtk_container_unset_focus_chain(GtkContainer* container);
     * }
     */
    public static void gtk_container_unset_focus_chain(MemorySegment container) {
        var mh$ = gtk_container_unset_focus_chain$MH();
        try {
            mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_set_reallocate_redraws$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.gtk_container_set_reallocate_redraws$MH,"gtk_container_set_reallocate_redraws");
    }
    /**
     * {@snippet :
     * void gtk_container_set_reallocate_redraws(GtkContainer* container, gboolean needs_redraws);
     * }
     */
    public static void gtk_container_set_reallocate_redraws(MemorySegment container, int needs_redraws) {
        var mh$ = gtk_container_set_reallocate_redraws$MH();
        try {
            mh$.invokeExact(container, needs_redraws);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_set_focus_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.gtk_container_set_focus_child$MH,"gtk_container_set_focus_child");
    }
    /**
     * {@snippet :
     * void gtk_container_set_focus_child(GtkContainer* container, GtkWidget* child);
     * }
     */
    public static void gtk_container_set_focus_child(MemorySegment container, MemorySegment child) {
        var mh$ = gtk_container_set_focus_child$MH();
        try {
            mh$.invokeExact(container, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_get_focus_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.gtk_container_get_focus_child$MH,"gtk_container_get_focus_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_container_get_focus_child(GtkContainer* container);
     * }
     */
    public static MemorySegment gtk_container_get_focus_child(MemorySegment container) {
        var mh$ = gtk_container_get_focus_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_set_focus_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.gtk_container_set_focus_vadjustment$MH,"gtk_container_set_focus_vadjustment");
    }
    /**
     * {@snippet :
     * void gtk_container_set_focus_vadjustment(GtkContainer* container, GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_container_set_focus_vadjustment(MemorySegment container, MemorySegment adjustment) {
        var mh$ = gtk_container_set_focus_vadjustment$MH();
        try {
            mh$.invokeExact(container, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_get_focus_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.gtk_container_get_focus_vadjustment$MH,"gtk_container_get_focus_vadjustment");
    }
    /**
     * {@snippet :
     * GtkAdjustment* gtk_container_get_focus_vadjustment(GtkContainer* container);
     * }
     */
    public static MemorySegment gtk_container_get_focus_vadjustment(MemorySegment container) {
        var mh$ = gtk_container_get_focus_vadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_set_focus_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.gtk_container_set_focus_hadjustment$MH,"gtk_container_set_focus_hadjustment");
    }
    /**
     * {@snippet :
     * void gtk_container_set_focus_hadjustment(GtkContainer* container, GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_container_set_focus_hadjustment(MemorySegment container, MemorySegment adjustment) {
        var mh$ = gtk_container_set_focus_hadjustment$MH();
        try {
            mh$.invokeExact(container, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_get_focus_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.gtk_container_get_focus_hadjustment$MH,"gtk_container_get_focus_hadjustment");
    }
    /**
     * {@snippet :
     * GtkAdjustment* gtk_container_get_focus_hadjustment(GtkContainer* container);
     * }
     */
    public static MemorySegment gtk_container_get_focus_hadjustment(MemorySegment container) {
        var mh$ = gtk_container_get_focus_hadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_resize_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.gtk_container_resize_children$MH,"gtk_container_resize_children");
    }
    /**
     * {@snippet :
     * void gtk_container_resize_children(GtkContainer* container);
     * }
     */
    public static void gtk_container_resize_children(MemorySegment container) {
        var mh$ = gtk_container_resize_children$MH();
        try {
            mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_child_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.gtk_container_child_type$MH,"gtk_container_child_type");
    }
    /**
     * {@snippet :
     * GType gtk_container_child_type(GtkContainer* container);
     * }
     */
    public static long gtk_container_child_type(MemorySegment container) {
        var mh$ = gtk_container_child_type$MH();
        try {
            return (long)mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_class_install_child_property$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.gtk_container_class_install_child_property$MH,"gtk_container_class_install_child_property");
    }
    /**
     * {@snippet :
     * void gtk_container_class_install_child_property(GtkContainerClass* cclass, guint property_id, GParamSpec* pspec);
     * }
     */
    public static void gtk_container_class_install_child_property(MemorySegment cclass, int property_id, MemorySegment pspec) {
        var mh$ = gtk_container_class_install_child_property$MH();
        try {
            mh$.invokeExact(cclass, property_id, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_class_install_child_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.gtk_container_class_install_child_properties$MH,"gtk_container_class_install_child_properties");
    }
    /**
     * {@snippet :
     * void gtk_container_class_install_child_properties(GtkContainerClass* cclass, guint n_pspecs, GParamSpec** pspecs);
     * }
     */
    public static void gtk_container_class_install_child_properties(MemorySegment cclass, int n_pspecs, MemorySegment pspecs) {
        var mh$ = gtk_container_class_install_child_properties$MH();
        try {
            mh$.invokeExact(cclass, n_pspecs, pspecs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_class_find_child_property$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.gtk_container_class_find_child_property$MH,"gtk_container_class_find_child_property");
    }
    /**
     * {@snippet :
     * GParamSpec* gtk_container_class_find_child_property(GObjectClass* cclass, const gchar* property_name);
     * }
     */
    public static MemorySegment gtk_container_class_find_child_property(MemorySegment cclass, MemorySegment property_name) {
        var mh$ = gtk_container_class_find_child_property$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cclass, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_class_list_child_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.gtk_container_class_list_child_properties$MH,"gtk_container_class_list_child_properties");
    }
    /**
     * {@snippet :
     * GParamSpec** gtk_container_class_list_child_properties(GObjectClass* cclass, guint* n_properties);
     * }
     */
    public static MemorySegment gtk_container_class_list_child_properties(MemorySegment cclass, MemorySegment n_properties) {
        var mh$ = gtk_container_class_list_child_properties$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cclass, n_properties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_add_with_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.gtk_container_add_with_properties$MH,"gtk_container_add_with_properties");
    }
    /**
     * {@snippet :
     * void gtk_container_add_with_properties(GtkContainer* container, GtkWidget* widget, const gchar* first_prop_name,...);
     * }
     */
    public static void gtk_container_add_with_properties(MemorySegment container, MemorySegment widget, MemorySegment first_prop_name, Object... x3) {
        var mh$ = gtk_container_add_with_properties$MH();
        try {
            mh$.invokeExact(container, widget, first_prop_name, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_child_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.gtk_container_child_set$MH,"gtk_container_child_set");
    }
    /**
     * {@snippet :
     * void gtk_container_child_set(GtkContainer* container, GtkWidget* child, const gchar* first_prop_name,...);
     * }
     */
    public static void gtk_container_child_set(MemorySegment container, MemorySegment child, MemorySegment first_prop_name, Object... x3) {
        var mh$ = gtk_container_child_set$MH();
        try {
            mh$.invokeExact(container, child, first_prop_name, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_child_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.gtk_container_child_get$MH,"gtk_container_child_get");
    }
    /**
     * {@snippet :
     * void gtk_container_child_get(GtkContainer* container, GtkWidget* child, const gchar* first_prop_name,...);
     * }
     */
    public static void gtk_container_child_get(MemorySegment container, MemorySegment child, MemorySegment first_prop_name, Object... x3) {
        var mh$ = gtk_container_child_get$MH();
        try {
            mh$.invokeExact(container, child, first_prop_name, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_child_set_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.gtk_container_child_set_valist$MH,"gtk_container_child_set_valist");
    }
    /**
     * {@snippet :
     * void gtk_container_child_set_valist(GtkContainer* container, GtkWidget* child, const gchar* first_property_name, va_list var_args);
     * }
     */
    public static void gtk_container_child_set_valist(MemorySegment container, MemorySegment child, MemorySegment first_property_name, MemorySegment var_args) {
        var mh$ = gtk_container_child_set_valist$MH();
        try {
            mh$.invokeExact(container, child, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_child_get_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.gtk_container_child_get_valist$MH,"gtk_container_child_get_valist");
    }
    /**
     * {@snippet :
     * void gtk_container_child_get_valist(GtkContainer* container, GtkWidget* child, const gchar* first_property_name, va_list var_args);
     * }
     */
    public static void gtk_container_child_get_valist(MemorySegment container, MemorySegment child, MemorySegment first_property_name, MemorySegment var_args) {
        var mh$ = gtk_container_child_get_valist$MH();
        try {
            mh$.invokeExact(container, child, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_child_set_property$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.gtk_container_child_set_property$MH,"gtk_container_child_set_property");
    }
    /**
     * {@snippet :
     * void gtk_container_child_set_property(GtkContainer* container, GtkWidget* child, const gchar* property_name, const GValue* value);
     * }
     */
    public static void gtk_container_child_set_property(MemorySegment container, MemorySegment child, MemorySegment property_name, MemorySegment value) {
        var mh$ = gtk_container_child_set_property$MH();
        try {
            mh$.invokeExact(container, child, property_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_child_get_property$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.gtk_container_child_get_property$MH,"gtk_container_child_get_property");
    }
    /**
     * {@snippet :
     * void gtk_container_child_get_property(GtkContainer* container, GtkWidget* child, const gchar* property_name, GValue* value);
     * }
     */
    public static void gtk_container_child_get_property(MemorySegment container, MemorySegment child, MemorySegment property_name, MemorySegment value) {
        var mh$ = gtk_container_child_get_property$MH();
        try {
            mh$.invokeExact(container, child, property_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_child_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.gtk_container_child_notify$MH,"gtk_container_child_notify");
    }
    /**
     * {@snippet :
     * void gtk_container_child_notify(GtkContainer* container, GtkWidget* child, const gchar* child_property);
     * }
     */
    public static void gtk_container_child_notify(MemorySegment container, MemorySegment child, MemorySegment child_property) {
        var mh$ = gtk_container_child_notify$MH();
        try {
            mh$.invokeExact(container, child, child_property);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_child_notify_by_pspec$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.gtk_container_child_notify_by_pspec$MH,"gtk_container_child_notify_by_pspec");
    }
    /**
     * {@snippet :
     * void gtk_container_child_notify_by_pspec(GtkContainer* container, GtkWidget* child, GParamSpec* pspec);
     * }
     */
    public static void gtk_container_child_notify_by_pspec(MemorySegment container, MemorySegment child, MemorySegment pspec) {
        var mh$ = gtk_container_child_notify_by_pspec$MH();
        try {
            mh$.invokeExact(container, child, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_forall$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.gtk_container_forall$MH,"gtk_container_forall");
    }
    /**
     * {@snippet :
     * void gtk_container_forall(GtkContainer* container, GtkCallback callback, gpointer callback_data);
     * }
     */
    public static void gtk_container_forall(MemorySegment container, MemorySegment callback, MemorySegment callback_data) {
        var mh$ = gtk_container_forall$MH();
        try {
            mh$.invokeExact(container, callback, callback_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_class_handle_border_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.gtk_container_class_handle_border_width$MH,"gtk_container_class_handle_border_width");
    }
    /**
     * {@snippet :
     * void gtk_container_class_handle_border_width(GtkContainerClass* klass);
     * }
     */
    public static void gtk_container_class_handle_border_width(MemorySegment klass) {
        var mh$ = gtk_container_class_handle_border_width$MH();
        try {
            mh$.invokeExact(klass);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_get_path_for_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.gtk_container_get_path_for_child$MH,"gtk_container_get_path_for_child");
    }
    /**
     * {@snippet :
     * GtkWidgetPath* gtk_container_get_path_for_child(GtkContainer* container, GtkWidget* child);
     * }
     */
    public static MemorySegment gtk_container_get_path_for_child(MemorySegment container, MemorySegment child) {
        var mh$ = gtk_container_get_path_for_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(container, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkContainer* GtkContainer_autoptr;
     * }
     */
    public static final OfAddress GtkContainer_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkContainer_listautoptr;
     * }
     */
    public static final OfAddress GtkContainer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkContainer_slistautoptr;
     * }
     */
    public static final OfAddress GtkContainer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkContainer_queueautoptr;
     * }
     */
    public static final OfAddress GtkContainer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_bin_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.gtk_bin_get_type$MH,"gtk_bin_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_bin_get_type();
     * }
     */
    public static long gtk_bin_get_type() {
        var mh$ = gtk_bin_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_bin_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.gtk_bin_get_child$MH,"gtk_bin_get_child");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_bin_get_child(GtkBin* bin);
     * }
     */
    public static MemorySegment gtk_bin_get_child(MemorySegment bin) {
        var mh$ = gtk_bin_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_bin_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1298._gtk_bin_set_child$MH,"_gtk_bin_set_child");
    }
    /**
     * {@snippet :
     * void _gtk_bin_set_child(GtkBin* bin, GtkWidget* widget);
     * }
     */
    public static void _gtk_bin_set_child(MemorySegment bin, MemorySegment widget) {
        var mh$ = _gtk_bin_set_child$MH();
        try {
            mh$.invokeExact(bin, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkBin* GtkBin_autoptr;
     * }
     */
    public static final OfAddress GtkBin_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkBin_listautoptr;
     * }
     */
    public static final OfAddress GtkBin_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkBin_slistautoptr;
     * }
     */
    public static final OfAddress GtkBin_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkBin_queueautoptr;
     * }
     */
    public static final OfAddress GtkBin_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum .GTK_WINDOW_TOPLEVEL = 0;
     * }
     */
    public static int GTK_WINDOW_TOPLEVEL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_WINDOW_POPUP = 1;
     * }
     */
    public static int GTK_WINDOW_POPUP() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_WIN_POS_NONE = 0;
     * }
     */
    public static int GTK_WIN_POS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_WIN_POS_CENTER = 1;
     * }
     */
    public static int GTK_WIN_POS_CENTER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_WIN_POS_MOUSE = 2;
     * }
     */
    public static int GTK_WIN_POS_MOUSE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_WIN_POS_CENTER_ALWAYS = 3;
     * }
     */
    public static int GTK_WIN_POS_CENTER_ALWAYS() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_WIN_POS_CENTER_ON_PARENT = 4;
     * }
     */
    public static int GTK_WIN_POS_CENTER_ON_PARENT() {
        return (int)4L;
    }
    public static MethodHandle gtk_window_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.gtk_window_get_type$MH,"gtk_window_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_window_get_type();
     * }
     */
    public static long gtk_window_get_type() {
        var mh$ = gtk_window_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.gtk_window_new$MH,"gtk_window_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_window_new(GtkWindowType type);
     * }
     */
    public static MemorySegment gtk_window_new(int type) {
        var mh$ = gtk_window_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.gtk_window_set_title$MH,"gtk_window_set_title");
    }
    /**
     * {@snippet :
     * void gtk_window_set_title(GtkWindow* window, const gchar* title);
     * }
     */
    public static void gtk_window_set_title(MemorySegment window, MemorySegment title) {
        var mh$ = gtk_window_set_title$MH();
        try {
            mh$.invokeExact(window, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.gtk_window_get_title$MH,"gtk_window_get_title");
    }
    /**
     * {@snippet :
     * const gchar* gtk_window_get_title(GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_title(MemorySegment window) {
        var mh$ = gtk_window_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_wmclass$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.gtk_window_set_wmclass$MH,"gtk_window_set_wmclass");
    }
    /**
     * {@snippet :
     * void gtk_window_set_wmclass(GtkWindow* window, const gchar* wmclass_name, const gchar* wmclass_class);
     * }
     */
    public static void gtk_window_set_wmclass(MemorySegment window, MemorySegment wmclass_name, MemorySegment wmclass_class) {
        var mh$ = gtk_window_set_wmclass$MH();
        try {
            mh$.invokeExact(window, wmclass_name, wmclass_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_role$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.gtk_window_set_role$MH,"gtk_window_set_role");
    }
    /**
     * {@snippet :
     * void gtk_window_set_role(GtkWindow* window, const gchar* role);
     * }
     */
    public static void gtk_window_set_role(MemorySegment window, MemorySegment role) {
        var mh$ = gtk_window_set_role$MH();
        try {
            mh$.invokeExact(window, role);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_startup_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.gtk_window_set_startup_id$MH,"gtk_window_set_startup_id");
    }
    /**
     * {@snippet :
     * void gtk_window_set_startup_id(GtkWindow* window, const gchar* startup_id);
     * }
     */
    public static void gtk_window_set_startup_id(MemorySegment window, MemorySegment startup_id) {
        var mh$ = gtk_window_set_startup_id$MH();
        try {
            mh$.invokeExact(window, startup_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_role$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.gtk_window_get_role$MH,"gtk_window_get_role");
    }
    /**
     * {@snippet :
     * const gchar* gtk_window_get_role(GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_role(MemorySegment window) {
        var mh$ = gtk_window_get_role$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_add_accel_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.gtk_window_add_accel_group$MH,"gtk_window_add_accel_group");
    }
    /**
     * {@snippet :
     * void gtk_window_add_accel_group(GtkWindow* window, GtkAccelGroup* accel_group);
     * }
     */
    public static void gtk_window_add_accel_group(MemorySegment window, MemorySegment accel_group) {
        var mh$ = gtk_window_add_accel_group$MH();
        try {
            mh$.invokeExact(window, accel_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_remove_accel_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.gtk_window_remove_accel_group$MH,"gtk_window_remove_accel_group");
    }
    /**
     * {@snippet :
     * void gtk_window_remove_accel_group(GtkWindow* window, GtkAccelGroup* accel_group);
     * }
     */
    public static void gtk_window_remove_accel_group(MemorySegment window, MemorySegment accel_group) {
        var mh$ = gtk_window_remove_accel_group$MH();
        try {
            mh$.invokeExact(window, accel_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.gtk_window_set_position$MH,"gtk_window_set_position");
    }
    /**
     * {@snippet :
     * void gtk_window_set_position(GtkWindow* window, GtkWindowPosition position);
     * }
     */
    public static void gtk_window_set_position(MemorySegment window, int position) {
        var mh$ = gtk_window_set_position$MH();
        try {
            mh$.invokeExact(window, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_activate_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.gtk_window_activate_focus$MH,"gtk_window_activate_focus");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_activate_focus(GtkWindow* window);
     * }
     */
    public static int gtk_window_activate_focus(MemorySegment window) {
        var mh$ = gtk_window_activate_focus$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.gtk_window_set_focus$MH,"gtk_window_set_focus");
    }
    /**
     * {@snippet :
     * void gtk_window_set_focus(GtkWindow* window, GtkWidget* focus);
     * }
     */
    public static void gtk_window_set_focus(MemorySegment window, MemorySegment focus) {
        var mh$ = gtk_window_set_focus$MH();
        try {
            mh$.invokeExact(window, focus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.gtk_window_get_focus$MH,"gtk_window_get_focus");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_window_get_focus(GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_focus(MemorySegment window) {
        var mh$ = gtk_window_get_focus$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.gtk_window_set_default$MH,"gtk_window_set_default");
    }
    /**
     * {@snippet :
     * void gtk_window_set_default(GtkWindow* window, GtkWidget* default_widget);
     * }
     */
    public static void gtk_window_set_default(MemorySegment window, MemorySegment default_widget) {
        var mh$ = gtk_window_set_default$MH();
        try {
            mh$.invokeExact(window, default_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_default_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.gtk_window_get_default_widget$MH,"gtk_window_get_default_widget");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_window_get_default_widget(GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_default_widget(MemorySegment window) {
        var mh$ = gtk_window_get_default_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_activate_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.gtk_window_activate_default$MH,"gtk_window_activate_default");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_activate_default(GtkWindow* window);
     * }
     */
    public static int gtk_window_activate_default(MemorySegment window) {
        var mh$ = gtk_window_activate_default$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_transient_for$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.gtk_window_set_transient_for$MH,"gtk_window_set_transient_for");
    }
    /**
     * {@snippet :
     * void gtk_window_set_transient_for(GtkWindow* window, GtkWindow* parent);
     * }
     */
    public static void gtk_window_set_transient_for(MemorySegment window, MemorySegment parent) {
        var mh$ = gtk_window_set_transient_for$MH();
        try {
            mh$.invokeExact(window, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_transient_for$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.gtk_window_get_transient_for$MH,"gtk_window_get_transient_for");
    }
    /**
     * {@snippet :
     * GtkWindow* gtk_window_get_transient_for(GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_transient_for(MemorySegment window) {
        var mh$ = gtk_window_get_transient_for$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_attached_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.gtk_window_set_attached_to$MH,"gtk_window_set_attached_to");
    }
    /**
     * {@snippet :
     * void gtk_window_set_attached_to(GtkWindow* window, GtkWidget* attach_widget);
     * }
     */
    public static void gtk_window_set_attached_to(MemorySegment window, MemorySegment attach_widget) {
        var mh$ = gtk_window_set_attached_to$MH();
        try {
            mh$.invokeExact(window, attach_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_attached_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.gtk_window_get_attached_to$MH,"gtk_window_get_attached_to");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_window_get_attached_to(GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_attached_to(MemorySegment window) {
        var mh$ = gtk_window_get_attached_to$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_opacity$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.gtk_window_set_opacity$MH,"gtk_window_set_opacity");
    }
    /**
     * {@snippet :
     * void gtk_window_set_opacity(GtkWindow* window, gdouble opacity);
     * }
     */
    public static void gtk_window_set_opacity(MemorySegment window, double opacity) {
        var mh$ = gtk_window_set_opacity$MH();
        try {
            mh$.invokeExact(window, opacity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_opacity$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.gtk_window_get_opacity$MH,"gtk_window_get_opacity");
    }
    /**
     * {@snippet :
     * gdouble gtk_window_get_opacity(GtkWindow* window);
     * }
     */
    public static double gtk_window_get_opacity(MemorySegment window) {
        var mh$ = gtk_window_get_opacity$MH();
        try {
            return (double)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_type_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.gtk_window_set_type_hint$MH,"gtk_window_set_type_hint");
    }
    /**
     * {@snippet :
     * void gtk_window_set_type_hint(GtkWindow* window, GdkWindowTypeHint hint);
     * }
     */
    public static void gtk_window_set_type_hint(MemorySegment window, int hint) {
        var mh$ = gtk_window_set_type_hint$MH();
        try {
            mh$.invokeExact(window, hint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_type_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.gtk_window_get_type_hint$MH,"gtk_window_get_type_hint");
    }
    /**
     * {@snippet :
     * GdkWindowTypeHint gtk_window_get_type_hint(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_type_hint(MemorySegment window) {
        var mh$ = gtk_window_get_type_hint$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_skip_taskbar_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.gtk_window_set_skip_taskbar_hint$MH,"gtk_window_set_skip_taskbar_hint");
    }
    /**
     * {@snippet :
     * void gtk_window_set_skip_taskbar_hint(GtkWindow* window, gboolean setting);
     * }
     */
    public static void gtk_window_set_skip_taskbar_hint(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_skip_taskbar_hint$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_skip_taskbar_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.gtk_window_get_skip_taskbar_hint$MH,"gtk_window_get_skip_taskbar_hint");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_skip_taskbar_hint(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_skip_taskbar_hint(MemorySegment window) {
        var mh$ = gtk_window_get_skip_taskbar_hint$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_skip_pager_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.gtk_window_set_skip_pager_hint$MH,"gtk_window_set_skip_pager_hint");
    }
    /**
     * {@snippet :
     * void gtk_window_set_skip_pager_hint(GtkWindow* window, gboolean setting);
     * }
     */
    public static void gtk_window_set_skip_pager_hint(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_skip_pager_hint$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_skip_pager_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.gtk_window_get_skip_pager_hint$MH,"gtk_window_get_skip_pager_hint");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_skip_pager_hint(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_skip_pager_hint(MemorySegment window) {
        var mh$ = gtk_window_get_skip_pager_hint$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_urgency_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.gtk_window_set_urgency_hint$MH,"gtk_window_set_urgency_hint");
    }
    /**
     * {@snippet :
     * void gtk_window_set_urgency_hint(GtkWindow* window, gboolean setting);
     * }
     */
    public static void gtk_window_set_urgency_hint(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_urgency_hint$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_urgency_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.gtk_window_get_urgency_hint$MH,"gtk_window_get_urgency_hint");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_urgency_hint(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_urgency_hint(MemorySegment window) {
        var mh$ = gtk_window_get_urgency_hint$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_accept_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.gtk_window_set_accept_focus$MH,"gtk_window_set_accept_focus");
    }
    /**
     * {@snippet :
     * void gtk_window_set_accept_focus(GtkWindow* window, gboolean setting);
     * }
     */
    public static void gtk_window_set_accept_focus(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_accept_focus$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_accept_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.gtk_window_get_accept_focus$MH,"gtk_window_get_accept_focus");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_accept_focus(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_accept_focus(MemorySegment window) {
        var mh$ = gtk_window_get_accept_focus$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_focus_on_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.gtk_window_set_focus_on_map$MH,"gtk_window_set_focus_on_map");
    }
    /**
     * {@snippet :
     * void gtk_window_set_focus_on_map(GtkWindow* window, gboolean setting);
     * }
     */
    public static void gtk_window_set_focus_on_map(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_focus_on_map$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_focus_on_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.gtk_window_get_focus_on_map$MH,"gtk_window_get_focus_on_map");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_focus_on_map(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_focus_on_map(MemorySegment window) {
        var mh$ = gtk_window_get_focus_on_map$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_destroy_with_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.gtk_window_set_destroy_with_parent$MH,"gtk_window_set_destroy_with_parent");
    }
    /**
     * {@snippet :
     * void gtk_window_set_destroy_with_parent(GtkWindow* window, gboolean setting);
     * }
     */
    public static void gtk_window_set_destroy_with_parent(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_destroy_with_parent$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_destroy_with_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.gtk_window_get_destroy_with_parent$MH,"gtk_window_get_destroy_with_parent");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_destroy_with_parent(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_destroy_with_parent(MemorySegment window) {
        var mh$ = gtk_window_get_destroy_with_parent$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_hide_titlebar_when_maximized$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.gtk_window_set_hide_titlebar_when_maximized$MH,"gtk_window_set_hide_titlebar_when_maximized");
    }
    /**
     * {@snippet :
     * void gtk_window_set_hide_titlebar_when_maximized(GtkWindow* window, gboolean setting);
     * }
     */
    public static void gtk_window_set_hide_titlebar_when_maximized(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_hide_titlebar_when_maximized$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_hide_titlebar_when_maximized$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.gtk_window_get_hide_titlebar_when_maximized$MH,"gtk_window_get_hide_titlebar_when_maximized");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_hide_titlebar_when_maximized(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_hide_titlebar_when_maximized(MemorySegment window) {
        var mh$ = gtk_window_get_hide_titlebar_when_maximized$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_mnemonics_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.gtk_window_set_mnemonics_visible$MH,"gtk_window_set_mnemonics_visible");
    }
    /**
     * {@snippet :
     * void gtk_window_set_mnemonics_visible(GtkWindow* window, gboolean setting);
     * }
     */
    public static void gtk_window_set_mnemonics_visible(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_mnemonics_visible$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_mnemonics_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.gtk_window_get_mnemonics_visible$MH,"gtk_window_get_mnemonics_visible");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_mnemonics_visible(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_mnemonics_visible(MemorySegment window) {
        var mh$ = gtk_window_get_mnemonics_visible$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_focus_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.gtk_window_set_focus_visible$MH,"gtk_window_set_focus_visible");
    }
    /**
     * {@snippet :
     * void gtk_window_set_focus_visible(GtkWindow* window, gboolean setting);
     * }
     */
    public static void gtk_window_set_focus_visible(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_focus_visible$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_focus_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.gtk_window_get_focus_visible$MH,"gtk_window_get_focus_visible");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_focus_visible(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_focus_visible(MemorySegment window) {
        var mh$ = gtk_window_get_focus_visible$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_resizable$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.gtk_window_set_resizable$MH,"gtk_window_set_resizable");
    }
    /**
     * {@snippet :
     * void gtk_window_set_resizable(GtkWindow* window, gboolean resizable);
     * }
     */
    public static void gtk_window_set_resizable(MemorySegment window, int resizable) {
        var mh$ = gtk_window_set_resizable$MH();
        try {
            mh$.invokeExact(window, resizable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_resizable$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.gtk_window_get_resizable$MH,"gtk_window_get_resizable");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_resizable(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_resizable(MemorySegment window) {
        var mh$ = gtk_window_get_resizable$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_gravity$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.gtk_window_set_gravity$MH,"gtk_window_set_gravity");
    }
    /**
     * {@snippet :
     * void gtk_window_set_gravity(GtkWindow* window, GdkGravity gravity);
     * }
     */
    public static void gtk_window_set_gravity(MemorySegment window, int gravity) {
        var mh$ = gtk_window_set_gravity$MH();
        try {
            mh$.invokeExact(window, gravity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_gravity$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.gtk_window_get_gravity$MH,"gtk_window_get_gravity");
    }
    /**
     * {@snippet :
     * GdkGravity gtk_window_get_gravity(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_gravity(MemorySegment window) {
        var mh$ = gtk_window_get_gravity$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_geometry_hints$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.gtk_window_set_geometry_hints$MH,"gtk_window_set_geometry_hints");
    }
    /**
     * {@snippet :
     * void gtk_window_set_geometry_hints(GtkWindow* window, GtkWidget* geometry_widget, GdkGeometry* geometry, GdkWindowHints geom_mask);
     * }
     */
    public static void gtk_window_set_geometry_hints(MemorySegment window, MemorySegment geometry_widget, MemorySegment geometry, int geom_mask) {
        var mh$ = gtk_window_set_geometry_hints$MH();
        try {
            mh$.invokeExact(window, geometry_widget, geometry, geom_mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.gtk_window_set_screen$MH,"gtk_window_set_screen");
    }
    /**
     * {@snippet :
     * void gtk_window_set_screen(GtkWindow* window, GdkScreen* screen);
     * }
     */
    public static void gtk_window_set_screen(MemorySegment window, MemorySegment screen) {
        var mh$ = gtk_window_set_screen$MH();
        try {
            mh$.invokeExact(window, screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.gtk_window_get_screen$MH,"gtk_window_get_screen");
    }
    /**
     * {@snippet :
     * GdkScreen* gtk_window_get_screen(GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_screen(MemorySegment window) {
        var mh$ = gtk_window_get_screen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_is_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.gtk_window_is_active$MH,"gtk_window_is_active");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_is_active(GtkWindow* window);
     * }
     */
    public static int gtk_window_is_active(MemorySegment window) {
        var mh$ = gtk_window_is_active$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_has_toplevel_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.gtk_window_has_toplevel_focus$MH,"gtk_window_has_toplevel_focus");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_has_toplevel_focus(GtkWindow* window);
     * }
     */
    public static int gtk_window_has_toplevel_focus(MemorySegment window) {
        var mh$ = gtk_window_has_toplevel_focus$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_decorated$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.gtk_window_set_decorated$MH,"gtk_window_set_decorated");
    }
    /**
     * {@snippet :
     * void gtk_window_set_decorated(GtkWindow* window, gboolean setting);
     * }
     */
    public static void gtk_window_set_decorated(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_decorated$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_decorated$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.gtk_window_get_decorated$MH,"gtk_window_get_decorated");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_decorated(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_decorated(MemorySegment window) {
        var mh$ = gtk_window_get_decorated$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_deletable$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.gtk_window_set_deletable$MH,"gtk_window_set_deletable");
    }
    /**
     * {@snippet :
     * void gtk_window_set_deletable(GtkWindow* window, gboolean setting);
     * }
     */
    public static void gtk_window_set_deletable(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_deletable$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_deletable$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.gtk_window_get_deletable$MH,"gtk_window_get_deletable");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_get_deletable(GtkWindow* window);
     * }
     */
    public static int gtk_window_get_deletable(MemorySegment window) {
        var mh$ = gtk_window_get_deletable$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_icon_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.gtk_window_set_icon_list$MH,"gtk_window_set_icon_list");
    }
    /**
     * {@snippet :
     * void gtk_window_set_icon_list(GtkWindow* window, GList* list);
     * }
     */
    public static void gtk_window_set_icon_list(MemorySegment window, MemorySegment list) {
        var mh$ = gtk_window_set_icon_list$MH();
        try {
            mh$.invokeExact(window, list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_icon_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.gtk_window_get_icon_list$MH,"gtk_window_get_icon_list");
    }
    /**
     * {@snippet :
     * GList* gtk_window_get_icon_list(GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_icon_list(MemorySegment window) {
        var mh$ = gtk_window_get_icon_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.gtk_window_set_icon$MH,"gtk_window_set_icon");
    }
    /**
     * {@snippet :
     * void gtk_window_set_icon(GtkWindow* window, GdkPixbuf* icon);
     * }
     */
    public static void gtk_window_set_icon(MemorySegment window, MemorySegment icon) {
        var mh$ = gtk_window_set_icon$MH();
        try {
            mh$.invokeExact(window, icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.gtk_window_set_icon_name$MH,"gtk_window_set_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_window_set_icon_name(GtkWindow* window, const gchar* name);
     * }
     */
    public static void gtk_window_set_icon_name(MemorySegment window, MemorySegment name) {
        var mh$ = gtk_window_set_icon_name$MH();
        try {
            mh$.invokeExact(window, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_icon_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.gtk_window_set_icon_from_file$MH,"gtk_window_set_icon_from_file");
    }
    /**
     * {@snippet :
     * gboolean gtk_window_set_icon_from_file(GtkWindow* window, const gchar* filename, GError** err);
     * }
     */
    public static int gtk_window_set_icon_from_file(MemorySegment window, MemorySegment filename, MemorySegment err) {
        var mh$ = gtk_window_set_icon_from_file$MH();
        try {
            return (int)mh$.invokeExact(window, filename, err);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.gtk_window_get_icon$MH,"gtk_window_get_icon");
    }
    /**
     * {@snippet :
     * GdkPixbuf* gtk_window_get_icon(GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_icon(MemorySegment window) {
        var mh$ = gtk_window_get_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.gtk_window_get_icon_name$MH,"gtk_window_get_icon_name");
    }
    /**
     * {@snippet :
     * const gchar* gtk_window_get_icon_name(GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_icon_name(MemorySegment window) {
        var mh$ = gtk_window_get_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_default_icon_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.gtk_window_set_default_icon_list$MH,"gtk_window_set_default_icon_list");
    }
    /**
     * {@snippet :
     * void gtk_window_set_default_icon_list(GList* list);
     * }
     */
    public static void gtk_window_set_default_icon_list(MemorySegment list) {
        var mh$ = gtk_window_set_default_icon_list$MH();
        try {
            mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_default_icon_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.gtk_window_get_default_icon_list$MH,"gtk_window_get_default_icon_list");
    }
    /**
     * {@snippet :
     * GList* gtk_window_get_default_icon_list();
     * }
     */
    public static MemorySegment gtk_window_get_default_icon_list() {
        var mh$ = gtk_window_get_default_icon_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


