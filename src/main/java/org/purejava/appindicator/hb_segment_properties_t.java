// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct hb_segment_properties_t {
 *     enum hb_direction_t direction;
 *     enum hb_script_t script;
 *     struct hb_language_impl_t* language;
 *     void* reserved1;
 *     void* reserved2;
 * };
 * }
 */
public class hb_segment_properties_t {

    public static MemoryLayout $LAYOUT() {
        return constants$1505.const$2;
    }
    public static VarHandle direction$VH() {
        return constants$1505.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum hb_direction_t direction;
     * }
     */
    public static int direction$get(MemorySegment seg) {
        return (int)constants$1505.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum hb_direction_t direction;
     * }
     */
    public static void direction$set(MemorySegment seg, int x) {
        constants$1505.const$3.set(seg, x);
    }
    public static int direction$get(MemorySegment seg, long index) {
        return (int)constants$1505.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void direction$set(MemorySegment seg, long index, int x) {
        constants$1505.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle script$VH() {
        return constants$1505.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum hb_script_t script;
     * }
     */
    public static int script$get(MemorySegment seg) {
        return (int)constants$1505.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum hb_script_t script;
     * }
     */
    public static void script$set(MemorySegment seg, int x) {
        constants$1505.const$4.set(seg, x);
    }
    public static int script$get(MemorySegment seg, long index) {
        return (int)constants$1505.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void script$set(MemorySegment seg, long index, int x) {
        constants$1505.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle language$VH() {
        return constants$1505.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct hb_language_impl_t* language;
     * }
     */
    public static MemorySegment language$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1505.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct hb_language_impl_t* language;
     * }
     */
    public static void language$set(MemorySegment seg, MemorySegment x) {
        constants$1505.const$5.set(seg, x);
    }
    public static MemorySegment language$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1505.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void language$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1505.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle reserved1$VH() {
        return constants$1506.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* reserved1;
     * }
     */
    public static MemorySegment reserved1$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1506.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* reserved1;
     * }
     */
    public static void reserved1$set(MemorySegment seg, MemorySegment x) {
        constants$1506.const$0.set(seg, x);
    }
    public static MemorySegment reserved1$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1506.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void reserved1$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1506.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle reserved2$VH() {
        return constants$1506.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* reserved2;
     * }
     */
    public static MemorySegment reserved2$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1506.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* reserved2;
     * }
     */
    public static void reserved2$set(MemorySegment seg, MemorySegment x) {
        constants$1506.const$1.set(seg, x);
    }
    public static MemorySegment reserved2$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1506.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void reserved2$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1506.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


