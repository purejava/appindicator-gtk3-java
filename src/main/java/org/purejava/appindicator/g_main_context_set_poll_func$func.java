// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.Arena;
import java.lang.foreign.MemorySegment;
/**
 * {@snippet :
 * int (*g_main_context_set_poll_func$func)(struct _GPollFD*,unsigned int,int);
 * }
 */
public interface g_main_context_set_poll_func$func {

    int apply(java.lang.foreign.MemorySegment ufds, int nfsd, int timeout_);
    static MemorySegment allocate(g_main_context_set_poll_func$func fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$265.const$5, fi, constants$49.const$0, scope);
    }
    static g_main_context_set_poll_func$func ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _ufds, int _nfsd, int _timeout_) -> {
            try {
                return (int)constants$247.const$2.invokeExact(symbol, _ufds, _nfsd, _timeout_);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


