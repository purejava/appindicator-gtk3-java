// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.AddressLayout;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;

import static java.lang.foreign.ValueLayout.*;
public class app_indicator_h_6 extends app_indicator_h_5 {

    public static MethodHandle pthread_rwlockattr_getpshared$MH() {
        return RuntimeHelper.requireNonNull(constants$532.const$0,"pthread_rwlockattr_getpshared");
    }
    /**
     * {@snippet :
     * int pthread_rwlockattr_getpshared(union pthread_rwlockattr_t* __attr, int* __pshared);
     * }
     */
    public static int pthread_rwlockattr_getpshared(MemorySegment __attr, MemorySegment __pshared) {
        var mh$ = pthread_rwlockattr_getpshared$MH();
        try {
            return (int)mh$.invokeExact(__attr, __pshared);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_rwlockattr_setpshared$MH() {
        return RuntimeHelper.requireNonNull(constants$532.const$1,"pthread_rwlockattr_setpshared");
    }
    /**
     * {@snippet :
     * int pthread_rwlockattr_setpshared(union pthread_rwlockattr_t* __attr, int __pshared);
     * }
     */
    public static int pthread_rwlockattr_setpshared(MemorySegment __attr, int __pshared) {
        var mh$ = pthread_rwlockattr_setpshared$MH();
        try {
            return (int)mh$.invokeExact(__attr, __pshared);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_rwlockattr_getkind_np$MH() {
        return RuntimeHelper.requireNonNull(constants$532.const$2,"pthread_rwlockattr_getkind_np");
    }
    /**
     * {@snippet :
     * int pthread_rwlockattr_getkind_np(union pthread_rwlockattr_t* __attr, int* __pref);
     * }
     */
    public static int pthread_rwlockattr_getkind_np(MemorySegment __attr, MemorySegment __pref) {
        var mh$ = pthread_rwlockattr_getkind_np$MH();
        try {
            return (int)mh$.invokeExact(__attr, __pref);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_rwlockattr_setkind_np$MH() {
        return RuntimeHelper.requireNonNull(constants$532.const$3,"pthread_rwlockattr_setkind_np");
    }
    /**
     * {@snippet :
     * int pthread_rwlockattr_setkind_np(union pthread_rwlockattr_t* __attr, int __pref);
     * }
     */
    public static int pthread_rwlockattr_setkind_np(MemorySegment __attr, int __pref) {
        var mh$ = pthread_rwlockattr_setkind_np$MH();
        try {
            return (int)mh$.invokeExact(__attr, __pref);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_cond_init$MH() {
        return RuntimeHelper.requireNonNull(constants$532.const$4,"pthread_cond_init");
    }
    /**
     * {@snippet :
     * int pthread_cond_init(union pthread_cond_t* __cond, union pthread_condattr_t* __cond_attr);
     * }
     */
    public static int pthread_cond_init(MemorySegment __cond, MemorySegment __cond_attr) {
        var mh$ = pthread_cond_init$MH();
        try {
            return (int)mh$.invokeExact(__cond, __cond_attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_cond_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$532.const$5,"pthread_cond_destroy");
    }
    /**
     * {@snippet :
     * int pthread_cond_destroy(union pthread_cond_t* __cond);
     * }
     */
    public static int pthread_cond_destroy(MemorySegment __cond) {
        var mh$ = pthread_cond_destroy$MH();
        try {
            return (int)mh$.invokeExact(__cond);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_cond_signal$MH() {
        return RuntimeHelper.requireNonNull(constants$533.const$0,"pthread_cond_signal");
    }
    /**
     * {@snippet :
     * int pthread_cond_signal(union pthread_cond_t* __cond);
     * }
     */
    public static int pthread_cond_signal(MemorySegment __cond) {
        var mh$ = pthread_cond_signal$MH();
        try {
            return (int)mh$.invokeExact(__cond);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_cond_broadcast$MH() {
        return RuntimeHelper.requireNonNull(constants$533.const$1,"pthread_cond_broadcast");
    }
    /**
     * {@snippet :
     * int pthread_cond_broadcast(union pthread_cond_t* __cond);
     * }
     */
    public static int pthread_cond_broadcast(MemorySegment __cond) {
        var mh$ = pthread_cond_broadcast$MH();
        try {
            return (int)mh$.invokeExact(__cond);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_cond_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$533.const$2,"pthread_cond_wait");
    }
    /**
     * {@snippet :
     * int pthread_cond_wait(union pthread_cond_t* __cond, union pthread_mutex_t* __mutex);
     * }
     */
    public static int pthread_cond_wait(MemorySegment __cond, MemorySegment __mutex) {
        var mh$ = pthread_cond_wait$MH();
        try {
            return (int)mh$.invokeExact(__cond, __mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_cond_timedwait$MH() {
        return RuntimeHelper.requireNonNull(constants$533.const$3,"pthread_cond_timedwait");
    }
    /**
     * {@snippet :
     * int pthread_cond_timedwait(union pthread_cond_t* __cond, union pthread_mutex_t* __mutex, struct timespec* __abstime);
     * }
     */
    public static int pthread_cond_timedwait(MemorySegment __cond, MemorySegment __mutex, MemorySegment __abstime) {
        var mh$ = pthread_cond_timedwait$MH();
        try {
            return (int)mh$.invokeExact(__cond, __mutex, __abstime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_condattr_init$MH() {
        return RuntimeHelper.requireNonNull(constants$533.const$4,"pthread_condattr_init");
    }
    /**
     * {@snippet :
     * int pthread_condattr_init(union pthread_condattr_t* __attr);
     * }
     */
    public static int pthread_condattr_init(MemorySegment __attr) {
        var mh$ = pthread_condattr_init$MH();
        try {
            return (int)mh$.invokeExact(__attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_condattr_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$533.const$5,"pthread_condattr_destroy");
    }
    /**
     * {@snippet :
     * int pthread_condattr_destroy(union pthread_condattr_t* __attr);
     * }
     */
    public static int pthread_condattr_destroy(MemorySegment __attr) {
        var mh$ = pthread_condattr_destroy$MH();
        try {
            return (int)mh$.invokeExact(__attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_condattr_getpshared$MH() {
        return RuntimeHelper.requireNonNull(constants$534.const$0,"pthread_condattr_getpshared");
    }
    /**
     * {@snippet :
     * int pthread_condattr_getpshared(union pthread_condattr_t* __attr, int* __pshared);
     * }
     */
    public static int pthread_condattr_getpshared(MemorySegment __attr, MemorySegment __pshared) {
        var mh$ = pthread_condattr_getpshared$MH();
        try {
            return (int)mh$.invokeExact(__attr, __pshared);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_condattr_setpshared$MH() {
        return RuntimeHelper.requireNonNull(constants$534.const$1,"pthread_condattr_setpshared");
    }
    /**
     * {@snippet :
     * int pthread_condattr_setpshared(union pthread_condattr_t* __attr, int __pshared);
     * }
     */
    public static int pthread_condattr_setpshared(MemorySegment __attr, int __pshared) {
        var mh$ = pthread_condattr_setpshared$MH();
        try {
            return (int)mh$.invokeExact(__attr, __pshared);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_condattr_getclock$MH() {
        return RuntimeHelper.requireNonNull(constants$534.const$2,"pthread_condattr_getclock");
    }
    /**
     * {@snippet :
     * int pthread_condattr_getclock(union pthread_condattr_t* __attr, int* __clock_id);
     * }
     */
    public static int pthread_condattr_getclock(MemorySegment __attr, MemorySegment __clock_id) {
        var mh$ = pthread_condattr_getclock$MH();
        try {
            return (int)mh$.invokeExact(__attr, __clock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_condattr_setclock$MH() {
        return RuntimeHelper.requireNonNull(constants$534.const$3,"pthread_condattr_setclock");
    }
    /**
     * {@snippet :
     * int pthread_condattr_setclock(union pthread_condattr_t* __attr, int __clock_id);
     * }
     */
    public static int pthread_condattr_setclock(MemorySegment __attr, int __clock_id) {
        var mh$ = pthread_condattr_setclock$MH();
        try {
            return (int)mh$.invokeExact(__attr, __clock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_spin_init$MH() {
        return RuntimeHelper.requireNonNull(constants$534.const$4,"pthread_spin_init");
    }
    /**
     * {@snippet :
     * int pthread_spin_init(int* __lock, int __pshared);
     * }
     */
    public static int pthread_spin_init(MemorySegment __lock, int __pshared) {
        var mh$ = pthread_spin_init$MH();
        try {
            return (int)mh$.invokeExact(__lock, __pshared);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_spin_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$534.const$5,"pthread_spin_destroy");
    }
    /**
     * {@snippet :
     * int pthread_spin_destroy(int* __lock);
     * }
     */
    public static int pthread_spin_destroy(MemorySegment __lock) {
        var mh$ = pthread_spin_destroy$MH();
        try {
            return (int)mh$.invokeExact(__lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_spin_lock$MH() {
        return RuntimeHelper.requireNonNull(constants$535.const$0,"pthread_spin_lock");
    }
    /**
     * {@snippet :
     * int pthread_spin_lock(int* __lock);
     * }
     */
    public static int pthread_spin_lock(MemorySegment __lock) {
        var mh$ = pthread_spin_lock$MH();
        try {
            return (int)mh$.invokeExact(__lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_spin_trylock$MH() {
        return RuntimeHelper.requireNonNull(constants$535.const$1,"pthread_spin_trylock");
    }
    /**
     * {@snippet :
     * int pthread_spin_trylock(int* __lock);
     * }
     */
    public static int pthread_spin_trylock(MemorySegment __lock) {
        var mh$ = pthread_spin_trylock$MH();
        try {
            return (int)mh$.invokeExact(__lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_spin_unlock$MH() {
        return RuntimeHelper.requireNonNull(constants$535.const$2,"pthread_spin_unlock");
    }
    /**
     * {@snippet :
     * int pthread_spin_unlock(int* __lock);
     * }
     */
    public static int pthread_spin_unlock(MemorySegment __lock) {
        var mh$ = pthread_spin_unlock$MH();
        try {
            return (int)mh$.invokeExact(__lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_barrier_init$MH() {
        return RuntimeHelper.requireNonNull(constants$535.const$3,"pthread_barrier_init");
    }
    /**
     * {@snippet :
     * int pthread_barrier_init(union pthread_barrier_t* __barrier, union pthread_barrierattr_t* __attr, unsigned int __count);
     * }
     */
    public static int pthread_barrier_init(MemorySegment __barrier, MemorySegment __attr, int __count) {
        var mh$ = pthread_barrier_init$MH();
        try {
            return (int)mh$.invokeExact(__barrier, __attr, __count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_barrier_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$535.const$4,"pthread_barrier_destroy");
    }
    /**
     * {@snippet :
     * int pthread_barrier_destroy(union pthread_barrier_t* __barrier);
     * }
     */
    public static int pthread_barrier_destroy(MemorySegment __barrier) {
        var mh$ = pthread_barrier_destroy$MH();
        try {
            return (int)mh$.invokeExact(__barrier);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_barrier_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$535.const$5,"pthread_barrier_wait");
    }
    /**
     * {@snippet :
     * int pthread_barrier_wait(union pthread_barrier_t* __barrier);
     * }
     */
    public static int pthread_barrier_wait(MemorySegment __barrier) {
        var mh$ = pthread_barrier_wait$MH();
        try {
            return (int)mh$.invokeExact(__barrier);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_barrierattr_init$MH() {
        return RuntimeHelper.requireNonNull(constants$536.const$0,"pthread_barrierattr_init");
    }
    /**
     * {@snippet :
     * int pthread_barrierattr_init(union pthread_barrierattr_t* __attr);
     * }
     */
    public static int pthread_barrierattr_init(MemorySegment __attr) {
        var mh$ = pthread_barrierattr_init$MH();
        try {
            return (int)mh$.invokeExact(__attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_barrierattr_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$536.const$1,"pthread_barrierattr_destroy");
    }
    /**
     * {@snippet :
     * int pthread_barrierattr_destroy(union pthread_barrierattr_t* __attr);
     * }
     */
    public static int pthread_barrierattr_destroy(MemorySegment __attr) {
        var mh$ = pthread_barrierattr_destroy$MH();
        try {
            return (int)mh$.invokeExact(__attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_barrierattr_getpshared$MH() {
        return RuntimeHelper.requireNonNull(constants$536.const$2,"pthread_barrierattr_getpshared");
    }
    /**
     * {@snippet :
     * int pthread_barrierattr_getpshared(union pthread_barrierattr_t* __attr, int* __pshared);
     * }
     */
    public static int pthread_barrierattr_getpshared(MemorySegment __attr, MemorySegment __pshared) {
        var mh$ = pthread_barrierattr_getpshared$MH();
        try {
            return (int)mh$.invokeExact(__attr, __pshared);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_barrierattr_setpshared$MH() {
        return RuntimeHelper.requireNonNull(constants$536.const$3,"pthread_barrierattr_setpshared");
    }
    /**
     * {@snippet :
     * int pthread_barrierattr_setpshared(union pthread_barrierattr_t* __attr, int __pshared);
     * }
     */
    public static int pthread_barrierattr_setpshared(MemorySegment __attr, int __pshared) {
        var mh$ = pthread_barrierattr_setpshared$MH();
        try {
            return (int)mh$.invokeExact(__attr, __pshared);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_key_create$MH() {
        return RuntimeHelper.requireNonNull(constants$536.const$5,"pthread_key_create");
    }
    /**
     * {@snippet :
     * int pthread_key_create(unsigned int* __key, void (*__destr_function)(void*));
     * }
     */
    public static int pthread_key_create(MemorySegment __key, MemorySegment __destr_function) {
        var mh$ = pthread_key_create$MH();
        try {
            return (int)mh$.invokeExact(__key, __destr_function);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_key_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$537.const$0,"pthread_key_delete");
    }
    /**
     * {@snippet :
     * int pthread_key_delete(unsigned int __key);
     * }
     */
    public static int pthread_key_delete(int __key) {
        var mh$ = pthread_key_delete$MH();
        try {
            return (int)mh$.invokeExact(__key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_getspecific$MH() {
        return RuntimeHelper.requireNonNull(constants$537.const$1,"pthread_getspecific");
    }
    /**
     * {@snippet :
     * void* pthread_getspecific(unsigned int __key);
     * }
     */
    public static MemorySegment pthread_getspecific(int __key) {
        var mh$ = pthread_getspecific$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_setspecific$MH() {
        return RuntimeHelper.requireNonNull(constants$537.const$2,"pthread_setspecific");
    }
    /**
     * {@snippet :
     * int pthread_setspecific(unsigned int __key, void* __pointer);
     * }
     */
    public static int pthread_setspecific(int __key, MemorySegment __pointer) {
        var mh$ = pthread_setspecific$MH();
        try {
            return (int)mh$.invokeExact(__key, __pointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_getcpuclockid$MH() {
        return RuntimeHelper.requireNonNull(constants$537.const$3,"pthread_getcpuclockid");
    }
    /**
     * {@snippet :
     * int pthread_getcpuclockid(unsigned long __thread_id, int* __clock_id);
     * }
     */
    public static int pthread_getcpuclockid(long __thread_id, MemorySegment __clock_id) {
        var mh$ = pthread_getcpuclockid$MH();
        try {
            return (int)mh$.invokeExact(__thread_id, __clock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_atfork$MH() {
        return RuntimeHelper.requireNonNull(constants$538.const$1,"pthread_atfork");
    }
    /**
     * {@snippet :
     * int pthread_atfork(void (*__prepare)(), void (*__parent)(), void (*__child)());
     * }
     */
    public static int pthread_atfork(MemorySegment __prepare, MemorySegment __parent, MemorySegment __child) {
        var mh$ = pthread_atfork$MH();
        try {
            return (int)mh$.invokeExact(__prepare, __parent, __child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_mutex_init$MH() {
        return RuntimeHelper.requireNonNull(constants$538.const$4,"g_static_mutex_init");
    }
    /**
     * {@snippet :
     * void g_static_mutex_init(struct GStaticMutex* mutex);
     * }
     */
    public static void g_static_mutex_init(MemorySegment mutex) {
        var mh$ = g_static_mutex_init$MH();
        try {
            mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_mutex_free$MH() {
        return RuntimeHelper.requireNonNull(constants$538.const$5,"g_static_mutex_free");
    }
    /**
     * {@snippet :
     * void g_static_mutex_free(struct GStaticMutex* mutex);
     * }
     */
    public static void g_static_mutex_free(MemorySegment mutex) {
        var mh$ = g_static_mutex_free$MH();
        try {
            mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_mutex_get_mutex_impl$MH() {
        return RuntimeHelper.requireNonNull(constants$539.const$0,"g_static_mutex_get_mutex_impl");
    }
    /**
     * {@snippet :
     * union _GMutex* g_static_mutex_get_mutex_impl(struct GStaticMutex* mutex);
     * }
     */
    public static MemorySegment g_static_mutex_get_mutex_impl(MemorySegment mutex) {
        var mh$ = g_static_mutex_get_mutex_impl$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rec_mutex_init$MH() {
        return RuntimeHelper.requireNonNull(constants$540.const$0,"g_static_rec_mutex_init");
    }
    /**
     * {@snippet :
     * void g_static_rec_mutex_init(struct _GStaticRecMutex* mutex);
     * }
     */
    public static void g_static_rec_mutex_init(MemorySegment mutex) {
        var mh$ = g_static_rec_mutex_init$MH();
        try {
            mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rec_mutex_lock$MH() {
        return RuntimeHelper.requireNonNull(constants$540.const$1,"g_static_rec_mutex_lock");
    }
    /**
     * {@snippet :
     * void g_static_rec_mutex_lock(struct _GStaticRecMutex* mutex);
     * }
     */
    public static void g_static_rec_mutex_lock(MemorySegment mutex) {
        var mh$ = g_static_rec_mutex_lock$MH();
        try {
            mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rec_mutex_trylock$MH() {
        return RuntimeHelper.requireNonNull(constants$540.const$2,"g_static_rec_mutex_trylock");
    }
    /**
     * {@snippet :
     * int g_static_rec_mutex_trylock(struct _GStaticRecMutex* mutex);
     * }
     */
    public static int g_static_rec_mutex_trylock(MemorySegment mutex) {
        var mh$ = g_static_rec_mutex_trylock$MH();
        try {
            return (int)mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rec_mutex_unlock$MH() {
        return RuntimeHelper.requireNonNull(constants$540.const$3,"g_static_rec_mutex_unlock");
    }
    /**
     * {@snippet :
     * void g_static_rec_mutex_unlock(struct _GStaticRecMutex* mutex);
     * }
     */
    public static void g_static_rec_mutex_unlock(MemorySegment mutex) {
        var mh$ = g_static_rec_mutex_unlock$MH();
        try {
            mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rec_mutex_lock_full$MH() {
        return RuntimeHelper.requireNonNull(constants$540.const$4,"g_static_rec_mutex_lock_full");
    }
    /**
     * {@snippet :
     * void g_static_rec_mutex_lock_full(struct _GStaticRecMutex* mutex, unsigned int depth);
     * }
     */
    public static void g_static_rec_mutex_lock_full(MemorySegment mutex, int depth) {
        var mh$ = g_static_rec_mutex_lock_full$MH();
        try {
            mh$.invokeExact(mutex, depth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rec_mutex_unlock_full$MH() {
        return RuntimeHelper.requireNonNull(constants$540.const$5,"g_static_rec_mutex_unlock_full");
    }
    /**
     * {@snippet :
     * unsigned int g_static_rec_mutex_unlock_full(struct _GStaticRecMutex* mutex);
     * }
     */
    public static int g_static_rec_mutex_unlock_full(MemorySegment mutex) {
        var mh$ = g_static_rec_mutex_unlock_full$MH();
        try {
            return (int)mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rec_mutex_free$MH() {
        return RuntimeHelper.requireNonNull(constants$541.const$0,"g_static_rec_mutex_free");
    }
    /**
     * {@snippet :
     * void g_static_rec_mutex_free(struct _GStaticRecMutex* mutex);
     * }
     */
    public static void g_static_rec_mutex_free(MemorySegment mutex) {
        var mh$ = g_static_rec_mutex_free$MH();
        try {
            mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rw_lock_init$MH() {
        return RuntimeHelper.requireNonNull(constants$542.const$2,"g_static_rw_lock_init");
    }
    /**
     * {@snippet :
     * void g_static_rw_lock_init(struct _GStaticRWLock* lock);
     * }
     */
    public static void g_static_rw_lock_init(MemorySegment lock) {
        var mh$ = g_static_rw_lock_init$MH();
        try {
            mh$.invokeExact(lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rw_lock_reader_lock$MH() {
        return RuntimeHelper.requireNonNull(constants$542.const$3,"g_static_rw_lock_reader_lock");
    }
    /**
     * {@snippet :
     * void g_static_rw_lock_reader_lock(struct _GStaticRWLock* lock);
     * }
     */
    public static void g_static_rw_lock_reader_lock(MemorySegment lock) {
        var mh$ = g_static_rw_lock_reader_lock$MH();
        try {
            mh$.invokeExact(lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rw_lock_reader_trylock$MH() {
        return RuntimeHelper.requireNonNull(constants$542.const$4,"g_static_rw_lock_reader_trylock");
    }
    /**
     * {@snippet :
     * int g_static_rw_lock_reader_trylock(struct _GStaticRWLock* lock);
     * }
     */
    public static int g_static_rw_lock_reader_trylock(MemorySegment lock) {
        var mh$ = g_static_rw_lock_reader_trylock$MH();
        try {
            return (int)mh$.invokeExact(lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rw_lock_reader_unlock$MH() {
        return RuntimeHelper.requireNonNull(constants$542.const$5,"g_static_rw_lock_reader_unlock");
    }
    /**
     * {@snippet :
     * void g_static_rw_lock_reader_unlock(struct _GStaticRWLock* lock);
     * }
     */
    public static void g_static_rw_lock_reader_unlock(MemorySegment lock) {
        var mh$ = g_static_rw_lock_reader_unlock$MH();
        try {
            mh$.invokeExact(lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rw_lock_writer_lock$MH() {
        return RuntimeHelper.requireNonNull(constants$543.const$0,"g_static_rw_lock_writer_lock");
    }
    /**
     * {@snippet :
     * void g_static_rw_lock_writer_lock(struct _GStaticRWLock* lock);
     * }
     */
    public static void g_static_rw_lock_writer_lock(MemorySegment lock) {
        var mh$ = g_static_rw_lock_writer_lock$MH();
        try {
            mh$.invokeExact(lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rw_lock_writer_trylock$MH() {
        return RuntimeHelper.requireNonNull(constants$543.const$1,"g_static_rw_lock_writer_trylock");
    }
    /**
     * {@snippet :
     * int g_static_rw_lock_writer_trylock(struct _GStaticRWLock* lock);
     * }
     */
    public static int g_static_rw_lock_writer_trylock(MemorySegment lock) {
        var mh$ = g_static_rw_lock_writer_trylock$MH();
        try {
            return (int)mh$.invokeExact(lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rw_lock_writer_unlock$MH() {
        return RuntimeHelper.requireNonNull(constants$543.const$2,"g_static_rw_lock_writer_unlock");
    }
    /**
     * {@snippet :
     * void g_static_rw_lock_writer_unlock(struct _GStaticRWLock* lock);
     * }
     */
    public static void g_static_rw_lock_writer_unlock(MemorySegment lock) {
        var mh$ = g_static_rw_lock_writer_unlock$MH();
        try {
            mh$.invokeExact(lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rw_lock_free$MH() {
        return RuntimeHelper.requireNonNull(constants$543.const$3,"g_static_rw_lock_free");
    }
    /**
     * {@snippet :
     * void g_static_rw_lock_free(struct _GStaticRWLock* lock);
     * }
     */
    public static void g_static_rw_lock_free(MemorySegment lock) {
        var mh$ = g_static_rw_lock_free$MH();
        try {
            mh$.invokeExact(lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_private_new$MH() {
        return RuntimeHelper.requireNonNull(constants$543.const$5,"g_private_new");
    }
    /**
     * {@snippet :
     * struct _GPrivate* g_private_new(void (*notify)(void*));
     * }
     */
    public static MemorySegment g_private_new(MemorySegment notify) {
        var mh$ = g_private_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_private_init$MH() {
        return RuntimeHelper.requireNonNull(constants$544.const$2,"g_static_private_init");
    }
    /**
     * {@snippet :
     * void g_static_private_init(struct _GStaticPrivate* private_key);
     * }
     */
    public static void g_static_private_init(MemorySegment private_key) {
        var mh$ = g_static_private_init$MH();
        try {
            mh$.invokeExact(private_key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_private_get$MH() {
        return RuntimeHelper.requireNonNull(constants$544.const$3,"g_static_private_get");
    }
    /**
     * {@snippet :
     * void* g_static_private_get(struct _GStaticPrivate* private_key);
     * }
     */
    public static MemorySegment g_static_private_get(MemorySegment private_key) {
        var mh$ = g_static_private_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(private_key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_private_set$MH() {
        return RuntimeHelper.requireNonNull(constants$544.const$5,"g_static_private_set");
    }
    /**
     * {@snippet :
     * void g_static_private_set(struct _GStaticPrivate* private_key, void* data, void (*notify)(void*));
     * }
     */
    public static void g_static_private_set(MemorySegment private_key, MemorySegment data, MemorySegment notify) {
        var mh$ = g_static_private_set$MH();
        try {
            mh$.invokeExact(private_key, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_private_free$MH() {
        return RuntimeHelper.requireNonNull(constants$545.const$0,"g_static_private_free");
    }
    /**
     * {@snippet :
     * void g_static_private_free(struct _GStaticPrivate* private_key);
     * }
     */
    public static void g_static_private_free(MemorySegment private_key) {
        var mh$ = g_static_private_free$MH();
        try {
            mh$.invokeExact(private_key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_once_init_enter_impl$MH() {
        return RuntimeHelper.requireNonNull(constants$545.const$1,"g_once_init_enter_impl");
    }
    /**
     * {@snippet :
     * int g_once_init_enter_impl(unsigned long* location);
     * }
     */
    public static int g_once_init_enter_impl(MemorySegment location) {
        var mh$ = g_once_init_enter_impl$MH();
        try {
            return (int)mh$.invokeExact(location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_thread_init$MH() {
        return RuntimeHelper.requireNonNull(constants$545.const$2,"g_thread_init");
    }
    /**
     * {@snippet :
     * void g_thread_init(void* vtable);
     * }
     */
    public static void g_thread_init(MemorySegment vtable) {
        var mh$ = g_thread_init$MH();
        try {
            mh$.invokeExact(vtable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_thread_init_with_errorcheck_mutexes$MH() {
        return RuntimeHelper.requireNonNull(constants$545.const$3,"g_thread_init_with_errorcheck_mutexes");
    }
    /**
     * {@snippet :
     * void g_thread_init_with_errorcheck_mutexes(void* vtable);
     * }
     */
    public static void g_thread_init_with_errorcheck_mutexes(MemorySegment vtable) {
        var mh$ = g_thread_init_with_errorcheck_mutexes$MH();
        try {
            mh$.invokeExact(vtable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_thread_get_initialized$MH() {
        return RuntimeHelper.requireNonNull(constants$545.const$4,"g_thread_get_initialized");
    }
    /**
     * {@snippet :
     * int g_thread_get_initialized();
     * }
     */
    public static int g_thread_get_initialized() {
        var mh$ = g_thread_get_initialized$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout g_threads_got_initialized$LAYOUT() {
        return JAVA_INT;
    }
    public static VarHandle g_threads_got_initialized$VH() {
        return constants$7.const$0;
    }
    public static MemorySegment g_threads_got_initialized$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$545.const$5,"g_threads_got_initialized");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * int g_threads_got_initialized;
     * }
     */
    public static int g_threads_got_initialized$get() {
        return (int) constants$7.const$0.get(RuntimeHelper.requireNonNull(constants$545.const$5, "g_threads_got_initialized"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * int g_threads_got_initialized;
     * }
     */
    public static void g_threads_got_initialized$set(int x) {
        constants$7.const$0.set(RuntimeHelper.requireNonNull(constants$545.const$5, "g_threads_got_initialized"), x);
    }
    public static MethodHandle g_mutex_new$MH() {
        return RuntimeHelper.requireNonNull(constants$546.const$0,"g_mutex_new");
    }
    /**
     * {@snippet :
     * union _GMutex* g_mutex_new();
     * }
     */
    public static MemorySegment g_mutex_new() {
        var mh$ = g_mutex_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mutex_free$MH() {
        return RuntimeHelper.requireNonNull(constants$546.const$1,"g_mutex_free");
    }
    /**
     * {@snippet :
     * void g_mutex_free(union _GMutex* mutex);
     * }
     */
    public static void g_mutex_free(MemorySegment mutex) {
        var mh$ = g_mutex_free$MH();
        try {
            mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cond_new$MH() {
        return RuntimeHelper.requireNonNull(constants$546.const$2,"g_cond_new");
    }
    /**
     * {@snippet :
     * struct _GCond* g_cond_new();
     * }
     */
    public static MemorySegment g_cond_new() {
        var mh$ = g_cond_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cond_free$MH() {
        return RuntimeHelper.requireNonNull(constants$546.const$3,"g_cond_free");
    }
    /**
     * {@snippet :
     * void g_cond_free(struct _GCond* cond);
     * }
     */
    public static void g_cond_free(MemorySegment cond) {
        var mh$ = g_cond_free$MH();
        try {
            mh$.invokeExact(cond);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cond_timed_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$546.const$4,"g_cond_timed_wait");
    }
    /**
     * {@snippet :
     * int g_cond_timed_wait(struct _GCond* cond, union _GMutex* mutex, struct _GTimeVal* timeval);
     * }
     */
    public static int g_cond_timed_wait(MemorySegment cond, MemorySegment mutex, MemorySegment timeval) {
        var mh$ = g_cond_timed_wait$MH();
        try {
            return (int)mh$.invokeExact(cond, mutex, timeval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GAsyncQueue* GAsyncQueue_autoptr;
     * }
     */
    public static final AddressLayout GAsyncQueue_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GAsyncQueue_listautoptr;
     * }
     */
    public static final AddressLayout GAsyncQueue_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GAsyncQueue_slistautoptr;
     * }
     */
    public static final AddressLayout GAsyncQueue_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GAsyncQueue_queueautoptr;
     * }
     */
    public static final AddressLayout GAsyncQueue_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GBookmarkFile* GBookmarkFile_autoptr;
     * }
     */
    public static final AddressLayout GBookmarkFile_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GBookmarkFile_listautoptr;
     * }
     */
    public static final AddressLayout GBookmarkFile_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GBookmarkFile_slistautoptr;
     * }
     */
    public static final AddressLayout GBookmarkFile_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GBookmarkFile_queueautoptr;
     * }
     */
    public static final AddressLayout GBookmarkFile_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GBytes* GBytes_autoptr;
     * }
     */
    public static final AddressLayout GBytes_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GBytes_listautoptr;
     * }
     */
    public static final AddressLayout GBytes_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GBytes_slistautoptr;
     * }
     */
    public static final AddressLayout GBytes_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GBytes_queueautoptr;
     * }
     */
    public static final AddressLayout GBytes_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GChecksum* GChecksum_autoptr;
     * }
     */
    public static final AddressLayout GChecksum_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GChecksum_listautoptr;
     * }
     */
    public static final AddressLayout GChecksum_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GChecksum_slistautoptr;
     * }
     */
    public static final AddressLayout GChecksum_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GChecksum_queueautoptr;
     * }
     */
    public static final AddressLayout GChecksum_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDateTime* GDateTime_autoptr;
     * }
     */
    public static final AddressLayout GDateTime_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDateTime_listautoptr;
     * }
     */
    public static final AddressLayout GDateTime_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDateTime_slistautoptr;
     * }
     */
    public static final AddressLayout GDateTime_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDateTime_queueautoptr;
     * }
     */
    public static final AddressLayout GDateTime_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDate* GDate_autoptr;
     * }
     */
    public static final AddressLayout GDate_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDate_listautoptr;
     * }
     */
    public static final AddressLayout GDate_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDate_slistautoptr;
     * }
     */
    public static final AddressLayout GDate_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDate_queueautoptr;
     * }
     */
    public static final AddressLayout GDate_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDir* GDir_autoptr;
     * }
     */
    public static final AddressLayout GDir_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDir_listautoptr;
     * }
     */
    public static final AddressLayout GDir_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDir_slistautoptr;
     * }
     */
    public static final AddressLayout GDir_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDir_queueautoptr;
     * }
     */
    public static final AddressLayout GDir_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GError* GError_autoptr;
     * }
     */
    public static final AddressLayout GError_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GError_listautoptr;
     * }
     */
    public static final AddressLayout GError_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GError_slistautoptr;
     * }
     */
    public static final AddressLayout GError_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GError_queueautoptr;
     * }
     */
    public static final AddressLayout GError_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GHashTable* GHashTable_autoptr;
     * }
     */
    public static final AddressLayout GHashTable_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GHashTable_listautoptr;
     * }
     */
    public static final AddressLayout GHashTable_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GHashTable_slistautoptr;
     * }
     */
    public static final AddressLayout GHashTable_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GHashTable_queueautoptr;
     * }
     */
    public static final AddressLayout GHashTable_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GHmac* GHmac_autoptr;
     * }
     */
    public static final AddressLayout GHmac_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GHmac_listautoptr;
     * }
     */
    public static final AddressLayout GHmac_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GHmac_slistautoptr;
     * }
     */
    public static final AddressLayout GHmac_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GHmac_queueautoptr;
     * }
     */
    public static final AddressLayout GHmac_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GIOChannel* GIOChannel_autoptr;
     * }
     */
    public static final AddressLayout GIOChannel_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GIOChannel_listautoptr;
     * }
     */
    public static final AddressLayout GIOChannel_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GIOChannel_slistautoptr;
     * }
     */
    public static final AddressLayout GIOChannel_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GIOChannel_queueautoptr;
     * }
     */
    public static final AddressLayout GIOChannel_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GKeyFile* GKeyFile_autoptr;
     * }
     */
    public static final AddressLayout GKeyFile_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GKeyFile_listautoptr;
     * }
     */
    public static final AddressLayout GKeyFile_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GKeyFile_slistautoptr;
     * }
     */
    public static final AddressLayout GKeyFile_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GKeyFile_queueautoptr;
     * }
     */
    public static final AddressLayout GKeyFile_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GList_autoptr;
     * }
     */
    public static final AddressLayout GList_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GList_listautoptr;
     * }
     */
    public static final AddressLayout GList_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GList_slistautoptr;
     * }
     */
    public static final AddressLayout GList_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GList_queueautoptr;
     * }
     */
    public static final AddressLayout GList_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GArray* GArray_autoptr;
     * }
     */
    public static final AddressLayout GArray_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GArray_listautoptr;
     * }
     */
    public static final AddressLayout GArray_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GArray_slistautoptr;
     * }
     */
    public static final AddressLayout GArray_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GArray_queueautoptr;
     * }
     */
    public static final AddressLayout GArray_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GPtrArray* GPtrArray_autoptr;
     * }
     */
    public static final AddressLayout GPtrArray_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GPtrArray_listautoptr;
     * }
     */
    public static final AddressLayout GPtrArray_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GPtrArray_slistautoptr;
     * }
     */
    public static final AddressLayout GPtrArray_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GPtrArray_queueautoptr;
     * }
     */
    public static final AddressLayout GPtrArray_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GByteArray* GByteArray_autoptr;
     * }
     */
    public static final AddressLayout GByteArray_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GByteArray_listautoptr;
     * }
     */
    public static final AddressLayout GByteArray_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GByteArray_slistautoptr;
     * }
     */
    public static final AddressLayout GByteArray_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GByteArray_queueautoptr;
     * }
     */
    public static final AddressLayout GByteArray_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GMainContext* GMainContext_autoptr;
     * }
     */
    public static final AddressLayout GMainContext_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMainContext_listautoptr;
     * }
     */
    public static final AddressLayout GMainContext_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMainContext_slistautoptr;
     * }
     */
    public static final AddressLayout GMainContext_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMainContext_queueautoptr;
     * }
     */
    public static final AddressLayout GMainContext_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef void* GMainContextPusher_autoptr;
     * }
     */
    public static final AddressLayout GMainContextPusher_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMainContextPusher_listautoptr;
     * }
     */
    public static final AddressLayout GMainContextPusher_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMainContextPusher_slistautoptr;
     * }
     */
    public static final AddressLayout GMainContextPusher_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMainContextPusher_queueautoptr;
     * }
     */
    public static final AddressLayout GMainContextPusher_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GMainLoop* GMainLoop_autoptr;
     * }
     */
    public static final AddressLayout GMainLoop_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMainLoop_listautoptr;
     * }
     */
    public static final AddressLayout GMainLoop_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMainLoop_slistautoptr;
     * }
     */
    public static final AddressLayout GMainLoop_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMainLoop_queueautoptr;
     * }
     */
    public static final AddressLayout GMainLoop_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSource* GSource_autoptr;
     * }
     */
    public static final AddressLayout GSource_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSource_listautoptr;
     * }
     */
    public static final AddressLayout GSource_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSource_slistautoptr;
     * }
     */
    public static final AddressLayout GSource_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSource_queueautoptr;
     * }
     */
    public static final AddressLayout GSource_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GMappedFile* GMappedFile_autoptr;
     * }
     */
    public static final AddressLayout GMappedFile_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMappedFile_listautoptr;
     * }
     */
    public static final AddressLayout GMappedFile_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMappedFile_slistautoptr;
     * }
     */
    public static final AddressLayout GMappedFile_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMappedFile_queueautoptr;
     * }
     */
    public static final AddressLayout GMappedFile_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GMarkupParseContext* GMarkupParseContext_autoptr;
     * }
     */
    public static final AddressLayout GMarkupParseContext_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMarkupParseContext_listautoptr;
     * }
     */
    public static final AddressLayout GMarkupParseContext_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMarkupParseContext_slistautoptr;
     * }
     */
    public static final AddressLayout GMarkupParseContext_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMarkupParseContext_queueautoptr;
     * }
     */
    public static final AddressLayout GMarkupParseContext_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GNode* GNode_autoptr;
     * }
     */
    public static final AddressLayout GNode_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GNode_listautoptr;
     * }
     */
    public static final AddressLayout GNode_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GNode_slistautoptr;
     * }
     */
    public static final AddressLayout GNode_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GNode_queueautoptr;
     * }
     */
    public static final AddressLayout GNode_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GOptionContext* GOptionContext_autoptr;
     * }
     */
    public static final AddressLayout GOptionContext_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GOptionContext_listautoptr;
     * }
     */
    public static final AddressLayout GOptionContext_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GOptionContext_slistautoptr;
     * }
     */
    public static final AddressLayout GOptionContext_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GOptionContext_queueautoptr;
     * }
     */
    public static final AddressLayout GOptionContext_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GOptionGroup* GOptionGroup_autoptr;
     * }
     */
    public static final AddressLayout GOptionGroup_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GOptionGroup_listautoptr;
     * }
     */
    public static final AddressLayout GOptionGroup_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GOptionGroup_slistautoptr;
     * }
     */
    public static final AddressLayout GOptionGroup_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GOptionGroup_queueautoptr;
     * }
     */
    public static final AddressLayout GOptionGroup_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GPatternSpec* GPatternSpec_autoptr;
     * }
     */
    public static final AddressLayout GPatternSpec_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GPatternSpec_listautoptr;
     * }
     */
    public static final AddressLayout GPatternSpec_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GPatternSpec_slistautoptr;
     * }
     */
    public static final AddressLayout GPatternSpec_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GPatternSpec_queueautoptr;
     * }
     */
    public static final AddressLayout GPatternSpec_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GQueue_autoptr;
     * }
     */
    public static final AddressLayout GQueue_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GQueue_listautoptr;
     * }
     */
    public static final AddressLayout GQueue_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GQueue_slistautoptr;
     * }
     */
    public static final AddressLayout GQueue_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GQueue_queueautoptr;
     * }
     */
    public static final AddressLayout GQueue_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GRand* GRand_autoptr;
     * }
     */
    public static final AddressLayout GRand_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GRand_listautoptr;
     * }
     */
    public static final AddressLayout GRand_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GRand_slistautoptr;
     * }
     */
    public static final AddressLayout GRand_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GRand_queueautoptr;
     * }
     */
    public static final AddressLayout GRand_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GRegex* GRegex_autoptr;
     * }
     */
    public static final AddressLayout GRegex_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GRegex_listautoptr;
     * }
     */
    public static final AddressLayout GRegex_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GRegex_slistautoptr;
     * }
     */
    public static final AddressLayout GRegex_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GRegex_queueautoptr;
     * }
     */
    public static final AddressLayout GRegex_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GMatchInfo* GMatchInfo_autoptr;
     * }
     */
    public static final AddressLayout GMatchInfo_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMatchInfo_listautoptr;
     * }
     */
    public static final AddressLayout GMatchInfo_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMatchInfo_slistautoptr;
     * }
     */
    public static final AddressLayout GMatchInfo_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMatchInfo_queueautoptr;
     * }
     */
    public static final AddressLayout GMatchInfo_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GScanner* GScanner_autoptr;
     * }
     */
    public static final AddressLayout GScanner_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GScanner_listautoptr;
     * }
     */
    public static final AddressLayout GScanner_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GScanner_slistautoptr;
     * }
     */
    public static final AddressLayout GScanner_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GScanner_queueautoptr;
     * }
     */
    public static final AddressLayout GScanner_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSequence* GSequence_autoptr;
     * }
     */
    public static final AddressLayout GSequence_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSequence_listautoptr;
     * }
     */
    public static final AddressLayout GSequence_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSequence_slistautoptr;
     * }
     */
    public static final AddressLayout GSequence_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSequence_queueautoptr;
     * }
     */
    public static final AddressLayout GSequence_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSList_autoptr;
     * }
     */
    public static final AddressLayout GSList_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSList_listautoptr;
     * }
     */
    public static final AddressLayout GSList_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSList_slistautoptr;
     * }
     */
    public static final AddressLayout GSList_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSList_queueautoptr;
     * }
     */
    public static final AddressLayout GSList_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GString* GString_autoptr;
     * }
     */
    public static final AddressLayout GString_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GString_listautoptr;
     * }
     */
    public static final AddressLayout GString_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GString_slistautoptr;
     * }
     */
    public static final AddressLayout GString_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GString_queueautoptr;
     * }
     */
    public static final AddressLayout GString_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GStringChunk* GStringChunk_autoptr;
     * }
     */
    public static final AddressLayout GStringChunk_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GStringChunk_listautoptr;
     * }
     */
    public static final AddressLayout GStringChunk_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GStringChunk_slistautoptr;
     * }
     */
    public static final AddressLayout GStringChunk_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GStringChunk_queueautoptr;
     * }
     */
    public static final AddressLayout GStringChunk_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GStrvBuilder* GStrvBuilder_autoptr;
     * }
     */
    public static final AddressLayout GStrvBuilder_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GStrvBuilder_listautoptr;
     * }
     */
    public static final AddressLayout GStrvBuilder_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GStrvBuilder_slistautoptr;
     * }
     */
    public static final AddressLayout GStrvBuilder_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GStrvBuilder_queueautoptr;
     * }
     */
    public static final AddressLayout GStrvBuilder_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GThread* GThread_autoptr;
     * }
     */
    public static final AddressLayout GThread_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GThread_listautoptr;
     * }
     */
    public static final AddressLayout GThread_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GThread_slistautoptr;
     * }
     */
    public static final AddressLayout GThread_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GThread_queueautoptr;
     * }
     */
    public static final AddressLayout GThread_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef void* GMutexLocker_autoptr;
     * }
     */
    public static final AddressLayout GMutexLocker_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMutexLocker_listautoptr;
     * }
     */
    public static final AddressLayout GMutexLocker_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMutexLocker_slistautoptr;
     * }
     */
    public static final AddressLayout GMutexLocker_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMutexLocker_queueautoptr;
     * }
     */
    public static final AddressLayout GMutexLocker_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef void* GRecMutexLocker_autoptr;
     * }
     */
    public static final AddressLayout GRecMutexLocker_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GRecMutexLocker_listautoptr;
     * }
     */
    public static final AddressLayout GRecMutexLocker_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GRecMutexLocker_slistautoptr;
     * }
     */
    public static final AddressLayout GRecMutexLocker_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GRecMutexLocker_queueautoptr;
     * }
     */
    public static final AddressLayout GRecMutexLocker_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef void* GRWLockWriterLocker_autoptr;
     * }
     */
    public static final AddressLayout GRWLockWriterLocker_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GRWLockWriterLocker_listautoptr;
     * }
     */
    public static final AddressLayout GRWLockWriterLocker_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GRWLockWriterLocker_slistautoptr;
     * }
     */
    public static final AddressLayout GRWLockWriterLocker_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GRWLockWriterLocker_queueautoptr;
     * }
     */
    public static final AddressLayout GRWLockWriterLocker_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef void* GRWLockReaderLocker_autoptr;
     * }
     */
    public static final AddressLayout GRWLockReaderLocker_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GRWLockReaderLocker_listautoptr;
     * }
     */
    public static final AddressLayout GRWLockReaderLocker_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GRWLockReaderLocker_slistautoptr;
     * }
     */
    public static final AddressLayout GRWLockReaderLocker_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GRWLockReaderLocker_queueautoptr;
     * }
     */
    public static final AddressLayout GRWLockReaderLocker_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GTimer* GTimer_autoptr;
     * }
     */
    public static final AddressLayout GTimer_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GTimer_listautoptr;
     * }
     */
    public static final AddressLayout GTimer_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GTimer_slistautoptr;
     * }
     */
    public static final AddressLayout GTimer_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTimer_queueautoptr;
     * }
     */
    public static final AddressLayout GTimer_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GTimeZone* GTimeZone_autoptr;
     * }
     */
    public static final AddressLayout GTimeZone_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GTimeZone_listautoptr;
     * }
     */
    public static final AddressLayout GTimeZone_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GTimeZone_slistautoptr;
     * }
     */
    public static final AddressLayout GTimeZone_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTimeZone_queueautoptr;
     * }
     */
    public static final AddressLayout GTimeZone_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GTree* GTree_autoptr;
     * }
     */
    public static final AddressLayout GTree_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GTree_listautoptr;
     * }
     */
    public static final AddressLayout GTree_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GTree_slistautoptr;
     * }
     */
    public static final AddressLayout GTree_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTree_queueautoptr;
     * }
     */
    public static final AddressLayout GTree_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GVariant* GVariant_autoptr;
     * }
     */
    public static final AddressLayout GVariant_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GVariant_listautoptr;
     * }
     */
    public static final AddressLayout GVariant_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GVariant_slistautoptr;
     * }
     */
    public static final AddressLayout GVariant_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GVariant_queueautoptr;
     * }
     */
    public static final AddressLayout GVariant_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GVariantBuilder* GVariantBuilder_autoptr;
     * }
     */
    public static final AddressLayout GVariantBuilder_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GVariantBuilder_listautoptr;
     * }
     */
    public static final AddressLayout GVariantBuilder_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GVariantBuilder_slistautoptr;
     * }
     */
    public static final AddressLayout GVariantBuilder_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GVariantBuilder_queueautoptr;
     * }
     */
    public static final AddressLayout GVariantBuilder_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GVariantIter* GVariantIter_autoptr;
     * }
     */
    public static final AddressLayout GVariantIter_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GVariantIter_listautoptr;
     * }
     */
    public static final AddressLayout GVariantIter_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GVariantIter_slistautoptr;
     * }
     */
    public static final AddressLayout GVariantIter_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GVariantIter_queueautoptr;
     * }
     */
    public static final AddressLayout GVariantIter_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GVariantDict* GVariantDict_autoptr;
     * }
     */
    public static final AddressLayout GVariantDict_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GVariantDict_listautoptr;
     * }
     */
    public static final AddressLayout GVariantDict_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GVariantDict_slistautoptr;
     * }
     */
    public static final AddressLayout GVariantDict_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GVariantDict_queueautoptr;
     * }
     */
    public static final AddressLayout GVariantDict_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GVariantType* GVariantType_autoptr;
     * }
     */
    public static final AddressLayout GVariantType_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GVariantType_listautoptr;
     * }
     */
    public static final AddressLayout GVariantType_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GVariantType_slistautoptr;
     * }
     */
    public static final AddressLayout GVariantType_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GVariantType_queueautoptr;
     * }
     */
    public static final AddressLayout GVariantType_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef char* GRefString_autoptr;
     * }
     */
    public static final AddressLayout GRefString_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GRefString_listautoptr;
     * }
     */
    public static final AddressLayout GRefString_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GRefString_slistautoptr;
     * }
     */
    public static final AddressLayout GRefString_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GRefString_queueautoptr;
     * }
     */
    public static final AddressLayout GRefString_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GUri* GUri_autoptr;
     * }
     */
    public static final AddressLayout GUri_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GUri_listautoptr;
     * }
     */
    public static final AddressLayout GUri_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GUri_slistautoptr;
     * }
     */
    public static final AddressLayout GUri_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GUri_queueautoptr;
     * }
     */
    public static final AddressLayout GUri_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GPathBuf* GPathBuf_autoptr;
     * }
     */
    public static final AddressLayout GPathBuf_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GPathBuf_listautoptr;
     * }
     */
    public static final AddressLayout GPathBuf_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GPathBuf_slistautoptr;
     * }
     */
    public static final AddressLayout GPathBuf_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GPathBuf_queueautoptr;
     * }
     */
    public static final AddressLayout GPathBuf_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef unsigned long GType;
     * }
     */
    public static final OfLong GType = JAVA_LONG;
    /**
     * {@snippet :
     * enum GTypeDebugFlags.G_TYPE_DEBUG_NONE = 0;
     * }
     */
    public static int G_TYPE_DEBUG_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GTypeDebugFlags.G_TYPE_DEBUG_OBJECTS = 1;
     * }
     */
    public static int G_TYPE_DEBUG_OBJECTS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GTypeDebugFlags.G_TYPE_DEBUG_SIGNALS = 2;
     * }
     */
    public static int G_TYPE_DEBUG_SIGNALS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GTypeDebugFlags.G_TYPE_DEBUG_INSTANCE_COUNT = 4;
     * }
     */
    public static int G_TYPE_DEBUG_INSTANCE_COUNT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GTypeDebugFlags.G_TYPE_DEBUG_MASK = 7;
     * }
     */
    public static int G_TYPE_DEBUG_MASK() {
        return (int)7L;
    }
    public static MethodHandle g_type_init$MH() {
        return RuntimeHelper.requireNonNull(constants$548.const$5,"g_type_init");
    }
    /**
     * {@snippet :
     * void g_type_init();
     * }
     */
    public static void g_type_init() {
        var mh$ = g_type_init$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_init_with_debug_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$549.const$0,"g_type_init_with_debug_flags");
    }
    /**
     * {@snippet :
     * void g_type_init_with_debug_flags(enum GTypeDebugFlags debug_flags);
     * }
     */
    public static void g_type_init_with_debug_flags(int debug_flags) {
        var mh$ = g_type_init_with_debug_flags$MH();
        try {
            mh$.invokeExact(debug_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_name$MH() {
        return RuntimeHelper.requireNonNull(constants$549.const$1,"g_type_name");
    }
    /**
     * {@snippet :
     * char* g_type_name(unsigned long type);
     * }
     */
    public static MemorySegment g_type_name(long type) {
        var mh$ = g_type_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_qname$MH() {
        return RuntimeHelper.requireNonNull(constants$549.const$2,"g_type_qname");
    }
    /**
     * {@snippet :
     * unsigned int g_type_qname(unsigned long type);
     * }
     */
    public static int g_type_qname(long type) {
        var mh$ = g_type_qname$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_from_name$MH() {
        return RuntimeHelper.requireNonNull(constants$549.const$3,"g_type_from_name");
    }
    /**
     * {@snippet :
     * unsigned long g_type_from_name(char* name);
     * }
     */
    public static long g_type_from_name(MemorySegment name) {
        var mh$ = g_type_from_name$MH();
        try {
            return (long)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$549.const$4,"g_type_parent");
    }
    /**
     * {@snippet :
     * unsigned long g_type_parent(unsigned long type);
     * }
     */
    public static long g_type_parent(long type) {
        var mh$ = g_type_parent$MH();
        try {
            return (long)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$549.const$5,"g_type_depth");
    }
    /**
     * {@snippet :
     * unsigned int g_type_depth(unsigned long type);
     * }
     */
    public static int g_type_depth(long type) {
        var mh$ = g_type_depth$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_next_base$MH() {
        return RuntimeHelper.requireNonNull(constants$550.const$1,"g_type_next_base");
    }
    /**
     * {@snippet :
     * unsigned long g_type_next_base(unsigned long leaf_type, unsigned long root_type);
     * }
     */
    public static long g_type_next_base(long leaf_type, long root_type) {
        var mh$ = g_type_next_base$MH();
        try {
            return (long)mh$.invokeExact(leaf_type, root_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_is_a$MH() {
        return RuntimeHelper.requireNonNull(constants$550.const$2,"g_type_is_a");
    }
    /**
     * {@snippet :
     * int g_type_is_a(unsigned long type, unsigned long is_a_type);
     * }
     */
    public static int g_type_is_a(long type, long is_a_type) {
        var mh$ = g_type_is_a$MH();
        try {
            return (int)mh$.invokeExact(type, is_a_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$550.const$3,"g_type_class_ref");
    }
    /**
     * {@snippet :
     * void* g_type_class_ref(unsigned long type);
     * }
     */
    public static MemorySegment g_type_class_ref(long type) {
        var mh$ = g_type_class_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$550.const$4,"g_type_class_peek");
    }
    /**
     * {@snippet :
     * void* g_type_class_peek(unsigned long type);
     * }
     */
    public static MemorySegment g_type_class_peek(long type) {
        var mh$ = g_type_class_peek$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_peek_static$MH() {
        return RuntimeHelper.requireNonNull(constants$550.const$5,"g_type_class_peek_static");
    }
    /**
     * {@snippet :
     * void* g_type_class_peek_static(unsigned long type);
     * }
     */
    public static MemorySegment g_type_class_peek_static(long type) {
        var mh$ = g_type_class_peek_static$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$551.const$0,"g_type_class_unref");
    }
    /**
     * {@snippet :
     * void g_type_class_unref(void* g_class);
     * }
     */
    public static void g_type_class_unref(MemorySegment g_class) {
        var mh$ = g_type_class_unref$MH();
        try {
            mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_peek_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$551.const$1,"g_type_class_peek_parent");
    }
    /**
     * {@snippet :
     * void* g_type_class_peek_parent(void* g_class);
     * }
     */
    public static MemorySegment g_type_class_peek_parent(MemorySegment g_class) {
        var mh$ = g_type_class_peek_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$551.const$2,"g_type_interface_peek");
    }
    /**
     * {@snippet :
     * void* g_type_interface_peek(void* instance_class, unsigned long iface_type);
     * }
     */
    public static MemorySegment g_type_interface_peek(MemorySegment instance_class, long iface_type) {
        var mh$ = g_type_interface_peek$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(instance_class, iface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_peek_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$551.const$3,"g_type_interface_peek_parent");
    }
    /**
     * {@snippet :
     * void* g_type_interface_peek_parent(void* g_iface);
     * }
     */
    public static MemorySegment g_type_interface_peek_parent(MemorySegment g_iface) {
        var mh$ = g_type_interface_peek_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(g_iface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_default_interface_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$551.const$4,"g_type_default_interface_ref");
    }
    /**
     * {@snippet :
     * void* g_type_default_interface_ref(unsigned long g_type);
     * }
     */
    public static MemorySegment g_type_default_interface_ref(long g_type) {
        var mh$ = g_type_default_interface_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(g_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_default_interface_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$551.const$5,"g_type_default_interface_peek");
    }
    /**
     * {@snippet :
     * void* g_type_default_interface_peek(unsigned long g_type);
     * }
     */
    public static MemorySegment g_type_default_interface_peek(long g_type) {
        var mh$ = g_type_default_interface_peek$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(g_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_default_interface_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$552.const$0,"g_type_default_interface_unref");
    }
    /**
     * {@snippet :
     * void g_type_default_interface_unref(void* g_iface);
     * }
     */
    public static void g_type_default_interface_unref(MemorySegment g_iface) {
        var mh$ = g_type_default_interface_unref$MH();
        try {
            mh$.invokeExact(g_iface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_children$MH() {
        return RuntimeHelper.requireNonNull(constants$552.const$1,"g_type_children");
    }
    /**
     * {@snippet :
     * unsigned long* g_type_children(unsigned long type, unsigned int* n_children);
     * }
     */
    public static MemorySegment g_type_children(long type, MemorySegment n_children) {
        var mh$ = g_type_children$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interfaces$MH() {
        return RuntimeHelper.requireNonNull(constants$552.const$2,"g_type_interfaces");
    }
    /**
     * {@snippet :
     * unsigned long* g_type_interfaces(unsigned long type, unsigned int* n_interfaces);
     * }
     */
    public static MemorySegment g_type_interfaces(long type, MemorySegment n_interfaces) {
        var mh$ = g_type_interfaces$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type, n_interfaces);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_set_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$552.const$4,"g_type_set_qdata");
    }
    /**
     * {@snippet :
     * void g_type_set_qdata(unsigned long type, unsigned int quark, void* data);
     * }
     */
    public static void g_type_set_qdata(long type, int quark, MemorySegment data) {
        var mh$ = g_type_set_qdata$MH();
        try {
            mh$.invokeExact(type, quark, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_get_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$552.const$5,"g_type_get_qdata");
    }
    /**
     * {@snippet :
     * void* g_type_get_qdata(unsigned long type, unsigned int quark);
     * }
     */
    public static MemorySegment g_type_get_qdata(long type, int quark) {
        var mh$ = g_type_get_qdata$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_query$MH() {
        return RuntimeHelper.requireNonNull(constants$553.const$0,"g_type_query");
    }
    /**
     * {@snippet :
     * void g_type_query(unsigned long type, struct _GTypeQuery* query);
     * }
     */
    public static void g_type_query(long type, MemorySegment query) {
        var mh$ = g_type_query$MH();
        try {
            mh$.invokeExact(type, query);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_get_instance_count$MH() {
        return RuntimeHelper.requireNonNull(constants$553.const$1,"g_type_get_instance_count");
    }
    /**
     * {@snippet :
     * int g_type_get_instance_count(unsigned long type);
     * }
     */
    public static int g_type_get_instance_count(long type) {
        var mh$ = g_type_get_instance_count$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GTypeFundamentalFlags.G_TYPE_FLAG_CLASSED = 1;
     * }
     */
    public static int G_TYPE_FLAG_CLASSED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GTypeFundamentalFlags.G_TYPE_FLAG_INSTANTIATABLE = 2;
     * }
     */
    public static int G_TYPE_FLAG_INSTANTIATABLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GTypeFundamentalFlags.G_TYPE_FLAG_DERIVABLE = 4;
     * }
     */
    public static int G_TYPE_FLAG_DERIVABLE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GTypeFundamentalFlags.G_TYPE_FLAG_DEEP_DERIVABLE = 8;
     * }
     */
    public static int G_TYPE_FLAG_DEEP_DERIVABLE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GTypeFlags.G_TYPE_FLAG_NONE = 0;
     * }
     */
    public static int G_TYPE_FLAG_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GTypeFlags.G_TYPE_FLAG_ABSTRACT = 16;
     * }
     */
    public static int G_TYPE_FLAG_ABSTRACT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GTypeFlags.G_TYPE_FLAG_VALUE_ABSTRACT = 32;
     * }
     */
    public static int G_TYPE_FLAG_VALUE_ABSTRACT() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GTypeFlags.G_TYPE_FLAG_FINAL = 64;
     * }
     */
    public static int G_TYPE_FLAG_FINAL() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum GTypeFlags.G_TYPE_FLAG_DEPRECATED = 128;
     * }
     */
    public static int G_TYPE_FLAG_DEPRECATED() {
        return (int)128L;
    }
    public static MethodHandle g_type_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$562.const$4,"g_type_register_static");
    }
    /**
     * {@snippet :
     * unsigned long g_type_register_static(unsigned long parent_type, char* type_name, struct _GTypeInfo* info, enum GTypeFlags flags);
     * }
     */
    public static long g_type_register_static(long parent_type, MemorySegment type_name, MemorySegment info, int flags) {
        var mh$ = g_type_register_static$MH();
        try {
            return (long)mh$.invokeExact(parent_type, type_name, info, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_register_static_simple$MH() {
        return RuntimeHelper.requireNonNull(constants$563.const$2,"g_type_register_static_simple");
    }
    /**
     * {@snippet :
     * unsigned long g_type_register_static_simple(unsigned long parent_type, char* type_name, unsigned int class_size, void (*class_init)(void*,void*), unsigned int instance_size, void (*instance_init)(struct _GTypeInstance*,void*), enum GTypeFlags flags);
     * }
     */
    public static long g_type_register_static_simple(long parent_type, MemorySegment type_name, int class_size, MemorySegment class_init, int instance_size, MemorySegment instance_init, int flags) {
        var mh$ = g_type_register_static_simple$MH();
        try {
            return (long)mh$.invokeExact(parent_type, type_name, class_size, class_init, instance_size, instance_init, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_register_dynamic$MH() {
        return RuntimeHelper.requireNonNull(constants$563.const$3,"g_type_register_dynamic");
    }
    /**
     * {@snippet :
     * unsigned long g_type_register_dynamic(unsigned long parent_type, char* type_name, struct _GTypePlugin* plugin, enum GTypeFlags flags);
     * }
     */
    public static long g_type_register_dynamic(long parent_type, MemorySegment type_name, MemorySegment plugin, int flags) {
        var mh$ = g_type_register_dynamic$MH();
        try {
            return (long)mh$.invokeExact(parent_type, type_name, plugin, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_register_fundamental$MH() {
        return RuntimeHelper.requireNonNull(constants$563.const$5,"g_type_register_fundamental");
    }
    /**
     * {@snippet :
     * unsigned long g_type_register_fundamental(unsigned long type_id, char* type_name, struct _GTypeInfo* info, struct _GTypeFundamentalInfo* finfo, enum GTypeFlags flags);
     * }
     */
    public static long g_type_register_fundamental(long type_id, MemorySegment type_name, MemorySegment info, MemorySegment finfo, int flags) {
        var mh$ = g_type_register_fundamental$MH();
        try {
            return (long)mh$.invokeExact(type_id, type_name, info, finfo, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_interface_static$MH() {
        return RuntimeHelper.requireNonNull(constants$564.const$1,"g_type_add_interface_static");
    }
    /**
     * {@snippet :
     * void g_type_add_interface_static(unsigned long instance_type, unsigned long interface_type, struct _GInterfaceInfo* info);
     * }
     */
    public static void g_type_add_interface_static(long instance_type, long interface_type, MemorySegment info) {
        var mh$ = g_type_add_interface_static$MH();
        try {
            mh$.invokeExact(instance_type, interface_type, info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_interface_dynamic$MH() {
        return RuntimeHelper.requireNonNull(constants$564.const$2,"g_type_add_interface_dynamic");
    }
    /**
     * {@snippet :
     * void g_type_add_interface_dynamic(unsigned long instance_type, unsigned long interface_type, struct _GTypePlugin* plugin);
     * }
     */
    public static void g_type_add_interface_dynamic(long instance_type, long interface_type, MemorySegment plugin) {
        var mh$ = g_type_add_interface_dynamic$MH();
        try {
            mh$.invokeExact(instance_type, interface_type, plugin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_add_prerequisite$MH() {
        return RuntimeHelper.requireNonNull(constants$564.const$4,"g_type_interface_add_prerequisite");
    }
    /**
     * {@snippet :
     * void g_type_interface_add_prerequisite(unsigned long interface_type, unsigned long prerequisite_type);
     * }
     */
    public static void g_type_interface_add_prerequisite(long interface_type, long prerequisite_type) {
        var mh$ = g_type_interface_add_prerequisite$MH();
        try {
            mh$.invokeExact(interface_type, prerequisite_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_prerequisites$MH() {
        return RuntimeHelper.requireNonNull(constants$564.const$5,"g_type_interface_prerequisites");
    }
    /**
     * {@snippet :
     * unsigned long* g_type_interface_prerequisites(unsigned long interface_type, unsigned int* n_prerequisites);
     * }
     */
    public static MemorySegment g_type_interface_prerequisites(long interface_type, MemorySegment n_prerequisites) {
        var mh$ = g_type_interface_prerequisites$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(interface_type, n_prerequisites);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_instantiatable_prerequisite$MH() {
        return RuntimeHelper.requireNonNull(constants$565.const$0,"g_type_interface_instantiatable_prerequisite");
    }
    /**
     * {@snippet :
     * unsigned long g_type_interface_instantiatable_prerequisite(unsigned long interface_type);
     * }
     */
    public static long g_type_interface_instantiatable_prerequisite(long interface_type) {
        var mh$ = g_type_interface_instantiatable_prerequisite$MH();
        try {
            return (long)mh$.invokeExact(interface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_add_private$MH() {
        return RuntimeHelper.requireNonNull(constants$565.const$1,"g_type_class_add_private");
    }
    /**
     * {@snippet :
     * void g_type_class_add_private(void* g_class, unsigned long private_size);
     * }
     */
    public static void g_type_class_add_private(MemorySegment g_class, long private_size) {
        var mh$ = g_type_class_add_private$MH();
        try {
            mh$.invokeExact(g_class, private_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_instance_private$MH() {
        return RuntimeHelper.requireNonNull(constants$565.const$2,"g_type_add_instance_private");
    }
    /**
     * {@snippet :
     * int g_type_add_instance_private(unsigned long class_type, unsigned long private_size);
     * }
     */
    public static int g_type_add_instance_private(long class_type, long private_size) {
        var mh$ = g_type_add_instance_private$MH();
        try {
            return (int)mh$.invokeExact(class_type, private_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_instance_get_private$MH() {
        return RuntimeHelper.requireNonNull(constants$565.const$3,"g_type_instance_get_private");
    }
    /**
     * {@snippet :
     * void* g_type_instance_get_private(struct _GTypeInstance* instance, unsigned long private_type);
     * }
     */
    public static MemorySegment g_type_instance_get_private(MemorySegment instance, long private_type) {
        var mh$ = g_type_instance_get_private$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(instance, private_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_adjust_private_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$565.const$4,"g_type_class_adjust_private_offset");
    }
    /**
     * {@snippet :
     * void g_type_class_adjust_private_offset(void* g_class, int* private_size_or_offset);
     * }
     */
    public static void g_type_class_adjust_private_offset(MemorySegment g_class, MemorySegment private_size_or_offset) {
        var mh$ = g_type_class_adjust_private_offset$MH();
        try {
            mh$.invokeExact(g_class, private_size_or_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_class_private$MH() {
        return RuntimeHelper.requireNonNull(constants$565.const$5,"g_type_add_class_private");
    }
    /**
     * {@snippet :
     * void g_type_add_class_private(unsigned long class_type, unsigned long private_size);
     * }
     */
    public static void g_type_add_class_private(long class_type, long private_size) {
        var mh$ = g_type_add_class_private$MH();
        try {
            mh$.invokeExact(class_type, private_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_get_private$MH() {
        return RuntimeHelper.requireNonNull(constants$566.const$0,"g_type_class_get_private");
    }
    /**
     * {@snippet :
     * void* g_type_class_get_private(struct _GTypeClass* klass, unsigned long private_type);
     * }
     */
    public static MemorySegment g_type_class_get_private(MemorySegment klass, long private_type) {
        var mh$ = g_type_class_get_private$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(klass, private_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_get_instance_private_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$566.const$1,"g_type_class_get_instance_private_offset");
    }
    /**
     * {@snippet :
     * int g_type_class_get_instance_private_offset(void* g_class);
     * }
     */
    public static int g_type_class_get_instance_private_offset(MemorySegment g_class) {
        var mh$ = g_type_class_get_instance_private_offset$MH();
        try {
            return (int)mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_ensure$MH() {
        return RuntimeHelper.requireNonNull(constants$566.const$2,"g_type_ensure");
    }
    /**
     * {@snippet :
     * void g_type_ensure(unsigned long type);
     * }
     */
    public static void g_type_ensure(long type) {
        var mh$ = g_type_ensure$MH();
        try {
            mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_get_type_registration_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$566.const$3,"g_type_get_type_registration_serial");
    }
    /**
     * {@snippet :
     * unsigned int g_type_get_type_registration_serial();
     * }
     */
    public static int g_type_get_type_registration_serial() {
        var mh$ = g_type_get_type_registration_serial$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_get_plugin$MH() {
        return RuntimeHelper.requireNonNull(constants$566.const$4,"g_type_get_plugin");
    }
    /**
     * {@snippet :
     * struct _GTypePlugin* g_type_get_plugin(unsigned long type);
     * }
     */
    public static MemorySegment g_type_get_plugin(long type) {
        var mh$ = g_type_get_plugin$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_get_plugin$MH() {
        return RuntimeHelper.requireNonNull(constants$566.const$5,"g_type_interface_get_plugin");
    }
    /**
     * {@snippet :
     * struct _GTypePlugin* g_type_interface_get_plugin(unsigned long instance_type, unsigned long interface_type);
     * }
     */
    public static MemorySegment g_type_interface_get_plugin(long instance_type, long interface_type) {
        var mh$ = g_type_interface_get_plugin$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(instance_type, interface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_fundamental_next$MH() {
        return RuntimeHelper.requireNonNull(constants$567.const$0,"g_type_fundamental_next");
    }
    /**
     * {@snippet :
     * unsigned long g_type_fundamental_next();
     * }
     */
    public static long g_type_fundamental_next() {
        var mh$ = g_type_fundamental_next$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_fundamental$MH() {
        return RuntimeHelper.requireNonNull(constants$567.const$1,"g_type_fundamental");
    }
    /**
     * {@snippet :
     * unsigned long g_type_fundamental(unsigned long type_id);
     * }
     */
    public static long g_type_fundamental(long type_id) {
        var mh$ = g_type_fundamental$MH();
        try {
            return (long)mh$.invokeExact(type_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_create_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$567.const$2,"g_type_create_instance");
    }
    /**
     * {@snippet :
     * struct _GTypeInstance* g_type_create_instance(unsigned long type);
     * }
     */
    public static MemorySegment g_type_create_instance(long type) {
        var mh$ = g_type_create_instance$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_free_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$567.const$3,"g_type_free_instance");
    }
    /**
     * {@snippet :
     * void g_type_free_instance(struct _GTypeInstance* instance);
     * }
     */
    public static void g_type_free_instance(MemorySegment instance) {
        var mh$ = g_type_free_instance$MH();
        try {
            mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_class_cache_func$MH() {
        return RuntimeHelper.requireNonNull(constants$567.const$5,"g_type_add_class_cache_func");
    }
    /**
     * {@snippet :
     * void g_type_add_class_cache_func(void* cache_data, int (*cache_func)(void*,struct _GTypeClass*));
     * }
     */
    public static void g_type_add_class_cache_func(MemorySegment cache_data, MemorySegment cache_func) {
        var mh$ = g_type_add_class_cache_func$MH();
        try {
            mh$.invokeExact(cache_data, cache_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_remove_class_cache_func$MH() {
        return RuntimeHelper.requireNonNull(constants$568.const$1,"g_type_remove_class_cache_func");
    }
    /**
     * {@snippet :
     * void g_type_remove_class_cache_func(void* cache_data, int (*cache_func)(void*,struct _GTypeClass*));
     * }
     */
    public static void g_type_remove_class_cache_func(MemorySegment cache_data, MemorySegment cache_func) {
        var mh$ = g_type_remove_class_cache_func$MH();
        try {
            mh$.invokeExact(cache_data, cache_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_unref_uncached$MH() {
        return RuntimeHelper.requireNonNull(constants$568.const$2,"g_type_class_unref_uncached");
    }
    /**
     * {@snippet :
     * void g_type_class_unref_uncached(void* g_class);
     * }
     */
    public static void g_type_class_unref_uncached(MemorySegment g_class) {
        var mh$ = g_type_class_unref_uncached$MH();
        try {
            mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_interface_check$MH() {
        return RuntimeHelper.requireNonNull(constants$568.const$4,"g_type_add_interface_check");
    }
    /**
     * {@snippet :
     * void g_type_add_interface_check(void* check_data, void (*check_func)(void*,void*));
     * }
     */
    public static void g_type_add_interface_check(MemorySegment check_data, MemorySegment check_func) {
        var mh$ = g_type_add_interface_check$MH();
        try {
            mh$.invokeExact(check_data, check_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_remove_interface_check$MH() {
        return RuntimeHelper.requireNonNull(constants$569.const$0,"g_type_remove_interface_check");
    }
    /**
     * {@snippet :
     * void g_type_remove_interface_check(void* check_data, void (*check_func)(void*,void*));
     * }
     */
    public static void g_type_remove_interface_check(MemorySegment check_data, MemorySegment check_func) {
        var mh$ = g_type_remove_interface_check$MH();
        try {
            mh$.invokeExact(check_data, check_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_value_table_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$569.const$1,"g_type_value_table_peek");
    }
    /**
     * {@snippet :
     * struct _GTypeValueTable* g_type_value_table_peek(unsigned long type);
     * }
     */
    public static MemorySegment g_type_value_table_peek(long type) {
        var mh$ = g_type_value_table_peek$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$569.const$2,"g_type_check_instance");
    }
    /**
     * {@snippet :
     * int g_type_check_instance(struct _GTypeInstance* instance);
     * }
     */
    public static int g_type_check_instance(MemorySegment instance) {
        var mh$ = g_type_check_instance$MH();
        try {
            return (int)mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance_cast$MH() {
        return RuntimeHelper.requireNonNull(constants$569.const$3,"g_type_check_instance_cast");
    }
    /**
     * {@snippet :
     * struct _GTypeInstance* g_type_check_instance_cast(struct _GTypeInstance* instance, unsigned long iface_type);
     * }
     */
    public static MemorySegment g_type_check_instance_cast(MemorySegment instance, long iface_type) {
        var mh$ = g_type_check_instance_cast$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(instance, iface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance_is_a$MH() {
        return RuntimeHelper.requireNonNull(constants$569.const$4,"g_type_check_instance_is_a");
    }
    /**
     * {@snippet :
     * int g_type_check_instance_is_a(struct _GTypeInstance* instance, unsigned long iface_type);
     * }
     */
    public static int g_type_check_instance_is_a(MemorySegment instance, long iface_type) {
        var mh$ = g_type_check_instance_is_a$MH();
        try {
            return (int)mh$.invokeExact(instance, iface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance_is_fundamentally_a$MH() {
        return RuntimeHelper.requireNonNull(constants$569.const$5,"g_type_check_instance_is_fundamentally_a");
    }
    /**
     * {@snippet :
     * int g_type_check_instance_is_fundamentally_a(struct _GTypeInstance* instance, unsigned long fundamental_type);
     * }
     */
    public static int g_type_check_instance_is_fundamentally_a(MemorySegment instance, long fundamental_type) {
        var mh$ = g_type_check_instance_is_fundamentally_a$MH();
        try {
            return (int)mh$.invokeExact(instance, fundamental_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_class_cast$MH() {
        return RuntimeHelper.requireNonNull(constants$570.const$0,"g_type_check_class_cast");
    }
    /**
     * {@snippet :
     * struct _GTypeClass* g_type_check_class_cast(struct _GTypeClass* g_class, unsigned long is_a_type);
     * }
     */
    public static MemorySegment g_type_check_class_cast(MemorySegment g_class, long is_a_type) {
        var mh$ = g_type_check_class_cast$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(g_class, is_a_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_class_is_a$MH() {
        return RuntimeHelper.requireNonNull(constants$570.const$1,"g_type_check_class_is_a");
    }
    /**
     * {@snippet :
     * int g_type_check_class_is_a(struct _GTypeClass* g_class, unsigned long is_a_type);
     * }
     */
    public static int g_type_check_class_is_a(MemorySegment g_class, long is_a_type) {
        var mh$ = g_type_check_class_is_a$MH();
        try {
            return (int)mh$.invokeExact(g_class, is_a_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_is_value_type$MH() {
        return RuntimeHelper.requireNonNull(constants$570.const$2,"g_type_check_is_value_type");
    }
    /**
     * {@snippet :
     * int g_type_check_is_value_type(unsigned long type);
     * }
     */
    public static int g_type_check_is_value_type(long type) {
        var mh$ = g_type_check_is_value_type$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_value$MH() {
        return RuntimeHelper.requireNonNull(constants$570.const$3,"g_type_check_value");
    }
    /**
     * {@snippet :
     * int g_type_check_value(struct _GValue* value);
     * }
     */
    public static int g_type_check_value(MemorySegment value) {
        var mh$ = g_type_check_value$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_value_holds$MH() {
        return RuntimeHelper.requireNonNull(constants$570.const$4,"g_type_check_value_holds");
    }
    /**
     * {@snippet :
     * int g_type_check_value_holds(struct _GValue* value, unsigned long type);
     * }
     */
    public static int g_type_check_value_holds(MemorySegment value, long type) {
        var mh$ = g_type_check_value_holds$MH();
        try {
            return (int)mh$.invokeExact(value, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_test_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$570.const$5,"g_type_test_flags");
    }
    /**
     * {@snippet :
     * int g_type_test_flags(unsigned long type, unsigned int flags);
     * }
     */
    public static int g_type_test_flags(long type, int flags) {
        var mh$ = g_type_test_flags$MH();
        try {
            return (int)mh$.invokeExact(type, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_name_from_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$571.const$0,"g_type_name_from_instance");
    }
    /**
     * {@snippet :
     * char* g_type_name_from_instance(struct _GTypeInstance* instance);
     * }
     */
    public static MemorySegment g_type_name_from_instance(MemorySegment instance) {
        var mh$ = g_type_name_from_instance$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_name_from_class$MH() {
        return RuntimeHelper.requireNonNull(constants$571.const$1,"g_type_name_from_class");
    }
    /**
     * {@snippet :
     * char* g_type_name_from_class(struct _GTypeClass* g_class);
     * }
     */
    public static MemorySegment g_type_name_from_class(MemorySegment g_class) {
        var mh$ = g_type_name_from_class$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_init$MH() {
        return RuntimeHelper.requireNonNull(constants$571.const$5,"g_value_init");
    }
    /**
     * {@snippet :
     * struct _GValue* g_value_init(struct _GValue* value, unsigned long g_type);
     * }
     */
    public static MemorySegment g_value_init(MemorySegment value, long g_type) {
        var mh$ = g_value_init$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value, g_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$572.const$0,"g_value_copy");
    }
    /**
     * {@snippet :
     * void g_value_copy(struct _GValue* src_value, struct _GValue* dest_value);
     * }
     */
    public static void g_value_copy(MemorySegment src_value, MemorySegment dest_value) {
        var mh$ = g_value_copy$MH();
        try {
            mh$.invokeExact(src_value, dest_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$572.const$1,"g_value_reset");
    }
    /**
     * {@snippet :
     * struct _GValue* g_value_reset(struct _GValue* value);
     * }
     */
    public static MemorySegment g_value_reset(MemorySegment value) {
        var mh$ = g_value_reset$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_unset$MH() {
        return RuntimeHelper.requireNonNull(constants$572.const$2,"g_value_unset");
    }
    /**
     * {@snippet :
     * void g_value_unset(struct _GValue* value);
     * }
     */
    public static void g_value_unset(MemorySegment value) {
        var mh$ = g_value_unset$MH();
        try {
            mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$572.const$3,"g_value_set_instance");
    }
    /**
     * {@snippet :
     * void g_value_set_instance(struct _GValue* value, void* instance);
     * }
     */
    public static void g_value_set_instance(MemorySegment value, MemorySegment instance) {
        var mh$ = g_value_set_instance$MH();
        try {
            mh$.invokeExact(value, instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_init_from_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$572.const$4,"g_value_init_from_instance");
    }
    /**
     * {@snippet :
     * void g_value_init_from_instance(struct _GValue* value, void* instance);
     * }
     */
    public static void g_value_init_from_instance(MemorySegment value, MemorySegment instance) {
        var mh$ = g_value_init_from_instance$MH();
        try {
            mh$.invokeExact(value, instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_fits_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$572.const$5,"g_value_fits_pointer");
    }
    /**
     * {@snippet :
     * int g_value_fits_pointer(struct _GValue* value);
     * }
     */
    public static int g_value_fits_pointer(MemorySegment value) {
        var mh$ = g_value_fits_pointer$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_peek_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$573.const$0,"g_value_peek_pointer");
    }
    /**
     * {@snippet :
     * void* g_value_peek_pointer(struct _GValue* value);
     * }
     */
    public static MemorySegment g_value_peek_pointer(MemorySegment value) {
        var mh$ = g_value_peek_pointer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_type_compatible$MH() {
        return RuntimeHelper.requireNonNull(constants$573.const$1,"g_value_type_compatible");
    }
    /**
     * {@snippet :
     * int g_value_type_compatible(unsigned long src_type, unsigned long dest_type);
     * }
     */
    public static int g_value_type_compatible(long src_type, long dest_type) {
        var mh$ = g_value_type_compatible$MH();
        try {
            return (int)mh$.invokeExact(src_type, dest_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_type_transformable$MH() {
        return RuntimeHelper.requireNonNull(constants$573.const$2,"g_value_type_transformable");
    }
    /**
     * {@snippet :
     * int g_value_type_transformable(unsigned long src_type, unsigned long dest_type);
     * }
     */
    public static int g_value_type_transformable(long src_type, long dest_type) {
        var mh$ = g_value_type_transformable$MH();
        try {
            return (int)mh$.invokeExact(src_type, dest_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$573.const$3,"g_value_transform");
    }
    /**
     * {@snippet :
     * int g_value_transform(struct _GValue* src_value, struct _GValue* dest_value);
     * }
     */
    public static int g_value_transform(MemorySegment src_value, MemorySegment dest_value) {
        var mh$ = g_value_transform$MH();
        try {
            return (int)mh$.invokeExact(src_value, dest_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_register_transform_func$MH() {
        return RuntimeHelper.requireNonNull(constants$573.const$5,"g_value_register_transform_func");
    }
    /**
     * {@snippet :
     * void g_value_register_transform_func(unsigned long src_type, unsigned long dest_type, void (*transform_func)(struct _GValue*,struct _GValue*));
     * }
     */
    public static void g_value_register_transform_func(long src_type, long dest_type, MemorySegment transform_func) {
        var mh$ = g_value_register_transform_func$MH();
        try {
            mh$.invokeExact(src_type, dest_type, transform_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GParamFlags.G_PARAM_READABLE = 1;
     * }
     */
    public static int G_PARAM_READABLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GParamFlags.G_PARAM_WRITABLE = 2;
     * }
     */
    public static int G_PARAM_WRITABLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GParamFlags.G_PARAM_READWRITE = 3;
     * }
     */
    public static int G_PARAM_READWRITE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GParamFlags.G_PARAM_CONSTRUCT = 4;
     * }
     */
    public static int G_PARAM_CONSTRUCT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GParamFlags.G_PARAM_CONSTRUCT_ONLY = 8;
     * }
     */
    public static int G_PARAM_CONSTRUCT_ONLY() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GParamFlags.G_PARAM_LAX_VALIDATION = 16;
     * }
     */
    public static int G_PARAM_LAX_VALIDATION() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GParamFlags.G_PARAM_STATIC_NAME = 32;
     * }
     */
    public static int G_PARAM_STATIC_NAME() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GParamFlags.G_PARAM_PRIVATE = 32;
     * }
     */
    public static int G_PARAM_PRIVATE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GParamFlags.G_PARAM_STATIC_NICK = 64;
     * }
     */
    public static int G_PARAM_STATIC_NICK() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum GParamFlags.G_PARAM_STATIC_BLURB = 128;
     * }
     */
    public static int G_PARAM_STATIC_BLURB() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum GParamFlags.G_PARAM_EXPLICIT_NOTIFY = 1073741824;
     * }
     */
    public static int G_PARAM_EXPLICIT_NOTIFY() {
        return (int)1073741824L;
    }
    /**
     * {@snippet :
     * enum GParamFlags.G_PARAM_DEPRECATED = -2147483648;
     * }
     */
    public static int G_PARAM_DEPRECATED() {
        return (int)-2147483648L;
    }
    public static MethodHandle g_param_spec_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$578.const$0,"g_param_spec_ref");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_ref(struct _GParamSpec* pspec);
     * }
     */
    public static MemorySegment g_param_spec_ref(MemorySegment pspec) {
        var mh$ = g_param_spec_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$578.const$1,"g_param_spec_unref");
    }
    /**
     * {@snippet :
     * void g_param_spec_unref(struct _GParamSpec* pspec);
     * }
     */
    public static void g_param_spec_unref(MemorySegment pspec) {
        var mh$ = g_param_spec_unref$MH();
        try {
            mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_sink$MH() {
        return RuntimeHelper.requireNonNull(constants$578.const$2,"g_param_spec_sink");
    }
    /**
     * {@snippet :
     * void g_param_spec_sink(struct _GParamSpec* pspec);
     * }
     */
    public static void g_param_spec_sink(MemorySegment pspec) {
        var mh$ = g_param_spec_sink$MH();
        try {
            mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_ref_sink$MH() {
        return RuntimeHelper.requireNonNull(constants$578.const$3,"g_param_spec_ref_sink");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_ref_sink(struct _GParamSpec* pspec);
     * }
     */
    public static MemorySegment g_param_spec_ref_sink(MemorySegment pspec) {
        var mh$ = g_param_spec_ref_sink$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$578.const$4,"g_param_spec_get_qdata");
    }
    /**
     * {@snippet :
     * void* g_param_spec_get_qdata(struct _GParamSpec* pspec, unsigned int quark);
     * }
     */
    public static MemorySegment g_param_spec_get_qdata(MemorySegment pspec, int quark) {
        var mh$ = g_param_spec_get_qdata$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pspec, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_set_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$578.const$5,"g_param_spec_set_qdata");
    }
    /**
     * {@snippet :
     * void g_param_spec_set_qdata(struct _GParamSpec* pspec, unsigned int quark, void* data);
     * }
     */
    public static void g_param_spec_set_qdata(MemorySegment pspec, int quark, MemorySegment data) {
        var mh$ = g_param_spec_set_qdata$MH();
        try {
            mh$.invokeExact(pspec, quark, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_set_qdata_full$MH() {
        return RuntimeHelper.requireNonNull(constants$579.const$1,"g_param_spec_set_qdata_full");
    }
    /**
     * {@snippet :
     * void g_param_spec_set_qdata_full(struct _GParamSpec* pspec, unsigned int quark, void* data, void (*destroy)(void*));
     * }
     */
    public static void g_param_spec_set_qdata_full(MemorySegment pspec, int quark, MemorySegment data, MemorySegment destroy) {
        var mh$ = g_param_spec_set_qdata_full$MH();
        try {
            mh$.invokeExact(pspec, quark, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_steal_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$579.const$2,"g_param_spec_steal_qdata");
    }
    /**
     * {@snippet :
     * void* g_param_spec_steal_qdata(struct _GParamSpec* pspec, unsigned int quark);
     * }
     */
    public static MemorySegment g_param_spec_steal_qdata(MemorySegment pspec, int quark) {
        var mh$ = g_param_spec_steal_qdata$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pspec, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_redirect_target$MH() {
        return RuntimeHelper.requireNonNull(constants$579.const$3,"g_param_spec_get_redirect_target");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_get_redirect_target(struct _GParamSpec* pspec);
     * }
     */
    public static MemorySegment g_param_spec_get_redirect_target(MemorySegment pspec) {
        var mh$ = g_param_spec_get_redirect_target$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_value_set_default$MH() {
        return RuntimeHelper.requireNonNull(constants$579.const$4,"g_param_value_set_default");
    }
    /**
     * {@snippet :
     * void g_param_value_set_default(struct _GParamSpec* pspec, struct _GValue* value);
     * }
     */
    public static void g_param_value_set_default(MemorySegment pspec, MemorySegment value) {
        var mh$ = g_param_value_set_default$MH();
        try {
            mh$.invokeExact(pspec, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_value_defaults$MH() {
        return RuntimeHelper.requireNonNull(constants$579.const$5,"g_param_value_defaults");
    }
    /**
     * {@snippet :
     * int g_param_value_defaults(struct _GParamSpec* pspec, struct _GValue* value);
     * }
     */
    public static int g_param_value_defaults(MemorySegment pspec, MemorySegment value) {
        var mh$ = g_param_value_defaults$MH();
        try {
            return (int)mh$.invokeExact(pspec, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_value_validate$MH() {
        return RuntimeHelper.requireNonNull(constants$580.const$0,"g_param_value_validate");
    }
    /**
     * {@snippet :
     * int g_param_value_validate(struct _GParamSpec* pspec, struct _GValue* value);
     * }
     */
    public static int g_param_value_validate(MemorySegment pspec, MemorySegment value) {
        var mh$ = g_param_value_validate$MH();
        try {
            return (int)mh$.invokeExact(pspec, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_value_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$580.const$1,"g_param_value_is_valid");
    }
    /**
     * {@snippet :
     * int g_param_value_is_valid(struct _GParamSpec* pspec, struct _GValue* value);
     * }
     */
    public static int g_param_value_is_valid(MemorySegment pspec, MemorySegment value) {
        var mh$ = g_param_value_is_valid$MH();
        try {
            return (int)mh$.invokeExact(pspec, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_value_convert$MH() {
        return RuntimeHelper.requireNonNull(constants$580.const$2,"g_param_value_convert");
    }
    /**
     * {@snippet :
     * int g_param_value_convert(struct _GParamSpec* pspec, struct _GValue* src_value, struct _GValue* dest_value, int strict_validation);
     * }
     */
    public static int g_param_value_convert(MemorySegment pspec, MemorySegment src_value, MemorySegment dest_value, int strict_validation) {
        var mh$ = g_param_value_convert$MH();
        try {
            return (int)mh$.invokeExact(pspec, src_value, dest_value, strict_validation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_values_cmp$MH() {
        return RuntimeHelper.requireNonNull(constants$580.const$3,"g_param_values_cmp");
    }
    /**
     * {@snippet :
     * int g_param_values_cmp(struct _GParamSpec* pspec, struct _GValue* value1, struct _GValue* value2);
     * }
     */
    public static int g_param_values_cmp(MemorySegment pspec, MemorySegment value1, MemorySegment value2) {
        var mh$ = g_param_values_cmp$MH();
        try {
            return (int)mh$.invokeExact(pspec, value1, value2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$580.const$4,"g_param_spec_get_name");
    }
    /**
     * {@snippet :
     * char* g_param_spec_get_name(struct _GParamSpec* pspec);
     * }
     */
    public static MemorySegment g_param_spec_get_name(MemorySegment pspec) {
        var mh$ = g_param_spec_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_nick$MH() {
        return RuntimeHelper.requireNonNull(constants$580.const$5,"g_param_spec_get_nick");
    }
    /**
     * {@snippet :
     * char* g_param_spec_get_nick(struct _GParamSpec* pspec);
     * }
     */
    public static MemorySegment g_param_spec_get_nick(MemorySegment pspec) {
        var mh$ = g_param_spec_get_nick$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_blurb$MH() {
        return RuntimeHelper.requireNonNull(constants$581.const$0,"g_param_spec_get_blurb");
    }
    /**
     * {@snippet :
     * char* g_param_spec_get_blurb(struct _GParamSpec* pspec);
     * }
     */
    public static MemorySegment g_param_spec_get_blurb(MemorySegment pspec) {
        var mh$ = g_param_spec_get_blurb$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_param$MH() {
        return RuntimeHelper.requireNonNull(constants$581.const$1,"g_value_set_param");
    }
    /**
     * {@snippet :
     * void g_value_set_param(struct _GValue* value, struct _GParamSpec* param);
     * }
     */
    public static void g_value_set_param(MemorySegment value, MemorySegment param) {
        var mh$ = g_value_set_param$MH();
        try {
            mh$.invokeExact(value, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_param$MH() {
        return RuntimeHelper.requireNonNull(constants$581.const$2,"g_value_get_param");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_value_get_param(struct _GValue* value);
     * }
     */
    public static MemorySegment g_value_get_param(MemorySegment value) {
        var mh$ = g_value_get_param$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_dup_param$MH() {
        return RuntimeHelper.requireNonNull(constants$581.const$3,"g_value_dup_param");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_value_dup_param(struct _GValue* value);
     * }
     */
    public static MemorySegment g_value_dup_param(MemorySegment value) {
        var mh$ = g_value_dup_param$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_take_param$MH() {
        return RuntimeHelper.requireNonNull(constants$581.const$4,"g_value_take_param");
    }
    /**
     * {@snippet :
     * void g_value_take_param(struct _GValue* value, struct _GParamSpec* param);
     * }
     */
    public static void g_value_take_param(MemorySegment value, MemorySegment param) {
        var mh$ = g_value_take_param$MH();
        try {
            mh$.invokeExact(value, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_param_take_ownership$MH() {
        return RuntimeHelper.requireNonNull(constants$581.const$5,"g_value_set_param_take_ownership");
    }
    /**
     * {@snippet :
     * void g_value_set_param_take_ownership(struct _GValue* value, struct _GParamSpec* param);
     * }
     */
    public static void g_value_set_param_take_ownership(MemorySegment value, MemorySegment param) {
        var mh$ = g_value_set_param_take_ownership$MH();
        try {
            mh$.invokeExact(value, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_default_value$MH() {
        return RuntimeHelper.requireNonNull(constants$582.const$0,"g_param_spec_get_default_value");
    }
    /**
     * {@snippet :
     * struct _GValue* g_param_spec_get_default_value(struct _GParamSpec* pspec);
     * }
     */
    public static MemorySegment g_param_spec_get_default_value(MemorySegment pspec) {
        var mh$ = g_param_spec_get_default_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_name_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$582.const$1,"g_param_spec_get_name_quark");
    }
    /**
     * {@snippet :
     * unsigned int g_param_spec_get_name_quark(struct _GParamSpec* pspec);
     * }
     */
    public static int g_param_spec_get_name_quark(MemorySegment pspec) {
        var mh$ = g_param_spec_get_name_quark$MH();
        try {
            return (int)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_type_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$584.const$4,"g_param_type_register_static");
    }
    /**
     * {@snippet :
     * unsigned long g_param_type_register_static(char* name, struct _GParamSpecTypeInfo* pspec_info);
     * }
     */
    public static long g_param_type_register_static(MemorySegment name, MemorySegment pspec_info) {
        var mh$ = g_param_type_register_static$MH();
        try {
            return (long)mh$.invokeExact(name, pspec_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_is_valid_name$MH() {
        return RuntimeHelper.requireNonNull(constants$584.const$5,"g_param_spec_is_valid_name");
    }
    /**
     * {@snippet :
     * int g_param_spec_is_valid_name(char* name);
     * }
     */
    public static int g_param_spec_is_valid_name(MemorySegment name) {
        var mh$ = g_param_spec_is_valid_name$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _g_param_type_register_static_constant$MH() {
        return RuntimeHelper.requireNonNull(constants$585.const$0,"_g_param_type_register_static_constant");
    }
    /**
     * {@snippet :
     * unsigned long _g_param_type_register_static_constant(char* name, struct _GParamSpecTypeInfo* pspec_info, unsigned long opt_type);
     * }
     */
    public static long _g_param_type_register_static_constant(MemorySegment name, MemorySegment pspec_info, long opt_type) {
        var mh$ = _g_param_type_register_static_constant$MH();
        try {
            return (long)mh$.invokeExact(name, pspec_info, opt_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_internal$MH() {
        return RuntimeHelper.requireNonNull(constants$585.const$2,"g_param_spec_internal");
    }
    /**
     * {@snippet :
     * void* g_param_spec_internal(unsigned long param_type, char* name, char* nick, char* blurb, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_internal(long param_type, MemorySegment name, MemorySegment nick, MemorySegment blurb, int flags) {
        var mh$ = g_param_spec_internal$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(param_type, name, nick, blurb, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_new$MH() {
        return RuntimeHelper.requireNonNull(constants$585.const$3,"g_param_spec_pool_new");
    }
    /**
     * {@snippet :
     * struct _GParamSpecPool* g_param_spec_pool_new(int type_prefixing);
     * }
     */
    public static MemorySegment g_param_spec_pool_new(int type_prefixing) {
        var mh$ = g_param_spec_pool_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type_prefixing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$585.const$4,"g_param_spec_pool_insert");
    }
    /**
     * {@snippet :
     * void g_param_spec_pool_insert(struct _GParamSpecPool* pool, struct _GParamSpec* pspec, unsigned long owner_type);
     * }
     */
    public static void g_param_spec_pool_insert(MemorySegment pool, MemorySegment pspec, long owner_type) {
        var mh$ = g_param_spec_pool_insert$MH();
        try {
            mh$.invokeExact(pool, pspec, owner_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$585.const$5,"g_param_spec_pool_remove");
    }
    /**
     * {@snippet :
     * void g_param_spec_pool_remove(struct _GParamSpecPool* pool, struct _GParamSpec* pspec);
     * }
     */
    public static void g_param_spec_pool_remove(MemorySegment pool, MemorySegment pspec) {
        var mh$ = g_param_spec_pool_remove$MH();
        try {
            mh$.invokeExact(pool, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$586.const$1,"g_param_spec_pool_lookup");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_pool_lookup(struct _GParamSpecPool* pool, char* param_name, unsigned long owner_type, int walk_ancestors);
     * }
     */
    public static MemorySegment g_param_spec_pool_lookup(MemorySegment pool, MemorySegment param_name, long owner_type, int walk_ancestors) {
        var mh$ = g_param_spec_pool_lookup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pool, param_name, owner_type, walk_ancestors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_list_owned$MH() {
        return RuntimeHelper.requireNonNull(constants$586.const$2,"g_param_spec_pool_list_owned");
    }
    /**
     * {@snippet :
     * struct _GList* g_param_spec_pool_list_owned(struct _GParamSpecPool* pool, unsigned long owner_type);
     * }
     */
    public static MemorySegment g_param_spec_pool_list_owned(MemorySegment pool, long owner_type) {
        var mh$ = g_param_spec_pool_list_owned$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pool, owner_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_list$MH() {
        return RuntimeHelper.requireNonNull(constants$586.const$3,"g_param_spec_pool_list");
    }
    /**
     * {@snippet :
     * struct _GParamSpec** g_param_spec_pool_list(struct _GParamSpecPool* pool, unsigned long owner_type, unsigned int* n_pspecs_p);
     * }
     */
    public static MemorySegment g_param_spec_pool_list(MemorySegment pool, long owner_type, MemorySegment n_pspecs_p) {
        var mh$ = g_param_spec_pool_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pool, owner_type, n_pspecs_p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_new$MH() {
        return RuntimeHelper.requireNonNull(constants$590.const$1,"g_cclosure_new");
    }
    /**
     * {@snippet :
     * struct _GClosure* g_cclosure_new(void (*callback_func)(), void* user_data, void (*destroy_data)(void*,struct _GClosure*));
     * }
     */
    public static MemorySegment g_cclosure_new(MemorySegment callback_func, MemorySegment user_data, MemorySegment destroy_data) {
        var mh$ = g_cclosure_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(callback_func, user_data, destroy_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_new_swap$MH() {
        return RuntimeHelper.requireNonNull(constants$590.const$4,"g_cclosure_new_swap");
    }
    /**
     * {@snippet :
     * struct _GClosure* g_cclosure_new_swap(void (*callback_func)(), void* user_data, void (*destroy_data)(void*,struct _GClosure*));
     * }
     */
    public static MemorySegment g_cclosure_new_swap(MemorySegment callback_func, MemorySegment user_data, MemorySegment destroy_data) {
        var mh$ = g_cclosure_new_swap$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(callback_func, user_data, destroy_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_type_cclosure_new$MH() {
        return RuntimeHelper.requireNonNull(constants$590.const$5,"g_signal_type_cclosure_new");
    }
    /**
     * {@snippet :
     * struct _GClosure* g_signal_type_cclosure_new(unsigned long itype, unsigned int struct_offset);
     * }
     */
    public static MemorySegment g_signal_type_cclosure_new(long itype, int struct_offset) {
        var mh$ = g_signal_type_cclosure_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(itype, struct_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$591.const$0,"g_closure_ref");
    }
    /**
     * {@snippet :
     * struct _GClosure* g_closure_ref(struct _GClosure* closure);
     * }
     */
    public static MemorySegment g_closure_ref(MemorySegment closure) {
        var mh$ = g_closure_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_sink$MH() {
        return RuntimeHelper.requireNonNull(constants$591.const$1,"g_closure_sink");
    }
    /**
     * {@snippet :
     * void g_closure_sink(struct _GClosure* closure);
     * }
     */
    public static void g_closure_sink(MemorySegment closure) {
        var mh$ = g_closure_sink$MH();
        try {
            mh$.invokeExact(closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$591.const$2,"g_closure_unref");
    }
    /**
     * {@snippet :
     * void g_closure_unref(struct _GClosure* closure);
     * }
     */
    public static void g_closure_unref(MemorySegment closure) {
        var mh$ = g_closure_unref$MH();
        try {
            mh$.invokeExact(closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_new_simple$MH() {
        return RuntimeHelper.requireNonNull(constants$591.const$3,"g_closure_new_simple");
    }
    /**
     * {@snippet :
     * struct _GClosure* g_closure_new_simple(unsigned int sizeof_closure, void* data);
     * }
     */
    public static MemorySegment g_closure_new_simple(int sizeof_closure, MemorySegment data) {
        var mh$ = g_closure_new_simple$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(sizeof_closure, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_add_finalize_notifier$MH() {
        return RuntimeHelper.requireNonNull(constants$591.const$5,"g_closure_add_finalize_notifier");
    }
    /**
     * {@snippet :
     * void g_closure_add_finalize_notifier(struct _GClosure* closure, void* notify_data, void (*notify_func)(void*,struct _GClosure*));
     * }
     */
    public static void g_closure_add_finalize_notifier(MemorySegment closure, MemorySegment notify_data, MemorySegment notify_func) {
        var mh$ = g_closure_add_finalize_notifier$MH();
        try {
            mh$.invokeExact(closure, notify_data, notify_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_remove_finalize_notifier$MH() {
        return RuntimeHelper.requireNonNull(constants$592.const$1,"g_closure_remove_finalize_notifier");
    }
    /**
     * {@snippet :
     * void g_closure_remove_finalize_notifier(struct _GClosure* closure, void* notify_data, void (*notify_func)(void*,struct _GClosure*));
     * }
     */
    public static void g_closure_remove_finalize_notifier(MemorySegment closure, MemorySegment notify_data, MemorySegment notify_func) {
        var mh$ = g_closure_remove_finalize_notifier$MH();
        try {
            mh$.invokeExact(closure, notify_data, notify_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_add_invalidate_notifier$MH() {
        return RuntimeHelper.requireNonNull(constants$592.const$3,"g_closure_add_invalidate_notifier");
    }
    /**
     * {@snippet :
     * void g_closure_add_invalidate_notifier(struct _GClosure* closure, void* notify_data, void (*notify_func)(void*,struct _GClosure*));
     * }
     */
    public static void g_closure_add_invalidate_notifier(MemorySegment closure, MemorySegment notify_data, MemorySegment notify_func) {
        var mh$ = g_closure_add_invalidate_notifier$MH();
        try {
            mh$.invokeExact(closure, notify_data, notify_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_remove_invalidate_notifier$MH() {
        return RuntimeHelper.requireNonNull(constants$592.const$5,"g_closure_remove_invalidate_notifier");
    }
    /**
     * {@snippet :
     * void g_closure_remove_invalidate_notifier(struct _GClosure* closure, void* notify_data, void (*notify_func)(void*,struct _GClosure*));
     * }
     */
    public static void g_closure_remove_invalidate_notifier(MemorySegment closure, MemorySegment notify_data, MemorySegment notify_func) {
        var mh$ = g_closure_remove_invalidate_notifier$MH();
        try {
            mh$.invokeExact(closure, notify_data, notify_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_add_marshal_guards$MH() {
        return RuntimeHelper.requireNonNull(constants$593.const$2,"g_closure_add_marshal_guards");
    }
    /**
     * {@snippet :
     * void g_closure_add_marshal_guards(struct _GClosure* closure, void* pre_marshal_data, void (*pre_marshal_notify)(void*,struct _GClosure*), void* post_marshal_data, void (*post_marshal_notify)(void*,struct _GClosure*));
     * }
     */
    public static void g_closure_add_marshal_guards(MemorySegment closure, MemorySegment pre_marshal_data, MemorySegment pre_marshal_notify, MemorySegment post_marshal_data, MemorySegment post_marshal_notify) {
        var mh$ = g_closure_add_marshal_guards$MH();
        try {
            mh$.invokeExact(closure, pre_marshal_data, pre_marshal_notify, post_marshal_data, post_marshal_notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_set_marshal$MH() {
        return RuntimeHelper.requireNonNull(constants$593.const$4,"g_closure_set_marshal");
    }
    /**
     * {@snippet :
     * void g_closure_set_marshal(struct _GClosure* closure, void (*marshal)(struct _GClosure*,struct _GValue*,unsigned int,struct _GValue*,void*,void*));
     * }
     */
    public static void g_closure_set_marshal(MemorySegment closure, MemorySegment marshal) {
        var mh$ = g_closure_set_marshal$MH();
        try {
            mh$.invokeExact(closure, marshal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_set_meta_marshal$MH() {
        return RuntimeHelper.requireNonNull(constants$594.const$0,"g_closure_set_meta_marshal");
    }
    /**
     * {@snippet :
     * void g_closure_set_meta_marshal(struct _GClosure* closure, void* marshal_data, void (*meta_marshal)(struct _GClosure*,struct _GValue*,unsigned int,struct _GValue*,void*,void*));
     * }
     */
    public static void g_closure_set_meta_marshal(MemorySegment closure, MemorySegment marshal_data, MemorySegment meta_marshal) {
        var mh$ = g_closure_set_meta_marshal$MH();
        try {
            mh$.invokeExact(closure, marshal_data, meta_marshal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_invalidate$MH() {
        return RuntimeHelper.requireNonNull(constants$594.const$1,"g_closure_invalidate");
    }
    /**
     * {@snippet :
     * void g_closure_invalidate(struct _GClosure* closure);
     * }
     */
    public static void g_closure_invalidate(MemorySegment closure) {
        var mh$ = g_closure_invalidate$MH();
        try {
            mh$.invokeExact(closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_invoke$MH() {
        return RuntimeHelper.requireNonNull(constants$594.const$2,"g_closure_invoke");
    }
    /**
     * {@snippet :
     * void g_closure_invoke(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint);
     * }
     */
    public static void g_closure_invoke(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint) {
        var mh$ = g_closure_invoke$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_generic$MH() {
        return RuntimeHelper.requireNonNull(constants$594.const$3,"g_cclosure_marshal_generic");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_generic(struct _GClosure* closure, struct _GValue* return_gvalue, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_generic(MemorySegment closure, MemorySegment return_gvalue, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_generic$MH();
        try {
            mh$.invokeExact(closure, return_gvalue, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_generic_va$MH() {
        return RuntimeHelper.requireNonNull(constants$594.const$4,"g_cclosure_marshal_generic_va");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_generic_va(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args_list, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_generic_va(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args_list, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_generic_va$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args_list, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__VOID$MH() {
        return RuntimeHelper.requireNonNull(constants$594.const$5,"g_cclosure_marshal_VOID__VOID");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__VOID(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__VOID(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__VOID$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__VOIDv$MH() {
        return RuntimeHelper.requireNonNull(constants$595.const$0,"g_cclosure_marshal_VOID__VOIDv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__VOIDv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__VOIDv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__VOIDv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__BOOLEAN$MH() {
        return RuntimeHelper.requireNonNull(constants$595.const$1,"g_cclosure_marshal_VOID__BOOLEAN");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__BOOLEAN(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__BOOLEAN(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__BOOLEAN$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__BOOLEANv$MH() {
        return RuntimeHelper.requireNonNull(constants$595.const$2,"g_cclosure_marshal_VOID__BOOLEANv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__BOOLEANv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__BOOLEANv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__BOOLEANv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__CHAR$MH() {
        return RuntimeHelper.requireNonNull(constants$595.const$3,"g_cclosure_marshal_VOID__CHAR");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__CHAR(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__CHAR(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__CHAR$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__CHARv$MH() {
        return RuntimeHelper.requireNonNull(constants$595.const$4,"g_cclosure_marshal_VOID__CHARv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__CHARv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__CHARv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__CHARv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UCHAR$MH() {
        return RuntimeHelper.requireNonNull(constants$595.const$5,"g_cclosure_marshal_VOID__UCHAR");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__UCHAR(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__UCHAR(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__UCHAR$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UCHARv$MH() {
        return RuntimeHelper.requireNonNull(constants$596.const$0,"g_cclosure_marshal_VOID__UCHARv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__UCHARv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__UCHARv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__UCHARv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__INT$MH() {
        return RuntimeHelper.requireNonNull(constants$596.const$1,"g_cclosure_marshal_VOID__INT");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__INT(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__INT(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__INT$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__INTv$MH() {
        return RuntimeHelper.requireNonNull(constants$596.const$2,"g_cclosure_marshal_VOID__INTv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__INTv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__INTv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__INTv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UINT$MH() {
        return RuntimeHelper.requireNonNull(constants$596.const$3,"g_cclosure_marshal_VOID__UINT");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__UINT(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__UINT(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__UINT$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UINTv$MH() {
        return RuntimeHelper.requireNonNull(constants$596.const$4,"g_cclosure_marshal_VOID__UINTv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__UINTv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__UINTv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__UINTv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__LONG$MH() {
        return RuntimeHelper.requireNonNull(constants$596.const$5,"g_cclosure_marshal_VOID__LONG");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__LONG(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__LONG(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__LONG$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__LONGv$MH() {
        return RuntimeHelper.requireNonNull(constants$597.const$0,"g_cclosure_marshal_VOID__LONGv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__LONGv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__LONGv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__LONGv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__ULONG$MH() {
        return RuntimeHelper.requireNonNull(constants$597.const$1,"g_cclosure_marshal_VOID__ULONG");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__ULONG(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__ULONG(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__ULONG$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__ULONGv$MH() {
        return RuntimeHelper.requireNonNull(constants$597.const$2,"g_cclosure_marshal_VOID__ULONGv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__ULONGv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__ULONGv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__ULONGv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__ENUM$MH() {
        return RuntimeHelper.requireNonNull(constants$597.const$3,"g_cclosure_marshal_VOID__ENUM");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__ENUM(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__ENUM(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__ENUM$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__ENUMv$MH() {
        return RuntimeHelper.requireNonNull(constants$597.const$4,"g_cclosure_marshal_VOID__ENUMv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__ENUMv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__ENUMv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__ENUMv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__FLAGS$MH() {
        return RuntimeHelper.requireNonNull(constants$597.const$5,"g_cclosure_marshal_VOID__FLAGS");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__FLAGS(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__FLAGS(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__FLAGS$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__FLAGSv$MH() {
        return RuntimeHelper.requireNonNull(constants$598.const$0,"g_cclosure_marshal_VOID__FLAGSv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__FLAGSv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__FLAGSv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__FLAGSv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__FLOAT$MH() {
        return RuntimeHelper.requireNonNull(constants$598.const$1,"g_cclosure_marshal_VOID__FLOAT");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__FLOAT(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__FLOAT(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__FLOAT$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__FLOATv$MH() {
        return RuntimeHelper.requireNonNull(constants$598.const$2,"g_cclosure_marshal_VOID__FLOATv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__FLOATv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__FLOATv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__FLOATv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__DOUBLE$MH() {
        return RuntimeHelper.requireNonNull(constants$598.const$3,"g_cclosure_marshal_VOID__DOUBLE");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__DOUBLE(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__DOUBLE(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__DOUBLE$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__DOUBLEv$MH() {
        return RuntimeHelper.requireNonNull(constants$598.const$4,"g_cclosure_marshal_VOID__DOUBLEv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__DOUBLEv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__DOUBLEv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__DOUBLEv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__STRING$MH() {
        return RuntimeHelper.requireNonNull(constants$598.const$5,"g_cclosure_marshal_VOID__STRING");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__STRING(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__STRING(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__STRING$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__STRINGv$MH() {
        return RuntimeHelper.requireNonNull(constants$599.const$0,"g_cclosure_marshal_VOID__STRINGv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__STRINGv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__STRINGv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__STRINGv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__PARAM$MH() {
        return RuntimeHelper.requireNonNull(constants$599.const$1,"g_cclosure_marshal_VOID__PARAM");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__PARAM(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__PARAM(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__PARAM$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__PARAMv$MH() {
        return RuntimeHelper.requireNonNull(constants$599.const$2,"g_cclosure_marshal_VOID__PARAMv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__PARAMv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__PARAMv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__PARAMv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__BOXED$MH() {
        return RuntimeHelper.requireNonNull(constants$599.const$3,"g_cclosure_marshal_VOID__BOXED");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__BOXED(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__BOXED(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__BOXED$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__BOXEDv$MH() {
        return RuntimeHelper.requireNonNull(constants$599.const$4,"g_cclosure_marshal_VOID__BOXEDv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__BOXEDv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__BOXEDv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__BOXEDv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__POINTER$MH() {
        return RuntimeHelper.requireNonNull(constants$599.const$5,"g_cclosure_marshal_VOID__POINTER");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__POINTER(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__POINTER(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__POINTER$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__POINTERv$MH() {
        return RuntimeHelper.requireNonNull(constants$600.const$0,"g_cclosure_marshal_VOID__POINTERv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__POINTERv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__POINTERv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__POINTERv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__OBJECT$MH() {
        return RuntimeHelper.requireNonNull(constants$600.const$1,"g_cclosure_marshal_VOID__OBJECT");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__OBJECT(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__OBJECT(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__OBJECT$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__OBJECTv$MH() {
        return RuntimeHelper.requireNonNull(constants$600.const$2,"g_cclosure_marshal_VOID__OBJECTv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__OBJECTv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__OBJECTv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__OBJECTv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__VARIANT$MH() {
        return RuntimeHelper.requireNonNull(constants$600.const$3,"g_cclosure_marshal_VOID__VARIANT");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__VARIANT(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__VARIANT(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__VARIANT$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__VARIANTv$MH() {
        return RuntimeHelper.requireNonNull(constants$600.const$4,"g_cclosure_marshal_VOID__VARIANTv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__VARIANTv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__VARIANTv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__VARIANTv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UINT_POINTER$MH() {
        return RuntimeHelper.requireNonNull(constants$600.const$5,"g_cclosure_marshal_VOID__UINT_POINTER");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__UINT_POINTER(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__UINT_POINTER(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__UINT_POINTER$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UINT_POINTERv$MH() {
        return RuntimeHelper.requireNonNull(constants$601.const$0,"g_cclosure_marshal_VOID__UINT_POINTERv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__UINT_POINTERv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__UINT_POINTERv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__UINT_POINTERv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_BOOLEAN__FLAGS$MH() {
        return RuntimeHelper.requireNonNull(constants$601.const$1,"g_cclosure_marshal_BOOLEAN__FLAGS");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_BOOLEAN__FLAGS(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_BOOLEAN__FLAGS(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_BOOLEAN__FLAGS$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_BOOLEAN__FLAGSv$MH() {
        return RuntimeHelper.requireNonNull(constants$601.const$2,"g_cclosure_marshal_BOOLEAN__FLAGSv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_BOOLEAN__FLAGSv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_BOOLEAN__FLAGSv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_BOOLEAN__FLAGSv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_STRING__OBJECT_POINTER$MH() {
        return RuntimeHelper.requireNonNull(constants$601.const$3,"g_cclosure_marshal_STRING__OBJECT_POINTER");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_STRING__OBJECT_POINTER(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_STRING__OBJECT_POINTER(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_STRING__OBJECT_POINTER$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_STRING__OBJECT_POINTERv$MH() {
        return RuntimeHelper.requireNonNull(constants$601.const$4,"g_cclosure_marshal_STRING__OBJECT_POINTERv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_STRING__OBJECT_POINTERv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_STRING__OBJECT_POINTERv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_STRING__OBJECT_POINTERv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_BOOLEAN__BOXED_BOXED$MH() {
        return RuntimeHelper.requireNonNull(constants$601.const$5,"g_cclosure_marshal_BOOLEAN__BOXED_BOXED");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_BOOLEAN__BOXED_BOXED(struct _GClosure* closure, struct _GValue* return_value, unsigned int n_param_values, struct _GValue* param_values, void* invocation_hint, void* marshal_data);
     * }
     */
    public static void g_cclosure_marshal_BOOLEAN__BOXED_BOXED(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_BOOLEAN__BOXED_BOXED$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv$MH() {
        return RuntimeHelper.requireNonNull(constants$602.const$0,"g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv(struct _GClosure* closure, struct _GValue* return_value, void* instance, struct __va_list args, void* marshal_data, int n_params, unsigned long* param_types);
     * }
     */
    public static void g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GSignalFlags.G_SIGNAL_RUN_FIRST = 1;
     * }
     */
    public static int G_SIGNAL_RUN_FIRST() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GSignalFlags.G_SIGNAL_RUN_LAST = 2;
     * }
     */
    public static int G_SIGNAL_RUN_LAST() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GSignalFlags.G_SIGNAL_RUN_CLEANUP = 4;
     * }
     */
    public static int G_SIGNAL_RUN_CLEANUP() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GSignalFlags.G_SIGNAL_NO_RECURSE = 8;
     * }
     */
    public static int G_SIGNAL_NO_RECURSE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GSignalFlags.G_SIGNAL_DETAILED = 16;
     * }
     */
    public static int G_SIGNAL_DETAILED() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GSignalFlags.G_SIGNAL_ACTION = 32;
     * }
     */
    public static int G_SIGNAL_ACTION() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GSignalFlags.G_SIGNAL_NO_HOOKS = 64;
     * }
     */
    public static int G_SIGNAL_NO_HOOKS() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum GSignalFlags.G_SIGNAL_MUST_COLLECT = 128;
     * }
     */
    public static int G_SIGNAL_MUST_COLLECT() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum GSignalFlags.G_SIGNAL_DEPRECATED = 256;
     * }
     */
    public static int G_SIGNAL_DEPRECATED() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum GSignalFlags.G_SIGNAL_ACCUMULATOR_FIRST_RUN = 131072;
     * }
     */
    public static int G_SIGNAL_ACCUMULATOR_FIRST_RUN() {
        return (int)131072L;
    }
    /**
     * {@snippet :
     * enum GConnectFlags.G_CONNECT_DEFAULT = 0;
     * }
     */
    public static int G_CONNECT_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GConnectFlags.G_CONNECT_AFTER = 1;
     * }
     */
    public static int G_CONNECT_AFTER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GConnectFlags.G_CONNECT_SWAPPED = 2;
     * }
     */
    public static int G_CONNECT_SWAPPED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GSignalMatchType.G_SIGNAL_MATCH_ID = 1;
     * }
     */
    public static int G_SIGNAL_MATCH_ID() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GSignalMatchType.G_SIGNAL_MATCH_DETAIL = 2;
     * }
     */
    public static int G_SIGNAL_MATCH_DETAIL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GSignalMatchType.G_SIGNAL_MATCH_CLOSURE = 4;
     * }
     */
    public static int G_SIGNAL_MATCH_CLOSURE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GSignalMatchType.G_SIGNAL_MATCH_FUNC = 8;
     * }
     */
    public static int G_SIGNAL_MATCH_FUNC() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GSignalMatchType.G_SIGNAL_MATCH_DATA = 16;
     * }
     */
    public static int G_SIGNAL_MATCH_DATA() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GSignalMatchType.G_SIGNAL_MATCH_UNBLOCKED = 32;
     * }
     */
    public static int G_SIGNAL_MATCH_UNBLOCKED() {
        return (int)32L;
    }
    public static MethodHandle g_signal_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$605.const$2,"g_signal_newv");
    }
    /**
     * {@snippet :
     * unsigned int g_signal_newv(char* signal_name, unsigned long itype, enum GSignalFlags signal_flags, struct _GClosure* class_closure, int (*accumulator)(struct _GSignalInvocationHint*,struct _GValue*,struct _GValue*,void*), void* accu_data, void (*c_marshaller)(struct _GClosure*,struct _GValue*,unsigned int,struct _GValue*,void*,void*), unsigned long return_type, unsigned int n_params, unsigned long* param_types);
     * }
     */
    public static int g_signal_newv(MemorySegment signal_name, long itype, int signal_flags, MemorySegment class_closure, MemorySegment accumulator, MemorySegment accu_data, MemorySegment c_marshaller, long return_type, int n_params, MemorySegment param_types) {
        var mh$ = g_signal_newv$MH();
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_closure, accumulator, accu_data, c_marshaller, return_type, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_new_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$605.const$6,"g_signal_new_valist");
    }
    /**
     * {@snippet :
     * unsigned int g_signal_new_valist(char* signal_name, unsigned long itype, enum GSignalFlags signal_flags, struct _GClosure* class_closure, int (*accumulator)(struct _GSignalInvocationHint*,struct _GValue*,struct _GValue*,void*), void* accu_data, void (*c_marshaller)(struct _GClosure*,struct _GValue*,unsigned int,struct _GValue*,void*,void*), unsigned long return_type, unsigned int n_params, struct __va_list args);
     * }
     */
    public static int g_signal_new_valist(MemorySegment signal_name, long itype, int signal_flags, MemorySegment class_closure, MemorySegment accumulator, MemorySegment accu_data, MemorySegment c_marshaller, long return_type, int n_params, MemorySegment args) {
        var mh$ = g_signal_new_valist$MH();
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_closure, accumulator, accu_data, c_marshaller, return_type, n_params, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_new$MH() {
        return RuntimeHelper.requireNonNull(constants$606.const$3,"g_signal_new");
    }
    /**
     * {@snippet :
     * unsigned int g_signal_new(char* signal_name, unsigned long itype, enum GSignalFlags signal_flags, unsigned int class_offset, int (*accumulator)(struct _GSignalInvocationHint*,struct _GValue*,struct _GValue*,void*), void* accu_data, void (*c_marshaller)(struct _GClosure*,struct _GValue*,unsigned int,struct _GValue*,void*,void*), unsigned long return_type, unsigned int n_params,...);
     * }
     */
    public static int g_signal_new(MemorySegment signal_name, long itype, int signal_flags, int class_offset, MemorySegment accumulator, MemorySegment accu_data, MemorySegment c_marshaller, long return_type, int n_params, Object... x9) {
        var mh$ = g_signal_new$MH();
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_offset, accumulator, accu_data, c_marshaller, return_type, n_params, x9);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_new_class_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$607.const$2,"g_signal_new_class_handler");
    }
    /**
     * {@snippet :
     * unsigned int g_signal_new_class_handler(char* signal_name, unsigned long itype, enum GSignalFlags signal_flags, void (*class_handler)(), int (*accumulator)(struct _GSignalInvocationHint*,struct _GValue*,struct _GValue*,void*), void* accu_data, void (*c_marshaller)(struct _GClosure*,struct _GValue*,unsigned int,struct _GValue*,void*,void*), unsigned long return_type, unsigned int n_params,...);
     * }
     */
    public static int g_signal_new_class_handler(MemorySegment signal_name, long itype, int signal_flags, MemorySegment class_handler, MemorySegment accumulator, MemorySegment accu_data, MemorySegment c_marshaller, long return_type, int n_params, Object... x9) {
        var mh$ = g_signal_new_class_handler$MH();
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_handler, accumulator, accu_data, c_marshaller, return_type, n_params, x9);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_set_va_marshaller$MH() {
        return RuntimeHelper.requireNonNull(constants$607.const$5,"g_signal_set_va_marshaller");
    }
    /**
     * {@snippet :
     * void g_signal_set_va_marshaller(unsigned int signal_id, unsigned long instance_type, void (*va_marshaller)(struct _GClosure*,struct _GValue*,void*,struct __va_list,void*,int,unsigned long*));
     * }
     */
    public static void g_signal_set_va_marshaller(int signal_id, long instance_type, MemorySegment va_marshaller) {
        var mh$ = g_signal_set_va_marshaller$MH();
        try {
            mh$.invokeExact(signal_id, instance_type, va_marshaller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emitv$MH() {
        return RuntimeHelper.requireNonNull(constants$608.const$0,"g_signal_emitv");
    }
    /**
     * {@snippet :
     * void g_signal_emitv(struct _GValue* instance_and_params, unsigned int signal_id, unsigned int detail, struct _GValue* return_value);
     * }
     */
    public static void g_signal_emitv(MemorySegment instance_and_params, int signal_id, int detail, MemorySegment return_value) {
        var mh$ = g_signal_emitv$MH();
        try {
            mh$.invokeExact(instance_and_params, signal_id, detail, return_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emit_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$608.const$2,"g_signal_emit_valist");
    }
    /**
     * {@snippet :
     * void g_signal_emit_valist(void* instance, unsigned int signal_id, unsigned int detail, struct __va_list var_args);
     * }
     */
    public static void g_signal_emit_valist(MemorySegment instance, int signal_id, int detail, MemorySegment var_args) {
        var mh$ = g_signal_emit_valist$MH();
        try {
            mh$.invokeExact(instance, signal_id, detail, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emit$MH() {
        return RuntimeHelper.requireNonNull(constants$608.const$3,"g_signal_emit");
    }
    /**
     * {@snippet :
     * void g_signal_emit(void* instance, unsigned int signal_id, unsigned int detail,...);
     * }
     */
    public static void g_signal_emit(MemorySegment instance, int signal_id, int detail, Object... x3) {
        var mh$ = g_signal_emit$MH();
        try {
            mh$.invokeExact(instance, signal_id, detail, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emit_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$608.const$4,"g_signal_emit_by_name");
    }
    /**
     * {@snippet :
     * void g_signal_emit_by_name(void* instance, char* detailed_signal,...);
     * }
     */
    public static void g_signal_emit_by_name(MemorySegment instance, MemorySegment detailed_signal, Object... x2) {
        var mh$ = g_signal_emit_by_name$MH();
        try {
            mh$.invokeExact(instance, detailed_signal, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$608.const$5,"g_signal_lookup");
    }
    /**
     * {@snippet :
     * unsigned int g_signal_lookup(char* name, unsigned long itype);
     * }
     */
    public static int g_signal_lookup(MemorySegment name, long itype) {
        var mh$ = g_signal_lookup$MH();
        try {
            return (int)mh$.invokeExact(name, itype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_name$MH() {
        return RuntimeHelper.requireNonNull(constants$609.const$0,"g_signal_name");
    }
    /**
     * {@snippet :
     * char* g_signal_name(unsigned int signal_id);
     * }
     */
    public static MemorySegment g_signal_name(int signal_id) {
        var mh$ = g_signal_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(signal_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_query$MH() {
        return RuntimeHelper.requireNonNull(constants$609.const$1,"g_signal_query");
    }
    /**
     * {@snippet :
     * void g_signal_query(unsigned int signal_id, struct _GSignalQuery* query);
     * }
     */
    public static void g_signal_query(int signal_id, MemorySegment query) {
        var mh$ = g_signal_query$MH();
        try {
            mh$.invokeExact(signal_id, query);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_list_ids$MH() {
        return RuntimeHelper.requireNonNull(constants$609.const$2,"g_signal_list_ids");
    }
    /**
     * {@snippet :
     * unsigned int* g_signal_list_ids(unsigned long itype, unsigned int* n_ids);
     * }
     */
    public static MemorySegment g_signal_list_ids(long itype, MemorySegment n_ids) {
        var mh$ = g_signal_list_ids$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(itype, n_ids);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_is_valid_name$MH() {
        return RuntimeHelper.requireNonNull(constants$609.const$3,"g_signal_is_valid_name");
    }
    /**
     * {@snippet :
     * int g_signal_is_valid_name(char* name);
     * }
     */
    public static int g_signal_is_valid_name(MemorySegment name) {
        var mh$ = g_signal_is_valid_name$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_parse_name$MH() {
        return RuntimeHelper.requireNonNull(constants$609.const$5,"g_signal_parse_name");
    }
    /**
     * {@snippet :
     * int g_signal_parse_name(char* detailed_signal, unsigned long itype, unsigned int* signal_id_p, unsigned int* detail_p, int force_detail_quark);
     * }
     */
    public static int g_signal_parse_name(MemorySegment detailed_signal, long itype, MemorySegment signal_id_p, MemorySegment detail_p, int force_detail_quark) {
        var mh$ = g_signal_parse_name$MH();
        try {
            return (int)mh$.invokeExact(detailed_signal, itype, signal_id_p, detail_p, force_detail_quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_get_invocation_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$610.const$0,"g_signal_get_invocation_hint");
    }
    /**
     * {@snippet :
     * struct _GSignalInvocationHint* g_signal_get_invocation_hint(void* instance);
     * }
     */
    public static MemorySegment g_signal_get_invocation_hint(MemorySegment instance) {
        var mh$ = g_signal_get_invocation_hint$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_stop_emission$MH() {
        return RuntimeHelper.requireNonNull(constants$610.const$1,"g_signal_stop_emission");
    }
    /**
     * {@snippet :
     * void g_signal_stop_emission(void* instance, unsigned int signal_id, unsigned int detail);
     * }
     */
    public static void g_signal_stop_emission(MemorySegment instance, int signal_id, int detail) {
        var mh$ = g_signal_stop_emission$MH();
        try {
            mh$.invokeExact(instance, signal_id, detail);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_stop_emission_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$610.const$2,"g_signal_stop_emission_by_name");
    }
    /**
     * {@snippet :
     * void g_signal_stop_emission_by_name(void* instance, char* detailed_signal);
     * }
     */
    public static void g_signal_stop_emission_by_name(MemorySegment instance, MemorySegment detailed_signal) {
        var mh$ = g_signal_stop_emission_by_name$MH();
        try {
            mh$.invokeExact(instance, detailed_signal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_add_emission_hook$MH() {
        return RuntimeHelper.requireNonNull(constants$610.const$6,"g_signal_add_emission_hook");
    }
    /**
     * {@snippet :
     * unsigned long g_signal_add_emission_hook(unsigned int signal_id, unsigned int detail, int (*hook_func)(struct _GSignalInvocationHint*,unsigned int,struct _GValue*,void*), void* hook_data, void (*data_destroy)(void*));
     * }
     */
    public static long g_signal_add_emission_hook(int signal_id, int detail, MemorySegment hook_func, MemorySegment hook_data, MemorySegment data_destroy) {
        var mh$ = g_signal_add_emission_hook$MH();
        try {
            return (long)mh$.invokeExact(signal_id, detail, hook_func, hook_data, data_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_remove_emission_hook$MH() {
        return RuntimeHelper.requireNonNull(constants$611.const$0,"g_signal_remove_emission_hook");
    }
    /**
     * {@snippet :
     * void g_signal_remove_emission_hook(unsigned int signal_id, unsigned long hook_id);
     * }
     */
    public static void g_signal_remove_emission_hook(int signal_id, long hook_id) {
        var mh$ = g_signal_remove_emission_hook$MH();
        try {
            mh$.invokeExact(signal_id, hook_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_has_handler_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$611.const$2,"g_signal_has_handler_pending");
    }
    /**
     * {@snippet :
     * int g_signal_has_handler_pending(void* instance, unsigned int signal_id, unsigned int detail, int may_be_blocked);
     * }
     */
    public static int g_signal_has_handler_pending(MemorySegment instance, int signal_id, int detail, int may_be_blocked) {
        var mh$ = g_signal_has_handler_pending$MH();
        try {
            return (int)mh$.invokeExact(instance, signal_id, detail, may_be_blocked);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_closure_by_id$MH() {
        return RuntimeHelper.requireNonNull(constants$611.const$4,"g_signal_connect_closure_by_id");
    }
    /**
     * {@snippet :
     * unsigned long g_signal_connect_closure_by_id(void* instance, unsigned int signal_id, unsigned int detail, struct _GClosure* closure, int after);
     * }
     */
    public static long g_signal_connect_closure_by_id(MemorySegment instance, int signal_id, int detail, MemorySegment closure, int after) {
        var mh$ = g_signal_connect_closure_by_id$MH();
        try {
            return (long)mh$.invokeExact(instance, signal_id, detail, closure, after);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$611.const$6,"g_signal_connect_closure");
    }
    /**
     * {@snippet :
     * unsigned long g_signal_connect_closure(void* instance, char* detailed_signal, struct _GClosure* closure, int after);
     * }
     */
    public static long g_signal_connect_closure(MemorySegment instance, MemorySegment detailed_signal, MemorySegment closure, int after) {
        var mh$ = g_signal_connect_closure$MH();
        try {
            return (long)mh$.invokeExact(instance, detailed_signal, closure, after);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_data$MH() {
        return RuntimeHelper.requireNonNull(constants$612.const$3,"g_signal_connect_data");
    }
    /**
     * {@snippet :
     * unsigned long g_signal_connect_data(void* instance, char* detailed_signal, void (*c_handler)(), void* data, void (*destroy_data)(void*,struct _GClosure*), enum GConnectFlags connect_flags);
     * }
     */
    public static long g_signal_connect_data(MemorySegment instance, MemorySegment detailed_signal, MemorySegment c_handler, MemorySegment data, MemorySegment destroy_data, int connect_flags) {
        var mh$ = g_signal_connect_data$MH();
        try {
            return (long)mh$.invokeExact(instance, detailed_signal, c_handler, data, destroy_data, connect_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_block$MH() {
        return RuntimeHelper.requireNonNull(constants$612.const$4,"g_signal_handler_block");
    }
    /**
     * {@snippet :
     * void g_signal_handler_block(void* instance, unsigned long handler_id);
     * }
     */
    public static void g_signal_handler_block(MemorySegment instance, long handler_id) {
        var mh$ = g_signal_handler_block$MH();
        try {
            mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_unblock$MH() {
        return RuntimeHelper.requireNonNull(constants$612.const$5,"g_signal_handler_unblock");
    }
    /**
     * {@snippet :
     * void g_signal_handler_unblock(void* instance, unsigned long handler_id);
     * }
     */
    public static void g_signal_handler_unblock(MemorySegment instance, long handler_id) {
        var mh$ = g_signal_handler_unblock$MH();
        try {
            mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$613.const$0,"g_signal_handler_disconnect");
    }
    /**
     * {@snippet :
     * void g_signal_handler_disconnect(void* instance, unsigned long handler_id);
     * }
     */
    public static void g_signal_handler_disconnect(MemorySegment instance, long handler_id) {
        var mh$ = g_signal_handler_disconnect$MH();
        try {
            mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_is_connected$MH() {
        return RuntimeHelper.requireNonNull(constants$613.const$1,"g_signal_handler_is_connected");
    }
    /**
     * {@snippet :
     * int g_signal_handler_is_connected(void* instance, unsigned long handler_id);
     * }
     */
    public static int g_signal_handler_is_connected(MemorySegment instance, long handler_id) {
        var mh$ = g_signal_handler_is_connected$MH();
        try {
            return (int)mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_find$MH() {
        return RuntimeHelper.requireNonNull(constants$613.const$3,"g_signal_handler_find");
    }
    /**
     * {@snippet :
     * unsigned long g_signal_handler_find(void* instance, enum GSignalMatchType mask, unsigned int signal_id, unsigned int detail, struct _GClosure* closure, void* func, void* data);
     * }
     */
    public static long g_signal_handler_find(MemorySegment instance, int mask, int signal_id, int detail, MemorySegment closure, MemorySegment func, MemorySegment data) {
        var mh$ = g_signal_handler_find$MH();
        try {
            return (long)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_block_matched$MH() {
        return RuntimeHelper.requireNonNull(constants$613.const$5,"g_signal_handlers_block_matched");
    }
    /**
     * {@snippet :
     * unsigned int g_signal_handlers_block_matched(void* instance, enum GSignalMatchType mask, unsigned int signal_id, unsigned int detail, struct _GClosure* closure, void* func, void* data);
     * }
     */
    public static int g_signal_handlers_block_matched(MemorySegment instance, int mask, int signal_id, int detail, MemorySegment closure, MemorySegment func, MemorySegment data) {
        var mh$ = g_signal_handlers_block_matched$MH();
        try {
            return (int)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_unblock_matched$MH() {
        return RuntimeHelper.requireNonNull(constants$614.const$0,"g_signal_handlers_unblock_matched");
    }
    /**
     * {@snippet :
     * unsigned int g_signal_handlers_unblock_matched(void* instance, enum GSignalMatchType mask, unsigned int signal_id, unsigned int detail, struct _GClosure* closure, void* func, void* data);
     * }
     */
    public static int g_signal_handlers_unblock_matched(MemorySegment instance, int mask, int signal_id, int detail, MemorySegment closure, MemorySegment func, MemorySegment data) {
        var mh$ = g_signal_handlers_unblock_matched$MH();
        try {
            return (int)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_disconnect_matched$MH() {
        return RuntimeHelper.requireNonNull(constants$614.const$1,"g_signal_handlers_disconnect_matched");
    }
    /**
     * {@snippet :
     * unsigned int g_signal_handlers_disconnect_matched(void* instance, enum GSignalMatchType mask, unsigned int signal_id, unsigned int detail, struct _GClosure* closure, void* func, void* data);
     * }
     */
    public static int g_signal_handlers_disconnect_matched(MemorySegment instance, int mask, int signal_id, int detail, MemorySegment closure, MemorySegment func, MemorySegment data) {
        var mh$ = g_signal_handlers_disconnect_matched$MH();
        try {
            return (int)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_signal_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$614.const$2,"g_clear_signal_handler");
    }
    /**
     * {@snippet :
     * void g_clear_signal_handler(unsigned long* handler_id_ptr, void* instance);
     * }
     */
    public static void g_clear_signal_handler(MemorySegment handler_id_ptr, MemorySegment instance) {
        var mh$ = g_clear_signal_handler$MH();
        try {
            mh$.invokeExact(handler_id_ptr, instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_override_class_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$614.const$3,"g_signal_override_class_closure");
    }
    /**
     * {@snippet :
     * void g_signal_override_class_closure(unsigned int signal_id, unsigned long instance_type, struct _GClosure* class_closure);
     * }
     */
    public static void g_signal_override_class_closure(int signal_id, long instance_type, MemorySegment class_closure) {
        var mh$ = g_signal_override_class_closure$MH();
        try {
            mh$.invokeExact(signal_id, instance_type, class_closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_override_class_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$614.const$5,"g_signal_override_class_handler");
    }
    /**
     * {@snippet :
     * void g_signal_override_class_handler(char* signal_name, unsigned long instance_type, void (*class_handler)());
     * }
     */
    public static void g_signal_override_class_handler(MemorySegment signal_name, long instance_type, MemorySegment class_handler) {
        var mh$ = g_signal_override_class_handler$MH();
        try {
            mh$.invokeExact(signal_name, instance_type, class_handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_chain_from_overridden$MH() {
        return RuntimeHelper.requireNonNull(constants$615.const$0,"g_signal_chain_from_overridden");
    }
    /**
     * {@snippet :
     * void g_signal_chain_from_overridden(struct _GValue* instance_and_params, struct _GValue* return_value);
     * }
     */
    public static void g_signal_chain_from_overridden(MemorySegment instance_and_params, MemorySegment return_value) {
        var mh$ = g_signal_chain_from_overridden$MH();
        try {
            mh$.invokeExact(instance_and_params, return_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_chain_from_overridden_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$615.const$1,"g_signal_chain_from_overridden_handler");
    }
    /**
     * {@snippet :
     * void g_signal_chain_from_overridden_handler(void* instance,...);
     * }
     */
    public static void g_signal_chain_from_overridden_handler(MemorySegment instance, Object... x1) {
        var mh$ = g_signal_chain_from_overridden_handler$MH();
        try {
            mh$.invokeExact(instance, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_accumulator_true_handled$MH() {
        return RuntimeHelper.requireNonNull(constants$615.const$2,"g_signal_accumulator_true_handled");
    }
    /**
     * {@snippet :
     * int g_signal_accumulator_true_handled(struct _GSignalInvocationHint* ihint, struct _GValue* return_accu, struct _GValue* handler_return, void* dummy);
     * }
     */
    public static int g_signal_accumulator_true_handled(MemorySegment ihint, MemorySegment return_accu, MemorySegment handler_return, MemorySegment dummy) {
        var mh$ = g_signal_accumulator_true_handled$MH();
        try {
            return (int)mh$.invokeExact(ihint, return_accu, handler_return, dummy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_accumulator_first_wins$MH() {
        return RuntimeHelper.requireNonNull(constants$615.const$3,"g_signal_accumulator_first_wins");
    }
    /**
     * {@snippet :
     * int g_signal_accumulator_first_wins(struct _GSignalInvocationHint* ihint, struct _GValue* return_accu, struct _GValue* handler_return, void* dummy);
     * }
     */
    public static int g_signal_accumulator_first_wins(MemorySegment ihint, MemorySegment return_accu, MemorySegment handler_return, MemorySegment dummy) {
        var mh$ = g_signal_accumulator_first_wins$MH();
        try {
            return (int)mh$.invokeExact(ihint, return_accu, handler_return, dummy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$615.const$4,"g_signal_handlers_destroy");
    }
    /**
     * {@snippet :
     * void g_signal_handlers_destroy(void* instance);
     * }
     */
    public static void g_signal_handlers_destroy(MemorySegment instance) {
        var mh$ = g_signal_handlers_destroy$MH();
        try {
            mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _g_signals_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$615.const$5,"_g_signals_destroy");
    }
    /**
     * {@snippet :
     * void _g_signals_destroy(unsigned long itype);
     * }
     */
    public static void _g_signals_destroy(long itype) {
        var mh$ = _g_signals_destroy$MH();
        try {
            mh$.invokeExact(itype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$616.const$0,"g_date_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_date_get_type();
     * }
     */
    public static long g_date_get_type() {
        var mh$ = g_date_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strv_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$616.const$1,"g_strv_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_strv_get_type();
     * }
     */
    public static long g_strv_get_type() {
        var mh$ = g_strv_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_gstring_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$616.const$2,"g_gstring_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_gstring_get_type();
     * }
     */
    public static long g_gstring_get_type() {
        var mh$ = g_gstring_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$616.const$3,"g_hash_table_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_hash_table_get_type();
     * }
     */
    public static long g_hash_table_get_type() {
        var mh$ = g_hash_table_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_array_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$616.const$4,"g_array_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_array_get_type();
     * }
     */
    public static long g_array_get_type() {
        var mh$ = g_array_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_byte_array_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$616.const$5,"g_byte_array_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_byte_array_get_type();
     * }
     */
    public static long g_byte_array_get_type() {
        var mh$ = g_byte_array_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ptr_array_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$617.const$0,"g_ptr_array_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_ptr_array_get_type();
     * }
     */
    public static long g_ptr_array_get_type() {
        var mh$ = g_ptr_array_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bytes_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$617.const$1,"g_bytes_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_bytes_get_type();
     * }
     */
    public static long g_bytes_get_type() {
        var mh$ = g_bytes_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_get_gtype$MH() {
        return RuntimeHelper.requireNonNull(constants$617.const$2,"g_variant_type_get_gtype");
    }
    /**
     * {@snippet :
     * unsigned long g_variant_type_get_gtype();
     * }
     */
    public static long g_variant_type_get_gtype() {
        var mh$ = g_variant_type_get_gtype$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_regex_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$617.const$3,"g_regex_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_regex_get_type();
     * }
     */
    public static long g_regex_get_type() {
        var mh$ = g_regex_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_match_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$617.const$4,"g_match_info_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_match_info_get_type();
     * }
     */
    public static long g_match_info_get_type() {
        var mh$ = g_match_info_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$617.const$5,"g_error_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_error_get_type();
     * }
     */
    public static long g_error_get_type() {
        var mh$ = g_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$618.const$0,"g_date_time_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_date_time_get_type();
     * }
     */
    public static long g_date_time_get_type() {
        var mh$ = g_date_time_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_time_zone_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$618.const$1,"g_time_zone_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_time_zone_get_type();
     * }
     */
    public static long g_time_zone_get_type() {
        var mh$ = g_time_zone_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$618.const$2,"g_io_channel_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_io_channel_get_type();
     * }
     */
    public static long g_io_channel_get_type() {
        var mh$ = g_io_channel_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_condition_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$618.const$3,"g_io_condition_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_io_condition_get_type();
     * }
     */
    public static long g_io_condition_get_type() {
        var mh$ = g_io_condition_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_builder_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$618.const$4,"g_variant_builder_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_variant_builder_get_type();
     * }
     */
    public static long g_variant_builder_get_type() {
        var mh$ = g_variant_builder_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dict_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$618.const$5,"g_variant_dict_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_variant_dict_get_type();
     * }
     */
    public static long g_variant_dict_get_type() {
        var mh$ = g_variant_dict_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$619.const$0,"g_key_file_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_key_file_get_type();
     * }
     */
    public static long g_key_file_get_type() {
        var mh$ = g_key_file_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$619.const$1,"g_main_loop_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_main_loop_get_type();
     * }
     */
    public static long g_main_loop_get_type() {
        var mh$ = g_main_loop_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$619.const$2,"g_main_context_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_main_context_get_type();
     * }
     */
    public static long g_main_context_get_type() {
        var mh$ = g_main_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$619.const$3,"g_source_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_source_get_type();
     * }
     */
    public static long g_source_get_type() {
        var mh$ = g_source_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollfd_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$619.const$4,"g_pollfd_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_pollfd_get_type();
     * }
     */
    public static long g_pollfd_get_type() {
        var mh$ = g_pollfd_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_thread_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$619.const$5,"g_thread_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_thread_get_type();
     * }
     */
    public static long g_thread_get_type() {
        var mh$ = g_thread_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_checksum_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$620.const$0,"g_checksum_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_checksum_get_type();
     * }
     */
    public static long g_checksum_get_type() {
        var mh$ = g_checksum_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$620.const$1,"g_markup_parse_context_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_markup_parse_context_get_type();
     * }
     */
    public static long g_markup_parse_context_get_type() {
        var mh$ = g_markup_parse_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$620.const$2,"g_mapped_file_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_mapped_file_get_type();
     * }
     */
    public static long g_mapped_file_get_type() {
        var mh$ = g_mapped_file_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$620.const$3,"g_option_group_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_option_group_get_type();
     * }
     */
    public static long g_option_group_get_type() {
        var mh$ = g_option_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_uri_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$620.const$4,"g_uri_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_uri_get_type();
     * }
     */
    public static long g_uri_get_type() {
        var mh$ = g_uri_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tree_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$620.const$5,"g_tree_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tree_get_type();
     * }
     */
    public static long g_tree_get_type() {
        var mh$ = g_tree_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pattern_spec_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$621.const$0,"g_pattern_spec_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_pattern_spec_get_type();
     * }
     */
    public static long g_pattern_spec_get_type() {
        var mh$ = g_pattern_spec_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bookmark_file_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$621.const$1,"g_bookmark_file_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_bookmark_file_get_type();
     * }
     */
    public static long g_bookmark_file_get_type() {
        var mh$ = g_bookmark_file_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_gtype$MH() {
        return RuntimeHelper.requireNonNull(constants$621.const$2,"g_variant_get_gtype");
    }
    /**
     * {@snippet :
     * unsigned long g_variant_get_gtype();
     * }
     */
    public static long g_variant_get_gtype() {
        var mh$ = g_variant_get_gtype$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_boxed_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$621.const$5,"g_boxed_copy");
    }
    /**
     * {@snippet :
     * void* g_boxed_copy(unsigned long boxed_type, void* src_boxed);
     * }
     */
    public static MemorySegment g_boxed_copy(long boxed_type, MemorySegment src_boxed) {
        var mh$ = g_boxed_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(boxed_type, src_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_boxed_free$MH() {
        return RuntimeHelper.requireNonNull(constants$622.const$0,"g_boxed_free");
    }
    /**
     * {@snippet :
     * void g_boxed_free(unsigned long boxed_type, void* boxed);
     * }
     */
    public static void g_boxed_free(long boxed_type, MemorySegment boxed) {
        var mh$ = g_boxed_free$MH();
        try {
            mh$.invokeExact(boxed_type, boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$622.const$1,"g_value_set_boxed");
    }
    /**
     * {@snippet :
     * void g_value_set_boxed(struct _GValue* value, void* v_boxed);
     * }
     */
    public static void g_value_set_boxed(MemorySegment value, MemorySegment v_boxed) {
        var mh$ = g_value_set_boxed$MH();
        try {
            mh$.invokeExact(value, v_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_static_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$622.const$2,"g_value_set_static_boxed");
    }
    /**
     * {@snippet :
     * void g_value_set_static_boxed(struct _GValue* value, void* v_boxed);
     * }
     */
    public static void g_value_set_static_boxed(MemorySegment value, MemorySegment v_boxed) {
        var mh$ = g_value_set_static_boxed$MH();
        try {
            mh$.invokeExact(value, v_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_take_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$622.const$3,"g_value_take_boxed");
    }
    /**
     * {@snippet :
     * void g_value_take_boxed(struct _GValue* value, void* v_boxed);
     * }
     */
    public static void g_value_take_boxed(MemorySegment value, MemorySegment v_boxed) {
        var mh$ = g_value_take_boxed$MH();
        try {
            mh$.invokeExact(value, v_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_boxed_take_ownership$MH() {
        return RuntimeHelper.requireNonNull(constants$622.const$4,"g_value_set_boxed_take_ownership");
    }
    /**
     * {@snippet :
     * void g_value_set_boxed_take_ownership(struct _GValue* value, void* v_boxed);
     * }
     */
    public static void g_value_set_boxed_take_ownership(MemorySegment value, MemorySegment v_boxed) {
        var mh$ = g_value_set_boxed_take_ownership$MH();
        try {
            mh$.invokeExact(value, v_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$622.const$5,"g_value_get_boxed");
    }
    /**
     * {@snippet :
     * void* g_value_get_boxed(struct _GValue* value);
     * }
     */
    public static MemorySegment g_value_get_boxed(MemorySegment value) {
        var mh$ = g_value_get_boxed$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_dup_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$623.const$0,"g_value_dup_boxed");
    }
    /**
     * {@snippet :
     * void* g_value_dup_boxed(struct _GValue* value);
     * }
     */
    public static MemorySegment g_value_dup_boxed(MemorySegment value) {
        var mh$ = g_value_dup_boxed$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_boxed_type_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$623.const$3,"g_boxed_type_register_static");
    }
    /**
     * {@snippet :
     * unsigned long g_boxed_type_register_static(char* name, void* (*boxed_copy)(void*), void (*boxed_free)(void*));
     * }
     */
    public static long g_boxed_type_register_static(MemorySegment name, MemorySegment boxed_copy, MemorySegment boxed_free) {
        var mh$ = g_boxed_type_register_static$MH();
        try {
            return (long)mh$.invokeExact(name, boxed_copy, boxed_free);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$623.const$4,"g_closure_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_closure_get_type();
     * }
     */
    public static long g_closure_get_type() {
        var mh$ = g_closure_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$623.const$5,"g_value_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_value_get_type();
     * }
     */
    public static long g_value_get_type() {
        var mh$ = g_value_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_initially_unowned_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$629.const$5,"g_initially_unowned_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_initially_unowned_get_type();
     * }
     */
    public static long g_initially_unowned_get_type() {
        var mh$ = g_initially_unowned_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_install_property$MH() {
        return RuntimeHelper.requireNonNull(constants$630.const$0,"g_object_class_install_property");
    }
    /**
     * {@snippet :
     * void g_object_class_install_property(struct _GObjectClass* oclass, unsigned int property_id, struct _GParamSpec* pspec);
     * }
     */
    public static void g_object_class_install_property(MemorySegment oclass, int property_id, MemorySegment pspec) {
        var mh$ = g_object_class_install_property$MH();
        try {
            mh$.invokeExact(oclass, property_id, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_find_property$MH() {
        return RuntimeHelper.requireNonNull(constants$630.const$1,"g_object_class_find_property");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_object_class_find_property(struct _GObjectClass* oclass, char* property_name);
     * }
     */
    public static MemorySegment g_object_class_find_property(MemorySegment oclass, MemorySegment property_name) {
        var mh$ = g_object_class_find_property$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(oclass, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_list_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$630.const$2,"g_object_class_list_properties");
    }
    /**
     * {@snippet :
     * struct _GParamSpec** g_object_class_list_properties(struct _GObjectClass* oclass, unsigned int* n_properties);
     * }
     */
    public static MemorySegment g_object_class_list_properties(MemorySegment oclass, MemorySegment n_properties) {
        var mh$ = g_object_class_list_properties$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(oclass, n_properties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_override_property$MH() {
        return RuntimeHelper.requireNonNull(constants$630.const$3,"g_object_class_override_property");
    }
    /**
     * {@snippet :
     * void g_object_class_override_property(struct _GObjectClass* oclass, unsigned int property_id, char* name);
     * }
     */
    public static void g_object_class_override_property(MemorySegment oclass, int property_id, MemorySegment name) {
        var mh$ = g_object_class_override_property$MH();
        try {
            mh$.invokeExact(oclass, property_id, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_install_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$630.const$4,"g_object_class_install_properties");
    }
    /**
     * {@snippet :
     * void g_object_class_install_properties(struct _GObjectClass* oclass, unsigned int n_pspecs, struct _GParamSpec** pspecs);
     * }
     */
    public static void g_object_class_install_properties(MemorySegment oclass, int n_pspecs, MemorySegment pspecs) {
        var mh$ = g_object_class_install_properties$MH();
        try {
            mh$.invokeExact(oclass, n_pspecs, pspecs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_interface_install_property$MH() {
        return RuntimeHelper.requireNonNull(constants$630.const$5,"g_object_interface_install_property");
    }
    /**
     * {@snippet :
     * void g_object_interface_install_property(void* g_iface, struct _GParamSpec* pspec);
     * }
     */
    public static void g_object_interface_install_property(MemorySegment g_iface, MemorySegment pspec) {
        var mh$ = g_object_interface_install_property$MH();
        try {
            mh$.invokeExact(g_iface, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_interface_find_property$MH() {
        return RuntimeHelper.requireNonNull(constants$631.const$0,"g_object_interface_find_property");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_object_interface_find_property(void* g_iface, char* property_name);
     * }
     */
    public static MemorySegment g_object_interface_find_property(MemorySegment g_iface, MemorySegment property_name) {
        var mh$ = g_object_interface_find_property$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(g_iface, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_interface_list_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$631.const$1,"g_object_interface_list_properties");
    }
    /**
     * {@snippet :
     * struct _GParamSpec** g_object_interface_list_properties(void* g_iface, unsigned int* n_properties_p);
     * }
     */
    public static MemorySegment g_object_interface_list_properties(MemorySegment g_iface, MemorySegment n_properties_p) {
        var mh$ = g_object_interface_list_properties$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(g_iface, n_properties_p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$631.const$2,"g_object_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_object_get_type();
     * }
     */
    public static long g_object_get_type() {
        var mh$ = g_object_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_new$MH() {
        return RuntimeHelper.requireNonNull(constants$631.const$3,"g_object_new");
    }
    /**
     * {@snippet :
     * void* g_object_new(unsigned long object_type, char* first_property_name,...);
     * }
     */
    public static MemorySegment g_object_new(long object_type, MemorySegment first_property_name, Object... x2) {
        var mh$ = g_object_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object_type, first_property_name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_new_with_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$631.const$5,"g_object_new_with_properties");
    }
    /**
     * {@snippet :
     * struct _GObject* g_object_new_with_properties(unsigned long object_type, unsigned int n_properties, char* names[], struct _GValue values[]);
     * }
     */
    public static MemorySegment g_object_new_with_properties(long object_type, int n_properties, MemorySegment names, MemorySegment values) {
        var mh$ = g_object_new_with_properties$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object_type, n_properties, names, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$632.const$0,"g_object_newv");
    }
    /**
     * {@snippet :
     * void* g_object_newv(unsigned long object_type, unsigned int n_parameters, struct _GParameter* parameters);
     * }
     */
    public static MemorySegment g_object_newv(long object_type, int n_parameters, MemorySegment parameters) {
        var mh$ = g_object_newv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object_type, n_parameters, parameters);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_new_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$632.const$2,"g_object_new_valist");
    }
    /**
     * {@snippet :
     * struct _GObject* g_object_new_valist(unsigned long object_type, char* first_property_name, struct __va_list var_args);
     * }
     */
    public static MemorySegment g_object_new_valist(long object_type, MemorySegment first_property_name, MemorySegment var_args) {
        var mh$ = g_object_new_valist$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object_type, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set$MH() {
        return RuntimeHelper.requireNonNull(constants$632.const$3,"g_object_set");
    }
    /**
     * {@snippet :
     * void g_object_set(void* object, char* first_property_name,...);
     * }
     */
    public static void g_object_set(MemorySegment object, MemorySegment first_property_name, Object... x2) {
        var mh$ = g_object_set$MH();
        try {
            mh$.invokeExact(object, first_property_name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get$MH() {
        return RuntimeHelper.requireNonNull(constants$632.const$4,"g_object_get");
    }
    /**
     * {@snippet :
     * void g_object_get(void* object, char* first_property_name,...);
     * }
     */
    public static void g_object_get(MemorySegment object, MemorySegment first_property_name, Object... x2) {
        var mh$ = g_object_get$MH();
        try {
            mh$.invokeExact(object, first_property_name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$632.const$5,"g_object_connect");
    }
    /**
     * {@snippet :
     * void* g_object_connect(void* object, char* signal_spec,...);
     * }
     */
    public static MemorySegment g_object_connect(MemorySegment object, MemorySegment signal_spec, Object... x2) {
        var mh$ = g_object_connect$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object, signal_spec, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$633.const$0,"g_object_disconnect");
    }
    /**
     * {@snippet :
     * void g_object_disconnect(void* object, char* signal_spec,...);
     * }
     */
    public static void g_object_disconnect(MemorySegment object, MemorySegment signal_spec, Object... x2) {
        var mh$ = g_object_disconnect$MH();
        try {
            mh$.invokeExact(object, signal_spec, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_setv$MH() {
        return RuntimeHelper.requireNonNull(constants$633.const$1,"g_object_setv");
    }
    /**
     * {@snippet :
     * void g_object_setv(struct _GObject* object, unsigned int n_properties, char* names[], struct _GValue values[]);
     * }
     */
    public static void g_object_setv(MemorySegment object, int n_properties, MemorySegment names, MemorySegment values) {
        var mh$ = g_object_setv$MH();
        try {
            mh$.invokeExact(object, n_properties, names, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$633.const$2,"g_object_set_valist");
    }
    /**
     * {@snippet :
     * void g_object_set_valist(struct _GObject* object, char* first_property_name, struct __va_list var_args);
     * }
     */
    public static void g_object_set_valist(MemorySegment object, MemorySegment first_property_name, MemorySegment var_args) {
        var mh$ = g_object_set_valist$MH();
        try {
            mh$.invokeExact(object, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_getv$MH() {
        return RuntimeHelper.requireNonNull(constants$633.const$3,"g_object_getv");
    }
    /**
     * {@snippet :
     * void g_object_getv(struct _GObject* object, unsigned int n_properties, char* names[], struct _GValue values[]);
     * }
     */
    public static void g_object_getv(MemorySegment object, int n_properties, MemorySegment names, MemorySegment values) {
        var mh$ = g_object_getv$MH();
        try {
            mh$.invokeExact(object, n_properties, names, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$633.const$4,"g_object_get_valist");
    }
    /**
     * {@snippet :
     * void g_object_get_valist(struct _GObject* object, char* first_property_name, struct __va_list var_args);
     * }
     */
    public static void g_object_get_valist(MemorySegment object, MemorySegment first_property_name, MemorySegment var_args) {
        var mh$ = g_object_get_valist$MH();
        try {
            mh$.invokeExact(object, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_property$MH() {
        return RuntimeHelper.requireNonNull(constants$633.const$5,"g_object_set_property");
    }
    /**
     * {@snippet :
     * void g_object_set_property(struct _GObject* object, char* property_name, struct _GValue* value);
     * }
     */
    public static void g_object_set_property(MemorySegment object, MemorySegment property_name, MemorySegment value) {
        var mh$ = g_object_set_property$MH();
        try {
            mh$.invokeExact(object, property_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_property$MH() {
        return RuntimeHelper.requireNonNull(constants$634.const$0,"g_object_get_property");
    }
    /**
     * {@snippet :
     * void g_object_get_property(struct _GObject* object, char* property_name, struct _GValue* value);
     * }
     */
    public static void g_object_get_property(MemorySegment object, MemorySegment property_name, MemorySegment value) {
        var mh$ = g_object_get_property$MH();
        try {
            mh$.invokeExact(object, property_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_freeze_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$634.const$1,"g_object_freeze_notify");
    }
    /**
     * {@snippet :
     * void g_object_freeze_notify(struct _GObject* object);
     * }
     */
    public static void g_object_freeze_notify(MemorySegment object) {
        var mh$ = g_object_freeze_notify$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$634.const$2,"g_object_notify");
    }
    /**
     * {@snippet :
     * void g_object_notify(struct _GObject* object, char* property_name);
     * }
     */
    public static void g_object_notify(MemorySegment object, MemorySegment property_name) {
        var mh$ = g_object_notify$MH();
        try {
            mh$.invokeExact(object, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_notify_by_pspec$MH() {
        return RuntimeHelper.requireNonNull(constants$634.const$3,"g_object_notify_by_pspec");
    }
    /**
     * {@snippet :
     * void g_object_notify_by_pspec(struct _GObject* object, struct _GParamSpec* pspec);
     * }
     */
    public static void g_object_notify_by_pspec(MemorySegment object, MemorySegment pspec) {
        var mh$ = g_object_notify_by_pspec$MH();
        try {
            mh$.invokeExact(object, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_thaw_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$634.const$4,"g_object_thaw_notify");
    }
    /**
     * {@snippet :
     * void g_object_thaw_notify(struct _GObject* object);
     * }
     */
    public static void g_object_thaw_notify(MemorySegment object) {
        var mh$ = g_object_thaw_notify$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_is_floating$MH() {
        return RuntimeHelper.requireNonNull(constants$634.const$5,"g_object_is_floating");
    }
    /**
     * {@snippet :
     * int g_object_is_floating(void* object);
     * }
     */
    public static int g_object_is_floating(MemorySegment object) {
        var mh$ = g_object_is_floating$MH();
        try {
            return (int)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_ref_sink$MH() {
        return RuntimeHelper.requireNonNull(constants$635.const$0,"g_object_ref_sink");
    }
    /**
     * {@snippet :
     * void* g_object_ref_sink(void* object);
     * }
     */
    public static MemorySegment g_object_ref_sink(MemorySegment object) {
        var mh$ = g_object_ref_sink$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_take_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$635.const$1,"g_object_take_ref");
    }
    /**
     * {@snippet :
     * void* g_object_take_ref(void* object);
     * }
     */
    public static MemorySegment g_object_take_ref(MemorySegment object) {
        var mh$ = g_object_take_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$635.const$2,"g_object_ref");
    }
    /**
     * {@snippet :
     * void* g_object_ref(void* object);
     * }
     */
    public static MemorySegment g_object_ref(MemorySegment object) {
        var mh$ = g_object_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$635.const$3,"g_object_unref");
    }
    /**
     * {@snippet :
     * void g_object_unref(void* object);
     * }
     */
    public static void g_object_unref(MemorySegment object) {
        var mh$ = g_object_unref$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_weak_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$635.const$5,"g_object_weak_ref");
    }
    /**
     * {@snippet :
     * void g_object_weak_ref(struct _GObject* object, void (*notify)(void*,struct _GObject*), void* data);
     * }
     */
    public static void g_object_weak_ref(MemorySegment object, MemorySegment notify, MemorySegment data) {
        var mh$ = g_object_weak_ref$MH();
        try {
            mh$.invokeExact(object, notify, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_weak_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$636.const$1,"g_object_weak_unref");
    }
    /**
     * {@snippet :
     * void g_object_weak_unref(struct _GObject* object, void (*notify)(void*,struct _GObject*), void* data);
     * }
     */
    public static void g_object_weak_unref(MemorySegment object, MemorySegment notify, MemorySegment data) {
        var mh$ = g_object_weak_unref$MH();
        try {
            mh$.invokeExact(object, notify, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_add_weak_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$636.const$2,"g_object_add_weak_pointer");
    }
    /**
     * {@snippet :
     * void g_object_add_weak_pointer(struct _GObject* object, void** weak_pointer_location);
     * }
     */
    public static void g_object_add_weak_pointer(MemorySegment object, MemorySegment weak_pointer_location) {
        var mh$ = g_object_add_weak_pointer$MH();
        try {
            mh$.invokeExact(object, weak_pointer_location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_remove_weak_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$636.const$3,"g_object_remove_weak_pointer");
    }
    /**
     * {@snippet :
     * void g_object_remove_weak_pointer(struct _GObject* object, void** weak_pointer_location);
     * }
     */
    public static void g_object_remove_weak_pointer(MemorySegment object, MemorySegment weak_pointer_location) {
        var mh$ = g_object_remove_weak_pointer$MH();
        try {
            mh$.invokeExact(object, weak_pointer_location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_add_toggle_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$637.const$0,"g_object_add_toggle_ref");
    }
    /**
     * {@snippet :
     * void g_object_add_toggle_ref(struct _GObject* object, void (*notify)(void*,struct _GObject*,int), void* data);
     * }
     */
    public static void g_object_add_toggle_ref(MemorySegment object, MemorySegment notify, MemorySegment data) {
        var mh$ = g_object_add_toggle_ref$MH();
        try {
            mh$.invokeExact(object, notify, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_remove_toggle_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$637.const$2,"g_object_remove_toggle_ref");
    }
    /**
     * {@snippet :
     * void g_object_remove_toggle_ref(struct _GObject* object, void (*notify)(void*,struct _GObject*,int), void* data);
     * }
     */
    public static void g_object_remove_toggle_ref(MemorySegment object, MemorySegment notify, MemorySegment data) {
        var mh$ = g_object_remove_toggle_ref$MH();
        try {
            mh$.invokeExact(object, notify, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$637.const$3,"g_object_get_qdata");
    }
    /**
     * {@snippet :
     * void* g_object_get_qdata(struct _GObject* object, unsigned int quark);
     * }
     */
    public static MemorySegment g_object_get_qdata(MemorySegment object, int quark) {
        var mh$ = g_object_get_qdata$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$637.const$4,"g_object_set_qdata");
    }
    /**
     * {@snippet :
     * void g_object_set_qdata(struct _GObject* object, unsigned int quark, void* data);
     * }
     */
    public static void g_object_set_qdata(MemorySegment object, int quark, MemorySegment data) {
        var mh$ = g_object_set_qdata$MH();
        try {
            mh$.invokeExact(object, quark, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_qdata_full$MH() {
        return RuntimeHelper.requireNonNull(constants$638.const$0,"g_object_set_qdata_full");
    }
    /**
     * {@snippet :
     * void g_object_set_qdata_full(struct _GObject* object, unsigned int quark, void* data, void (*destroy)(void*));
     * }
     */
    public static void g_object_set_qdata_full(MemorySegment object, int quark, MemorySegment data, MemorySegment destroy) {
        var mh$ = g_object_set_qdata_full$MH();
        try {
            mh$.invokeExact(object, quark, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_steal_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$638.const$1,"g_object_steal_qdata");
    }
    /**
     * {@snippet :
     * void* g_object_steal_qdata(struct _GObject* object, unsigned int quark);
     * }
     */
    public static MemorySegment g_object_steal_qdata(MemorySegment object, int quark) {
        var mh$ = g_object_steal_qdata$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_dup_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$638.const$3,"g_object_dup_qdata");
    }
    /**
     * {@snippet :
     * void* g_object_dup_qdata(struct _GObject* object, unsigned int quark, void* (*dup_func)(void*,void*), void* user_data);
     * }
     */
    public static MemorySegment g_object_dup_qdata(MemorySegment object, int quark, MemorySegment dup_func, MemorySegment user_data) {
        var mh$ = g_object_dup_qdata$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object, quark, dup_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_replace_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$639.const$0,"g_object_replace_qdata");
    }
    /**
     * {@snippet :
     * int g_object_replace_qdata(struct _GObject* object, unsigned int quark, void* oldval, void* newval, void (*destroy)(void*), void (**old_destroy)(void*));
     * }
     */
    public static int g_object_replace_qdata(MemorySegment object, int quark, MemorySegment oldval, MemorySegment newval, MemorySegment destroy, MemorySegment old_destroy) {
        var mh$ = g_object_replace_qdata$MH();
        try {
            return (int)mh$.invokeExact(object, quark, oldval, newval, destroy, old_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_data$MH() {
        return RuntimeHelper.requireNonNull(constants$639.const$1,"g_object_get_data");
    }
    /**
     * {@snippet :
     * void* g_object_get_data(struct _GObject* object, char* key);
     * }
     */
    public static MemorySegment g_object_get_data(MemorySegment object, MemorySegment key) {
        var mh$ = g_object_get_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_data$MH() {
        return RuntimeHelper.requireNonNull(constants$639.const$2,"g_object_set_data");
    }
    /**
     * {@snippet :
     * void g_object_set_data(struct _GObject* object, char* key, void* data);
     * }
     */
    public static void g_object_set_data(MemorySegment object, MemorySegment key, MemorySegment data) {
        var mh$ = g_object_set_data$MH();
        try {
            mh$.invokeExact(object, key, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_data_full$MH() {
        return RuntimeHelper.requireNonNull(constants$639.const$4,"g_object_set_data_full");
    }
    /**
     * {@snippet :
     * void g_object_set_data_full(struct _GObject* object, char* key, void* data, void (*destroy)(void*));
     * }
     */
    public static void g_object_set_data_full(MemorySegment object, MemorySegment key, MemorySegment data, MemorySegment destroy) {
        var mh$ = g_object_set_data_full$MH();
        try {
            mh$.invokeExact(object, key, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_steal_data$MH() {
        return RuntimeHelper.requireNonNull(constants$639.const$5,"g_object_steal_data");
    }
    /**
     * {@snippet :
     * void* g_object_steal_data(struct _GObject* object, char* key);
     * }
     */
    public static MemorySegment g_object_steal_data(MemorySegment object, MemorySegment key) {
        var mh$ = g_object_steal_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_dup_data$MH() {
        return RuntimeHelper.requireNonNull(constants$640.const$1,"g_object_dup_data");
    }
    /**
     * {@snippet :
     * void* g_object_dup_data(struct _GObject* object, char* key, void* (*dup_func)(void*,void*), void* user_data);
     * }
     */
    public static MemorySegment g_object_dup_data(MemorySegment object, MemorySegment key, MemorySegment dup_func, MemorySegment user_data) {
        var mh$ = g_object_dup_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object, key, dup_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_replace_data$MH() {
        return RuntimeHelper.requireNonNull(constants$640.const$5,"g_object_replace_data");
    }
    /**
     * {@snippet :
     * int g_object_replace_data(struct _GObject* object, char* key, void* oldval, void* newval, void (*destroy)(void*), void (**old_destroy)(void*));
     * }
     */
    public static int g_object_replace_data(MemorySegment object, MemorySegment key, MemorySegment oldval, MemorySegment newval, MemorySegment destroy, MemorySegment old_destroy) {
        var mh$ = g_object_replace_data$MH();
        try {
            return (int)mh$.invokeExact(object, key, oldval, newval, destroy, old_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_watch_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$641.const$0,"g_object_watch_closure");
    }
    /**
     * {@snippet :
     * void g_object_watch_closure(struct _GObject* object, struct _GClosure* closure);
     * }
     */
    public static void g_object_watch_closure(MemorySegment object, MemorySegment closure) {
        var mh$ = g_object_watch_closure$MH();
        try {
            mh$.invokeExact(object, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_new_object$MH() {
        return RuntimeHelper.requireNonNull(constants$641.const$2,"g_cclosure_new_object");
    }
    /**
     * {@snippet :
     * struct _GClosure* g_cclosure_new_object(void (*callback_func)(), struct _GObject* object);
     * }
     */
    public static MemorySegment g_cclosure_new_object(MemorySegment callback_func, MemorySegment object) {
        var mh$ = g_cclosure_new_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(callback_func, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_new_object_swap$MH() {
        return RuntimeHelper.requireNonNull(constants$641.const$4,"g_cclosure_new_object_swap");
    }
    /**
     * {@snippet :
     * struct _GClosure* g_cclosure_new_object_swap(void (*callback_func)(), struct _GObject* object);
     * }
     */
    public static MemorySegment g_cclosure_new_object_swap(MemorySegment callback_func, MemorySegment object) {
        var mh$ = g_cclosure_new_object_swap$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(callback_func, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_new_object$MH() {
        return RuntimeHelper.requireNonNull(constants$641.const$5,"g_closure_new_object");
    }
    /**
     * {@snippet :
     * struct _GClosure* g_closure_new_object(unsigned int sizeof_closure, struct _GObject* object);
     * }
     */
    public static MemorySegment g_closure_new_object(int sizeof_closure, MemorySegment object) {
        var mh$ = g_closure_new_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(sizeof_closure, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_object$MH() {
        return RuntimeHelper.requireNonNull(constants$642.const$0,"g_value_set_object");
    }
    /**
     * {@snippet :
     * void g_value_set_object(struct _GValue* value, void* v_object);
     * }
     */
    public static void g_value_set_object(MemorySegment value, MemorySegment v_object) {
        var mh$ = g_value_set_object$MH();
        try {
            mh$.invokeExact(value, v_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_object$MH() {
        return RuntimeHelper.requireNonNull(constants$642.const$1,"g_value_get_object");
    }
    /**
     * {@snippet :
     * void* g_value_get_object(struct _GValue* value);
     * }
     */
    public static MemorySegment g_value_get_object(MemorySegment value) {
        var mh$ = g_value_get_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_dup_object$MH() {
        return RuntimeHelper.requireNonNull(constants$642.const$2,"g_value_dup_object");
    }
    /**
     * {@snippet :
     * void* g_value_dup_object(struct _GValue* value);
     * }
     */
    public static MemorySegment g_value_dup_object(MemorySegment value) {
        var mh$ = g_value_dup_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_object$MH() {
        return RuntimeHelper.requireNonNull(constants$642.const$5,"g_signal_connect_object");
    }
    /**
     * {@snippet :
     * unsigned long g_signal_connect_object(void* instance, char* detailed_signal, void (*c_handler)(), void* gobject, enum GConnectFlags connect_flags);
     * }
     */
    public static long g_signal_connect_object(MemorySegment instance, MemorySegment detailed_signal, MemorySegment c_handler, MemorySegment gobject, int connect_flags) {
        var mh$ = g_signal_connect_object$MH();
        try {
            return (long)mh$.invokeExact(instance, detailed_signal, c_handler, gobject, connect_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_force_floating$MH() {
        return RuntimeHelper.requireNonNull(constants$643.const$0,"g_object_force_floating");
    }
    /**
     * {@snippet :
     * void g_object_force_floating(struct _GObject* object);
     * }
     */
    public static void g_object_force_floating(MemorySegment object) {
        var mh$ = g_object_force_floating$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_run_dispose$MH() {
        return RuntimeHelper.requireNonNull(constants$643.const$1,"g_object_run_dispose");
    }
    /**
     * {@snippet :
     * void g_object_run_dispose(struct _GObject* object);
     * }
     */
    public static void g_object_run_dispose(MemorySegment object) {
        var mh$ = g_object_run_dispose$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_take_object$MH() {
        return RuntimeHelper.requireNonNull(constants$643.const$2,"g_value_take_object");
    }
    /**
     * {@snippet :
     * void g_value_take_object(struct _GValue* value, void* v_object);
     * }
     */
    public static void g_value_take_object(MemorySegment value, MemorySegment v_object) {
        var mh$ = g_value_take_object$MH();
        try {
            mh$.invokeExact(value, v_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_object_take_ownership$MH() {
        return RuntimeHelper.requireNonNull(constants$643.const$3,"g_value_set_object_take_ownership");
    }
    /**
     * {@snippet :
     * void g_value_set_object_take_ownership(struct _GValue* value, void* v_object);
     * }
     */
    public static void g_value_set_object_take_ownership(MemorySegment value, MemorySegment v_object) {
        var mh$ = g_value_set_object_take_ownership$MH();
        try {
            mh$.invokeExact(value, v_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_compat_control$MH() {
        return RuntimeHelper.requireNonNull(constants$643.const$5,"g_object_compat_control");
    }
    /**
     * {@snippet :
     * unsigned long g_object_compat_control(unsigned long what, void* data);
     * }
     */
    public static long g_object_compat_control(long what, MemorySegment data) {
        var mh$ = g_object_compat_control$MH();
        try {
            return (long)mh$.invokeExact(what, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_object$MH() {
        return RuntimeHelper.requireNonNull(constants$644.const$0,"g_clear_object");
    }
    /**
     * {@snippet :
     * void g_clear_object(struct _GObject** object_ptr);
     * }
     */
    public static void g_clear_object(MemorySegment object_ptr) {
        var mh$ = g_clear_object$MH();
        try {
            mh$.invokeExact(object_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_weak_ref_init$MH() {
        return RuntimeHelper.requireNonNull(constants$644.const$4,"g_weak_ref_init");
    }
    /**
     * {@snippet :
     * void g_weak_ref_init(struct GWeakRef* weak_ref, void* object);
     * }
     */
    public static void g_weak_ref_init(MemorySegment weak_ref, MemorySegment object) {
        var mh$ = g_weak_ref_init$MH();
        try {
            mh$.invokeExact(weak_ref, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_weak_ref_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$644.const$5,"g_weak_ref_clear");
    }
    /**
     * {@snippet :
     * void g_weak_ref_clear(struct GWeakRef* weak_ref);
     * }
     */
    public static void g_weak_ref_clear(MemorySegment weak_ref) {
        var mh$ = g_weak_ref_clear$MH();
        try {
            mh$.invokeExact(weak_ref);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_weak_ref_get$MH() {
        return RuntimeHelper.requireNonNull(constants$645.const$0,"g_weak_ref_get");
    }
    /**
     * {@snippet :
     * void* g_weak_ref_get(struct GWeakRef* weak_ref);
     * }
     */
    public static MemorySegment g_weak_ref_get(MemorySegment weak_ref) {
        var mh$ = g_weak_ref_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(weak_ref);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_weak_ref_set$MH() {
        return RuntimeHelper.requireNonNull(constants$645.const$1,"g_weak_ref_set");
    }
    /**
     * {@snippet :
     * void g_weak_ref_set(struct GWeakRef* weak_ref, void* object);
     * }
     */
    public static void g_weak_ref_set(MemorySegment weak_ref, MemorySegment object) {
        var mh$ = g_weak_ref_set$MH();
        try {
            mh$.invokeExact(weak_ref, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GBindingFlags.G_BINDING_DEFAULT = 0;
     * }
     */
    public static int G_BINDING_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GBindingFlags.G_BINDING_BIDIRECTIONAL = 1;
     * }
     */
    public static int G_BINDING_BIDIRECTIONAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GBindingFlags.G_BINDING_SYNC_CREATE = 2;
     * }
     */
    public static int G_BINDING_SYNC_CREATE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GBindingFlags.G_BINDING_INVERT_BOOLEAN = 4;
     * }
     */
    public static int G_BINDING_INVERT_BOOLEAN() {
        return (int)4L;
    }
    public static MethodHandle g_binding_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$645.const$3,"g_binding_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_binding_flags_get_type();
     * }
     */
    public static long g_binding_flags_get_type() {
        var mh$ = g_binding_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$645.const$4,"g_binding_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_binding_get_type();
     * }
     */
    public static long g_binding_get_type() {
        var mh$ = g_binding_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$645.const$5,"g_binding_get_flags");
    }
    /**
     * {@snippet :
     * enum GBindingFlags g_binding_get_flags(struct _GBinding* binding);
     * }
     */
    public static int g_binding_get_flags(MemorySegment binding) {
        var mh$ = g_binding_get_flags$MH();
        try {
            return (int)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_get_source$MH() {
        return RuntimeHelper.requireNonNull(constants$646.const$0,"g_binding_get_source");
    }
    /**
     * {@snippet :
     * struct _GObject* g_binding_get_source(struct _GBinding* binding);
     * }
     */
    public static MemorySegment g_binding_get_source(MemorySegment binding) {
        var mh$ = g_binding_get_source$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_dup_source$MH() {
        return RuntimeHelper.requireNonNull(constants$646.const$1,"g_binding_dup_source");
    }
    /**
     * {@snippet :
     * struct _GObject* g_binding_dup_source(struct _GBinding* binding);
     * }
     */
    public static MemorySegment g_binding_dup_source(MemorySegment binding) {
        var mh$ = g_binding_dup_source$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_get_target$MH() {
        return RuntimeHelper.requireNonNull(constants$646.const$2,"g_binding_get_target");
    }
    /**
     * {@snippet :
     * struct _GObject* g_binding_get_target(struct _GBinding* binding);
     * }
     */
    public static MemorySegment g_binding_get_target(MemorySegment binding) {
        var mh$ = g_binding_get_target$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_dup_target$MH() {
        return RuntimeHelper.requireNonNull(constants$646.const$3,"g_binding_dup_target");
    }
    /**
     * {@snippet :
     * struct _GObject* g_binding_dup_target(struct _GBinding* binding);
     * }
     */
    public static MemorySegment g_binding_dup_target(MemorySegment binding) {
        var mh$ = g_binding_dup_target$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_get_source_property$MH() {
        return RuntimeHelper.requireNonNull(constants$646.const$4,"g_binding_get_source_property");
    }
    /**
     * {@snippet :
     * char* g_binding_get_source_property(struct _GBinding* binding);
     * }
     */
    public static MemorySegment g_binding_get_source_property(MemorySegment binding) {
        var mh$ = g_binding_get_source_property$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_get_target_property$MH() {
        return RuntimeHelper.requireNonNull(constants$646.const$5,"g_binding_get_target_property");
    }
    /**
     * {@snippet :
     * char* g_binding_get_target_property(struct _GBinding* binding);
     * }
     */
    public static MemorySegment g_binding_get_target_property(MemorySegment binding) {
        var mh$ = g_binding_get_target_property$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_unbind$MH() {
        return RuntimeHelper.requireNonNull(constants$647.const$0,"g_binding_unbind");
    }
    /**
     * {@snippet :
     * void g_binding_unbind(struct _GBinding* binding);
     * }
     */
    public static void g_binding_unbind(MemorySegment binding) {
        var mh$ = g_binding_unbind$MH();
        try {
            mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_bind_property$MH() {
        return RuntimeHelper.requireNonNull(constants$647.const$2,"g_object_bind_property");
    }
    /**
     * {@snippet :
     * struct _GBinding* g_object_bind_property(void* source, char* source_property, void* target, char* target_property, enum GBindingFlags flags);
     * }
     */
    public static MemorySegment g_object_bind_property(MemorySegment source, MemorySegment source_property, MemorySegment target, MemorySegment target_property, int flags) {
        var mh$ = g_object_bind_property$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source, source_property, target, target_property, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_bind_property_full$MH() {
        return RuntimeHelper.requireNonNull(constants$648.const$1,"g_object_bind_property_full");
    }
    /**
     * {@snippet :
     * struct _GBinding* g_object_bind_property_full(void* source, char* source_property, void* target, char* target_property, enum GBindingFlags flags, int (*transform_to)(struct _GBinding*,struct _GValue*,struct _GValue*,void*), int (*transform_from)(struct _GBinding*,struct _GValue*,struct _GValue*,void*), void* user_data, void (*notify)(void*));
     * }
     */
    public static MemorySegment g_object_bind_property_full(MemorySegment source, MemorySegment source_property, MemorySegment target, MemorySegment target_property, int flags, MemorySegment transform_to, MemorySegment transform_from, MemorySegment user_data, MemorySegment notify) {
        var mh$ = g_object_bind_property_full$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source, source_property, target, target_property, flags, transform_to, transform_from, user_data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_bind_property_with_closures$MH() {
        return RuntimeHelper.requireNonNull(constants$648.const$3,"g_object_bind_property_with_closures");
    }
    /**
     * {@snippet :
     * struct _GBinding* g_object_bind_property_with_closures(void* source, char* source_property, void* target, char* target_property, enum GBindingFlags flags, struct _GClosure* transform_to, struct _GClosure* transform_from);
     * }
     */
    public static MemorySegment g_object_bind_property_with_closures(MemorySegment source, MemorySegment source_property, MemorySegment target, MemorySegment target_property, int flags, MemorySegment transform_to, MemorySegment transform_from) {
        var mh$ = g_object_bind_property_with_closures$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source, source_property, target, target_property, flags, transform_to, transform_from);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$648.const$4,"g_binding_group_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_binding_group_get_type();
     * }
     */
    public static long g_binding_group_get_type() {
        var mh$ = g_binding_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_new$MH() {
        return RuntimeHelper.requireNonNull(constants$648.const$5,"g_binding_group_new");
    }
    /**
     * {@snippet :
     * struct _GBindingGroup* g_binding_group_new();
     * }
     */
    public static MemorySegment g_binding_group_new() {
        var mh$ = g_binding_group_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_dup_source$MH() {
        return RuntimeHelper.requireNonNull(constants$649.const$0,"g_binding_group_dup_source");
    }
    /**
     * {@snippet :
     * void* g_binding_group_dup_source(struct _GBindingGroup* self);
     * }
     */
    public static MemorySegment g_binding_group_dup_source(MemorySegment self) {
        var mh$ = g_binding_group_dup_source$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_set_source$MH() {
        return RuntimeHelper.requireNonNull(constants$649.const$1,"g_binding_group_set_source");
    }
    /**
     * {@snippet :
     * void g_binding_group_set_source(struct _GBindingGroup* self, void* source);
     * }
     */
    public static void g_binding_group_set_source(MemorySegment self, MemorySegment source) {
        var mh$ = g_binding_group_set_source$MH();
        try {
            mh$.invokeExact(self, source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_bind$MH() {
        return RuntimeHelper.requireNonNull(constants$649.const$3,"g_binding_group_bind");
    }
    /**
     * {@snippet :
     * void g_binding_group_bind(struct _GBindingGroup* self, char* source_property, void* target, char* target_property, enum GBindingFlags flags);
     * }
     */
    public static void g_binding_group_bind(MemorySegment self, MemorySegment source_property, MemorySegment target, MemorySegment target_property, int flags) {
        var mh$ = g_binding_group_bind$MH();
        try {
            mh$.invokeExact(self, source_property, target, target_property, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_bind_full$MH() {
        return RuntimeHelper.requireNonNull(constants$650.const$2,"g_binding_group_bind_full");
    }
    /**
     * {@snippet :
     * void g_binding_group_bind_full(struct _GBindingGroup* self, char* source_property, void* target, char* target_property, enum GBindingFlags flags, int (*transform_to)(struct _GBinding*,struct _GValue*,struct _GValue*,void*), int (*transform_from)(struct _GBinding*,struct _GValue*,struct _GValue*,void*), void* user_data, void (*user_data_destroy)(void*));
     * }
     */
    public static void g_binding_group_bind_full(MemorySegment self, MemorySegment source_property, MemorySegment target, MemorySegment target_property, int flags, MemorySegment transform_to, MemorySegment transform_from, MemorySegment user_data, MemorySegment user_data_destroy) {
        var mh$ = g_binding_group_bind_full$MH();
        try {
            mh$.invokeExact(self, source_property, target, target_property, flags, transform_to, transform_from, user_data, user_data_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_bind_with_closures$MH() {
        return RuntimeHelper.requireNonNull(constants$650.const$4,"g_binding_group_bind_with_closures");
    }
    /**
     * {@snippet :
     * void g_binding_group_bind_with_closures(struct _GBindingGroup* self, char* source_property, void* target, char* target_property, enum GBindingFlags flags, struct _GClosure* transform_to, struct _GClosure* transform_from);
     * }
     */
    public static void g_binding_group_bind_with_closures(MemorySegment self, MemorySegment source_property, MemorySegment target, MemorySegment target_property, int flags, MemorySegment transform_to, MemorySegment transform_from) {
        var mh$ = g_binding_group_bind_with_closures$MH();
        try {
            mh$.invokeExact(self, source_property, target, target_property, flags, transform_to, transform_from);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_enum_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$653.const$4,"g_enum_get_value");
    }
    /**
     * {@snippet :
     * struct _GEnumValue* g_enum_get_value(struct _GEnumClass* enum_class, int value);
     * }
     */
    public static MemorySegment g_enum_get_value(MemorySegment enum_class, int value) {
        var mh$ = g_enum_get_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(enum_class, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_enum_get_value_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$653.const$5,"g_enum_get_value_by_name");
    }
    /**
     * {@snippet :
     * struct _GEnumValue* g_enum_get_value_by_name(struct _GEnumClass* enum_class, char* name);
     * }
     */
    public static MemorySegment g_enum_get_value_by_name(MemorySegment enum_class, MemorySegment name) {
        var mh$ = g_enum_get_value_by_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(enum_class, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_enum_get_value_by_nick$MH() {
        return RuntimeHelper.requireNonNull(constants$654.const$0,"g_enum_get_value_by_nick");
    }
    /**
     * {@snippet :
     * struct _GEnumValue* g_enum_get_value_by_nick(struct _GEnumClass* enum_class, char* nick);
     * }
     */
    public static MemorySegment g_enum_get_value_by_nick(MemorySegment enum_class, MemorySegment nick) {
        var mh$ = g_enum_get_value_by_nick$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(enum_class, nick);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_flags_get_first_value$MH() {
        return RuntimeHelper.requireNonNull(constants$654.const$1,"g_flags_get_first_value");
    }
    /**
     * {@snippet :
     * struct _GFlagsValue* g_flags_get_first_value(struct _GFlagsClass* flags_class, unsigned int value);
     * }
     */
    public static MemorySegment g_flags_get_first_value(MemorySegment flags_class, int value) {
        var mh$ = g_flags_get_first_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags_class, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_flags_get_value_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$654.const$2,"g_flags_get_value_by_name");
    }
    /**
     * {@snippet :
     * struct _GFlagsValue* g_flags_get_value_by_name(struct _GFlagsClass* flags_class, char* name);
     * }
     */
    public static MemorySegment g_flags_get_value_by_name(MemorySegment flags_class, MemorySegment name) {
        var mh$ = g_flags_get_value_by_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags_class, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_flags_get_value_by_nick$MH() {
        return RuntimeHelper.requireNonNull(constants$654.const$3,"g_flags_get_value_by_nick");
    }
    /**
     * {@snippet :
     * struct _GFlagsValue* g_flags_get_value_by_nick(struct _GFlagsClass* flags_class, char* nick);
     * }
     */
    public static MemorySegment g_flags_get_value_by_nick(MemorySegment flags_class, MemorySegment nick) {
        var mh$ = g_flags_get_value_by_nick$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags_class, nick);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_enum_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$654.const$4,"g_enum_to_string");
    }
    /**
     * {@snippet :
     * char* g_enum_to_string(unsigned long g_enum_type, int value);
     * }
     */
    public static MemorySegment g_enum_to_string(long g_enum_type, int value) {
        var mh$ = g_enum_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(g_enum_type, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_flags_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$654.const$5,"g_flags_to_string");
    }
    /**
     * {@snippet :
     * char* g_flags_to_string(unsigned long flags_type, unsigned int value);
     * }
     */
    public static MemorySegment g_flags_to_string(long flags_type, int value) {
        var mh$ = g_flags_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags_type, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_enum$MH() {
        return RuntimeHelper.requireNonNull(constants$655.const$0,"g_value_set_enum");
    }
    /**
     * {@snippet :
     * void g_value_set_enum(struct _GValue* value, int v_enum);
     * }
     */
    public static void g_value_set_enum(MemorySegment value, int v_enum) {
        var mh$ = g_value_set_enum$MH();
        try {
            mh$.invokeExact(value, v_enum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_enum$MH() {
        return RuntimeHelper.requireNonNull(constants$655.const$1,"g_value_get_enum");
    }
    /**
     * {@snippet :
     * int g_value_get_enum(struct _GValue* value);
     * }
     */
    public static int g_value_get_enum(MemorySegment value) {
        var mh$ = g_value_get_enum$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$655.const$2,"g_value_set_flags");
    }
    /**
     * {@snippet :
     * void g_value_set_flags(struct _GValue* value, unsigned int v_flags);
     * }
     */
    public static void g_value_set_flags(MemorySegment value, int v_flags) {
        var mh$ = g_value_set_flags$MH();
        try {
            mh$.invokeExact(value, v_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$655.const$3,"g_value_get_flags");
    }
    /**
     * {@snippet :
     * unsigned int g_value_get_flags(struct _GValue* value);
     * }
     */
    public static int g_value_get_flags(MemorySegment value) {
        var mh$ = g_value_get_flags$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_enum_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$655.const$4,"g_enum_register_static");
    }
    /**
     * {@snippet :
     * unsigned long g_enum_register_static(char* name, struct _GEnumValue* const_static_values);
     * }
     */
    public static long g_enum_register_static(MemorySegment name, MemorySegment const_static_values) {
        var mh$ = g_enum_register_static$MH();
        try {
            return (long)mh$.invokeExact(name, const_static_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_flags_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$655.const$5,"g_flags_register_static");
    }
    /**
     * {@snippet :
     * unsigned long g_flags_register_static(char* name, struct _GFlagsValue* const_static_values);
     * }
     */
    public static long g_flags_register_static(MemorySegment name, MemorySegment const_static_values) {
        var mh$ = g_flags_register_static$MH();
        try {
            return (long)mh$.invokeExact(name, const_static_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_enum_complete_type_info$MH() {
        return RuntimeHelper.requireNonNull(constants$656.const$1,"g_enum_complete_type_info");
    }
    /**
     * {@snippet :
     * void g_enum_complete_type_info(unsigned long g_enum_type, struct _GTypeInfo* info, struct _GEnumValue* const_values);
     * }
     */
    public static void g_enum_complete_type_info(long g_enum_type, MemorySegment info, MemorySegment const_values) {
        var mh$ = g_enum_complete_type_info$MH();
        try {
            mh$.invokeExact(g_enum_type, info, const_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_flags_complete_type_info$MH() {
        return RuntimeHelper.requireNonNull(constants$656.const$2,"g_flags_complete_type_info");
    }
    /**
     * {@snippet :
     * void g_flags_complete_type_info(unsigned long g_flags_type, struct _GTypeInfo* info, struct _GFlagsValue* const_values);
     * }
     */
    public static void g_flags_complete_type_info(long g_flags_type, MemorySegment info, MemorySegment const_values) {
        var mh$ = g_flags_complete_type_info$MH();
        try {
            mh$.invokeExact(g_flags_type, info, const_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unicode_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$656.const$3,"g_unicode_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_unicode_type_get_type();
     * }
     */
    public static long g_unicode_type_get_type() {
        var mh$ = g_unicode_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unicode_break_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$656.const$4,"g_unicode_break_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_unicode_break_type_get_type();
     * }
     */
    public static long g_unicode_break_type_get_type() {
        var mh$ = g_unicode_break_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unicode_script_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$656.const$5,"g_unicode_script_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_unicode_script_get_type();
     * }
     */
    public static long g_unicode_script_get_type() {
        var mh$ = g_unicode_script_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_normalize_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$657.const$0,"g_normalize_mode_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_normalize_mode_get_type();
     * }
     */
    public static long g_normalize_mode_get_type() {
        var mh$ = g_normalize_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_char$MH() {
        return RuntimeHelper.requireNonNull(constants$669.const$1,"g_param_spec_char");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_char(char* name, char* nick, char* blurb, signed char minimum, signed char maximum, signed char default_value, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_char(MemorySegment name, MemorySegment nick, MemorySegment blurb, byte minimum, byte maximum, byte default_value, int flags) {
        var mh$ = g_param_spec_char$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_uchar$MH() {
        return RuntimeHelper.requireNonNull(constants$669.const$2,"g_param_spec_uchar");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_uchar(char* name, char* nick, char* blurb, unsigned char minimum, unsigned char maximum, unsigned char default_value, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_uchar(MemorySegment name, MemorySegment nick, MemorySegment blurb, byte minimum, byte maximum, byte default_value, int flags) {
        var mh$ = g_param_spec_uchar$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$669.const$4,"g_param_spec_boolean");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_boolean(char* name, char* nick, char* blurb, int default_value, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_boolean(MemorySegment name, MemorySegment nick, MemorySegment blurb, int default_value, int flags) {
        var mh$ = g_param_spec_boolean$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_int$MH() {
        return RuntimeHelper.requireNonNull(constants$669.const$6,"g_param_spec_int");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_int(char* name, char* nick, char* blurb, int minimum, int maximum, int default_value, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_int(MemorySegment name, MemorySegment nick, MemorySegment blurb, int minimum, int maximum, int default_value, int flags) {
        var mh$ = g_param_spec_int$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_uint$MH() {
        return RuntimeHelper.requireNonNull(constants$670.const$0,"g_param_spec_uint");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_uint(char* name, char* nick, char* blurb, unsigned int minimum, unsigned int maximum, unsigned int default_value, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_uint(MemorySegment name, MemorySegment nick, MemorySegment blurb, int minimum, int maximum, int default_value, int flags) {
        var mh$ = g_param_spec_uint$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_long$MH() {
        return RuntimeHelper.requireNonNull(constants$670.const$2,"g_param_spec_long");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_long(char* name, char* nick, char* blurb, long minimum, long maximum, long default_value, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_long(MemorySegment name, MemorySegment nick, MemorySegment blurb, long minimum, long maximum, long default_value, int flags) {
        var mh$ = g_param_spec_long$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_ulong$MH() {
        return RuntimeHelper.requireNonNull(constants$670.const$3,"g_param_spec_ulong");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_ulong(char* name, char* nick, char* blurb, unsigned long minimum, unsigned long maximum, unsigned long default_value, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_ulong(MemorySegment name, MemorySegment nick, MemorySegment blurb, long minimum, long maximum, long default_value, int flags) {
        var mh$ = g_param_spec_ulong$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$670.const$4,"g_param_spec_int64");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_int64(char* name, char* nick, char* blurb, long minimum, long maximum, long default_value, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_int64(MemorySegment name, MemorySegment nick, MemorySegment blurb, long minimum, long maximum, long default_value, int flags) {
        var mh$ = g_param_spec_int64$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$670.const$5,"g_param_spec_uint64");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_uint64(char* name, char* nick, char* blurb, unsigned long minimum, unsigned long maximum, unsigned long default_value, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_uint64(MemorySegment name, MemorySegment nick, MemorySegment blurb, long minimum, long maximum, long default_value, int flags) {
        var mh$ = g_param_spec_uint64$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$671.const$0,"g_param_spec_unichar");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_unichar(char* name, char* nick, char* blurb, unsigned int default_value, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_unichar(MemorySegment name, MemorySegment nick, MemorySegment blurb, int default_value, int flags) {
        var mh$ = g_param_spec_unichar$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_enum$MH() {
        return RuntimeHelper.requireNonNull(constants$671.const$2,"g_param_spec_enum");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_enum(char* name, char* nick, char* blurb, unsigned long enum_type, int default_value, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_enum(MemorySegment name, MemorySegment nick, MemorySegment blurb, long enum_type, int default_value, int flags) {
        var mh$ = g_param_spec_enum$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, enum_type, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$671.const$3,"g_param_spec_flags");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_flags(char* name, char* nick, char* blurb, unsigned long flags_type, unsigned int default_value, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_flags(MemorySegment name, MemorySegment nick, MemorySegment blurb, long flags_type, int default_value, int flags) {
        var mh$ = g_param_spec_flags$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, flags_type, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_float$MH() {
        return RuntimeHelper.requireNonNull(constants$671.const$5,"g_param_spec_float");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_float(char* name, char* nick, char* blurb, float minimum, float maximum, float default_value, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_float(MemorySegment name, MemorySegment nick, MemorySegment blurb, float minimum, float maximum, float default_value, int flags) {
        var mh$ = g_param_spec_float$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_double$MH() {
        return RuntimeHelper.requireNonNull(constants$672.const$1,"g_param_spec_double");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_double(char* name, char* nick, char* blurb, double minimum, double maximum, double default_value, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_double(MemorySegment name, MemorySegment nick, MemorySegment blurb, double minimum, double maximum, double default_value, int flags) {
        var mh$ = g_param_spec_double$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_string$MH() {
        return RuntimeHelper.requireNonNull(constants$672.const$2,"g_param_spec_string");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_string(char* name, char* nick, char* blurb, char* default_value, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_string(MemorySegment name, MemorySegment nick, MemorySegment blurb, MemorySegment default_value, int flags) {
        var mh$ = g_param_spec_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_param$MH() {
        return RuntimeHelper.requireNonNull(constants$672.const$4,"g_param_spec_param");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_param(char* name, char* nick, char* blurb, unsigned long param_type, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_param(MemorySegment name, MemorySegment nick, MemorySegment blurb, long param_type, int flags) {
        var mh$ = g_param_spec_param$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, param_type, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$672.const$5,"g_param_spec_boxed");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_boxed(char* name, char* nick, char* blurb, unsigned long boxed_type, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_boxed(MemorySegment name, MemorySegment nick, MemorySegment blurb, long boxed_type, int flags) {
        var mh$ = g_param_spec_boxed$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, boxed_type, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$673.const$0,"g_param_spec_pointer");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_pointer(char* name, char* nick, char* blurb, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_pointer(MemorySegment name, MemorySegment nick, MemorySegment blurb, int flags) {
        var mh$ = g_param_spec_pointer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_value_array$MH() {
        return RuntimeHelper.requireNonNull(constants$673.const$1,"g_param_spec_value_array");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_value_array(char* name, char* nick, char* blurb, struct _GParamSpec* element_spec, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_value_array(MemorySegment name, MemorySegment nick, MemorySegment blurb, MemorySegment element_spec, int flags) {
        var mh$ = g_param_spec_value_array$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, element_spec, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_object$MH() {
        return RuntimeHelper.requireNonNull(constants$673.const$2,"g_param_spec_object");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_object(char* name, char* nick, char* blurb, unsigned long object_type, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_object(MemorySegment name, MemorySegment nick, MemorySegment blurb, long object_type, int flags) {
        var mh$ = g_param_spec_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, object_type, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_override$MH() {
        return RuntimeHelper.requireNonNull(constants$673.const$3,"g_param_spec_override");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_override(char* name, struct _GParamSpec* overridden);
     * }
     */
    public static MemorySegment g_param_spec_override(MemorySegment name, MemorySegment overridden) {
        var mh$ = g_param_spec_override$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, overridden);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_gtype$MH() {
        return RuntimeHelper.requireNonNull(constants$673.const$4,"g_param_spec_gtype");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_gtype(char* name, char* nick, char* blurb, unsigned long is_a_type, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_gtype(MemorySegment name, MemorySegment nick, MemorySegment blurb, long is_a_type, int flags) {
        var mh$ = g_param_spec_gtype$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, is_a_type, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$673.const$6,"g_param_spec_variant");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* g_param_spec_variant(char* name, char* nick, char* blurb, struct _GVariantType* type, struct _GVariant* default_value, enum GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_variant(MemorySegment name, MemorySegment nick, MemorySegment blurb, MemorySegment type, MemorySegment default_value, int flags) {
        var mh$ = g_param_spec_variant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, type, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout g_param_spec_types$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle g_param_spec_types$VH() {
        return constants$211.const$1;
    }
    public static MemorySegment g_param_spec_types$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$674.const$0,"g_param_spec_types");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * unsigned long* g_param_spec_types;
     * }
     */
    public static MemorySegment g_param_spec_types$get() {
        return (java.lang.foreign.MemorySegment) constants$211.const$1.get(RuntimeHelper.requireNonNull(constants$674.const$0, "g_param_spec_types"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * unsigned long* g_param_spec_types;
     * }
     */
    public static void g_param_spec_types$set(MemorySegment x) {
        constants$211.const$1.set(RuntimeHelper.requireNonNull(constants$674.const$0, "g_param_spec_types"), x);
    }
    public static MethodHandle g_signal_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$674.const$1,"g_signal_group_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_signal_group_get_type();
     * }
     */
    public static long g_signal_group_get_type() {
        var mh$ = g_signal_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_new$MH() {
        return RuntimeHelper.requireNonNull(constants$674.const$2,"g_signal_group_new");
    }
    /**
     * {@snippet :
     * struct _GSignalGroup* g_signal_group_new(unsigned long target_type);
     * }
     */
    public static MemorySegment g_signal_group_new(long target_type) {
        var mh$ = g_signal_group_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(target_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_set_target$MH() {
        return RuntimeHelper.requireNonNull(constants$674.const$3,"g_signal_group_set_target");
    }
    /**
     * {@snippet :
     * void g_signal_group_set_target(struct _GSignalGroup* self, void* target);
     * }
     */
    public static void g_signal_group_set_target(MemorySegment self, MemorySegment target) {
        var mh$ = g_signal_group_set_target$MH();
        try {
            mh$.invokeExact(self, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_dup_target$MH() {
        return RuntimeHelper.requireNonNull(constants$674.const$4,"g_signal_group_dup_target");
    }
    /**
     * {@snippet :
     * void* g_signal_group_dup_target(struct _GSignalGroup* self);
     * }
     */
    public static MemorySegment g_signal_group_dup_target(MemorySegment self) {
        var mh$ = g_signal_group_dup_target$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_block$MH() {
        return RuntimeHelper.requireNonNull(constants$674.const$5,"g_signal_group_block");
    }
    /**
     * {@snippet :
     * void g_signal_group_block(struct _GSignalGroup* self);
     * }
     */
    public static void g_signal_group_block(MemorySegment self) {
        var mh$ = g_signal_group_block$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_unblock$MH() {
        return RuntimeHelper.requireNonNull(constants$675.const$0,"g_signal_group_unblock");
    }
    /**
     * {@snippet :
     * void g_signal_group_unblock(struct _GSignalGroup* self);
     * }
     */
    public static void g_signal_group_unblock(MemorySegment self) {
        var mh$ = g_signal_group_unblock$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_connect_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$675.const$1,"g_signal_group_connect_closure");
    }
    /**
     * {@snippet :
     * void g_signal_group_connect_closure(struct _GSignalGroup* self, char* detailed_signal, struct _GClosure* closure, int after);
     * }
     */
    public static void g_signal_group_connect_closure(MemorySegment self, MemorySegment detailed_signal, MemorySegment closure, int after) {
        var mh$ = g_signal_group_connect_closure$MH();
        try {
            mh$.invokeExact(self, detailed_signal, closure, after);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_connect_object$MH() {
        return RuntimeHelper.requireNonNull(constants$675.const$3,"g_signal_group_connect_object");
    }
    /**
     * {@snippet :
     * void g_signal_group_connect_object(struct _GSignalGroup* self, char* detailed_signal, void (*c_handler)(), void* object, enum GConnectFlags flags);
     * }
     */
    public static void g_signal_group_connect_object(MemorySegment self, MemorySegment detailed_signal, MemorySegment c_handler, MemorySegment object, int flags) {
        var mh$ = g_signal_group_connect_object$MH();
        try {
            mh$.invokeExact(self, detailed_signal, c_handler, object, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_connect_data$MH() {
        return RuntimeHelper.requireNonNull(constants$676.const$1,"g_signal_group_connect_data");
    }
    /**
     * {@snippet :
     * void g_signal_group_connect_data(struct _GSignalGroup* self, char* detailed_signal, void (*c_handler)(), void* data, void (*notify)(void*,struct _GClosure*), enum GConnectFlags flags);
     * }
     */
    public static void g_signal_group_connect_data(MemorySegment self, MemorySegment detailed_signal, MemorySegment c_handler, MemorySegment data, MemorySegment notify, int flags) {
        var mh$ = g_signal_group_connect_data$MH();
        try {
            mh$.invokeExact(self, detailed_signal, c_handler, data, notify, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$676.const$3,"g_signal_group_connect");
    }
    /**
     * {@snippet :
     * void g_signal_group_connect(struct _GSignalGroup* self, char* detailed_signal, void (*c_handler)(), void* data);
     * }
     */
    public static void g_signal_group_connect(MemorySegment self, MemorySegment detailed_signal, MemorySegment c_handler, MemorySegment data) {
        var mh$ = g_signal_group_connect$MH();
        try {
            mh$.invokeExact(self, detailed_signal, c_handler, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_connect_after$MH() {
        return RuntimeHelper.requireNonNull(constants$676.const$5,"g_signal_group_connect_after");
    }
    /**
     * {@snippet :
     * void g_signal_group_connect_after(struct _GSignalGroup* self, char* detailed_signal, void (*c_handler)(), void* data);
     * }
     */
    public static void g_signal_group_connect_after(MemorySegment self, MemorySegment detailed_signal, MemorySegment c_handler, MemorySegment data) {
        var mh$ = g_signal_group_connect_after$MH();
        try {
            mh$.invokeExact(self, detailed_signal, c_handler, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_connect_swapped$MH() {
        return RuntimeHelper.requireNonNull(constants$677.const$1,"g_signal_group_connect_swapped");
    }
    /**
     * {@snippet :
     * void g_signal_group_connect_swapped(struct _GSignalGroup* self, char* detailed_signal, void (*c_handler)(), void* data);
     * }
     */
    public static void g_signal_group_connect_swapped(MemorySegment self, MemorySegment detailed_signal, MemorySegment c_handler, MemorySegment data) {
        var mh$ = g_signal_group_connect_swapped$MH();
        try {
            mh$.invokeExact(self, detailed_signal, c_handler, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$677.const$2,"g_source_set_closure");
    }
    /**
     * {@snippet :
     * void g_source_set_closure(struct _GSource* source, struct _GClosure* closure);
     * }
     */
    public static void g_source_set_closure(MemorySegment source, MemorySegment closure) {
        var mh$ = g_source_set_closure$MH();
        try {
            mh$.invokeExact(source, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_dummy_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$677.const$3,"g_source_set_dummy_callback");
    }
    /**
     * {@snippet :
     * void g_source_set_dummy_callback(struct _GSource* source);
     * }
     */
    public static void g_source_set_dummy_callback(MemorySegment source) {
        var mh$ = g_source_set_dummy_callback$MH();
        try {
            mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GTypeModule* GTypeModule_autoptr;
     * }
     */
    public static final AddressLayout GTypeModule_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GTypeModule_listautoptr;
     * }
     */
    public static final AddressLayout GTypeModule_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GTypeModule_slistautoptr;
     * }
     */
    public static final AddressLayout GTypeModule_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTypeModule_queueautoptr;
     * }
     */
    public static final AddressLayout GTypeModule_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle g_type_module_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$680.const$4,"g_type_module_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_type_module_get_type();
     * }
     */
    public static long g_type_module_get_type() {
        var mh$ = g_type_module_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_use$MH() {
        return RuntimeHelper.requireNonNull(constants$680.const$5,"g_type_module_use");
    }
    /**
     * {@snippet :
     * int g_type_module_use(struct _GTypeModule* module);
     * }
     */
    public static int g_type_module_use(MemorySegment module) {
        var mh$ = g_type_module_use$MH();
        try {
            return (int)mh$.invokeExact(module);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_unuse$MH() {
        return RuntimeHelper.requireNonNull(constants$681.const$0,"g_type_module_unuse");
    }
    /**
     * {@snippet :
     * void g_type_module_unuse(struct _GTypeModule* module);
     * }
     */
    public static void g_type_module_unuse(MemorySegment module) {
        var mh$ = g_type_module_unuse$MH();
        try {
            mh$.invokeExact(module);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$681.const$1,"g_type_module_set_name");
    }
    /**
     * {@snippet :
     * void g_type_module_set_name(struct _GTypeModule* module, char* name);
     * }
     */
    public static void g_type_module_set_name(MemorySegment module, MemorySegment name) {
        var mh$ = g_type_module_set_name$MH();
        try {
            mh$.invokeExact(module, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_register_type$MH() {
        return RuntimeHelper.requireNonNull(constants$681.const$3,"g_type_module_register_type");
    }
    /**
     * {@snippet :
     * unsigned long g_type_module_register_type(struct _GTypeModule* module, unsigned long parent_type, char* type_name, struct _GTypeInfo* type_info, enum GTypeFlags flags);
     * }
     */
    public static long g_type_module_register_type(MemorySegment module, long parent_type, MemorySegment type_name, MemorySegment type_info, int flags) {
        var mh$ = g_type_module_register_type$MH();
        try {
            return (long)mh$.invokeExact(module, parent_type, type_name, type_info, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_add_interface$MH() {
        return RuntimeHelper.requireNonNull(constants$681.const$4,"g_type_module_add_interface");
    }
    /**
     * {@snippet :
     * void g_type_module_add_interface(struct _GTypeModule* module, unsigned long instance_type, unsigned long interface_type, struct _GInterfaceInfo* interface_info);
     * }
     */
    public static void g_type_module_add_interface(MemorySegment module, long instance_type, long interface_type, MemorySegment interface_info) {
        var mh$ = g_type_module_add_interface$MH();
        try {
            mh$.invokeExact(module, instance_type, interface_type, interface_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_register_enum$MH() {
        return RuntimeHelper.requireNonNull(constants$681.const$5,"g_type_module_register_enum");
    }
    /**
     * {@snippet :
     * unsigned long g_type_module_register_enum(struct _GTypeModule* module, char* name, struct _GEnumValue* const_static_values);
     * }
     */
    public static long g_type_module_register_enum(MemorySegment module, MemorySegment name, MemorySegment const_static_values) {
        var mh$ = g_type_module_register_enum$MH();
        try {
            return (long)mh$.invokeExact(module, name, const_static_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_register_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$682.const$0,"g_type_module_register_flags");
    }
    /**
     * {@snippet :
     * unsigned long g_type_module_register_flags(struct _GTypeModule* module, char* name, struct _GFlagsValue* const_static_values);
     * }
     */
    public static long g_type_module_register_flags(MemorySegment module, MemorySegment name, MemorySegment const_static_values) {
        var mh$ = g_type_module_register_flags$MH();
        try {
            return (long)mh$.invokeExact(module, name, const_static_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_plugin_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$684.const$5,"g_type_plugin_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_type_plugin_get_type();
     * }
     */
    public static long g_type_plugin_get_type() {
        var mh$ = g_type_plugin_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_plugin_use$MH() {
        return RuntimeHelper.requireNonNull(constants$685.const$0,"g_type_plugin_use");
    }
    /**
     * {@snippet :
     * void g_type_plugin_use(struct _GTypePlugin* plugin);
     * }
     */
    public static void g_type_plugin_use(MemorySegment plugin) {
        var mh$ = g_type_plugin_use$MH();
        try {
            mh$.invokeExact(plugin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_plugin_unuse$MH() {
        return RuntimeHelper.requireNonNull(constants$685.const$1,"g_type_plugin_unuse");
    }
    /**
     * {@snippet :
     * void g_type_plugin_unuse(struct _GTypePlugin* plugin);
     * }
     */
    public static void g_type_plugin_unuse(MemorySegment plugin) {
        var mh$ = g_type_plugin_unuse$MH();
        try {
            mh$.invokeExact(plugin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_plugin_complete_type_info$MH() {
        return RuntimeHelper.requireNonNull(constants$685.const$2,"g_type_plugin_complete_type_info");
    }
    /**
     * {@snippet :
     * void g_type_plugin_complete_type_info(struct _GTypePlugin* plugin, unsigned long g_type, struct _GTypeInfo* info, struct _GTypeValueTable* value_table);
     * }
     */
    public static void g_type_plugin_complete_type_info(MemorySegment plugin, long g_type, MemorySegment info, MemorySegment value_table) {
        var mh$ = g_type_plugin_complete_type_info$MH();
        try {
            mh$.invokeExact(plugin, g_type, info, value_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_plugin_complete_interface_info$MH() {
        return RuntimeHelper.requireNonNull(constants$685.const$3,"g_type_plugin_complete_interface_info");
    }
    /**
     * {@snippet :
     * void g_type_plugin_complete_interface_info(struct _GTypePlugin* plugin, unsigned long instance_type, unsigned long interface_type, struct _GInterfaceInfo* info);
     * }
     */
    public static void g_type_plugin_complete_interface_info(MemorySegment plugin, long instance_type, long interface_type, MemorySegment info) {
        var mh$ = g_type_plugin_complete_interface_info$MH();
        try {
            mh$.invokeExact(plugin, instance_type, interface_type, info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$686.const$2,"g_value_array_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_value_array_get_type();
     * }
     */
    public static long g_value_array_get_type() {
        var mh$ = g_value_array_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_get_nth$MH() {
        return RuntimeHelper.requireNonNull(constants$686.const$3,"g_value_array_get_nth");
    }
    /**
     * {@snippet :
     * struct _GValue* g_value_array_get_nth(struct _GValueArray* value_array, unsigned int index_);
     * }
     */
    public static MemorySegment g_value_array_get_nth(MemorySegment value_array, int index_) {
        var mh$ = g_value_array_get_nth$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_array, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_new$MH() {
        return RuntimeHelper.requireNonNull(constants$686.const$4,"g_value_array_new");
    }
    /**
     * {@snippet :
     * struct _GValueArray* g_value_array_new(unsigned int n_prealloced);
     * }
     */
    public static MemorySegment g_value_array_new(int n_prealloced) {
        var mh$ = g_value_array_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(n_prealloced);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_free$MH() {
        return RuntimeHelper.requireNonNull(constants$686.const$5,"g_value_array_free");
    }
    /**
     * {@snippet :
     * void g_value_array_free(struct _GValueArray* value_array);
     * }
     */
    public static void g_value_array_free(MemorySegment value_array) {
        var mh$ = g_value_array_free$MH();
        try {
            mh$.invokeExact(value_array);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$687.const$0,"g_value_array_copy");
    }
    /**
     * {@snippet :
     * struct _GValueArray* g_value_array_copy(struct _GValueArray* value_array);
     * }
     */
    public static MemorySegment g_value_array_copy(MemorySegment value_array) {
        var mh$ = g_value_array_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_array);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$687.const$1,"g_value_array_prepend");
    }
    /**
     * {@snippet :
     * struct _GValueArray* g_value_array_prepend(struct _GValueArray* value_array, struct _GValue* value);
     * }
     */
    public static MemorySegment g_value_array_prepend(MemorySegment value_array, MemorySegment value) {
        var mh$ = g_value_array_prepend$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_array, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_append$MH() {
        return RuntimeHelper.requireNonNull(constants$687.const$2,"g_value_array_append");
    }
    /**
     * {@snippet :
     * struct _GValueArray* g_value_array_append(struct _GValueArray* value_array, struct _GValue* value);
     * }
     */
    public static MemorySegment g_value_array_append(MemorySegment value_array, MemorySegment value) {
        var mh$ = g_value_array_append$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_array, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$687.const$3,"g_value_array_insert");
    }
    /**
     * {@snippet :
     * struct _GValueArray* g_value_array_insert(struct _GValueArray* value_array, unsigned int index_, struct _GValue* value);
     * }
     */
    public static MemorySegment g_value_array_insert(MemorySegment value_array, int index_, MemorySegment value) {
        var mh$ = g_value_array_insert$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_array, index_, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$687.const$4,"g_value_array_remove");
    }
    /**
     * {@snippet :
     * struct _GValueArray* g_value_array_remove(struct _GValueArray* value_array, unsigned int index_);
     * }
     */
    public static MemorySegment g_value_array_remove(MemorySegment value_array, int index_) {
        var mh$ = g_value_array_remove$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_array, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$688.const$0,"g_value_array_sort");
    }
    /**
     * {@snippet :
     * struct _GValueArray* g_value_array_sort(struct _GValueArray* value_array, int (*compare_func)(void*,void*));
     * }
     */
    public static MemorySegment g_value_array_sort(MemorySegment value_array, MemorySegment compare_func) {
        var mh$ = g_value_array_sort$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_array, compare_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_sort_with_data$MH() {
        return RuntimeHelper.requireNonNull(constants$688.const$2,"g_value_array_sort_with_data");
    }
    /**
     * {@snippet :
     * struct _GValueArray* g_value_array_sort_with_data(struct _GValueArray* value_array, int (*compare_func)(void*,void*,void*), void* user_data);
     * }
     */
    public static MemorySegment g_value_array_sort_with_data(MemorySegment value_array, MemorySegment compare_func, MemorySegment user_data) {
        var mh$ = g_value_array_sort_with_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_array, compare_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_char$MH() {
        return RuntimeHelper.requireNonNull(constants$688.const$3,"g_value_set_char");
    }
    /**
     * {@snippet :
     * void g_value_set_char(struct _GValue* value, char v_char);
     * }
     */
    public static void g_value_set_char(MemorySegment value, byte v_char) {
        var mh$ = g_value_set_char$MH();
        try {
            mh$.invokeExact(value, v_char);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_char$MH() {
        return RuntimeHelper.requireNonNull(constants$688.const$4,"g_value_get_char");
    }
    /**
     * {@snippet :
     * char g_value_get_char(struct _GValue* value);
     * }
     */
    public static byte g_value_get_char(MemorySegment value) {
        var mh$ = g_value_get_char$MH();
        try {
            return (byte)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_schar$MH() {
        return RuntimeHelper.requireNonNull(constants$688.const$5,"g_value_set_schar");
    }
    /**
     * {@snippet :
     * void g_value_set_schar(struct _GValue* value, signed char v_char);
     * }
     */
    public static void g_value_set_schar(MemorySegment value, byte v_char) {
        var mh$ = g_value_set_schar$MH();
        try {
            mh$.invokeExact(value, v_char);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_schar$MH() {
        return RuntimeHelper.requireNonNull(constants$689.const$0,"g_value_get_schar");
    }
    /**
     * {@snippet :
     * signed char g_value_get_schar(struct _GValue* value);
     * }
     */
    public static byte g_value_get_schar(MemorySegment value) {
        var mh$ = g_value_get_schar$MH();
        try {
            return (byte)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_uchar$MH() {
        return RuntimeHelper.requireNonNull(constants$689.const$1,"g_value_set_uchar");
    }
    /**
     * {@snippet :
     * void g_value_set_uchar(struct _GValue* value, unsigned char v_uchar);
     * }
     */
    public static void g_value_set_uchar(MemorySegment value, byte v_uchar) {
        var mh$ = g_value_set_uchar$MH();
        try {
            mh$.invokeExact(value, v_uchar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_uchar$MH() {
        return RuntimeHelper.requireNonNull(constants$689.const$2,"g_value_get_uchar");
    }
    /**
     * {@snippet :
     * unsigned char g_value_get_uchar(struct _GValue* value);
     * }
     */
    public static byte g_value_get_uchar(MemorySegment value) {
        var mh$ = g_value_get_uchar$MH();
        try {
            return (byte)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$689.const$3,"g_value_set_boolean");
    }
    /**
     * {@snippet :
     * void g_value_set_boolean(struct _GValue* value, int v_boolean);
     * }
     */
    public static void g_value_set_boolean(MemorySegment value, int v_boolean) {
        var mh$ = g_value_set_boolean$MH();
        try {
            mh$.invokeExact(value, v_boolean);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$689.const$4,"g_value_get_boolean");
    }
    /**
     * {@snippet :
     * int g_value_get_boolean(struct _GValue* value);
     * }
     */
    public static int g_value_get_boolean(MemorySegment value) {
        var mh$ = g_value_get_boolean$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_int$MH() {
        return RuntimeHelper.requireNonNull(constants$689.const$5,"g_value_set_int");
    }
    /**
     * {@snippet :
     * void g_value_set_int(struct _GValue* value, int v_int);
     * }
     */
    public static void g_value_set_int(MemorySegment value, int v_int) {
        var mh$ = g_value_set_int$MH();
        try {
            mh$.invokeExact(value, v_int);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_int$MH() {
        return RuntimeHelper.requireNonNull(constants$690.const$0,"g_value_get_int");
    }
    /**
     * {@snippet :
     * int g_value_get_int(struct _GValue* value);
     * }
     */
    public static int g_value_get_int(MemorySegment value) {
        var mh$ = g_value_get_int$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_uint$MH() {
        return RuntimeHelper.requireNonNull(constants$690.const$1,"g_value_set_uint");
    }
    /**
     * {@snippet :
     * void g_value_set_uint(struct _GValue* value, unsigned int v_uint);
     * }
     */
    public static void g_value_set_uint(MemorySegment value, int v_uint) {
        var mh$ = g_value_set_uint$MH();
        try {
            mh$.invokeExact(value, v_uint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_uint$MH() {
        return RuntimeHelper.requireNonNull(constants$690.const$2,"g_value_get_uint");
    }
    /**
     * {@snippet :
     * unsigned int g_value_get_uint(struct _GValue* value);
     * }
     */
    public static int g_value_get_uint(MemorySegment value) {
        var mh$ = g_value_get_uint$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_long$MH() {
        return RuntimeHelper.requireNonNull(constants$690.const$3,"g_value_set_long");
    }
    /**
     * {@snippet :
     * void g_value_set_long(struct _GValue* value, long v_long);
     * }
     */
    public static void g_value_set_long(MemorySegment value, long v_long) {
        var mh$ = g_value_set_long$MH();
        try {
            mh$.invokeExact(value, v_long);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_long$MH() {
        return RuntimeHelper.requireNonNull(constants$690.const$4,"g_value_get_long");
    }
    /**
     * {@snippet :
     * long g_value_get_long(struct _GValue* value);
     * }
     */
    public static long g_value_get_long(MemorySegment value) {
        var mh$ = g_value_get_long$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_ulong$MH() {
        return RuntimeHelper.requireNonNull(constants$690.const$5,"g_value_set_ulong");
    }
    /**
     * {@snippet :
     * void g_value_set_ulong(struct _GValue* value, unsigned long v_ulong);
     * }
     */
    public static void g_value_set_ulong(MemorySegment value, long v_ulong) {
        var mh$ = g_value_set_ulong$MH();
        try {
            mh$.invokeExact(value, v_ulong);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_ulong$MH() {
        return RuntimeHelper.requireNonNull(constants$691.const$0,"g_value_get_ulong");
    }
    /**
     * {@snippet :
     * unsigned long g_value_get_ulong(struct _GValue* value);
     * }
     */
    public static long g_value_get_ulong(MemorySegment value) {
        var mh$ = g_value_get_ulong$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$691.const$1,"g_value_set_int64");
    }
    /**
     * {@snippet :
     * void g_value_set_int64(struct _GValue* value, long v_int64);
     * }
     */
    public static void g_value_set_int64(MemorySegment value, long v_int64) {
        var mh$ = g_value_set_int64$MH();
        try {
            mh$.invokeExact(value, v_int64);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$691.const$2,"g_value_get_int64");
    }
    /**
     * {@snippet :
     * long g_value_get_int64(struct _GValue* value);
     * }
     */
    public static long g_value_get_int64(MemorySegment value) {
        var mh$ = g_value_get_int64$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$691.const$3,"g_value_set_uint64");
    }
    /**
     * {@snippet :
     * void g_value_set_uint64(struct _GValue* value, unsigned long v_uint64);
     * }
     */
    public static void g_value_set_uint64(MemorySegment value, long v_uint64) {
        var mh$ = g_value_set_uint64$MH();
        try {
            mh$.invokeExact(value, v_uint64);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$691.const$4,"g_value_get_uint64");
    }
    /**
     * {@snippet :
     * unsigned long g_value_get_uint64(struct _GValue* value);
     * }
     */
    public static long g_value_get_uint64(MemorySegment value) {
        var mh$ = g_value_get_uint64$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_float$MH() {
        return RuntimeHelper.requireNonNull(constants$691.const$6,"g_value_set_float");
    }
    /**
     * {@snippet :
     * void g_value_set_float(struct _GValue* value, float v_float);
     * }
     */
    public static void g_value_set_float(MemorySegment value, float v_float) {
        var mh$ = g_value_set_float$MH();
        try {
            mh$.invokeExact(value, v_float);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_float$MH() {
        return RuntimeHelper.requireNonNull(constants$692.const$1,"g_value_get_float");
    }
    /**
     * {@snippet :
     * float g_value_get_float(struct _GValue* value);
     * }
     */
    public static float g_value_get_float(MemorySegment value) {
        var mh$ = g_value_get_float$MH();
        try {
            return (float)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_double$MH() {
        return RuntimeHelper.requireNonNull(constants$692.const$3,"g_value_set_double");
    }
    /**
     * {@snippet :
     * void g_value_set_double(struct _GValue* value, double v_double);
     * }
     */
    public static void g_value_set_double(MemorySegment value, double v_double) {
        var mh$ = g_value_set_double$MH();
        try {
            mh$.invokeExact(value, v_double);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_double$MH() {
        return RuntimeHelper.requireNonNull(constants$692.const$4,"g_value_get_double");
    }
    /**
     * {@snippet :
     * double g_value_get_double(struct _GValue* value);
     * }
     */
    public static double g_value_get_double(MemorySegment value) {
        var mh$ = g_value_get_double$MH();
        try {
            return (double)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_string$MH() {
        return RuntimeHelper.requireNonNull(constants$692.const$5,"g_value_set_string");
    }
    /**
     * {@snippet :
     * void g_value_set_string(struct _GValue* value, char* v_string);
     * }
     */
    public static void g_value_set_string(MemorySegment value, MemorySegment v_string) {
        var mh$ = g_value_set_string$MH();
        try {
            mh$.invokeExact(value, v_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_static_string$MH() {
        return RuntimeHelper.requireNonNull(constants$693.const$0,"g_value_set_static_string");
    }
    /**
     * {@snippet :
     * void g_value_set_static_string(struct _GValue* value, char* v_string);
     * }
     */
    public static void g_value_set_static_string(MemorySegment value, MemorySegment v_string) {
        var mh$ = g_value_set_static_string$MH();
        try {
            mh$.invokeExact(value, v_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_interned_string$MH() {
        return RuntimeHelper.requireNonNull(constants$693.const$1,"g_value_set_interned_string");
    }
    /**
     * {@snippet :
     * void g_value_set_interned_string(struct _GValue* value, char* v_string);
     * }
     */
    public static void g_value_set_interned_string(MemorySegment value, MemorySegment v_string) {
        var mh$ = g_value_set_interned_string$MH();
        try {
            mh$.invokeExact(value, v_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_string$MH() {
        return RuntimeHelper.requireNonNull(constants$693.const$2,"g_value_get_string");
    }
    /**
     * {@snippet :
     * char* g_value_get_string(struct _GValue* value);
     * }
     */
    public static MemorySegment g_value_get_string(MemorySegment value) {
        var mh$ = g_value_get_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_dup_string$MH() {
        return RuntimeHelper.requireNonNull(constants$693.const$3,"g_value_dup_string");
    }
    /**
     * {@snippet :
     * char* g_value_dup_string(struct _GValue* value);
     * }
     */
    public static MemorySegment g_value_dup_string(MemorySegment value) {
        var mh$ = g_value_dup_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$693.const$4,"g_value_set_pointer");
    }
    /**
     * {@snippet :
     * void g_value_set_pointer(struct _GValue* value, void* v_pointer);
     * }
     */
    public static void g_value_set_pointer(MemorySegment value, MemorySegment v_pointer) {
        var mh$ = g_value_set_pointer$MH();
        try {
            mh$.invokeExact(value, v_pointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$693.const$5,"g_value_get_pointer");
    }
    /**
     * {@snippet :
     * void* g_value_get_pointer(struct _GValue* value);
     * }
     */
    public static MemorySegment g_value_get_pointer(MemorySegment value) {
        var mh$ = g_value_get_pointer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_gtype_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$694.const$0,"g_gtype_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_gtype_get_type();
     * }
     */
    public static long g_gtype_get_type() {
        var mh$ = g_gtype_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_gtype$MH() {
        return RuntimeHelper.requireNonNull(constants$694.const$1,"g_value_set_gtype");
    }
    /**
     * {@snippet :
     * void g_value_set_gtype(struct _GValue* value, unsigned long v_gtype);
     * }
     */
    public static void g_value_set_gtype(MemorySegment value, long v_gtype) {
        var mh$ = g_value_set_gtype$MH();
        try {
            mh$.invokeExact(value, v_gtype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_gtype$MH() {
        return RuntimeHelper.requireNonNull(constants$694.const$2,"g_value_get_gtype");
    }
    /**
     * {@snippet :
     * unsigned long g_value_get_gtype(struct _GValue* value);
     * }
     */
    public static long g_value_get_gtype(MemorySegment value) {
        var mh$ = g_value_get_gtype$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$694.const$3,"g_value_set_variant");
    }
    /**
     * {@snippet :
     * void g_value_set_variant(struct _GValue* value, struct _GVariant* variant);
     * }
     */
    public static void g_value_set_variant(MemorySegment value, MemorySegment variant) {
        var mh$ = g_value_set_variant$MH();
        try {
            mh$.invokeExact(value, variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_take_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$694.const$4,"g_value_take_variant");
    }
    /**
     * {@snippet :
     * void g_value_take_variant(struct _GValue* value, struct _GVariant* variant);
     * }
     */
    public static void g_value_take_variant(MemorySegment value, MemorySegment variant) {
        var mh$ = g_value_take_variant$MH();
        try {
            mh$.invokeExact(value, variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$694.const$5,"g_value_get_variant");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_value_get_variant(struct _GValue* value);
     * }
     */
    public static MemorySegment g_value_get_variant(MemorySegment value) {
        var mh$ = g_value_get_variant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_dup_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$695.const$0,"g_value_dup_variant");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_value_dup_variant(struct _GValue* value);
     * }
     */
    public static MemorySegment g_value_dup_variant(MemorySegment value) {
        var mh$ = g_value_dup_variant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pointer_type_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$695.const$1,"g_pointer_type_register_static");
    }
    /**
     * {@snippet :
     * unsigned long g_pointer_type_register_static(char* name);
     * }
     */
    public static long g_pointer_type_register_static(MemorySegment name) {
        var mh$ = g_pointer_type_register_static$MH();
        try {
            return (long)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strdup_value_contents$MH() {
        return RuntimeHelper.requireNonNull(constants$695.const$2,"g_strdup_value_contents");
    }
    /**
     * {@snippet :
     * char* g_strdup_value_contents(struct _GValue* value);
     * }
     */
    public static MemorySegment g_strdup_value_contents(MemorySegment value) {
        var mh$ = g_strdup_value_contents$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_take_string$MH() {
        return RuntimeHelper.requireNonNull(constants$695.const$3,"g_value_take_string");
    }
    /**
     * {@snippet :
     * void g_value_take_string(struct _GValue* value, char* v_string);
     * }
     */
    public static void g_value_take_string(MemorySegment value, MemorySegment v_string) {
        var mh$ = g_value_take_string$MH();
        try {
            mh$.invokeExact(value, v_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_string_take_ownership$MH() {
        return RuntimeHelper.requireNonNull(constants$695.const$4,"g_value_set_string_take_ownership");
    }
    /**
     * {@snippet :
     * void g_value_set_string_take_ownership(struct _GValue* value, char* v_string);
     * }
     */
    public static void g_value_set_string_take_ownership(MemorySegment value, MemorySegment v_string) {
        var mh$ = g_value_set_string_take_ownership$MH();
        try {
            mh$.invokeExact(value, v_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef char* gchararray;
     * }
     */
    public static final AddressLayout gchararray = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GClosure* GClosure_autoptr;
     * }
     */
    public static final AddressLayout GClosure_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GClosure_listautoptr;
     * }
     */
    public static final AddressLayout GClosure_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GClosure_slistautoptr;
     * }
     */
    public static final AddressLayout GClosure_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GClosure_queueautoptr;
     * }
     */
    public static final AddressLayout GClosure_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GEnumClass* GEnumClass_autoptr;
     * }
     */
    public static final AddressLayout GEnumClass_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GEnumClass_listautoptr;
     * }
     */
    public static final AddressLayout GEnumClass_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GEnumClass_slistautoptr;
     * }
     */
    public static final AddressLayout GEnumClass_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GEnumClass_queueautoptr;
     * }
     */
    public static final AddressLayout GEnumClass_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GFlagsClass* GFlagsClass_autoptr;
     * }
     */
    public static final AddressLayout GFlagsClass_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GFlagsClass_listautoptr;
     * }
     */
    public static final AddressLayout GFlagsClass_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GFlagsClass_slistautoptr;
     * }
     */
    public static final AddressLayout GFlagsClass_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFlagsClass_queueautoptr;
     * }
     */
    public static final AddressLayout GFlagsClass_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GObject* GObject_autoptr;
     * }
     */
    public static final AddressLayout GObject_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GObject_listautoptr;
     * }
     */
    public static final AddressLayout GObject_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GObject_slistautoptr;
     * }
     */
    public static final AddressLayout GObject_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GObject_queueautoptr;
     * }
     */
    public static final AddressLayout GObject_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GObject* GInitiallyUnowned_autoptr;
     * }
     */
    public static final AddressLayout GInitiallyUnowned_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GInitiallyUnowned_listautoptr;
     * }
     */
    public static final AddressLayout GInitiallyUnowned_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GInitiallyUnowned_slistautoptr;
     * }
     */
    public static final AddressLayout GInitiallyUnowned_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GInitiallyUnowned_queueautoptr;
     * }
     */
    public static final AddressLayout GInitiallyUnowned_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GParamSpec* GParamSpec_autoptr;
     * }
     */
    public static final AddressLayout GParamSpec_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GParamSpec_listautoptr;
     * }
     */
    public static final AddressLayout GParamSpec_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GParamSpec_slistautoptr;
     * }
     */
    public static final AddressLayout GParamSpec_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GParamSpec_queueautoptr;
     * }
     */
    public static final AddressLayout GParamSpec_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GTypeClass* GTypeClass_autoptr;
     * }
     */
    public static final AddressLayout GTypeClass_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GTypeClass_listautoptr;
     * }
     */
    public static final AddressLayout GTypeClass_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GTypeClass_slistautoptr;
     * }
     */
    public static final AddressLayout GTypeClass_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTypeClass_queueautoptr;
     * }
     */
    public static final AddressLayout GTypeClass_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum GAppInfoCreateFlags.G_APP_INFO_CREATE_NONE = 0;
     * }
     */
    public static int G_APP_INFO_CREATE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GAppInfoCreateFlags.G_APP_INFO_CREATE_NEEDS_TERMINAL = 1;
     * }
     */
    public static int G_APP_INFO_CREATE_NEEDS_TERMINAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GAppInfoCreateFlags.G_APP_INFO_CREATE_SUPPORTS_URIS = 2;
     * }
     */
    public static int G_APP_INFO_CREATE_SUPPORTS_URIS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GAppInfoCreateFlags.G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION = 4;
     * }
     */
    public static int G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GConverterFlags.G_CONVERTER_NO_FLAGS = 0;
     * }
     */
    public static int G_CONVERTER_NO_FLAGS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GConverterFlags.G_CONVERTER_INPUT_AT_END = 1;
     * }
     */
    public static int G_CONVERTER_INPUT_AT_END() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GConverterFlags.G_CONVERTER_FLUSH = 2;
     * }
     */
    public static int G_CONVERTER_FLUSH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GConverterResult.G_CONVERTER_ERROR = 0;
     * }
     */
    public static int G_CONVERTER_ERROR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GConverterResult.G_CONVERTER_CONVERTED = 1;
     * }
     */
    public static int G_CONVERTER_CONVERTED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GConverterResult.G_CONVERTER_FINISHED = 2;
     * }
     */
    public static int G_CONVERTER_FINISHED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GConverterResult.G_CONVERTER_FLUSHED = 3;
     * }
     */
    public static int G_CONVERTER_FLUSHED() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GDataStreamByteOrder.G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN = 0;
     * }
     */
    public static int G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GDataStreamByteOrder.G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN = 1;
     * }
     */
    public static int G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GDataStreamByteOrder.G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN = 2;
     * }
     */
    public static int G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GDataStreamNewlineType.G_DATA_STREAM_NEWLINE_TYPE_LF = 0;
     * }
     */
    public static int G_DATA_STREAM_NEWLINE_TYPE_LF() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GDataStreamNewlineType.G_DATA_STREAM_NEWLINE_TYPE_CR = 1;
     * }
     */
    public static int G_DATA_STREAM_NEWLINE_TYPE_CR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GDataStreamNewlineType.G_DATA_STREAM_NEWLINE_TYPE_CR_LF = 2;
     * }
     */
    public static int G_DATA_STREAM_NEWLINE_TYPE_CR_LF() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GDataStreamNewlineType.G_DATA_STREAM_NEWLINE_TYPE_ANY = 3;
     * }
     */
    public static int G_DATA_STREAM_NEWLINE_TYPE_ANY() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GFileAttributeType.G_FILE_ATTRIBUTE_TYPE_INVALID = 0;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GFileAttributeType.G_FILE_ATTRIBUTE_TYPE_STRING = 1;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_STRING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GFileAttributeType.G_FILE_ATTRIBUTE_TYPE_BYTE_STRING = 2;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_BYTE_STRING() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GFileAttributeType.G_FILE_ATTRIBUTE_TYPE_BOOLEAN = 3;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_BOOLEAN() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GFileAttributeType.G_FILE_ATTRIBUTE_TYPE_UINT32 = 4;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_UINT32() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GFileAttributeType.G_FILE_ATTRIBUTE_TYPE_INT32 = 5;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_INT32() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GFileAttributeType.G_FILE_ATTRIBUTE_TYPE_UINT64 = 6;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_UINT64() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GFileAttributeType.G_FILE_ATTRIBUTE_TYPE_INT64 = 7;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_INT64() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GFileAttributeType.G_FILE_ATTRIBUTE_TYPE_OBJECT = 8;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_OBJECT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GFileAttributeType.G_FILE_ATTRIBUTE_TYPE_STRINGV = 9;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_STRINGV() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum GFileAttributeInfoFlags.G_FILE_ATTRIBUTE_INFO_NONE = 0;
     * }
     */
    public static int G_FILE_ATTRIBUTE_INFO_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GFileAttributeInfoFlags.G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE = 1;
     * }
     */
    public static int G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GFileAttributeInfoFlags.G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED = 2;
     * }
     */
    public static int G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GFileAttributeStatus.G_FILE_ATTRIBUTE_STATUS_UNSET = 0;
     * }
     */
    public static int G_FILE_ATTRIBUTE_STATUS_UNSET() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GFileAttributeStatus.G_FILE_ATTRIBUTE_STATUS_SET = 1;
     * }
     */
    public static int G_FILE_ATTRIBUTE_STATUS_SET() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GFileAttributeStatus.G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING = 2;
     * }
     */
    public static int G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GFileQueryInfoFlags.G_FILE_QUERY_INFO_NONE = 0;
     * }
     */
    public static int G_FILE_QUERY_INFO_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GFileQueryInfoFlags.G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS = 1;
     * }
     */
    public static int G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GFileCreateFlags.G_FILE_CREATE_NONE = 0;
     * }
     */
    public static int G_FILE_CREATE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GFileCreateFlags.G_FILE_CREATE_PRIVATE = 1;
     * }
     */
    public static int G_FILE_CREATE_PRIVATE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GFileCreateFlags.G_FILE_CREATE_REPLACE_DESTINATION = 2;
     * }
     */
    public static int G_FILE_CREATE_REPLACE_DESTINATION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GFileMeasureFlags.G_FILE_MEASURE_NONE = 0;
     * }
     */
    public static int G_FILE_MEASURE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GFileMeasureFlags.G_FILE_MEASURE_REPORT_ANY_ERROR = 2;
     * }
     */
    public static int G_FILE_MEASURE_REPORT_ANY_ERROR() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GFileMeasureFlags.G_FILE_MEASURE_APPARENT_SIZE = 4;
     * }
     */
    public static int G_FILE_MEASURE_APPARENT_SIZE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GFileMeasureFlags.G_FILE_MEASURE_NO_XDEV = 8;
     * }
     */
    public static int G_FILE_MEASURE_NO_XDEV() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GMountMountFlags.G_MOUNT_MOUNT_NONE = 0;
     * }
     */
    public static int G_MOUNT_MOUNT_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GMountUnmountFlags.G_MOUNT_UNMOUNT_NONE = 0;
     * }
     */
    public static int G_MOUNT_UNMOUNT_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GMountUnmountFlags.G_MOUNT_UNMOUNT_FORCE = 1;
     * }
     */
    public static int G_MOUNT_UNMOUNT_FORCE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GDriveStartFlags.G_DRIVE_START_NONE = 0;
     * }
     */
    public static int G_DRIVE_START_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GDriveStartStopType.G_DRIVE_START_STOP_TYPE_UNKNOWN = 0;
     * }
     */
    public static int G_DRIVE_START_STOP_TYPE_UNKNOWN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GDriveStartStopType.G_DRIVE_START_STOP_TYPE_SHUTDOWN = 1;
     * }
     */
    public static int G_DRIVE_START_STOP_TYPE_SHUTDOWN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GDriveStartStopType.G_DRIVE_START_STOP_TYPE_NETWORK = 2;
     * }
     */
    public static int G_DRIVE_START_STOP_TYPE_NETWORK() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GDriveStartStopType.G_DRIVE_START_STOP_TYPE_MULTIDISK = 3;
     * }
     */
    public static int G_DRIVE_START_STOP_TYPE_MULTIDISK() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GDriveStartStopType.G_DRIVE_START_STOP_TYPE_PASSWORD = 4;
     * }
     */
    public static int G_DRIVE_START_STOP_TYPE_PASSWORD() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GFileCopyFlags.G_FILE_COPY_NONE = 0;
     * }
     */
    public static int G_FILE_COPY_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GFileCopyFlags.G_FILE_COPY_OVERWRITE = 1;
     * }
     */
    public static int G_FILE_COPY_OVERWRITE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GFileCopyFlags.G_FILE_COPY_BACKUP = 2;
     * }
     */
    public static int G_FILE_COPY_BACKUP() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GFileCopyFlags.G_FILE_COPY_NOFOLLOW_SYMLINKS = 4;
     * }
     */
    public static int G_FILE_COPY_NOFOLLOW_SYMLINKS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GFileCopyFlags.G_FILE_COPY_ALL_METADATA = 8;
     * }
     */
    public static int G_FILE_COPY_ALL_METADATA() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GFileCopyFlags.G_FILE_COPY_NO_FALLBACK_FOR_MOVE = 16;
     * }
     */
    public static int G_FILE_COPY_NO_FALLBACK_FOR_MOVE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GFileCopyFlags.G_FILE_COPY_TARGET_DEFAULT_PERMS = 32;
     * }
     */
    public static int G_FILE_COPY_TARGET_DEFAULT_PERMS() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GFileMonitorFlags.G_FILE_MONITOR_NONE = 0;
     * }
     */
    public static int G_FILE_MONITOR_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GFileMonitorFlags.G_FILE_MONITOR_WATCH_MOUNTS = 1;
     * }
     */
    public static int G_FILE_MONITOR_WATCH_MOUNTS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GFileMonitorFlags.G_FILE_MONITOR_SEND_MOVED = 2;
     * }
     */
    public static int G_FILE_MONITOR_SEND_MOVED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GFileMonitorFlags.G_FILE_MONITOR_WATCH_HARD_LINKS = 4;
     * }
     */
    public static int G_FILE_MONITOR_WATCH_HARD_LINKS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GFileMonitorFlags.G_FILE_MONITOR_WATCH_MOVES = 8;
     * }
     */
    public static int G_FILE_MONITOR_WATCH_MOVES() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GFileType.G_FILE_TYPE_UNKNOWN = 0;
     * }
     */
    public static int G_FILE_TYPE_UNKNOWN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GFileType.G_FILE_TYPE_REGULAR = 1;
     * }
     */
    public static int G_FILE_TYPE_REGULAR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GFileType.G_FILE_TYPE_DIRECTORY = 2;
     * }
     */
    public static int G_FILE_TYPE_DIRECTORY() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GFileType.G_FILE_TYPE_SYMBOLIC_LINK = 3;
     * }
     */
    public static int G_FILE_TYPE_SYMBOLIC_LINK() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GFileType.G_FILE_TYPE_SPECIAL = 4;
     * }
     */
    public static int G_FILE_TYPE_SPECIAL() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GFileType.G_FILE_TYPE_SHORTCUT = 5;
     * }
     */
    public static int G_FILE_TYPE_SHORTCUT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GFileType.G_FILE_TYPE_MOUNTABLE = 6;
     * }
     */
    public static int G_FILE_TYPE_MOUNTABLE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GFilesystemPreviewType.G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS = 0;
     * }
     */
    public static int G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GFilesystemPreviewType.G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL = 1;
     * }
     */
    public static int G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GFilesystemPreviewType.G_FILESYSTEM_PREVIEW_TYPE_NEVER = 2;
     * }
     */
    public static int G_FILESYSTEM_PREVIEW_TYPE_NEVER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GFileMonitorEvent.G_FILE_MONITOR_EVENT_CHANGED = 0;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_CHANGED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GFileMonitorEvent.G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT = 1;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GFileMonitorEvent.G_FILE_MONITOR_EVENT_DELETED = 2;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_DELETED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GFileMonitorEvent.G_FILE_MONITOR_EVENT_CREATED = 3;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_CREATED() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GFileMonitorEvent.G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED = 4;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GFileMonitorEvent.G_FILE_MONITOR_EVENT_PRE_UNMOUNT = 5;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_PRE_UNMOUNT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GFileMonitorEvent.G_FILE_MONITOR_EVENT_UNMOUNTED = 6;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_UNMOUNTED() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GFileMonitorEvent.G_FILE_MONITOR_EVENT_MOVED = 7;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_MOVED() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GFileMonitorEvent.G_FILE_MONITOR_EVENT_RENAMED = 8;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_RENAMED() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GFileMonitorEvent.G_FILE_MONITOR_EVENT_MOVED_IN = 9;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_MOVED_IN() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum GFileMonitorEvent.G_FILE_MONITOR_EVENT_MOVED_OUT = 10;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_MOVED_OUT() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_FAILED = 0;
     * }
     */
    public static int G_IO_ERROR_FAILED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_NOT_FOUND = 1;
     * }
     */
    public static int G_IO_ERROR_NOT_FOUND() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_EXISTS = 2;
     * }
     */
    public static int G_IO_ERROR_EXISTS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_IS_DIRECTORY = 3;
     * }
     */
    public static int G_IO_ERROR_IS_DIRECTORY() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_NOT_DIRECTORY = 4;
     * }
     */
    public static int G_IO_ERROR_NOT_DIRECTORY() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_NOT_EMPTY = 5;
     * }
     */
    public static int G_IO_ERROR_NOT_EMPTY() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_NOT_REGULAR_FILE = 6;
     * }
     */
    public static int G_IO_ERROR_NOT_REGULAR_FILE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_NOT_SYMBOLIC_LINK = 7;
     * }
     */
    public static int G_IO_ERROR_NOT_SYMBOLIC_LINK() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_NOT_MOUNTABLE_FILE = 8;
     * }
     */
    public static int G_IO_ERROR_NOT_MOUNTABLE_FILE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_FILENAME_TOO_LONG = 9;
     * }
     */
    public static int G_IO_ERROR_FILENAME_TOO_LONG() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_INVALID_FILENAME = 10;
     * }
     */
    public static int G_IO_ERROR_INVALID_FILENAME() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_TOO_MANY_LINKS = 11;
     * }
     */
    public static int G_IO_ERROR_TOO_MANY_LINKS() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_NO_SPACE = 12;
     * }
     */
    public static int G_IO_ERROR_NO_SPACE() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_INVALID_ARGUMENT = 13;
     * }
     */
    public static int G_IO_ERROR_INVALID_ARGUMENT() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_PERMISSION_DENIED = 14;
     * }
     */
    public static int G_IO_ERROR_PERMISSION_DENIED() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_NOT_SUPPORTED = 15;
     * }
     */
    public static int G_IO_ERROR_NOT_SUPPORTED() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_NOT_MOUNTED = 16;
     * }
     */
    public static int G_IO_ERROR_NOT_MOUNTED() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_ALREADY_MOUNTED = 17;
     * }
     */
    public static int G_IO_ERROR_ALREADY_MOUNTED() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_CLOSED = 18;
     * }
     */
    public static int G_IO_ERROR_CLOSED() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_CANCELLED = 19;
     * }
     */
    public static int G_IO_ERROR_CANCELLED() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_PENDING = 20;
     * }
     */
    public static int G_IO_ERROR_PENDING() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_READ_ONLY = 21;
     * }
     */
    public static int G_IO_ERROR_READ_ONLY() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_CANT_CREATE_BACKUP = 22;
     * }
     */
    public static int G_IO_ERROR_CANT_CREATE_BACKUP() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_WRONG_ETAG = 23;
     * }
     */
    public static int G_IO_ERROR_WRONG_ETAG() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_TIMED_OUT = 24;
     * }
     */
    public static int G_IO_ERROR_TIMED_OUT() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_WOULD_RECURSE = 25;
     * }
     */
    public static int G_IO_ERROR_WOULD_RECURSE() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_BUSY = 26;
     * }
     */
    public static int G_IO_ERROR_BUSY() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_WOULD_BLOCK = 27;
     * }
     */
    public static int G_IO_ERROR_WOULD_BLOCK() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_HOST_NOT_FOUND = 28;
     * }
     */
    public static int G_IO_ERROR_HOST_NOT_FOUND() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_WOULD_MERGE = 29;
     * }
     */
    public static int G_IO_ERROR_WOULD_MERGE() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_FAILED_HANDLED = 30;
     * }
     */
    public static int G_IO_ERROR_FAILED_HANDLED() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_TOO_MANY_OPEN_FILES = 31;
     * }
     */
    public static int G_IO_ERROR_TOO_MANY_OPEN_FILES() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_NOT_INITIALIZED = 32;
     * }
     */
    public static int G_IO_ERROR_NOT_INITIALIZED() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_ADDRESS_IN_USE = 33;
     * }
     */
    public static int G_IO_ERROR_ADDRESS_IN_USE() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_PARTIAL_INPUT = 34;
     * }
     */
    public static int G_IO_ERROR_PARTIAL_INPUT() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_INVALID_DATA = 35;
     * }
     */
    public static int G_IO_ERROR_INVALID_DATA() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_DBUS_ERROR = 36;
     * }
     */
    public static int G_IO_ERROR_DBUS_ERROR() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_HOST_UNREACHABLE = 37;
     * }
     */
    public static int G_IO_ERROR_HOST_UNREACHABLE() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_NETWORK_UNREACHABLE = 38;
     * }
     */
    public static int G_IO_ERROR_NETWORK_UNREACHABLE() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_CONNECTION_REFUSED = 39;
     * }
     */
    public static int G_IO_ERROR_CONNECTION_REFUSED() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_PROXY_FAILED = 40;
     * }
     */
    public static int G_IO_ERROR_PROXY_FAILED() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_PROXY_AUTH_FAILED = 41;
     * }
     */
    public static int G_IO_ERROR_PROXY_AUTH_FAILED() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_PROXY_NEED_AUTH = 42;
     * }
     */
    public static int G_IO_ERROR_PROXY_NEED_AUTH() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_PROXY_NOT_ALLOWED = 43;
     * }
     */
    public static int G_IO_ERROR_PROXY_NOT_ALLOWED() {
        return (int)43L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_BROKEN_PIPE = 44;
     * }
     */
    public static int G_IO_ERROR_BROKEN_PIPE() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_CONNECTION_CLOSED = 44;
     * }
     */
    public static int G_IO_ERROR_CONNECTION_CLOSED() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_NOT_CONNECTED = 45;
     * }
     */
    public static int G_IO_ERROR_NOT_CONNECTED() {
        return (int)45L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_MESSAGE_TOO_LARGE = 46;
     * }
     */
    public static int G_IO_ERROR_MESSAGE_TOO_LARGE() {
        return (int)46L;
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum.G_IO_ERROR_NO_SUCH_DEVICE = 47;
     * }
     */
    public static int G_IO_ERROR_NO_SUCH_DEVICE() {
        return (int)47L;
    }
    /**
     * {@snippet :
     * enum GAskPasswordFlags.G_ASK_PASSWORD_NEED_PASSWORD = 1;
     * }
     */
    public static int G_ASK_PASSWORD_NEED_PASSWORD() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GAskPasswordFlags.G_ASK_PASSWORD_NEED_USERNAME = 2;
     * }
     */
    public static int G_ASK_PASSWORD_NEED_USERNAME() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GAskPasswordFlags.G_ASK_PASSWORD_NEED_DOMAIN = 4;
     * }
     */
    public static int G_ASK_PASSWORD_NEED_DOMAIN() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GAskPasswordFlags.G_ASK_PASSWORD_SAVING_SUPPORTED = 8;
     * }
     */
    public static int G_ASK_PASSWORD_SAVING_SUPPORTED() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GAskPasswordFlags.G_ASK_PASSWORD_ANONYMOUS_SUPPORTED = 16;
     * }
     */
    public static int G_ASK_PASSWORD_ANONYMOUS_SUPPORTED() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GAskPasswordFlags.G_ASK_PASSWORD_TCRYPT = 32;
     * }
     */
    public static int G_ASK_PASSWORD_TCRYPT() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GPasswordSave.G_PASSWORD_SAVE_NEVER = 0;
     * }
     */
    public static int G_PASSWORD_SAVE_NEVER() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GPasswordSave.G_PASSWORD_SAVE_FOR_SESSION = 1;
     * }
     */
    public static int G_PASSWORD_SAVE_FOR_SESSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GPasswordSave.G_PASSWORD_SAVE_PERMANENTLY = 2;
     * }
     */
    public static int G_PASSWORD_SAVE_PERMANENTLY() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GMountOperationResult.G_MOUNT_OPERATION_HANDLED = 0;
     * }
     */
    public static int G_MOUNT_OPERATION_HANDLED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GMountOperationResult.G_MOUNT_OPERATION_ABORTED = 1;
     * }
     */
    public static int G_MOUNT_OPERATION_ABORTED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GMountOperationResult.G_MOUNT_OPERATION_UNHANDLED = 2;
     * }
     */
    public static int G_MOUNT_OPERATION_UNHANDLED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GOutputStreamSpliceFlags.G_OUTPUT_STREAM_SPLICE_NONE = 0;
     * }
     */
    public static int G_OUTPUT_STREAM_SPLICE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GOutputStreamSpliceFlags.G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE = 1;
     * }
     */
    public static int G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GOutputStreamSpliceFlags.G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET = 2;
     * }
     */
    public static int G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GIOStreamSpliceFlags.G_IO_STREAM_SPLICE_NONE = 0;
     * }
     */
    public static int G_IO_STREAM_SPLICE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GIOStreamSpliceFlags.G_IO_STREAM_SPLICE_CLOSE_STREAM1 = 1;
     * }
     */
    public static int G_IO_STREAM_SPLICE_CLOSE_STREAM1() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GIOStreamSpliceFlags.G_IO_STREAM_SPLICE_CLOSE_STREAM2 = 2;
     * }
     */
    public static int G_IO_STREAM_SPLICE_CLOSE_STREAM2() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GIOStreamSpliceFlags.G_IO_STREAM_SPLICE_WAIT_FOR_BOTH = 4;
     * }
     */
    public static int G_IO_STREAM_SPLICE_WAIT_FOR_BOTH() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GEmblemOrigin.G_EMBLEM_ORIGIN_UNKNOWN = 0;
     * }
     */
    public static int G_EMBLEM_ORIGIN_UNKNOWN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GEmblemOrigin.G_EMBLEM_ORIGIN_DEVICE = 1;
     * }
     */
    public static int G_EMBLEM_ORIGIN_DEVICE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GEmblemOrigin.G_EMBLEM_ORIGIN_LIVEMETADATA = 2;
     * }
     */
    public static int G_EMBLEM_ORIGIN_LIVEMETADATA() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GEmblemOrigin.G_EMBLEM_ORIGIN_TAG = 3;
     * }
     */
    public static int G_EMBLEM_ORIGIN_TAG() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GResolverError.G_RESOLVER_ERROR_NOT_FOUND = 0;
     * }
     */
    public static int G_RESOLVER_ERROR_NOT_FOUND() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GResolverError.G_RESOLVER_ERROR_TEMPORARY_FAILURE = 1;
     * }
     */
    public static int G_RESOLVER_ERROR_TEMPORARY_FAILURE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GResolverError.G_RESOLVER_ERROR_INTERNAL = 2;
     * }
     */
    public static int G_RESOLVER_ERROR_INTERNAL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GResolverRecordType.G_RESOLVER_RECORD_SRV = 1;
     * }
     */
    public static int G_RESOLVER_RECORD_SRV() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GResolverRecordType.G_RESOLVER_RECORD_MX = 2;
     * }
     */
    public static int G_RESOLVER_RECORD_MX() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GResolverRecordType.G_RESOLVER_RECORD_TXT = 3;
     * }
     */
    public static int G_RESOLVER_RECORD_TXT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GResolverRecordType.G_RESOLVER_RECORD_SOA = 4;
     * }
     */
    public static int G_RESOLVER_RECORD_SOA() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GResolverRecordType.G_RESOLVER_RECORD_NS = 5;
     * }
     */
    public static int G_RESOLVER_RECORD_NS() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GResourceError.G_RESOURCE_ERROR_NOT_FOUND = 0;
     * }
     */
    public static int G_RESOURCE_ERROR_NOT_FOUND() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GResourceError.G_RESOURCE_ERROR_INTERNAL = 1;
     * }
     */
    public static int G_RESOURCE_ERROR_INTERNAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GResourceFlags.G_RESOURCE_FLAGS_NONE = 0;
     * }
     */
    public static int G_RESOURCE_FLAGS_NONE() {
        return (int)0L;
    }
}


