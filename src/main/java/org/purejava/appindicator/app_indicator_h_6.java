// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class app_indicator_h_6 extends app_indicator_h_5 {

    /**
     * {@snippet :
     * typedef struct _GDateTime* GDateTime_autoptr;
     * }
     */
    public static final OfAddress GDateTime_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDateTime_listautoptr;
     * }
     */
    public static final OfAddress GDateTime_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDateTime_slistautoptr;
     * }
     */
    public static final OfAddress GDateTime_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDateTime_queueautoptr;
     * }
     */
    public static final OfAddress GDateTime_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDate* GDate_autoptr;
     * }
     */
    public static final OfAddress GDate_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDate_listautoptr;
     * }
     */
    public static final OfAddress GDate_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDate_slistautoptr;
     * }
     */
    public static final OfAddress GDate_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDate_queueautoptr;
     * }
     */
    public static final OfAddress GDate_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GDir* GDir_autoptr;
     * }
     */
    public static final OfAddress GDir_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GDir_listautoptr;
     * }
     */
    public static final OfAddress GDir_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GDir_slistautoptr;
     * }
     */
    public static final OfAddress GDir_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDir_queueautoptr;
     * }
     */
    public static final OfAddress GDir_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GError* GError_autoptr;
     * }
     */
    public static final OfAddress GError_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GError_listautoptr;
     * }
     */
    public static final OfAddress GError_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GError_slistautoptr;
     * }
     */
    public static final OfAddress GError_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GError_queueautoptr;
     * }
     */
    public static final OfAddress GError_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GHashTable* GHashTable_autoptr;
     * }
     */
    public static final OfAddress GHashTable_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GHashTable_listautoptr;
     * }
     */
    public static final OfAddress GHashTable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GHashTable_slistautoptr;
     * }
     */
    public static final OfAddress GHashTable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GHashTable_queueautoptr;
     * }
     */
    public static final OfAddress GHashTable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GHmac* GHmac_autoptr;
     * }
     */
    public static final OfAddress GHmac_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GHmac_listautoptr;
     * }
     */
    public static final OfAddress GHmac_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GHmac_slistautoptr;
     * }
     */
    public static final OfAddress GHmac_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GHmac_queueautoptr;
     * }
     */
    public static final OfAddress GHmac_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GIOChannel* GIOChannel_autoptr;
     * }
     */
    public static final OfAddress GIOChannel_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GIOChannel_listautoptr;
     * }
     */
    public static final OfAddress GIOChannel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GIOChannel_slistautoptr;
     * }
     */
    public static final OfAddress GIOChannel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GIOChannel_queueautoptr;
     * }
     */
    public static final OfAddress GIOChannel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GKeyFile* GKeyFile_autoptr;
     * }
     */
    public static final OfAddress GKeyFile_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GKeyFile_listautoptr;
     * }
     */
    public static final OfAddress GKeyFile_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GKeyFile_slistautoptr;
     * }
     */
    public static final OfAddress GKeyFile_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GKeyFile_queueautoptr;
     * }
     */
    public static final OfAddress GKeyFile_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GList_autoptr;
     * }
     */
    public static final OfAddress GList_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GList_listautoptr;
     * }
     */
    public static final OfAddress GList_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GList_slistautoptr;
     * }
     */
    public static final OfAddress GList_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GList_queueautoptr;
     * }
     */
    public static final OfAddress GList_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GArray* GArray_autoptr;
     * }
     */
    public static final OfAddress GArray_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GArray_listautoptr;
     * }
     */
    public static final OfAddress GArray_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GArray_slistautoptr;
     * }
     */
    public static final OfAddress GArray_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GArray_queueautoptr;
     * }
     */
    public static final OfAddress GArray_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GPtrArray* GPtrArray_autoptr;
     * }
     */
    public static final OfAddress GPtrArray_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GPtrArray_listautoptr;
     * }
     */
    public static final OfAddress GPtrArray_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GPtrArray_slistautoptr;
     * }
     */
    public static final OfAddress GPtrArray_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GPtrArray_queueautoptr;
     * }
     */
    public static final OfAddress GPtrArray_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GByteArray* GByteArray_autoptr;
     * }
     */
    public static final OfAddress GByteArray_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GByteArray_listautoptr;
     * }
     */
    public static final OfAddress GByteArray_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GByteArray_slistautoptr;
     * }
     */
    public static final OfAddress GByteArray_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GByteArray_queueautoptr;
     * }
     */
    public static final OfAddress GByteArray_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GMainContext* GMainContext_autoptr;
     * }
     */
    public static final OfAddress GMainContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GMainContext_listautoptr;
     * }
     */
    public static final OfAddress GMainContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GMainContext_slistautoptr;
     * }
     */
    public static final OfAddress GMainContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMainContext_queueautoptr;
     * }
     */
    public static final OfAddress GMainContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef void* GMainContextPusher_autoptr;
     * }
     */
    public static final OfAddress GMainContextPusher_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GMainContextPusher_listautoptr;
     * }
     */
    public static final OfAddress GMainContextPusher_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GMainContextPusher_slistautoptr;
     * }
     */
    public static final OfAddress GMainContextPusher_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMainContextPusher_queueautoptr;
     * }
     */
    public static final OfAddress GMainContextPusher_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GMainLoop* GMainLoop_autoptr;
     * }
     */
    public static final OfAddress GMainLoop_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GMainLoop_listautoptr;
     * }
     */
    public static final OfAddress GMainLoop_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GMainLoop_slistautoptr;
     * }
     */
    public static final OfAddress GMainLoop_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMainLoop_queueautoptr;
     * }
     */
    public static final OfAddress GMainLoop_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSource* GSource_autoptr;
     * }
     */
    public static final OfAddress GSource_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GSource_listautoptr;
     * }
     */
    public static final OfAddress GSource_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GSource_slistautoptr;
     * }
     */
    public static final OfAddress GSource_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSource_queueautoptr;
     * }
     */
    public static final OfAddress GSource_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GMappedFile* GMappedFile_autoptr;
     * }
     */
    public static final OfAddress GMappedFile_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GMappedFile_listautoptr;
     * }
     */
    public static final OfAddress GMappedFile_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GMappedFile_slistautoptr;
     * }
     */
    public static final OfAddress GMappedFile_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMappedFile_queueautoptr;
     * }
     */
    public static final OfAddress GMappedFile_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GMarkupParseContext* GMarkupParseContext_autoptr;
     * }
     */
    public static final OfAddress GMarkupParseContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GMarkupParseContext_listautoptr;
     * }
     */
    public static final OfAddress GMarkupParseContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GMarkupParseContext_slistautoptr;
     * }
     */
    public static final OfAddress GMarkupParseContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMarkupParseContext_queueautoptr;
     * }
     */
    public static final OfAddress GMarkupParseContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GNode* GNode_autoptr;
     * }
     */
    public static final OfAddress GNode_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GNode_listautoptr;
     * }
     */
    public static final OfAddress GNode_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GNode_slistautoptr;
     * }
     */
    public static final OfAddress GNode_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GNode_queueautoptr;
     * }
     */
    public static final OfAddress GNode_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GOptionContext* GOptionContext_autoptr;
     * }
     */
    public static final OfAddress GOptionContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GOptionContext_listautoptr;
     * }
     */
    public static final OfAddress GOptionContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GOptionContext_slistautoptr;
     * }
     */
    public static final OfAddress GOptionContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GOptionContext_queueautoptr;
     * }
     */
    public static final OfAddress GOptionContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GOptionGroup* GOptionGroup_autoptr;
     * }
     */
    public static final OfAddress GOptionGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GOptionGroup_listautoptr;
     * }
     */
    public static final OfAddress GOptionGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GOptionGroup_slistautoptr;
     * }
     */
    public static final OfAddress GOptionGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GOptionGroup_queueautoptr;
     * }
     */
    public static final OfAddress GOptionGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GPatternSpec* GPatternSpec_autoptr;
     * }
     */
    public static final OfAddress GPatternSpec_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GPatternSpec_listautoptr;
     * }
     */
    public static final OfAddress GPatternSpec_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GPatternSpec_slistautoptr;
     * }
     */
    public static final OfAddress GPatternSpec_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GPatternSpec_queueautoptr;
     * }
     */
    public static final OfAddress GPatternSpec_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GQueue_autoptr;
     * }
     */
    public static final OfAddress GQueue_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GQueue_listautoptr;
     * }
     */
    public static final OfAddress GQueue_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GQueue_slistautoptr;
     * }
     */
    public static final OfAddress GQueue_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GQueue_queueautoptr;
     * }
     */
    public static final OfAddress GQueue_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GRand* GRand_autoptr;
     * }
     */
    public static final OfAddress GRand_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GRand_listautoptr;
     * }
     */
    public static final OfAddress GRand_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GRand_slistautoptr;
     * }
     */
    public static final OfAddress GRand_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GRand_queueautoptr;
     * }
     */
    public static final OfAddress GRand_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GRegex* GRegex_autoptr;
     * }
     */
    public static final OfAddress GRegex_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GRegex_listautoptr;
     * }
     */
    public static final OfAddress GRegex_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GRegex_slistautoptr;
     * }
     */
    public static final OfAddress GRegex_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GRegex_queueautoptr;
     * }
     */
    public static final OfAddress GRegex_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GMatchInfo* GMatchInfo_autoptr;
     * }
     */
    public static final OfAddress GMatchInfo_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GMatchInfo_listautoptr;
     * }
     */
    public static final OfAddress GMatchInfo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GMatchInfo_slistautoptr;
     * }
     */
    public static final OfAddress GMatchInfo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMatchInfo_queueautoptr;
     * }
     */
    public static final OfAddress GMatchInfo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GScanner* GScanner_autoptr;
     * }
     */
    public static final OfAddress GScanner_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GScanner_listautoptr;
     * }
     */
    public static final OfAddress GScanner_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GScanner_slistautoptr;
     * }
     */
    public static final OfAddress GScanner_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GScanner_queueautoptr;
     * }
     */
    public static final OfAddress GScanner_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSequence* GSequence_autoptr;
     * }
     */
    public static final OfAddress GSequence_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GSequence_listautoptr;
     * }
     */
    public static final OfAddress GSequence_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GSequence_slistautoptr;
     * }
     */
    public static final OfAddress GSequence_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSequence_queueautoptr;
     * }
     */
    public static final OfAddress GSequence_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GSList_autoptr;
     * }
     */
    public static final OfAddress GSList_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GSList_listautoptr;
     * }
     */
    public static final OfAddress GSList_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GSList_slistautoptr;
     * }
     */
    public static final OfAddress GSList_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSList_queueautoptr;
     * }
     */
    public static final OfAddress GSList_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GString* GString_autoptr;
     * }
     */
    public static final OfAddress GString_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GString_listautoptr;
     * }
     */
    public static final OfAddress GString_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GString_slistautoptr;
     * }
     */
    public static final OfAddress GString_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GString_queueautoptr;
     * }
     */
    public static final OfAddress GString_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GStringChunk* GStringChunk_autoptr;
     * }
     */
    public static final OfAddress GStringChunk_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GStringChunk_listautoptr;
     * }
     */
    public static final OfAddress GStringChunk_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GStringChunk_slistautoptr;
     * }
     */
    public static final OfAddress GStringChunk_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GStringChunk_queueautoptr;
     * }
     */
    public static final OfAddress GStringChunk_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GStrvBuilder* GStrvBuilder_autoptr;
     * }
     */
    public static final OfAddress GStrvBuilder_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GStrvBuilder_listautoptr;
     * }
     */
    public static final OfAddress GStrvBuilder_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GStrvBuilder_slistautoptr;
     * }
     */
    public static final OfAddress GStrvBuilder_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GStrvBuilder_queueautoptr;
     * }
     */
    public static final OfAddress GStrvBuilder_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GThread* GThread_autoptr;
     * }
     */
    public static final OfAddress GThread_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GThread_listautoptr;
     * }
     */
    public static final OfAddress GThread_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GThread_slistautoptr;
     * }
     */
    public static final OfAddress GThread_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GThread_queueautoptr;
     * }
     */
    public static final OfAddress GThread_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef void* GMutexLocker_autoptr;
     * }
     */
    public static final OfAddress GMutexLocker_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GMutexLocker_listautoptr;
     * }
     */
    public static final OfAddress GMutexLocker_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GMutexLocker_slistautoptr;
     * }
     */
    public static final OfAddress GMutexLocker_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMutexLocker_queueautoptr;
     * }
     */
    public static final OfAddress GMutexLocker_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef void* GRecMutexLocker_autoptr;
     * }
     */
    public static final OfAddress GRecMutexLocker_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GRecMutexLocker_listautoptr;
     * }
     */
    public static final OfAddress GRecMutexLocker_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GRecMutexLocker_slistautoptr;
     * }
     */
    public static final OfAddress GRecMutexLocker_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GRecMutexLocker_queueautoptr;
     * }
     */
    public static final OfAddress GRecMutexLocker_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef void* GRWLockWriterLocker_autoptr;
     * }
     */
    public static final OfAddress GRWLockWriterLocker_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GRWLockWriterLocker_listautoptr;
     * }
     */
    public static final OfAddress GRWLockWriterLocker_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GRWLockWriterLocker_slistautoptr;
     * }
     */
    public static final OfAddress GRWLockWriterLocker_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GRWLockWriterLocker_queueautoptr;
     * }
     */
    public static final OfAddress GRWLockWriterLocker_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef void* GRWLockReaderLocker_autoptr;
     * }
     */
    public static final OfAddress GRWLockReaderLocker_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GRWLockReaderLocker_listautoptr;
     * }
     */
    public static final OfAddress GRWLockReaderLocker_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GRWLockReaderLocker_slistautoptr;
     * }
     */
    public static final OfAddress GRWLockReaderLocker_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GRWLockReaderLocker_queueautoptr;
     * }
     */
    public static final OfAddress GRWLockReaderLocker_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GTimer* GTimer_autoptr;
     * }
     */
    public static final OfAddress GTimer_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GTimer_listautoptr;
     * }
     */
    public static final OfAddress GTimer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GTimer_slistautoptr;
     * }
     */
    public static final OfAddress GTimer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTimer_queueautoptr;
     * }
     */
    public static final OfAddress GTimer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GTimeZone* GTimeZone_autoptr;
     * }
     */
    public static final OfAddress GTimeZone_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GTimeZone_listautoptr;
     * }
     */
    public static final OfAddress GTimeZone_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GTimeZone_slistautoptr;
     * }
     */
    public static final OfAddress GTimeZone_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTimeZone_queueautoptr;
     * }
     */
    public static final OfAddress GTimeZone_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GTree* GTree_autoptr;
     * }
     */
    public static final OfAddress GTree_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GTree_listautoptr;
     * }
     */
    public static final OfAddress GTree_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GTree_slistautoptr;
     * }
     */
    public static final OfAddress GTree_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTree_queueautoptr;
     * }
     */
    public static final OfAddress GTree_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GVariant* GVariant_autoptr;
     * }
     */
    public static final OfAddress GVariant_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GVariant_listautoptr;
     * }
     */
    public static final OfAddress GVariant_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GVariant_slistautoptr;
     * }
     */
    public static final OfAddress GVariant_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GVariant_queueautoptr;
     * }
     */
    public static final OfAddress GVariant_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GVariantBuilder* GVariantBuilder_autoptr;
     * }
     */
    public static final OfAddress GVariantBuilder_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GVariantBuilder_listautoptr;
     * }
     */
    public static final OfAddress GVariantBuilder_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GVariantBuilder_slistautoptr;
     * }
     */
    public static final OfAddress GVariantBuilder_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GVariantBuilder_queueautoptr;
     * }
     */
    public static final OfAddress GVariantBuilder_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GVariantIter* GVariantIter_autoptr;
     * }
     */
    public static final OfAddress GVariantIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GVariantIter_listautoptr;
     * }
     */
    public static final OfAddress GVariantIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GVariantIter_slistautoptr;
     * }
     */
    public static final OfAddress GVariantIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GVariantIter_queueautoptr;
     * }
     */
    public static final OfAddress GVariantIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GVariantDict* GVariantDict_autoptr;
     * }
     */
    public static final OfAddress GVariantDict_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GVariantDict_listautoptr;
     * }
     */
    public static final OfAddress GVariantDict_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GVariantDict_slistautoptr;
     * }
     */
    public static final OfAddress GVariantDict_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GVariantDict_queueautoptr;
     * }
     */
    public static final OfAddress GVariantDict_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GVariantType* GVariantType_autoptr;
     * }
     */
    public static final OfAddress GVariantType_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GVariantType_listautoptr;
     * }
     */
    public static final OfAddress GVariantType_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GVariantType_slistautoptr;
     * }
     */
    public static final OfAddress GVariantType_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GVariantType_queueautoptr;
     * }
     */
    public static final OfAddress GVariantType_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef char* GRefString_autoptr;
     * }
     */
    public static final OfAddress GRefString_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GRefString_listautoptr;
     * }
     */
    public static final OfAddress GRefString_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GRefString_slistautoptr;
     * }
     */
    public static final OfAddress GRefString_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GRefString_queueautoptr;
     * }
     */
    public static final OfAddress GRefString_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GUri* GUri_autoptr;
     * }
     */
    public static final OfAddress GUri_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GUri_listautoptr;
     * }
     */
    public static final OfAddress GUri_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GUri_slistautoptr;
     * }
     */
    public static final OfAddress GUri_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GUri_queueautoptr;
     * }
     */
    public static final OfAddress GUri_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GPathBuf* GPathBuf_autoptr;
     * }
     */
    public static final OfAddress GPathBuf_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GPathBuf_listautoptr;
     * }
     */
    public static final OfAddress GPathBuf_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GPathBuf_slistautoptr;
     * }
     */
    public static final OfAddress GPathBuf_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GPathBuf_queueautoptr;
     * }
     */
    public static final OfAddress GPathBuf_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned long GType;
     * }
     */
    public static final OfLong GType = Constants$root.C_LONG_LONG$LAYOUT;
    /**
     * {@snippet :
     * enum .G_TYPE_DEBUG_NONE = 0;
     * }
     */
    public static int G_TYPE_DEBUG_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_TYPE_DEBUG_OBJECTS = 1;
     * }
     */
    public static int G_TYPE_DEBUG_OBJECTS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_TYPE_DEBUG_SIGNALS = 2;
     * }
     */
    public static int G_TYPE_DEBUG_SIGNALS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_TYPE_DEBUG_INSTANCE_COUNT = 4;
     * }
     */
    public static int G_TYPE_DEBUG_INSTANCE_COUNT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_TYPE_DEBUG_MASK = 7;
     * }
     */
    public static int G_TYPE_DEBUG_MASK() {
        return (int)7L;
    }
    public static MethodHandle g_type_init$MH() {
        return RuntimeHelper.requireNonNull(constants$380.g_type_init$MH,"g_type_init");
    }
    /**
     * {@snippet :
     * void g_type_init();
     * }
     */
    public static void g_type_init() {
        var mh$ = g_type_init$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_init_with_debug_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$380.g_type_init_with_debug_flags$MH,"g_type_init_with_debug_flags");
    }
    /**
     * {@snippet :
     * void g_type_init_with_debug_flags(GTypeDebugFlags debug_flags);
     * }
     */
    public static void g_type_init_with_debug_flags(int debug_flags) {
        var mh$ = g_type_init_with_debug_flags$MH();
        try {
            mh$.invokeExact(debug_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_name$MH() {
        return RuntimeHelper.requireNonNull(constants$380.g_type_name$MH,"g_type_name");
    }
    /**
     * {@snippet :
     * const gchar* g_type_name(GType type);
     * }
     */
    public static MemorySegment g_type_name(long type) {
        var mh$ = g_type_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_qname$MH() {
        return RuntimeHelper.requireNonNull(constants$380.g_type_qname$MH,"g_type_qname");
    }
    /**
     * {@snippet :
     * GQuark g_type_qname(GType type);
     * }
     */
    public static int g_type_qname(long type) {
        var mh$ = g_type_qname$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_from_name$MH() {
        return RuntimeHelper.requireNonNull(constants$380.g_type_from_name$MH,"g_type_from_name");
    }
    /**
     * {@snippet :
     * GType g_type_from_name(const gchar* name);
     * }
     */
    public static long g_type_from_name(MemorySegment name) {
        var mh$ = g_type_from_name$MH();
        try {
            return (long)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$380.g_type_parent$MH,"g_type_parent");
    }
    /**
     * {@snippet :
     * GType g_type_parent(GType type);
     * }
     */
    public static long g_type_parent(long type) {
        var mh$ = g_type_parent$MH();
        try {
            return (long)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$381.g_type_depth$MH,"g_type_depth");
    }
    /**
     * {@snippet :
     * guint g_type_depth(GType type);
     * }
     */
    public static int g_type_depth(long type) {
        var mh$ = g_type_depth$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_next_base$MH() {
        return RuntimeHelper.requireNonNull(constants$381.g_type_next_base$MH,"g_type_next_base");
    }
    /**
     * {@snippet :
     * GType g_type_next_base(GType leaf_type, GType root_type);
     * }
     */
    public static long g_type_next_base(long leaf_type, long root_type) {
        var mh$ = g_type_next_base$MH();
        try {
            return (long)mh$.invokeExact(leaf_type, root_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_is_a$MH() {
        return RuntimeHelper.requireNonNull(constants$381.g_type_is_a$MH,"g_type_is_a");
    }
    /**
     * {@snippet :
     * gboolean g_type_is_a(GType type, GType is_a_type);
     * }
     */
    public static int g_type_is_a(long type, long is_a_type) {
        var mh$ = g_type_is_a$MH();
        try {
            return (int)mh$.invokeExact(type, is_a_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$381.g_type_class_ref$MH,"g_type_class_ref");
    }
    /**
     * {@snippet :
     * gpointer g_type_class_ref(GType type);
     * }
     */
    public static MemorySegment g_type_class_ref(long type) {
        var mh$ = g_type_class_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$381.g_type_class_peek$MH,"g_type_class_peek");
    }
    /**
     * {@snippet :
     * gpointer g_type_class_peek(GType type);
     * }
     */
    public static MemorySegment g_type_class_peek(long type) {
        var mh$ = g_type_class_peek$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_peek_static$MH() {
        return RuntimeHelper.requireNonNull(constants$381.g_type_class_peek_static$MH,"g_type_class_peek_static");
    }
    /**
     * {@snippet :
     * gpointer g_type_class_peek_static(GType type);
     * }
     */
    public static MemorySegment g_type_class_peek_static(long type) {
        var mh$ = g_type_class_peek_static$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$382.g_type_class_unref$MH,"g_type_class_unref");
    }
    /**
     * {@snippet :
     * void g_type_class_unref(gpointer g_class);
     * }
     */
    public static void g_type_class_unref(MemorySegment g_class) {
        var mh$ = g_type_class_unref$MH();
        try {
            mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_peek_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$382.g_type_class_peek_parent$MH,"g_type_class_peek_parent");
    }
    /**
     * {@snippet :
     * gpointer g_type_class_peek_parent(gpointer g_class);
     * }
     */
    public static MemorySegment g_type_class_peek_parent(MemorySegment g_class) {
        var mh$ = g_type_class_peek_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$382.g_type_interface_peek$MH,"g_type_interface_peek");
    }
    /**
     * {@snippet :
     * gpointer g_type_interface_peek(gpointer instance_class, GType iface_type);
     * }
     */
    public static MemorySegment g_type_interface_peek(MemorySegment instance_class, long iface_type) {
        var mh$ = g_type_interface_peek$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(instance_class, iface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_peek_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$382.g_type_interface_peek_parent$MH,"g_type_interface_peek_parent");
    }
    /**
     * {@snippet :
     * gpointer g_type_interface_peek_parent(gpointer g_iface);
     * }
     */
    public static MemorySegment g_type_interface_peek_parent(MemorySegment g_iface) {
        var mh$ = g_type_interface_peek_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(g_iface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_default_interface_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$382.g_type_default_interface_ref$MH,"g_type_default_interface_ref");
    }
    /**
     * {@snippet :
     * gpointer g_type_default_interface_ref(GType g_type);
     * }
     */
    public static MemorySegment g_type_default_interface_ref(long g_type) {
        var mh$ = g_type_default_interface_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(g_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_default_interface_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$382.g_type_default_interface_peek$MH,"g_type_default_interface_peek");
    }
    /**
     * {@snippet :
     * gpointer g_type_default_interface_peek(GType g_type);
     * }
     */
    public static MemorySegment g_type_default_interface_peek(long g_type) {
        var mh$ = g_type_default_interface_peek$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(g_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_default_interface_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$383.g_type_default_interface_unref$MH,"g_type_default_interface_unref");
    }
    /**
     * {@snippet :
     * void g_type_default_interface_unref(gpointer g_iface);
     * }
     */
    public static void g_type_default_interface_unref(MemorySegment g_iface) {
        var mh$ = g_type_default_interface_unref$MH();
        try {
            mh$.invokeExact(g_iface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_children$MH() {
        return RuntimeHelper.requireNonNull(constants$383.g_type_children$MH,"g_type_children");
    }
    /**
     * {@snippet :
     * GType* g_type_children(GType type, guint* n_children);
     * }
     */
    public static MemorySegment g_type_children(long type, MemorySegment n_children) {
        var mh$ = g_type_children$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interfaces$MH() {
        return RuntimeHelper.requireNonNull(constants$383.g_type_interfaces$MH,"g_type_interfaces");
    }
    /**
     * {@snippet :
     * GType* g_type_interfaces(GType type, guint* n_interfaces);
     * }
     */
    public static MemorySegment g_type_interfaces(long type, MemorySegment n_interfaces) {
        var mh$ = g_type_interfaces$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type, n_interfaces);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_set_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$383.g_type_set_qdata$MH,"g_type_set_qdata");
    }
    /**
     * {@snippet :
     * void g_type_set_qdata(GType type, GQuark quark, gpointer data);
     * }
     */
    public static void g_type_set_qdata(long type, int quark, MemorySegment data) {
        var mh$ = g_type_set_qdata$MH();
        try {
            mh$.invokeExact(type, quark, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_get_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$383.g_type_get_qdata$MH,"g_type_get_qdata");
    }
    /**
     * {@snippet :
     * gpointer g_type_get_qdata(GType type, GQuark quark);
     * }
     */
    public static MemorySegment g_type_get_qdata(long type, int quark) {
        var mh$ = g_type_get_qdata$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_query$MH() {
        return RuntimeHelper.requireNonNull(constants$383.g_type_query$MH,"g_type_query");
    }
    /**
     * {@snippet :
     * void g_type_query(GType type, GTypeQuery* query);
     * }
     */
    public static void g_type_query(long type, MemorySegment query) {
        var mh$ = g_type_query$MH();
        try {
            mh$.invokeExact(type, query);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_get_instance_count$MH() {
        return RuntimeHelper.requireNonNull(constants$384.g_type_get_instance_count$MH,"g_type_get_instance_count");
    }
    /**
     * {@snippet :
     * int g_type_get_instance_count(GType type);
     * }
     */
    public static int g_type_get_instance_count(long type) {
        var mh$ = g_type_get_instance_count$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .G_TYPE_FLAG_CLASSED = 1;
     * }
     */
    public static int G_TYPE_FLAG_CLASSED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_TYPE_FLAG_INSTANTIATABLE = 2;
     * }
     */
    public static int G_TYPE_FLAG_INSTANTIATABLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_TYPE_FLAG_DERIVABLE = 4;
     * }
     */
    public static int G_TYPE_FLAG_DERIVABLE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_TYPE_FLAG_DEEP_DERIVABLE = 8;
     * }
     */
    public static int G_TYPE_FLAG_DEEP_DERIVABLE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_TYPE_FLAG_NONE = 0;
     * }
     */
    public static int G_TYPE_FLAG_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_TYPE_FLAG_ABSTRACT = 16;
     * }
     */
    public static int G_TYPE_FLAG_ABSTRACT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .G_TYPE_FLAG_VALUE_ABSTRACT = 32;
     * }
     */
    public static int G_TYPE_FLAG_VALUE_ABSTRACT() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum .G_TYPE_FLAG_FINAL = 64;
     * }
     */
    public static int G_TYPE_FLAG_FINAL() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum .G_TYPE_FLAG_DEPRECATED = 128;
     * }
     */
    public static int G_TYPE_FLAG_DEPRECATED() {
        return (int)128L;
    }
    public static MethodHandle g_type_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$387.g_type_register_static$MH,"g_type_register_static");
    }
    /**
     * {@snippet :
     * GType g_type_register_static(GType parent_type, const gchar* type_name, const GTypeInfo* info, GTypeFlags flags);
     * }
     */
    public static long g_type_register_static(long parent_type, MemorySegment type_name, MemorySegment info, int flags) {
        var mh$ = g_type_register_static$MH();
        try {
            return (long)mh$.invokeExact(parent_type, type_name, info, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_register_static_simple$MH() {
        return RuntimeHelper.requireNonNull(constants$387.g_type_register_static_simple$MH,"g_type_register_static_simple");
    }
    /**
     * {@snippet :
     * GType g_type_register_static_simple(GType parent_type, const gchar* type_name, guint class_size, GClassInitFunc class_init, guint instance_size, GInstanceInitFunc instance_init, GTypeFlags flags);
     * }
     */
    public static long g_type_register_static_simple(long parent_type, MemorySegment type_name, int class_size, MemorySegment class_init, int instance_size, MemorySegment instance_init, int flags) {
        var mh$ = g_type_register_static_simple$MH();
        try {
            return (long)mh$.invokeExact(parent_type, type_name, class_size, class_init, instance_size, instance_init, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_register_dynamic$MH() {
        return RuntimeHelper.requireNonNull(constants$387.g_type_register_dynamic$MH,"g_type_register_dynamic");
    }
    /**
     * {@snippet :
     * GType g_type_register_dynamic(GType parent_type, const gchar* type_name, GTypePlugin* plugin, GTypeFlags flags);
     * }
     */
    public static long g_type_register_dynamic(long parent_type, MemorySegment type_name, MemorySegment plugin, int flags) {
        var mh$ = g_type_register_dynamic$MH();
        try {
            return (long)mh$.invokeExact(parent_type, type_name, plugin, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_register_fundamental$MH() {
        return RuntimeHelper.requireNonNull(constants$387.g_type_register_fundamental$MH,"g_type_register_fundamental");
    }
    /**
     * {@snippet :
     * GType g_type_register_fundamental(GType type_id, const gchar* type_name, const GTypeInfo* info, const GTypeFundamentalInfo* finfo, GTypeFlags flags);
     * }
     */
    public static long g_type_register_fundamental(long type_id, MemorySegment type_name, MemorySegment info, MemorySegment finfo, int flags) {
        var mh$ = g_type_register_fundamental$MH();
        try {
            return (long)mh$.invokeExact(type_id, type_name, info, finfo, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_interface_static$MH() {
        return RuntimeHelper.requireNonNull(constants$387.g_type_add_interface_static$MH,"g_type_add_interface_static");
    }
    /**
     * {@snippet :
     * void g_type_add_interface_static(GType instance_type, GType interface_type, const GInterfaceInfo* info);
     * }
     */
    public static void g_type_add_interface_static(long instance_type, long interface_type, MemorySegment info) {
        var mh$ = g_type_add_interface_static$MH();
        try {
            mh$.invokeExact(instance_type, interface_type, info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_interface_dynamic$MH() {
        return RuntimeHelper.requireNonNull(constants$388.g_type_add_interface_dynamic$MH,"g_type_add_interface_dynamic");
    }
    /**
     * {@snippet :
     * void g_type_add_interface_dynamic(GType instance_type, GType interface_type, GTypePlugin* plugin);
     * }
     */
    public static void g_type_add_interface_dynamic(long instance_type, long interface_type, MemorySegment plugin) {
        var mh$ = g_type_add_interface_dynamic$MH();
        try {
            mh$.invokeExact(instance_type, interface_type, plugin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_add_prerequisite$MH() {
        return RuntimeHelper.requireNonNull(constants$388.g_type_interface_add_prerequisite$MH,"g_type_interface_add_prerequisite");
    }
    /**
     * {@snippet :
     * void g_type_interface_add_prerequisite(GType interface_type, GType prerequisite_type);
     * }
     */
    public static void g_type_interface_add_prerequisite(long interface_type, long prerequisite_type) {
        var mh$ = g_type_interface_add_prerequisite$MH();
        try {
            mh$.invokeExact(interface_type, prerequisite_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_prerequisites$MH() {
        return RuntimeHelper.requireNonNull(constants$388.g_type_interface_prerequisites$MH,"g_type_interface_prerequisites");
    }
    /**
     * {@snippet :
     * GType* g_type_interface_prerequisites(GType interface_type, guint* n_prerequisites);
     * }
     */
    public static MemorySegment g_type_interface_prerequisites(long interface_type, MemorySegment n_prerequisites) {
        var mh$ = g_type_interface_prerequisites$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(interface_type, n_prerequisites);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_instantiatable_prerequisite$MH() {
        return RuntimeHelper.requireNonNull(constants$388.g_type_interface_instantiatable_prerequisite$MH,"g_type_interface_instantiatable_prerequisite");
    }
    /**
     * {@snippet :
     * GType g_type_interface_instantiatable_prerequisite(GType interface_type);
     * }
     */
    public static long g_type_interface_instantiatable_prerequisite(long interface_type) {
        var mh$ = g_type_interface_instantiatable_prerequisite$MH();
        try {
            return (long)mh$.invokeExact(interface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_add_private$MH() {
        return RuntimeHelper.requireNonNull(constants$388.g_type_class_add_private$MH,"g_type_class_add_private");
    }
    /**
     * {@snippet :
     * void g_type_class_add_private(gpointer g_class, gsize private_size);
     * }
     */
    public static void g_type_class_add_private(MemorySegment g_class, long private_size) {
        var mh$ = g_type_class_add_private$MH();
        try {
            mh$.invokeExact(g_class, private_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_instance_private$MH() {
        return RuntimeHelper.requireNonNull(constants$388.g_type_add_instance_private$MH,"g_type_add_instance_private");
    }
    /**
     * {@snippet :
     * gint g_type_add_instance_private(GType class_type, gsize private_size);
     * }
     */
    public static int g_type_add_instance_private(long class_type, long private_size) {
        var mh$ = g_type_add_instance_private$MH();
        try {
            return (int)mh$.invokeExact(class_type, private_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_instance_get_private$MH() {
        return RuntimeHelper.requireNonNull(constants$389.g_type_instance_get_private$MH,"g_type_instance_get_private");
    }
    /**
     * {@snippet :
     * gpointer g_type_instance_get_private(GTypeInstance* instance, GType private_type);
     * }
     */
    public static MemorySegment g_type_instance_get_private(MemorySegment instance, long private_type) {
        var mh$ = g_type_instance_get_private$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(instance, private_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_adjust_private_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$389.g_type_class_adjust_private_offset$MH,"g_type_class_adjust_private_offset");
    }
    /**
     * {@snippet :
     * void g_type_class_adjust_private_offset(gpointer g_class, gint* private_size_or_offset);
     * }
     */
    public static void g_type_class_adjust_private_offset(MemorySegment g_class, MemorySegment private_size_or_offset) {
        var mh$ = g_type_class_adjust_private_offset$MH();
        try {
            mh$.invokeExact(g_class, private_size_or_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_class_private$MH() {
        return RuntimeHelper.requireNonNull(constants$389.g_type_add_class_private$MH,"g_type_add_class_private");
    }
    /**
     * {@snippet :
     * void g_type_add_class_private(GType class_type, gsize private_size);
     * }
     */
    public static void g_type_add_class_private(long class_type, long private_size) {
        var mh$ = g_type_add_class_private$MH();
        try {
            mh$.invokeExact(class_type, private_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_get_private$MH() {
        return RuntimeHelper.requireNonNull(constants$389.g_type_class_get_private$MH,"g_type_class_get_private");
    }
    /**
     * {@snippet :
     * gpointer g_type_class_get_private(GTypeClass* klass, GType private_type);
     * }
     */
    public static MemorySegment g_type_class_get_private(MemorySegment klass, long private_type) {
        var mh$ = g_type_class_get_private$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(klass, private_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_get_instance_private_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$389.g_type_class_get_instance_private_offset$MH,"g_type_class_get_instance_private_offset");
    }
    /**
     * {@snippet :
     * gint g_type_class_get_instance_private_offset(gpointer g_class);
     * }
     */
    public static int g_type_class_get_instance_private_offset(MemorySegment g_class) {
        var mh$ = g_type_class_get_instance_private_offset$MH();
        try {
            return (int)mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_ensure$MH() {
        return RuntimeHelper.requireNonNull(constants$389.g_type_ensure$MH,"g_type_ensure");
    }
    /**
     * {@snippet :
     * void g_type_ensure(GType type);
     * }
     */
    public static void g_type_ensure(long type) {
        var mh$ = g_type_ensure$MH();
        try {
            mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_get_type_registration_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$390.g_type_get_type_registration_serial$MH,"g_type_get_type_registration_serial");
    }
    /**
     * {@snippet :
     * guint g_type_get_type_registration_serial();
     * }
     */
    public static int g_type_get_type_registration_serial() {
        var mh$ = g_type_get_type_registration_serial$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_get_plugin$MH() {
        return RuntimeHelper.requireNonNull(constants$390.g_type_get_plugin$MH,"g_type_get_plugin");
    }
    /**
     * {@snippet :
     * GTypePlugin* g_type_get_plugin(GType type);
     * }
     */
    public static MemorySegment g_type_get_plugin(long type) {
        var mh$ = g_type_get_plugin$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_get_plugin$MH() {
        return RuntimeHelper.requireNonNull(constants$390.g_type_interface_get_plugin$MH,"g_type_interface_get_plugin");
    }
    /**
     * {@snippet :
     * GTypePlugin* g_type_interface_get_plugin(GType instance_type, GType interface_type);
     * }
     */
    public static MemorySegment g_type_interface_get_plugin(long instance_type, long interface_type) {
        var mh$ = g_type_interface_get_plugin$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(instance_type, interface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_fundamental_next$MH() {
        return RuntimeHelper.requireNonNull(constants$390.g_type_fundamental_next$MH,"g_type_fundamental_next");
    }
    /**
     * {@snippet :
     * GType g_type_fundamental_next();
     * }
     */
    public static long g_type_fundamental_next() {
        var mh$ = g_type_fundamental_next$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_fundamental$MH() {
        return RuntimeHelper.requireNonNull(constants$390.g_type_fundamental$MH,"g_type_fundamental");
    }
    /**
     * {@snippet :
     * GType g_type_fundamental(GType type_id);
     * }
     */
    public static long g_type_fundamental(long type_id) {
        var mh$ = g_type_fundamental$MH();
        try {
            return (long)mh$.invokeExact(type_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_create_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$390.g_type_create_instance$MH,"g_type_create_instance");
    }
    /**
     * {@snippet :
     * GTypeInstance* g_type_create_instance(GType type);
     * }
     */
    public static MemorySegment g_type_create_instance(long type) {
        var mh$ = g_type_create_instance$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_free_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$391.g_type_free_instance$MH,"g_type_free_instance");
    }
    /**
     * {@snippet :
     * void g_type_free_instance(GTypeInstance* instance);
     * }
     */
    public static void g_type_free_instance(MemorySegment instance) {
        var mh$ = g_type_free_instance$MH();
        try {
            mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_class_cache_func$MH() {
        return RuntimeHelper.requireNonNull(constants$391.g_type_add_class_cache_func$MH,"g_type_add_class_cache_func");
    }
    /**
     * {@snippet :
     * void g_type_add_class_cache_func(gpointer cache_data, GTypeClassCacheFunc cache_func);
     * }
     */
    public static void g_type_add_class_cache_func(MemorySegment cache_data, MemorySegment cache_func) {
        var mh$ = g_type_add_class_cache_func$MH();
        try {
            mh$.invokeExact(cache_data, cache_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_remove_class_cache_func$MH() {
        return RuntimeHelper.requireNonNull(constants$391.g_type_remove_class_cache_func$MH,"g_type_remove_class_cache_func");
    }
    /**
     * {@snippet :
     * void g_type_remove_class_cache_func(gpointer cache_data, GTypeClassCacheFunc cache_func);
     * }
     */
    public static void g_type_remove_class_cache_func(MemorySegment cache_data, MemorySegment cache_func) {
        var mh$ = g_type_remove_class_cache_func$MH();
        try {
            mh$.invokeExact(cache_data, cache_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_unref_uncached$MH() {
        return RuntimeHelper.requireNonNull(constants$391.g_type_class_unref_uncached$MH,"g_type_class_unref_uncached");
    }
    /**
     * {@snippet :
     * void g_type_class_unref_uncached(gpointer g_class);
     * }
     */
    public static void g_type_class_unref_uncached(MemorySegment g_class) {
        var mh$ = g_type_class_unref_uncached$MH();
        try {
            mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_interface_check$MH() {
        return RuntimeHelper.requireNonNull(constants$391.g_type_add_interface_check$MH,"g_type_add_interface_check");
    }
    /**
     * {@snippet :
     * void g_type_add_interface_check(gpointer check_data, GTypeInterfaceCheckFunc check_func);
     * }
     */
    public static void g_type_add_interface_check(MemorySegment check_data, MemorySegment check_func) {
        var mh$ = g_type_add_interface_check$MH();
        try {
            mh$.invokeExact(check_data, check_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_remove_interface_check$MH() {
        return RuntimeHelper.requireNonNull(constants$391.g_type_remove_interface_check$MH,"g_type_remove_interface_check");
    }
    /**
     * {@snippet :
     * void g_type_remove_interface_check(gpointer check_data, GTypeInterfaceCheckFunc check_func);
     * }
     */
    public static void g_type_remove_interface_check(MemorySegment check_data, MemorySegment check_func) {
        var mh$ = g_type_remove_interface_check$MH();
        try {
            mh$.invokeExact(check_data, check_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_value_table_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$392.g_type_value_table_peek$MH,"g_type_value_table_peek");
    }
    /**
     * {@snippet :
     * GTypeValueTable* g_type_value_table_peek(GType type);
     * }
     */
    public static MemorySegment g_type_value_table_peek(long type) {
        var mh$ = g_type_value_table_peek$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$392.g_type_check_instance$MH,"g_type_check_instance");
    }
    /**
     * {@snippet :
     * gboolean g_type_check_instance(GTypeInstance* instance);
     * }
     */
    public static int g_type_check_instance(MemorySegment instance) {
        var mh$ = g_type_check_instance$MH();
        try {
            return (int)mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance_cast$MH() {
        return RuntimeHelper.requireNonNull(constants$392.g_type_check_instance_cast$MH,"g_type_check_instance_cast");
    }
    /**
     * {@snippet :
     * GTypeInstance* g_type_check_instance_cast(GTypeInstance* instance, GType iface_type);
     * }
     */
    public static MemorySegment g_type_check_instance_cast(MemorySegment instance, long iface_type) {
        var mh$ = g_type_check_instance_cast$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(instance, iface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance_is_a$MH() {
        return RuntimeHelper.requireNonNull(constants$392.g_type_check_instance_is_a$MH,"g_type_check_instance_is_a");
    }
    /**
     * {@snippet :
     * gboolean g_type_check_instance_is_a(GTypeInstance* instance, GType iface_type);
     * }
     */
    public static int g_type_check_instance_is_a(MemorySegment instance, long iface_type) {
        var mh$ = g_type_check_instance_is_a$MH();
        try {
            return (int)mh$.invokeExact(instance, iface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance_is_fundamentally_a$MH() {
        return RuntimeHelper.requireNonNull(constants$392.g_type_check_instance_is_fundamentally_a$MH,"g_type_check_instance_is_fundamentally_a");
    }
    /**
     * {@snippet :
     * gboolean g_type_check_instance_is_fundamentally_a(GTypeInstance* instance, GType fundamental_type);
     * }
     */
    public static int g_type_check_instance_is_fundamentally_a(MemorySegment instance, long fundamental_type) {
        var mh$ = g_type_check_instance_is_fundamentally_a$MH();
        try {
            return (int)mh$.invokeExact(instance, fundamental_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_class_cast$MH() {
        return RuntimeHelper.requireNonNull(constants$392.g_type_check_class_cast$MH,"g_type_check_class_cast");
    }
    /**
     * {@snippet :
     * GTypeClass* g_type_check_class_cast(GTypeClass* g_class, GType is_a_type);
     * }
     */
    public static MemorySegment g_type_check_class_cast(MemorySegment g_class, long is_a_type) {
        var mh$ = g_type_check_class_cast$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(g_class, is_a_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_class_is_a$MH() {
        return RuntimeHelper.requireNonNull(constants$393.g_type_check_class_is_a$MH,"g_type_check_class_is_a");
    }
    /**
     * {@snippet :
     * gboolean g_type_check_class_is_a(GTypeClass* g_class, GType is_a_type);
     * }
     */
    public static int g_type_check_class_is_a(MemorySegment g_class, long is_a_type) {
        var mh$ = g_type_check_class_is_a$MH();
        try {
            return (int)mh$.invokeExact(g_class, is_a_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_is_value_type$MH() {
        return RuntimeHelper.requireNonNull(constants$393.g_type_check_is_value_type$MH,"g_type_check_is_value_type");
    }
    /**
     * {@snippet :
     * gboolean g_type_check_is_value_type(GType type);
     * }
     */
    public static int g_type_check_is_value_type(long type) {
        var mh$ = g_type_check_is_value_type$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_value$MH() {
        return RuntimeHelper.requireNonNull(constants$393.g_type_check_value$MH,"g_type_check_value");
    }
    /**
     * {@snippet :
     * gboolean g_type_check_value(const GValue* value);
     * }
     */
    public static int g_type_check_value(MemorySegment value) {
        var mh$ = g_type_check_value$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_value_holds$MH() {
        return RuntimeHelper.requireNonNull(constants$393.g_type_check_value_holds$MH,"g_type_check_value_holds");
    }
    /**
     * {@snippet :
     * gboolean g_type_check_value_holds(const GValue* value, GType type);
     * }
     */
    public static int g_type_check_value_holds(MemorySegment value, long type) {
        var mh$ = g_type_check_value_holds$MH();
        try {
            return (int)mh$.invokeExact(value, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_test_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$393.g_type_test_flags$MH,"g_type_test_flags");
    }
    /**
     * {@snippet :
     * gboolean g_type_test_flags(GType type, guint flags);
     * }
     */
    public static int g_type_test_flags(long type, int flags) {
        var mh$ = g_type_test_flags$MH();
        try {
            return (int)mh$.invokeExact(type, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_name_from_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$393.g_type_name_from_instance$MH,"g_type_name_from_instance");
    }
    /**
     * {@snippet :
     * const gchar* g_type_name_from_instance(GTypeInstance* instance);
     * }
     */
    public static MemorySegment g_type_name_from_instance(MemorySegment instance) {
        var mh$ = g_type_name_from_instance$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_name_from_class$MH() {
        return RuntimeHelper.requireNonNull(constants$394.g_type_name_from_class$MH,"g_type_name_from_class");
    }
    /**
     * {@snippet :
     * const gchar* g_type_name_from_class(GTypeClass* g_class);
     * }
     */
    public static MemorySegment g_type_name_from_class(MemorySegment g_class) {
        var mh$ = g_type_name_from_class$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_init$MH() {
        return RuntimeHelper.requireNonNull(constants$394.g_value_init$MH,"g_value_init");
    }
    /**
     * {@snippet :
     * GValue* g_value_init(GValue* value, GType g_type);
     * }
     */
    public static MemorySegment g_value_init(MemorySegment value, long g_type) {
        var mh$ = g_value_init$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value, g_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$394.g_value_copy$MH,"g_value_copy");
    }
    /**
     * {@snippet :
     * void g_value_copy(const GValue* src_value, GValue* dest_value);
     * }
     */
    public static void g_value_copy(MemorySegment src_value, MemorySegment dest_value) {
        var mh$ = g_value_copy$MH();
        try {
            mh$.invokeExact(src_value, dest_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$394.g_value_reset$MH,"g_value_reset");
    }
    /**
     * {@snippet :
     * GValue* g_value_reset(GValue* value);
     * }
     */
    public static MemorySegment g_value_reset(MemorySegment value) {
        var mh$ = g_value_reset$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_unset$MH() {
        return RuntimeHelper.requireNonNull(constants$395.g_value_unset$MH,"g_value_unset");
    }
    /**
     * {@snippet :
     * void g_value_unset(GValue* value);
     * }
     */
    public static void g_value_unset(MemorySegment value) {
        var mh$ = g_value_unset$MH();
        try {
            mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$395.g_value_set_instance$MH,"g_value_set_instance");
    }
    /**
     * {@snippet :
     * void g_value_set_instance(GValue* value, gpointer instance);
     * }
     */
    public static void g_value_set_instance(MemorySegment value, MemorySegment instance) {
        var mh$ = g_value_set_instance$MH();
        try {
            mh$.invokeExact(value, instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_init_from_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$395.g_value_init_from_instance$MH,"g_value_init_from_instance");
    }
    /**
     * {@snippet :
     * void g_value_init_from_instance(GValue* value, gpointer instance);
     * }
     */
    public static void g_value_init_from_instance(MemorySegment value, MemorySegment instance) {
        var mh$ = g_value_init_from_instance$MH();
        try {
            mh$.invokeExact(value, instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_fits_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$395.g_value_fits_pointer$MH,"g_value_fits_pointer");
    }
    /**
     * {@snippet :
     * gboolean g_value_fits_pointer(const GValue* value);
     * }
     */
    public static int g_value_fits_pointer(MemorySegment value) {
        var mh$ = g_value_fits_pointer$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_peek_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$395.g_value_peek_pointer$MH,"g_value_peek_pointer");
    }
    /**
     * {@snippet :
     * gpointer g_value_peek_pointer(const GValue* value);
     * }
     */
    public static MemorySegment g_value_peek_pointer(MemorySegment value) {
        var mh$ = g_value_peek_pointer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_type_compatible$MH() {
        return RuntimeHelper.requireNonNull(constants$395.g_value_type_compatible$MH,"g_value_type_compatible");
    }
    /**
     * {@snippet :
     * gboolean g_value_type_compatible(GType src_type, GType dest_type);
     * }
     */
    public static int g_value_type_compatible(long src_type, long dest_type) {
        var mh$ = g_value_type_compatible$MH();
        try {
            return (int)mh$.invokeExact(src_type, dest_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_type_transformable$MH() {
        return RuntimeHelper.requireNonNull(constants$396.g_value_type_transformable$MH,"g_value_type_transformable");
    }
    /**
     * {@snippet :
     * gboolean g_value_type_transformable(GType src_type, GType dest_type);
     * }
     */
    public static int g_value_type_transformable(long src_type, long dest_type) {
        var mh$ = g_value_type_transformable$MH();
        try {
            return (int)mh$.invokeExact(src_type, dest_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$396.g_value_transform$MH,"g_value_transform");
    }
    /**
     * {@snippet :
     * gboolean g_value_transform(const GValue* src_value, GValue* dest_value);
     * }
     */
    public static int g_value_transform(MemorySegment src_value, MemorySegment dest_value) {
        var mh$ = g_value_transform$MH();
        try {
            return (int)mh$.invokeExact(src_value, dest_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_register_transform_func$MH() {
        return RuntimeHelper.requireNonNull(constants$396.g_value_register_transform_func$MH,"g_value_register_transform_func");
    }
    /**
     * {@snippet :
     * void g_value_register_transform_func(GType src_type, GType dest_type, GValueTransform transform_func);
     * }
     */
    public static void g_value_register_transform_func(long src_type, long dest_type, MemorySegment transform_func) {
        var mh$ = g_value_register_transform_func$MH();
        try {
            mh$.invokeExact(src_type, dest_type, transform_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .G_PARAM_READABLE = 1;
     * }
     */
    public static int G_PARAM_READABLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_PARAM_WRITABLE = 2;
     * }
     */
    public static int G_PARAM_WRITABLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_PARAM_READWRITE = 3;
     * }
     */
    public static int G_PARAM_READWRITE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_PARAM_CONSTRUCT = 4;
     * }
     */
    public static int G_PARAM_CONSTRUCT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_PARAM_CONSTRUCT_ONLY = 8;
     * }
     */
    public static int G_PARAM_CONSTRUCT_ONLY() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_PARAM_LAX_VALIDATION = 16;
     * }
     */
    public static int G_PARAM_LAX_VALIDATION() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .G_PARAM_STATIC_NAME = 32;
     * }
     */
    public static int G_PARAM_STATIC_NAME() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum .G_PARAM_PRIVATE = 32;
     * }
     */
    public static int G_PARAM_PRIVATE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum .G_PARAM_STATIC_NICK = 64;
     * }
     */
    public static int G_PARAM_STATIC_NICK() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum .G_PARAM_STATIC_BLURB = 128;
     * }
     */
    public static int G_PARAM_STATIC_BLURB() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum .G_PARAM_EXPLICIT_NOTIFY = 1073741824;
     * }
     */
    public static int G_PARAM_EXPLICIT_NOTIFY() {
        return (int)1073741824L;
    }
    /**
     * {@snippet :
     * enum .G_PARAM_DEPRECATED = -2147483648;
     * }
     */
    public static int G_PARAM_DEPRECATED() {
        return (int)-2147483648L;
    }
    public static MethodHandle g_param_spec_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$396.g_param_spec_ref$MH,"g_param_spec_ref");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_ref(GParamSpec* pspec);
     * }
     */
    public static MemorySegment g_param_spec_ref(MemorySegment pspec) {
        var mh$ = g_param_spec_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$396.g_param_spec_unref$MH,"g_param_spec_unref");
    }
    /**
     * {@snippet :
     * void g_param_spec_unref(GParamSpec* pspec);
     * }
     */
    public static void g_param_spec_unref(MemorySegment pspec) {
        var mh$ = g_param_spec_unref$MH();
        try {
            mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_sink$MH() {
        return RuntimeHelper.requireNonNull(constants$396.g_param_spec_sink$MH,"g_param_spec_sink");
    }
    /**
     * {@snippet :
     * void g_param_spec_sink(GParamSpec* pspec);
     * }
     */
    public static void g_param_spec_sink(MemorySegment pspec) {
        var mh$ = g_param_spec_sink$MH();
        try {
            mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_ref_sink$MH() {
        return RuntimeHelper.requireNonNull(constants$397.g_param_spec_ref_sink$MH,"g_param_spec_ref_sink");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_ref_sink(GParamSpec* pspec);
     * }
     */
    public static MemorySegment g_param_spec_ref_sink(MemorySegment pspec) {
        var mh$ = g_param_spec_ref_sink$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$397.g_param_spec_get_qdata$MH,"g_param_spec_get_qdata");
    }
    /**
     * {@snippet :
     * gpointer g_param_spec_get_qdata(GParamSpec* pspec, GQuark quark);
     * }
     */
    public static MemorySegment g_param_spec_get_qdata(MemorySegment pspec, int quark) {
        var mh$ = g_param_spec_get_qdata$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pspec, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_set_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$397.g_param_spec_set_qdata$MH,"g_param_spec_set_qdata");
    }
    /**
     * {@snippet :
     * void g_param_spec_set_qdata(GParamSpec* pspec, GQuark quark, gpointer data);
     * }
     */
    public static void g_param_spec_set_qdata(MemorySegment pspec, int quark, MemorySegment data) {
        var mh$ = g_param_spec_set_qdata$MH();
        try {
            mh$.invokeExact(pspec, quark, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_set_qdata_full$MH() {
        return RuntimeHelper.requireNonNull(constants$397.g_param_spec_set_qdata_full$MH,"g_param_spec_set_qdata_full");
    }
    /**
     * {@snippet :
     * void g_param_spec_set_qdata_full(GParamSpec* pspec, GQuark quark, gpointer data, GDestroyNotify destroy);
     * }
     */
    public static void g_param_spec_set_qdata_full(MemorySegment pspec, int quark, MemorySegment data, MemorySegment destroy) {
        var mh$ = g_param_spec_set_qdata_full$MH();
        try {
            mh$.invokeExact(pspec, quark, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_steal_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$397.g_param_spec_steal_qdata$MH,"g_param_spec_steal_qdata");
    }
    /**
     * {@snippet :
     * gpointer g_param_spec_steal_qdata(GParamSpec* pspec, GQuark quark);
     * }
     */
    public static MemorySegment g_param_spec_steal_qdata(MemorySegment pspec, int quark) {
        var mh$ = g_param_spec_steal_qdata$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pspec, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_redirect_target$MH() {
        return RuntimeHelper.requireNonNull(constants$397.g_param_spec_get_redirect_target$MH,"g_param_spec_get_redirect_target");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_get_redirect_target(GParamSpec* pspec);
     * }
     */
    public static MemorySegment g_param_spec_get_redirect_target(MemorySegment pspec) {
        var mh$ = g_param_spec_get_redirect_target$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_value_set_default$MH() {
        return RuntimeHelper.requireNonNull(constants$398.g_param_value_set_default$MH,"g_param_value_set_default");
    }
    /**
     * {@snippet :
     * void g_param_value_set_default(GParamSpec* pspec, GValue* value);
     * }
     */
    public static void g_param_value_set_default(MemorySegment pspec, MemorySegment value) {
        var mh$ = g_param_value_set_default$MH();
        try {
            mh$.invokeExact(pspec, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_value_defaults$MH() {
        return RuntimeHelper.requireNonNull(constants$398.g_param_value_defaults$MH,"g_param_value_defaults");
    }
    /**
     * {@snippet :
     * gboolean g_param_value_defaults(GParamSpec* pspec, const GValue* value);
     * }
     */
    public static int g_param_value_defaults(MemorySegment pspec, MemorySegment value) {
        var mh$ = g_param_value_defaults$MH();
        try {
            return (int)mh$.invokeExact(pspec, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_value_validate$MH() {
        return RuntimeHelper.requireNonNull(constants$398.g_param_value_validate$MH,"g_param_value_validate");
    }
    /**
     * {@snippet :
     * gboolean g_param_value_validate(GParamSpec* pspec, GValue* value);
     * }
     */
    public static int g_param_value_validate(MemorySegment pspec, MemorySegment value) {
        var mh$ = g_param_value_validate$MH();
        try {
            return (int)mh$.invokeExact(pspec, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_value_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$398.g_param_value_is_valid$MH,"g_param_value_is_valid");
    }
    /**
     * {@snippet :
     * gboolean g_param_value_is_valid(GParamSpec* pspec, const GValue* value);
     * }
     */
    public static int g_param_value_is_valid(MemorySegment pspec, MemorySegment value) {
        var mh$ = g_param_value_is_valid$MH();
        try {
            return (int)mh$.invokeExact(pspec, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_value_convert$MH() {
        return RuntimeHelper.requireNonNull(constants$398.g_param_value_convert$MH,"g_param_value_convert");
    }
    /**
     * {@snippet :
     * gboolean g_param_value_convert(GParamSpec* pspec, const GValue* src_value, GValue* dest_value, gboolean strict_validation);
     * }
     */
    public static int g_param_value_convert(MemorySegment pspec, MemorySegment src_value, MemorySegment dest_value, int strict_validation) {
        var mh$ = g_param_value_convert$MH();
        try {
            return (int)mh$.invokeExact(pspec, src_value, dest_value, strict_validation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_values_cmp$MH() {
        return RuntimeHelper.requireNonNull(constants$398.g_param_values_cmp$MH,"g_param_values_cmp");
    }
    /**
     * {@snippet :
     * gint g_param_values_cmp(GParamSpec* pspec, const GValue* value1, const GValue* value2);
     * }
     */
    public static int g_param_values_cmp(MemorySegment pspec, MemorySegment value1, MemorySegment value2) {
        var mh$ = g_param_values_cmp$MH();
        try {
            return (int)mh$.invokeExact(pspec, value1, value2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$399.g_param_spec_get_name$MH,"g_param_spec_get_name");
    }
    /**
     * {@snippet :
     * const gchar* g_param_spec_get_name(GParamSpec* pspec);
     * }
     */
    public static MemorySegment g_param_spec_get_name(MemorySegment pspec) {
        var mh$ = g_param_spec_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_nick$MH() {
        return RuntimeHelper.requireNonNull(constants$399.g_param_spec_get_nick$MH,"g_param_spec_get_nick");
    }
    /**
     * {@snippet :
     * const gchar* g_param_spec_get_nick(GParamSpec* pspec);
     * }
     */
    public static MemorySegment g_param_spec_get_nick(MemorySegment pspec) {
        var mh$ = g_param_spec_get_nick$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_blurb$MH() {
        return RuntimeHelper.requireNonNull(constants$399.g_param_spec_get_blurb$MH,"g_param_spec_get_blurb");
    }
    /**
     * {@snippet :
     * const gchar* g_param_spec_get_blurb(GParamSpec* pspec);
     * }
     */
    public static MemorySegment g_param_spec_get_blurb(MemorySegment pspec) {
        var mh$ = g_param_spec_get_blurb$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_param$MH() {
        return RuntimeHelper.requireNonNull(constants$399.g_value_set_param$MH,"g_value_set_param");
    }
    /**
     * {@snippet :
     * void g_value_set_param(GValue* value, GParamSpec* param);
     * }
     */
    public static void g_value_set_param(MemorySegment value, MemorySegment param) {
        var mh$ = g_value_set_param$MH();
        try {
            mh$.invokeExact(value, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_param$MH() {
        return RuntimeHelper.requireNonNull(constants$399.g_value_get_param$MH,"g_value_get_param");
    }
    /**
     * {@snippet :
     * GParamSpec* g_value_get_param(const GValue* value);
     * }
     */
    public static MemorySegment g_value_get_param(MemorySegment value) {
        var mh$ = g_value_get_param$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_dup_param$MH() {
        return RuntimeHelper.requireNonNull(constants$399.g_value_dup_param$MH,"g_value_dup_param");
    }
    /**
     * {@snippet :
     * GParamSpec* g_value_dup_param(const GValue* value);
     * }
     */
    public static MemorySegment g_value_dup_param(MemorySegment value) {
        var mh$ = g_value_dup_param$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_take_param$MH() {
        return RuntimeHelper.requireNonNull(constants$400.g_value_take_param$MH,"g_value_take_param");
    }
    /**
     * {@snippet :
     * void g_value_take_param(GValue* value, GParamSpec* param);
     * }
     */
    public static void g_value_take_param(MemorySegment value, MemorySegment param) {
        var mh$ = g_value_take_param$MH();
        try {
            mh$.invokeExact(value, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_param_take_ownership$MH() {
        return RuntimeHelper.requireNonNull(constants$400.g_value_set_param_take_ownership$MH,"g_value_set_param_take_ownership");
    }
    /**
     * {@snippet :
     * void g_value_set_param_take_ownership(GValue* value, GParamSpec* param);
     * }
     */
    public static void g_value_set_param_take_ownership(MemorySegment value, MemorySegment param) {
        var mh$ = g_value_set_param_take_ownership$MH();
        try {
            mh$.invokeExact(value, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_default_value$MH() {
        return RuntimeHelper.requireNonNull(constants$400.g_param_spec_get_default_value$MH,"g_param_spec_get_default_value");
    }
    /**
     * {@snippet :
     * const GValue* g_param_spec_get_default_value(GParamSpec* pspec);
     * }
     */
    public static MemorySegment g_param_spec_get_default_value(MemorySegment pspec) {
        var mh$ = g_param_spec_get_default_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_name_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$400.g_param_spec_get_name_quark$MH,"g_param_spec_get_name_quark");
    }
    /**
     * {@snippet :
     * GQuark g_param_spec_get_name_quark(GParamSpec* pspec);
     * }
     */
    public static int g_param_spec_get_name_quark(MemorySegment pspec) {
        var mh$ = g_param_spec_get_name_quark$MH();
        try {
            return (int)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_type_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$400.g_param_type_register_static$MH,"g_param_type_register_static");
    }
    /**
     * {@snippet :
     * GType g_param_type_register_static(const gchar* name, const GParamSpecTypeInfo* pspec_info);
     * }
     */
    public static long g_param_type_register_static(MemorySegment name, MemorySegment pspec_info) {
        var mh$ = g_param_type_register_static$MH();
        try {
            return (long)mh$.invokeExact(name, pspec_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_is_valid_name$MH() {
        return RuntimeHelper.requireNonNull(constants$400.g_param_spec_is_valid_name$MH,"g_param_spec_is_valid_name");
    }
    /**
     * {@snippet :
     * gboolean g_param_spec_is_valid_name(const gchar* name);
     * }
     */
    public static int g_param_spec_is_valid_name(MemorySegment name) {
        var mh$ = g_param_spec_is_valid_name$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _g_param_type_register_static_constant$MH() {
        return RuntimeHelper.requireNonNull(constants$401._g_param_type_register_static_constant$MH,"_g_param_type_register_static_constant");
    }
    /**
     * {@snippet :
     * GType _g_param_type_register_static_constant(const gchar* name, const GParamSpecTypeInfo* pspec_info, GType opt_type);
     * }
     */
    public static long _g_param_type_register_static_constant(MemorySegment name, MemorySegment pspec_info, long opt_type) {
        var mh$ = _g_param_type_register_static_constant$MH();
        try {
            return (long)mh$.invokeExact(name, pspec_info, opt_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_internal$MH() {
        return RuntimeHelper.requireNonNull(constants$401.g_param_spec_internal$MH,"g_param_spec_internal");
    }
    /**
     * {@snippet :
     * gpointer g_param_spec_internal(GType param_type, const gchar* name, const gchar* nick, const gchar* blurb, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_internal(long param_type, MemorySegment name, MemorySegment nick, MemorySegment blurb, int flags) {
        var mh$ = g_param_spec_internal$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(param_type, name, nick, blurb, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_new$MH() {
        return RuntimeHelper.requireNonNull(constants$401.g_param_spec_pool_new$MH,"g_param_spec_pool_new");
    }
    /**
     * {@snippet :
     * GParamSpecPool* g_param_spec_pool_new(gboolean type_prefixing);
     * }
     */
    public static MemorySegment g_param_spec_pool_new(int type_prefixing) {
        var mh$ = g_param_spec_pool_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type_prefixing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$401.g_param_spec_pool_insert$MH,"g_param_spec_pool_insert");
    }
    /**
     * {@snippet :
     * void g_param_spec_pool_insert(GParamSpecPool* pool, GParamSpec* pspec, GType owner_type);
     * }
     */
    public static void g_param_spec_pool_insert(MemorySegment pool, MemorySegment pspec, long owner_type) {
        var mh$ = g_param_spec_pool_insert$MH();
        try {
            mh$.invokeExact(pool, pspec, owner_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$401.g_param_spec_pool_remove$MH,"g_param_spec_pool_remove");
    }
    /**
     * {@snippet :
     * void g_param_spec_pool_remove(GParamSpecPool* pool, GParamSpec* pspec);
     * }
     */
    public static void g_param_spec_pool_remove(MemorySegment pool, MemorySegment pspec) {
        var mh$ = g_param_spec_pool_remove$MH();
        try {
            mh$.invokeExact(pool, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$401.g_param_spec_pool_lookup$MH,"g_param_spec_pool_lookup");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_pool_lookup(GParamSpecPool* pool, const gchar* param_name, GType owner_type, gboolean walk_ancestors);
     * }
     */
    public static MemorySegment g_param_spec_pool_lookup(MemorySegment pool, MemorySegment param_name, long owner_type, int walk_ancestors) {
        var mh$ = g_param_spec_pool_lookup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pool, param_name, owner_type, walk_ancestors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_list_owned$MH() {
        return RuntimeHelper.requireNonNull(constants$402.g_param_spec_pool_list_owned$MH,"g_param_spec_pool_list_owned");
    }
    /**
     * {@snippet :
     * GList* g_param_spec_pool_list_owned(GParamSpecPool* pool, GType owner_type);
     * }
     */
    public static MemorySegment g_param_spec_pool_list_owned(MemorySegment pool, long owner_type) {
        var mh$ = g_param_spec_pool_list_owned$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pool, owner_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_list$MH() {
        return RuntimeHelper.requireNonNull(constants$402.g_param_spec_pool_list$MH,"g_param_spec_pool_list");
    }
    /**
     * {@snippet :
     * GParamSpec** g_param_spec_pool_list(GParamSpecPool* pool, GType owner_type, guint* n_pspecs_p);
     * }
     */
    public static MemorySegment g_param_spec_pool_list(MemorySegment pool, long owner_type, MemorySegment n_pspecs_p) {
        var mh$ = g_param_spec_pool_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pool, owner_type, n_pspecs_p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_new$MH() {
        return RuntimeHelper.requireNonNull(constants$403.g_cclosure_new$MH,"g_cclosure_new");
    }
    /**
     * {@snippet :
     * GClosure* g_cclosure_new(GCallback callback_func, gpointer user_data, GClosureNotify destroy_data);
     * }
     */
    public static MemorySegment g_cclosure_new(MemorySegment callback_func, MemorySegment user_data, MemorySegment destroy_data) {
        var mh$ = g_cclosure_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(callback_func, user_data, destroy_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_new_swap$MH() {
        return RuntimeHelper.requireNonNull(constants$403.g_cclosure_new_swap$MH,"g_cclosure_new_swap");
    }
    /**
     * {@snippet :
     * GClosure* g_cclosure_new_swap(GCallback callback_func, gpointer user_data, GClosureNotify destroy_data);
     * }
     */
    public static MemorySegment g_cclosure_new_swap(MemorySegment callback_func, MemorySegment user_data, MemorySegment destroy_data) {
        var mh$ = g_cclosure_new_swap$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(callback_func, user_data, destroy_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_type_cclosure_new$MH() {
        return RuntimeHelper.requireNonNull(constants$404.g_signal_type_cclosure_new$MH,"g_signal_type_cclosure_new");
    }
    /**
     * {@snippet :
     * GClosure* g_signal_type_cclosure_new(GType itype, guint struct_offset);
     * }
     */
    public static MemorySegment g_signal_type_cclosure_new(long itype, int struct_offset) {
        var mh$ = g_signal_type_cclosure_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(itype, struct_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$404.g_closure_ref$MH,"g_closure_ref");
    }
    /**
     * {@snippet :
     * GClosure* g_closure_ref(GClosure* closure);
     * }
     */
    public static MemorySegment g_closure_ref(MemorySegment closure) {
        var mh$ = g_closure_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_sink$MH() {
        return RuntimeHelper.requireNonNull(constants$404.g_closure_sink$MH,"g_closure_sink");
    }
    /**
     * {@snippet :
     * void g_closure_sink(GClosure* closure);
     * }
     */
    public static void g_closure_sink(MemorySegment closure) {
        var mh$ = g_closure_sink$MH();
        try {
            mh$.invokeExact(closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$404.g_closure_unref$MH,"g_closure_unref");
    }
    /**
     * {@snippet :
     * void g_closure_unref(GClosure* closure);
     * }
     */
    public static void g_closure_unref(MemorySegment closure) {
        var mh$ = g_closure_unref$MH();
        try {
            mh$.invokeExact(closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_new_simple$MH() {
        return RuntimeHelper.requireNonNull(constants$404.g_closure_new_simple$MH,"g_closure_new_simple");
    }
    /**
     * {@snippet :
     * GClosure* g_closure_new_simple(guint sizeof_closure, gpointer data);
     * }
     */
    public static MemorySegment g_closure_new_simple(int sizeof_closure, MemorySegment data) {
        var mh$ = g_closure_new_simple$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(sizeof_closure, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_add_finalize_notifier$MH() {
        return RuntimeHelper.requireNonNull(constants$404.g_closure_add_finalize_notifier$MH,"g_closure_add_finalize_notifier");
    }
    /**
     * {@snippet :
     * void g_closure_add_finalize_notifier(GClosure* closure, gpointer notify_data, GClosureNotify notify_func);
     * }
     */
    public static void g_closure_add_finalize_notifier(MemorySegment closure, MemorySegment notify_data, MemorySegment notify_func) {
        var mh$ = g_closure_add_finalize_notifier$MH();
        try {
            mh$.invokeExact(closure, notify_data, notify_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_remove_finalize_notifier$MH() {
        return RuntimeHelper.requireNonNull(constants$405.g_closure_remove_finalize_notifier$MH,"g_closure_remove_finalize_notifier");
    }
    /**
     * {@snippet :
     * void g_closure_remove_finalize_notifier(GClosure* closure, gpointer notify_data, GClosureNotify notify_func);
     * }
     */
    public static void g_closure_remove_finalize_notifier(MemorySegment closure, MemorySegment notify_data, MemorySegment notify_func) {
        var mh$ = g_closure_remove_finalize_notifier$MH();
        try {
            mh$.invokeExact(closure, notify_data, notify_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_add_invalidate_notifier$MH() {
        return RuntimeHelper.requireNonNull(constants$405.g_closure_add_invalidate_notifier$MH,"g_closure_add_invalidate_notifier");
    }
    /**
     * {@snippet :
     * void g_closure_add_invalidate_notifier(GClosure* closure, gpointer notify_data, GClosureNotify notify_func);
     * }
     */
    public static void g_closure_add_invalidate_notifier(MemorySegment closure, MemorySegment notify_data, MemorySegment notify_func) {
        var mh$ = g_closure_add_invalidate_notifier$MH();
        try {
            mh$.invokeExact(closure, notify_data, notify_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_remove_invalidate_notifier$MH() {
        return RuntimeHelper.requireNonNull(constants$405.g_closure_remove_invalidate_notifier$MH,"g_closure_remove_invalidate_notifier");
    }
    /**
     * {@snippet :
     * void g_closure_remove_invalidate_notifier(GClosure* closure, gpointer notify_data, GClosureNotify notify_func);
     * }
     */
    public static void g_closure_remove_invalidate_notifier(MemorySegment closure, MemorySegment notify_data, MemorySegment notify_func) {
        var mh$ = g_closure_remove_invalidate_notifier$MH();
        try {
            mh$.invokeExact(closure, notify_data, notify_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_add_marshal_guards$MH() {
        return RuntimeHelper.requireNonNull(constants$405.g_closure_add_marshal_guards$MH,"g_closure_add_marshal_guards");
    }
    /**
     * {@snippet :
     * void g_closure_add_marshal_guards(GClosure* closure, gpointer pre_marshal_data, GClosureNotify pre_marshal_notify, gpointer post_marshal_data, GClosureNotify post_marshal_notify);
     * }
     */
    public static void g_closure_add_marshal_guards(MemorySegment closure, MemorySegment pre_marshal_data, MemorySegment pre_marshal_notify, MemorySegment post_marshal_data, MemorySegment post_marshal_notify) {
        var mh$ = g_closure_add_marshal_guards$MH();
        try {
            mh$.invokeExact(closure, pre_marshal_data, pre_marshal_notify, post_marshal_data, post_marshal_notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_set_marshal$MH() {
        return RuntimeHelper.requireNonNull(constants$405.g_closure_set_marshal$MH,"g_closure_set_marshal");
    }
    /**
     * {@snippet :
     * void g_closure_set_marshal(GClosure* closure, GClosureMarshal marshal);
     * }
     */
    public static void g_closure_set_marshal(MemorySegment closure, MemorySegment marshal) {
        var mh$ = g_closure_set_marshal$MH();
        try {
            mh$.invokeExact(closure, marshal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_set_meta_marshal$MH() {
        return RuntimeHelper.requireNonNull(constants$405.g_closure_set_meta_marshal$MH,"g_closure_set_meta_marshal");
    }
    /**
     * {@snippet :
     * void g_closure_set_meta_marshal(GClosure* closure, gpointer marshal_data, GClosureMarshal meta_marshal);
     * }
     */
    public static void g_closure_set_meta_marshal(MemorySegment closure, MemorySegment marshal_data, MemorySegment meta_marshal) {
        var mh$ = g_closure_set_meta_marshal$MH();
        try {
            mh$.invokeExact(closure, marshal_data, meta_marshal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_invalidate$MH() {
        return RuntimeHelper.requireNonNull(constants$406.g_closure_invalidate$MH,"g_closure_invalidate");
    }
    /**
     * {@snippet :
     * void g_closure_invalidate(GClosure* closure);
     * }
     */
    public static void g_closure_invalidate(MemorySegment closure) {
        var mh$ = g_closure_invalidate$MH();
        try {
            mh$.invokeExact(closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_invoke$MH() {
        return RuntimeHelper.requireNonNull(constants$406.g_closure_invoke$MH,"g_closure_invoke");
    }
    /**
     * {@snippet :
     * void g_closure_invoke(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint);
     * }
     */
    public static void g_closure_invoke(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint) {
        var mh$ = g_closure_invoke$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_generic$MH() {
        return RuntimeHelper.requireNonNull(constants$406.g_cclosure_marshal_generic$MH,"g_cclosure_marshal_generic");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_generic(GClosure* closure, GValue* return_gvalue, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_generic(MemorySegment closure, MemorySegment return_gvalue, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_generic$MH();
        try {
            mh$.invokeExact(closure, return_gvalue, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_generic_va$MH() {
        return RuntimeHelper.requireNonNull(constants$406.g_cclosure_marshal_generic_va$MH,"g_cclosure_marshal_generic_va");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_generic_va(GClosure* closure, GValue* return_value, gpointer instance, va_list args_list, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_generic_va(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args_list, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_generic_va$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args_list, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__VOID$MH() {
        return RuntimeHelper.requireNonNull(constants$406.g_cclosure_marshal_VOID__VOID$MH,"g_cclosure_marshal_VOID__VOID");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__VOID(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__VOID(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__VOID$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__VOIDv$MH() {
        return RuntimeHelper.requireNonNull(constants$406.g_cclosure_marshal_VOID__VOIDv$MH,"g_cclosure_marshal_VOID__VOIDv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__VOIDv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__VOIDv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__VOIDv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__BOOLEAN$MH() {
        return RuntimeHelper.requireNonNull(constants$407.g_cclosure_marshal_VOID__BOOLEAN$MH,"g_cclosure_marshal_VOID__BOOLEAN");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__BOOLEAN(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__BOOLEAN(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__BOOLEAN$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__BOOLEANv$MH() {
        return RuntimeHelper.requireNonNull(constants$407.g_cclosure_marshal_VOID__BOOLEANv$MH,"g_cclosure_marshal_VOID__BOOLEANv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__BOOLEANv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__BOOLEANv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__BOOLEANv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__CHAR$MH() {
        return RuntimeHelper.requireNonNull(constants$407.g_cclosure_marshal_VOID__CHAR$MH,"g_cclosure_marshal_VOID__CHAR");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__CHAR(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__CHAR(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__CHAR$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__CHARv$MH() {
        return RuntimeHelper.requireNonNull(constants$407.g_cclosure_marshal_VOID__CHARv$MH,"g_cclosure_marshal_VOID__CHARv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__CHARv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__CHARv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__CHARv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UCHAR$MH() {
        return RuntimeHelper.requireNonNull(constants$407.g_cclosure_marshal_VOID__UCHAR$MH,"g_cclosure_marshal_VOID__UCHAR");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__UCHAR(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__UCHAR(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__UCHAR$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UCHARv$MH() {
        return RuntimeHelper.requireNonNull(constants$407.g_cclosure_marshal_VOID__UCHARv$MH,"g_cclosure_marshal_VOID__UCHARv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__UCHARv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__UCHARv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__UCHARv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__INT$MH() {
        return RuntimeHelper.requireNonNull(constants$408.g_cclosure_marshal_VOID__INT$MH,"g_cclosure_marshal_VOID__INT");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__INT(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__INT(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__INT$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__INTv$MH() {
        return RuntimeHelper.requireNonNull(constants$408.g_cclosure_marshal_VOID__INTv$MH,"g_cclosure_marshal_VOID__INTv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__INTv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__INTv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__INTv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UINT$MH() {
        return RuntimeHelper.requireNonNull(constants$408.g_cclosure_marshal_VOID__UINT$MH,"g_cclosure_marshal_VOID__UINT");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__UINT(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__UINT(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__UINT$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UINTv$MH() {
        return RuntimeHelper.requireNonNull(constants$408.g_cclosure_marshal_VOID__UINTv$MH,"g_cclosure_marshal_VOID__UINTv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__UINTv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__UINTv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__UINTv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__LONG$MH() {
        return RuntimeHelper.requireNonNull(constants$408.g_cclosure_marshal_VOID__LONG$MH,"g_cclosure_marshal_VOID__LONG");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__LONG(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__LONG(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__LONG$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__LONGv$MH() {
        return RuntimeHelper.requireNonNull(constants$408.g_cclosure_marshal_VOID__LONGv$MH,"g_cclosure_marshal_VOID__LONGv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__LONGv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__LONGv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__LONGv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__ULONG$MH() {
        return RuntimeHelper.requireNonNull(constants$409.g_cclosure_marshal_VOID__ULONG$MH,"g_cclosure_marshal_VOID__ULONG");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__ULONG(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__ULONG(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__ULONG$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__ULONGv$MH() {
        return RuntimeHelper.requireNonNull(constants$409.g_cclosure_marshal_VOID__ULONGv$MH,"g_cclosure_marshal_VOID__ULONGv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__ULONGv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__ULONGv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__ULONGv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__ENUM$MH() {
        return RuntimeHelper.requireNonNull(constants$409.g_cclosure_marshal_VOID__ENUM$MH,"g_cclosure_marshal_VOID__ENUM");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__ENUM(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__ENUM(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__ENUM$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__ENUMv$MH() {
        return RuntimeHelper.requireNonNull(constants$409.g_cclosure_marshal_VOID__ENUMv$MH,"g_cclosure_marshal_VOID__ENUMv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__ENUMv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__ENUMv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__ENUMv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__FLAGS$MH() {
        return RuntimeHelper.requireNonNull(constants$409.g_cclosure_marshal_VOID__FLAGS$MH,"g_cclosure_marshal_VOID__FLAGS");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__FLAGS(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__FLAGS(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__FLAGS$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__FLAGSv$MH() {
        return RuntimeHelper.requireNonNull(constants$409.g_cclosure_marshal_VOID__FLAGSv$MH,"g_cclosure_marshal_VOID__FLAGSv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__FLAGSv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__FLAGSv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__FLAGSv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__FLOAT$MH() {
        return RuntimeHelper.requireNonNull(constants$410.g_cclosure_marshal_VOID__FLOAT$MH,"g_cclosure_marshal_VOID__FLOAT");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__FLOAT(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__FLOAT(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__FLOAT$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__FLOATv$MH() {
        return RuntimeHelper.requireNonNull(constants$410.g_cclosure_marshal_VOID__FLOATv$MH,"g_cclosure_marshal_VOID__FLOATv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__FLOATv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__FLOATv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__FLOATv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__DOUBLE$MH() {
        return RuntimeHelper.requireNonNull(constants$410.g_cclosure_marshal_VOID__DOUBLE$MH,"g_cclosure_marshal_VOID__DOUBLE");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__DOUBLE(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__DOUBLE(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__DOUBLE$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__DOUBLEv$MH() {
        return RuntimeHelper.requireNonNull(constants$410.g_cclosure_marshal_VOID__DOUBLEv$MH,"g_cclosure_marshal_VOID__DOUBLEv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__DOUBLEv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__DOUBLEv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__DOUBLEv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__STRING$MH() {
        return RuntimeHelper.requireNonNull(constants$410.g_cclosure_marshal_VOID__STRING$MH,"g_cclosure_marshal_VOID__STRING");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__STRING(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__STRING(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__STRING$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__STRINGv$MH() {
        return RuntimeHelper.requireNonNull(constants$410.g_cclosure_marshal_VOID__STRINGv$MH,"g_cclosure_marshal_VOID__STRINGv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__STRINGv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__STRINGv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__STRINGv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__PARAM$MH() {
        return RuntimeHelper.requireNonNull(constants$411.g_cclosure_marshal_VOID__PARAM$MH,"g_cclosure_marshal_VOID__PARAM");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__PARAM(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__PARAM(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__PARAM$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__PARAMv$MH() {
        return RuntimeHelper.requireNonNull(constants$411.g_cclosure_marshal_VOID__PARAMv$MH,"g_cclosure_marshal_VOID__PARAMv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__PARAMv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__PARAMv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__PARAMv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__BOXED$MH() {
        return RuntimeHelper.requireNonNull(constants$411.g_cclosure_marshal_VOID__BOXED$MH,"g_cclosure_marshal_VOID__BOXED");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__BOXED(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__BOXED(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__BOXED$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__BOXEDv$MH() {
        return RuntimeHelper.requireNonNull(constants$411.g_cclosure_marshal_VOID__BOXEDv$MH,"g_cclosure_marshal_VOID__BOXEDv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__BOXEDv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__BOXEDv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__BOXEDv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__POINTER$MH() {
        return RuntimeHelper.requireNonNull(constants$411.g_cclosure_marshal_VOID__POINTER$MH,"g_cclosure_marshal_VOID__POINTER");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__POINTER(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__POINTER(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__POINTER$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__POINTERv$MH() {
        return RuntimeHelper.requireNonNull(constants$411.g_cclosure_marshal_VOID__POINTERv$MH,"g_cclosure_marshal_VOID__POINTERv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__POINTERv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__POINTERv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__POINTERv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__OBJECT$MH() {
        return RuntimeHelper.requireNonNull(constants$412.g_cclosure_marshal_VOID__OBJECT$MH,"g_cclosure_marshal_VOID__OBJECT");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__OBJECT(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__OBJECT(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__OBJECT$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__OBJECTv$MH() {
        return RuntimeHelper.requireNonNull(constants$412.g_cclosure_marshal_VOID__OBJECTv$MH,"g_cclosure_marshal_VOID__OBJECTv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__OBJECTv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__OBJECTv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__OBJECTv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__VARIANT$MH() {
        return RuntimeHelper.requireNonNull(constants$412.g_cclosure_marshal_VOID__VARIANT$MH,"g_cclosure_marshal_VOID__VARIANT");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__VARIANT(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__VARIANT(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__VARIANT$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__VARIANTv$MH() {
        return RuntimeHelper.requireNonNull(constants$412.g_cclosure_marshal_VOID__VARIANTv$MH,"g_cclosure_marshal_VOID__VARIANTv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__VARIANTv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__VARIANTv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__VARIANTv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UINT_POINTER$MH() {
        return RuntimeHelper.requireNonNull(constants$412.g_cclosure_marshal_VOID__UINT_POINTER$MH,"g_cclosure_marshal_VOID__UINT_POINTER");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__UINT_POINTER(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_VOID__UINT_POINTER(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__UINT_POINTER$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UINT_POINTERv$MH() {
        return RuntimeHelper.requireNonNull(constants$412.g_cclosure_marshal_VOID__UINT_POINTERv$MH,"g_cclosure_marshal_VOID__UINT_POINTERv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_VOID__UINT_POINTERv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_VOID__UINT_POINTERv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_VOID__UINT_POINTERv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_BOOLEAN__FLAGS$MH() {
        return RuntimeHelper.requireNonNull(constants$413.g_cclosure_marshal_BOOLEAN__FLAGS$MH,"g_cclosure_marshal_BOOLEAN__FLAGS");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_BOOLEAN__FLAGS(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_BOOLEAN__FLAGS(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_BOOLEAN__FLAGS$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_BOOLEAN__FLAGSv$MH() {
        return RuntimeHelper.requireNonNull(constants$413.g_cclosure_marshal_BOOLEAN__FLAGSv$MH,"g_cclosure_marshal_BOOLEAN__FLAGSv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_BOOLEAN__FLAGSv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_BOOLEAN__FLAGSv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_BOOLEAN__FLAGSv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_STRING__OBJECT_POINTER$MH() {
        return RuntimeHelper.requireNonNull(constants$413.g_cclosure_marshal_STRING__OBJECT_POINTER$MH,"g_cclosure_marshal_STRING__OBJECT_POINTER");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_STRING__OBJECT_POINTER(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_STRING__OBJECT_POINTER(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_STRING__OBJECT_POINTER$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_STRING__OBJECT_POINTERv$MH() {
        return RuntimeHelper.requireNonNull(constants$413.g_cclosure_marshal_STRING__OBJECT_POINTERv$MH,"g_cclosure_marshal_STRING__OBJECT_POINTERv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_STRING__OBJECT_POINTERv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_STRING__OBJECT_POINTERv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_STRING__OBJECT_POINTERv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_BOOLEAN__BOXED_BOXED$MH() {
        return RuntimeHelper.requireNonNull(constants$413.g_cclosure_marshal_BOOLEAN__BOXED_BOXED$MH,"g_cclosure_marshal_BOOLEAN__BOXED_BOXED");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_BOOLEAN__BOXED_BOXED(GClosure* closure, GValue* return_value, guint n_param_values, const GValue* param_values, gpointer invocation_hint, gpointer marshal_data);
     * }
     */
    public static void g_cclosure_marshal_BOOLEAN__BOXED_BOXED(MemorySegment closure, MemorySegment return_value, int n_param_values, MemorySegment param_values, MemorySegment invocation_hint, MemorySegment marshal_data) {
        var mh$ = g_cclosure_marshal_BOOLEAN__BOXED_BOXED$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv$MH() {
        return RuntimeHelper.requireNonNull(constants$413.g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv$MH,"g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv");
    }
    /**
     * {@snippet :
     * void g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv(GClosure* closure, GValue* return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType* param_types);
     * }
     */
    public static void g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv(MemorySegment closure, MemorySegment return_value, MemorySegment instance, MemorySegment args, MemorySegment marshal_data, int n_params, MemorySegment param_types) {
        var mh$ = g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .G_SIGNAL_RUN_FIRST = 1;
     * }
     */
    public static int G_SIGNAL_RUN_FIRST() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_SIGNAL_RUN_LAST = 2;
     * }
     */
    public static int G_SIGNAL_RUN_LAST() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_SIGNAL_RUN_CLEANUP = 4;
     * }
     */
    public static int G_SIGNAL_RUN_CLEANUP() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_SIGNAL_NO_RECURSE = 8;
     * }
     */
    public static int G_SIGNAL_NO_RECURSE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_SIGNAL_DETAILED = 16;
     * }
     */
    public static int G_SIGNAL_DETAILED() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .G_SIGNAL_ACTION = 32;
     * }
     */
    public static int G_SIGNAL_ACTION() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum .G_SIGNAL_NO_HOOKS = 64;
     * }
     */
    public static int G_SIGNAL_NO_HOOKS() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum .G_SIGNAL_MUST_COLLECT = 128;
     * }
     */
    public static int G_SIGNAL_MUST_COLLECT() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum .G_SIGNAL_DEPRECATED = 256;
     * }
     */
    public static int G_SIGNAL_DEPRECATED() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum .G_SIGNAL_ACCUMULATOR_FIRST_RUN = 131072;
     * }
     */
    public static int G_SIGNAL_ACCUMULATOR_FIRST_RUN() {
        return (int)131072L;
    }
    /**
     * {@snippet :
     * enum .G_CONNECT_DEFAULT = 0;
     * }
     */
    public static int G_CONNECT_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_CONNECT_AFTER = 1;
     * }
     */
    public static int G_CONNECT_AFTER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_CONNECT_SWAPPED = 2;
     * }
     */
    public static int G_CONNECT_SWAPPED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_SIGNAL_MATCH_ID = 1;
     * }
     */
    public static int G_SIGNAL_MATCH_ID() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_SIGNAL_MATCH_DETAIL = 2;
     * }
     */
    public static int G_SIGNAL_MATCH_DETAIL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_SIGNAL_MATCH_CLOSURE = 4;
     * }
     */
    public static int G_SIGNAL_MATCH_CLOSURE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_SIGNAL_MATCH_FUNC = 8;
     * }
     */
    public static int G_SIGNAL_MATCH_FUNC() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_SIGNAL_MATCH_DATA = 16;
     * }
     */
    public static int G_SIGNAL_MATCH_DATA() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .G_SIGNAL_MATCH_UNBLOCKED = 32;
     * }
     */
    public static int G_SIGNAL_MATCH_UNBLOCKED() {
        return (int)32L;
    }
    public static MethodHandle g_signal_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$415.g_signal_newv$MH,"g_signal_newv");
    }
    /**
     * {@snippet :
     * guint g_signal_newv(const gchar* signal_name, GType itype, GSignalFlags signal_flags, GClosure* class_closure, GSignalAccumulator accumulator, gpointer accu_data, GSignalCMarshaller c_marshaller, GType return_type, guint n_params, GType* param_types);
     * }
     */
    public static int g_signal_newv(MemorySegment signal_name, long itype, int signal_flags, MemorySegment class_closure, MemorySegment accumulator, MemorySegment accu_data, MemorySegment c_marshaller, long return_type, int n_params, MemorySegment param_types) {
        var mh$ = g_signal_newv$MH();
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_closure, accumulator, accu_data, c_marshaller, return_type, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_new_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$415.g_signal_new_valist$MH,"g_signal_new_valist");
    }
    /**
     * {@snippet :
     * guint g_signal_new_valist(const gchar* signal_name, GType itype, GSignalFlags signal_flags, GClosure* class_closure, GSignalAccumulator accumulator, gpointer accu_data, GSignalCMarshaller c_marshaller, GType return_type, guint n_params, va_list args);
     * }
     */
    public static int g_signal_new_valist(MemorySegment signal_name, long itype, int signal_flags, MemorySegment class_closure, MemorySegment accumulator, MemorySegment accu_data, MemorySegment c_marshaller, long return_type, int n_params, MemorySegment args) {
        var mh$ = g_signal_new_valist$MH();
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_closure, accumulator, accu_data, c_marshaller, return_type, n_params, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_new$MH() {
        return RuntimeHelper.requireNonNull(constants$415.g_signal_new$MH,"g_signal_new");
    }
    /**
     * {@snippet :
     * guint g_signal_new(const gchar* signal_name, GType itype, GSignalFlags signal_flags, guint class_offset, GSignalAccumulator accumulator, gpointer accu_data, GSignalCMarshaller c_marshaller, GType return_type, guint n_params,...);
     * }
     */
    public static int g_signal_new(MemorySegment signal_name, long itype, int signal_flags, int class_offset, MemorySegment accumulator, MemorySegment accu_data, MemorySegment c_marshaller, long return_type, int n_params, Object... x9) {
        var mh$ = g_signal_new$MH();
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_offset, accumulator, accu_data, c_marshaller, return_type, n_params, x9);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_new_class_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$415.g_signal_new_class_handler$MH,"g_signal_new_class_handler");
    }
    /**
     * {@snippet :
     * guint g_signal_new_class_handler(const gchar* signal_name, GType itype, GSignalFlags signal_flags, GCallback class_handler, GSignalAccumulator accumulator, gpointer accu_data, GSignalCMarshaller c_marshaller, GType return_type, guint n_params,...);
     * }
     */
    public static int g_signal_new_class_handler(MemorySegment signal_name, long itype, int signal_flags, MemorySegment class_handler, MemorySegment accumulator, MemorySegment accu_data, MemorySegment c_marshaller, long return_type, int n_params, Object... x9) {
        var mh$ = g_signal_new_class_handler$MH();
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_handler, accumulator, accu_data, c_marshaller, return_type, n_params, x9);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_set_va_marshaller$MH() {
        return RuntimeHelper.requireNonNull(constants$416.g_signal_set_va_marshaller$MH,"g_signal_set_va_marshaller");
    }
    /**
     * {@snippet :
     * void g_signal_set_va_marshaller(guint signal_id, GType instance_type, GSignalCVaMarshaller va_marshaller);
     * }
     */
    public static void g_signal_set_va_marshaller(int signal_id, long instance_type, MemorySegment va_marshaller) {
        var mh$ = g_signal_set_va_marshaller$MH();
        try {
            mh$.invokeExact(signal_id, instance_type, va_marshaller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emitv$MH() {
        return RuntimeHelper.requireNonNull(constants$416.g_signal_emitv$MH,"g_signal_emitv");
    }
    /**
     * {@snippet :
     * void g_signal_emitv(const GValue* instance_and_params, guint signal_id, GQuark detail, GValue* return_value);
     * }
     */
    public static void g_signal_emitv(MemorySegment instance_and_params, int signal_id, int detail, MemorySegment return_value) {
        var mh$ = g_signal_emitv$MH();
        try {
            mh$.invokeExact(instance_and_params, signal_id, detail, return_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emit_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$416.g_signal_emit_valist$MH,"g_signal_emit_valist");
    }
    /**
     * {@snippet :
     * void g_signal_emit_valist(gpointer instance, guint signal_id, GQuark detail, va_list var_args);
     * }
     */
    public static void g_signal_emit_valist(MemorySegment instance, int signal_id, int detail, MemorySegment var_args) {
        var mh$ = g_signal_emit_valist$MH();
        try {
            mh$.invokeExact(instance, signal_id, detail, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emit$MH() {
        return RuntimeHelper.requireNonNull(constants$416.g_signal_emit$MH,"g_signal_emit");
    }
    /**
     * {@snippet :
     * void g_signal_emit(gpointer instance, guint signal_id, GQuark detail,...);
     * }
     */
    public static void g_signal_emit(MemorySegment instance, int signal_id, int detail, Object... x3) {
        var mh$ = g_signal_emit$MH();
        try {
            mh$.invokeExact(instance, signal_id, detail, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emit_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$416.g_signal_emit_by_name$MH,"g_signal_emit_by_name");
    }
    /**
     * {@snippet :
     * void g_signal_emit_by_name(gpointer instance, const gchar* detailed_signal,...);
     * }
     */
    public static void g_signal_emit_by_name(MemorySegment instance, MemorySegment detailed_signal, Object... x2) {
        var mh$ = g_signal_emit_by_name$MH();
        try {
            mh$.invokeExact(instance, detailed_signal, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$416.g_signal_lookup$MH,"g_signal_lookup");
    }
    /**
     * {@snippet :
     * guint g_signal_lookup(const gchar* name, GType itype);
     * }
     */
    public static int g_signal_lookup(MemorySegment name, long itype) {
        var mh$ = g_signal_lookup$MH();
        try {
            return (int)mh$.invokeExact(name, itype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_name$MH() {
        return RuntimeHelper.requireNonNull(constants$417.g_signal_name$MH,"g_signal_name");
    }
    /**
     * {@snippet :
     * const gchar* g_signal_name(guint signal_id);
     * }
     */
    public static MemorySegment g_signal_name(int signal_id) {
        var mh$ = g_signal_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(signal_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_query$MH() {
        return RuntimeHelper.requireNonNull(constants$417.g_signal_query$MH,"g_signal_query");
    }
    /**
     * {@snippet :
     * void g_signal_query(guint signal_id, GSignalQuery* query);
     * }
     */
    public static void g_signal_query(int signal_id, MemorySegment query) {
        var mh$ = g_signal_query$MH();
        try {
            mh$.invokeExact(signal_id, query);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_list_ids$MH() {
        return RuntimeHelper.requireNonNull(constants$417.g_signal_list_ids$MH,"g_signal_list_ids");
    }
    /**
     * {@snippet :
     * guint* g_signal_list_ids(GType itype, guint* n_ids);
     * }
     */
    public static MemorySegment g_signal_list_ids(long itype, MemorySegment n_ids) {
        var mh$ = g_signal_list_ids$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(itype, n_ids);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_is_valid_name$MH() {
        return RuntimeHelper.requireNonNull(constants$417.g_signal_is_valid_name$MH,"g_signal_is_valid_name");
    }
    /**
     * {@snippet :
     * gboolean g_signal_is_valid_name(const gchar* name);
     * }
     */
    public static int g_signal_is_valid_name(MemorySegment name) {
        var mh$ = g_signal_is_valid_name$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_parse_name$MH() {
        return RuntimeHelper.requireNonNull(constants$417.g_signal_parse_name$MH,"g_signal_parse_name");
    }
    /**
     * {@snippet :
     * gboolean g_signal_parse_name(const gchar* detailed_signal, GType itype, guint* signal_id_p, GQuark* detail_p, gboolean force_detail_quark);
     * }
     */
    public static int g_signal_parse_name(MemorySegment detailed_signal, long itype, MemorySegment signal_id_p, MemorySegment detail_p, int force_detail_quark) {
        var mh$ = g_signal_parse_name$MH();
        try {
            return (int)mh$.invokeExact(detailed_signal, itype, signal_id_p, detail_p, force_detail_quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_get_invocation_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$417.g_signal_get_invocation_hint$MH,"g_signal_get_invocation_hint");
    }
    /**
     * {@snippet :
     * GSignalInvocationHint* g_signal_get_invocation_hint(gpointer instance);
     * }
     */
    public static MemorySegment g_signal_get_invocation_hint(MemorySegment instance) {
        var mh$ = g_signal_get_invocation_hint$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_stop_emission$MH() {
        return RuntimeHelper.requireNonNull(constants$418.g_signal_stop_emission$MH,"g_signal_stop_emission");
    }
    /**
     * {@snippet :
     * void g_signal_stop_emission(gpointer instance, guint signal_id, GQuark detail);
     * }
     */
    public static void g_signal_stop_emission(MemorySegment instance, int signal_id, int detail) {
        var mh$ = g_signal_stop_emission$MH();
        try {
            mh$.invokeExact(instance, signal_id, detail);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_stop_emission_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$418.g_signal_stop_emission_by_name$MH,"g_signal_stop_emission_by_name");
    }
    /**
     * {@snippet :
     * void g_signal_stop_emission_by_name(gpointer instance, const gchar* detailed_signal);
     * }
     */
    public static void g_signal_stop_emission_by_name(MemorySegment instance, MemorySegment detailed_signal) {
        var mh$ = g_signal_stop_emission_by_name$MH();
        try {
            mh$.invokeExact(instance, detailed_signal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_add_emission_hook$MH() {
        return RuntimeHelper.requireNonNull(constants$418.g_signal_add_emission_hook$MH,"g_signal_add_emission_hook");
    }
    /**
     * {@snippet :
     * gulong g_signal_add_emission_hook(guint signal_id, GQuark detail, GSignalEmissionHook hook_func, gpointer hook_data, GDestroyNotify data_destroy);
     * }
     */
    public static long g_signal_add_emission_hook(int signal_id, int detail, MemorySegment hook_func, MemorySegment hook_data, MemorySegment data_destroy) {
        var mh$ = g_signal_add_emission_hook$MH();
        try {
            return (long)mh$.invokeExact(signal_id, detail, hook_func, hook_data, data_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_remove_emission_hook$MH() {
        return RuntimeHelper.requireNonNull(constants$418.g_signal_remove_emission_hook$MH,"g_signal_remove_emission_hook");
    }
    /**
     * {@snippet :
     * void g_signal_remove_emission_hook(guint signal_id, gulong hook_id);
     * }
     */
    public static void g_signal_remove_emission_hook(int signal_id, long hook_id) {
        var mh$ = g_signal_remove_emission_hook$MH();
        try {
            mh$.invokeExact(signal_id, hook_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_has_handler_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$418.g_signal_has_handler_pending$MH,"g_signal_has_handler_pending");
    }
    /**
     * {@snippet :
     * gboolean g_signal_has_handler_pending(gpointer instance, guint signal_id, GQuark detail, gboolean may_be_blocked);
     * }
     */
    public static int g_signal_has_handler_pending(MemorySegment instance, int signal_id, int detail, int may_be_blocked) {
        var mh$ = g_signal_has_handler_pending$MH();
        try {
            return (int)mh$.invokeExact(instance, signal_id, detail, may_be_blocked);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_closure_by_id$MH() {
        return RuntimeHelper.requireNonNull(constants$418.g_signal_connect_closure_by_id$MH,"g_signal_connect_closure_by_id");
    }
    /**
     * {@snippet :
     * gulong g_signal_connect_closure_by_id(gpointer instance, guint signal_id, GQuark detail, GClosure* closure, gboolean after);
     * }
     */
    public static long g_signal_connect_closure_by_id(MemorySegment instance, int signal_id, int detail, MemorySegment closure, int after) {
        var mh$ = g_signal_connect_closure_by_id$MH();
        try {
            return (long)mh$.invokeExact(instance, signal_id, detail, closure, after);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$419.g_signal_connect_closure$MH,"g_signal_connect_closure");
    }
    /**
     * {@snippet :
     * gulong g_signal_connect_closure(gpointer instance, const gchar* detailed_signal, GClosure* closure, gboolean after);
     * }
     */
    public static long g_signal_connect_closure(MemorySegment instance, MemorySegment detailed_signal, MemorySegment closure, int after) {
        var mh$ = g_signal_connect_closure$MH();
        try {
            return (long)mh$.invokeExact(instance, detailed_signal, closure, after);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_data$MH() {
        return RuntimeHelper.requireNonNull(constants$419.g_signal_connect_data$MH,"g_signal_connect_data");
    }
    /**
     * {@snippet :
     * gulong g_signal_connect_data(gpointer instance, const gchar* detailed_signal, GCallback c_handler, gpointer data, GClosureNotify destroy_data, GConnectFlags connect_flags);
     * }
     */
    public static long g_signal_connect_data(MemorySegment instance, MemorySegment detailed_signal, MemorySegment c_handler, MemorySegment data, MemorySegment destroy_data, int connect_flags) {
        var mh$ = g_signal_connect_data$MH();
        try {
            return (long)mh$.invokeExact(instance, detailed_signal, c_handler, data, destroy_data, connect_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_block$MH() {
        return RuntimeHelper.requireNonNull(constants$419.g_signal_handler_block$MH,"g_signal_handler_block");
    }
    /**
     * {@snippet :
     * void g_signal_handler_block(gpointer instance, gulong handler_id);
     * }
     */
    public static void g_signal_handler_block(MemorySegment instance, long handler_id) {
        var mh$ = g_signal_handler_block$MH();
        try {
            mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_unblock$MH() {
        return RuntimeHelper.requireNonNull(constants$419.g_signal_handler_unblock$MH,"g_signal_handler_unblock");
    }
    /**
     * {@snippet :
     * void g_signal_handler_unblock(gpointer instance, gulong handler_id);
     * }
     */
    public static void g_signal_handler_unblock(MemorySegment instance, long handler_id) {
        var mh$ = g_signal_handler_unblock$MH();
        try {
            mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$419.g_signal_handler_disconnect$MH,"g_signal_handler_disconnect");
    }
    /**
     * {@snippet :
     * void g_signal_handler_disconnect(gpointer instance, gulong handler_id);
     * }
     */
    public static void g_signal_handler_disconnect(MemorySegment instance, long handler_id) {
        var mh$ = g_signal_handler_disconnect$MH();
        try {
            mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_is_connected$MH() {
        return RuntimeHelper.requireNonNull(constants$419.g_signal_handler_is_connected$MH,"g_signal_handler_is_connected");
    }
    /**
     * {@snippet :
     * gboolean g_signal_handler_is_connected(gpointer instance, gulong handler_id);
     * }
     */
    public static int g_signal_handler_is_connected(MemorySegment instance, long handler_id) {
        var mh$ = g_signal_handler_is_connected$MH();
        try {
            return (int)mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_find$MH() {
        return RuntimeHelper.requireNonNull(constants$420.g_signal_handler_find$MH,"g_signal_handler_find");
    }
    /**
     * {@snippet :
     * gulong g_signal_handler_find(gpointer instance, GSignalMatchType mask, guint signal_id, GQuark detail, GClosure* closure, gpointer func, gpointer data);
     * }
     */
    public static long g_signal_handler_find(MemorySegment instance, int mask, int signal_id, int detail, MemorySegment closure, MemorySegment func, MemorySegment data) {
        var mh$ = g_signal_handler_find$MH();
        try {
            return (long)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_block_matched$MH() {
        return RuntimeHelper.requireNonNull(constants$420.g_signal_handlers_block_matched$MH,"g_signal_handlers_block_matched");
    }
    /**
     * {@snippet :
     * guint g_signal_handlers_block_matched(gpointer instance, GSignalMatchType mask, guint signal_id, GQuark detail, GClosure* closure, gpointer func, gpointer data);
     * }
     */
    public static int g_signal_handlers_block_matched(MemorySegment instance, int mask, int signal_id, int detail, MemorySegment closure, MemorySegment func, MemorySegment data) {
        var mh$ = g_signal_handlers_block_matched$MH();
        try {
            return (int)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_unblock_matched$MH() {
        return RuntimeHelper.requireNonNull(constants$420.g_signal_handlers_unblock_matched$MH,"g_signal_handlers_unblock_matched");
    }
    /**
     * {@snippet :
     * guint g_signal_handlers_unblock_matched(gpointer instance, GSignalMatchType mask, guint signal_id, GQuark detail, GClosure* closure, gpointer func, gpointer data);
     * }
     */
    public static int g_signal_handlers_unblock_matched(MemorySegment instance, int mask, int signal_id, int detail, MemorySegment closure, MemorySegment func, MemorySegment data) {
        var mh$ = g_signal_handlers_unblock_matched$MH();
        try {
            return (int)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_disconnect_matched$MH() {
        return RuntimeHelper.requireNonNull(constants$420.g_signal_handlers_disconnect_matched$MH,"g_signal_handlers_disconnect_matched");
    }
    /**
     * {@snippet :
     * guint g_signal_handlers_disconnect_matched(gpointer instance, GSignalMatchType mask, guint signal_id, GQuark detail, GClosure* closure, gpointer func, gpointer data);
     * }
     */
    public static int g_signal_handlers_disconnect_matched(MemorySegment instance, int mask, int signal_id, int detail, MemorySegment closure, MemorySegment func, MemorySegment data) {
        var mh$ = g_signal_handlers_disconnect_matched$MH();
        try {
            return (int)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_signal_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$420.g_clear_signal_handler$MH,"g_clear_signal_handler");
    }
    /**
     * {@snippet :
     * void g_clear_signal_handler(gulong* handler_id_ptr, gpointer instance);
     * }
     */
    public static void g_clear_signal_handler(MemorySegment handler_id_ptr, MemorySegment instance) {
        var mh$ = g_clear_signal_handler$MH();
        try {
            mh$.invokeExact(handler_id_ptr, instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_override_class_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$420.g_signal_override_class_closure$MH,"g_signal_override_class_closure");
    }
    /**
     * {@snippet :
     * void g_signal_override_class_closure(guint signal_id, GType instance_type, GClosure* class_closure);
     * }
     */
    public static void g_signal_override_class_closure(int signal_id, long instance_type, MemorySegment class_closure) {
        var mh$ = g_signal_override_class_closure$MH();
        try {
            mh$.invokeExact(signal_id, instance_type, class_closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_override_class_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$421.g_signal_override_class_handler$MH,"g_signal_override_class_handler");
    }
    /**
     * {@snippet :
     * void g_signal_override_class_handler(const gchar* signal_name, GType instance_type, GCallback class_handler);
     * }
     */
    public static void g_signal_override_class_handler(MemorySegment signal_name, long instance_type, MemorySegment class_handler) {
        var mh$ = g_signal_override_class_handler$MH();
        try {
            mh$.invokeExact(signal_name, instance_type, class_handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_chain_from_overridden$MH() {
        return RuntimeHelper.requireNonNull(constants$421.g_signal_chain_from_overridden$MH,"g_signal_chain_from_overridden");
    }
    /**
     * {@snippet :
     * void g_signal_chain_from_overridden(const GValue* instance_and_params, GValue* return_value);
     * }
     */
    public static void g_signal_chain_from_overridden(MemorySegment instance_and_params, MemorySegment return_value) {
        var mh$ = g_signal_chain_from_overridden$MH();
        try {
            mh$.invokeExact(instance_and_params, return_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_chain_from_overridden_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$421.g_signal_chain_from_overridden_handler$MH,"g_signal_chain_from_overridden_handler");
    }
    /**
     * {@snippet :
     * void g_signal_chain_from_overridden_handler(gpointer instance,...);
     * }
     */
    public static void g_signal_chain_from_overridden_handler(MemorySegment instance, Object... x1) {
        var mh$ = g_signal_chain_from_overridden_handler$MH();
        try {
            mh$.invokeExact(instance, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_accumulator_true_handled$MH() {
        return RuntimeHelper.requireNonNull(constants$421.g_signal_accumulator_true_handled$MH,"g_signal_accumulator_true_handled");
    }
    /**
     * {@snippet :
     * gboolean g_signal_accumulator_true_handled(GSignalInvocationHint* ihint, GValue* return_accu, const GValue* handler_return, gpointer dummy);
     * }
     */
    public static int g_signal_accumulator_true_handled(MemorySegment ihint, MemorySegment return_accu, MemorySegment handler_return, MemorySegment dummy) {
        var mh$ = g_signal_accumulator_true_handled$MH();
        try {
            return (int)mh$.invokeExact(ihint, return_accu, handler_return, dummy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_accumulator_first_wins$MH() {
        return RuntimeHelper.requireNonNull(constants$421.g_signal_accumulator_first_wins$MH,"g_signal_accumulator_first_wins");
    }
    /**
     * {@snippet :
     * gboolean g_signal_accumulator_first_wins(GSignalInvocationHint* ihint, GValue* return_accu, const GValue* handler_return, gpointer dummy);
     * }
     */
    public static int g_signal_accumulator_first_wins(MemorySegment ihint, MemorySegment return_accu, MemorySegment handler_return, MemorySegment dummy) {
        var mh$ = g_signal_accumulator_first_wins$MH();
        try {
            return (int)mh$.invokeExact(ihint, return_accu, handler_return, dummy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$421.g_signal_handlers_destroy$MH,"g_signal_handlers_destroy");
    }
    /**
     * {@snippet :
     * void g_signal_handlers_destroy(gpointer instance);
     * }
     */
    public static void g_signal_handlers_destroy(MemorySegment instance) {
        var mh$ = g_signal_handlers_destroy$MH();
        try {
            mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _g_signals_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$422._g_signals_destroy$MH,"_g_signals_destroy");
    }
    /**
     * {@snippet :
     * void _g_signals_destroy(GType itype);
     * }
     */
    public static void _g_signals_destroy(long itype) {
        var mh$ = _g_signals_destroy$MH();
        try {
            mh$.invokeExact(itype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$422.g_date_get_type$MH,"g_date_get_type");
    }
    /**
     * {@snippet :
     * GType g_date_get_type();
     * }
     */
    public static long g_date_get_type() {
        var mh$ = g_date_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strv_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$422.g_strv_get_type$MH,"g_strv_get_type");
    }
    /**
     * {@snippet :
     * GType g_strv_get_type();
     * }
     */
    public static long g_strv_get_type() {
        var mh$ = g_strv_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_gstring_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$422.g_gstring_get_type$MH,"g_gstring_get_type");
    }
    /**
     * {@snippet :
     * GType g_gstring_get_type();
     * }
     */
    public static long g_gstring_get_type() {
        var mh$ = g_gstring_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$422.g_hash_table_get_type$MH,"g_hash_table_get_type");
    }
    /**
     * {@snippet :
     * GType g_hash_table_get_type();
     * }
     */
    public static long g_hash_table_get_type() {
        var mh$ = g_hash_table_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_array_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$422.g_array_get_type$MH,"g_array_get_type");
    }
    /**
     * {@snippet :
     * GType g_array_get_type();
     * }
     */
    public static long g_array_get_type() {
        var mh$ = g_array_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_byte_array_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$423.g_byte_array_get_type$MH,"g_byte_array_get_type");
    }
    /**
     * {@snippet :
     * GType g_byte_array_get_type();
     * }
     */
    public static long g_byte_array_get_type() {
        var mh$ = g_byte_array_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ptr_array_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$423.g_ptr_array_get_type$MH,"g_ptr_array_get_type");
    }
    /**
     * {@snippet :
     * GType g_ptr_array_get_type();
     * }
     */
    public static long g_ptr_array_get_type() {
        var mh$ = g_ptr_array_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bytes_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$423.g_bytes_get_type$MH,"g_bytes_get_type");
    }
    /**
     * {@snippet :
     * GType g_bytes_get_type();
     * }
     */
    public static long g_bytes_get_type() {
        var mh$ = g_bytes_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_get_gtype$MH() {
        return RuntimeHelper.requireNonNull(constants$423.g_variant_type_get_gtype$MH,"g_variant_type_get_gtype");
    }
    /**
     * {@snippet :
     * GType g_variant_type_get_gtype();
     * }
     */
    public static long g_variant_type_get_gtype() {
        var mh$ = g_variant_type_get_gtype$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_regex_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$423.g_regex_get_type$MH,"g_regex_get_type");
    }
    /**
     * {@snippet :
     * GType g_regex_get_type();
     * }
     */
    public static long g_regex_get_type() {
        var mh$ = g_regex_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_match_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$423.g_match_info_get_type$MH,"g_match_info_get_type");
    }
    /**
     * {@snippet :
     * GType g_match_info_get_type();
     * }
     */
    public static long g_match_info_get_type() {
        var mh$ = g_match_info_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$424.g_error_get_type$MH,"g_error_get_type");
    }
    /**
     * {@snippet :
     * GType g_error_get_type();
     * }
     */
    public static long g_error_get_type() {
        var mh$ = g_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$424.g_date_time_get_type$MH,"g_date_time_get_type");
    }
    /**
     * {@snippet :
     * GType g_date_time_get_type();
     * }
     */
    public static long g_date_time_get_type() {
        var mh$ = g_date_time_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_time_zone_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$424.g_time_zone_get_type$MH,"g_time_zone_get_type");
    }
    /**
     * {@snippet :
     * GType g_time_zone_get_type();
     * }
     */
    public static long g_time_zone_get_type() {
        var mh$ = g_time_zone_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$424.g_io_channel_get_type$MH,"g_io_channel_get_type");
    }
    /**
     * {@snippet :
     * GType g_io_channel_get_type();
     * }
     */
    public static long g_io_channel_get_type() {
        var mh$ = g_io_channel_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_condition_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$424.g_io_condition_get_type$MH,"g_io_condition_get_type");
    }
    /**
     * {@snippet :
     * GType g_io_condition_get_type();
     * }
     */
    public static long g_io_condition_get_type() {
        var mh$ = g_io_condition_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_builder_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$424.g_variant_builder_get_type$MH,"g_variant_builder_get_type");
    }
    /**
     * {@snippet :
     * GType g_variant_builder_get_type();
     * }
     */
    public static long g_variant_builder_get_type() {
        var mh$ = g_variant_builder_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dict_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$425.g_variant_dict_get_type$MH,"g_variant_dict_get_type");
    }
    /**
     * {@snippet :
     * GType g_variant_dict_get_type();
     * }
     */
    public static long g_variant_dict_get_type() {
        var mh$ = g_variant_dict_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$425.g_key_file_get_type$MH,"g_key_file_get_type");
    }
    /**
     * {@snippet :
     * GType g_key_file_get_type();
     * }
     */
    public static long g_key_file_get_type() {
        var mh$ = g_key_file_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$425.g_main_loop_get_type$MH,"g_main_loop_get_type");
    }
    /**
     * {@snippet :
     * GType g_main_loop_get_type();
     * }
     */
    public static long g_main_loop_get_type() {
        var mh$ = g_main_loop_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$425.g_main_context_get_type$MH,"g_main_context_get_type");
    }
    /**
     * {@snippet :
     * GType g_main_context_get_type();
     * }
     */
    public static long g_main_context_get_type() {
        var mh$ = g_main_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$425.g_source_get_type$MH,"g_source_get_type");
    }
    /**
     * {@snippet :
     * GType g_source_get_type();
     * }
     */
    public static long g_source_get_type() {
        var mh$ = g_source_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollfd_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$425.g_pollfd_get_type$MH,"g_pollfd_get_type");
    }
    /**
     * {@snippet :
     * GType g_pollfd_get_type();
     * }
     */
    public static long g_pollfd_get_type() {
        var mh$ = g_pollfd_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_thread_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$426.g_thread_get_type$MH,"g_thread_get_type");
    }
    /**
     * {@snippet :
     * GType g_thread_get_type();
     * }
     */
    public static long g_thread_get_type() {
        var mh$ = g_thread_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_checksum_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$426.g_checksum_get_type$MH,"g_checksum_get_type");
    }
    /**
     * {@snippet :
     * GType g_checksum_get_type();
     * }
     */
    public static long g_checksum_get_type() {
        var mh$ = g_checksum_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$426.g_markup_parse_context_get_type$MH,"g_markup_parse_context_get_type");
    }
    /**
     * {@snippet :
     * GType g_markup_parse_context_get_type();
     * }
     */
    public static long g_markup_parse_context_get_type() {
        var mh$ = g_markup_parse_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$426.g_mapped_file_get_type$MH,"g_mapped_file_get_type");
    }
    /**
     * {@snippet :
     * GType g_mapped_file_get_type();
     * }
     */
    public static long g_mapped_file_get_type() {
        var mh$ = g_mapped_file_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$426.g_option_group_get_type$MH,"g_option_group_get_type");
    }
    /**
     * {@snippet :
     * GType g_option_group_get_type();
     * }
     */
    public static long g_option_group_get_type() {
        var mh$ = g_option_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_uri_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$426.g_uri_get_type$MH,"g_uri_get_type");
    }
    /**
     * {@snippet :
     * GType g_uri_get_type();
     * }
     */
    public static long g_uri_get_type() {
        var mh$ = g_uri_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tree_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$427.g_tree_get_type$MH,"g_tree_get_type");
    }
    /**
     * {@snippet :
     * GType g_tree_get_type();
     * }
     */
    public static long g_tree_get_type() {
        var mh$ = g_tree_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pattern_spec_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$427.g_pattern_spec_get_type$MH,"g_pattern_spec_get_type");
    }
    /**
     * {@snippet :
     * GType g_pattern_spec_get_type();
     * }
     */
    public static long g_pattern_spec_get_type() {
        var mh$ = g_pattern_spec_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bookmark_file_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$427.g_bookmark_file_get_type$MH,"g_bookmark_file_get_type");
    }
    /**
     * {@snippet :
     * GType g_bookmark_file_get_type();
     * }
     */
    public static long g_bookmark_file_get_type() {
        var mh$ = g_bookmark_file_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_gtype$MH() {
        return RuntimeHelper.requireNonNull(constants$427.g_variant_get_gtype$MH,"g_variant_get_gtype");
    }
    /**
     * {@snippet :
     * GType g_variant_get_gtype();
     * }
     */
    public static long g_variant_get_gtype() {
        var mh$ = g_variant_get_gtype$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_boxed_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$428.g_boxed_copy$MH,"g_boxed_copy");
    }
    /**
     * {@snippet :
     * gpointer g_boxed_copy(GType boxed_type, gconstpointer src_boxed);
     * }
     */
    public static MemorySegment g_boxed_copy(long boxed_type, MemorySegment src_boxed) {
        var mh$ = g_boxed_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(boxed_type, src_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_boxed_free$MH() {
        return RuntimeHelper.requireNonNull(constants$428.g_boxed_free$MH,"g_boxed_free");
    }
    /**
     * {@snippet :
     * void g_boxed_free(GType boxed_type, gpointer boxed);
     * }
     */
    public static void g_boxed_free(long boxed_type, MemorySegment boxed) {
        var mh$ = g_boxed_free$MH();
        try {
            mh$.invokeExact(boxed_type, boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$428.g_value_set_boxed$MH,"g_value_set_boxed");
    }
    /**
     * {@snippet :
     * void g_value_set_boxed(GValue* value, gconstpointer v_boxed);
     * }
     */
    public static void g_value_set_boxed(MemorySegment value, MemorySegment v_boxed) {
        var mh$ = g_value_set_boxed$MH();
        try {
            mh$.invokeExact(value, v_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_static_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$428.g_value_set_static_boxed$MH,"g_value_set_static_boxed");
    }
    /**
     * {@snippet :
     * void g_value_set_static_boxed(GValue* value, gconstpointer v_boxed);
     * }
     */
    public static void g_value_set_static_boxed(MemorySegment value, MemorySegment v_boxed) {
        var mh$ = g_value_set_static_boxed$MH();
        try {
            mh$.invokeExact(value, v_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_take_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$429.g_value_take_boxed$MH,"g_value_take_boxed");
    }
    /**
     * {@snippet :
     * void g_value_take_boxed(GValue* value, gconstpointer v_boxed);
     * }
     */
    public static void g_value_take_boxed(MemorySegment value, MemorySegment v_boxed) {
        var mh$ = g_value_take_boxed$MH();
        try {
            mh$.invokeExact(value, v_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_boxed_take_ownership$MH() {
        return RuntimeHelper.requireNonNull(constants$429.g_value_set_boxed_take_ownership$MH,"g_value_set_boxed_take_ownership");
    }
    /**
     * {@snippet :
     * void g_value_set_boxed_take_ownership(GValue* value, gconstpointer v_boxed);
     * }
     */
    public static void g_value_set_boxed_take_ownership(MemorySegment value, MemorySegment v_boxed) {
        var mh$ = g_value_set_boxed_take_ownership$MH();
        try {
            mh$.invokeExact(value, v_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$429.g_value_get_boxed$MH,"g_value_get_boxed");
    }
    /**
     * {@snippet :
     * gpointer g_value_get_boxed(const GValue* value);
     * }
     */
    public static MemorySegment g_value_get_boxed(MemorySegment value) {
        var mh$ = g_value_get_boxed$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_dup_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$429.g_value_dup_boxed$MH,"g_value_dup_boxed");
    }
    /**
     * {@snippet :
     * gpointer g_value_dup_boxed(const GValue* value);
     * }
     */
    public static MemorySegment g_value_dup_boxed(MemorySegment value) {
        var mh$ = g_value_dup_boxed$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_boxed_type_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$429.g_boxed_type_register_static$MH,"g_boxed_type_register_static");
    }
    /**
     * {@snippet :
     * GType g_boxed_type_register_static(const gchar* name, GBoxedCopyFunc boxed_copy, GBoxedFreeFunc boxed_free);
     * }
     */
    public static long g_boxed_type_register_static(MemorySegment name, MemorySegment boxed_copy, MemorySegment boxed_free) {
        var mh$ = g_boxed_type_register_static$MH();
        try {
            return (long)mh$.invokeExact(name, boxed_copy, boxed_free);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$429.g_closure_get_type$MH,"g_closure_get_type");
    }
    /**
     * {@snippet :
     * GType g_closure_get_type();
     * }
     */
    public static long g_closure_get_type() {
        var mh$ = g_closure_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$430.g_value_get_type$MH,"g_value_get_type");
    }
    /**
     * {@snippet :
     * GType g_value_get_type();
     * }
     */
    public static long g_value_get_type() {
        var mh$ = g_value_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_initially_unowned_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$431.g_initially_unowned_get_type$MH,"g_initially_unowned_get_type");
    }
    /**
     * {@snippet :
     * GType g_initially_unowned_get_type();
     * }
     */
    public static long g_initially_unowned_get_type() {
        var mh$ = g_initially_unowned_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_install_property$MH() {
        return RuntimeHelper.requireNonNull(constants$431.g_object_class_install_property$MH,"g_object_class_install_property");
    }
    /**
     * {@snippet :
     * void g_object_class_install_property(GObjectClass* oclass, guint property_id, GParamSpec* pspec);
     * }
     */
    public static void g_object_class_install_property(MemorySegment oclass, int property_id, MemorySegment pspec) {
        var mh$ = g_object_class_install_property$MH();
        try {
            mh$.invokeExact(oclass, property_id, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_find_property$MH() {
        return RuntimeHelper.requireNonNull(constants$431.g_object_class_find_property$MH,"g_object_class_find_property");
    }
    /**
     * {@snippet :
     * GParamSpec* g_object_class_find_property(GObjectClass* oclass, const gchar* property_name);
     * }
     */
    public static MemorySegment g_object_class_find_property(MemorySegment oclass, MemorySegment property_name) {
        var mh$ = g_object_class_find_property$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(oclass, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_list_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$432.g_object_class_list_properties$MH,"g_object_class_list_properties");
    }
    /**
     * {@snippet :
     * GParamSpec** g_object_class_list_properties(GObjectClass* oclass, guint* n_properties);
     * }
     */
    public static MemorySegment g_object_class_list_properties(MemorySegment oclass, MemorySegment n_properties) {
        var mh$ = g_object_class_list_properties$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(oclass, n_properties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_override_property$MH() {
        return RuntimeHelper.requireNonNull(constants$432.g_object_class_override_property$MH,"g_object_class_override_property");
    }
    /**
     * {@snippet :
     * void g_object_class_override_property(GObjectClass* oclass, guint property_id, const gchar* name);
     * }
     */
    public static void g_object_class_override_property(MemorySegment oclass, int property_id, MemorySegment name) {
        var mh$ = g_object_class_override_property$MH();
        try {
            mh$.invokeExact(oclass, property_id, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_install_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$432.g_object_class_install_properties$MH,"g_object_class_install_properties");
    }
    /**
     * {@snippet :
     * void g_object_class_install_properties(GObjectClass* oclass, guint n_pspecs, GParamSpec** pspecs);
     * }
     */
    public static void g_object_class_install_properties(MemorySegment oclass, int n_pspecs, MemorySegment pspecs) {
        var mh$ = g_object_class_install_properties$MH();
        try {
            mh$.invokeExact(oclass, n_pspecs, pspecs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_interface_install_property$MH() {
        return RuntimeHelper.requireNonNull(constants$432.g_object_interface_install_property$MH,"g_object_interface_install_property");
    }
    /**
     * {@snippet :
     * void g_object_interface_install_property(gpointer g_iface, GParamSpec* pspec);
     * }
     */
    public static void g_object_interface_install_property(MemorySegment g_iface, MemorySegment pspec) {
        var mh$ = g_object_interface_install_property$MH();
        try {
            mh$.invokeExact(g_iface, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_interface_find_property$MH() {
        return RuntimeHelper.requireNonNull(constants$432.g_object_interface_find_property$MH,"g_object_interface_find_property");
    }
    /**
     * {@snippet :
     * GParamSpec* g_object_interface_find_property(gpointer g_iface, const gchar* property_name);
     * }
     */
    public static MemorySegment g_object_interface_find_property(MemorySegment g_iface, MemorySegment property_name) {
        var mh$ = g_object_interface_find_property$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(g_iface, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_interface_list_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$432.g_object_interface_list_properties$MH,"g_object_interface_list_properties");
    }
    /**
     * {@snippet :
     * GParamSpec** g_object_interface_list_properties(gpointer g_iface, guint* n_properties_p);
     * }
     */
    public static MemorySegment g_object_interface_list_properties(MemorySegment g_iface, MemorySegment n_properties_p) {
        var mh$ = g_object_interface_list_properties$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(g_iface, n_properties_p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$433.g_object_get_type$MH,"g_object_get_type");
    }
    /**
     * {@snippet :
     * GType g_object_get_type();
     * }
     */
    public static long g_object_get_type() {
        var mh$ = g_object_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_new$MH() {
        return RuntimeHelper.requireNonNull(constants$433.g_object_new$MH,"g_object_new");
    }
    /**
     * {@snippet :
     * gpointer g_object_new(GType object_type, const gchar* first_property_name,...);
     * }
     */
    public static MemorySegment g_object_new(long object_type, MemorySegment first_property_name, Object... x2) {
        var mh$ = g_object_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object_type, first_property_name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_new_with_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$433.g_object_new_with_properties$MH,"g_object_new_with_properties");
    }
    /**
     * {@snippet :
     * GObject* g_object_new_with_properties(GType object_type, guint n_properties, char* names[], const GValue values[]);
     * }
     */
    public static MemorySegment g_object_new_with_properties(long object_type, int n_properties, MemorySegment names, MemorySegment values) {
        var mh$ = g_object_new_with_properties$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object_type, n_properties, names, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$433.g_object_newv$MH,"g_object_newv");
    }
    /**
     * {@snippet :
     * gpointer g_object_newv(GType object_type, guint n_parameters, GParameter* parameters);
     * }
     */
    public static MemorySegment g_object_newv(long object_type, int n_parameters, MemorySegment parameters) {
        var mh$ = g_object_newv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object_type, n_parameters, parameters);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_new_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$433.g_object_new_valist$MH,"g_object_new_valist");
    }
    /**
     * {@snippet :
     * GObject* g_object_new_valist(GType object_type, const gchar* first_property_name, va_list var_args);
     * }
     */
    public static MemorySegment g_object_new_valist(long object_type, MemorySegment first_property_name, MemorySegment var_args) {
        var mh$ = g_object_new_valist$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object_type, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set$MH() {
        return RuntimeHelper.requireNonNull(constants$433.g_object_set$MH,"g_object_set");
    }
    /**
     * {@snippet :
     * void g_object_set(gpointer object, const gchar* first_property_name,...);
     * }
     */
    public static void g_object_set(MemorySegment object, MemorySegment first_property_name, Object... x2) {
        var mh$ = g_object_set$MH();
        try {
            mh$.invokeExact(object, first_property_name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get$MH() {
        return RuntimeHelper.requireNonNull(constants$434.g_object_get$MH,"g_object_get");
    }
    /**
     * {@snippet :
     * void g_object_get(gpointer object, const gchar* first_property_name,...);
     * }
     */
    public static void g_object_get(MemorySegment object, MemorySegment first_property_name, Object... x2) {
        var mh$ = g_object_get$MH();
        try {
            mh$.invokeExact(object, first_property_name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$434.g_object_connect$MH,"g_object_connect");
    }
    /**
     * {@snippet :
     * gpointer g_object_connect(gpointer object, const gchar* signal_spec,...);
     * }
     */
    public static MemorySegment g_object_connect(MemorySegment object, MemorySegment signal_spec, Object... x2) {
        var mh$ = g_object_connect$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object, signal_spec, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$434.g_object_disconnect$MH,"g_object_disconnect");
    }
    /**
     * {@snippet :
     * void g_object_disconnect(gpointer object, const gchar* signal_spec,...);
     * }
     */
    public static void g_object_disconnect(MemorySegment object, MemorySegment signal_spec, Object... x2) {
        var mh$ = g_object_disconnect$MH();
        try {
            mh$.invokeExact(object, signal_spec, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_setv$MH() {
        return RuntimeHelper.requireNonNull(constants$434.g_object_setv$MH,"g_object_setv");
    }
    /**
     * {@snippet :
     * void g_object_setv(GObject* object, guint n_properties, const gchar* names[], const GValue values[]);
     * }
     */
    public static void g_object_setv(MemorySegment object, int n_properties, MemorySegment names, MemorySegment values) {
        var mh$ = g_object_setv$MH();
        try {
            mh$.invokeExact(object, n_properties, names, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$434.g_object_set_valist$MH,"g_object_set_valist");
    }
    /**
     * {@snippet :
     * void g_object_set_valist(GObject* object, const gchar* first_property_name, va_list var_args);
     * }
     */
    public static void g_object_set_valist(MemorySegment object, MemorySegment first_property_name, MemorySegment var_args) {
        var mh$ = g_object_set_valist$MH();
        try {
            mh$.invokeExact(object, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_getv$MH() {
        return RuntimeHelper.requireNonNull(constants$434.g_object_getv$MH,"g_object_getv");
    }
    /**
     * {@snippet :
     * void g_object_getv(GObject* object, guint n_properties, const gchar* names[], GValue values[]);
     * }
     */
    public static void g_object_getv(MemorySegment object, int n_properties, MemorySegment names, MemorySegment values) {
        var mh$ = g_object_getv$MH();
        try {
            mh$.invokeExact(object, n_properties, names, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$435.g_object_get_valist$MH,"g_object_get_valist");
    }
    /**
     * {@snippet :
     * void g_object_get_valist(GObject* object, const gchar* first_property_name, va_list var_args);
     * }
     */
    public static void g_object_get_valist(MemorySegment object, MemorySegment first_property_name, MemorySegment var_args) {
        var mh$ = g_object_get_valist$MH();
        try {
            mh$.invokeExact(object, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_property$MH() {
        return RuntimeHelper.requireNonNull(constants$435.g_object_set_property$MH,"g_object_set_property");
    }
    /**
     * {@snippet :
     * void g_object_set_property(GObject* object, const gchar* property_name, const GValue* value);
     * }
     */
    public static void g_object_set_property(MemorySegment object, MemorySegment property_name, MemorySegment value) {
        var mh$ = g_object_set_property$MH();
        try {
            mh$.invokeExact(object, property_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_property$MH() {
        return RuntimeHelper.requireNonNull(constants$435.g_object_get_property$MH,"g_object_get_property");
    }
    /**
     * {@snippet :
     * void g_object_get_property(GObject* object, const gchar* property_name, GValue* value);
     * }
     */
    public static void g_object_get_property(MemorySegment object, MemorySegment property_name, MemorySegment value) {
        var mh$ = g_object_get_property$MH();
        try {
            mh$.invokeExact(object, property_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_freeze_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$435.g_object_freeze_notify$MH,"g_object_freeze_notify");
    }
    /**
     * {@snippet :
     * void g_object_freeze_notify(GObject* object);
     * }
     */
    public static void g_object_freeze_notify(MemorySegment object) {
        var mh$ = g_object_freeze_notify$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$435.g_object_notify$MH,"g_object_notify");
    }
    /**
     * {@snippet :
     * void g_object_notify(GObject* object, const gchar* property_name);
     * }
     */
    public static void g_object_notify(MemorySegment object, MemorySegment property_name) {
        var mh$ = g_object_notify$MH();
        try {
            mh$.invokeExact(object, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_notify_by_pspec$MH() {
        return RuntimeHelper.requireNonNull(constants$435.g_object_notify_by_pspec$MH,"g_object_notify_by_pspec");
    }
    /**
     * {@snippet :
     * void g_object_notify_by_pspec(GObject* object, GParamSpec* pspec);
     * }
     */
    public static void g_object_notify_by_pspec(MemorySegment object, MemorySegment pspec) {
        var mh$ = g_object_notify_by_pspec$MH();
        try {
            mh$.invokeExact(object, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_thaw_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$436.g_object_thaw_notify$MH,"g_object_thaw_notify");
    }
    /**
     * {@snippet :
     * void g_object_thaw_notify(GObject* object);
     * }
     */
    public static void g_object_thaw_notify(MemorySegment object) {
        var mh$ = g_object_thaw_notify$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_is_floating$MH() {
        return RuntimeHelper.requireNonNull(constants$436.g_object_is_floating$MH,"g_object_is_floating");
    }
    /**
     * {@snippet :
     * gboolean g_object_is_floating(gpointer object);
     * }
     */
    public static int g_object_is_floating(MemorySegment object) {
        var mh$ = g_object_is_floating$MH();
        try {
            return (int)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_ref_sink$MH() {
        return RuntimeHelper.requireNonNull(constants$436.g_object_ref_sink$MH,"g_object_ref_sink");
    }
    /**
     * {@snippet :
     * gpointer g_object_ref_sink(gpointer object);
     * }
     */
    public static MemorySegment g_object_ref_sink(MemorySegment object) {
        var mh$ = g_object_ref_sink$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_take_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$436.g_object_take_ref$MH,"g_object_take_ref");
    }
    /**
     * {@snippet :
     * gpointer g_object_take_ref(gpointer object);
     * }
     */
    public static MemorySegment g_object_take_ref(MemorySegment object) {
        var mh$ = g_object_take_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$436.g_object_ref$MH,"g_object_ref");
    }
    /**
     * {@snippet :
     * gpointer g_object_ref(gpointer object);
     * }
     */
    public static MemorySegment g_object_ref(MemorySegment object) {
        var mh$ = g_object_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$436.g_object_unref$MH,"g_object_unref");
    }
    /**
     * {@snippet :
     * void g_object_unref(gpointer object);
     * }
     */
    public static void g_object_unref(MemorySegment object) {
        var mh$ = g_object_unref$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_weak_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$437.g_object_weak_ref$MH,"g_object_weak_ref");
    }
    /**
     * {@snippet :
     * void g_object_weak_ref(GObject* object, GWeakNotify notify, gpointer data);
     * }
     */
    public static void g_object_weak_ref(MemorySegment object, MemorySegment notify, MemorySegment data) {
        var mh$ = g_object_weak_ref$MH();
        try {
            mh$.invokeExact(object, notify, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_weak_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$437.g_object_weak_unref$MH,"g_object_weak_unref");
    }
    /**
     * {@snippet :
     * void g_object_weak_unref(GObject* object, GWeakNotify notify, gpointer data);
     * }
     */
    public static void g_object_weak_unref(MemorySegment object, MemorySegment notify, MemorySegment data) {
        var mh$ = g_object_weak_unref$MH();
        try {
            mh$.invokeExact(object, notify, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_add_weak_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$437.g_object_add_weak_pointer$MH,"g_object_add_weak_pointer");
    }
    /**
     * {@snippet :
     * void g_object_add_weak_pointer(GObject* object, gpointer* weak_pointer_location);
     * }
     */
    public static void g_object_add_weak_pointer(MemorySegment object, MemorySegment weak_pointer_location) {
        var mh$ = g_object_add_weak_pointer$MH();
        try {
            mh$.invokeExact(object, weak_pointer_location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_remove_weak_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$437.g_object_remove_weak_pointer$MH,"g_object_remove_weak_pointer");
    }
    /**
     * {@snippet :
     * void g_object_remove_weak_pointer(GObject* object, gpointer* weak_pointer_location);
     * }
     */
    public static void g_object_remove_weak_pointer(MemorySegment object, MemorySegment weak_pointer_location) {
        var mh$ = g_object_remove_weak_pointer$MH();
        try {
            mh$.invokeExact(object, weak_pointer_location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_add_toggle_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$438.g_object_add_toggle_ref$MH,"g_object_add_toggle_ref");
    }
    /**
     * {@snippet :
     * void g_object_add_toggle_ref(GObject* object, GToggleNotify notify, gpointer data);
     * }
     */
    public static void g_object_add_toggle_ref(MemorySegment object, MemorySegment notify, MemorySegment data) {
        var mh$ = g_object_add_toggle_ref$MH();
        try {
            mh$.invokeExact(object, notify, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_remove_toggle_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$438.g_object_remove_toggle_ref$MH,"g_object_remove_toggle_ref");
    }
    /**
     * {@snippet :
     * void g_object_remove_toggle_ref(GObject* object, GToggleNotify notify, gpointer data);
     * }
     */
    public static void g_object_remove_toggle_ref(MemorySegment object, MemorySegment notify, MemorySegment data) {
        var mh$ = g_object_remove_toggle_ref$MH();
        try {
            mh$.invokeExact(object, notify, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$438.g_object_get_qdata$MH,"g_object_get_qdata");
    }
    /**
     * {@snippet :
     * gpointer g_object_get_qdata(GObject* object, GQuark quark);
     * }
     */
    public static MemorySegment g_object_get_qdata(MemorySegment object, int quark) {
        var mh$ = g_object_get_qdata$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$438.g_object_set_qdata$MH,"g_object_set_qdata");
    }
    /**
     * {@snippet :
     * void g_object_set_qdata(GObject* object, GQuark quark, gpointer data);
     * }
     */
    public static void g_object_set_qdata(MemorySegment object, int quark, MemorySegment data) {
        var mh$ = g_object_set_qdata$MH();
        try {
            mh$.invokeExact(object, quark, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_qdata_full$MH() {
        return RuntimeHelper.requireNonNull(constants$438.g_object_set_qdata_full$MH,"g_object_set_qdata_full");
    }
    /**
     * {@snippet :
     * void g_object_set_qdata_full(GObject* object, GQuark quark, gpointer data, GDestroyNotify destroy);
     * }
     */
    public static void g_object_set_qdata_full(MemorySegment object, int quark, MemorySegment data, MemorySegment destroy) {
        var mh$ = g_object_set_qdata_full$MH();
        try {
            mh$.invokeExact(object, quark, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_steal_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$438.g_object_steal_qdata$MH,"g_object_steal_qdata");
    }
    /**
     * {@snippet :
     * gpointer g_object_steal_qdata(GObject* object, GQuark quark);
     * }
     */
    public static MemorySegment g_object_steal_qdata(MemorySegment object, int quark) {
        var mh$ = g_object_steal_qdata$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_dup_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$439.g_object_dup_qdata$MH,"g_object_dup_qdata");
    }
    /**
     * {@snippet :
     * gpointer g_object_dup_qdata(GObject* object, GQuark quark, GDuplicateFunc dup_func, gpointer user_data);
     * }
     */
    public static MemorySegment g_object_dup_qdata(MemorySegment object, int quark, MemorySegment dup_func, MemorySegment user_data) {
        var mh$ = g_object_dup_qdata$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object, quark, dup_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_replace_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$439.g_object_replace_qdata$MH,"g_object_replace_qdata");
    }
    /**
     * {@snippet :
     * gboolean g_object_replace_qdata(GObject* object, GQuark quark, gpointer oldval, gpointer newval, GDestroyNotify destroy, GDestroyNotify* old_destroy);
     * }
     */
    public static int g_object_replace_qdata(MemorySegment object, int quark, MemorySegment oldval, MemorySegment newval, MemorySegment destroy, MemorySegment old_destroy) {
        var mh$ = g_object_replace_qdata$MH();
        try {
            return (int)mh$.invokeExact(object, quark, oldval, newval, destroy, old_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_data$MH() {
        return RuntimeHelper.requireNonNull(constants$439.g_object_get_data$MH,"g_object_get_data");
    }
    /**
     * {@snippet :
     * gpointer g_object_get_data(GObject* object, const gchar* key);
     * }
     */
    public static MemorySegment g_object_get_data(MemorySegment object, MemorySegment key) {
        var mh$ = g_object_get_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_data$MH() {
        return RuntimeHelper.requireNonNull(constants$439.g_object_set_data$MH,"g_object_set_data");
    }
    /**
     * {@snippet :
     * void g_object_set_data(GObject* object, const gchar* key, gpointer data);
     * }
     */
    public static void g_object_set_data(MemorySegment object, MemorySegment key, MemorySegment data) {
        var mh$ = g_object_set_data$MH();
        try {
            mh$.invokeExact(object, key, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_data_full$MH() {
        return RuntimeHelper.requireNonNull(constants$439.g_object_set_data_full$MH,"g_object_set_data_full");
    }
    /**
     * {@snippet :
     * void g_object_set_data_full(GObject* object, const gchar* key, gpointer data, GDestroyNotify destroy);
     * }
     */
    public static void g_object_set_data_full(MemorySegment object, MemorySegment key, MemorySegment data, MemorySegment destroy) {
        var mh$ = g_object_set_data_full$MH();
        try {
            mh$.invokeExact(object, key, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_steal_data$MH() {
        return RuntimeHelper.requireNonNull(constants$439.g_object_steal_data$MH,"g_object_steal_data");
    }
    /**
     * {@snippet :
     * gpointer g_object_steal_data(GObject* object, const gchar* key);
     * }
     */
    public static MemorySegment g_object_steal_data(MemorySegment object, MemorySegment key) {
        var mh$ = g_object_steal_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_dup_data$MH() {
        return RuntimeHelper.requireNonNull(constants$440.g_object_dup_data$MH,"g_object_dup_data");
    }
    /**
     * {@snippet :
     * gpointer g_object_dup_data(GObject* object, const gchar* key, GDuplicateFunc dup_func, gpointer user_data);
     * }
     */
    public static MemorySegment g_object_dup_data(MemorySegment object, MemorySegment key, MemorySegment dup_func, MemorySegment user_data) {
        var mh$ = g_object_dup_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object, key, dup_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_replace_data$MH() {
        return RuntimeHelper.requireNonNull(constants$440.g_object_replace_data$MH,"g_object_replace_data");
    }
    /**
     * {@snippet :
     * gboolean g_object_replace_data(GObject* object, const gchar* key, gpointer oldval, gpointer newval, GDestroyNotify destroy, GDestroyNotify* old_destroy);
     * }
     */
    public static int g_object_replace_data(MemorySegment object, MemorySegment key, MemorySegment oldval, MemorySegment newval, MemorySegment destroy, MemorySegment old_destroy) {
        var mh$ = g_object_replace_data$MH();
        try {
            return (int)mh$.invokeExact(object, key, oldval, newval, destroy, old_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_watch_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$440.g_object_watch_closure$MH,"g_object_watch_closure");
    }
    /**
     * {@snippet :
     * void g_object_watch_closure(GObject* object, GClosure* closure);
     * }
     */
    public static void g_object_watch_closure(MemorySegment object, MemorySegment closure) {
        var mh$ = g_object_watch_closure$MH();
        try {
            mh$.invokeExact(object, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_new_object$MH() {
        return RuntimeHelper.requireNonNull(constants$440.g_cclosure_new_object$MH,"g_cclosure_new_object");
    }
    /**
     * {@snippet :
     * GClosure* g_cclosure_new_object(GCallback callback_func, GObject* object);
     * }
     */
    public static MemorySegment g_cclosure_new_object(MemorySegment callback_func, MemorySegment object) {
        var mh$ = g_cclosure_new_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(callback_func, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_new_object_swap$MH() {
        return RuntimeHelper.requireNonNull(constants$440.g_cclosure_new_object_swap$MH,"g_cclosure_new_object_swap");
    }
    /**
     * {@snippet :
     * GClosure* g_cclosure_new_object_swap(GCallback callback_func, GObject* object);
     * }
     */
    public static MemorySegment g_cclosure_new_object_swap(MemorySegment callback_func, MemorySegment object) {
        var mh$ = g_cclosure_new_object_swap$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(callback_func, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_new_object$MH() {
        return RuntimeHelper.requireNonNull(constants$440.g_closure_new_object$MH,"g_closure_new_object");
    }
    /**
     * {@snippet :
     * GClosure* g_closure_new_object(guint sizeof_closure, GObject* object);
     * }
     */
    public static MemorySegment g_closure_new_object(int sizeof_closure, MemorySegment object) {
        var mh$ = g_closure_new_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(sizeof_closure, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_object$MH() {
        return RuntimeHelper.requireNonNull(constants$441.g_value_set_object$MH,"g_value_set_object");
    }
    /**
     * {@snippet :
     * void g_value_set_object(GValue* value, gpointer v_object);
     * }
     */
    public static void g_value_set_object(MemorySegment value, MemorySegment v_object) {
        var mh$ = g_value_set_object$MH();
        try {
            mh$.invokeExact(value, v_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_object$MH() {
        return RuntimeHelper.requireNonNull(constants$441.g_value_get_object$MH,"g_value_get_object");
    }
    /**
     * {@snippet :
     * gpointer g_value_get_object(const GValue* value);
     * }
     */
    public static MemorySegment g_value_get_object(MemorySegment value) {
        var mh$ = g_value_get_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_dup_object$MH() {
        return RuntimeHelper.requireNonNull(constants$441.g_value_dup_object$MH,"g_value_dup_object");
    }
    /**
     * {@snippet :
     * gpointer g_value_dup_object(const GValue* value);
     * }
     */
    public static MemorySegment g_value_dup_object(MemorySegment value) {
        var mh$ = g_value_dup_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_object$MH() {
        return RuntimeHelper.requireNonNull(constants$441.g_signal_connect_object$MH,"g_signal_connect_object");
    }
    /**
     * {@snippet :
     * gulong g_signal_connect_object(gpointer instance, const gchar* detailed_signal, GCallback c_handler, gpointer gobject, GConnectFlags connect_flags);
     * }
     */
    public static long g_signal_connect_object(MemorySegment instance, MemorySegment detailed_signal, MemorySegment c_handler, MemorySegment gobject, int connect_flags) {
        var mh$ = g_signal_connect_object$MH();
        try {
            return (long)mh$.invokeExact(instance, detailed_signal, c_handler, gobject, connect_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_force_floating$MH() {
        return RuntimeHelper.requireNonNull(constants$441.g_object_force_floating$MH,"g_object_force_floating");
    }
    /**
     * {@snippet :
     * void g_object_force_floating(GObject* object);
     * }
     */
    public static void g_object_force_floating(MemorySegment object) {
        var mh$ = g_object_force_floating$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_run_dispose$MH() {
        return RuntimeHelper.requireNonNull(constants$441.g_object_run_dispose$MH,"g_object_run_dispose");
    }
    /**
     * {@snippet :
     * void g_object_run_dispose(GObject* object);
     * }
     */
    public static void g_object_run_dispose(MemorySegment object) {
        var mh$ = g_object_run_dispose$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_take_object$MH() {
        return RuntimeHelper.requireNonNull(constants$442.g_value_take_object$MH,"g_value_take_object");
    }
    /**
     * {@snippet :
     * void g_value_take_object(GValue* value, gpointer v_object);
     * }
     */
    public static void g_value_take_object(MemorySegment value, MemorySegment v_object) {
        var mh$ = g_value_take_object$MH();
        try {
            mh$.invokeExact(value, v_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_object_take_ownership$MH() {
        return RuntimeHelper.requireNonNull(constants$442.g_value_set_object_take_ownership$MH,"g_value_set_object_take_ownership");
    }
    /**
     * {@snippet :
     * void g_value_set_object_take_ownership(GValue* value, gpointer v_object);
     * }
     */
    public static void g_value_set_object_take_ownership(MemorySegment value, MemorySegment v_object) {
        var mh$ = g_value_set_object_take_ownership$MH();
        try {
            mh$.invokeExact(value, v_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_compat_control$MH() {
        return RuntimeHelper.requireNonNull(constants$442.g_object_compat_control$MH,"g_object_compat_control");
    }
    /**
     * {@snippet :
     * gsize g_object_compat_control(gsize what, gpointer data);
     * }
     */
    public static long g_object_compat_control(long what, MemorySegment data) {
        var mh$ = g_object_compat_control$MH();
        try {
            return (long)mh$.invokeExact(what, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_object$MH() {
        return RuntimeHelper.requireNonNull(constants$442.g_clear_object$MH,"g_clear_object");
    }
    /**
     * {@snippet :
     * void g_clear_object(GObject** object_ptr);
     * }
     */
    public static void g_clear_object(MemorySegment object_ptr) {
        var mh$ = g_clear_object$MH();
        try {
            mh$.invokeExact(object_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_weak_ref_init$MH() {
        return RuntimeHelper.requireNonNull(constants$442.g_weak_ref_init$MH,"g_weak_ref_init");
    }
    /**
     * {@snippet :
     * void g_weak_ref_init(GWeakRef* weak_ref, gpointer object);
     * }
     */
    public static void g_weak_ref_init(MemorySegment weak_ref, MemorySegment object) {
        var mh$ = g_weak_ref_init$MH();
        try {
            mh$.invokeExact(weak_ref, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_weak_ref_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$442.g_weak_ref_clear$MH,"g_weak_ref_clear");
    }
    /**
     * {@snippet :
     * void g_weak_ref_clear(GWeakRef* weak_ref);
     * }
     */
    public static void g_weak_ref_clear(MemorySegment weak_ref) {
        var mh$ = g_weak_ref_clear$MH();
        try {
            mh$.invokeExact(weak_ref);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_weak_ref_get$MH() {
        return RuntimeHelper.requireNonNull(constants$443.g_weak_ref_get$MH,"g_weak_ref_get");
    }
    /**
     * {@snippet :
     * gpointer g_weak_ref_get(GWeakRef* weak_ref);
     * }
     */
    public static MemorySegment g_weak_ref_get(MemorySegment weak_ref) {
        var mh$ = g_weak_ref_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(weak_ref);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_weak_ref_set$MH() {
        return RuntimeHelper.requireNonNull(constants$443.g_weak_ref_set$MH,"g_weak_ref_set");
    }
    /**
     * {@snippet :
     * void g_weak_ref_set(GWeakRef* weak_ref, gpointer object);
     * }
     */
    public static void g_weak_ref_set(MemorySegment weak_ref, MemorySegment object) {
        var mh$ = g_weak_ref_set$MH();
        try {
            mh$.invokeExact(weak_ref, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .G_BINDING_DEFAULT = 0;
     * }
     */
    public static int G_BINDING_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_BINDING_BIDIRECTIONAL = 1;
     * }
     */
    public static int G_BINDING_BIDIRECTIONAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_BINDING_SYNC_CREATE = 2;
     * }
     */
    public static int G_BINDING_SYNC_CREATE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_BINDING_INVERT_BOOLEAN = 4;
     * }
     */
    public static int G_BINDING_INVERT_BOOLEAN() {
        return (int)4L;
    }
    public static MethodHandle g_binding_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$443.g_binding_flags_get_type$MH,"g_binding_flags_get_type");
    }
    /**
     * {@snippet :
     * GType g_binding_flags_get_type();
     * }
     */
    public static long g_binding_flags_get_type() {
        var mh$ = g_binding_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$443.g_binding_get_type$MH,"g_binding_get_type");
    }
    /**
     * {@snippet :
     * GType g_binding_get_type();
     * }
     */
    public static long g_binding_get_type() {
        var mh$ = g_binding_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$444.g_binding_get_flags$MH,"g_binding_get_flags");
    }
    /**
     * {@snippet :
     * GBindingFlags g_binding_get_flags(GBinding* binding);
     * }
     */
    public static int g_binding_get_flags(MemorySegment binding) {
        var mh$ = g_binding_get_flags$MH();
        try {
            return (int)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_get_source$MH() {
        return RuntimeHelper.requireNonNull(constants$444.g_binding_get_source$MH,"g_binding_get_source");
    }
    /**
     * {@snippet :
     * GObject* g_binding_get_source(GBinding* binding);
     * }
     */
    public static MemorySegment g_binding_get_source(MemorySegment binding) {
        var mh$ = g_binding_get_source$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_dup_source$MH() {
        return RuntimeHelper.requireNonNull(constants$444.g_binding_dup_source$MH,"g_binding_dup_source");
    }
    /**
     * {@snippet :
     * GObject* g_binding_dup_source(GBinding* binding);
     * }
     */
    public static MemorySegment g_binding_dup_source(MemorySegment binding) {
        var mh$ = g_binding_dup_source$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_get_target$MH() {
        return RuntimeHelper.requireNonNull(constants$444.g_binding_get_target$MH,"g_binding_get_target");
    }
    /**
     * {@snippet :
     * GObject* g_binding_get_target(GBinding* binding);
     * }
     */
    public static MemorySegment g_binding_get_target(MemorySegment binding) {
        var mh$ = g_binding_get_target$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_dup_target$MH() {
        return RuntimeHelper.requireNonNull(constants$444.g_binding_dup_target$MH,"g_binding_dup_target");
    }
    /**
     * {@snippet :
     * GObject* g_binding_dup_target(GBinding* binding);
     * }
     */
    public static MemorySegment g_binding_dup_target(MemorySegment binding) {
        var mh$ = g_binding_dup_target$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_get_source_property$MH() {
        return RuntimeHelper.requireNonNull(constants$444.g_binding_get_source_property$MH,"g_binding_get_source_property");
    }
    /**
     * {@snippet :
     * const gchar* g_binding_get_source_property(GBinding* binding);
     * }
     */
    public static MemorySegment g_binding_get_source_property(MemorySegment binding) {
        var mh$ = g_binding_get_source_property$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_get_target_property$MH() {
        return RuntimeHelper.requireNonNull(constants$445.g_binding_get_target_property$MH,"g_binding_get_target_property");
    }
    /**
     * {@snippet :
     * const gchar* g_binding_get_target_property(GBinding* binding);
     * }
     */
    public static MemorySegment g_binding_get_target_property(MemorySegment binding) {
        var mh$ = g_binding_get_target_property$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_unbind$MH() {
        return RuntimeHelper.requireNonNull(constants$445.g_binding_unbind$MH,"g_binding_unbind");
    }
    /**
     * {@snippet :
     * void g_binding_unbind(GBinding* binding);
     * }
     */
    public static void g_binding_unbind(MemorySegment binding) {
        var mh$ = g_binding_unbind$MH();
        try {
            mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_bind_property$MH() {
        return RuntimeHelper.requireNonNull(constants$445.g_object_bind_property$MH,"g_object_bind_property");
    }
    /**
     * {@snippet :
     * GBinding* g_object_bind_property(gpointer source, const gchar* source_property, gpointer target, const gchar* target_property, GBindingFlags flags);
     * }
     */
    public static MemorySegment g_object_bind_property(MemorySegment source, MemorySegment source_property, MemorySegment target, MemorySegment target_property, int flags) {
        var mh$ = g_object_bind_property$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source, source_property, target, target_property, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_bind_property_full$MH() {
        return RuntimeHelper.requireNonNull(constants$445.g_object_bind_property_full$MH,"g_object_bind_property_full");
    }
    /**
     * {@snippet :
     * GBinding* g_object_bind_property_full(gpointer source, const gchar* source_property, gpointer target, const gchar* target_property, GBindingFlags flags, GBindingTransformFunc transform_to, GBindingTransformFunc transform_from, gpointer user_data, GDestroyNotify notify);
     * }
     */
    public static MemorySegment g_object_bind_property_full(MemorySegment source, MemorySegment source_property, MemorySegment target, MemorySegment target_property, int flags, MemorySegment transform_to, MemorySegment transform_from, MemorySegment user_data, MemorySegment notify) {
        var mh$ = g_object_bind_property_full$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source, source_property, target, target_property, flags, transform_to, transform_from, user_data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_bind_property_with_closures$MH() {
        return RuntimeHelper.requireNonNull(constants$445.g_object_bind_property_with_closures$MH,"g_object_bind_property_with_closures");
    }
    /**
     * {@snippet :
     * GBinding* g_object_bind_property_with_closures(gpointer source, const gchar* source_property, gpointer target, const gchar* target_property, GBindingFlags flags, GClosure* transform_to, GClosure* transform_from);
     * }
     */
    public static MemorySegment g_object_bind_property_with_closures(MemorySegment source, MemorySegment source_property, MemorySegment target, MemorySegment target_property, int flags, MemorySegment transform_to, MemorySegment transform_from) {
        var mh$ = g_object_bind_property_with_closures$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source, source_property, target, target_property, flags, transform_to, transform_from);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$445.g_binding_group_get_type$MH,"g_binding_group_get_type");
    }
    /**
     * {@snippet :
     * GType g_binding_group_get_type();
     * }
     */
    public static long g_binding_group_get_type() {
        var mh$ = g_binding_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_new$MH() {
        return RuntimeHelper.requireNonNull(constants$446.g_binding_group_new$MH,"g_binding_group_new");
    }
    /**
     * {@snippet :
     * GBindingGroup* g_binding_group_new();
     * }
     */
    public static MemorySegment g_binding_group_new() {
        var mh$ = g_binding_group_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_dup_source$MH() {
        return RuntimeHelper.requireNonNull(constants$446.g_binding_group_dup_source$MH,"g_binding_group_dup_source");
    }
    /**
     * {@snippet :
     * gpointer g_binding_group_dup_source(GBindingGroup* self);
     * }
     */
    public static MemorySegment g_binding_group_dup_source(MemorySegment self) {
        var mh$ = g_binding_group_dup_source$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_set_source$MH() {
        return RuntimeHelper.requireNonNull(constants$446.g_binding_group_set_source$MH,"g_binding_group_set_source");
    }
    /**
     * {@snippet :
     * void g_binding_group_set_source(GBindingGroup* self, gpointer source);
     * }
     */
    public static void g_binding_group_set_source(MemorySegment self, MemorySegment source) {
        var mh$ = g_binding_group_set_source$MH();
        try {
            mh$.invokeExact(self, source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_bind$MH() {
        return RuntimeHelper.requireNonNull(constants$446.g_binding_group_bind$MH,"g_binding_group_bind");
    }
    /**
     * {@snippet :
     * void g_binding_group_bind(GBindingGroup* self, const gchar* source_property, gpointer target, const gchar* target_property, GBindingFlags flags);
     * }
     */
    public static void g_binding_group_bind(MemorySegment self, MemorySegment source_property, MemorySegment target, MemorySegment target_property, int flags) {
        var mh$ = g_binding_group_bind$MH();
        try {
            mh$.invokeExact(self, source_property, target, target_property, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_bind_full$MH() {
        return RuntimeHelper.requireNonNull(constants$446.g_binding_group_bind_full$MH,"g_binding_group_bind_full");
    }
    /**
     * {@snippet :
     * void g_binding_group_bind_full(GBindingGroup* self, const gchar* source_property, gpointer target, const gchar* target_property, GBindingFlags flags, GBindingTransformFunc transform_to, GBindingTransformFunc transform_from, gpointer user_data, GDestroyNotify user_data_destroy);
     * }
     */
    public static void g_binding_group_bind_full(MemorySegment self, MemorySegment source_property, MemorySegment target, MemorySegment target_property, int flags, MemorySegment transform_to, MemorySegment transform_from, MemorySegment user_data, MemorySegment user_data_destroy) {
        var mh$ = g_binding_group_bind_full$MH();
        try {
            mh$.invokeExact(self, source_property, target, target_property, flags, transform_to, transform_from, user_data, user_data_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_bind_with_closures$MH() {
        return RuntimeHelper.requireNonNull(constants$446.g_binding_group_bind_with_closures$MH,"g_binding_group_bind_with_closures");
    }
    /**
     * {@snippet :
     * void g_binding_group_bind_with_closures(GBindingGroup* self, const gchar* source_property, gpointer target, const gchar* target_property, GBindingFlags flags, GClosure* transform_to, GClosure* transform_from);
     * }
     */
    public static void g_binding_group_bind_with_closures(MemorySegment self, MemorySegment source_property, MemorySegment target, MemorySegment target_property, int flags, MemorySegment transform_to, MemorySegment transform_from) {
        var mh$ = g_binding_group_bind_with_closures$MH();
        try {
            mh$.invokeExact(self, source_property, target, target_property, flags, transform_to, transform_from);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_enum_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$447.g_enum_get_value$MH,"g_enum_get_value");
    }
    /**
     * {@snippet :
     * GEnumValue* g_enum_get_value(GEnumClass* enum_class, gint value);
     * }
     */
    public static MemorySegment g_enum_get_value(MemorySegment enum_class, int value) {
        var mh$ = g_enum_get_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(enum_class, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_enum_get_value_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$447.g_enum_get_value_by_name$MH,"g_enum_get_value_by_name");
    }
    /**
     * {@snippet :
     * GEnumValue* g_enum_get_value_by_name(GEnumClass* enum_class, const gchar* name);
     * }
     */
    public static MemorySegment g_enum_get_value_by_name(MemorySegment enum_class, MemorySegment name) {
        var mh$ = g_enum_get_value_by_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(enum_class, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_enum_get_value_by_nick$MH() {
        return RuntimeHelper.requireNonNull(constants$447.g_enum_get_value_by_nick$MH,"g_enum_get_value_by_nick");
    }
    /**
     * {@snippet :
     * GEnumValue* g_enum_get_value_by_nick(GEnumClass* enum_class, const gchar* nick);
     * }
     */
    public static MemorySegment g_enum_get_value_by_nick(MemorySegment enum_class, MemorySegment nick) {
        var mh$ = g_enum_get_value_by_nick$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(enum_class, nick);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_flags_get_first_value$MH() {
        return RuntimeHelper.requireNonNull(constants$447.g_flags_get_first_value$MH,"g_flags_get_first_value");
    }
    /**
     * {@snippet :
     * GFlagsValue* g_flags_get_first_value(GFlagsClass* flags_class, guint value);
     * }
     */
    public static MemorySegment g_flags_get_first_value(MemorySegment flags_class, int value) {
        var mh$ = g_flags_get_first_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags_class, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_flags_get_value_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$447.g_flags_get_value_by_name$MH,"g_flags_get_value_by_name");
    }
    /**
     * {@snippet :
     * GFlagsValue* g_flags_get_value_by_name(GFlagsClass* flags_class, const gchar* name);
     * }
     */
    public static MemorySegment g_flags_get_value_by_name(MemorySegment flags_class, MemorySegment name) {
        var mh$ = g_flags_get_value_by_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags_class, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_flags_get_value_by_nick$MH() {
        return RuntimeHelper.requireNonNull(constants$447.g_flags_get_value_by_nick$MH,"g_flags_get_value_by_nick");
    }
    /**
     * {@snippet :
     * GFlagsValue* g_flags_get_value_by_nick(GFlagsClass* flags_class, const gchar* nick);
     * }
     */
    public static MemorySegment g_flags_get_value_by_nick(MemorySegment flags_class, MemorySegment nick) {
        var mh$ = g_flags_get_value_by_nick$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags_class, nick);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_enum_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$448.g_enum_to_string$MH,"g_enum_to_string");
    }
    /**
     * {@snippet :
     * gchar* g_enum_to_string(GType g_enum_type, gint value);
     * }
     */
    public static MemorySegment g_enum_to_string(long g_enum_type, int value) {
        var mh$ = g_enum_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(g_enum_type, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_flags_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$448.g_flags_to_string$MH,"g_flags_to_string");
    }
    /**
     * {@snippet :
     * gchar* g_flags_to_string(GType flags_type, guint value);
     * }
     */
    public static MemorySegment g_flags_to_string(long flags_type, int value) {
        var mh$ = g_flags_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags_type, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_enum$MH() {
        return RuntimeHelper.requireNonNull(constants$448.g_value_set_enum$MH,"g_value_set_enum");
    }
    /**
     * {@snippet :
     * void g_value_set_enum(GValue* value, gint v_enum);
     * }
     */
    public static void g_value_set_enum(MemorySegment value, int v_enum) {
        var mh$ = g_value_set_enum$MH();
        try {
            mh$.invokeExact(value, v_enum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_enum$MH() {
        return RuntimeHelper.requireNonNull(constants$448.g_value_get_enum$MH,"g_value_get_enum");
    }
    /**
     * {@snippet :
     * gint g_value_get_enum(const GValue* value);
     * }
     */
    public static int g_value_get_enum(MemorySegment value) {
        var mh$ = g_value_get_enum$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$448.g_value_set_flags$MH,"g_value_set_flags");
    }
    /**
     * {@snippet :
     * void g_value_set_flags(GValue* value, guint v_flags);
     * }
     */
    public static void g_value_set_flags(MemorySegment value, int v_flags) {
        var mh$ = g_value_set_flags$MH();
        try {
            mh$.invokeExact(value, v_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$448.g_value_get_flags$MH,"g_value_get_flags");
    }
    /**
     * {@snippet :
     * guint g_value_get_flags(const GValue* value);
     * }
     */
    public static int g_value_get_flags(MemorySegment value) {
        var mh$ = g_value_get_flags$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_enum_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$449.g_enum_register_static$MH,"g_enum_register_static");
    }
    /**
     * {@snippet :
     * GType g_enum_register_static(const gchar* name, const GEnumValue* const_static_values);
     * }
     */
    public static long g_enum_register_static(MemorySegment name, MemorySegment const_static_values) {
        var mh$ = g_enum_register_static$MH();
        try {
            return (long)mh$.invokeExact(name, const_static_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_flags_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$449.g_flags_register_static$MH,"g_flags_register_static");
    }
    /**
     * {@snippet :
     * GType g_flags_register_static(const gchar* name, const GFlagsValue* const_static_values);
     * }
     */
    public static long g_flags_register_static(MemorySegment name, MemorySegment const_static_values) {
        var mh$ = g_flags_register_static$MH();
        try {
            return (long)mh$.invokeExact(name, const_static_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_enum_complete_type_info$MH() {
        return RuntimeHelper.requireNonNull(constants$449.g_enum_complete_type_info$MH,"g_enum_complete_type_info");
    }
    /**
     * {@snippet :
     * void g_enum_complete_type_info(GType g_enum_type, GTypeInfo* info, const GEnumValue* const_values);
     * }
     */
    public static void g_enum_complete_type_info(long g_enum_type, MemorySegment info, MemorySegment const_values) {
        var mh$ = g_enum_complete_type_info$MH();
        try {
            mh$.invokeExact(g_enum_type, info, const_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_flags_complete_type_info$MH() {
        return RuntimeHelper.requireNonNull(constants$449.g_flags_complete_type_info$MH,"g_flags_complete_type_info");
    }
    /**
     * {@snippet :
     * void g_flags_complete_type_info(GType g_flags_type, GTypeInfo* info, const GFlagsValue* const_values);
     * }
     */
    public static void g_flags_complete_type_info(long g_flags_type, MemorySegment info, MemorySegment const_values) {
        var mh$ = g_flags_complete_type_info$MH();
        try {
            mh$.invokeExact(g_flags_type, info, const_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unicode_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$449.g_unicode_type_get_type$MH,"g_unicode_type_get_type");
    }
    /**
     * {@snippet :
     * GType g_unicode_type_get_type();
     * }
     */
    public static long g_unicode_type_get_type() {
        var mh$ = g_unicode_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unicode_break_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$449.g_unicode_break_type_get_type$MH,"g_unicode_break_type_get_type");
    }
    /**
     * {@snippet :
     * GType g_unicode_break_type_get_type();
     * }
     */
    public static long g_unicode_break_type_get_type() {
        var mh$ = g_unicode_break_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unicode_script_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$450.g_unicode_script_get_type$MH,"g_unicode_script_get_type");
    }
    /**
     * {@snippet :
     * GType g_unicode_script_get_type();
     * }
     */
    public static long g_unicode_script_get_type() {
        var mh$ = g_unicode_script_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_normalize_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$450.g_normalize_mode_get_type$MH,"g_normalize_mode_get_type");
    }
    /**
     * {@snippet :
     * GType g_normalize_mode_get_type();
     * }
     */
    public static long g_normalize_mode_get_type() {
        var mh$ = g_normalize_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_char$MH() {
        return RuntimeHelper.requireNonNull(constants$450.g_param_spec_char$MH,"g_param_spec_char");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_char(const gchar* name, const gchar* nick, const gchar* blurb, gint8 minimum, gint8 maximum, gint8 default_value, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_char(MemorySegment name, MemorySegment nick, MemorySegment blurb, byte minimum, byte maximum, byte default_value, int flags) {
        var mh$ = g_param_spec_char$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_uchar$MH() {
        return RuntimeHelper.requireNonNull(constants$450.g_param_spec_uchar$MH,"g_param_spec_uchar");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_uchar(const gchar* name, const gchar* nick, const gchar* blurb, guint8 minimum, guint8 maximum, guint8 default_value, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_uchar(MemorySegment name, MemorySegment nick, MemorySegment blurb, byte minimum, byte maximum, byte default_value, int flags) {
        var mh$ = g_param_spec_uchar$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$450.g_param_spec_boolean$MH,"g_param_spec_boolean");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_boolean(const gchar* name, const gchar* nick, const gchar* blurb, gboolean default_value, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_boolean(MemorySegment name, MemorySegment nick, MemorySegment blurb, int default_value, int flags) {
        var mh$ = g_param_spec_boolean$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_int$MH() {
        return RuntimeHelper.requireNonNull(constants$450.g_param_spec_int$MH,"g_param_spec_int");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_int(const gchar* name, const gchar* nick, const gchar* blurb, gint minimum, gint maximum, gint default_value, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_int(MemorySegment name, MemorySegment nick, MemorySegment blurb, int minimum, int maximum, int default_value, int flags) {
        var mh$ = g_param_spec_int$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_uint$MH() {
        return RuntimeHelper.requireNonNull(constants$451.g_param_spec_uint$MH,"g_param_spec_uint");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_uint(const gchar* name, const gchar* nick, const gchar* blurb, guint minimum, guint maximum, guint default_value, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_uint(MemorySegment name, MemorySegment nick, MemorySegment blurb, int minimum, int maximum, int default_value, int flags) {
        var mh$ = g_param_spec_uint$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_long$MH() {
        return RuntimeHelper.requireNonNull(constants$451.g_param_spec_long$MH,"g_param_spec_long");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_long(const gchar* name, const gchar* nick, const gchar* blurb, glong minimum, glong maximum, glong default_value, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_long(MemorySegment name, MemorySegment nick, MemorySegment blurb, long minimum, long maximum, long default_value, int flags) {
        var mh$ = g_param_spec_long$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_ulong$MH() {
        return RuntimeHelper.requireNonNull(constants$451.g_param_spec_ulong$MH,"g_param_spec_ulong");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_ulong(const gchar* name, const gchar* nick, const gchar* blurb, gulong minimum, gulong maximum, gulong default_value, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_ulong(MemorySegment name, MemorySegment nick, MemorySegment blurb, long minimum, long maximum, long default_value, int flags) {
        var mh$ = g_param_spec_ulong$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$451.g_param_spec_int64$MH,"g_param_spec_int64");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_int64(const gchar* name, const gchar* nick, const gchar* blurb, gint64 minimum, gint64 maximum, gint64 default_value, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_int64(MemorySegment name, MemorySegment nick, MemorySegment blurb, long minimum, long maximum, long default_value, int flags) {
        var mh$ = g_param_spec_int64$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$451.g_param_spec_uint64$MH,"g_param_spec_uint64");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_uint64(const gchar* name, const gchar* nick, const gchar* blurb, guint64 minimum, guint64 maximum, guint64 default_value, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_uint64(MemorySegment name, MemorySegment nick, MemorySegment blurb, long minimum, long maximum, long default_value, int flags) {
        var mh$ = g_param_spec_uint64$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$451.g_param_spec_unichar$MH,"g_param_spec_unichar");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_unichar(const gchar* name, const gchar* nick, const gchar* blurb, gunichar default_value, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_unichar(MemorySegment name, MemorySegment nick, MemorySegment blurb, int default_value, int flags) {
        var mh$ = g_param_spec_unichar$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_enum$MH() {
        return RuntimeHelper.requireNonNull(constants$452.g_param_spec_enum$MH,"g_param_spec_enum");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_enum(const gchar* name, const gchar* nick, const gchar* blurb, GType enum_type, gint default_value, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_enum(MemorySegment name, MemorySegment nick, MemorySegment blurb, long enum_type, int default_value, int flags) {
        var mh$ = g_param_spec_enum$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, enum_type, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$452.g_param_spec_flags$MH,"g_param_spec_flags");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_flags(const gchar* name, const gchar* nick, const gchar* blurb, GType flags_type, guint default_value, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_flags(MemorySegment name, MemorySegment nick, MemorySegment blurb, long flags_type, int default_value, int flags) {
        var mh$ = g_param_spec_flags$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, flags_type, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_float$MH() {
        return RuntimeHelper.requireNonNull(constants$452.g_param_spec_float$MH,"g_param_spec_float");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_float(const gchar* name, const gchar* nick, const gchar* blurb, gfloat minimum, gfloat maximum, gfloat default_value, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_float(MemorySegment name, MemorySegment nick, MemorySegment blurb, float minimum, float maximum, float default_value, int flags) {
        var mh$ = g_param_spec_float$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_double$MH() {
        return RuntimeHelper.requireNonNull(constants$452.g_param_spec_double$MH,"g_param_spec_double");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_double(const gchar* name, const gchar* nick, const gchar* blurb, gdouble minimum, gdouble maximum, gdouble default_value, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_double(MemorySegment name, MemorySegment nick, MemorySegment blurb, double minimum, double maximum, double default_value, int flags) {
        var mh$ = g_param_spec_double$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_string$MH() {
        return RuntimeHelper.requireNonNull(constants$452.g_param_spec_string$MH,"g_param_spec_string");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_string(const gchar* name, const gchar* nick, const gchar* blurb, const gchar* default_value, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_string(MemorySegment name, MemorySegment nick, MemorySegment blurb, MemorySegment default_value, int flags) {
        var mh$ = g_param_spec_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_param$MH() {
        return RuntimeHelper.requireNonNull(constants$452.g_param_spec_param$MH,"g_param_spec_param");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_param(const gchar* name, const gchar* nick, const gchar* blurb, GType param_type, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_param(MemorySegment name, MemorySegment nick, MemorySegment blurb, long param_type, int flags) {
        var mh$ = g_param_spec_param$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, param_type, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$453.g_param_spec_boxed$MH,"g_param_spec_boxed");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_boxed(const gchar* name, const gchar* nick, const gchar* blurb, GType boxed_type, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_boxed(MemorySegment name, MemorySegment nick, MemorySegment blurb, long boxed_type, int flags) {
        var mh$ = g_param_spec_boxed$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, boxed_type, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$453.g_param_spec_pointer$MH,"g_param_spec_pointer");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_pointer(const gchar* name, const gchar* nick, const gchar* blurb, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_pointer(MemorySegment name, MemorySegment nick, MemorySegment blurb, int flags) {
        var mh$ = g_param_spec_pointer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_value_array$MH() {
        return RuntimeHelper.requireNonNull(constants$453.g_param_spec_value_array$MH,"g_param_spec_value_array");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_value_array(const gchar* name, const gchar* nick, const gchar* blurb, GParamSpec* element_spec, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_value_array(MemorySegment name, MemorySegment nick, MemorySegment blurb, MemorySegment element_spec, int flags) {
        var mh$ = g_param_spec_value_array$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, element_spec, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_object$MH() {
        return RuntimeHelper.requireNonNull(constants$453.g_param_spec_object$MH,"g_param_spec_object");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_object(const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_object(MemorySegment name, MemorySegment nick, MemorySegment blurb, long object_type, int flags) {
        var mh$ = g_param_spec_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, object_type, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_override$MH() {
        return RuntimeHelper.requireNonNull(constants$453.g_param_spec_override$MH,"g_param_spec_override");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_override(const gchar* name, GParamSpec* overridden);
     * }
     */
    public static MemorySegment g_param_spec_override(MemorySegment name, MemorySegment overridden) {
        var mh$ = g_param_spec_override$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, overridden);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_gtype$MH() {
        return RuntimeHelper.requireNonNull(constants$453.g_param_spec_gtype$MH,"g_param_spec_gtype");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_gtype(const gchar* name, const gchar* nick, const gchar* blurb, GType is_a_type, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_gtype(MemorySegment name, MemorySegment nick, MemorySegment blurb, long is_a_type, int flags) {
        var mh$ = g_param_spec_gtype$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, is_a_type, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$454.g_param_spec_variant$MH,"g_param_spec_variant");
    }
    /**
     * {@snippet :
     * GParamSpec* g_param_spec_variant(const gchar* name, const gchar* nick, const gchar* blurb, const GVariantType* type, GVariant* default_value, GParamFlags flags);
     * }
     */
    public static MemorySegment g_param_spec_variant(MemorySegment name, MemorySegment nick, MemorySegment blurb, MemorySegment type, MemorySegment default_value, int flags) {
        var mh$ = g_param_spec_variant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, nick, blurb, type, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout g_param_spec_types$LAYOUT() {
        return constants$454.g_param_spec_types$LAYOUT;
    }
    public static VarHandle g_param_spec_types$VH() {
        return constants$454.g_param_spec_types$VH;
    }
    public static MemorySegment g_param_spec_types$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$454.g_param_spec_types$SEGMENT,"g_param_spec_types");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * GType* g_param_spec_types;
     * }
     */
    public static MemorySegment g_param_spec_types$get() {
        return (java.lang.foreign.MemorySegment) constants$454.g_param_spec_types$VH.get(RuntimeHelper.requireNonNull(constants$454.g_param_spec_types$SEGMENT, "g_param_spec_types"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * GType* g_param_spec_types;
     * }
     */
    public static void g_param_spec_types$set(MemorySegment x) {
        constants$454.g_param_spec_types$VH.set(RuntimeHelper.requireNonNull(constants$454.g_param_spec_types$SEGMENT, "g_param_spec_types"), x);
    }
    public static MethodHandle g_signal_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$454.g_signal_group_get_type$MH,"g_signal_group_get_type");
    }
    /**
     * {@snippet :
     * GType g_signal_group_get_type();
     * }
     */
    public static long g_signal_group_get_type() {
        var mh$ = g_signal_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_new$MH() {
        return RuntimeHelper.requireNonNull(constants$454.g_signal_group_new$MH,"g_signal_group_new");
    }
    /**
     * {@snippet :
     * GSignalGroup* g_signal_group_new(GType target_type);
     * }
     */
    public static MemorySegment g_signal_group_new(long target_type) {
        var mh$ = g_signal_group_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(target_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_set_target$MH() {
        return RuntimeHelper.requireNonNull(constants$454.g_signal_group_set_target$MH,"g_signal_group_set_target");
    }
    /**
     * {@snippet :
     * void g_signal_group_set_target(GSignalGroup* self, gpointer target);
     * }
     */
    public static void g_signal_group_set_target(MemorySegment self, MemorySegment target) {
        var mh$ = g_signal_group_set_target$MH();
        try {
            mh$.invokeExact(self, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_dup_target$MH() {
        return RuntimeHelper.requireNonNull(constants$454.g_signal_group_dup_target$MH,"g_signal_group_dup_target");
    }
    /**
     * {@snippet :
     * gpointer g_signal_group_dup_target(GSignalGroup* self);
     * }
     */
    public static MemorySegment g_signal_group_dup_target(MemorySegment self) {
        var mh$ = g_signal_group_dup_target$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_block$MH() {
        return RuntimeHelper.requireNonNull(constants$455.g_signal_group_block$MH,"g_signal_group_block");
    }
    /**
     * {@snippet :
     * void g_signal_group_block(GSignalGroup* self);
     * }
     */
    public static void g_signal_group_block(MemorySegment self) {
        var mh$ = g_signal_group_block$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_unblock$MH() {
        return RuntimeHelper.requireNonNull(constants$455.g_signal_group_unblock$MH,"g_signal_group_unblock");
    }
    /**
     * {@snippet :
     * void g_signal_group_unblock(GSignalGroup* self);
     * }
     */
    public static void g_signal_group_unblock(MemorySegment self) {
        var mh$ = g_signal_group_unblock$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_connect_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$455.g_signal_group_connect_closure$MH,"g_signal_group_connect_closure");
    }
    /**
     * {@snippet :
     * void g_signal_group_connect_closure(GSignalGroup* self, const gchar* detailed_signal, GClosure* closure, gboolean after);
     * }
     */
    public static void g_signal_group_connect_closure(MemorySegment self, MemorySegment detailed_signal, MemorySegment closure, int after) {
        var mh$ = g_signal_group_connect_closure$MH();
        try {
            mh$.invokeExact(self, detailed_signal, closure, after);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_connect_object$MH() {
        return RuntimeHelper.requireNonNull(constants$455.g_signal_group_connect_object$MH,"g_signal_group_connect_object");
    }
    /**
     * {@snippet :
     * void g_signal_group_connect_object(GSignalGroup* self, const gchar* detailed_signal, GCallback c_handler, gpointer object, GConnectFlags flags);
     * }
     */
    public static void g_signal_group_connect_object(MemorySegment self, MemorySegment detailed_signal, MemorySegment c_handler, MemorySegment object, int flags) {
        var mh$ = g_signal_group_connect_object$MH();
        try {
            mh$.invokeExact(self, detailed_signal, c_handler, object, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_connect_data$MH() {
        return RuntimeHelper.requireNonNull(constants$455.g_signal_group_connect_data$MH,"g_signal_group_connect_data");
    }
    /**
     * {@snippet :
     * void g_signal_group_connect_data(GSignalGroup* self, const gchar* detailed_signal, GCallback c_handler, gpointer data, GClosureNotify notify, GConnectFlags flags);
     * }
     */
    public static void g_signal_group_connect_data(MemorySegment self, MemorySegment detailed_signal, MemorySegment c_handler, MemorySegment data, MemorySegment notify, int flags) {
        var mh$ = g_signal_group_connect_data$MH();
        try {
            mh$.invokeExact(self, detailed_signal, c_handler, data, notify, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$455.g_signal_group_connect$MH,"g_signal_group_connect");
    }
    /**
     * {@snippet :
     * void g_signal_group_connect(GSignalGroup* self, const gchar* detailed_signal, GCallback c_handler, gpointer data);
     * }
     */
    public static void g_signal_group_connect(MemorySegment self, MemorySegment detailed_signal, MemorySegment c_handler, MemorySegment data) {
        var mh$ = g_signal_group_connect$MH();
        try {
            mh$.invokeExact(self, detailed_signal, c_handler, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_connect_after$MH() {
        return RuntimeHelper.requireNonNull(constants$456.g_signal_group_connect_after$MH,"g_signal_group_connect_after");
    }
    /**
     * {@snippet :
     * void g_signal_group_connect_after(GSignalGroup* self, const gchar* detailed_signal, GCallback c_handler, gpointer data);
     * }
     */
    public static void g_signal_group_connect_after(MemorySegment self, MemorySegment detailed_signal, MemorySegment c_handler, MemorySegment data) {
        var mh$ = g_signal_group_connect_after$MH();
        try {
            mh$.invokeExact(self, detailed_signal, c_handler, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_connect_swapped$MH() {
        return RuntimeHelper.requireNonNull(constants$456.g_signal_group_connect_swapped$MH,"g_signal_group_connect_swapped");
    }
    /**
     * {@snippet :
     * void g_signal_group_connect_swapped(GSignalGroup* self, const gchar* detailed_signal, GCallback c_handler, gpointer data);
     * }
     */
    public static void g_signal_group_connect_swapped(MemorySegment self, MemorySegment detailed_signal, MemorySegment c_handler, MemorySegment data) {
        var mh$ = g_signal_group_connect_swapped$MH();
        try {
            mh$.invokeExact(self, detailed_signal, c_handler, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$456.g_source_set_closure$MH,"g_source_set_closure");
    }
    /**
     * {@snippet :
     * void g_source_set_closure(GSource* source, GClosure* closure);
     * }
     */
    public static void g_source_set_closure(MemorySegment source, MemorySegment closure) {
        var mh$ = g_source_set_closure$MH();
        try {
            mh$.invokeExact(source, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_dummy_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$456.g_source_set_dummy_callback$MH,"g_source_set_dummy_callback");
    }
    /**
     * {@snippet :
     * void g_source_set_dummy_callback(GSource* source);
     * }
     */
    public static void g_source_set_dummy_callback(MemorySegment source) {
        var mh$ = g_source_set_dummy_callback$MH();
        try {
            mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GTypeModule* GTypeModule_autoptr;
     * }
     */
    public static final OfAddress GTypeModule_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GTypeModule_listautoptr;
     * }
     */
    public static final OfAddress GTypeModule_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GTypeModule_slistautoptr;
     * }
     */
    public static final OfAddress GTypeModule_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTypeModule_queueautoptr;
     * }
     */
    public static final OfAddress GTypeModule_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle g_type_module_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$456.g_type_module_get_type$MH,"g_type_module_get_type");
    }
    /**
     * {@snippet :
     * GType g_type_module_get_type();
     * }
     */
    public static long g_type_module_get_type() {
        var mh$ = g_type_module_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_use$MH() {
        return RuntimeHelper.requireNonNull(constants$456.g_type_module_use$MH,"g_type_module_use");
    }
    /**
     * {@snippet :
     * gboolean g_type_module_use(GTypeModule* module);
     * }
     */
    public static int g_type_module_use(MemorySegment module) {
        var mh$ = g_type_module_use$MH();
        try {
            return (int)mh$.invokeExact(module);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_unuse$MH() {
        return RuntimeHelper.requireNonNull(constants$457.g_type_module_unuse$MH,"g_type_module_unuse");
    }
    /**
     * {@snippet :
     * void g_type_module_unuse(GTypeModule* module);
     * }
     */
    public static void g_type_module_unuse(MemorySegment module) {
        var mh$ = g_type_module_unuse$MH();
        try {
            mh$.invokeExact(module);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$457.g_type_module_set_name$MH,"g_type_module_set_name");
    }
    /**
     * {@snippet :
     * void g_type_module_set_name(GTypeModule* module, const gchar* name);
     * }
     */
    public static void g_type_module_set_name(MemorySegment module, MemorySegment name) {
        var mh$ = g_type_module_set_name$MH();
        try {
            mh$.invokeExact(module, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_register_type$MH() {
        return RuntimeHelper.requireNonNull(constants$457.g_type_module_register_type$MH,"g_type_module_register_type");
    }
    /**
     * {@snippet :
     * GType g_type_module_register_type(GTypeModule* module, GType parent_type, const gchar* type_name, const GTypeInfo* type_info, GTypeFlags flags);
     * }
     */
    public static long g_type_module_register_type(MemorySegment module, long parent_type, MemorySegment type_name, MemorySegment type_info, int flags) {
        var mh$ = g_type_module_register_type$MH();
        try {
            return (long)mh$.invokeExact(module, parent_type, type_name, type_info, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_add_interface$MH() {
        return RuntimeHelper.requireNonNull(constants$457.g_type_module_add_interface$MH,"g_type_module_add_interface");
    }
    /**
     * {@snippet :
     * void g_type_module_add_interface(GTypeModule* module, GType instance_type, GType interface_type, const GInterfaceInfo* interface_info);
     * }
     */
    public static void g_type_module_add_interface(MemorySegment module, long instance_type, long interface_type, MemorySegment interface_info) {
        var mh$ = g_type_module_add_interface$MH();
        try {
            mh$.invokeExact(module, instance_type, interface_type, interface_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_register_enum$MH() {
        return RuntimeHelper.requireNonNull(constants$457.g_type_module_register_enum$MH,"g_type_module_register_enum");
    }
    /**
     * {@snippet :
     * GType g_type_module_register_enum(GTypeModule* module, const gchar* name, const GEnumValue* const_static_values);
     * }
     */
    public static long g_type_module_register_enum(MemorySegment module, MemorySegment name, MemorySegment const_static_values) {
        var mh$ = g_type_module_register_enum$MH();
        try {
            return (long)mh$.invokeExact(module, name, const_static_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_register_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$457.g_type_module_register_flags$MH,"g_type_module_register_flags");
    }
    /**
     * {@snippet :
     * GType g_type_module_register_flags(GTypeModule* module, const gchar* name, const GFlagsValue* const_static_values);
     * }
     */
    public static long g_type_module_register_flags(MemorySegment module, MemorySegment name, MemorySegment const_static_values) {
        var mh$ = g_type_module_register_flags$MH();
        try {
            return (long)mh$.invokeExact(module, name, const_static_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_plugin_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$459.g_type_plugin_get_type$MH,"g_type_plugin_get_type");
    }
    /**
     * {@snippet :
     * GType g_type_plugin_get_type();
     * }
     */
    public static long g_type_plugin_get_type() {
        var mh$ = g_type_plugin_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_plugin_use$MH() {
        return RuntimeHelper.requireNonNull(constants$459.g_type_plugin_use$MH,"g_type_plugin_use");
    }
    /**
     * {@snippet :
     * void g_type_plugin_use(GTypePlugin* plugin);
     * }
     */
    public static void g_type_plugin_use(MemorySegment plugin) {
        var mh$ = g_type_plugin_use$MH();
        try {
            mh$.invokeExact(plugin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_plugin_unuse$MH() {
        return RuntimeHelper.requireNonNull(constants$459.g_type_plugin_unuse$MH,"g_type_plugin_unuse");
    }
    /**
     * {@snippet :
     * void g_type_plugin_unuse(GTypePlugin* plugin);
     * }
     */
    public static void g_type_plugin_unuse(MemorySegment plugin) {
        var mh$ = g_type_plugin_unuse$MH();
        try {
            mh$.invokeExact(plugin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_plugin_complete_type_info$MH() {
        return RuntimeHelper.requireNonNull(constants$459.g_type_plugin_complete_type_info$MH,"g_type_plugin_complete_type_info");
    }
    /**
     * {@snippet :
     * void g_type_plugin_complete_type_info(GTypePlugin* plugin, GType g_type, GTypeInfo* info, GTypeValueTable* value_table);
     * }
     */
    public static void g_type_plugin_complete_type_info(MemorySegment plugin, long g_type, MemorySegment info, MemorySegment value_table) {
        var mh$ = g_type_plugin_complete_type_info$MH();
        try {
            mh$.invokeExact(plugin, g_type, info, value_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_plugin_complete_interface_info$MH() {
        return RuntimeHelper.requireNonNull(constants$460.g_type_plugin_complete_interface_info$MH,"g_type_plugin_complete_interface_info");
    }
    /**
     * {@snippet :
     * void g_type_plugin_complete_interface_info(GTypePlugin* plugin, GType instance_type, GType interface_type, GInterfaceInfo* info);
     * }
     */
    public static void g_type_plugin_complete_interface_info(MemorySegment plugin, long instance_type, long interface_type, MemorySegment info) {
        var mh$ = g_type_plugin_complete_interface_info$MH();
        try {
            mh$.invokeExact(plugin, instance_type, interface_type, info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$460.g_value_array_get_type$MH,"g_value_array_get_type");
    }
    /**
     * {@snippet :
     * GType g_value_array_get_type();
     * }
     */
    public static long g_value_array_get_type() {
        var mh$ = g_value_array_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_get_nth$MH() {
        return RuntimeHelper.requireNonNull(constants$460.g_value_array_get_nth$MH,"g_value_array_get_nth");
    }
    /**
     * {@snippet :
     * GValue* g_value_array_get_nth(GValueArray* value_array, guint index_);
     * }
     */
    public static MemorySegment g_value_array_get_nth(MemorySegment value_array, int index_) {
        var mh$ = g_value_array_get_nth$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_array, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_new$MH() {
        return RuntimeHelper.requireNonNull(constants$460.g_value_array_new$MH,"g_value_array_new");
    }
    /**
     * {@snippet :
     * GValueArray* g_value_array_new(guint n_prealloced);
     * }
     */
    public static MemorySegment g_value_array_new(int n_prealloced) {
        var mh$ = g_value_array_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(n_prealloced);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_free$MH() {
        return RuntimeHelper.requireNonNull(constants$460.g_value_array_free$MH,"g_value_array_free");
    }
    /**
     * {@snippet :
     * void g_value_array_free(GValueArray* value_array);
     * }
     */
    public static void g_value_array_free(MemorySegment value_array) {
        var mh$ = g_value_array_free$MH();
        try {
            mh$.invokeExact(value_array);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$460.g_value_array_copy$MH,"g_value_array_copy");
    }
    /**
     * {@snippet :
     * GValueArray* g_value_array_copy(const GValueArray* value_array);
     * }
     */
    public static MemorySegment g_value_array_copy(MemorySegment value_array) {
        var mh$ = g_value_array_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_array);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$461.g_value_array_prepend$MH,"g_value_array_prepend");
    }
    /**
     * {@snippet :
     * GValueArray* g_value_array_prepend(GValueArray* value_array, const GValue* value);
     * }
     */
    public static MemorySegment g_value_array_prepend(MemorySegment value_array, MemorySegment value) {
        var mh$ = g_value_array_prepend$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_array, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_append$MH() {
        return RuntimeHelper.requireNonNull(constants$461.g_value_array_append$MH,"g_value_array_append");
    }
    /**
     * {@snippet :
     * GValueArray* g_value_array_append(GValueArray* value_array, const GValue* value);
     * }
     */
    public static MemorySegment g_value_array_append(MemorySegment value_array, MemorySegment value) {
        var mh$ = g_value_array_append$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_array, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$461.g_value_array_insert$MH,"g_value_array_insert");
    }
    /**
     * {@snippet :
     * GValueArray* g_value_array_insert(GValueArray* value_array, guint index_, const GValue* value);
     * }
     */
    public static MemorySegment g_value_array_insert(MemorySegment value_array, int index_, MemorySegment value) {
        var mh$ = g_value_array_insert$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_array, index_, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$461.g_value_array_remove$MH,"g_value_array_remove");
    }
    /**
     * {@snippet :
     * GValueArray* g_value_array_remove(GValueArray* value_array, guint index_);
     * }
     */
    public static MemorySegment g_value_array_remove(MemorySegment value_array, int index_) {
        var mh$ = g_value_array_remove$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_array, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$461.g_value_array_sort$MH,"g_value_array_sort");
    }
    /**
     * {@snippet :
     * GValueArray* g_value_array_sort(GValueArray* value_array, GCompareFunc compare_func);
     * }
     */
    public static MemorySegment g_value_array_sort(MemorySegment value_array, MemorySegment compare_func) {
        var mh$ = g_value_array_sort$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_array, compare_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_sort_with_data$MH() {
        return RuntimeHelper.requireNonNull(constants$461.g_value_array_sort_with_data$MH,"g_value_array_sort_with_data");
    }
    /**
     * {@snippet :
     * GValueArray* g_value_array_sort_with_data(GValueArray* value_array, GCompareDataFunc compare_func, gpointer user_data);
     * }
     */
    public static MemorySegment g_value_array_sort_with_data(MemorySegment value_array, MemorySegment compare_func, MemorySegment user_data) {
        var mh$ = g_value_array_sort_with_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value_array, compare_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_char$MH() {
        return RuntimeHelper.requireNonNull(constants$462.g_value_set_char$MH,"g_value_set_char");
    }
    /**
     * {@snippet :
     * void g_value_set_char(GValue* value, gchar v_char);
     * }
     */
    public static void g_value_set_char(MemorySegment value, byte v_char) {
        var mh$ = g_value_set_char$MH();
        try {
            mh$.invokeExact(value, v_char);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_char$MH() {
        return RuntimeHelper.requireNonNull(constants$462.g_value_get_char$MH,"g_value_get_char");
    }
    /**
     * {@snippet :
     * gchar g_value_get_char(const GValue* value);
     * }
     */
    public static byte g_value_get_char(MemorySegment value) {
        var mh$ = g_value_get_char$MH();
        try {
            return (byte)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_schar$MH() {
        return RuntimeHelper.requireNonNull(constants$462.g_value_set_schar$MH,"g_value_set_schar");
    }
    /**
     * {@snippet :
     * void g_value_set_schar(GValue* value, gint8 v_char);
     * }
     */
    public static void g_value_set_schar(MemorySegment value, byte v_char) {
        var mh$ = g_value_set_schar$MH();
        try {
            mh$.invokeExact(value, v_char);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_schar$MH() {
        return RuntimeHelper.requireNonNull(constants$462.g_value_get_schar$MH,"g_value_get_schar");
    }
    /**
     * {@snippet :
     * gint8 g_value_get_schar(const GValue* value);
     * }
     */
    public static byte g_value_get_schar(MemorySegment value) {
        var mh$ = g_value_get_schar$MH();
        try {
            return (byte)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_uchar$MH() {
        return RuntimeHelper.requireNonNull(constants$462.g_value_set_uchar$MH,"g_value_set_uchar");
    }
    /**
     * {@snippet :
     * void g_value_set_uchar(GValue* value, guchar v_uchar);
     * }
     */
    public static void g_value_set_uchar(MemorySegment value, byte v_uchar) {
        var mh$ = g_value_set_uchar$MH();
        try {
            mh$.invokeExact(value, v_uchar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_uchar$MH() {
        return RuntimeHelper.requireNonNull(constants$462.g_value_get_uchar$MH,"g_value_get_uchar");
    }
    /**
     * {@snippet :
     * guchar g_value_get_uchar(const GValue* value);
     * }
     */
    public static byte g_value_get_uchar(MemorySegment value) {
        var mh$ = g_value_get_uchar$MH();
        try {
            return (byte)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$463.g_value_set_boolean$MH,"g_value_set_boolean");
    }
    /**
     * {@snippet :
     * void g_value_set_boolean(GValue* value, gboolean v_boolean);
     * }
     */
    public static void g_value_set_boolean(MemorySegment value, int v_boolean) {
        var mh$ = g_value_set_boolean$MH();
        try {
            mh$.invokeExact(value, v_boolean);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$463.g_value_get_boolean$MH,"g_value_get_boolean");
    }
    /**
     * {@snippet :
     * gboolean g_value_get_boolean(const GValue* value);
     * }
     */
    public static int g_value_get_boolean(MemorySegment value) {
        var mh$ = g_value_get_boolean$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_int$MH() {
        return RuntimeHelper.requireNonNull(constants$463.g_value_set_int$MH,"g_value_set_int");
    }
    /**
     * {@snippet :
     * void g_value_set_int(GValue* value, gint v_int);
     * }
     */
    public static void g_value_set_int(MemorySegment value, int v_int) {
        var mh$ = g_value_set_int$MH();
        try {
            mh$.invokeExact(value, v_int);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_int$MH() {
        return RuntimeHelper.requireNonNull(constants$463.g_value_get_int$MH,"g_value_get_int");
    }
    /**
     * {@snippet :
     * gint g_value_get_int(const GValue* value);
     * }
     */
    public static int g_value_get_int(MemorySegment value) {
        var mh$ = g_value_get_int$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_uint$MH() {
        return RuntimeHelper.requireNonNull(constants$463.g_value_set_uint$MH,"g_value_set_uint");
    }
    /**
     * {@snippet :
     * void g_value_set_uint(GValue* value, guint v_uint);
     * }
     */
    public static void g_value_set_uint(MemorySegment value, int v_uint) {
        var mh$ = g_value_set_uint$MH();
        try {
            mh$.invokeExact(value, v_uint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_uint$MH() {
        return RuntimeHelper.requireNonNull(constants$463.g_value_get_uint$MH,"g_value_get_uint");
    }
    /**
     * {@snippet :
     * guint g_value_get_uint(const GValue* value);
     * }
     */
    public static int g_value_get_uint(MemorySegment value) {
        var mh$ = g_value_get_uint$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_long$MH() {
        return RuntimeHelper.requireNonNull(constants$464.g_value_set_long$MH,"g_value_set_long");
    }
    /**
     * {@snippet :
     * void g_value_set_long(GValue* value, glong v_long);
     * }
     */
    public static void g_value_set_long(MemorySegment value, long v_long) {
        var mh$ = g_value_set_long$MH();
        try {
            mh$.invokeExact(value, v_long);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_long$MH() {
        return RuntimeHelper.requireNonNull(constants$464.g_value_get_long$MH,"g_value_get_long");
    }
    /**
     * {@snippet :
     * glong g_value_get_long(const GValue* value);
     * }
     */
    public static long g_value_get_long(MemorySegment value) {
        var mh$ = g_value_get_long$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_ulong$MH() {
        return RuntimeHelper.requireNonNull(constants$464.g_value_set_ulong$MH,"g_value_set_ulong");
    }
    /**
     * {@snippet :
     * void g_value_set_ulong(GValue* value, gulong v_ulong);
     * }
     */
    public static void g_value_set_ulong(MemorySegment value, long v_ulong) {
        var mh$ = g_value_set_ulong$MH();
        try {
            mh$.invokeExact(value, v_ulong);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_ulong$MH() {
        return RuntimeHelper.requireNonNull(constants$464.g_value_get_ulong$MH,"g_value_get_ulong");
    }
    /**
     * {@snippet :
     * gulong g_value_get_ulong(const GValue* value);
     * }
     */
    public static long g_value_get_ulong(MemorySegment value) {
        var mh$ = g_value_get_ulong$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$464.g_value_set_int64$MH,"g_value_set_int64");
    }
    /**
     * {@snippet :
     * void g_value_set_int64(GValue* value, gint64 v_int64);
     * }
     */
    public static void g_value_set_int64(MemorySegment value, long v_int64) {
        var mh$ = g_value_set_int64$MH();
        try {
            mh$.invokeExact(value, v_int64);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$464.g_value_get_int64$MH,"g_value_get_int64");
    }
    /**
     * {@snippet :
     * gint64 g_value_get_int64(const GValue* value);
     * }
     */
    public static long g_value_get_int64(MemorySegment value) {
        var mh$ = g_value_get_int64$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$465.g_value_set_uint64$MH,"g_value_set_uint64");
    }
    /**
     * {@snippet :
     * void g_value_set_uint64(GValue* value, guint64 v_uint64);
     * }
     */
    public static void g_value_set_uint64(MemorySegment value, long v_uint64) {
        var mh$ = g_value_set_uint64$MH();
        try {
            mh$.invokeExact(value, v_uint64);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$465.g_value_get_uint64$MH,"g_value_get_uint64");
    }
    /**
     * {@snippet :
     * guint64 g_value_get_uint64(const GValue* value);
     * }
     */
    public static long g_value_get_uint64(MemorySegment value) {
        var mh$ = g_value_get_uint64$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_float$MH() {
        return RuntimeHelper.requireNonNull(constants$465.g_value_set_float$MH,"g_value_set_float");
    }
    /**
     * {@snippet :
     * void g_value_set_float(GValue* value, gfloat v_float);
     * }
     */
    public static void g_value_set_float(MemorySegment value, float v_float) {
        var mh$ = g_value_set_float$MH();
        try {
            mh$.invokeExact(value, v_float);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_float$MH() {
        return RuntimeHelper.requireNonNull(constants$465.g_value_get_float$MH,"g_value_get_float");
    }
    /**
     * {@snippet :
     * gfloat g_value_get_float(const GValue* value);
     * }
     */
    public static float g_value_get_float(MemorySegment value) {
        var mh$ = g_value_get_float$MH();
        try {
            return (float)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_double$MH() {
        return RuntimeHelper.requireNonNull(constants$465.g_value_set_double$MH,"g_value_set_double");
    }
    /**
     * {@snippet :
     * void g_value_set_double(GValue* value, gdouble v_double);
     * }
     */
    public static void g_value_set_double(MemorySegment value, double v_double) {
        var mh$ = g_value_set_double$MH();
        try {
            mh$.invokeExact(value, v_double);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_double$MH() {
        return RuntimeHelper.requireNonNull(constants$465.g_value_get_double$MH,"g_value_get_double");
    }
    /**
     * {@snippet :
     * gdouble g_value_get_double(const GValue* value);
     * }
     */
    public static double g_value_get_double(MemorySegment value) {
        var mh$ = g_value_get_double$MH();
        try {
            return (double)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_string$MH() {
        return RuntimeHelper.requireNonNull(constants$466.g_value_set_string$MH,"g_value_set_string");
    }
    /**
     * {@snippet :
     * void g_value_set_string(GValue* value, const gchar* v_string);
     * }
     */
    public static void g_value_set_string(MemorySegment value, MemorySegment v_string) {
        var mh$ = g_value_set_string$MH();
        try {
            mh$.invokeExact(value, v_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_static_string$MH() {
        return RuntimeHelper.requireNonNull(constants$466.g_value_set_static_string$MH,"g_value_set_static_string");
    }
    /**
     * {@snippet :
     * void g_value_set_static_string(GValue* value, const gchar* v_string);
     * }
     */
    public static void g_value_set_static_string(MemorySegment value, MemorySegment v_string) {
        var mh$ = g_value_set_static_string$MH();
        try {
            mh$.invokeExact(value, v_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_interned_string$MH() {
        return RuntimeHelper.requireNonNull(constants$466.g_value_set_interned_string$MH,"g_value_set_interned_string");
    }
    /**
     * {@snippet :
     * void g_value_set_interned_string(GValue* value, const gchar* v_string);
     * }
     */
    public static void g_value_set_interned_string(MemorySegment value, MemorySegment v_string) {
        var mh$ = g_value_set_interned_string$MH();
        try {
            mh$.invokeExact(value, v_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_string$MH() {
        return RuntimeHelper.requireNonNull(constants$466.g_value_get_string$MH,"g_value_get_string");
    }
    /**
     * {@snippet :
     * const gchar* g_value_get_string(const GValue* value);
     * }
     */
    public static MemorySegment g_value_get_string(MemorySegment value) {
        var mh$ = g_value_get_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_dup_string$MH() {
        return RuntimeHelper.requireNonNull(constants$466.g_value_dup_string$MH,"g_value_dup_string");
    }
    /**
     * {@snippet :
     * gchar* g_value_dup_string(const GValue* value);
     * }
     */
    public static MemorySegment g_value_dup_string(MemorySegment value) {
        var mh$ = g_value_dup_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$466.g_value_set_pointer$MH,"g_value_set_pointer");
    }
    /**
     * {@snippet :
     * void g_value_set_pointer(GValue* value, gpointer v_pointer);
     * }
     */
    public static void g_value_set_pointer(MemorySegment value, MemorySegment v_pointer) {
        var mh$ = g_value_set_pointer$MH();
        try {
            mh$.invokeExact(value, v_pointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$467.g_value_get_pointer$MH,"g_value_get_pointer");
    }
    /**
     * {@snippet :
     * gpointer g_value_get_pointer(const GValue* value);
     * }
     */
    public static MemorySegment g_value_get_pointer(MemorySegment value) {
        var mh$ = g_value_get_pointer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_gtype_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$467.g_gtype_get_type$MH,"g_gtype_get_type");
    }
    /**
     * {@snippet :
     * GType g_gtype_get_type();
     * }
     */
    public static long g_gtype_get_type() {
        var mh$ = g_gtype_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_gtype$MH() {
        return RuntimeHelper.requireNonNull(constants$467.g_value_set_gtype$MH,"g_value_set_gtype");
    }
    /**
     * {@snippet :
     * void g_value_set_gtype(GValue* value, GType v_gtype);
     * }
     */
    public static void g_value_set_gtype(MemorySegment value, long v_gtype) {
        var mh$ = g_value_set_gtype$MH();
        try {
            mh$.invokeExact(value, v_gtype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_gtype$MH() {
        return RuntimeHelper.requireNonNull(constants$467.g_value_get_gtype$MH,"g_value_get_gtype");
    }
    /**
     * {@snippet :
     * GType g_value_get_gtype(const GValue* value);
     * }
     */
    public static long g_value_get_gtype(MemorySegment value) {
        var mh$ = g_value_get_gtype$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$467.g_value_set_variant$MH,"g_value_set_variant");
    }
    /**
     * {@snippet :
     * void g_value_set_variant(GValue* value, GVariant* variant);
     * }
     */
    public static void g_value_set_variant(MemorySegment value, MemorySegment variant) {
        var mh$ = g_value_set_variant$MH();
        try {
            mh$.invokeExact(value, variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_take_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$467.g_value_take_variant$MH,"g_value_take_variant");
    }
    /**
     * {@snippet :
     * void g_value_take_variant(GValue* value, GVariant* variant);
     * }
     */
    public static void g_value_take_variant(MemorySegment value, MemorySegment variant) {
        var mh$ = g_value_take_variant$MH();
        try {
            mh$.invokeExact(value, variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$468.g_value_get_variant$MH,"g_value_get_variant");
    }
    /**
     * {@snippet :
     * GVariant* g_value_get_variant(const GValue* value);
     * }
     */
    public static MemorySegment g_value_get_variant(MemorySegment value) {
        var mh$ = g_value_get_variant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_dup_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$468.g_value_dup_variant$MH,"g_value_dup_variant");
    }
    /**
     * {@snippet :
     * GVariant* g_value_dup_variant(const GValue* value);
     * }
     */
    public static MemorySegment g_value_dup_variant(MemorySegment value) {
        var mh$ = g_value_dup_variant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pointer_type_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$468.g_pointer_type_register_static$MH,"g_pointer_type_register_static");
    }
    /**
     * {@snippet :
     * GType g_pointer_type_register_static(const gchar* name);
     * }
     */
    public static long g_pointer_type_register_static(MemorySegment name) {
        var mh$ = g_pointer_type_register_static$MH();
        try {
            return (long)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strdup_value_contents$MH() {
        return RuntimeHelper.requireNonNull(constants$468.g_strdup_value_contents$MH,"g_strdup_value_contents");
    }
    /**
     * {@snippet :
     * gchar* g_strdup_value_contents(const GValue* value);
     * }
     */
    public static MemorySegment g_strdup_value_contents(MemorySegment value) {
        var mh$ = g_strdup_value_contents$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_take_string$MH() {
        return RuntimeHelper.requireNonNull(constants$468.g_value_take_string$MH,"g_value_take_string");
    }
    /**
     * {@snippet :
     * void g_value_take_string(GValue* value, gchar* v_string);
     * }
     */
    public static void g_value_take_string(MemorySegment value, MemorySegment v_string) {
        var mh$ = g_value_take_string$MH();
        try {
            mh$.invokeExact(value, v_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_string_take_ownership$MH() {
        return RuntimeHelper.requireNonNull(constants$468.g_value_set_string_take_ownership$MH,"g_value_set_string_take_ownership");
    }
    /**
     * {@snippet :
     * void g_value_set_string_take_ownership(GValue* value, gchar* v_string);
     * }
     */
    public static void g_value_set_string_take_ownership(MemorySegment value, MemorySegment v_string) {
        var mh$ = g_value_set_string_take_ownership$MH();
        try {
            mh$.invokeExact(value, v_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef char* gchararray;
     * }
     */
    public static final OfAddress gchararray = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GClosure* GClosure_autoptr;
     * }
     */
    public static final OfAddress GClosure_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GClosure_listautoptr;
     * }
     */
    public static final OfAddress GClosure_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GClosure_slistautoptr;
     * }
     */
    public static final OfAddress GClosure_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GClosure_queueautoptr;
     * }
     */
    public static final OfAddress GClosure_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GEnumClass* GEnumClass_autoptr;
     * }
     */
    public static final OfAddress GEnumClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GEnumClass_listautoptr;
     * }
     */
    public static final OfAddress GEnumClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GEnumClass_slistautoptr;
     * }
     */
    public static final OfAddress GEnumClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GEnumClass_queueautoptr;
     * }
     */
    public static final OfAddress GEnumClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GFlagsClass* GFlagsClass_autoptr;
     * }
     */
    public static final OfAddress GFlagsClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GFlagsClass_listautoptr;
     * }
     */
    public static final OfAddress GFlagsClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GFlagsClass_slistautoptr;
     * }
     */
    public static final OfAddress GFlagsClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFlagsClass_queueautoptr;
     * }
     */
    public static final OfAddress GFlagsClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GObject* GObject_autoptr;
     * }
     */
    public static final OfAddress GObject_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GObject_listautoptr;
     * }
     */
    public static final OfAddress GObject_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GObject_slistautoptr;
     * }
     */
    public static final OfAddress GObject_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GObject_queueautoptr;
     * }
     */
    public static final OfAddress GObject_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GObject* GInitiallyUnowned_autoptr;
     * }
     */
    public static final OfAddress GInitiallyUnowned_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GInitiallyUnowned_listautoptr;
     * }
     */
    public static final OfAddress GInitiallyUnowned_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GInitiallyUnowned_slistautoptr;
     * }
     */
    public static final OfAddress GInitiallyUnowned_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GInitiallyUnowned_queueautoptr;
     * }
     */
    public static final OfAddress GInitiallyUnowned_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GParamSpec* GParamSpec_autoptr;
     * }
     */
    public static final OfAddress GParamSpec_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GParamSpec_listautoptr;
     * }
     */
    public static final OfAddress GParamSpec_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GParamSpec_slistautoptr;
     * }
     */
    public static final OfAddress GParamSpec_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GParamSpec_queueautoptr;
     * }
     */
    public static final OfAddress GParamSpec_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GTypeClass* GTypeClass_autoptr;
     * }
     */
    public static final OfAddress GTypeClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GTypeClass_listautoptr;
     * }
     */
    public static final OfAddress GTypeClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GTypeClass_slistautoptr;
     * }
     */
    public static final OfAddress GTypeClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTypeClass_queueautoptr;
     * }
     */
    public static final OfAddress GTypeClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum .G_APP_INFO_CREATE_NONE = 0;
     * }
     */
    public static int G_APP_INFO_CREATE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_APP_INFO_CREATE_NEEDS_TERMINAL = 1;
     * }
     */
    public static int G_APP_INFO_CREATE_NEEDS_TERMINAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_APP_INFO_CREATE_SUPPORTS_URIS = 2;
     * }
     */
    public static int G_APP_INFO_CREATE_SUPPORTS_URIS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION = 4;
     * }
     */
    public static int G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_CONVERTER_NO_FLAGS = 0;
     * }
     */
    public static int G_CONVERTER_NO_FLAGS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_CONVERTER_INPUT_AT_END = 1;
     * }
     */
    public static int G_CONVERTER_INPUT_AT_END() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_CONVERTER_FLUSH = 2;
     * }
     */
    public static int G_CONVERTER_FLUSH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_CONVERTER_ERROR = 0;
     * }
     */
    public static int G_CONVERTER_ERROR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_CONVERTER_CONVERTED = 1;
     * }
     */
    public static int G_CONVERTER_CONVERTED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_CONVERTER_FINISHED = 2;
     * }
     */
    public static int G_CONVERTER_FINISHED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_CONVERTER_FLUSHED = 3;
     * }
     */
    public static int G_CONVERTER_FLUSHED() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN = 0;
     * }
     */
    public static int G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN = 1;
     * }
     */
    public static int G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN = 2;
     * }
     */
    public static int G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_DATA_STREAM_NEWLINE_TYPE_LF = 0;
     * }
     */
    public static int G_DATA_STREAM_NEWLINE_TYPE_LF() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_DATA_STREAM_NEWLINE_TYPE_CR = 1;
     * }
     */
    public static int G_DATA_STREAM_NEWLINE_TYPE_CR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_DATA_STREAM_NEWLINE_TYPE_CR_LF = 2;
     * }
     */
    public static int G_DATA_STREAM_NEWLINE_TYPE_CR_LF() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_DATA_STREAM_NEWLINE_TYPE_ANY = 3;
     * }
     */
    public static int G_DATA_STREAM_NEWLINE_TYPE_ANY() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_ATTRIBUTE_TYPE_INVALID = 0;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_ATTRIBUTE_TYPE_STRING = 1;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_STRING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_ATTRIBUTE_TYPE_BYTE_STRING = 2;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_BYTE_STRING() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_ATTRIBUTE_TYPE_BOOLEAN = 3;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_BOOLEAN() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_ATTRIBUTE_TYPE_UINT32 = 4;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_UINT32() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_ATTRIBUTE_TYPE_INT32 = 5;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_INT32() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_ATTRIBUTE_TYPE_UINT64 = 6;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_UINT64() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_ATTRIBUTE_TYPE_INT64 = 7;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_INT64() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_ATTRIBUTE_TYPE_OBJECT = 8;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_OBJECT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_ATTRIBUTE_TYPE_STRINGV = 9;
     * }
     */
    public static int G_FILE_ATTRIBUTE_TYPE_STRINGV() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_ATTRIBUTE_INFO_NONE = 0;
     * }
     */
    public static int G_FILE_ATTRIBUTE_INFO_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE = 1;
     * }
     */
    public static int G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED = 2;
     * }
     */
    public static int G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_ATTRIBUTE_STATUS_UNSET = 0;
     * }
     */
    public static int G_FILE_ATTRIBUTE_STATUS_UNSET() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_ATTRIBUTE_STATUS_SET = 1;
     * }
     */
    public static int G_FILE_ATTRIBUTE_STATUS_SET() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING = 2;
     * }
     */
    public static int G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_QUERY_INFO_NONE = 0;
     * }
     */
    public static int G_FILE_QUERY_INFO_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS = 1;
     * }
     */
    public static int G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_CREATE_NONE = 0;
     * }
     */
    public static int G_FILE_CREATE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_CREATE_PRIVATE = 1;
     * }
     */
    public static int G_FILE_CREATE_PRIVATE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_CREATE_REPLACE_DESTINATION = 2;
     * }
     */
    public static int G_FILE_CREATE_REPLACE_DESTINATION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MEASURE_NONE = 0;
     * }
     */
    public static int G_FILE_MEASURE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MEASURE_REPORT_ANY_ERROR = 2;
     * }
     */
    public static int G_FILE_MEASURE_REPORT_ANY_ERROR() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MEASURE_APPARENT_SIZE = 4;
     * }
     */
    public static int G_FILE_MEASURE_APPARENT_SIZE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MEASURE_NO_XDEV = 8;
     * }
     */
    public static int G_FILE_MEASURE_NO_XDEV() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_MOUNT_MOUNT_NONE = 0;
     * }
     */
    public static int G_MOUNT_MOUNT_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_MOUNT_UNMOUNT_NONE = 0;
     * }
     */
    public static int G_MOUNT_UNMOUNT_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_MOUNT_UNMOUNT_FORCE = 1;
     * }
     */
    public static int G_MOUNT_UNMOUNT_FORCE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_DRIVE_START_NONE = 0;
     * }
     */
    public static int G_DRIVE_START_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_DRIVE_START_STOP_TYPE_UNKNOWN = 0;
     * }
     */
    public static int G_DRIVE_START_STOP_TYPE_UNKNOWN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_DRIVE_START_STOP_TYPE_SHUTDOWN = 1;
     * }
     */
    public static int G_DRIVE_START_STOP_TYPE_SHUTDOWN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_DRIVE_START_STOP_TYPE_NETWORK = 2;
     * }
     */
    public static int G_DRIVE_START_STOP_TYPE_NETWORK() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_DRIVE_START_STOP_TYPE_MULTIDISK = 3;
     * }
     */
    public static int G_DRIVE_START_STOP_TYPE_MULTIDISK() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_DRIVE_START_STOP_TYPE_PASSWORD = 4;
     * }
     */
    public static int G_DRIVE_START_STOP_TYPE_PASSWORD() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_COPY_NONE = 0;
     * }
     */
    public static int G_FILE_COPY_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_COPY_OVERWRITE = 1;
     * }
     */
    public static int G_FILE_COPY_OVERWRITE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_COPY_BACKUP = 2;
     * }
     */
    public static int G_FILE_COPY_BACKUP() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_COPY_NOFOLLOW_SYMLINKS = 4;
     * }
     */
    public static int G_FILE_COPY_NOFOLLOW_SYMLINKS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_COPY_ALL_METADATA = 8;
     * }
     */
    public static int G_FILE_COPY_ALL_METADATA() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_COPY_NO_FALLBACK_FOR_MOVE = 16;
     * }
     */
    public static int G_FILE_COPY_NO_FALLBACK_FOR_MOVE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_COPY_TARGET_DEFAULT_PERMS = 32;
     * }
     */
    public static int G_FILE_COPY_TARGET_DEFAULT_PERMS() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MONITOR_NONE = 0;
     * }
     */
    public static int G_FILE_MONITOR_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MONITOR_WATCH_MOUNTS = 1;
     * }
     */
    public static int G_FILE_MONITOR_WATCH_MOUNTS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MONITOR_SEND_MOVED = 2;
     * }
     */
    public static int G_FILE_MONITOR_SEND_MOVED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MONITOR_WATCH_HARD_LINKS = 4;
     * }
     */
    public static int G_FILE_MONITOR_WATCH_HARD_LINKS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MONITOR_WATCH_MOVES = 8;
     * }
     */
    public static int G_FILE_MONITOR_WATCH_MOVES() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_TYPE_UNKNOWN = 0;
     * }
     */
    public static int G_FILE_TYPE_UNKNOWN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_TYPE_REGULAR = 1;
     * }
     */
    public static int G_FILE_TYPE_REGULAR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_TYPE_DIRECTORY = 2;
     * }
     */
    public static int G_FILE_TYPE_DIRECTORY() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_TYPE_SYMBOLIC_LINK = 3;
     * }
     */
    public static int G_FILE_TYPE_SYMBOLIC_LINK() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_TYPE_SPECIAL = 4;
     * }
     */
    public static int G_FILE_TYPE_SPECIAL() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_TYPE_SHORTCUT = 5;
     * }
     */
    public static int G_FILE_TYPE_SHORTCUT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_TYPE_MOUNTABLE = 6;
     * }
     */
    public static int G_FILE_TYPE_MOUNTABLE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS = 0;
     * }
     */
    public static int G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL = 1;
     * }
     */
    public static int G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_FILESYSTEM_PREVIEW_TYPE_NEVER = 2;
     * }
     */
    public static int G_FILESYSTEM_PREVIEW_TYPE_NEVER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MONITOR_EVENT_CHANGED = 0;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_CHANGED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT = 1;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MONITOR_EVENT_DELETED = 2;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_DELETED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MONITOR_EVENT_CREATED = 3;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_CREATED() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED = 4;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MONITOR_EVENT_PRE_UNMOUNT = 5;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_PRE_UNMOUNT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MONITOR_EVENT_UNMOUNTED = 6;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_UNMOUNTED() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MONITOR_EVENT_MOVED = 7;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_MOVED() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MONITOR_EVENT_RENAMED = 8;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_RENAMED() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MONITOR_EVENT_MOVED_IN = 9;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_MOVED_IN() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .G_FILE_MONITOR_EVENT_MOVED_OUT = 10;
     * }
     */
    public static int G_FILE_MONITOR_EVENT_MOVED_OUT() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_FAILED = 0;
     * }
     */
    public static int G_IO_ERROR_FAILED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_NOT_FOUND = 1;
     * }
     */
    public static int G_IO_ERROR_NOT_FOUND() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_EXISTS = 2;
     * }
     */
    public static int G_IO_ERROR_EXISTS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_IS_DIRECTORY = 3;
     * }
     */
    public static int G_IO_ERROR_IS_DIRECTORY() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_NOT_DIRECTORY = 4;
     * }
     */
    public static int G_IO_ERROR_NOT_DIRECTORY() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_NOT_EMPTY = 5;
     * }
     */
    public static int G_IO_ERROR_NOT_EMPTY() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_NOT_REGULAR_FILE = 6;
     * }
     */
    public static int G_IO_ERROR_NOT_REGULAR_FILE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_NOT_SYMBOLIC_LINK = 7;
     * }
     */
    public static int G_IO_ERROR_NOT_SYMBOLIC_LINK() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_NOT_MOUNTABLE_FILE = 8;
     * }
     */
    public static int G_IO_ERROR_NOT_MOUNTABLE_FILE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_FILENAME_TOO_LONG = 9;
     * }
     */
    public static int G_IO_ERROR_FILENAME_TOO_LONG() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_INVALID_FILENAME = 10;
     * }
     */
    public static int G_IO_ERROR_INVALID_FILENAME() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_TOO_MANY_LINKS = 11;
     * }
     */
    public static int G_IO_ERROR_TOO_MANY_LINKS() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_NO_SPACE = 12;
     * }
     */
    public static int G_IO_ERROR_NO_SPACE() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_INVALID_ARGUMENT = 13;
     * }
     */
    public static int G_IO_ERROR_INVALID_ARGUMENT() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_PERMISSION_DENIED = 14;
     * }
     */
    public static int G_IO_ERROR_PERMISSION_DENIED() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_NOT_SUPPORTED = 15;
     * }
     */
    public static int G_IO_ERROR_NOT_SUPPORTED() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_NOT_MOUNTED = 16;
     * }
     */
    public static int G_IO_ERROR_NOT_MOUNTED() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_ALREADY_MOUNTED = 17;
     * }
     */
    public static int G_IO_ERROR_ALREADY_MOUNTED() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_CLOSED = 18;
     * }
     */
    public static int G_IO_ERROR_CLOSED() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_CANCELLED = 19;
     * }
     */
    public static int G_IO_ERROR_CANCELLED() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_PENDING = 20;
     * }
     */
    public static int G_IO_ERROR_PENDING() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_READ_ONLY = 21;
     * }
     */
    public static int G_IO_ERROR_READ_ONLY() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_CANT_CREATE_BACKUP = 22;
     * }
     */
    public static int G_IO_ERROR_CANT_CREATE_BACKUP() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_WRONG_ETAG = 23;
     * }
     */
    public static int G_IO_ERROR_WRONG_ETAG() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_TIMED_OUT = 24;
     * }
     */
    public static int G_IO_ERROR_TIMED_OUT() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_WOULD_RECURSE = 25;
     * }
     */
    public static int G_IO_ERROR_WOULD_RECURSE() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_BUSY = 26;
     * }
     */
    public static int G_IO_ERROR_BUSY() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_WOULD_BLOCK = 27;
     * }
     */
    public static int G_IO_ERROR_WOULD_BLOCK() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_HOST_NOT_FOUND = 28;
     * }
     */
    public static int G_IO_ERROR_HOST_NOT_FOUND() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_WOULD_MERGE = 29;
     * }
     */
    public static int G_IO_ERROR_WOULD_MERGE() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_FAILED_HANDLED = 30;
     * }
     */
    public static int G_IO_ERROR_FAILED_HANDLED() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_TOO_MANY_OPEN_FILES = 31;
     * }
     */
    public static int G_IO_ERROR_TOO_MANY_OPEN_FILES() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_NOT_INITIALIZED = 32;
     * }
     */
    public static int G_IO_ERROR_NOT_INITIALIZED() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_ADDRESS_IN_USE = 33;
     * }
     */
    public static int G_IO_ERROR_ADDRESS_IN_USE() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_PARTIAL_INPUT = 34;
     * }
     */
    public static int G_IO_ERROR_PARTIAL_INPUT() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_INVALID_DATA = 35;
     * }
     */
    public static int G_IO_ERROR_INVALID_DATA() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_DBUS_ERROR = 36;
     * }
     */
    public static int G_IO_ERROR_DBUS_ERROR() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_HOST_UNREACHABLE = 37;
     * }
     */
    public static int G_IO_ERROR_HOST_UNREACHABLE() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_NETWORK_UNREACHABLE = 38;
     * }
     */
    public static int G_IO_ERROR_NETWORK_UNREACHABLE() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_CONNECTION_REFUSED = 39;
     * }
     */
    public static int G_IO_ERROR_CONNECTION_REFUSED() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_PROXY_FAILED = 40;
     * }
     */
    public static int G_IO_ERROR_PROXY_FAILED() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_PROXY_AUTH_FAILED = 41;
     * }
     */
    public static int G_IO_ERROR_PROXY_AUTH_FAILED() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_PROXY_NEED_AUTH = 42;
     * }
     */
    public static int G_IO_ERROR_PROXY_NEED_AUTH() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_PROXY_NOT_ALLOWED = 43;
     * }
     */
    public static int G_IO_ERROR_PROXY_NOT_ALLOWED() {
        return (int)43L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_BROKEN_PIPE = 44;
     * }
     */
    public static int G_IO_ERROR_BROKEN_PIPE() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_CONNECTION_CLOSED = 44;
     * }
     */
    public static int G_IO_ERROR_CONNECTION_CLOSED() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_NOT_CONNECTED = 45;
     * }
     */
    public static int G_IO_ERROR_NOT_CONNECTED() {
        return (int)45L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_MESSAGE_TOO_LARGE = 46;
     * }
     */
    public static int G_IO_ERROR_MESSAGE_TOO_LARGE() {
        return (int)46L;
    }
    /**
     * {@snippet :
     * enum .G_IO_ERROR_NO_SUCH_DEVICE = 47;
     * }
     */
    public static int G_IO_ERROR_NO_SUCH_DEVICE() {
        return (int)47L;
    }
    /**
     * {@snippet :
     * enum .G_ASK_PASSWORD_NEED_PASSWORD = 1;
     * }
     */
    public static int G_ASK_PASSWORD_NEED_PASSWORD() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_ASK_PASSWORD_NEED_USERNAME = 2;
     * }
     */
    public static int G_ASK_PASSWORD_NEED_USERNAME() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_ASK_PASSWORD_NEED_DOMAIN = 4;
     * }
     */
    public static int G_ASK_PASSWORD_NEED_DOMAIN() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_ASK_PASSWORD_SAVING_SUPPORTED = 8;
     * }
     */
    public static int G_ASK_PASSWORD_SAVING_SUPPORTED() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_ASK_PASSWORD_ANONYMOUS_SUPPORTED = 16;
     * }
     */
    public static int G_ASK_PASSWORD_ANONYMOUS_SUPPORTED() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .G_ASK_PASSWORD_TCRYPT = 32;
     * }
     */
    public static int G_ASK_PASSWORD_TCRYPT() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum .G_PASSWORD_SAVE_NEVER = 0;
     * }
     */
    public static int G_PASSWORD_SAVE_NEVER() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_PASSWORD_SAVE_FOR_SESSION = 1;
     * }
     */
    public static int G_PASSWORD_SAVE_FOR_SESSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_PASSWORD_SAVE_PERMANENTLY = 2;
     * }
     */
    public static int G_PASSWORD_SAVE_PERMANENTLY() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_MOUNT_OPERATION_HANDLED = 0;
     * }
     */
    public static int G_MOUNT_OPERATION_HANDLED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_MOUNT_OPERATION_ABORTED = 1;
     * }
     */
    public static int G_MOUNT_OPERATION_ABORTED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_MOUNT_OPERATION_UNHANDLED = 2;
     * }
     */
    public static int G_MOUNT_OPERATION_UNHANDLED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_OUTPUT_STREAM_SPLICE_NONE = 0;
     * }
     */
    public static int G_OUTPUT_STREAM_SPLICE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE = 1;
     * }
     */
    public static int G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET = 2;
     * }
     */
    public static int G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_IO_STREAM_SPLICE_NONE = 0;
     * }
     */
    public static int G_IO_STREAM_SPLICE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_IO_STREAM_SPLICE_CLOSE_STREAM1 = 1;
     * }
     */
    public static int G_IO_STREAM_SPLICE_CLOSE_STREAM1() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_IO_STREAM_SPLICE_CLOSE_STREAM2 = 2;
     * }
     */
    public static int G_IO_STREAM_SPLICE_CLOSE_STREAM2() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_IO_STREAM_SPLICE_WAIT_FOR_BOTH = 4;
     * }
     */
    public static int G_IO_STREAM_SPLICE_WAIT_FOR_BOTH() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_EMBLEM_ORIGIN_UNKNOWN = 0;
     * }
     */
    public static int G_EMBLEM_ORIGIN_UNKNOWN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_EMBLEM_ORIGIN_DEVICE = 1;
     * }
     */
    public static int G_EMBLEM_ORIGIN_DEVICE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_EMBLEM_ORIGIN_LIVEMETADATA = 2;
     * }
     */
    public static int G_EMBLEM_ORIGIN_LIVEMETADATA() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_EMBLEM_ORIGIN_TAG = 3;
     * }
     */
    public static int G_EMBLEM_ORIGIN_TAG() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_RESOLVER_ERROR_NOT_FOUND = 0;
     * }
     */
    public static int G_RESOLVER_ERROR_NOT_FOUND() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_RESOLVER_ERROR_TEMPORARY_FAILURE = 1;
     * }
     */
    public static int G_RESOLVER_ERROR_TEMPORARY_FAILURE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_RESOLVER_ERROR_INTERNAL = 2;
     * }
     */
    public static int G_RESOLVER_ERROR_INTERNAL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_RESOLVER_RECORD_SRV = 1;
     * }
     */
    public static int G_RESOLVER_RECORD_SRV() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_RESOLVER_RECORD_MX = 2;
     * }
     */
    public static int G_RESOLVER_RECORD_MX() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_RESOLVER_RECORD_TXT = 3;
     * }
     */
    public static int G_RESOLVER_RECORD_TXT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_RESOLVER_RECORD_SOA = 4;
     * }
     */
    public static int G_RESOLVER_RECORD_SOA() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_RESOLVER_RECORD_NS = 5;
     * }
     */
    public static int G_RESOLVER_RECORD_NS() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .G_RESOURCE_ERROR_NOT_FOUND = 0;
     * }
     */
    public static int G_RESOURCE_ERROR_NOT_FOUND() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_RESOURCE_ERROR_INTERNAL = 1;
     * }
     */
    public static int G_RESOURCE_ERROR_INTERNAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_RESOURCE_FLAGS_NONE = 0;
     * }
     */
    public static int G_RESOURCE_FLAGS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_RESOURCE_FLAGS_COMPRESSED = 1;
     * }
     */
    public static int G_RESOURCE_FLAGS_COMPRESSED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_RESOURCE_LOOKUP_FLAGS_NONE = 0;
     * }
     */
    public static int G_RESOURCE_LOOKUP_FLAGS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_FAMILY_INVALID = 0;
     * }
     */
    public static int G_SOCKET_FAMILY_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_FAMILY_UNIX = 1;
     * }
     */
    public static int G_SOCKET_FAMILY_UNIX() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_FAMILY_IPV4 = 2;
     * }
     */
    public static int G_SOCKET_FAMILY_IPV4() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_FAMILY_IPV6 = 10;
     * }
     */
    public static int G_SOCKET_FAMILY_IPV6() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_TYPE_INVALID = 0;
     * }
     */
    public static int G_SOCKET_TYPE_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_TYPE_STREAM = 1;
     * }
     */
    public static int G_SOCKET_TYPE_STREAM() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_TYPE_DATAGRAM = 2;
     * }
     */
    public static int G_SOCKET_TYPE_DATAGRAM() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_TYPE_SEQPACKET = 3;
     * }
     */
    public static int G_SOCKET_TYPE_SEQPACKET() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_MSG_NONE = 0;
     * }
     */
    public static int G_SOCKET_MSG_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_MSG_OOB = 1;
     * }
     */
    public static int G_SOCKET_MSG_OOB() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_MSG_PEEK = 2;
     * }
     */
    public static int G_SOCKET_MSG_PEEK() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_MSG_DONTROUTE = 4;
     * }
     */
    public static int G_SOCKET_MSG_DONTROUTE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_PROTOCOL_UNKNOWN = -1;
     * }
     */
    public static int G_SOCKET_PROTOCOL_UNKNOWN() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_PROTOCOL_DEFAULT = 0;
     * }
     */
    public static int G_SOCKET_PROTOCOL_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_PROTOCOL_TCP = 6;
     * }
     */
    public static int G_SOCKET_PROTOCOL_TCP() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_PROTOCOL_UDP = 17;
     * }
     */
    public static int G_SOCKET_PROTOCOL_UDP() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum .G_SOCKET_PROTOCOL_SCTP = 132;
     * }
     */
    public static int G_SOCKET_PROTOCOL_SCTP() {
        return (int)132L;
    }
    /**
     * {@snippet :
     * enum .G_ZLIB_COMPRESSOR_FORMAT_ZLIB = 0;
     * }
     */
    public static int G_ZLIB_COMPRESSOR_FORMAT_ZLIB() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_ZLIB_COMPRESSOR_FORMAT_GZIP = 1;
     * }
     */
    public static int G_ZLIB_COMPRESSOR_FORMAT_GZIP() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_ZLIB_COMPRESSOR_FORMAT_RAW = 2;
     * }
     */
    public static int G_ZLIB_COMPRESSOR_FORMAT_RAW() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_UNIX_SOCKET_ADDRESS_INVALID = 0;
     * }
     */
    public static int G_UNIX_SOCKET_ADDRESS_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_UNIX_SOCKET_ADDRESS_ANONYMOUS = 1;
     * }
     */
    public static int G_UNIX_SOCKET_ADDRESS_ANONYMOUS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_UNIX_SOCKET_ADDRESS_PATH = 2;
     * }
     */
    public static int G_UNIX_SOCKET_ADDRESS_PATH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_UNIX_SOCKET_ADDRESS_ABSTRACT = 3;
     * }
     */
    public static int G_UNIX_SOCKET_ADDRESS_ABSTRACT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED = 4;
     * }
     */
    public static int G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_BUS_TYPE_STARTER = -1;
     * }
     */
    public static int G_BUS_TYPE_STARTER() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * enum .G_BUS_TYPE_NONE = 0;
     * }
     */
    public static int G_BUS_TYPE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_BUS_TYPE_SYSTEM = 1;
     * }
     */
    public static int G_BUS_TYPE_SYSTEM() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_BUS_TYPE_SESSION = 2;
     * }
     */
    public static int G_BUS_TYPE_SESSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_BUS_NAME_OWNER_FLAGS_NONE = 0;
     * }
     */
    public static int G_BUS_NAME_OWNER_FLAGS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT = 1;
     * }
     */
    public static int G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_BUS_NAME_OWNER_FLAGS_REPLACE = 2;
     * }
     */
    public static int G_BUS_NAME_OWNER_FLAGS_REPLACE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_BUS_NAME_OWNER_FLAGS_DO_NOT_QUEUE = 4;
     * }
     */
    public static int G_BUS_NAME_OWNER_FLAGS_DO_NOT_QUEUE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_BUS_NAME_WATCHER_FLAGS_NONE = 0;
     * }
     */
    public static int G_BUS_NAME_WATCHER_FLAGS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_BUS_NAME_WATCHER_FLAGS_AUTO_START = 1;
     * }
     */
    public static int G_BUS_NAME_WATCHER_FLAGS_AUTO_START() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_PROXY_FLAGS_NONE = 0;
     * }
     */
    public static int G_DBUS_PROXY_FLAGS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES = 1;
     * }
     */
    public static int G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS = 2;
     * }
     */
    public static int G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START = 4;
     * }
     */
    public static int G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES = 8;
     * }
     */
    public static int G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START_AT_CONSTRUCTION = 16;
     * }
     */
    public static int G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START_AT_CONSTRUCTION() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_PROXY_FLAGS_NO_MATCH_RULE = 32;
     * }
     */
    public static int G_DBUS_PROXY_FLAGS_NO_MATCH_RULE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_FAILED = 0;
     * }
     */
    public static int G_DBUS_ERROR_FAILED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_NO_MEMORY = 1;
     * }
     */
    public static int G_DBUS_ERROR_NO_MEMORY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_SERVICE_UNKNOWN = 2;
     * }
     */
    public static int G_DBUS_ERROR_SERVICE_UNKNOWN() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_NAME_HAS_NO_OWNER = 3;
     * }
     */
    public static int G_DBUS_ERROR_NAME_HAS_NO_OWNER() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_NO_REPLY = 4;
     * }
     */
    public static int G_DBUS_ERROR_NO_REPLY() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_IO_ERROR = 5;
     * }
     */
    public static int G_DBUS_ERROR_IO_ERROR() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_BAD_ADDRESS = 6;
     * }
     */
    public static int G_DBUS_ERROR_BAD_ADDRESS() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_NOT_SUPPORTED = 7;
     * }
     */
    public static int G_DBUS_ERROR_NOT_SUPPORTED() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_LIMITS_EXCEEDED = 8;
     * }
     */
    public static int G_DBUS_ERROR_LIMITS_EXCEEDED() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_ACCESS_DENIED = 9;
     * }
     */
    public static int G_DBUS_ERROR_ACCESS_DENIED() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_AUTH_FAILED = 10;
     * }
     */
    public static int G_DBUS_ERROR_AUTH_FAILED() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_NO_SERVER = 11;
     * }
     */
    public static int G_DBUS_ERROR_NO_SERVER() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_TIMEOUT = 12;
     * }
     */
    public static int G_DBUS_ERROR_TIMEOUT() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_NO_NETWORK = 13;
     * }
     */
    public static int G_DBUS_ERROR_NO_NETWORK() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_ADDRESS_IN_USE = 14;
     * }
     */
    public static int G_DBUS_ERROR_ADDRESS_IN_USE() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_DISCONNECTED = 15;
     * }
     */
    public static int G_DBUS_ERROR_DISCONNECTED() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_INVALID_ARGS = 16;
     * }
     */
    public static int G_DBUS_ERROR_INVALID_ARGS() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_FILE_NOT_FOUND = 17;
     * }
     */
    public static int G_DBUS_ERROR_FILE_NOT_FOUND() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_FILE_EXISTS = 18;
     * }
     */
    public static int G_DBUS_ERROR_FILE_EXISTS() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_UNKNOWN_METHOD = 19;
     * }
     */
    public static int G_DBUS_ERROR_UNKNOWN_METHOD() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_TIMED_OUT = 20;
     * }
     */
    public static int G_DBUS_ERROR_TIMED_OUT() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_MATCH_RULE_NOT_FOUND = 21;
     * }
     */
    public static int G_DBUS_ERROR_MATCH_RULE_NOT_FOUND() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_MATCH_RULE_INVALID = 22;
     * }
     */
    public static int G_DBUS_ERROR_MATCH_RULE_INVALID() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_SPAWN_EXEC_FAILED = 23;
     * }
     */
    public static int G_DBUS_ERROR_SPAWN_EXEC_FAILED() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_SPAWN_FORK_FAILED = 24;
     * }
     */
    public static int G_DBUS_ERROR_SPAWN_FORK_FAILED() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_SPAWN_CHILD_EXITED = 25;
     * }
     */
    public static int G_DBUS_ERROR_SPAWN_CHILD_EXITED() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_SPAWN_CHILD_SIGNALED = 26;
     * }
     */
    public static int G_DBUS_ERROR_SPAWN_CHILD_SIGNALED() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_SPAWN_FAILED = 27;
     * }
     */
    public static int G_DBUS_ERROR_SPAWN_FAILED() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_SPAWN_SETUP_FAILED = 28;
     * }
     */
    public static int G_DBUS_ERROR_SPAWN_SETUP_FAILED() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_SPAWN_CONFIG_INVALID = 29;
     * }
     */
    public static int G_DBUS_ERROR_SPAWN_CONFIG_INVALID() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_SPAWN_SERVICE_INVALID = 30;
     * }
     */
    public static int G_DBUS_ERROR_SPAWN_SERVICE_INVALID() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND = 31;
     * }
     */
    public static int G_DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_SPAWN_PERMISSIONS_INVALID = 32;
     * }
     */
    public static int G_DBUS_ERROR_SPAWN_PERMISSIONS_INVALID() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_SPAWN_FILE_INVALID = 33;
     * }
     */
    public static int G_DBUS_ERROR_SPAWN_FILE_INVALID() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_SPAWN_NO_MEMORY = 34;
     * }
     */
    public static int G_DBUS_ERROR_SPAWN_NO_MEMORY() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN = 35;
     * }
     */
    public static int G_DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_INVALID_SIGNATURE = 36;
     * }
     */
    public static int G_DBUS_ERROR_INVALID_SIGNATURE() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_INVALID_FILE_CONTENT = 37;
     * }
     */
    public static int G_DBUS_ERROR_INVALID_FILE_CONTENT() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum .G_DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN = 38;
     * }
     */
    public static int G_DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN() {
        return (int)38L;
    }
}


