// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;

final class constants$1301 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$1301() {}
    static final FunctionDescriptor gtk_window_set_transient_for$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_window_set_transient_for$MH = RuntimeHelper.downcallHandle(
        "gtk_window_set_transient_for",
        constants$1301.gtk_window_set_transient_for$FUNC
    );
    static final FunctionDescriptor gtk_window_get_transient_for$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_window_get_transient_for$MH = RuntimeHelper.downcallHandle(
        "gtk_window_get_transient_for",
        constants$1301.gtk_window_get_transient_for$FUNC
    );
    static final FunctionDescriptor gtk_window_set_attached_to$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_window_set_attached_to$MH = RuntimeHelper.downcallHandle(
        "gtk_window_set_attached_to",
        constants$1301.gtk_window_set_attached_to$FUNC
    );
    static final FunctionDescriptor gtk_window_get_attached_to$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_window_get_attached_to$MH = RuntimeHelper.downcallHandle(
        "gtk_window_get_attached_to",
        constants$1301.gtk_window_get_attached_to$FUNC
    );
    static final FunctionDescriptor gtk_window_set_opacity$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle gtk_window_set_opacity$MH = RuntimeHelper.downcallHandle(
        "gtk_window_set_opacity",
        constants$1301.gtk_window_set_opacity$FUNC
    );
    static final FunctionDescriptor gtk_window_get_opacity$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_window_get_opacity$MH = RuntimeHelper.downcallHandle(
        "gtk_window_get_opacity",
        constants$1301.gtk_window_get_opacity$FUNC
    );
}


