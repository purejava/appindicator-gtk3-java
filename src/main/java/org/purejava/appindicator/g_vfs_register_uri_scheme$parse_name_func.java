// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.Arena;
import java.lang.foreign.MemorySegment;
/**
 * {@snippet :
 * struct _GFile* (*g_vfs_register_uri_scheme$parse_name_func)(struct _GVfs*,char*,void*);
 * }
 */
public interface g_vfs_register_uri_scheme$parse_name_func {

    java.lang.foreign.MemorySegment apply(java.lang.foreign.MemorySegment vfs, java.lang.foreign.MemorySegment identifier, java.lang.foreign.MemorySegment user_data);
    static MemorySegment allocate(g_vfs_register_uri_scheme$parse_name_func fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$1404.const$3, fi, constants$23.const$0, scope);
    }
    static g_vfs_register_uri_scheme$parse_name_func ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _vfs, java.lang.foreign.MemorySegment _identifier, java.lang.foreign.MemorySegment _user_data) -> {
            try {
                return (java.lang.foreign.MemorySegment)constants$734.const$5.invokeExact(symbol, _vfs, _identifier, _user_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


