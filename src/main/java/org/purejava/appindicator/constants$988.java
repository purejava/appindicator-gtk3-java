// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;

final class constants$988 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$988() {}
    static final FunctionDescriptor rewind$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle rewind$MH = RuntimeHelper.downcallHandle(
        "rewind",
        constants$988.rewind$FUNC
    );
    static final FunctionDescriptor fseeko$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle fseeko$MH = RuntimeHelper.downcallHandle(
        "fseeko",
        constants$988.fseeko$FUNC
    );
    static final FunctionDescriptor ftello$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ftello$MH = RuntimeHelper.downcallHandle(
        "ftello",
        constants$988.ftello$FUNC
    );
    static final FunctionDescriptor fgetpos$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle fgetpos$MH = RuntimeHelper.downcallHandle(
        "fgetpos",
        constants$988.fgetpos$FUNC
    );
    static final FunctionDescriptor fsetpos$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle fsetpos$MH = RuntimeHelper.downcallHandle(
        "fsetpos",
        constants$988.fsetpos$FUNC
    );
    static final FunctionDescriptor clearerr$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle clearerr$MH = RuntimeHelper.downcallHandle(
        "clearerr",
        constants$988.clearerr$FUNC
    );
}


