// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import java.lang.foreign.SegmentAllocator;
import java.lang.invoke.VarHandle;
/**
 * {@snippet :
 * struct __pthread_rwlock_arch_t {
 *     unsigned int __readers;
 *     unsigned int __writers;
 *     unsigned int __wrphase_futex;
 *     unsigned int __writers_futex;
 *     unsigned int __pad3;
 *     unsigned int __pad4;
 *     int __cur_writer;
 *     int __shared;
 *     unsigned long __pad1;
 *     unsigned long __pad2;
 *     unsigned int __flags;
 * };
 * }
 */
public class __pthread_rwlock_arch_t {

    public static MemoryLayout $LAYOUT() {
        return constants$74.const$1;
    }
    public static VarHandle __readers$VH() {
        return constants$74.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int __readers;
     * }
     */
    public static int __readers$get(MemorySegment seg) {
        return (int)constants$74.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int __readers;
     * }
     */
    public static void __readers$set(MemorySegment seg, int x) {
        constants$74.const$2.set(seg, x);
    }
    public static int __readers$get(MemorySegment seg, long index) {
        return (int)constants$74.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void __readers$set(MemorySegment seg, long index, int x) {
        constants$74.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __writers$VH() {
        return constants$74.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int __writers;
     * }
     */
    public static int __writers$get(MemorySegment seg) {
        return (int)constants$74.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int __writers;
     * }
     */
    public static void __writers$set(MemorySegment seg, int x) {
        constants$74.const$3.set(seg, x);
    }
    public static int __writers$get(MemorySegment seg, long index) {
        return (int)constants$74.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void __writers$set(MemorySegment seg, long index, int x) {
        constants$74.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __wrphase_futex$VH() {
        return constants$74.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int __wrphase_futex;
     * }
     */
    public static int __wrphase_futex$get(MemorySegment seg) {
        return (int)constants$74.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int __wrphase_futex;
     * }
     */
    public static void __wrphase_futex$set(MemorySegment seg, int x) {
        constants$74.const$4.set(seg, x);
    }
    public static int __wrphase_futex$get(MemorySegment seg, long index) {
        return (int)constants$74.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void __wrphase_futex$set(MemorySegment seg, long index, int x) {
        constants$74.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __writers_futex$VH() {
        return constants$74.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int __writers_futex;
     * }
     */
    public static int __writers_futex$get(MemorySegment seg) {
        return (int)constants$74.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int __writers_futex;
     * }
     */
    public static void __writers_futex$set(MemorySegment seg, int x) {
        constants$74.const$5.set(seg, x);
    }
    public static int __writers_futex$get(MemorySegment seg, long index) {
        return (int)constants$74.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void __writers_futex$set(MemorySegment seg, long index, int x) {
        constants$74.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __pad3$VH() {
        return constants$75.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int __pad3;
     * }
     */
    public static int __pad3$get(MemorySegment seg) {
        return (int)constants$75.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int __pad3;
     * }
     */
    public static void __pad3$set(MemorySegment seg, int x) {
        constants$75.const$0.set(seg, x);
    }
    public static int __pad3$get(MemorySegment seg, long index) {
        return (int)constants$75.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void __pad3$set(MemorySegment seg, long index, int x) {
        constants$75.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __pad4$VH() {
        return constants$75.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int __pad4;
     * }
     */
    public static int __pad4$get(MemorySegment seg) {
        return (int)constants$75.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int __pad4;
     * }
     */
    public static void __pad4$set(MemorySegment seg, int x) {
        constants$75.const$1.set(seg, x);
    }
    public static int __pad4$get(MemorySegment seg, long index) {
        return (int)constants$75.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void __pad4$set(MemorySegment seg, long index, int x) {
        constants$75.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __cur_writer$VH() {
        return constants$75.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int __cur_writer;
     * }
     */
    public static int __cur_writer$get(MemorySegment seg) {
        return (int)constants$75.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int __cur_writer;
     * }
     */
    public static void __cur_writer$set(MemorySegment seg, int x) {
        constants$75.const$2.set(seg, x);
    }
    public static int __cur_writer$get(MemorySegment seg, long index) {
        return (int)constants$75.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void __cur_writer$set(MemorySegment seg, long index, int x) {
        constants$75.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __shared$VH() {
        return constants$75.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int __shared;
     * }
     */
    public static int __shared$get(MemorySegment seg) {
        return (int)constants$75.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int __shared;
     * }
     */
    public static void __shared$set(MemorySegment seg, int x) {
        constants$75.const$3.set(seg, x);
    }
    public static int __shared$get(MemorySegment seg, long index) {
        return (int)constants$75.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void __shared$set(MemorySegment seg, long index, int x) {
        constants$75.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __pad1$VH() {
        return constants$75.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long __pad1;
     * }
     */
    public static long __pad1$get(MemorySegment seg) {
        return (long)constants$75.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long __pad1;
     * }
     */
    public static void __pad1$set(MemorySegment seg, long x) {
        constants$75.const$4.set(seg, x);
    }
    public static long __pad1$get(MemorySegment seg, long index) {
        return (long)constants$75.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void __pad1$set(MemorySegment seg, long index, long x) {
        constants$75.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __pad2$VH() {
        return constants$75.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long __pad2;
     * }
     */
    public static long __pad2$get(MemorySegment seg) {
        return (long)constants$75.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long __pad2;
     * }
     */
    public static void __pad2$set(MemorySegment seg, long x) {
        constants$75.const$5.set(seg, x);
    }
    public static long __pad2$get(MemorySegment seg, long index) {
        return (long)constants$75.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void __pad2$set(MemorySegment seg, long index, long x) {
        constants$75.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __flags$VH() {
        return constants$76.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int __flags;
     * }
     */
    public static int __flags$get(MemorySegment seg) {
        return (int)constants$76.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int __flags;
     * }
     */
    public static void __flags$set(MemorySegment seg, int x) {
        constants$76.const$0.set(seg, x);
    }
    public static int __flags$get(MemorySegment seg, long index) {
        return (int)constants$76.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void __flags$set(MemorySegment seg, long index, int x) {
        constants$76.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


