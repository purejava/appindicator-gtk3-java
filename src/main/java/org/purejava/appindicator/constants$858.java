// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;

final class constants$858 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$858() {}
    static final FunctionDescriptor hb_font_get_font_extents_func_t$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor hb_font_get_font_extents_func_t_UP$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle hb_font_get_font_extents_func_t_UP$MH = RuntimeHelper.upcallHandle(hb_font_get_font_extents_func_t.class, "apply", constants$858.hb_font_get_font_extents_func_t_UP$FUNC);
    static final FunctionDescriptor hb_font_get_font_extents_func_t_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle hb_font_get_font_extents_func_t_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$858.hb_font_get_font_extents_func_t_DOWN$FUNC
    );
    static final FunctionDescriptor hb_font_get_font_h_extents_func_t$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor hb_font_get_font_h_extents_func_t_UP$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle hb_font_get_font_h_extents_func_t_UP$MH = RuntimeHelper.upcallHandle(hb_font_get_font_h_extents_func_t.class, "apply", constants$858.hb_font_get_font_h_extents_func_t_UP$FUNC);
    static final FunctionDescriptor hb_font_get_font_h_extents_func_t_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle hb_font_get_font_h_extents_func_t_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$858.hb_font_get_font_h_extents_func_t_DOWN$FUNC
    );
    static final FunctionDescriptor hb_font_get_font_v_extents_func_t$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor hb_font_get_font_v_extents_func_t_UP$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle hb_font_get_font_v_extents_func_t_UP$MH = RuntimeHelper.upcallHandle(hb_font_get_font_v_extents_func_t.class, "apply", constants$858.hb_font_get_font_v_extents_func_t_UP$FUNC);
    static final FunctionDescriptor hb_font_get_font_v_extents_func_t_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle hb_font_get_font_v_extents_func_t_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$858.hb_font_get_font_v_extents_func_t_DOWN$FUNC
    );
}


