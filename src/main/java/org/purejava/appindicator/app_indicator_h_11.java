// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.AddressLayout;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;

import static java.lang.foreign.ValueLayout.JAVA_INT;
import static java.lang.foreign.ValueLayout.OfInt;
public class app_indicator_h_11 extends app_indicator_h_10 {

    public static MethodHandle pango_coverage_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.const$1,"pango_coverage_set");
    }
    /**
     * {@snippet :
     * void pango_coverage_set(struct _PangoCoverage* coverage, int index_, enum PangoCoverageLevel level);
     * }
     */
    public static void pango_coverage_set(MemorySegment coverage, int index_, int level) {
        var mh$ = pango_coverage_set$MH();
        try {
            mh$.invokeExact(coverage, index_, level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_coverage_max$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.const$2,"pango_coverage_max");
    }
    /**
     * {@snippet :
     * void pango_coverage_max(struct _PangoCoverage* coverage, struct _PangoCoverage* other);
     * }
     */
    public static void pango_coverage_max(MemorySegment coverage, MemorySegment other) {
        var mh$ = pango_coverage_max$MH();
        try {
            mh$.invokeExact(coverage, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_coverage_to_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.const$3,"pango_coverage_to_bytes");
    }
    /**
     * {@snippet :
     * void pango_coverage_to_bytes(struct _PangoCoverage* coverage, unsigned char** bytes, int* n_bytes);
     * }
     */
    public static void pango_coverage_to_bytes(MemorySegment coverage, MemorySegment bytes, MemorySegment n_bytes) {
        var mh$ = pango_coverage_to_bytes$MH();
        try {
            mh$.invokeExact(coverage, bytes, n_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_coverage_from_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.const$4,"pango_coverage_from_bytes");
    }
    /**
     * {@snippet :
     * struct _PangoCoverage* pango_coverage_from_bytes(unsigned char* bytes, int n_bytes);
     * }
     */
    public static MemorySegment pango_coverage_from_bytes(MemorySegment bytes, int n_bytes) {
        var mh$ = pango_coverage_from_bytes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bytes, n_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _PangoCoverage* PangoCoverage_autoptr;
     * }
     */
    public static final AddressLayout PangoCoverage_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* PangoCoverage_listautoptr;
     * }
     */
    public static final AddressLayout PangoCoverage_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* PangoCoverage_slistautoptr;
     * }
     */
    public static final AddressLayout PangoCoverage_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* PangoCoverage_queueautoptr;
     * }
     */
    public static final AddressLayout PangoCoverage_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef unsigned int PangoGlyph;
     * }
     */
    public static final OfInt PangoGlyph = JAVA_INT;
    public static MethodHandle pango_units_from_double$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.const$6,"pango_units_from_double");
    }
    /**
     * {@snippet :
     * int pango_units_from_double(double d);
     * }
     */
    public static int pango_units_from_double(double d) {
        var mh$ = pango_units_from_double$MH();
        try {
            return (int)mh$.invokeExact(d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_units_to_double$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.const$1,"pango_units_to_double");
    }
    /**
     * {@snippet :
     * double pango_units_to_double(int i);
     * }
     */
    public static double pango_units_to_double(int i) {
        var mh$ = pango_units_to_double$MH();
        try {
            return (double)mh$.invokeExact(i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_extents_to_pixels$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.const$1,"pango_extents_to_pixels");
    }
    /**
     * {@snippet :
     * void pango_extents_to_pixels(struct _PangoRectangle* inclusive, struct _PangoRectangle* nearest);
     * }
     */
    public static void pango_extents_to_pixels(MemorySegment inclusive, MemorySegment nearest) {
        var mh$ = pango_extents_to_pixels$MH();
        try {
            mh$.invokeExact(inclusive, nearest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum PangoGravity.PANGO_GRAVITY_SOUTH = 0;
     * }
     */
    public static int PANGO_GRAVITY_SOUTH() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoGravity.PANGO_GRAVITY_EAST = 1;
     * }
     */
    public static int PANGO_GRAVITY_EAST() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoGravity.PANGO_GRAVITY_NORTH = 2;
     * }
     */
    public static int PANGO_GRAVITY_NORTH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum PangoGravity.PANGO_GRAVITY_WEST = 3;
     * }
     */
    public static int PANGO_GRAVITY_WEST() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum PangoGravity.PANGO_GRAVITY_AUTO = 4;
     * }
     */
    public static int PANGO_GRAVITY_AUTO() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum PangoGravityHint.PANGO_GRAVITY_HINT_NATURAL = 0;
     * }
     */
    public static int PANGO_GRAVITY_HINT_NATURAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoGravityHint.PANGO_GRAVITY_HINT_STRONG = 1;
     * }
     */
    public static int PANGO_GRAVITY_HINT_STRONG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoGravityHint.PANGO_GRAVITY_HINT_LINE = 2;
     * }
     */
    public static int PANGO_GRAVITY_HINT_LINE() {
        return (int)2L;
    }
    public static MethodHandle pango_matrix_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.const$3,"pango_matrix_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_matrix_get_type();
     * }
     */
    public static long pango_matrix_get_type() {
        var mh$ = pango_matrix_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_matrix_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.const$4,"pango_matrix_copy");
    }
    /**
     * {@snippet :
     * struct _PangoMatrix* pango_matrix_copy(struct _PangoMatrix* matrix);
     * }
     */
    public static MemorySegment pango_matrix_copy(MemorySegment matrix) {
        var mh$ = pango_matrix_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_matrix_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.const$5,"pango_matrix_free");
    }
    /**
     * {@snippet :
     * void pango_matrix_free(struct _PangoMatrix* matrix);
     * }
     */
    public static void pango_matrix_free(MemorySegment matrix) {
        var mh$ = pango_matrix_free$MH();
        try {
            mh$.invokeExact(matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_matrix_translate$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.const$1,"pango_matrix_translate");
    }
    /**
     * {@snippet :
     * void pango_matrix_translate(struct _PangoMatrix* matrix, double tx, double ty);
     * }
     */
    public static void pango_matrix_translate(MemorySegment matrix, double tx, double ty) {
        var mh$ = pango_matrix_translate$MH();
        try {
            mh$.invokeExact(matrix, tx, ty);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_matrix_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.const$2,"pango_matrix_scale");
    }
    /**
     * {@snippet :
     * void pango_matrix_scale(struct _PangoMatrix* matrix, double scale_x, double scale_y);
     * }
     */
    public static void pango_matrix_scale(MemorySegment matrix, double scale_x, double scale_y) {
        var mh$ = pango_matrix_scale$MH();
        try {
            mh$.invokeExact(matrix, scale_x, scale_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_matrix_rotate$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.const$3,"pango_matrix_rotate");
    }
    /**
     * {@snippet :
     * void pango_matrix_rotate(struct _PangoMatrix* matrix, double degrees);
     * }
     */
    public static void pango_matrix_rotate(MemorySegment matrix, double degrees) {
        var mh$ = pango_matrix_rotate$MH();
        try {
            mh$.invokeExact(matrix, degrees);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_matrix_concat$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.const$4,"pango_matrix_concat");
    }
    /**
     * {@snippet :
     * void pango_matrix_concat(struct _PangoMatrix* matrix, struct _PangoMatrix* new_matrix);
     * }
     */
    public static void pango_matrix_concat(MemorySegment matrix, MemorySegment new_matrix) {
        var mh$ = pango_matrix_concat$MH();
        try {
            mh$.invokeExact(matrix, new_matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_matrix_transform_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.const$5,"pango_matrix_transform_point");
    }
    /**
     * {@snippet :
     * void pango_matrix_transform_point(struct _PangoMatrix* matrix, double* x, double* y);
     * }
     */
    public static void pango_matrix_transform_point(MemorySegment matrix, MemorySegment x, MemorySegment y) {
        var mh$ = pango_matrix_transform_point$MH();
        try {
            mh$.invokeExact(matrix, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_matrix_transform_distance$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.const$0,"pango_matrix_transform_distance");
    }
    /**
     * {@snippet :
     * void pango_matrix_transform_distance(struct _PangoMatrix* matrix, double* dx, double* dy);
     * }
     */
    public static void pango_matrix_transform_distance(MemorySegment matrix, MemorySegment dx, MemorySegment dy) {
        var mh$ = pango_matrix_transform_distance$MH();
        try {
            mh$.invokeExact(matrix, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_matrix_transform_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.const$1,"pango_matrix_transform_rectangle");
    }
    /**
     * {@snippet :
     * void pango_matrix_transform_rectangle(struct _PangoMatrix* matrix, struct _PangoRectangle* rect);
     * }
     */
    public static void pango_matrix_transform_rectangle(MemorySegment matrix, MemorySegment rect) {
        var mh$ = pango_matrix_transform_rectangle$MH();
        try {
            mh$.invokeExact(matrix, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_matrix_transform_pixel_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.const$2,"pango_matrix_transform_pixel_rectangle");
    }
    /**
     * {@snippet :
     * void pango_matrix_transform_pixel_rectangle(struct _PangoMatrix* matrix, struct _PangoRectangle* rect);
     * }
     */
    public static void pango_matrix_transform_pixel_rectangle(MemorySegment matrix, MemorySegment rect) {
        var mh$ = pango_matrix_transform_pixel_rectangle$MH();
        try {
            mh$.invokeExact(matrix, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_matrix_get_font_scale_factor$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.const$3,"pango_matrix_get_font_scale_factor");
    }
    /**
     * {@snippet :
     * double pango_matrix_get_font_scale_factor(struct _PangoMatrix* matrix);
     * }
     */
    public static double pango_matrix_get_font_scale_factor(MemorySegment matrix) {
        var mh$ = pango_matrix_get_font_scale_factor$MH();
        try {
            return (double)mh$.invokeExact(matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_matrix_get_font_scale_factors$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.const$4,"pango_matrix_get_font_scale_factors");
    }
    /**
     * {@snippet :
     * void pango_matrix_get_font_scale_factors(struct _PangoMatrix* matrix, double* xscale, double* yscale);
     * }
     */
    public static void pango_matrix_get_font_scale_factors(MemorySegment matrix, MemorySegment xscale, MemorySegment yscale) {
        var mh$ = pango_matrix_get_font_scale_factors$MH();
        try {
            mh$.invokeExact(matrix, xscale, yscale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_matrix_get_slant_ratio$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.const$5,"pango_matrix_get_slant_ratio");
    }
    /**
     * {@snippet :
     * double pango_matrix_get_slant_ratio(struct _PangoMatrix* matrix);
     * }
     */
    public static double pango_matrix_get_slant_ratio(MemorySegment matrix) {
        var mh$ = pango_matrix_get_slant_ratio$MH();
        try {
            return (double)mh$.invokeExact(matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_INVALID_CODE = -1;
     * }
     */
    public static int PANGO_SCRIPT_INVALID_CODE() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_COMMON = 0;
     * }
     */
    public static int PANGO_SCRIPT_COMMON() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_INHERITED = 1;
     * }
     */
    public static int PANGO_SCRIPT_INHERITED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_ARABIC = 2;
     * }
     */
    public static int PANGO_SCRIPT_ARABIC() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_ARMENIAN = 3;
     * }
     */
    public static int PANGO_SCRIPT_ARMENIAN() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_BENGALI = 4;
     * }
     */
    public static int PANGO_SCRIPT_BENGALI() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_BOPOMOFO = 5;
     * }
     */
    public static int PANGO_SCRIPT_BOPOMOFO() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_CHEROKEE = 6;
     * }
     */
    public static int PANGO_SCRIPT_CHEROKEE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_COPTIC = 7;
     * }
     */
    public static int PANGO_SCRIPT_COPTIC() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_CYRILLIC = 8;
     * }
     */
    public static int PANGO_SCRIPT_CYRILLIC() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_DESERET = 9;
     * }
     */
    public static int PANGO_SCRIPT_DESERET() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_DEVANAGARI = 10;
     * }
     */
    public static int PANGO_SCRIPT_DEVANAGARI() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_ETHIOPIC = 11;
     * }
     */
    public static int PANGO_SCRIPT_ETHIOPIC() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_GEORGIAN = 12;
     * }
     */
    public static int PANGO_SCRIPT_GEORGIAN() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_GOTHIC = 13;
     * }
     */
    public static int PANGO_SCRIPT_GOTHIC() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_GREEK = 14;
     * }
     */
    public static int PANGO_SCRIPT_GREEK() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_GUJARATI = 15;
     * }
     */
    public static int PANGO_SCRIPT_GUJARATI() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_GURMUKHI = 16;
     * }
     */
    public static int PANGO_SCRIPT_GURMUKHI() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_HAN = 17;
     * }
     */
    public static int PANGO_SCRIPT_HAN() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_HANGUL = 18;
     * }
     */
    public static int PANGO_SCRIPT_HANGUL() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_HEBREW = 19;
     * }
     */
    public static int PANGO_SCRIPT_HEBREW() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_HIRAGANA = 20;
     * }
     */
    public static int PANGO_SCRIPT_HIRAGANA() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_KANNADA = 21;
     * }
     */
    public static int PANGO_SCRIPT_KANNADA() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_KATAKANA = 22;
     * }
     */
    public static int PANGO_SCRIPT_KATAKANA() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_KHMER = 23;
     * }
     */
    public static int PANGO_SCRIPT_KHMER() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_LAO = 24;
     * }
     */
    public static int PANGO_SCRIPT_LAO() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_LATIN = 25;
     * }
     */
    public static int PANGO_SCRIPT_LATIN() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_MALAYALAM = 26;
     * }
     */
    public static int PANGO_SCRIPT_MALAYALAM() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_MONGOLIAN = 27;
     * }
     */
    public static int PANGO_SCRIPT_MONGOLIAN() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_MYANMAR = 28;
     * }
     */
    public static int PANGO_SCRIPT_MYANMAR() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_OGHAM = 29;
     * }
     */
    public static int PANGO_SCRIPT_OGHAM() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_OLD_ITALIC = 30;
     * }
     */
    public static int PANGO_SCRIPT_OLD_ITALIC() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_ORIYA = 31;
     * }
     */
    public static int PANGO_SCRIPT_ORIYA() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_RUNIC = 32;
     * }
     */
    public static int PANGO_SCRIPT_RUNIC() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_SINHALA = 33;
     * }
     */
    public static int PANGO_SCRIPT_SINHALA() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_SYRIAC = 34;
     * }
     */
    public static int PANGO_SCRIPT_SYRIAC() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_TAMIL = 35;
     * }
     */
    public static int PANGO_SCRIPT_TAMIL() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_TELUGU = 36;
     * }
     */
    public static int PANGO_SCRIPT_TELUGU() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_THAANA = 37;
     * }
     */
    public static int PANGO_SCRIPT_THAANA() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_THAI = 38;
     * }
     */
    public static int PANGO_SCRIPT_THAI() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_TIBETAN = 39;
     * }
     */
    public static int PANGO_SCRIPT_TIBETAN() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_CANADIAN_ABORIGINAL = 40;
     * }
     */
    public static int PANGO_SCRIPT_CANADIAN_ABORIGINAL() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_YI = 41;
     * }
     */
    public static int PANGO_SCRIPT_YI() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_TAGALOG = 42;
     * }
     */
    public static int PANGO_SCRIPT_TAGALOG() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_HANUNOO = 43;
     * }
     */
    public static int PANGO_SCRIPT_HANUNOO() {
        return (int)43L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_BUHID = 44;
     * }
     */
    public static int PANGO_SCRIPT_BUHID() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_TAGBANWA = 45;
     * }
     */
    public static int PANGO_SCRIPT_TAGBANWA() {
        return (int)45L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_BRAILLE = 46;
     * }
     */
    public static int PANGO_SCRIPT_BRAILLE() {
        return (int)46L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_CYPRIOT = 47;
     * }
     */
    public static int PANGO_SCRIPT_CYPRIOT() {
        return (int)47L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_LIMBU = 48;
     * }
     */
    public static int PANGO_SCRIPT_LIMBU() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_OSMANYA = 49;
     * }
     */
    public static int PANGO_SCRIPT_OSMANYA() {
        return (int)49L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_SHAVIAN = 50;
     * }
     */
    public static int PANGO_SCRIPT_SHAVIAN() {
        return (int)50L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_LINEAR_B = 51;
     * }
     */
    public static int PANGO_SCRIPT_LINEAR_B() {
        return (int)51L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_TAI_LE = 52;
     * }
     */
    public static int PANGO_SCRIPT_TAI_LE() {
        return (int)52L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_UGARITIC = 53;
     * }
     */
    public static int PANGO_SCRIPT_UGARITIC() {
        return (int)53L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_NEW_TAI_LUE = 54;
     * }
     */
    public static int PANGO_SCRIPT_NEW_TAI_LUE() {
        return (int)54L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_BUGINESE = 55;
     * }
     */
    public static int PANGO_SCRIPT_BUGINESE() {
        return (int)55L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_GLAGOLITIC = 56;
     * }
     */
    public static int PANGO_SCRIPT_GLAGOLITIC() {
        return (int)56L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_TIFINAGH = 57;
     * }
     */
    public static int PANGO_SCRIPT_TIFINAGH() {
        return (int)57L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_SYLOTI_NAGRI = 58;
     * }
     */
    public static int PANGO_SCRIPT_SYLOTI_NAGRI() {
        return (int)58L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_OLD_PERSIAN = 59;
     * }
     */
    public static int PANGO_SCRIPT_OLD_PERSIAN() {
        return (int)59L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_KHAROSHTHI = 60;
     * }
     */
    public static int PANGO_SCRIPT_KHAROSHTHI() {
        return (int)60L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_UNKNOWN = 61;
     * }
     */
    public static int PANGO_SCRIPT_UNKNOWN() {
        return (int)61L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_BALINESE = 62;
     * }
     */
    public static int PANGO_SCRIPT_BALINESE() {
        return (int)62L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_CUNEIFORM = 63;
     * }
     */
    public static int PANGO_SCRIPT_CUNEIFORM() {
        return (int)63L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_PHOENICIAN = 64;
     * }
     */
    public static int PANGO_SCRIPT_PHOENICIAN() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_PHAGS_PA = 65;
     * }
     */
    public static int PANGO_SCRIPT_PHAGS_PA() {
        return (int)65L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_NKO = 66;
     * }
     */
    public static int PANGO_SCRIPT_NKO() {
        return (int)66L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_KAYAH_LI = 67;
     * }
     */
    public static int PANGO_SCRIPT_KAYAH_LI() {
        return (int)67L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_LEPCHA = 68;
     * }
     */
    public static int PANGO_SCRIPT_LEPCHA() {
        return (int)68L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_REJANG = 69;
     * }
     */
    public static int PANGO_SCRIPT_REJANG() {
        return (int)69L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_SUNDANESE = 70;
     * }
     */
    public static int PANGO_SCRIPT_SUNDANESE() {
        return (int)70L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_SAURASHTRA = 71;
     * }
     */
    public static int PANGO_SCRIPT_SAURASHTRA() {
        return (int)71L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_CHAM = 72;
     * }
     */
    public static int PANGO_SCRIPT_CHAM() {
        return (int)72L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_OL_CHIKI = 73;
     * }
     */
    public static int PANGO_SCRIPT_OL_CHIKI() {
        return (int)73L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_VAI = 74;
     * }
     */
    public static int PANGO_SCRIPT_VAI() {
        return (int)74L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_CARIAN = 75;
     * }
     */
    public static int PANGO_SCRIPT_CARIAN() {
        return (int)75L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_LYCIAN = 76;
     * }
     */
    public static int PANGO_SCRIPT_LYCIAN() {
        return (int)76L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_LYDIAN = 77;
     * }
     */
    public static int PANGO_SCRIPT_LYDIAN() {
        return (int)77L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_BATAK = 78;
     * }
     */
    public static int PANGO_SCRIPT_BATAK() {
        return (int)78L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_BRAHMI = 79;
     * }
     */
    public static int PANGO_SCRIPT_BRAHMI() {
        return (int)79L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_MANDAIC = 80;
     * }
     */
    public static int PANGO_SCRIPT_MANDAIC() {
        return (int)80L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_CHAKMA = 81;
     * }
     */
    public static int PANGO_SCRIPT_CHAKMA() {
        return (int)81L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_MEROITIC_CURSIVE = 82;
     * }
     */
    public static int PANGO_SCRIPT_MEROITIC_CURSIVE() {
        return (int)82L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_MEROITIC_HIEROGLYPHS = 83;
     * }
     */
    public static int PANGO_SCRIPT_MEROITIC_HIEROGLYPHS() {
        return (int)83L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_MIAO = 84;
     * }
     */
    public static int PANGO_SCRIPT_MIAO() {
        return (int)84L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_SHARADA = 85;
     * }
     */
    public static int PANGO_SCRIPT_SHARADA() {
        return (int)85L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_SORA_SOMPENG = 86;
     * }
     */
    public static int PANGO_SCRIPT_SORA_SOMPENG() {
        return (int)86L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_TAKRI = 87;
     * }
     */
    public static int PANGO_SCRIPT_TAKRI() {
        return (int)87L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_BASSA_VAH = 88;
     * }
     */
    public static int PANGO_SCRIPT_BASSA_VAH() {
        return (int)88L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_CAUCASIAN_ALBANIAN = 89;
     * }
     */
    public static int PANGO_SCRIPT_CAUCASIAN_ALBANIAN() {
        return (int)89L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_DUPLOYAN = 90;
     * }
     */
    public static int PANGO_SCRIPT_DUPLOYAN() {
        return (int)90L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_ELBASAN = 91;
     * }
     */
    public static int PANGO_SCRIPT_ELBASAN() {
        return (int)91L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_GRANTHA = 92;
     * }
     */
    public static int PANGO_SCRIPT_GRANTHA() {
        return (int)92L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_KHOJKI = 93;
     * }
     */
    public static int PANGO_SCRIPT_KHOJKI() {
        return (int)93L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_KHUDAWADI = 94;
     * }
     */
    public static int PANGO_SCRIPT_KHUDAWADI() {
        return (int)94L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_LINEAR_A = 95;
     * }
     */
    public static int PANGO_SCRIPT_LINEAR_A() {
        return (int)95L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_MAHAJANI = 96;
     * }
     */
    public static int PANGO_SCRIPT_MAHAJANI() {
        return (int)96L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_MANICHAEAN = 97;
     * }
     */
    public static int PANGO_SCRIPT_MANICHAEAN() {
        return (int)97L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_MENDE_KIKAKUI = 98;
     * }
     */
    public static int PANGO_SCRIPT_MENDE_KIKAKUI() {
        return (int)98L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_MODI = 99;
     * }
     */
    public static int PANGO_SCRIPT_MODI() {
        return (int)99L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_MRO = 100;
     * }
     */
    public static int PANGO_SCRIPT_MRO() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_NABATAEAN = 101;
     * }
     */
    public static int PANGO_SCRIPT_NABATAEAN() {
        return (int)101L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_OLD_NORTH_ARABIAN = 102;
     * }
     */
    public static int PANGO_SCRIPT_OLD_NORTH_ARABIAN() {
        return (int)102L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_OLD_PERMIC = 103;
     * }
     */
    public static int PANGO_SCRIPT_OLD_PERMIC() {
        return (int)103L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_PAHAWH_HMONG = 104;
     * }
     */
    public static int PANGO_SCRIPT_PAHAWH_HMONG() {
        return (int)104L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_PALMYRENE = 105;
     * }
     */
    public static int PANGO_SCRIPT_PALMYRENE() {
        return (int)105L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_PAU_CIN_HAU = 106;
     * }
     */
    public static int PANGO_SCRIPT_PAU_CIN_HAU() {
        return (int)106L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_PSALTER_PAHLAVI = 107;
     * }
     */
    public static int PANGO_SCRIPT_PSALTER_PAHLAVI() {
        return (int)107L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_SIDDHAM = 108;
     * }
     */
    public static int PANGO_SCRIPT_SIDDHAM() {
        return (int)108L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_TIRHUTA = 109;
     * }
     */
    public static int PANGO_SCRIPT_TIRHUTA() {
        return (int)109L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_WARANG_CITI = 110;
     * }
     */
    public static int PANGO_SCRIPT_WARANG_CITI() {
        return (int)110L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_AHOM = 111;
     * }
     */
    public static int PANGO_SCRIPT_AHOM() {
        return (int)111L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_ANATOLIAN_HIEROGLYPHS = 112;
     * }
     */
    public static int PANGO_SCRIPT_ANATOLIAN_HIEROGLYPHS() {
        return (int)112L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_HATRAN = 113;
     * }
     */
    public static int PANGO_SCRIPT_HATRAN() {
        return (int)113L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_MULTANI = 114;
     * }
     */
    public static int PANGO_SCRIPT_MULTANI() {
        return (int)114L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_OLD_HUNGARIAN = 115;
     * }
     */
    public static int PANGO_SCRIPT_OLD_HUNGARIAN() {
        return (int)115L;
    }
    /**
     * {@snippet :
     * enum PangoScript.PANGO_SCRIPT_SIGNWRITING = 116;
     * }
     */
    public static int PANGO_SCRIPT_SIGNWRITING() {
        return (int)116L;
    }
    public static MethodHandle pango_script_for_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.const$0,"pango_script_for_unichar");
    }
    /**
     * {@snippet :
     * enum PangoScript pango_script_for_unichar(unsigned int ch);
     * }
     */
    public static int pango_script_for_unichar(int ch) {
        var mh$ = pango_script_for_unichar$MH();
        try {
            return (int)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_script_iter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.const$1,"pango_script_iter_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_script_iter_get_type();
     * }
     */
    public static long pango_script_iter_get_type() {
        var mh$ = pango_script_iter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_script_iter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.const$2,"pango_script_iter_new");
    }
    /**
     * {@snippet :
     * struct _PangoScriptIter* pango_script_iter_new(char* text, int length);
     * }
     */
    public static MemorySegment pango_script_iter_new(MemorySegment text, int length) {
        var mh$ = pango_script_iter_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_script_iter_get_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.const$3,"pango_script_iter_get_range");
    }
    /**
     * {@snippet :
     * void pango_script_iter_get_range(struct _PangoScriptIter* iter, char** start, char** end, enum PangoScript* script);
     * }
     */
    public static void pango_script_iter_get_range(MemorySegment iter, MemorySegment start, MemorySegment end, MemorySegment script) {
        var mh$ = pango_script_iter_get_range$MH();
        try {
            mh$.invokeExact(iter, start, end, script);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_script_iter_next$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.const$4,"pango_script_iter_next");
    }
    /**
     * {@snippet :
     * int pango_script_iter_next(struct _PangoScriptIter* iter);
     * }
     */
    public static int pango_script_iter_next(MemorySegment iter) {
        var mh$ = pango_script_iter_next$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_script_iter_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.const$5,"pango_script_iter_free");
    }
    /**
     * {@snippet :
     * void pango_script_iter_free(struct _PangoScriptIter* iter);
     * }
     */
    public static void pango_script_iter_free(MemorySegment iter) {
        var mh$ = pango_script_iter_free$MH();
        try {
            mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_language_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.const$0,"pango_language_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_language_get_type();
     * }
     */
    public static long pango_language_get_type() {
        var mh$ = pango_language_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_language_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.const$1,"pango_language_get_default");
    }
    /**
     * {@snippet :
     * struct _PangoLanguage* pango_language_get_default();
     * }
     */
    public static MemorySegment pango_language_get_default() {
        var mh$ = pango_language_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_language_get_preferred$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.const$2,"pango_language_get_preferred");
    }
    /**
     * {@snippet :
     * struct _PangoLanguage** pango_language_get_preferred();
     * }
     */
    public static MemorySegment pango_language_get_preferred() {
        var mh$ = pango_language_get_preferred$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_language_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.const$3,"pango_language_from_string");
    }
    /**
     * {@snippet :
     * struct _PangoLanguage* pango_language_from_string(char* language);
     * }
     */
    public static MemorySegment pango_language_from_string(MemorySegment language) {
        var mh$ = pango_language_from_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_language_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.const$4,"pango_language_to_string");
    }
    /**
     * {@snippet :
     * char* pango_language_to_string(struct _PangoLanguage* language);
     * }
     */
    public static MemorySegment pango_language_to_string(MemorySegment language) {
        var mh$ = pango_language_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_language_get_sample_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.const$5,"pango_language_get_sample_string");
    }
    /**
     * {@snippet :
     * char* pango_language_get_sample_string(struct _PangoLanguage* language);
     * }
     */
    public static MemorySegment pango_language_get_sample_string(MemorySegment language) {
        var mh$ = pango_language_get_sample_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_language_matches$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.const$0,"pango_language_matches");
    }
    /**
     * {@snippet :
     * int pango_language_matches(struct _PangoLanguage* language, char* range_list);
     * }
     */
    public static int pango_language_matches(MemorySegment language, MemorySegment range_list) {
        var mh$ = pango_language_matches$MH();
        try {
            return (int)mh$.invokeExact(language, range_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_language_includes_script$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.const$1,"pango_language_includes_script");
    }
    /**
     * {@snippet :
     * int pango_language_includes_script(struct _PangoLanguage* language, enum PangoScript script);
     * }
     */
    public static int pango_language_includes_script(MemorySegment language, int script) {
        var mh$ = pango_language_includes_script$MH();
        try {
            return (int)mh$.invokeExact(language, script);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_language_get_scripts$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.const$2,"pango_language_get_scripts");
    }
    /**
     * {@snippet :
     * enum PangoScript* pango_language_get_scripts(struct _PangoLanguage* language, int* num_scripts);
     * }
     */
    public static MemorySegment pango_language_get_scripts(MemorySegment language, MemorySegment num_scripts) {
        var mh$ = pango_language_get_scripts$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(language, num_scripts);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_script_get_sample_language$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.const$3,"pango_script_get_sample_language");
    }
    /**
     * {@snippet :
     * struct _PangoLanguage* pango_script_get_sample_language(enum PangoScript script);
     * }
     */
    public static MemorySegment pango_script_get_sample_language(int script) {
        var mh$ = pango_script_get_sample_language$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(script);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_gravity_to_rotation$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.const$4,"pango_gravity_to_rotation");
    }
    /**
     * {@snippet :
     * double pango_gravity_to_rotation(enum PangoGravity gravity);
     * }
     */
    public static double pango_gravity_to_rotation(int gravity) {
        var mh$ = pango_gravity_to_rotation$MH();
        try {
            return (double)mh$.invokeExact(gravity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_gravity_get_for_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.const$5,"pango_gravity_get_for_matrix");
    }
    /**
     * {@snippet :
     * enum PangoGravity pango_gravity_get_for_matrix(struct _PangoMatrix* matrix);
     * }
     */
    public static int pango_gravity_get_for_matrix(MemorySegment matrix) {
        var mh$ = pango_gravity_get_for_matrix$MH();
        try {
            return (int)mh$.invokeExact(matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_gravity_get_for_script$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.const$0,"pango_gravity_get_for_script");
    }
    /**
     * {@snippet :
     * enum PangoGravity pango_gravity_get_for_script(enum PangoScript script, enum PangoGravity base_gravity, enum PangoGravityHint hint);
     * }
     */
    public static int pango_gravity_get_for_script(int script, int base_gravity, int hint) {
        var mh$ = pango_gravity_get_for_script$MH();
        try {
            return (int)mh$.invokeExact(script, base_gravity, hint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_gravity_get_for_script_and_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.const$2,"pango_gravity_get_for_script_and_width");
    }
    /**
     * {@snippet :
     * enum PangoGravity pango_gravity_get_for_script_and_width(enum PangoScript script, int wide, enum PangoGravity base_gravity, enum PangoGravityHint hint);
     * }
     */
    public static int pango_gravity_get_for_script_and_width(int script, int wide, int base_gravity, int hint) {
        var mh$ = pango_gravity_get_for_script_and_width$MH();
        try {
            return (int)mh$.invokeExact(script, wide, base_gravity, hint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum PangoDirection.PANGO_DIRECTION_LTR = 0;
     * }
     */
    public static int PANGO_DIRECTION_LTR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoDirection.PANGO_DIRECTION_RTL = 1;
     * }
     */
    public static int PANGO_DIRECTION_RTL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoDirection.PANGO_DIRECTION_TTB_LTR = 2;
     * }
     */
    public static int PANGO_DIRECTION_TTB_LTR() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum PangoDirection.PANGO_DIRECTION_TTB_RTL = 3;
     * }
     */
    public static int PANGO_DIRECTION_TTB_RTL() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum PangoDirection.PANGO_DIRECTION_WEAK_LTR = 4;
     * }
     */
    public static int PANGO_DIRECTION_WEAK_LTR() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum PangoDirection.PANGO_DIRECTION_WEAK_RTL = 5;
     * }
     */
    public static int PANGO_DIRECTION_WEAK_RTL() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum PangoDirection.PANGO_DIRECTION_NEUTRAL = 6;
     * }
     */
    public static int PANGO_DIRECTION_NEUTRAL() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_L = 0;
     * }
     */
    public static int PANGO_BIDI_TYPE_L() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_LRE = 1;
     * }
     */
    public static int PANGO_BIDI_TYPE_LRE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_LRO = 2;
     * }
     */
    public static int PANGO_BIDI_TYPE_LRO() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_R = 3;
     * }
     */
    public static int PANGO_BIDI_TYPE_R() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_AL = 4;
     * }
     */
    public static int PANGO_BIDI_TYPE_AL() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_RLE = 5;
     * }
     */
    public static int PANGO_BIDI_TYPE_RLE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_RLO = 6;
     * }
     */
    public static int PANGO_BIDI_TYPE_RLO() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_PDF = 7;
     * }
     */
    public static int PANGO_BIDI_TYPE_PDF() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_EN = 8;
     * }
     */
    public static int PANGO_BIDI_TYPE_EN() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_ES = 9;
     * }
     */
    public static int PANGO_BIDI_TYPE_ES() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_ET = 10;
     * }
     */
    public static int PANGO_BIDI_TYPE_ET() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_AN = 11;
     * }
     */
    public static int PANGO_BIDI_TYPE_AN() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_CS = 12;
     * }
     */
    public static int PANGO_BIDI_TYPE_CS() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_NSM = 13;
     * }
     */
    public static int PANGO_BIDI_TYPE_NSM() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_BN = 14;
     * }
     */
    public static int PANGO_BIDI_TYPE_BN() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_B = 15;
     * }
     */
    public static int PANGO_BIDI_TYPE_B() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_S = 16;
     * }
     */
    public static int PANGO_BIDI_TYPE_S() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_WS = 17;
     * }
     */
    public static int PANGO_BIDI_TYPE_WS() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_ON = 18;
     * }
     */
    public static int PANGO_BIDI_TYPE_ON() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_LRI = 19;
     * }
     */
    public static int PANGO_BIDI_TYPE_LRI() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_RLI = 20;
     * }
     */
    public static int PANGO_BIDI_TYPE_RLI() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_FSI = 21;
     * }
     */
    public static int PANGO_BIDI_TYPE_FSI() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum PangoBidiType.PANGO_BIDI_TYPE_PDI = 22;
     * }
     */
    public static int PANGO_BIDI_TYPE_PDI() {
        return (int)22L;
    }
    public static MethodHandle pango_bidi_type_for_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.const$3,"pango_bidi_type_for_unichar");
    }
    /**
     * {@snippet :
     * enum PangoBidiType pango_bidi_type_for_unichar(unsigned int ch);
     * }
     */
    public static int pango_bidi_type_for_unichar(int ch) {
        var mh$ = pango_bidi_type_for_unichar$MH();
        try {
            return (int)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_unichar_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.const$4,"pango_unichar_direction");
    }
    /**
     * {@snippet :
     * enum PangoDirection pango_unichar_direction(unsigned int ch);
     * }
     */
    public static int pango_unichar_direction(int ch) {
        var mh$ = pango_unichar_direction$MH();
        try {
            return (int)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_find_base_dir$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.const$5,"pango_find_base_dir");
    }
    /**
     * {@snippet :
     * enum PangoDirection pango_find_base_dir(char* text, int length);
     * }
     */
    public static int pango_find_base_dir(MemorySegment text, int length) {
        var mh$ = pango_find_base_dir$MH();
        try {
            return (int)mh$.invokeExact(text, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_get_mirror_char$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.const$0,"pango_get_mirror_char");
    }
    /**
     * {@snippet :
     * int pango_get_mirror_char(unsigned int ch, unsigned int* mirrored_ch);
     * }
     */
    public static int pango_get_mirror_char(int ch, MemorySegment mirrored_ch) {
        var mh$ = pango_get_mirror_char$MH();
        try {
            return (int)mh$.invokeExact(ch, mirrored_ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum PangoStyle.PANGO_STYLE_NORMAL = 0;
     * }
     */
    public static int PANGO_STYLE_NORMAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoStyle.PANGO_STYLE_OBLIQUE = 1;
     * }
     */
    public static int PANGO_STYLE_OBLIQUE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoStyle.PANGO_STYLE_ITALIC = 2;
     * }
     */
    public static int PANGO_STYLE_ITALIC() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum PangoVariant.PANGO_VARIANT_NORMAL = 0;
     * }
     */
    public static int PANGO_VARIANT_NORMAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoVariant.PANGO_VARIANT_SMALL_CAPS = 1;
     * }
     */
    public static int PANGO_VARIANT_SMALL_CAPS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoVariant.PANGO_VARIANT_ALL_SMALL_CAPS = 2;
     * }
     */
    public static int PANGO_VARIANT_ALL_SMALL_CAPS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum PangoVariant.PANGO_VARIANT_PETITE_CAPS = 3;
     * }
     */
    public static int PANGO_VARIANT_PETITE_CAPS() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum PangoVariant.PANGO_VARIANT_ALL_PETITE_CAPS = 4;
     * }
     */
    public static int PANGO_VARIANT_ALL_PETITE_CAPS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum PangoVariant.PANGO_VARIANT_UNICASE = 5;
     * }
     */
    public static int PANGO_VARIANT_UNICASE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum PangoVariant.PANGO_VARIANT_TITLE_CAPS = 6;
     * }
     */
    public static int PANGO_VARIANT_TITLE_CAPS() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum PangoWeight.PANGO_WEIGHT_THIN = 100;
     * }
     */
    public static int PANGO_WEIGHT_THIN() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * enum PangoWeight.PANGO_WEIGHT_ULTRALIGHT = 200;
     * }
     */
    public static int PANGO_WEIGHT_ULTRALIGHT() {
        return (int)200L;
    }
    /**
     * {@snippet :
     * enum PangoWeight.PANGO_WEIGHT_LIGHT = 300;
     * }
     */
    public static int PANGO_WEIGHT_LIGHT() {
        return (int)300L;
    }
    /**
     * {@snippet :
     * enum PangoWeight.PANGO_WEIGHT_SEMILIGHT = 350;
     * }
     */
    public static int PANGO_WEIGHT_SEMILIGHT() {
        return (int)350L;
    }
    /**
     * {@snippet :
     * enum PangoWeight.PANGO_WEIGHT_BOOK = 380;
     * }
     */
    public static int PANGO_WEIGHT_BOOK() {
        return (int)380L;
    }
    /**
     * {@snippet :
     * enum PangoWeight.PANGO_WEIGHT_NORMAL = 400;
     * }
     */
    public static int PANGO_WEIGHT_NORMAL() {
        return (int)400L;
    }
    /**
     * {@snippet :
     * enum PangoWeight.PANGO_WEIGHT_MEDIUM = 500;
     * }
     */
    public static int PANGO_WEIGHT_MEDIUM() {
        return (int)500L;
    }
    /**
     * {@snippet :
     * enum PangoWeight.PANGO_WEIGHT_SEMIBOLD = 600;
     * }
     */
    public static int PANGO_WEIGHT_SEMIBOLD() {
        return (int)600L;
    }
    /**
     * {@snippet :
     * enum PangoWeight.PANGO_WEIGHT_BOLD = 700;
     * }
     */
    public static int PANGO_WEIGHT_BOLD() {
        return (int)700L;
    }
    /**
     * {@snippet :
     * enum PangoWeight.PANGO_WEIGHT_ULTRABOLD = 800;
     * }
     */
    public static int PANGO_WEIGHT_ULTRABOLD() {
        return (int)800L;
    }
    /**
     * {@snippet :
     * enum PangoWeight.PANGO_WEIGHT_HEAVY = 900;
     * }
     */
    public static int PANGO_WEIGHT_HEAVY() {
        return (int)900L;
    }
    /**
     * {@snippet :
     * enum PangoWeight.PANGO_WEIGHT_ULTRAHEAVY = 1000;
     * }
     */
    public static int PANGO_WEIGHT_ULTRAHEAVY() {
        return (int)1000L;
    }
    /**
     * {@snippet :
     * enum PangoStretch.PANGO_STRETCH_ULTRA_CONDENSED = 0;
     * }
     */
    public static int PANGO_STRETCH_ULTRA_CONDENSED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoStretch.PANGO_STRETCH_EXTRA_CONDENSED = 1;
     * }
     */
    public static int PANGO_STRETCH_EXTRA_CONDENSED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoStretch.PANGO_STRETCH_CONDENSED = 2;
     * }
     */
    public static int PANGO_STRETCH_CONDENSED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum PangoStretch.PANGO_STRETCH_SEMI_CONDENSED = 3;
     * }
     */
    public static int PANGO_STRETCH_SEMI_CONDENSED() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum PangoStretch.PANGO_STRETCH_NORMAL = 4;
     * }
     */
    public static int PANGO_STRETCH_NORMAL() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum PangoStretch.PANGO_STRETCH_SEMI_EXPANDED = 5;
     * }
     */
    public static int PANGO_STRETCH_SEMI_EXPANDED() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum PangoStretch.PANGO_STRETCH_EXPANDED = 6;
     * }
     */
    public static int PANGO_STRETCH_EXPANDED() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum PangoStretch.PANGO_STRETCH_EXTRA_EXPANDED = 7;
     * }
     */
    public static int PANGO_STRETCH_EXTRA_EXPANDED() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum PangoStretch.PANGO_STRETCH_ULTRA_EXPANDED = 8;
     * }
     */
    public static int PANGO_STRETCH_ULTRA_EXPANDED() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum PangoFontMask.PANGO_FONT_MASK_FAMILY = 1;
     * }
     */
    public static int PANGO_FONT_MASK_FAMILY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoFontMask.PANGO_FONT_MASK_STYLE = 2;
     * }
     */
    public static int PANGO_FONT_MASK_STYLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum PangoFontMask.PANGO_FONT_MASK_VARIANT = 4;
     * }
     */
    public static int PANGO_FONT_MASK_VARIANT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum PangoFontMask.PANGO_FONT_MASK_WEIGHT = 8;
     * }
     */
    public static int PANGO_FONT_MASK_WEIGHT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum PangoFontMask.PANGO_FONT_MASK_STRETCH = 16;
     * }
     */
    public static int PANGO_FONT_MASK_STRETCH() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum PangoFontMask.PANGO_FONT_MASK_SIZE = 32;
     * }
     */
    public static int PANGO_FONT_MASK_SIZE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum PangoFontMask.PANGO_FONT_MASK_GRAVITY = 64;
     * }
     */
    public static int PANGO_FONT_MASK_GRAVITY() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum PangoFontMask.PANGO_FONT_MASK_VARIATIONS = 128;
     * }
     */
    public static int PANGO_FONT_MASK_VARIATIONS() {
        return (int)128L;
    }
    public static MethodHandle pango_font_description_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.const$1,"pango_font_description_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_font_description_get_type();
     * }
     */
    public static long pango_font_description_get_type() {
        var mh$ = pango_font_description_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.const$2,"pango_font_description_new");
    }
    /**
     * {@snippet :
     * struct _PangoFontDescription* pango_font_description_new();
     * }
     */
    public static MemorySegment pango_font_description_new() {
        var mh$ = pango_font_description_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.const$3,"pango_font_description_copy");
    }
    /**
     * {@snippet :
     * struct _PangoFontDescription* pango_font_description_copy(struct _PangoFontDescription* desc);
     * }
     */
    public static MemorySegment pango_font_description_copy(MemorySegment desc) {
        var mh$ = pango_font_description_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_copy_static$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.const$4,"pango_font_description_copy_static");
    }
    /**
     * {@snippet :
     * struct _PangoFontDescription* pango_font_description_copy_static(struct _PangoFontDescription* desc);
     * }
     */
    public static MemorySegment pango_font_description_copy_static(MemorySegment desc) {
        var mh$ = pango_font_description_copy_static$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.const$5,"pango_font_description_hash");
    }
    /**
     * {@snippet :
     * unsigned int pango_font_description_hash(struct _PangoFontDescription* desc);
     * }
     */
    public static int pango_font_description_hash(MemorySegment desc) {
        var mh$ = pango_font_description_hash$MH();
        try {
            return (int)mh$.invokeExact(desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1538.const$0,"pango_font_description_equal");
    }
    /**
     * {@snippet :
     * int pango_font_description_equal(struct _PangoFontDescription* desc1, struct _PangoFontDescription* desc2);
     * }
     */
    public static int pango_font_description_equal(MemorySegment desc1, MemorySegment desc2) {
        var mh$ = pango_font_description_equal$MH();
        try {
            return (int)mh$.invokeExact(desc1, desc2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1538.const$1,"pango_font_description_free");
    }
    /**
     * {@snippet :
     * void pango_font_description_free(struct _PangoFontDescription* desc);
     * }
     */
    public static void pango_font_description_free(MemorySegment desc) {
        var mh$ = pango_font_description_free$MH();
        try {
            mh$.invokeExact(desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_descriptions_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1538.const$2,"pango_font_descriptions_free");
    }
    /**
     * {@snippet :
     * void pango_font_descriptions_free(struct _PangoFontDescription** descs, int n_descs);
     * }
     */
    public static void pango_font_descriptions_free(MemorySegment descs, int n_descs) {
        var mh$ = pango_font_descriptions_free$MH();
        try {
            mh$.invokeExact(descs, n_descs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_set_family$MH() {
        return RuntimeHelper.requireNonNull(constants$1538.const$3,"pango_font_description_set_family");
    }
    /**
     * {@snippet :
     * void pango_font_description_set_family(struct _PangoFontDescription* desc, char* family);
     * }
     */
    public static void pango_font_description_set_family(MemorySegment desc, MemorySegment family) {
        var mh$ = pango_font_description_set_family$MH();
        try {
            mh$.invokeExact(desc, family);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_set_family_static$MH() {
        return RuntimeHelper.requireNonNull(constants$1538.const$4,"pango_font_description_set_family_static");
    }
    /**
     * {@snippet :
     * void pango_font_description_set_family_static(struct _PangoFontDescription* desc, char* family);
     * }
     */
    public static void pango_font_description_set_family_static(MemorySegment desc, MemorySegment family) {
        var mh$ = pango_font_description_set_family_static$MH();
        try {
            mh$.invokeExact(desc, family);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_get_family$MH() {
        return RuntimeHelper.requireNonNull(constants$1538.const$5,"pango_font_description_get_family");
    }
    /**
     * {@snippet :
     * char* pango_font_description_get_family(struct _PangoFontDescription* desc);
     * }
     */
    public static MemorySegment pango_font_description_get_family(MemorySegment desc) {
        var mh$ = pango_font_description_get_family$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_set_style$MH() {
        return RuntimeHelper.requireNonNull(constants$1539.const$0,"pango_font_description_set_style");
    }
    /**
     * {@snippet :
     * void pango_font_description_set_style(struct _PangoFontDescription* desc, enum PangoStyle style);
     * }
     */
    public static void pango_font_description_set_style(MemorySegment desc, int style) {
        var mh$ = pango_font_description_set_style$MH();
        try {
            mh$.invokeExact(desc, style);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_get_style$MH() {
        return RuntimeHelper.requireNonNull(constants$1539.const$1,"pango_font_description_get_style");
    }
    /**
     * {@snippet :
     * enum PangoStyle pango_font_description_get_style(struct _PangoFontDescription* desc);
     * }
     */
    public static int pango_font_description_get_style(MemorySegment desc) {
        var mh$ = pango_font_description_get_style$MH();
        try {
            return (int)mh$.invokeExact(desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_set_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$1539.const$2,"pango_font_description_set_variant");
    }
    /**
     * {@snippet :
     * void pango_font_description_set_variant(struct _PangoFontDescription* desc, enum PangoVariant variant);
     * }
     */
    public static void pango_font_description_set_variant(MemorySegment desc, int variant) {
        var mh$ = pango_font_description_set_variant$MH();
        try {
            mh$.invokeExact(desc, variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_get_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$1539.const$3,"pango_font_description_get_variant");
    }
    /**
     * {@snippet :
     * enum PangoVariant pango_font_description_get_variant(struct _PangoFontDescription* desc);
     * }
     */
    public static int pango_font_description_get_variant(MemorySegment desc) {
        var mh$ = pango_font_description_get_variant$MH();
        try {
            return (int)mh$.invokeExact(desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_set_weight$MH() {
        return RuntimeHelper.requireNonNull(constants$1539.const$4,"pango_font_description_set_weight");
    }
    /**
     * {@snippet :
     * void pango_font_description_set_weight(struct _PangoFontDescription* desc, enum PangoWeight weight);
     * }
     */
    public static void pango_font_description_set_weight(MemorySegment desc, int weight) {
        var mh$ = pango_font_description_set_weight$MH();
        try {
            mh$.invokeExact(desc, weight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_get_weight$MH() {
        return RuntimeHelper.requireNonNull(constants$1539.const$5,"pango_font_description_get_weight");
    }
    /**
     * {@snippet :
     * enum PangoWeight pango_font_description_get_weight(struct _PangoFontDescription* desc);
     * }
     */
    public static int pango_font_description_get_weight(MemorySegment desc) {
        var mh$ = pango_font_description_get_weight$MH();
        try {
            return (int)mh$.invokeExact(desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_set_stretch$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.const$0,"pango_font_description_set_stretch");
    }
    /**
     * {@snippet :
     * void pango_font_description_set_stretch(struct _PangoFontDescription* desc, enum PangoStretch stretch);
     * }
     */
    public static void pango_font_description_set_stretch(MemorySegment desc, int stretch) {
        var mh$ = pango_font_description_set_stretch$MH();
        try {
            mh$.invokeExact(desc, stretch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_get_stretch$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.const$1,"pango_font_description_get_stretch");
    }
    /**
     * {@snippet :
     * enum PangoStretch pango_font_description_get_stretch(struct _PangoFontDescription* desc);
     * }
     */
    public static int pango_font_description_get_stretch(MemorySegment desc) {
        var mh$ = pango_font_description_get_stretch$MH();
        try {
            return (int)mh$.invokeExact(desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_set_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.const$2,"pango_font_description_set_size");
    }
    /**
     * {@snippet :
     * void pango_font_description_set_size(struct _PangoFontDescription* desc, int size);
     * }
     */
    public static void pango_font_description_set_size(MemorySegment desc, int size) {
        var mh$ = pango_font_description_set_size$MH();
        try {
            mh$.invokeExact(desc, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.const$3,"pango_font_description_get_size");
    }
    /**
     * {@snippet :
     * int pango_font_description_get_size(struct _PangoFontDescription* desc);
     * }
     */
    public static int pango_font_description_get_size(MemorySegment desc) {
        var mh$ = pango_font_description_get_size$MH();
        try {
            return (int)mh$.invokeExact(desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_set_absolute_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.const$4,"pango_font_description_set_absolute_size");
    }
    /**
     * {@snippet :
     * void pango_font_description_set_absolute_size(struct _PangoFontDescription* desc, double size);
     * }
     */
    public static void pango_font_description_set_absolute_size(MemorySegment desc, double size) {
        var mh$ = pango_font_description_set_absolute_size$MH();
        try {
            mh$.invokeExact(desc, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_get_size_is_absolute$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.const$5,"pango_font_description_get_size_is_absolute");
    }
    /**
     * {@snippet :
     * int pango_font_description_get_size_is_absolute(struct _PangoFontDescription* desc);
     * }
     */
    public static int pango_font_description_get_size_is_absolute(MemorySegment desc) {
        var mh$ = pango_font_description_get_size_is_absolute$MH();
        try {
            return (int)mh$.invokeExact(desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_set_gravity$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.const$0,"pango_font_description_set_gravity");
    }
    /**
     * {@snippet :
     * void pango_font_description_set_gravity(struct _PangoFontDescription* desc, enum PangoGravity gravity);
     * }
     */
    public static void pango_font_description_set_gravity(MemorySegment desc, int gravity) {
        var mh$ = pango_font_description_set_gravity$MH();
        try {
            mh$.invokeExact(desc, gravity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_get_gravity$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.const$1,"pango_font_description_get_gravity");
    }
    /**
     * {@snippet :
     * enum PangoGravity pango_font_description_get_gravity(struct _PangoFontDescription* desc);
     * }
     */
    public static int pango_font_description_get_gravity(MemorySegment desc) {
        var mh$ = pango_font_description_get_gravity$MH();
        try {
            return (int)mh$.invokeExact(desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_set_variations_static$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.const$2,"pango_font_description_set_variations_static");
    }
    /**
     * {@snippet :
     * void pango_font_description_set_variations_static(struct _PangoFontDescription* desc, char* variations);
     * }
     */
    public static void pango_font_description_set_variations_static(MemorySegment desc, MemorySegment variations) {
        var mh$ = pango_font_description_set_variations_static$MH();
        try {
            mh$.invokeExact(desc, variations);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_set_variations$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.const$3,"pango_font_description_set_variations");
    }
    /**
     * {@snippet :
     * void pango_font_description_set_variations(struct _PangoFontDescription* desc, char* variations);
     * }
     */
    public static void pango_font_description_set_variations(MemorySegment desc, MemorySegment variations) {
        var mh$ = pango_font_description_set_variations$MH();
        try {
            mh$.invokeExact(desc, variations);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_get_variations$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.const$4,"pango_font_description_get_variations");
    }
    /**
     * {@snippet :
     * char* pango_font_description_get_variations(struct _PangoFontDescription* desc);
     * }
     */
    public static MemorySegment pango_font_description_get_variations(MemorySegment desc) {
        var mh$ = pango_font_description_get_variations$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_get_set_fields$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.const$5,"pango_font_description_get_set_fields");
    }
    /**
     * {@snippet :
     * enum PangoFontMask pango_font_description_get_set_fields(struct _PangoFontDescription* desc);
     * }
     */
    public static int pango_font_description_get_set_fields(MemorySegment desc) {
        var mh$ = pango_font_description_get_set_fields$MH();
        try {
            return (int)mh$.invokeExact(desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_unset_fields$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.const$0,"pango_font_description_unset_fields");
    }
    /**
     * {@snippet :
     * void pango_font_description_unset_fields(struct _PangoFontDescription* desc, enum PangoFontMask to_unset);
     * }
     */
    public static void pango_font_description_unset_fields(MemorySegment desc, int to_unset) {
        var mh$ = pango_font_description_unset_fields$MH();
        try {
            mh$.invokeExact(desc, to_unset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_merge$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.const$1,"pango_font_description_merge");
    }
    /**
     * {@snippet :
     * void pango_font_description_merge(struct _PangoFontDescription* desc, struct _PangoFontDescription* desc_to_merge, int replace_existing);
     * }
     */
    public static void pango_font_description_merge(MemorySegment desc, MemorySegment desc_to_merge, int replace_existing) {
        var mh$ = pango_font_description_merge$MH();
        try {
            mh$.invokeExact(desc, desc_to_merge, replace_existing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_merge_static$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.const$2,"pango_font_description_merge_static");
    }
    /**
     * {@snippet :
     * void pango_font_description_merge_static(struct _PangoFontDescription* desc, struct _PangoFontDescription* desc_to_merge, int replace_existing);
     * }
     */
    public static void pango_font_description_merge_static(MemorySegment desc, MemorySegment desc_to_merge, int replace_existing) {
        var mh$ = pango_font_description_merge_static$MH();
        try {
            mh$.invokeExact(desc, desc_to_merge, replace_existing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_better_match$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.const$3,"pango_font_description_better_match");
    }
    /**
     * {@snippet :
     * int pango_font_description_better_match(struct _PangoFontDescription* desc, struct _PangoFontDescription* old_match, struct _PangoFontDescription* new_match);
     * }
     */
    public static int pango_font_description_better_match(MemorySegment desc, MemorySegment old_match, MemorySegment new_match) {
        var mh$ = pango_font_description_better_match$MH();
        try {
            return (int)mh$.invokeExact(desc, old_match, new_match);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.const$4,"pango_font_description_from_string");
    }
    /**
     * {@snippet :
     * struct _PangoFontDescription* pango_font_description_from_string(char* str);
     * }
     */
    public static MemorySegment pango_font_description_from_string(MemorySegment str) {
        var mh$ = pango_font_description_from_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.const$5,"pango_font_description_to_string");
    }
    /**
     * {@snippet :
     * char* pango_font_description_to_string(struct _PangoFontDescription* desc);
     * }
     */
    public static MemorySegment pango_font_description_to_string(MemorySegment desc) {
        var mh$ = pango_font_description_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_description_to_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$1543.const$0,"pango_font_description_to_filename");
    }
    /**
     * {@snippet :
     * char* pango_font_description_to_filename(struct _PangoFontDescription* desc);
     * }
     */
    public static MemorySegment pango_font_description_to_filename(MemorySegment desc) {
        var mh$ = pango_font_description_to_filename$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_metrics_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.const$0,"pango_font_metrics_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_font_metrics_get_type();
     * }
     */
    public static long pango_font_metrics_get_type() {
        var mh$ = pango_font_metrics_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_metrics_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.const$1,"pango_font_metrics_ref");
    }
    /**
     * {@snippet :
     * struct _PangoFontMetrics* pango_font_metrics_ref(struct _PangoFontMetrics* metrics);
     * }
     */
    public static MemorySegment pango_font_metrics_ref(MemorySegment metrics) {
        var mh$ = pango_font_metrics_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(metrics);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_metrics_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.const$2,"pango_font_metrics_unref");
    }
    /**
     * {@snippet :
     * void pango_font_metrics_unref(struct _PangoFontMetrics* metrics);
     * }
     */
    public static void pango_font_metrics_unref(MemorySegment metrics) {
        var mh$ = pango_font_metrics_unref$MH();
        try {
            mh$.invokeExact(metrics);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_metrics_get_ascent$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.const$3,"pango_font_metrics_get_ascent");
    }
    /**
     * {@snippet :
     * int pango_font_metrics_get_ascent(struct _PangoFontMetrics* metrics);
     * }
     */
    public static int pango_font_metrics_get_ascent(MemorySegment metrics) {
        var mh$ = pango_font_metrics_get_ascent$MH();
        try {
            return (int)mh$.invokeExact(metrics);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_metrics_get_descent$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.const$4,"pango_font_metrics_get_descent");
    }
    /**
     * {@snippet :
     * int pango_font_metrics_get_descent(struct _PangoFontMetrics* metrics);
     * }
     */
    public static int pango_font_metrics_get_descent(MemorySegment metrics) {
        var mh$ = pango_font_metrics_get_descent$MH();
        try {
            return (int)mh$.invokeExact(metrics);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_metrics_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.const$5,"pango_font_metrics_get_height");
    }
    /**
     * {@snippet :
     * int pango_font_metrics_get_height(struct _PangoFontMetrics* metrics);
     * }
     */
    public static int pango_font_metrics_get_height(MemorySegment metrics) {
        var mh$ = pango_font_metrics_get_height$MH();
        try {
            return (int)mh$.invokeExact(metrics);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_metrics_get_approximate_char_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.const$0,"pango_font_metrics_get_approximate_char_width");
    }
    /**
     * {@snippet :
     * int pango_font_metrics_get_approximate_char_width(struct _PangoFontMetrics* metrics);
     * }
     */
    public static int pango_font_metrics_get_approximate_char_width(MemorySegment metrics) {
        var mh$ = pango_font_metrics_get_approximate_char_width$MH();
        try {
            return (int)mh$.invokeExact(metrics);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_metrics_get_approximate_digit_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.const$1,"pango_font_metrics_get_approximate_digit_width");
    }
    /**
     * {@snippet :
     * int pango_font_metrics_get_approximate_digit_width(struct _PangoFontMetrics* metrics);
     * }
     */
    public static int pango_font_metrics_get_approximate_digit_width(MemorySegment metrics) {
        var mh$ = pango_font_metrics_get_approximate_digit_width$MH();
        try {
            return (int)mh$.invokeExact(metrics);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_metrics_get_underline_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.const$2,"pango_font_metrics_get_underline_position");
    }
    /**
     * {@snippet :
     * int pango_font_metrics_get_underline_position(struct _PangoFontMetrics* metrics);
     * }
     */
    public static int pango_font_metrics_get_underline_position(MemorySegment metrics) {
        var mh$ = pango_font_metrics_get_underline_position$MH();
        try {
            return (int)mh$.invokeExact(metrics);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_metrics_get_underline_thickness$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.const$3,"pango_font_metrics_get_underline_thickness");
    }
    /**
     * {@snippet :
     * int pango_font_metrics_get_underline_thickness(struct _PangoFontMetrics* metrics);
     * }
     */
    public static int pango_font_metrics_get_underline_thickness(MemorySegment metrics) {
        var mh$ = pango_font_metrics_get_underline_thickness$MH();
        try {
            return (int)mh$.invokeExact(metrics);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_metrics_get_strikethrough_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.const$4,"pango_font_metrics_get_strikethrough_position");
    }
    /**
     * {@snippet :
     * int pango_font_metrics_get_strikethrough_position(struct _PangoFontMetrics* metrics);
     * }
     */
    public static int pango_font_metrics_get_strikethrough_position(MemorySegment metrics) {
        var mh$ = pango_font_metrics_get_strikethrough_position$MH();
        try {
            return (int)mh$.invokeExact(metrics);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_metrics_get_strikethrough_thickness$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.const$5,"pango_font_metrics_get_strikethrough_thickness");
    }
    /**
     * {@snippet :
     * int pango_font_metrics_get_strikethrough_thickness(struct _PangoFontMetrics* metrics);
     * }
     */
    public static int pango_font_metrics_get_strikethrough_thickness(MemorySegment metrics) {
        var mh$ = pango_font_metrics_get_strikethrough_thickness$MH();
        try {
            return (int)mh$.invokeExact(metrics);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_family_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.const$2,"pango_font_family_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_font_family_get_type();
     * }
     */
    public static long pango_font_family_get_type() {
        var mh$ = pango_font_family_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_family_list_faces$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.const$3,"pango_font_family_list_faces");
    }
    /**
     * {@snippet :
     * void pango_font_family_list_faces(struct _PangoFontFamily* family, struct _PangoFontFace*** faces, int* n_faces);
     * }
     */
    public static void pango_font_family_list_faces(MemorySegment family, MemorySegment faces, MemorySegment n_faces) {
        var mh$ = pango_font_family_list_faces$MH();
        try {
            mh$.invokeExact(family, faces, n_faces);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_family_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.const$4,"pango_font_family_get_name");
    }
    /**
     * {@snippet :
     * char* pango_font_family_get_name(struct _PangoFontFamily* family);
     * }
     */
    public static MemorySegment pango_font_family_get_name(MemorySegment family) {
        var mh$ = pango_font_family_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(family);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_family_is_monospace$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.const$5,"pango_font_family_is_monospace");
    }
    /**
     * {@snippet :
     * int pango_font_family_is_monospace(struct _PangoFontFamily* family);
     * }
     */
    public static int pango_font_family_is_monospace(MemorySegment family) {
        var mh$ = pango_font_family_is_monospace$MH();
        try {
            return (int)mh$.invokeExact(family);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_family_is_variable$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.const$0,"pango_font_family_is_variable");
    }
    /**
     * {@snippet :
     * int pango_font_family_is_variable(struct _PangoFontFamily* family);
     * }
     */
    public static int pango_font_family_is_variable(MemorySegment family) {
        var mh$ = pango_font_family_is_variable$MH();
        try {
            return (int)mh$.invokeExact(family);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_family_get_face$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.const$1,"pango_font_family_get_face");
    }
    /**
     * {@snippet :
     * struct _PangoFontFace* pango_font_family_get_face(struct _PangoFontFamily* family, char* name);
     * }
     */
    public static MemorySegment pango_font_family_get_face(MemorySegment family, MemorySegment name) {
        var mh$ = pango_font_family_get_face$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(family, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_face_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.const$0,"pango_font_face_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_font_face_get_type();
     * }
     */
    public static long pango_font_face_get_type() {
        var mh$ = pango_font_face_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_face_describe$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.const$1,"pango_font_face_describe");
    }
    /**
     * {@snippet :
     * struct _PangoFontDescription* pango_font_face_describe(struct _PangoFontFace* face);
     * }
     */
    public static MemorySegment pango_font_face_describe(MemorySegment face) {
        var mh$ = pango_font_face_describe$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_face_get_face_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.const$2,"pango_font_face_get_face_name");
    }
    /**
     * {@snippet :
     * char* pango_font_face_get_face_name(struct _PangoFontFace* face);
     * }
     */
    public static MemorySegment pango_font_face_get_face_name(MemorySegment face) {
        var mh$ = pango_font_face_get_face_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_face_list_sizes$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.const$3,"pango_font_face_list_sizes");
    }
    /**
     * {@snippet :
     * void pango_font_face_list_sizes(struct _PangoFontFace* face, int** sizes, int* n_sizes);
     * }
     */
    public static void pango_font_face_list_sizes(MemorySegment face, MemorySegment sizes, MemorySegment n_sizes) {
        var mh$ = pango_font_face_list_sizes$MH();
        try {
            mh$.invokeExact(face, sizes, n_sizes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_face_is_synthesized$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.const$4,"pango_font_face_is_synthesized");
    }
    /**
     * {@snippet :
     * int pango_font_face_is_synthesized(struct _PangoFontFace* face);
     * }
     */
    public static int pango_font_face_is_synthesized(MemorySegment face) {
        var mh$ = pango_font_face_is_synthesized$MH();
        try {
            return (int)mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_face_get_family$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.const$5,"pango_font_face_get_family");
    }
    /**
     * {@snippet :
     * struct _PangoFontFamily* pango_font_face_get_family(struct _PangoFontFace* face);
     * }
     */
    public static MemorySegment pango_font_face_get_family(MemorySegment face) {
        var mh$ = pango_font_face_get_family$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.const$0,"pango_font_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_font_get_type();
     * }
     */
    public static long pango_font_get_type() {
        var mh$ = pango_font_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_describe$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.const$1,"pango_font_describe");
    }
    /**
     * {@snippet :
     * struct _PangoFontDescription* pango_font_describe(struct _PangoFont* font);
     * }
     */
    public static MemorySegment pango_font_describe(MemorySegment font) {
        var mh$ = pango_font_describe$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_describe_with_absolute_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.const$2,"pango_font_describe_with_absolute_size");
    }
    /**
     * {@snippet :
     * struct _PangoFontDescription* pango_font_describe_with_absolute_size(struct _PangoFont* font);
     * }
     */
    public static MemorySegment pango_font_describe_with_absolute_size(MemorySegment font) {
        var mh$ = pango_font_describe_with_absolute_size$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_get_coverage$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.const$3,"pango_font_get_coverage");
    }
    /**
     * {@snippet :
     * struct _PangoCoverage* pango_font_get_coverage(struct _PangoFont* font, struct _PangoLanguage* language);
     * }
     */
    public static MemorySegment pango_font_get_coverage(MemorySegment font, MemorySegment language) {
        var mh$ = pango_font_get_coverage$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font, language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_find_shaper$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.const$4,"pango_font_find_shaper");
    }
    /**
     * {@snippet :
     * struct _PangoEngineShape* pango_font_find_shaper(struct _PangoFont* font, struct _PangoLanguage* language, unsigned int ch);
     * }
     */
    public static MemorySegment pango_font_find_shaper(MemorySegment font, MemorySegment language, int ch) {
        var mh$ = pango_font_find_shaper$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font, language, ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_get_metrics$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.const$5,"pango_font_get_metrics");
    }
    /**
     * {@snippet :
     * struct _PangoFontMetrics* pango_font_get_metrics(struct _PangoFont* font, struct _PangoLanguage* language);
     * }
     */
    public static MemorySegment pango_font_get_metrics(MemorySegment font, MemorySegment language) {
        var mh$ = pango_font_get_metrics$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font, language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_get_glyph_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.const$0,"pango_font_get_glyph_extents");
    }
    /**
     * {@snippet :
     * void pango_font_get_glyph_extents(struct _PangoFont* font, unsigned int glyph, struct _PangoRectangle* ink_rect, struct _PangoRectangle* logical_rect);
     * }
     */
    public static void pango_font_get_glyph_extents(MemorySegment font, int glyph, MemorySegment ink_rect, MemorySegment logical_rect) {
        var mh$ = pango_font_get_glyph_extents$MH();
        try {
            mh$.invokeExact(font, glyph, ink_rect, logical_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_get_font_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.const$1,"pango_font_get_font_map");
    }
    /**
     * {@snippet :
     * struct _PangoFontMap* pango_font_get_font_map(struct _PangoFont* font);
     * }
     */
    public static MemorySegment pango_font_get_font_map(MemorySegment font) {
        var mh$ = pango_font_get_font_map$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_get_face$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.const$2,"pango_font_get_face");
    }
    /**
     * {@snippet :
     * struct _PangoFontFace* pango_font_get_face(struct _PangoFont* font);
     * }
     */
    public static MemorySegment pango_font_get_face(MemorySegment font) {
        var mh$ = pango_font_get_face$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_has_char$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.const$3,"pango_font_has_char");
    }
    /**
     * {@snippet :
     * int pango_font_has_char(struct _PangoFont* font, unsigned int wc);
     * }
     */
    public static int pango_font_has_char(MemorySegment font, int wc) {
        var mh$ = pango_font_has_char$MH();
        try {
            return (int)mh$.invokeExact(font, wc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_get_features$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.const$4,"pango_font_get_features");
    }
    /**
     * {@snippet :
     * void pango_font_get_features(struct _PangoFont* font, struct hb_feature_t* features, unsigned int len, unsigned int* num_features);
     * }
     */
    public static void pango_font_get_features(MemorySegment font, MemorySegment features, int len, MemorySegment num_features) {
        var mh$ = pango_font_get_features$MH();
        try {
            mh$.invokeExact(font, features, len, num_features);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_get_hb_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.const$5,"pango_font_get_hb_font");
    }
    /**
     * {@snippet :
     * struct hb_font_t* pango_font_get_hb_font(struct _PangoFont* font);
     * }
     */
    public static MemorySegment pango_font_get_hb_font(MemorySegment font) {
        var mh$ = pango_font_get_hb_font$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_get_languages$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.const$0,"pango_font_get_languages");
    }
    /**
     * {@snippet :
     * struct _PangoLanguage** pango_font_get_languages(struct _PangoFont* font);
     * }
     */
    public static MemorySegment pango_font_get_languages(MemorySegment font) {
        var mh$ = pango_font_get_languages$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_serialize$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.const$1,"pango_font_serialize");
    }
    /**
     * {@snippet :
     * struct _GBytes* pango_font_serialize(struct _PangoFont* font);
     * }
     */
    public static MemorySegment pango_font_serialize(MemorySegment font) {
        var mh$ = pango_font_serialize$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_deserialize$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.const$2,"pango_font_deserialize");
    }
    /**
     * {@snippet :
     * struct _PangoFont* pango_font_deserialize(struct _PangoContext* context, struct _GBytes* bytes, struct _GError** error);
     * }
     */
    public static MemorySegment pango_font_deserialize(MemorySegment context, MemorySegment bytes, MemorySegment error) {
        var mh$ = pango_font_deserialize$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, bytes, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _PangoFontFamily* PangoFontFamily_autoptr;
     * }
     */
    public static final AddressLayout PangoFontFamily_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* PangoFontFamily_listautoptr;
     * }
     */
    public static final AddressLayout PangoFontFamily_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* PangoFontFamily_slistautoptr;
     * }
     */
    public static final AddressLayout PangoFontFamily_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* PangoFontFamily_queueautoptr;
     * }
     */
    public static final AddressLayout PangoFontFamily_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PangoFontFace* PangoFontFace_autoptr;
     * }
     */
    public static final AddressLayout PangoFontFace_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* PangoFontFace_listautoptr;
     * }
     */
    public static final AddressLayout PangoFontFace_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* PangoFontFace_slistautoptr;
     * }
     */
    public static final AddressLayout PangoFontFace_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* PangoFontFace_queueautoptr;
     * }
     */
    public static final AddressLayout PangoFontFace_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PangoFont* PangoFont_autoptr;
     * }
     */
    public static final AddressLayout PangoFont_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* PangoFont_listautoptr;
     * }
     */
    public static final AddressLayout PangoFont_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* PangoFont_slistautoptr;
     * }
     */
    public static final AddressLayout PangoFont_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* PangoFont_queueautoptr;
     * }
     */
    public static final AddressLayout PangoFont_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PangoFontDescription* PangoFontDescription_autoptr;
     * }
     */
    public static final AddressLayout PangoFontDescription_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* PangoFontDescription_listautoptr;
     * }
     */
    public static final AddressLayout PangoFontDescription_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* PangoFontDescription_slistautoptr;
     * }
     */
    public static final AddressLayout PangoFontDescription_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* PangoFontDescription_queueautoptr;
     * }
     */
    public static final AddressLayout PangoFontDescription_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle pango_color_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.const$1,"pango_color_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_color_get_type();
     * }
     */
    public static long pango_color_get_type() {
        var mh$ = pango_color_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_color_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.const$2,"pango_color_copy");
    }
    /**
     * {@snippet :
     * struct _PangoColor* pango_color_copy(struct _PangoColor* src);
     * }
     */
    public static MemorySegment pango_color_copy(MemorySegment src) {
        var mh$ = pango_color_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_color_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.const$3,"pango_color_free");
    }
    /**
     * {@snippet :
     * void pango_color_free(struct _PangoColor* color);
     * }
     */
    public static void pango_color_free(MemorySegment color) {
        var mh$ = pango_color_free$MH();
        try {
            mh$.invokeExact(color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_color_parse$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.const$4,"pango_color_parse");
    }
    /**
     * {@snippet :
     * int pango_color_parse(struct _PangoColor* color, char* spec);
     * }
     */
    public static int pango_color_parse(MemorySegment color, MemorySegment spec) {
        var mh$ = pango_color_parse$MH();
        try {
            return (int)mh$.invokeExact(color, spec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_color_parse_with_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.const$5,"pango_color_parse_with_alpha");
    }
    /**
     * {@snippet :
     * int pango_color_parse_with_alpha(struct _PangoColor* color, unsigned short* alpha, char* spec);
     * }
     */
    public static int pango_color_parse_with_alpha(MemorySegment color, MemorySegment alpha, MemorySegment spec) {
        var mh$ = pango_color_parse_with_alpha$MH();
        try {
            return (int)mh$.invokeExact(color, alpha, spec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_color_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1561.const$0,"pango_color_to_string");
    }
    /**
     * {@snippet :
     * char* pango_color_to_string(struct _PangoColor* color);
     * }
     */
    public static MemorySegment pango_color_to_string(MemorySegment color) {
        var mh$ = pango_color_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_INVALID = 0;
     * }
     */
    public static int PANGO_ATTR_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_LANGUAGE = 1;
     * }
     */
    public static int PANGO_ATTR_LANGUAGE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_FAMILY = 2;
     * }
     */
    public static int PANGO_ATTR_FAMILY() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_STYLE = 3;
     * }
     */
    public static int PANGO_ATTR_STYLE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_WEIGHT = 4;
     * }
     */
    public static int PANGO_ATTR_WEIGHT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_VARIANT = 5;
     * }
     */
    public static int PANGO_ATTR_VARIANT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_STRETCH = 6;
     * }
     */
    public static int PANGO_ATTR_STRETCH() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_SIZE = 7;
     * }
     */
    public static int PANGO_ATTR_SIZE() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_FONT_DESC = 8;
     * }
     */
    public static int PANGO_ATTR_FONT_DESC() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_FOREGROUND = 9;
     * }
     */
    public static int PANGO_ATTR_FOREGROUND() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_BACKGROUND = 10;
     * }
     */
    public static int PANGO_ATTR_BACKGROUND() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_UNDERLINE = 11;
     * }
     */
    public static int PANGO_ATTR_UNDERLINE() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_STRIKETHROUGH = 12;
     * }
     */
    public static int PANGO_ATTR_STRIKETHROUGH() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_RISE = 13;
     * }
     */
    public static int PANGO_ATTR_RISE() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_SHAPE = 14;
     * }
     */
    public static int PANGO_ATTR_SHAPE() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_SCALE = 15;
     * }
     */
    public static int PANGO_ATTR_SCALE() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_FALLBACK = 16;
     * }
     */
    public static int PANGO_ATTR_FALLBACK() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_LETTER_SPACING = 17;
     * }
     */
    public static int PANGO_ATTR_LETTER_SPACING() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_UNDERLINE_COLOR = 18;
     * }
     */
    public static int PANGO_ATTR_UNDERLINE_COLOR() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_STRIKETHROUGH_COLOR = 19;
     * }
     */
    public static int PANGO_ATTR_STRIKETHROUGH_COLOR() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_ABSOLUTE_SIZE = 20;
     * }
     */
    public static int PANGO_ATTR_ABSOLUTE_SIZE() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_GRAVITY = 21;
     * }
     */
    public static int PANGO_ATTR_GRAVITY() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_GRAVITY_HINT = 22;
     * }
     */
    public static int PANGO_ATTR_GRAVITY_HINT() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_FONT_FEATURES = 23;
     * }
     */
    public static int PANGO_ATTR_FONT_FEATURES() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_FOREGROUND_ALPHA = 24;
     * }
     */
    public static int PANGO_ATTR_FOREGROUND_ALPHA() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_BACKGROUND_ALPHA = 25;
     * }
     */
    public static int PANGO_ATTR_BACKGROUND_ALPHA() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_ALLOW_BREAKS = 26;
     * }
     */
    public static int PANGO_ATTR_ALLOW_BREAKS() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_SHOW = 27;
     * }
     */
    public static int PANGO_ATTR_SHOW() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_INSERT_HYPHENS = 28;
     * }
     */
    public static int PANGO_ATTR_INSERT_HYPHENS() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_OVERLINE = 29;
     * }
     */
    public static int PANGO_ATTR_OVERLINE() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_OVERLINE_COLOR = 30;
     * }
     */
    public static int PANGO_ATTR_OVERLINE_COLOR() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_LINE_HEIGHT = 31;
     * }
     */
    public static int PANGO_ATTR_LINE_HEIGHT() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_ABSOLUTE_LINE_HEIGHT = 32;
     * }
     */
    public static int PANGO_ATTR_ABSOLUTE_LINE_HEIGHT() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_TEXT_TRANSFORM = 33;
     * }
     */
    public static int PANGO_ATTR_TEXT_TRANSFORM() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_WORD = 34;
     * }
     */
    public static int PANGO_ATTR_WORD() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_SENTENCE = 35;
     * }
     */
    public static int PANGO_ATTR_SENTENCE() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_BASELINE_SHIFT = 36;
     * }
     */
    public static int PANGO_ATTR_BASELINE_SHIFT() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum PangoAttrType.PANGO_ATTR_FONT_SCALE = 37;
     * }
     */
    public static int PANGO_ATTR_FONT_SCALE() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum PangoUnderline.PANGO_UNDERLINE_NONE = 0;
     * }
     */
    public static int PANGO_UNDERLINE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoUnderline.PANGO_UNDERLINE_SINGLE = 1;
     * }
     */
    public static int PANGO_UNDERLINE_SINGLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoUnderline.PANGO_UNDERLINE_DOUBLE = 2;
     * }
     */
    public static int PANGO_UNDERLINE_DOUBLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum PangoUnderline.PANGO_UNDERLINE_LOW = 3;
     * }
     */
    public static int PANGO_UNDERLINE_LOW() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum PangoUnderline.PANGO_UNDERLINE_ERROR = 4;
     * }
     */
    public static int PANGO_UNDERLINE_ERROR() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum PangoUnderline.PANGO_UNDERLINE_SINGLE_LINE = 5;
     * }
     */
    public static int PANGO_UNDERLINE_SINGLE_LINE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum PangoUnderline.PANGO_UNDERLINE_DOUBLE_LINE = 6;
     * }
     */
    public static int PANGO_UNDERLINE_DOUBLE_LINE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum PangoUnderline.PANGO_UNDERLINE_ERROR_LINE = 7;
     * }
     */
    public static int PANGO_UNDERLINE_ERROR_LINE() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum PangoOverline.PANGO_OVERLINE_NONE = 0;
     * }
     */
    public static int PANGO_OVERLINE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoOverline.PANGO_OVERLINE_SINGLE = 1;
     * }
     */
    public static int PANGO_OVERLINE_SINGLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoShowFlags.PANGO_SHOW_NONE = 0;
     * }
     */
    public static int PANGO_SHOW_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoShowFlags.PANGO_SHOW_SPACES = 1;
     * }
     */
    public static int PANGO_SHOW_SPACES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoShowFlags.PANGO_SHOW_LINE_BREAKS = 2;
     * }
     */
    public static int PANGO_SHOW_LINE_BREAKS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum PangoShowFlags.PANGO_SHOW_IGNORABLES = 4;
     * }
     */
    public static int PANGO_SHOW_IGNORABLES() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum PangoTextTransform.PANGO_TEXT_TRANSFORM_NONE = 0;
     * }
     */
    public static int PANGO_TEXT_TRANSFORM_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoTextTransform.PANGO_TEXT_TRANSFORM_LOWERCASE = 1;
     * }
     */
    public static int PANGO_TEXT_TRANSFORM_LOWERCASE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoTextTransform.PANGO_TEXT_TRANSFORM_UPPERCASE = 2;
     * }
     */
    public static int PANGO_TEXT_TRANSFORM_UPPERCASE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum PangoTextTransform.PANGO_TEXT_TRANSFORM_CAPITALIZE = 3;
     * }
     */
    public static int PANGO_TEXT_TRANSFORM_CAPITALIZE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum PangoBaselineShift.PANGO_BASELINE_SHIFT_NONE = 0;
     * }
     */
    public static int PANGO_BASELINE_SHIFT_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoBaselineShift.PANGO_BASELINE_SHIFT_SUPERSCRIPT = 1;
     * }
     */
    public static int PANGO_BASELINE_SHIFT_SUPERSCRIPT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoBaselineShift.PANGO_BASELINE_SHIFT_SUBSCRIPT = 2;
     * }
     */
    public static int PANGO_BASELINE_SHIFT_SUBSCRIPT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum PangoFontScale.PANGO_FONT_SCALE_NONE = 0;
     * }
     */
    public static int PANGO_FONT_SCALE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoFontScale.PANGO_FONT_SCALE_SUPERSCRIPT = 1;
     * }
     */
    public static int PANGO_FONT_SCALE_SUPERSCRIPT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoFontScale.PANGO_FONT_SCALE_SUBSCRIPT = 2;
     * }
     */
    public static int PANGO_FONT_SCALE_SUBSCRIPT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum PangoFontScale.PANGO_FONT_SCALE_SMALL_CAPS = 3;
     * }
     */
    public static int PANGO_FONT_SCALE_SMALL_CAPS() {
        return (int)3L;
    }
    public static MethodHandle pango_attribute_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.const$0,"pango_attribute_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_attribute_get_type();
     * }
     */
    public static long pango_attribute_get_type() {
        var mh$ = pango_attribute_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_type_register$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.const$1,"pango_attr_type_register");
    }
    /**
     * {@snippet :
     * enum PangoAttrType pango_attr_type_register(char* name);
     * }
     */
    public static int pango_attr_type_register(MemorySegment name) {
        var mh$ = pango_attr_type_register$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_type_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.const$2,"pango_attr_type_get_name");
    }
    /**
     * {@snippet :
     * char* pango_attr_type_get_name(enum PangoAttrType type);
     * }
     */
    public static MemorySegment pango_attr_type_get_name(int type) {
        var mh$ = pango_attr_type_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attribute_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.const$3,"pango_attribute_init");
    }
    /**
     * {@snippet :
     * void pango_attribute_init(struct _PangoAttribute* attr, struct _PangoAttrClass* klass);
     * }
     */
    public static void pango_attribute_init(MemorySegment attr, MemorySegment klass) {
        var mh$ = pango_attribute_init$MH();
        try {
            mh$.invokeExact(attr, klass);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attribute_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.const$4,"pango_attribute_copy");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attribute_copy(struct _PangoAttribute* attr);
     * }
     */
    public static MemorySegment pango_attribute_copy(MemorySegment attr) {
        var mh$ = pango_attribute_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attribute_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.const$5,"pango_attribute_destroy");
    }
    /**
     * {@snippet :
     * void pango_attribute_destroy(struct _PangoAttribute* attr);
     * }
     */
    public static void pango_attribute_destroy(MemorySegment attr) {
        var mh$ = pango_attribute_destroy$MH();
        try {
            mh$.invokeExact(attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attribute_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.const$0,"pango_attribute_equal");
    }
    /**
     * {@snippet :
     * int pango_attribute_equal(struct _PangoAttribute* attr1, struct _PangoAttribute* attr2);
     * }
     */
    public static int pango_attribute_equal(MemorySegment attr1, MemorySegment attr2) {
        var mh$ = pango_attribute_equal$MH();
        try {
            return (int)mh$.invokeExact(attr1, attr2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_language_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.const$1,"pango_attr_language_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_language_new(struct _PangoLanguage* language);
     * }
     */
    public static MemorySegment pango_attr_language_new(MemorySegment language) {
        var mh$ = pango_attr_language_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_family_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.const$2,"pango_attr_family_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_family_new(char* family);
     * }
     */
    public static MemorySegment pango_attr_family_new(MemorySegment family) {
        var mh$ = pango_attr_family_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(family);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_foreground_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.const$4,"pango_attr_foreground_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_foreground_new(unsigned short red, unsigned short green, unsigned short blue);
     * }
     */
    public static MemorySegment pango_attr_foreground_new(short red, short green, short blue) {
        var mh$ = pango_attr_foreground_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(red, green, blue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_background_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.const$5,"pango_attr_background_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_background_new(unsigned short red, unsigned short green, unsigned short blue);
     * }
     */
    public static MemorySegment pango_attr_background_new(short red, short green, short blue) {
        var mh$ = pango_attr_background_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(red, green, blue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_size_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.const$0,"pango_attr_size_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_size_new(int size);
     * }
     */
    public static MemorySegment pango_attr_size_new(int size) {
        var mh$ = pango_attr_size_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_size_new_absolute$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.const$1,"pango_attr_size_new_absolute");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_size_new_absolute(int size);
     * }
     */
    public static MemorySegment pango_attr_size_new_absolute(int size) {
        var mh$ = pango_attr_size_new_absolute$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_style_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.const$2,"pango_attr_style_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_style_new(enum PangoStyle style);
     * }
     */
    public static MemorySegment pango_attr_style_new(int style) {
        var mh$ = pango_attr_style_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(style);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_weight_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.const$3,"pango_attr_weight_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_weight_new(enum PangoWeight weight);
     * }
     */
    public static MemorySegment pango_attr_weight_new(int weight) {
        var mh$ = pango_attr_weight_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(weight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_variant_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.const$4,"pango_attr_variant_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_variant_new(enum PangoVariant variant);
     * }
     */
    public static MemorySegment pango_attr_variant_new(int variant) {
        var mh$ = pango_attr_variant_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_stretch_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.const$5,"pango_attr_stretch_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_stretch_new(enum PangoStretch stretch);
     * }
     */
    public static MemorySegment pango_attr_stretch_new(int stretch) {
        var mh$ = pango_attr_stretch_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stretch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_font_desc_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.const$0,"pango_attr_font_desc_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_font_desc_new(struct _PangoFontDescription* desc);
     * }
     */
    public static MemorySegment pango_attr_font_desc_new(MemorySegment desc) {
        var mh$ = pango_attr_font_desc_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_underline_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.const$1,"pango_attr_underline_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_underline_new(enum PangoUnderline underline);
     * }
     */
    public static MemorySegment pango_attr_underline_new(int underline) {
        var mh$ = pango_attr_underline_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(underline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_underline_color_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.const$2,"pango_attr_underline_color_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_underline_color_new(unsigned short red, unsigned short green, unsigned short blue);
     * }
     */
    public static MemorySegment pango_attr_underline_color_new(short red, short green, short blue) {
        var mh$ = pango_attr_underline_color_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(red, green, blue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_strikethrough_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.const$3,"pango_attr_strikethrough_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_strikethrough_new(int strikethrough);
     * }
     */
    public static MemorySegment pango_attr_strikethrough_new(int strikethrough) {
        var mh$ = pango_attr_strikethrough_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(strikethrough);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_strikethrough_color_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.const$4,"pango_attr_strikethrough_color_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_strikethrough_color_new(unsigned short red, unsigned short green, unsigned short blue);
     * }
     */
    public static MemorySegment pango_attr_strikethrough_color_new(short red, short green, short blue) {
        var mh$ = pango_attr_strikethrough_color_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(red, green, blue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_rise_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.const$5,"pango_attr_rise_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_rise_new(int rise);
     * }
     */
    public static MemorySegment pango_attr_rise_new(int rise) {
        var mh$ = pango_attr_rise_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(rise);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_baseline_shift_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.const$0,"pango_attr_baseline_shift_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_baseline_shift_new(int shift);
     * }
     */
    public static MemorySegment pango_attr_baseline_shift_new(int shift) {
        var mh$ = pango_attr_baseline_shift_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(shift);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_font_scale_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.const$1,"pango_attr_font_scale_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_font_scale_new(enum PangoFontScale scale);
     * }
     */
    public static MemorySegment pango_attr_font_scale_new(int scale) {
        var mh$ = pango_attr_font_scale_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_scale_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.const$2,"pango_attr_scale_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_scale_new(double scale_factor);
     * }
     */
    public static MemorySegment pango_attr_scale_new(double scale_factor) {
        var mh$ = pango_attr_scale_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scale_factor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_fallback_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.const$3,"pango_attr_fallback_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_fallback_new(int enable_fallback);
     * }
     */
    public static MemorySegment pango_attr_fallback_new(int enable_fallback) {
        var mh$ = pango_attr_fallback_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(enable_fallback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_letter_spacing_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.const$4,"pango_attr_letter_spacing_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_letter_spacing_new(int letter_spacing);
     * }
     */
    public static MemorySegment pango_attr_letter_spacing_new(int letter_spacing) {
        var mh$ = pango_attr_letter_spacing_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(letter_spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_shape_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.const$5,"pango_attr_shape_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_shape_new(struct _PangoRectangle* ink_rect, struct _PangoRectangle* logical_rect);
     * }
     */
    public static MemorySegment pango_attr_shape_new(MemorySegment ink_rect, MemorySegment logical_rect) {
        var mh$ = pango_attr_shape_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(ink_rect, logical_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_shape_new_with_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.const$2,"pango_attr_shape_new_with_data");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_shape_new_with_data(struct _PangoRectangle* ink_rect, struct _PangoRectangle* logical_rect, void* data, void* (*copy_func)(void*), void (*destroy_func)(void*));
     * }
     */
    public static MemorySegment pango_attr_shape_new_with_data(MemorySegment ink_rect, MemorySegment logical_rect, MemorySegment data, MemorySegment copy_func, MemorySegment destroy_func) {
        var mh$ = pango_attr_shape_new_with_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(ink_rect, logical_rect, data, copy_func, destroy_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_gravity_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.const$3,"pango_attr_gravity_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_gravity_new(enum PangoGravity gravity);
     * }
     */
    public static MemorySegment pango_attr_gravity_new(int gravity) {
        var mh$ = pango_attr_gravity_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gravity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_gravity_hint_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.const$4,"pango_attr_gravity_hint_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_gravity_hint_new(enum PangoGravityHint hint);
     * }
     */
    public static MemorySegment pango_attr_gravity_hint_new(int hint) {
        var mh$ = pango_attr_gravity_hint_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_font_features_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.const$5,"pango_attr_font_features_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_font_features_new(char* features);
     * }
     */
    public static MemorySegment pango_attr_font_features_new(MemorySegment features) {
        var mh$ = pango_attr_font_features_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(features);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_foreground_alpha_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.const$0,"pango_attr_foreground_alpha_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_foreground_alpha_new(unsigned short alpha);
     * }
     */
    public static MemorySegment pango_attr_foreground_alpha_new(short alpha) {
        var mh$ = pango_attr_foreground_alpha_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_background_alpha_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.const$1,"pango_attr_background_alpha_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_background_alpha_new(unsigned short alpha);
     * }
     */
    public static MemorySegment pango_attr_background_alpha_new(short alpha) {
        var mh$ = pango_attr_background_alpha_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_allow_breaks_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.const$2,"pango_attr_allow_breaks_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_allow_breaks_new(int allow_breaks);
     * }
     */
    public static MemorySegment pango_attr_allow_breaks_new(int allow_breaks) {
        var mh$ = pango_attr_allow_breaks_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allow_breaks);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_word_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.const$3,"pango_attr_word_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_word_new();
     * }
     */
    public static MemorySegment pango_attr_word_new() {
        var mh$ = pango_attr_word_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_sentence_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.const$4,"pango_attr_sentence_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_sentence_new();
     * }
     */
    public static MemorySegment pango_attr_sentence_new() {
        var mh$ = pango_attr_sentence_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_insert_hyphens_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.const$5,"pango_attr_insert_hyphens_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_insert_hyphens_new(int insert_hyphens);
     * }
     */
    public static MemorySegment pango_attr_insert_hyphens_new(int insert_hyphens) {
        var mh$ = pango_attr_insert_hyphens_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(insert_hyphens);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_overline_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.const$0,"pango_attr_overline_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_overline_new(enum PangoOverline overline);
     * }
     */
    public static MemorySegment pango_attr_overline_new(int overline) {
        var mh$ = pango_attr_overline_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(overline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_overline_color_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.const$1,"pango_attr_overline_color_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_overline_color_new(unsigned short red, unsigned short green, unsigned short blue);
     * }
     */
    public static MemorySegment pango_attr_overline_color_new(short red, short green, short blue) {
        var mh$ = pango_attr_overline_color_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(red, green, blue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_show_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.const$2,"pango_attr_show_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_show_new(enum PangoShowFlags flags);
     * }
     */
    public static MemorySegment pango_attr_show_new(int flags) {
        var mh$ = pango_attr_show_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_line_height_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.const$3,"pango_attr_line_height_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_line_height_new(double factor);
     * }
     */
    public static MemorySegment pango_attr_line_height_new(double factor) {
        var mh$ = pango_attr_line_height_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(factor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_line_height_new_absolute$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.const$4,"pango_attr_line_height_new_absolute");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_line_height_new_absolute(int height);
     * }
     */
    public static MemorySegment pango_attr_line_height_new_absolute(int height) {
        var mh$ = pango_attr_line_height_new_absolute$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_text_transform_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.const$5,"pango_attr_text_transform_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_text_transform_new(enum PangoTextTransform transform);
     * }
     */
    public static MemorySegment pango_attr_text_transform_new(int transform) {
        var mh$ = pango_attr_text_transform_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(transform);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attribute_as_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.const$0,"pango_attribute_as_string");
    }
    /**
     * {@snippet :
     * struct _PangoAttrString* pango_attribute_as_string(struct _PangoAttribute* attr);
     * }
     */
    public static MemorySegment pango_attribute_as_string(MemorySegment attr) {
        var mh$ = pango_attribute_as_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attribute_as_language$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.const$1,"pango_attribute_as_language");
    }
    /**
     * {@snippet :
     * struct _PangoAttrLanguage* pango_attribute_as_language(struct _PangoAttribute* attr);
     * }
     */
    public static MemorySegment pango_attribute_as_language(MemorySegment attr) {
        var mh$ = pango_attribute_as_language$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attribute_as_int$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.const$2,"pango_attribute_as_int");
    }
    /**
     * {@snippet :
     * struct _PangoAttrInt* pango_attribute_as_int(struct _PangoAttribute* attr);
     * }
     */
    public static MemorySegment pango_attribute_as_int(MemorySegment attr) {
        var mh$ = pango_attribute_as_int$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attribute_as_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.const$3,"pango_attribute_as_size");
    }
    /**
     * {@snippet :
     * struct _PangoAttrSize* pango_attribute_as_size(struct _PangoAttribute* attr);
     * }
     */
    public static MemorySegment pango_attribute_as_size(MemorySegment attr) {
        var mh$ = pango_attribute_as_size$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attribute_as_float$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.const$4,"pango_attribute_as_float");
    }
    /**
     * {@snippet :
     * struct _PangoAttrFloat* pango_attribute_as_float(struct _PangoAttribute* attr);
     * }
     */
    public static MemorySegment pango_attribute_as_float(MemorySegment attr) {
        var mh$ = pango_attribute_as_float$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attribute_as_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.const$5,"pango_attribute_as_color");
    }
    /**
     * {@snippet :
     * struct _PangoAttrColor* pango_attribute_as_color(struct _PangoAttribute* attr);
     * }
     */
    public static MemorySegment pango_attribute_as_color(MemorySegment attr) {
        var mh$ = pango_attribute_as_color$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attribute_as_font_desc$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.const$0,"pango_attribute_as_font_desc");
    }
    /**
     * {@snippet :
     * struct _PangoAttrFontDesc* pango_attribute_as_font_desc(struct _PangoAttribute* attr);
     * }
     */
    public static MemorySegment pango_attribute_as_font_desc(MemorySegment attr) {
        var mh$ = pango_attribute_as_font_desc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attribute_as_shape$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.const$1,"pango_attribute_as_shape");
    }
    /**
     * {@snippet :
     * struct _PangoAttrShape* pango_attribute_as_shape(struct _PangoAttribute* attr);
     * }
     */
    public static MemorySegment pango_attribute_as_shape(MemorySegment attr) {
        var mh$ = pango_attribute_as_shape$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attribute_as_font_features$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.const$2,"pango_attribute_as_font_features");
    }
    /**
     * {@snippet :
     * struct _PangoAttrFontFeatures* pango_attribute_as_font_features(struct _PangoAttribute* attr);
     * }
     */
    public static MemorySegment pango_attribute_as_font_features(MemorySegment attr) {
        var mh$ = pango_attribute_as_font_features$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_list_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.const$3,"pango_attr_list_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_attr_list_get_type();
     * }
     */
    public static long pango_attr_list_get_type() {
        var mh$ = pango_attr_list_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_list_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.const$4,"pango_attr_list_new");
    }
    /**
     * {@snippet :
     * struct _PangoAttrList* pango_attr_list_new();
     * }
     */
    public static MemorySegment pango_attr_list_new() {
        var mh$ = pango_attr_list_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_list_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.const$5,"pango_attr_list_ref");
    }
    /**
     * {@snippet :
     * struct _PangoAttrList* pango_attr_list_ref(struct _PangoAttrList* list);
     * }
     */
    public static MemorySegment pango_attr_list_ref(MemorySegment list) {
        var mh$ = pango_attr_list_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_list_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.const$0,"pango_attr_list_unref");
    }
    /**
     * {@snippet :
     * void pango_attr_list_unref(struct _PangoAttrList* list);
     * }
     */
    public static void pango_attr_list_unref(MemorySegment list) {
        var mh$ = pango_attr_list_unref$MH();
        try {
            mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_list_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.const$1,"pango_attr_list_copy");
    }
    /**
     * {@snippet :
     * struct _PangoAttrList* pango_attr_list_copy(struct _PangoAttrList* list);
     * }
     */
    public static MemorySegment pango_attr_list_copy(MemorySegment list) {
        var mh$ = pango_attr_list_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_list_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.const$2,"pango_attr_list_insert");
    }
    /**
     * {@snippet :
     * void pango_attr_list_insert(struct _PangoAttrList* list, struct _PangoAttribute* attr);
     * }
     */
    public static void pango_attr_list_insert(MemorySegment list, MemorySegment attr) {
        var mh$ = pango_attr_list_insert$MH();
        try {
            mh$.invokeExact(list, attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_list_insert_before$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.const$3,"pango_attr_list_insert_before");
    }
    /**
     * {@snippet :
     * void pango_attr_list_insert_before(struct _PangoAttrList* list, struct _PangoAttribute* attr);
     * }
     */
    public static void pango_attr_list_insert_before(MemorySegment list, MemorySegment attr) {
        var mh$ = pango_attr_list_insert_before$MH();
        try {
            mh$.invokeExact(list, attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_list_change$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.const$4,"pango_attr_list_change");
    }
    /**
     * {@snippet :
     * void pango_attr_list_change(struct _PangoAttrList* list, struct _PangoAttribute* attr);
     * }
     */
    public static void pango_attr_list_change(MemorySegment list, MemorySegment attr) {
        var mh$ = pango_attr_list_change$MH();
        try {
            mh$.invokeExact(list, attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_list_splice$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.const$5,"pango_attr_list_splice");
    }
    /**
     * {@snippet :
     * void pango_attr_list_splice(struct _PangoAttrList* list, struct _PangoAttrList* other, int pos, int len);
     * }
     */
    public static void pango_attr_list_splice(MemorySegment list, MemorySegment other, int pos, int len) {
        var mh$ = pango_attr_list_splice$MH();
        try {
            mh$.invokeExact(list, other, pos, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_list_update$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.const$0,"pango_attr_list_update");
    }
    /**
     * {@snippet :
     * void pango_attr_list_update(struct _PangoAttrList* list, int pos, int remove, int add);
     * }
     */
    public static void pango_attr_list_update(MemorySegment list, int pos, int remove, int add) {
        var mh$ = pango_attr_list_update$MH();
        try {
            mh$.invokeExact(list, pos, remove, add);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_list_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.const$2,"pango_attr_list_filter");
    }
    /**
     * {@snippet :
     * struct _PangoAttrList* pango_attr_list_filter(struct _PangoAttrList* list, int (*func)(struct _PangoAttribute*,void*), void* data);
     * }
     */
    public static MemorySegment pango_attr_list_filter(MemorySegment list, MemorySegment func, MemorySegment data) {
        var mh$ = pango_attr_list_filter$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_list_get_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.const$3,"pango_attr_list_get_attributes");
    }
    /**
     * {@snippet :
     * struct _GSList* pango_attr_list_get_attributes(struct _PangoAttrList* list);
     * }
     */
    public static MemorySegment pango_attr_list_get_attributes(MemorySegment list) {
        var mh$ = pango_attr_list_get_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_list_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.const$4,"pango_attr_list_equal");
    }
    /**
     * {@snippet :
     * int pango_attr_list_equal(struct _PangoAttrList* list, struct _PangoAttrList* other_list);
     * }
     */
    public static int pango_attr_list_equal(MemorySegment list, MemorySegment other_list) {
        var mh$ = pango_attr_list_equal$MH();
        try {
            return (int)mh$.invokeExact(list, other_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_list_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.const$5,"pango_attr_list_to_string");
    }
    /**
     * {@snippet :
     * char* pango_attr_list_to_string(struct _PangoAttrList* list);
     * }
     */
    public static MemorySegment pango_attr_list_to_string(MemorySegment list) {
        var mh$ = pango_attr_list_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_list_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.const$0,"pango_attr_list_from_string");
    }
    /**
     * {@snippet :
     * struct _PangoAttrList* pango_attr_list_from_string(char* text);
     * }
     */
    public static MemorySegment pango_attr_list_from_string(MemorySegment text) {
        var mh$ = pango_attr_list_from_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_iterator_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.const$1,"pango_attr_iterator_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_attr_iterator_get_type();
     * }
     */
    public static long pango_attr_iterator_get_type() {
        var mh$ = pango_attr_iterator_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_list_get_iterator$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.const$2,"pango_attr_list_get_iterator");
    }
    /**
     * {@snippet :
     * struct _PangoAttrIterator* pango_attr_list_get_iterator(struct _PangoAttrList* list);
     * }
     */
    public static MemorySegment pango_attr_list_get_iterator(MemorySegment list) {
        var mh$ = pango_attr_list_get_iterator$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_iterator_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.const$3,"pango_attr_iterator_range");
    }
    /**
     * {@snippet :
     * void pango_attr_iterator_range(struct _PangoAttrIterator* iterator, int* start, int* end);
     * }
     */
    public static void pango_attr_iterator_range(MemorySegment iterator, MemorySegment start, MemorySegment end) {
        var mh$ = pango_attr_iterator_range$MH();
        try {
            mh$.invokeExact(iterator, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_iterator_next$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.const$4,"pango_attr_iterator_next");
    }
    /**
     * {@snippet :
     * int pango_attr_iterator_next(struct _PangoAttrIterator* iterator);
     * }
     */
    public static int pango_attr_iterator_next(MemorySegment iterator) {
        var mh$ = pango_attr_iterator_next$MH();
        try {
            return (int)mh$.invokeExact(iterator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_iterator_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.const$5,"pango_attr_iterator_copy");
    }
    /**
     * {@snippet :
     * struct _PangoAttrIterator* pango_attr_iterator_copy(struct _PangoAttrIterator* iterator);
     * }
     */
    public static MemorySegment pango_attr_iterator_copy(MemorySegment iterator) {
        var mh$ = pango_attr_iterator_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iterator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_iterator_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.const$0,"pango_attr_iterator_destroy");
    }
    /**
     * {@snippet :
     * void pango_attr_iterator_destroy(struct _PangoAttrIterator* iterator);
     * }
     */
    public static void pango_attr_iterator_destroy(MemorySegment iterator) {
        var mh$ = pango_attr_iterator_destroy$MH();
        try {
            mh$.invokeExact(iterator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_iterator_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.const$1,"pango_attr_iterator_get");
    }
    /**
     * {@snippet :
     * struct _PangoAttribute* pango_attr_iterator_get(struct _PangoAttrIterator* iterator, enum PangoAttrType type);
     * }
     */
    public static MemorySegment pango_attr_iterator_get(MemorySegment iterator, int type) {
        var mh$ = pango_attr_iterator_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iterator, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_iterator_get_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.const$2,"pango_attr_iterator_get_font");
    }
    /**
     * {@snippet :
     * void pango_attr_iterator_get_font(struct _PangoAttrIterator* iterator, struct _PangoFontDescription* desc, struct _PangoLanguage** language, struct _GSList** extra_attrs);
     * }
     */
    public static void pango_attr_iterator_get_font(MemorySegment iterator, MemorySegment desc, MemorySegment language, MemorySegment extra_attrs) {
        var mh$ = pango_attr_iterator_get_font$MH();
        try {
            mh$.invokeExact(iterator, desc, language, extra_attrs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_iterator_get_attrs$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.const$3,"pango_attr_iterator_get_attrs");
    }
    /**
     * {@snippet :
     * struct _GSList* pango_attr_iterator_get_attrs(struct _PangoAttrIterator* iterator);
     * }
     */
    public static MemorySegment pango_attr_iterator_get_attrs(MemorySegment iterator) {
        var mh$ = pango_attr_iterator_get_attrs$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iterator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _PangoAttribute* PangoAttribute_autoptr;
     * }
     */
    public static final AddressLayout PangoAttribute_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* PangoAttribute_listautoptr;
     * }
     */
    public static final AddressLayout PangoAttribute_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* PangoAttribute_slistautoptr;
     * }
     */
    public static final AddressLayout PangoAttribute_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* PangoAttribute_queueautoptr;
     * }
     */
    public static final AddressLayout PangoAttribute_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PangoAttrList* PangoAttrList_autoptr;
     * }
     */
    public static final AddressLayout PangoAttrList_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* PangoAttrList_listautoptr;
     * }
     */
    public static final AddressLayout PangoAttrList_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* PangoAttrList_slistautoptr;
     * }
     */
    public static final AddressLayout PangoAttrList_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* PangoAttrList_queueautoptr;
     * }
     */
    public static final AddressLayout PangoAttrList_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PangoAttrIterator* PangoAttrIterator_autoptr;
     * }
     */
    public static final AddressLayout PangoAttrIterator_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* PangoAttrIterator_listautoptr;
     * }
     */
    public static final AddressLayout PangoAttrIterator_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* PangoAttrIterator_slistautoptr;
     * }
     */
    public static final AddressLayout PangoAttrIterator_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* PangoAttrIterator_queueautoptr;
     * }
     */
    public static final AddressLayout PangoAttrIterator_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle pango_item_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.const$0,"pango_item_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_item_get_type();
     * }
     */
    public static long pango_item_get_type() {
        var mh$ = pango_item_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_item_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.const$1,"pango_item_new");
    }
    /**
     * {@snippet :
     * struct _PangoItem* pango_item_new();
     * }
     */
    public static MemorySegment pango_item_new() {
        var mh$ = pango_item_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_item_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.const$2,"pango_item_copy");
    }
    /**
     * {@snippet :
     * struct _PangoItem* pango_item_copy(struct _PangoItem* item);
     * }
     */
    public static MemorySegment pango_item_copy(MemorySegment item) {
        var mh$ = pango_item_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_item_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.const$3,"pango_item_free");
    }
    /**
     * {@snippet :
     * void pango_item_free(struct _PangoItem* item);
     * }
     */
    public static void pango_item_free(MemorySegment item) {
        var mh$ = pango_item_free$MH();
        try {
            mh$.invokeExact(item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_item_split$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.const$4,"pango_item_split");
    }
    /**
     * {@snippet :
     * struct _PangoItem* pango_item_split(struct _PangoItem* orig, int split_index, int split_offset);
     * }
     */
    public static MemorySegment pango_item_split(MemorySegment orig, int split_index, int split_offset) {
        var mh$ = pango_item_split$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(orig, split_index, split_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_item_apply_attrs$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.const$5,"pango_item_apply_attrs");
    }
    /**
     * {@snippet :
     * void pango_item_apply_attrs(struct _PangoItem* item, struct _PangoAttrIterator* iter);
     * }
     */
    public static void pango_item_apply_attrs(MemorySegment item, MemorySegment iter) {
        var mh$ = pango_item_apply_attrs$MH();
        try {
            mh$.invokeExact(item, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_reorder_items$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.const$0,"pango_reorder_items");
    }
    /**
     * {@snippet :
     * struct _GList* pango_reorder_items(struct _GList* items);
     * }
     */
    public static MemorySegment pango_reorder_items(MemorySegment items) {
        var mh$ = pango_reorder_items$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(items);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_itemize$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.const$1,"pango_itemize");
    }
    /**
     * {@snippet :
     * struct _GList* pango_itemize(struct _PangoContext* context, char* text, int start_index, int length, struct _PangoAttrList* attrs, struct _PangoAttrIterator* cached_iter);
     * }
     */
    public static MemorySegment pango_itemize(MemorySegment context, MemorySegment text, int start_index, int length, MemorySegment attrs, MemorySegment cached_iter) {
        var mh$ = pango_itemize$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, text, start_index, length, attrs, cached_iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_itemize_with_base_dir$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.const$3,"pango_itemize_with_base_dir");
    }
    /**
     * {@snippet :
     * struct _GList* pango_itemize_with_base_dir(struct _PangoContext* context, enum PangoDirection base_dir, char* text, int start_index, int length, struct _PangoAttrList* attrs, struct _PangoAttrIterator* cached_iter);
     * }
     */
    public static MemorySegment pango_itemize_with_base_dir(MemorySegment context, int base_dir, MemorySegment text, int start_index, int length, MemorySegment attrs, MemorySegment cached_iter) {
        var mh$ = pango_itemize_with_base_dir$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, base_dir, text, start_index, length, attrs, cached_iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_break$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.const$6,"pango_break");
    }
    /**
     * {@snippet :
     * void pango_break(char* text, int length, struct _PangoAnalysis* analysis, struct _PangoLogAttr* attrs, int attrs_len);
     * }
     */
    public static void pango_break(MemorySegment text, int length, MemorySegment analysis, MemorySegment attrs, int attrs_len) {
        var mh$ = pango_break$MH();
        try {
            mh$.invokeExact(text, length, analysis, attrs, attrs_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_get_log_attrs$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.const$1,"pango_get_log_attrs");
    }
    /**
     * {@snippet :
     * void pango_get_log_attrs(char* text, int length, int level, struct _PangoLanguage* language, struct _PangoLogAttr* attrs, int attrs_len);
     * }
     */
    public static void pango_get_log_attrs(MemorySegment text, int length, int level, MemorySegment language, MemorySegment attrs, int attrs_len) {
        var mh$ = pango_get_log_attrs$MH();
        try {
            mh$.invokeExact(text, length, level, language, attrs, attrs_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_default_break$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.const$2,"pango_default_break");
    }
    /**
     * {@snippet :
     * void pango_default_break(char* text, int length, struct _PangoAnalysis* analysis, struct _PangoLogAttr* attrs, int attrs_len);
     * }
     */
    public static void pango_default_break(MemorySegment text, int length, MemorySegment analysis, MemorySegment attrs, int attrs_len) {
        var mh$ = pango_default_break$MH();
        try {
            mh$.invokeExact(text, length, analysis, attrs, attrs_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_tailor_break$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.const$3,"pango_tailor_break");
    }
    /**
     * {@snippet :
     * void pango_tailor_break(char* text, int length, struct _PangoAnalysis* analysis, int offset, struct _PangoLogAttr* attrs, int attrs_len);
     * }
     */
    public static void pango_tailor_break(MemorySegment text, int length, MemorySegment analysis, int offset, MemorySegment attrs, int attrs_len) {
        var mh$ = pango_tailor_break$MH();
        try {
            mh$.invokeExact(text, length, analysis, offset, attrs, attrs_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_break$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.const$4,"pango_attr_break");
    }
    /**
     * {@snippet :
     * void pango_attr_break(char* text, int length, struct _PangoAttrList* attr_list, int offset, struct _PangoLogAttr* attrs, int attrs_len);
     * }
     */
    public static void pango_attr_break(MemorySegment text, int length, MemorySegment attr_list, int offset, MemorySegment attrs, int attrs_len) {
        var mh$ = pango_attr_break$MH();
        try {
            mh$.invokeExact(text, length, attr_list, offset, attrs, attrs_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_fontset_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.const$5,"pango_fontset_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_fontset_get_type();
     * }
     */
    public static long pango_fontset_get_type() {
        var mh$ = pango_fontset_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_fontset_get_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1589.const$1,"pango_fontset_get_font");
    }
    /**
     * {@snippet :
     * struct _PangoFont* pango_fontset_get_font(struct _PangoFontset* fontset, unsigned int wc);
     * }
     */
    public static MemorySegment pango_fontset_get_font(MemorySegment fontset, int wc) {
        var mh$ = pango_fontset_get_font$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontset, wc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_fontset_get_metrics$MH() {
        return RuntimeHelper.requireNonNull(constants$1589.const$2,"pango_fontset_get_metrics");
    }
    /**
     * {@snippet :
     * struct _PangoFontMetrics* pango_fontset_get_metrics(struct _PangoFontset* fontset);
     * }
     */
    public static MemorySegment pango_fontset_get_metrics(MemorySegment fontset) {
        var mh$ = pango_fontset_get_metrics$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_fontset_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$1589.const$4,"pango_fontset_foreach");
    }
    /**
     * {@snippet :
     * void pango_fontset_foreach(struct _PangoFontset* fontset, int (*func)(struct _PangoFontset*,struct _PangoFont*,void*), void* data);
     * }
     */
    public static void pango_fontset_foreach(MemorySegment fontset, MemorySegment func, MemorySegment data) {
        var mh$ = pango_fontset_foreach$MH();
        try {
            mh$.invokeExact(fontset, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_map_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1592.const$4,"pango_font_map_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_font_map_get_type();
     * }
     */
    public static long pango_font_map_get_type() {
        var mh$ = pango_font_map_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_map_create_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1592.const$5,"pango_font_map_create_context");
    }
    /**
     * {@snippet :
     * struct _PangoContext* pango_font_map_create_context(struct _PangoFontMap* fontmap);
     * }
     */
    public static MemorySegment pango_font_map_create_context(MemorySegment fontmap) {
        var mh$ = pango_font_map_create_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontmap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_map_load_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.const$0,"pango_font_map_load_font");
    }
    /**
     * {@snippet :
     * struct _PangoFont* pango_font_map_load_font(struct _PangoFontMap* fontmap, struct _PangoContext* context, struct _PangoFontDescription* desc);
     * }
     */
    public static MemorySegment pango_font_map_load_font(MemorySegment fontmap, MemorySegment context, MemorySegment desc) {
        var mh$ = pango_font_map_load_font$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontmap, context, desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_map_load_fontset$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.const$1,"pango_font_map_load_fontset");
    }
    /**
     * {@snippet :
     * struct _PangoFontset* pango_font_map_load_fontset(struct _PangoFontMap* fontmap, struct _PangoContext* context, struct _PangoFontDescription* desc, struct _PangoLanguage* language);
     * }
     */
    public static MemorySegment pango_font_map_load_fontset(MemorySegment fontmap, MemorySegment context, MemorySegment desc, MemorySegment language) {
        var mh$ = pango_font_map_load_fontset$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontmap, context, desc, language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_map_list_families$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.const$2,"pango_font_map_list_families");
    }
    /**
     * {@snippet :
     * void pango_font_map_list_families(struct _PangoFontMap* fontmap, struct _PangoFontFamily*** families, int* n_families);
     * }
     */
    public static void pango_font_map_list_families(MemorySegment fontmap, MemorySegment families, MemorySegment n_families) {
        var mh$ = pango_font_map_list_families$MH();
        try {
            mh$.invokeExact(fontmap, families, n_families);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_map_get_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.const$3,"pango_font_map_get_serial");
    }
    /**
     * {@snippet :
     * unsigned int pango_font_map_get_serial(struct _PangoFontMap* fontmap);
     * }
     */
    public static int pango_font_map_get_serial(MemorySegment fontmap) {
        var mh$ = pango_font_map_get_serial$MH();
        try {
            return (int)mh$.invokeExact(fontmap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_map_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.const$4,"pango_font_map_changed");
    }
    /**
     * {@snippet :
     * void pango_font_map_changed(struct _PangoFontMap* fontmap);
     * }
     */
    public static void pango_font_map_changed(MemorySegment fontmap) {
        var mh$ = pango_font_map_changed$MH();
        try {
            mh$.invokeExact(fontmap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_map_get_family$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.const$5,"pango_font_map_get_family");
    }
    /**
     * {@snippet :
     * struct _PangoFontFamily* pango_font_map_get_family(struct _PangoFontMap* fontmap, char* name);
     * }
     */
    public static MemorySegment pango_font_map_get_family(MemorySegment fontmap, MemorySegment name) {
        var mh$ = pango_font_map_get_family$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontmap, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _PangoFontMap* PangoFontMap_autoptr;
     * }
     */
    public static final AddressLayout PangoFontMap_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* PangoFontMap_listautoptr;
     * }
     */
    public static final AddressLayout PangoFontMap_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* PangoFontMap_slistautoptr;
     * }
     */
    public static final AddressLayout PangoFontMap_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* PangoFontMap_queueautoptr;
     * }
     */
    public static final AddressLayout PangoFontMap_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle pango_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.const$0,"pango_context_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_context_get_type();
     * }
     */
    public static long pango_context_get_type() {
        var mh$ = pango_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.const$1,"pango_context_new");
    }
    /**
     * {@snippet :
     * struct _PangoContext* pango_context_new();
     * }
     */
    public static MemorySegment pango_context_new() {
        var mh$ = pango_context_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.const$2,"pango_context_changed");
    }
    /**
     * {@snippet :
     * void pango_context_changed(struct _PangoContext* context);
     * }
     */
    public static void pango_context_changed(MemorySegment context) {
        var mh$ = pango_context_changed$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_set_font_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.const$3,"pango_context_set_font_map");
    }
    /**
     * {@snippet :
     * void pango_context_set_font_map(struct _PangoContext* context, struct _PangoFontMap* font_map);
     * }
     */
    public static void pango_context_set_font_map(MemorySegment context, MemorySegment font_map) {
        var mh$ = pango_context_set_font_map$MH();
        try {
            mh$.invokeExact(context, font_map);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_get_font_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.const$4,"pango_context_get_font_map");
    }
    /**
     * {@snippet :
     * struct _PangoFontMap* pango_context_get_font_map(struct _PangoContext* context);
     * }
     */
    public static MemorySegment pango_context_get_font_map(MemorySegment context) {
        var mh$ = pango_context_get_font_map$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_get_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.const$5,"pango_context_get_serial");
    }
    /**
     * {@snippet :
     * unsigned int pango_context_get_serial(struct _PangoContext* context);
     * }
     */
    public static int pango_context_get_serial(MemorySegment context) {
        var mh$ = pango_context_get_serial$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_list_families$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.const$0,"pango_context_list_families");
    }
    /**
     * {@snippet :
     * void pango_context_list_families(struct _PangoContext* context, struct _PangoFontFamily*** families, int* n_families);
     * }
     */
    public static void pango_context_list_families(MemorySegment context, MemorySegment families, MemorySegment n_families) {
        var mh$ = pango_context_list_families$MH();
        try {
            mh$.invokeExact(context, families, n_families);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_load_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.const$1,"pango_context_load_font");
    }
    /**
     * {@snippet :
     * struct _PangoFont* pango_context_load_font(struct _PangoContext* context, struct _PangoFontDescription* desc);
     * }
     */
    public static MemorySegment pango_context_load_font(MemorySegment context, MemorySegment desc) {
        var mh$ = pango_context_load_font$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_load_fontset$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.const$2,"pango_context_load_fontset");
    }
    /**
     * {@snippet :
     * struct _PangoFontset* pango_context_load_fontset(struct _PangoContext* context, struct _PangoFontDescription* desc, struct _PangoLanguage* language);
     * }
     */
    public static MemorySegment pango_context_load_fontset(MemorySegment context, MemorySegment desc, MemorySegment language) {
        var mh$ = pango_context_load_fontset$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, desc, language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_get_metrics$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.const$3,"pango_context_get_metrics");
    }
    /**
     * {@snippet :
     * struct _PangoFontMetrics* pango_context_get_metrics(struct _PangoContext* context, struct _PangoFontDescription* desc, struct _PangoLanguage* language);
     * }
     */
    public static MemorySegment pango_context_get_metrics(MemorySegment context, MemorySegment desc, MemorySegment language) {
        var mh$ = pango_context_get_metrics$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, desc, language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_set_font_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.const$4,"pango_context_set_font_description");
    }
    /**
     * {@snippet :
     * void pango_context_set_font_description(struct _PangoContext* context, struct _PangoFontDescription* desc);
     * }
     */
    public static void pango_context_set_font_description(MemorySegment context, MemorySegment desc) {
        var mh$ = pango_context_set_font_description$MH();
        try {
            mh$.invokeExact(context, desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_get_font_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.const$5,"pango_context_get_font_description");
    }
    /**
     * {@snippet :
     * struct _PangoFontDescription* pango_context_get_font_description(struct _PangoContext* context);
     * }
     */
    public static MemorySegment pango_context_get_font_description(MemorySegment context) {
        var mh$ = pango_context_get_font_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_get_language$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.const$0,"pango_context_get_language");
    }
    /**
     * {@snippet :
     * struct _PangoLanguage* pango_context_get_language(struct _PangoContext* context);
     * }
     */
    public static MemorySegment pango_context_get_language(MemorySegment context) {
        var mh$ = pango_context_get_language$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_set_language$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.const$1,"pango_context_set_language");
    }
    /**
     * {@snippet :
     * void pango_context_set_language(struct _PangoContext* context, struct _PangoLanguage* language);
     * }
     */
    public static void pango_context_set_language(MemorySegment context, MemorySegment language) {
        var mh$ = pango_context_set_language$MH();
        try {
            mh$.invokeExact(context, language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_set_base_dir$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.const$2,"pango_context_set_base_dir");
    }
    /**
     * {@snippet :
     * void pango_context_set_base_dir(struct _PangoContext* context, enum PangoDirection direction);
     * }
     */
    public static void pango_context_set_base_dir(MemorySegment context, int direction) {
        var mh$ = pango_context_set_base_dir$MH();
        try {
            mh$.invokeExact(context, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_get_base_dir$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.const$3,"pango_context_get_base_dir");
    }
    /**
     * {@snippet :
     * enum PangoDirection pango_context_get_base_dir(struct _PangoContext* context);
     * }
     */
    public static int pango_context_get_base_dir(MemorySegment context) {
        var mh$ = pango_context_get_base_dir$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_set_base_gravity$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.const$4,"pango_context_set_base_gravity");
    }
    /**
     * {@snippet :
     * void pango_context_set_base_gravity(struct _PangoContext* context, enum PangoGravity gravity);
     * }
     */
    public static void pango_context_set_base_gravity(MemorySegment context, int gravity) {
        var mh$ = pango_context_set_base_gravity$MH();
        try {
            mh$.invokeExact(context, gravity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_get_base_gravity$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.const$5,"pango_context_get_base_gravity");
    }
    /**
     * {@snippet :
     * enum PangoGravity pango_context_get_base_gravity(struct _PangoContext* context);
     * }
     */
    public static int pango_context_get_base_gravity(MemorySegment context) {
        var mh$ = pango_context_get_base_gravity$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_get_gravity$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.const$0,"pango_context_get_gravity");
    }
    /**
     * {@snippet :
     * enum PangoGravity pango_context_get_gravity(struct _PangoContext* context);
     * }
     */
    public static int pango_context_get_gravity(MemorySegment context) {
        var mh$ = pango_context_get_gravity$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_set_gravity_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.const$1,"pango_context_set_gravity_hint");
    }
    /**
     * {@snippet :
     * void pango_context_set_gravity_hint(struct _PangoContext* context, enum PangoGravityHint hint);
     * }
     */
    public static void pango_context_set_gravity_hint(MemorySegment context, int hint) {
        var mh$ = pango_context_set_gravity_hint$MH();
        try {
            mh$.invokeExact(context, hint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_get_gravity_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.const$2,"pango_context_get_gravity_hint");
    }
    /**
     * {@snippet :
     * enum PangoGravityHint pango_context_get_gravity_hint(struct _PangoContext* context);
     * }
     */
    public static int pango_context_get_gravity_hint(MemorySegment context) {
        var mh$ = pango_context_get_gravity_hint$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_set_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.const$3,"pango_context_set_matrix");
    }
    /**
     * {@snippet :
     * void pango_context_set_matrix(struct _PangoContext* context, struct _PangoMatrix* matrix);
     * }
     */
    public static void pango_context_set_matrix(MemorySegment context, MemorySegment matrix) {
        var mh$ = pango_context_set_matrix$MH();
        try {
            mh$.invokeExact(context, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_get_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.const$4,"pango_context_get_matrix");
    }
    /**
     * {@snippet :
     * struct _PangoMatrix* pango_context_get_matrix(struct _PangoContext* context);
     * }
     */
    public static MemorySegment pango_context_get_matrix(MemorySegment context) {
        var mh$ = pango_context_get_matrix$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_set_round_glyph_positions$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.const$5,"pango_context_set_round_glyph_positions");
    }
    /**
     * {@snippet :
     * void pango_context_set_round_glyph_positions(struct _PangoContext* context, int round_positions);
     * }
     */
    public static void pango_context_set_round_glyph_positions(MemorySegment context, int round_positions) {
        var mh$ = pango_context_set_round_glyph_positions$MH();
        try {
            mh$.invokeExact(context, round_positions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_context_get_round_glyph_positions$MH() {
        return RuntimeHelper.requireNonNull(constants$1598.const$0,"pango_context_get_round_glyph_positions");
    }
    /**
     * {@snippet :
     * int pango_context_get_round_glyph_positions(struct _PangoContext* context);
     * }
     */
    public static int pango_context_get_round_glyph_positions(MemorySegment context) {
        var mh$ = pango_context_get_round_glyph_positions$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef int PangoGlyphUnit;
     * }
     */
    public static final OfInt PangoGlyphUnit = JAVA_INT;
    public static MethodHandle pango_glyph_string_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.const$1,"pango_glyph_string_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_glyph_string_get_type();
     * }
     */
    public static long pango_glyph_string_get_type() {
        var mh$ = pango_glyph_string_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_string_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.const$2,"pango_glyph_string_new");
    }
    /**
     * {@snippet :
     * struct _PangoGlyphString* pango_glyph_string_new();
     * }
     */
    public static MemorySegment pango_glyph_string_new() {
        var mh$ = pango_glyph_string_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_string_set_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.const$3,"pango_glyph_string_set_size");
    }
    /**
     * {@snippet :
     * void pango_glyph_string_set_size(struct _PangoGlyphString* string, int new_len);
     * }
     */
    public static void pango_glyph_string_set_size(MemorySegment string, int new_len) {
        var mh$ = pango_glyph_string_set_size$MH();
        try {
            mh$.invokeExact(string, new_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_string_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.const$4,"pango_glyph_string_copy");
    }
    /**
     * {@snippet :
     * struct _PangoGlyphString* pango_glyph_string_copy(struct _PangoGlyphString* string);
     * }
     */
    public static MemorySegment pango_glyph_string_copy(MemorySegment string) {
        var mh$ = pango_glyph_string_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_string_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.const$5,"pango_glyph_string_free");
    }
    /**
     * {@snippet :
     * void pango_glyph_string_free(struct _PangoGlyphString* string);
     * }
     */
    public static void pango_glyph_string_free(MemorySegment string) {
        var mh$ = pango_glyph_string_free$MH();
        try {
            mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_string_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.const$0,"pango_glyph_string_extents");
    }
    /**
     * {@snippet :
     * void pango_glyph_string_extents(struct _PangoGlyphString* glyphs, struct _PangoFont* font, struct _PangoRectangle* ink_rect, struct _PangoRectangle* logical_rect);
     * }
     */
    public static void pango_glyph_string_extents(MemorySegment glyphs, MemorySegment font, MemorySegment ink_rect, MemorySegment logical_rect) {
        var mh$ = pango_glyph_string_extents$MH();
        try {
            mh$.invokeExact(glyphs, font, ink_rect, logical_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_string_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.const$1,"pango_glyph_string_get_width");
    }
    /**
     * {@snippet :
     * int pango_glyph_string_get_width(struct _PangoGlyphString* glyphs);
     * }
     */
    public static int pango_glyph_string_get_width(MemorySegment glyphs) {
        var mh$ = pango_glyph_string_get_width$MH();
        try {
            return (int)mh$.invokeExact(glyphs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_string_extents_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.const$2,"pango_glyph_string_extents_range");
    }
    /**
     * {@snippet :
     * void pango_glyph_string_extents_range(struct _PangoGlyphString* glyphs, int start, int end, struct _PangoFont* font, struct _PangoRectangle* ink_rect, struct _PangoRectangle* logical_rect);
     * }
     */
    public static void pango_glyph_string_extents_range(MemorySegment glyphs, int start, int end, MemorySegment font, MemorySegment ink_rect, MemorySegment logical_rect) {
        var mh$ = pango_glyph_string_extents_range$MH();
        try {
            mh$.invokeExact(glyphs, start, end, font, ink_rect, logical_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_string_get_logical_widths$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.const$3,"pango_glyph_string_get_logical_widths");
    }
    /**
     * {@snippet :
     * void pango_glyph_string_get_logical_widths(struct _PangoGlyphString* glyphs, char* text, int length, int embedding_level, int* logical_widths);
     * }
     */
    public static void pango_glyph_string_get_logical_widths(MemorySegment glyphs, MemorySegment text, int length, int embedding_level, MemorySegment logical_widths) {
        var mh$ = pango_glyph_string_get_logical_widths$MH();
        try {
            mh$.invokeExact(glyphs, text, length, embedding_level, logical_widths);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_string_index_to_x$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.const$5,"pango_glyph_string_index_to_x");
    }
    /**
     * {@snippet :
     * void pango_glyph_string_index_to_x(struct _PangoGlyphString* glyphs, char* text, int length, struct _PangoAnalysis* analysis, int index_, int trailing, int* x_pos);
     * }
     */
    public static void pango_glyph_string_index_to_x(MemorySegment glyphs, MemorySegment text, int length, MemorySegment analysis, int index_, int trailing, MemorySegment x_pos) {
        var mh$ = pango_glyph_string_index_to_x$MH();
        try {
            mh$.invokeExact(glyphs, text, length, analysis, index_, trailing, x_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_string_x_to_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.const$1,"pango_glyph_string_x_to_index");
    }
    /**
     * {@snippet :
     * void pango_glyph_string_x_to_index(struct _PangoGlyphString* glyphs, char* text, int length, struct _PangoAnalysis* analysis, int x_pos, int* index_, int* trailing);
     * }
     */
    public static void pango_glyph_string_x_to_index(MemorySegment glyphs, MemorySegment text, int length, MemorySegment analysis, int x_pos, MemorySegment index_, MemorySegment trailing) {
        var mh$ = pango_glyph_string_x_to_index$MH();
        try {
            mh$.invokeExact(glyphs, text, length, analysis, x_pos, index_, trailing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_string_index_to_x_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.const$2,"pango_glyph_string_index_to_x_full");
    }
    /**
     * {@snippet :
     * void pango_glyph_string_index_to_x_full(struct _PangoGlyphString* glyphs, char* text, int length, struct _PangoAnalysis* analysis, struct _PangoLogAttr* attrs, int index_, int trailing, int* x_pos);
     * }
     */
    public static void pango_glyph_string_index_to_x_full(MemorySegment glyphs, MemorySegment text, int length, MemorySegment analysis, MemorySegment attrs, int index_, int trailing, MemorySegment x_pos) {
        var mh$ = pango_glyph_string_index_to_x_full$MH();
        try {
            mh$.invokeExact(glyphs, text, length, analysis, attrs, index_, trailing, x_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum PangoShapeFlags.PANGO_SHAPE_NONE = 0;
     * }
     */
    public static int PANGO_SHAPE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoShapeFlags.PANGO_SHAPE_ROUND_POSITIONS = 1;
     * }
     */
    public static int PANGO_SHAPE_ROUND_POSITIONS() {
        return (int)1L;
    }
    public static MethodHandle pango_shape$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.const$3,"pango_shape");
    }
    /**
     * {@snippet :
     * void pango_shape(char* text, int length, struct _PangoAnalysis* analysis, struct _PangoGlyphString* glyphs);
     * }
     */
    public static void pango_shape(MemorySegment text, int length, MemorySegment analysis, MemorySegment glyphs) {
        var mh$ = pango_shape$MH();
        try {
            mh$.invokeExact(text, length, analysis, glyphs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_shape_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.const$5,"pango_shape_full");
    }
    /**
     * {@snippet :
     * void pango_shape_full(char* item_text, int item_length, char* paragraph_text, int paragraph_length, struct _PangoAnalysis* analysis, struct _PangoGlyphString* glyphs);
     * }
     */
    public static void pango_shape_full(MemorySegment item_text, int item_length, MemorySegment paragraph_text, int paragraph_length, MemorySegment analysis, MemorySegment glyphs) {
        var mh$ = pango_shape_full$MH();
        try {
            mh$.invokeExact(item_text, item_length, paragraph_text, paragraph_length, analysis, glyphs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_shape_with_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.const$1,"pango_shape_with_flags");
    }
    /**
     * {@snippet :
     * void pango_shape_with_flags(char* item_text, int item_length, char* paragraph_text, int paragraph_length, struct _PangoAnalysis* analysis, struct _PangoGlyphString* glyphs, enum PangoShapeFlags flags);
     * }
     */
    public static void pango_shape_with_flags(MemorySegment item_text, int item_length, MemorySegment paragraph_text, int paragraph_length, MemorySegment analysis, MemorySegment glyphs, int flags) {
        var mh$ = pango_shape_with_flags$MH();
        try {
            mh$.invokeExact(item_text, item_length, paragraph_text, paragraph_length, analysis, glyphs, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_shape_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.const$3,"pango_shape_item");
    }
    /**
     * {@snippet :
     * void pango_shape_item(struct _PangoItem* item, char* paragraph_text, int paragraph_length, struct _PangoLogAttr* log_attrs, struct _PangoGlyphString* glyphs, enum PangoShapeFlags flags);
     * }
     */
    public static void pango_shape_item(MemorySegment item, MemorySegment paragraph_text, int paragraph_length, MemorySegment log_attrs, MemorySegment glyphs, int flags) {
        var mh$ = pango_shape_item$MH();
        try {
            mh$.invokeExact(item, paragraph_text, paragraph_length, log_attrs, glyphs, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_engine_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1604.const$0,"pango_engine_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_engine_get_type();
     * }
     */
    public static long pango_engine_get_type() {
        var mh$ = pango_engine_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_engine_lang_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1605.const$0,"pango_engine_lang_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_engine_lang_get_type();
     * }
     */
    public static long pango_engine_lang_get_type() {
        var mh$ = pango_engine_lang_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_engine_shape_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1606.const$4,"pango_engine_shape_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_engine_shape_get_type();
     * }
     */
    public static long pango_engine_shape_get_type() {
        var mh$ = pango_engine_shape_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle script_engine_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.const$2,"script_engine_list");
    }
    /**
     * {@snippet :
     * void script_engine_list(struct _PangoEngineInfo** engines, int* n_engines);
     * }
     */
    public static void script_engine_list(MemorySegment engines, MemorySegment n_engines) {
        var mh$ = script_engine_list$MH();
        try {
            mh$.invokeExact(engines, n_engines);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle script_engine_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.const$3,"script_engine_init");
    }
    /**
     * {@snippet :
     * void script_engine_init(struct _GTypeModule* module);
     * }
     */
    public static void script_engine_init(MemorySegment module) {
        var mh$ = script_engine_init$MH();
        try {
            mh$.invokeExact(module);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle script_engine_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.const$4,"script_engine_exit");
    }
    /**
     * {@snippet :
     * void script_engine_exit();
     * }
     */
    public static void script_engine_exit() {
        var mh$ = script_engine_exit$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle script_engine_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.const$5,"script_engine_create");
    }
    /**
     * {@snippet :
     * struct _PangoEngine* script_engine_create(char* id);
     * }
     */
    public static MemorySegment script_engine_create(MemorySegment id) {
        var mh$ = script_engine_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_attr_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.const$0,"pango_attr_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_attr_type_get_type();
     * }
     */
    public static long pango_attr_type_get_type() {
        var mh$ = pango_attr_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_underline_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.const$1,"pango_underline_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_underline_get_type();
     * }
     */
    public static long pango_underline_get_type() {
        var mh$ = pango_underline_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_overline_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.const$2,"pango_overline_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_overline_get_type();
     * }
     */
    public static long pango_overline_get_type() {
        var mh$ = pango_overline_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_show_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.const$3,"pango_show_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_show_flags_get_type();
     * }
     */
    public static long pango_show_flags_get_type() {
        var mh$ = pango_show_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_text_transform_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.const$4,"pango_text_transform_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_text_transform_get_type();
     * }
     */
    public static long pango_text_transform_get_type() {
        var mh$ = pango_text_transform_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_baseline_shift_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.const$5,"pango_baseline_shift_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_baseline_shift_get_type();
     * }
     */
    public static long pango_baseline_shift_get_type() {
        var mh$ = pango_baseline_shift_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_scale_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.const$0,"pango_font_scale_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_font_scale_get_type();
     * }
     */
    public static long pango_font_scale_get_type() {
        var mh$ = pango_font_scale_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_bidi_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.const$1,"pango_bidi_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_bidi_type_get_type();
     * }
     */
    public static long pango_bidi_type_get_type() {
        var mh$ = pango_bidi_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_coverage_level_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.const$2,"pango_coverage_level_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_coverage_level_get_type();
     * }
     */
    public static long pango_coverage_level_get_type() {
        var mh$ = pango_coverage_level_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_direction_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.const$3,"pango_direction_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_direction_get_type();
     * }
     */
    public static long pango_direction_get_type() {
        var mh$ = pango_direction_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_style_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.const$4,"pango_style_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_style_get_type();
     * }
     */
    public static long pango_style_get_type() {
        var mh$ = pango_style_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_variant_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.const$5,"pango_variant_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_variant_get_type();
     * }
     */
    public static long pango_variant_get_type() {
        var mh$ = pango_variant_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_weight_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.const$0,"pango_weight_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_weight_get_type();
     * }
     */
    public static long pango_weight_get_type() {
        var mh$ = pango_weight_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_stretch_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.const$1,"pango_stretch_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_stretch_get_type();
     * }
     */
    public static long pango_stretch_get_type() {
        var mh$ = pango_stretch_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_font_mask_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.const$2,"pango_font_mask_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_font_mask_get_type();
     * }
     */
    public static long pango_font_mask_get_type() {
        var mh$ = pango_font_mask_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_shape_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.const$3,"pango_shape_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_shape_flags_get_type();
     * }
     */
    public static long pango_shape_flags_get_type() {
        var mh$ = pango_shape_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_gravity_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.const$4,"pango_gravity_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_gravity_get_type();
     * }
     */
    public static long pango_gravity_get_type() {
        var mh$ = pango_gravity_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_gravity_hint_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.const$5,"pango_gravity_hint_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_gravity_hint_get_type();
     * }
     */
    public static long pango_gravity_hint_get_type() {
        var mh$ = pango_gravity_hint_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_alignment_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.const$0,"pango_alignment_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_alignment_get_type();
     * }
     */
    public static long pango_alignment_get_type() {
        var mh$ = pango_alignment_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_wrap_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.const$1,"pango_wrap_mode_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_wrap_mode_get_type();
     * }
     */
    public static long pango_wrap_mode_get_type() {
        var mh$ = pango_wrap_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_ellipsize_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.const$2,"pango_ellipsize_mode_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_ellipsize_mode_get_type();
     * }
     */
    public static long pango_ellipsize_mode_get_type() {
        var mh$ = pango_ellipsize_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_serialize_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.const$3,"pango_layout_serialize_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_layout_serialize_flags_get_type();
     * }
     */
    public static long pango_layout_serialize_flags_get_type() {
        var mh$ = pango_layout_serialize_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_deserialize_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.const$4,"pango_layout_deserialize_error_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_layout_deserialize_error_get_type();
     * }
     */
    public static long pango_layout_deserialize_error_get_type() {
        var mh$ = pango_layout_deserialize_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_deserialize_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.const$5,"pango_layout_deserialize_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_layout_deserialize_flags_get_type();
     * }
     */
    public static long pango_layout_deserialize_flags_get_type() {
        var mh$ = pango_layout_deserialize_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_render_part_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.const$0,"pango_render_part_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_render_part_get_type();
     * }
     */
    public static long pango_render_part_get_type() {
        var mh$ = pango_render_part_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_script_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.const$1,"pango_script_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_script_get_type();
     * }
     */
    public static long pango_script_get_type() {
        var mh$ = pango_script_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_tab_align_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.const$2,"pango_tab_align_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_tab_align_get_type();
     * }
     */
    public static long pango_tab_align_get_type() {
        var mh$ = pango_tab_align_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_fontset_simple_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.const$3,"pango_fontset_simple_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_fontset_simple_get_type();
     * }
     */
    public static long pango_fontset_simple_get_type() {
        var mh$ = pango_fontset_simple_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_fontset_simple_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.const$4,"pango_fontset_simple_new");
    }
    /**
     * {@snippet :
     * struct _PangoFontsetSimple* pango_fontset_simple_new(struct _PangoLanguage* language);
     * }
     */
    public static MemorySegment pango_fontset_simple_new(MemorySegment language) {
        var mh$ = pango_fontset_simple_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_fontset_simple_append$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.const$5,"pango_fontset_simple_append");
    }
    /**
     * {@snippet :
     * void pango_fontset_simple_append(struct _PangoFontsetSimple* fontset, struct _PangoFont* font);
     * }
     */
    public static void pango_fontset_simple_append(MemorySegment fontset, MemorySegment font) {
        var mh$ = pango_fontset_simple_append$MH();
        try {
            mh$.invokeExact(fontset, font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_fontset_simple_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1614.const$0,"pango_fontset_simple_size");
    }
    /**
     * {@snippet :
     * int pango_fontset_simple_size(struct _PangoFontsetSimple* fontset);
     * }
     */
    public static int pango_fontset_simple_size(MemorySegment fontset) {
        var mh$ = pango_fontset_simple_size$MH();
        try {
            return (int)mh$.invokeExact(fontset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_item_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.const$1,"pango_glyph_item_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_glyph_item_get_type();
     * }
     */
    public static long pango_glyph_item_get_type() {
        var mh$ = pango_glyph_item_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_item_split$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.const$2,"pango_glyph_item_split");
    }
    /**
     * {@snippet :
     * struct _PangoGlyphItem* pango_glyph_item_split(struct _PangoGlyphItem* orig, char* text, int split_index);
     * }
     */
    public static MemorySegment pango_glyph_item_split(MemorySegment orig, MemorySegment text, int split_index) {
        var mh$ = pango_glyph_item_split$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(orig, text, split_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_item_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.const$3,"pango_glyph_item_copy");
    }
    /**
     * {@snippet :
     * struct _PangoGlyphItem* pango_glyph_item_copy(struct _PangoGlyphItem* orig);
     * }
     */
    public static MemorySegment pango_glyph_item_copy(MemorySegment orig) {
        var mh$ = pango_glyph_item_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(orig);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_item_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.const$4,"pango_glyph_item_free");
    }
    /**
     * {@snippet :
     * void pango_glyph_item_free(struct _PangoGlyphItem* glyph_item);
     * }
     */
    public static void pango_glyph_item_free(MemorySegment glyph_item) {
        var mh$ = pango_glyph_item_free$MH();
        try {
            mh$.invokeExact(glyph_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_item_apply_attrs$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.const$5,"pango_glyph_item_apply_attrs");
    }
    /**
     * {@snippet :
     * struct _GSList* pango_glyph_item_apply_attrs(struct _PangoGlyphItem* glyph_item, char* text, struct _PangoAttrList* list);
     * }
     */
    public static MemorySegment pango_glyph_item_apply_attrs(MemorySegment glyph_item, MemorySegment text, MemorySegment list) {
        var mh$ = pango_glyph_item_apply_attrs$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(glyph_item, text, list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_item_letter_space$MH() {
        return RuntimeHelper.requireNonNull(constants$1616.const$0,"pango_glyph_item_letter_space");
    }
    /**
     * {@snippet :
     * void pango_glyph_item_letter_space(struct _PangoGlyphItem* glyph_item, char* text, struct _PangoLogAttr* log_attrs, int letter_spacing);
     * }
     */
    public static void pango_glyph_item_letter_space(MemorySegment glyph_item, MemorySegment text, MemorySegment log_attrs, int letter_spacing) {
        var mh$ = pango_glyph_item_letter_space$MH();
        try {
            mh$.invokeExact(glyph_item, text, log_attrs, letter_spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_item_get_logical_widths$MH() {
        return RuntimeHelper.requireNonNull(constants$1616.const$1,"pango_glyph_item_get_logical_widths");
    }
    /**
     * {@snippet :
     * void pango_glyph_item_get_logical_widths(struct _PangoGlyphItem* glyph_item, char* text, int* logical_widths);
     * }
     */
    public static void pango_glyph_item_get_logical_widths(MemorySegment glyph_item, MemorySegment text, MemorySegment logical_widths) {
        var mh$ = pango_glyph_item_get_logical_widths$MH();
        try {
            mh$.invokeExact(glyph_item, text, logical_widths);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_item_iter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1617.const$5,"pango_glyph_item_iter_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_glyph_item_iter_get_type();
     * }
     */
    public static long pango_glyph_item_iter_get_type() {
        var mh$ = pango_glyph_item_iter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_item_iter_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1618.const$0,"pango_glyph_item_iter_copy");
    }
    /**
     * {@snippet :
     * struct _PangoGlyphItemIter* pango_glyph_item_iter_copy(struct _PangoGlyphItemIter* orig);
     * }
     */
    public static MemorySegment pango_glyph_item_iter_copy(MemorySegment orig) {
        var mh$ = pango_glyph_item_iter_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(orig);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_item_iter_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1618.const$1,"pango_glyph_item_iter_free");
    }
    /**
     * {@snippet :
     * void pango_glyph_item_iter_free(struct _PangoGlyphItemIter* iter);
     * }
     */
    public static void pango_glyph_item_iter_free(MemorySegment iter) {
        var mh$ = pango_glyph_item_iter_free$MH();
        try {
            mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_item_iter_init_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1618.const$2,"pango_glyph_item_iter_init_start");
    }
    /**
     * {@snippet :
     * int pango_glyph_item_iter_init_start(struct _PangoGlyphItemIter* iter, struct _PangoGlyphItem* glyph_item, char* text);
     * }
     */
    public static int pango_glyph_item_iter_init_start(MemorySegment iter, MemorySegment glyph_item, MemorySegment text) {
        var mh$ = pango_glyph_item_iter_init_start$MH();
        try {
            return (int)mh$.invokeExact(iter, glyph_item, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_item_iter_init_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1618.const$3,"pango_glyph_item_iter_init_end");
    }
    /**
     * {@snippet :
     * int pango_glyph_item_iter_init_end(struct _PangoGlyphItemIter* iter, struct _PangoGlyphItem* glyph_item, char* text);
     * }
     */
    public static int pango_glyph_item_iter_init_end(MemorySegment iter, MemorySegment glyph_item, MemorySegment text) {
        var mh$ = pango_glyph_item_iter_init_end$MH();
        try {
            return (int)mh$.invokeExact(iter, glyph_item, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_item_iter_next_cluster$MH() {
        return RuntimeHelper.requireNonNull(constants$1618.const$4,"pango_glyph_item_iter_next_cluster");
    }
    /**
     * {@snippet :
     * int pango_glyph_item_iter_next_cluster(struct _PangoGlyphItemIter* iter);
     * }
     */
    public static int pango_glyph_item_iter_next_cluster(MemorySegment iter) {
        var mh$ = pango_glyph_item_iter_next_cluster$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_glyph_item_iter_prev_cluster$MH() {
        return RuntimeHelper.requireNonNull(constants$1618.const$5,"pango_glyph_item_iter_prev_cluster");
    }
    /**
     * {@snippet :
     * int pango_glyph_item_iter_prev_cluster(struct _PangoGlyphItemIter* iter);
     * }
     */
    public static int pango_glyph_item_iter_prev_cluster(MemorySegment iter) {
        var mh$ = pango_glyph_item_iter_prev_cluster$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum PangoTabAlign.PANGO_TAB_LEFT = 0;
     * }
     */
    public static int PANGO_TAB_LEFT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoTabAlign.PANGO_TAB_RIGHT = 1;
     * }
     */
    public static int PANGO_TAB_RIGHT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoTabAlign.PANGO_TAB_CENTER = 2;
     * }
     */
    public static int PANGO_TAB_CENTER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum PangoTabAlign.PANGO_TAB_DECIMAL = 3;
     * }
     */
    public static int PANGO_TAB_DECIMAL() {
        return (int)3L;
    }
    public static MethodHandle pango_tab_array_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1619.const$0,"pango_tab_array_new");
    }
    /**
     * {@snippet :
     * struct _PangoTabArray* pango_tab_array_new(int initial_size, int positions_in_pixels);
     * }
     */
    public static MemorySegment pango_tab_array_new(int initial_size, int positions_in_pixels) {
        var mh$ = pango_tab_array_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(initial_size, positions_in_pixels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_tab_array_new_with_positions$MH() {
        return RuntimeHelper.requireNonNull(constants$1619.const$1,"pango_tab_array_new_with_positions");
    }
    /**
     * {@snippet :
     * struct _PangoTabArray* pango_tab_array_new_with_positions(int size, int positions_in_pixels, enum PangoTabAlign first_alignment, int first_position,...);
     * }
     */
    public static MemorySegment pango_tab_array_new_with_positions(int size, int positions_in_pixels, int first_alignment, int first_position, Object... x4) {
        var mh$ = pango_tab_array_new_with_positions$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(size, positions_in_pixels, first_alignment, first_position, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_tab_array_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1619.const$2,"pango_tab_array_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_tab_array_get_type();
     * }
     */
    public static long pango_tab_array_get_type() {
        var mh$ = pango_tab_array_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_tab_array_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1619.const$3,"pango_tab_array_copy");
    }
    /**
     * {@snippet :
     * struct _PangoTabArray* pango_tab_array_copy(struct _PangoTabArray* src);
     * }
     */
    public static MemorySegment pango_tab_array_copy(MemorySegment src) {
        var mh$ = pango_tab_array_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_tab_array_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1619.const$4,"pango_tab_array_free");
    }
    /**
     * {@snippet :
     * void pango_tab_array_free(struct _PangoTabArray* tab_array);
     * }
     */
    public static void pango_tab_array_free(MemorySegment tab_array) {
        var mh$ = pango_tab_array_free$MH();
        try {
            mh$.invokeExact(tab_array);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_tab_array_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1619.const$5,"pango_tab_array_get_size");
    }
    /**
     * {@snippet :
     * int pango_tab_array_get_size(struct _PangoTabArray* tab_array);
     * }
     */
    public static int pango_tab_array_get_size(MemorySegment tab_array) {
        var mh$ = pango_tab_array_get_size$MH();
        try {
            return (int)mh$.invokeExact(tab_array);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_tab_array_resize$MH() {
        return RuntimeHelper.requireNonNull(constants$1620.const$0,"pango_tab_array_resize");
    }
    /**
     * {@snippet :
     * void pango_tab_array_resize(struct _PangoTabArray* tab_array, int new_size);
     * }
     */
    public static void pango_tab_array_resize(MemorySegment tab_array, int new_size) {
        var mh$ = pango_tab_array_resize$MH();
        try {
            mh$.invokeExact(tab_array, new_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_tab_array_set_tab$MH() {
        return RuntimeHelper.requireNonNull(constants$1620.const$1,"pango_tab_array_set_tab");
    }
    /**
     * {@snippet :
     * void pango_tab_array_set_tab(struct _PangoTabArray* tab_array, int tab_index, enum PangoTabAlign alignment, int location);
     * }
     */
    public static void pango_tab_array_set_tab(MemorySegment tab_array, int tab_index, int alignment, int location) {
        var mh$ = pango_tab_array_set_tab$MH();
        try {
            mh$.invokeExact(tab_array, tab_index, alignment, location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_tab_array_get_tab$MH() {
        return RuntimeHelper.requireNonNull(constants$1620.const$2,"pango_tab_array_get_tab");
    }
    /**
     * {@snippet :
     * void pango_tab_array_get_tab(struct _PangoTabArray* tab_array, int tab_index, enum PangoTabAlign* alignment, int* location);
     * }
     */
    public static void pango_tab_array_get_tab(MemorySegment tab_array, int tab_index, MemorySegment alignment, MemorySegment location) {
        var mh$ = pango_tab_array_get_tab$MH();
        try {
            mh$.invokeExact(tab_array, tab_index, alignment, location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_tab_array_get_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$1620.const$3,"pango_tab_array_get_tabs");
    }
    /**
     * {@snippet :
     * void pango_tab_array_get_tabs(struct _PangoTabArray* tab_array, enum PangoTabAlign** alignments, int** locations);
     * }
     */
    public static void pango_tab_array_get_tabs(MemorySegment tab_array, MemorySegment alignments, MemorySegment locations) {
        var mh$ = pango_tab_array_get_tabs$MH();
        try {
            mh$.invokeExact(tab_array, alignments, locations);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_tab_array_get_positions_in_pixels$MH() {
        return RuntimeHelper.requireNonNull(constants$1620.const$4,"pango_tab_array_get_positions_in_pixels");
    }
    /**
     * {@snippet :
     * int pango_tab_array_get_positions_in_pixels(struct _PangoTabArray* tab_array);
     * }
     */
    public static int pango_tab_array_get_positions_in_pixels(MemorySegment tab_array) {
        var mh$ = pango_tab_array_get_positions_in_pixels$MH();
        try {
            return (int)mh$.invokeExact(tab_array);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_tab_array_set_positions_in_pixels$MH() {
        return RuntimeHelper.requireNonNull(constants$1620.const$5,"pango_tab_array_set_positions_in_pixels");
    }
    /**
     * {@snippet :
     * void pango_tab_array_set_positions_in_pixels(struct _PangoTabArray* tab_array, int positions_in_pixels);
     * }
     */
    public static void pango_tab_array_set_positions_in_pixels(MemorySegment tab_array, int positions_in_pixels) {
        var mh$ = pango_tab_array_set_positions_in_pixels$MH();
        try {
            mh$.invokeExact(tab_array, positions_in_pixels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_tab_array_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1621.const$0,"pango_tab_array_to_string");
    }
    /**
     * {@snippet :
     * char* pango_tab_array_to_string(struct _PangoTabArray* tab_array);
     * }
     */
    public static MemorySegment pango_tab_array_to_string(MemorySegment tab_array) {
        var mh$ = pango_tab_array_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tab_array);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_tab_array_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1621.const$1,"pango_tab_array_from_string");
    }
    /**
     * {@snippet :
     * struct _PangoTabArray* pango_tab_array_from_string(char* text);
     * }
     */
    public static MemorySegment pango_tab_array_from_string(MemorySegment text) {
        var mh$ = pango_tab_array_from_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_tab_array_set_decimal_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1621.const$2,"pango_tab_array_set_decimal_point");
    }
    /**
     * {@snippet :
     * void pango_tab_array_set_decimal_point(struct _PangoTabArray* tab_array, int tab_index, unsigned int decimal_point);
     * }
     */
    public static void pango_tab_array_set_decimal_point(MemorySegment tab_array, int tab_index, int decimal_point) {
        var mh$ = pango_tab_array_set_decimal_point$MH();
        try {
            mh$.invokeExact(tab_array, tab_index, decimal_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_tab_array_get_decimal_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1621.const$3,"pango_tab_array_get_decimal_point");
    }
    /**
     * {@snippet :
     * unsigned int pango_tab_array_get_decimal_point(struct _PangoTabArray* tab_array, int tab_index);
     * }
     */
    public static int pango_tab_array_get_decimal_point(MemorySegment tab_array, int tab_index) {
        var mh$ = pango_tab_array_get_decimal_point$MH();
        try {
            return (int)mh$.invokeExact(tab_array, tab_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_tab_array_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$1621.const$4,"pango_tab_array_sort");
    }
    /**
     * {@snippet :
     * void pango_tab_array_sort(struct _PangoTabArray* tab_array);
     * }
     */
    public static void pango_tab_array_sort(MemorySegment tab_array) {
        var mh$ = pango_tab_array_sort$MH();
        try {
            mh$.invokeExact(tab_array);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _PangoTabArray* PangoTabArray_autoptr;
     * }
     */
    public static final AddressLayout PangoTabArray_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* PangoTabArray_listautoptr;
     * }
     */
    public static final AddressLayout PangoTabArray_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* PangoTabArray_slistautoptr;
     * }
     */
    public static final AddressLayout PangoTabArray_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* PangoTabArray_queueautoptr;
     * }
     */
    public static final AddressLayout PangoTabArray_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum PangoAlignment.PANGO_ALIGN_LEFT = 0;
     * }
     */
    public static int PANGO_ALIGN_LEFT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoAlignment.PANGO_ALIGN_CENTER = 1;
     * }
     */
    public static int PANGO_ALIGN_CENTER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoAlignment.PANGO_ALIGN_RIGHT = 2;
     * }
     */
    public static int PANGO_ALIGN_RIGHT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum PangoWrapMode.PANGO_WRAP_WORD = 0;
     * }
     */
    public static int PANGO_WRAP_WORD() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoWrapMode.PANGO_WRAP_CHAR = 1;
     * }
     */
    public static int PANGO_WRAP_CHAR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoWrapMode.PANGO_WRAP_WORD_CHAR = 2;
     * }
     */
    public static int PANGO_WRAP_WORD_CHAR() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum PangoEllipsizeMode.PANGO_ELLIPSIZE_NONE = 0;
     * }
     */
    public static int PANGO_ELLIPSIZE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoEllipsizeMode.PANGO_ELLIPSIZE_START = 1;
     * }
     */
    public static int PANGO_ELLIPSIZE_START() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoEllipsizeMode.PANGO_ELLIPSIZE_MIDDLE = 2;
     * }
     */
    public static int PANGO_ELLIPSIZE_MIDDLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum PangoEllipsizeMode.PANGO_ELLIPSIZE_END = 3;
     * }
     */
    public static int PANGO_ELLIPSIZE_END() {
        return (int)3L;
    }
    public static MethodHandle pango_layout_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1622.const$4,"pango_layout_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_layout_get_type();
     * }
     */
    public static long pango_layout_get_type() {
        var mh$ = pango_layout_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1622.const$5,"pango_layout_new");
    }
    /**
     * {@snippet :
     * struct _PangoLayout* pango_layout_new(struct _PangoContext* context);
     * }
     */
    public static MemorySegment pango_layout_new(MemorySegment context) {
        var mh$ = pango_layout_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1623.const$0,"pango_layout_copy");
    }
    /**
     * {@snippet :
     * struct _PangoLayout* pango_layout_copy(struct _PangoLayout* src);
     * }
     */
    public static MemorySegment pango_layout_copy(MemorySegment src) {
        var mh$ = pango_layout_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1623.const$1,"pango_layout_get_context");
    }
    /**
     * {@snippet :
     * struct _PangoContext* pango_layout_get_context(struct _PangoLayout* layout);
     * }
     */
    public static MemorySegment pango_layout_get_context(MemorySegment layout) {
        var mh$ = pango_layout_get_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_set_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1623.const$2,"pango_layout_set_attributes");
    }
    /**
     * {@snippet :
     * void pango_layout_set_attributes(struct _PangoLayout* layout, struct _PangoAttrList* attrs);
     * }
     */
    public static void pango_layout_set_attributes(MemorySegment layout, MemorySegment attrs) {
        var mh$ = pango_layout_set_attributes$MH();
        try {
            mh$.invokeExact(layout, attrs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1623.const$3,"pango_layout_get_attributes");
    }
    /**
     * {@snippet :
     * struct _PangoAttrList* pango_layout_get_attributes(struct _PangoLayout* layout);
     * }
     */
    public static MemorySegment pango_layout_get_attributes(MemorySegment layout) {
        var mh$ = pango_layout_get_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1623.const$4,"pango_layout_set_text");
    }
    /**
     * {@snippet :
     * void pango_layout_set_text(struct _PangoLayout* layout, char* text, int length);
     * }
     */
    public static void pango_layout_set_text(MemorySegment layout, MemorySegment text, int length) {
        var mh$ = pango_layout_set_text$MH();
        try {
            mh$.invokeExact(layout, text, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1623.const$5,"pango_layout_get_text");
    }
    /**
     * {@snippet :
     * char* pango_layout_get_text(struct _PangoLayout* layout);
     * }
     */
    public static MemorySegment pango_layout_get_text(MemorySegment layout) {
        var mh$ = pango_layout_get_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_character_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1624.const$0,"pango_layout_get_character_count");
    }
    /**
     * {@snippet :
     * int pango_layout_get_character_count(struct _PangoLayout* layout);
     * }
     */
    public static int pango_layout_get_character_count(MemorySegment layout) {
        var mh$ = pango_layout_get_character_count$MH();
        try {
            return (int)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_set_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1624.const$1,"pango_layout_set_markup");
    }
    /**
     * {@snippet :
     * void pango_layout_set_markup(struct _PangoLayout* layout, char* markup, int length);
     * }
     */
    public static void pango_layout_set_markup(MemorySegment layout, MemorySegment markup, int length) {
        var mh$ = pango_layout_set_markup$MH();
        try {
            mh$.invokeExact(layout, markup, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_set_markup_with_accel$MH() {
        return RuntimeHelper.requireNonNull(constants$1624.const$2,"pango_layout_set_markup_with_accel");
    }
    /**
     * {@snippet :
     * void pango_layout_set_markup_with_accel(struct _PangoLayout* layout, char* markup, int length, unsigned int accel_marker, unsigned int* accel_char);
     * }
     */
    public static void pango_layout_set_markup_with_accel(MemorySegment layout, MemorySegment markup, int length, int accel_marker, MemorySegment accel_char) {
        var mh$ = pango_layout_set_markup_with_accel$MH();
        try {
            mh$.invokeExact(layout, markup, length, accel_marker, accel_char);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_set_font_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1624.const$3,"pango_layout_set_font_description");
    }
    /**
     * {@snippet :
     * void pango_layout_set_font_description(struct _PangoLayout* layout, struct _PangoFontDescription* desc);
     * }
     */
    public static void pango_layout_set_font_description(MemorySegment layout, MemorySegment desc) {
        var mh$ = pango_layout_set_font_description$MH();
        try {
            mh$.invokeExact(layout, desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_font_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1624.const$4,"pango_layout_get_font_description");
    }
    /**
     * {@snippet :
     * struct _PangoFontDescription* pango_layout_get_font_description(struct _PangoLayout* layout);
     * }
     */
    public static MemorySegment pango_layout_get_font_description(MemorySegment layout) {
        var mh$ = pango_layout_get_font_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_set_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1624.const$5,"pango_layout_set_width");
    }
    /**
     * {@snippet :
     * void pango_layout_set_width(struct _PangoLayout* layout, int width);
     * }
     */
    public static void pango_layout_set_width(MemorySegment layout, int width) {
        var mh$ = pango_layout_set_width$MH();
        try {
            mh$.invokeExact(layout, width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1625.const$0,"pango_layout_get_width");
    }
    /**
     * {@snippet :
     * int pango_layout_get_width(struct _PangoLayout* layout);
     * }
     */
    public static int pango_layout_get_width(MemorySegment layout) {
        var mh$ = pango_layout_get_width$MH();
        try {
            return (int)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_set_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1625.const$1,"pango_layout_set_height");
    }
    /**
     * {@snippet :
     * void pango_layout_set_height(struct _PangoLayout* layout, int height);
     * }
     */
    public static void pango_layout_set_height(MemorySegment layout, int height) {
        var mh$ = pango_layout_set_height$MH();
        try {
            mh$.invokeExact(layout, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1625.const$2,"pango_layout_get_height");
    }
    /**
     * {@snippet :
     * int pango_layout_get_height(struct _PangoLayout* layout);
     * }
     */
    public static int pango_layout_get_height(MemorySegment layout) {
        var mh$ = pango_layout_get_height$MH();
        try {
            return (int)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_set_wrap$MH() {
        return RuntimeHelper.requireNonNull(constants$1625.const$3,"pango_layout_set_wrap");
    }
    /**
     * {@snippet :
     * void pango_layout_set_wrap(struct _PangoLayout* layout, enum PangoWrapMode wrap);
     * }
     */
    public static void pango_layout_set_wrap(MemorySegment layout, int wrap) {
        var mh$ = pango_layout_set_wrap$MH();
        try {
            mh$.invokeExact(layout, wrap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_wrap$MH() {
        return RuntimeHelper.requireNonNull(constants$1625.const$4,"pango_layout_get_wrap");
    }
    /**
     * {@snippet :
     * enum PangoWrapMode pango_layout_get_wrap(struct _PangoLayout* layout);
     * }
     */
    public static int pango_layout_get_wrap(MemorySegment layout) {
        var mh$ = pango_layout_get_wrap$MH();
        try {
            return (int)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_is_wrapped$MH() {
        return RuntimeHelper.requireNonNull(constants$1625.const$5,"pango_layout_is_wrapped");
    }
    /**
     * {@snippet :
     * int pango_layout_is_wrapped(struct _PangoLayout* layout);
     * }
     */
    public static int pango_layout_is_wrapped(MemorySegment layout) {
        var mh$ = pango_layout_is_wrapped$MH();
        try {
            return (int)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_set_indent$MH() {
        return RuntimeHelper.requireNonNull(constants$1626.const$0,"pango_layout_set_indent");
    }
    /**
     * {@snippet :
     * void pango_layout_set_indent(struct _PangoLayout* layout, int indent);
     * }
     */
    public static void pango_layout_set_indent(MemorySegment layout, int indent) {
        var mh$ = pango_layout_set_indent$MH();
        try {
            mh$.invokeExact(layout, indent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_indent$MH() {
        return RuntimeHelper.requireNonNull(constants$1626.const$1,"pango_layout_get_indent");
    }
    /**
     * {@snippet :
     * int pango_layout_get_indent(struct _PangoLayout* layout);
     * }
     */
    public static int pango_layout_get_indent(MemorySegment layout) {
        var mh$ = pango_layout_get_indent$MH();
        try {
            return (int)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_set_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1626.const$2,"pango_layout_set_spacing");
    }
    /**
     * {@snippet :
     * void pango_layout_set_spacing(struct _PangoLayout* layout, int spacing);
     * }
     */
    public static void pango_layout_set_spacing(MemorySegment layout, int spacing) {
        var mh$ = pango_layout_set_spacing$MH();
        try {
            mh$.invokeExact(layout, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1626.const$3,"pango_layout_get_spacing");
    }
    /**
     * {@snippet :
     * int pango_layout_get_spacing(struct _PangoLayout* layout);
     * }
     */
    public static int pango_layout_get_spacing(MemorySegment layout) {
        var mh$ = pango_layout_get_spacing$MH();
        try {
            return (int)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_set_line_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1626.const$4,"pango_layout_set_line_spacing");
    }
    /**
     * {@snippet :
     * void pango_layout_set_line_spacing(struct _PangoLayout* layout, float factor);
     * }
     */
    public static void pango_layout_set_line_spacing(MemorySegment layout, float factor) {
        var mh$ = pango_layout_set_line_spacing$MH();
        try {
            mh$.invokeExact(layout, factor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_line_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1626.const$5,"pango_layout_get_line_spacing");
    }
    /**
     * {@snippet :
     * float pango_layout_get_line_spacing(struct _PangoLayout* layout);
     * }
     */
    public static float pango_layout_get_line_spacing(MemorySegment layout) {
        var mh$ = pango_layout_get_line_spacing$MH();
        try {
            return (float)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_set_justify$MH() {
        return RuntimeHelper.requireNonNull(constants$1627.const$0,"pango_layout_set_justify");
    }
    /**
     * {@snippet :
     * void pango_layout_set_justify(struct _PangoLayout* layout, int justify);
     * }
     */
    public static void pango_layout_set_justify(MemorySegment layout, int justify) {
        var mh$ = pango_layout_set_justify$MH();
        try {
            mh$.invokeExact(layout, justify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_justify$MH() {
        return RuntimeHelper.requireNonNull(constants$1627.const$1,"pango_layout_get_justify");
    }
    /**
     * {@snippet :
     * int pango_layout_get_justify(struct _PangoLayout* layout);
     * }
     */
    public static int pango_layout_get_justify(MemorySegment layout) {
        var mh$ = pango_layout_get_justify$MH();
        try {
            return (int)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_set_justify_last_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1627.const$2,"pango_layout_set_justify_last_line");
    }
    /**
     * {@snippet :
     * void pango_layout_set_justify_last_line(struct _PangoLayout* layout, int justify);
     * }
     */
    public static void pango_layout_set_justify_last_line(MemorySegment layout, int justify) {
        var mh$ = pango_layout_set_justify_last_line$MH();
        try {
            mh$.invokeExact(layout, justify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_justify_last_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1627.const$3,"pango_layout_get_justify_last_line");
    }
    /**
     * {@snippet :
     * int pango_layout_get_justify_last_line(struct _PangoLayout* layout);
     * }
     */
    public static int pango_layout_get_justify_last_line(MemorySegment layout) {
        var mh$ = pango_layout_get_justify_last_line$MH();
        try {
            return (int)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_set_auto_dir$MH() {
        return RuntimeHelper.requireNonNull(constants$1627.const$4,"pango_layout_set_auto_dir");
    }
    /**
     * {@snippet :
     * void pango_layout_set_auto_dir(struct _PangoLayout* layout, int auto_dir);
     * }
     */
    public static void pango_layout_set_auto_dir(MemorySegment layout, int auto_dir) {
        var mh$ = pango_layout_set_auto_dir$MH();
        try {
            mh$.invokeExact(layout, auto_dir);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_auto_dir$MH() {
        return RuntimeHelper.requireNonNull(constants$1627.const$5,"pango_layout_get_auto_dir");
    }
    /**
     * {@snippet :
     * int pango_layout_get_auto_dir(struct _PangoLayout* layout);
     * }
     */
    public static int pango_layout_get_auto_dir(MemorySegment layout) {
        var mh$ = pango_layout_get_auto_dir$MH();
        try {
            return (int)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_set_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$1628.const$0,"pango_layout_set_alignment");
    }
    /**
     * {@snippet :
     * void pango_layout_set_alignment(struct _PangoLayout* layout, enum PangoAlignment alignment);
     * }
     */
    public static void pango_layout_set_alignment(MemorySegment layout, int alignment) {
        var mh$ = pango_layout_set_alignment$MH();
        try {
            mh$.invokeExact(layout, alignment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$1628.const$1,"pango_layout_get_alignment");
    }
    /**
     * {@snippet :
     * enum PangoAlignment pango_layout_get_alignment(struct _PangoLayout* layout);
     * }
     */
    public static int pango_layout_get_alignment(MemorySegment layout) {
        var mh$ = pango_layout_get_alignment$MH();
        try {
            return (int)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_set_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$1628.const$2,"pango_layout_set_tabs");
    }
    /**
     * {@snippet :
     * void pango_layout_set_tabs(struct _PangoLayout* layout, struct _PangoTabArray* tabs);
     * }
     */
    public static void pango_layout_set_tabs(MemorySegment layout, MemorySegment tabs) {
        var mh$ = pango_layout_set_tabs$MH();
        try {
            mh$.invokeExact(layout, tabs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$1628.const$3,"pango_layout_get_tabs");
    }
    /**
     * {@snippet :
     * struct _PangoTabArray* pango_layout_get_tabs(struct _PangoLayout* layout);
     * }
     */
    public static MemorySegment pango_layout_get_tabs(MemorySegment layout) {
        var mh$ = pango_layout_get_tabs$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_set_single_paragraph_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1628.const$4,"pango_layout_set_single_paragraph_mode");
    }
    /**
     * {@snippet :
     * void pango_layout_set_single_paragraph_mode(struct _PangoLayout* layout, int setting);
     * }
     */
    public static void pango_layout_set_single_paragraph_mode(MemorySegment layout, int setting) {
        var mh$ = pango_layout_set_single_paragraph_mode$MH();
        try {
            mh$.invokeExact(layout, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_single_paragraph_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1628.const$5,"pango_layout_get_single_paragraph_mode");
    }
    /**
     * {@snippet :
     * int pango_layout_get_single_paragraph_mode(struct _PangoLayout* layout);
     * }
     */
    public static int pango_layout_get_single_paragraph_mode(MemorySegment layout) {
        var mh$ = pango_layout_get_single_paragraph_mode$MH();
        try {
            return (int)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_set_ellipsize$MH() {
        return RuntimeHelper.requireNonNull(constants$1629.const$0,"pango_layout_set_ellipsize");
    }
    /**
     * {@snippet :
     * void pango_layout_set_ellipsize(struct _PangoLayout* layout, enum PangoEllipsizeMode ellipsize);
     * }
     */
    public static void pango_layout_set_ellipsize(MemorySegment layout, int ellipsize) {
        var mh$ = pango_layout_set_ellipsize$MH();
        try {
            mh$.invokeExact(layout, ellipsize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_ellipsize$MH() {
        return RuntimeHelper.requireNonNull(constants$1629.const$1,"pango_layout_get_ellipsize");
    }
    /**
     * {@snippet :
     * enum PangoEllipsizeMode pango_layout_get_ellipsize(struct _PangoLayout* layout);
     * }
     */
    public static int pango_layout_get_ellipsize(MemorySegment layout) {
        var mh$ = pango_layout_get_ellipsize$MH();
        try {
            return (int)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_is_ellipsized$MH() {
        return RuntimeHelper.requireNonNull(constants$1629.const$2,"pango_layout_is_ellipsized");
    }
    /**
     * {@snippet :
     * int pango_layout_is_ellipsized(struct _PangoLayout* layout);
     * }
     */
    public static int pango_layout_is_ellipsized(MemorySegment layout) {
        var mh$ = pango_layout_is_ellipsized$MH();
        try {
            return (int)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_unknown_glyphs_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1629.const$3,"pango_layout_get_unknown_glyphs_count");
    }
    /**
     * {@snippet :
     * int pango_layout_get_unknown_glyphs_count(struct _PangoLayout* layout);
     * }
     */
    public static int pango_layout_get_unknown_glyphs_count(MemorySegment layout) {
        var mh$ = pango_layout_get_unknown_glyphs_count$MH();
        try {
            return (int)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1629.const$4,"pango_layout_get_direction");
    }
    /**
     * {@snippet :
     * enum PangoDirection pango_layout_get_direction(struct _PangoLayout* layout, int index);
     * }
     */
    public static int pango_layout_get_direction(MemorySegment layout, int index) {
        var mh$ = pango_layout_get_direction$MH();
        try {
            return (int)mh$.invokeExact(layout, index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_context_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$1629.const$5,"pango_layout_context_changed");
    }
    /**
     * {@snippet :
     * void pango_layout_context_changed(struct _PangoLayout* layout);
     * }
     */
    public static void pango_layout_context_changed(MemorySegment layout) {
        var mh$ = pango_layout_context_changed$MH();
        try {
            mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$1630.const$0,"pango_layout_get_serial");
    }
    /**
     * {@snippet :
     * unsigned int pango_layout_get_serial(struct _PangoLayout* layout);
     * }
     */
    public static int pango_layout_get_serial(MemorySegment layout) {
        var mh$ = pango_layout_get_serial$MH();
        try {
            return (int)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_log_attrs$MH() {
        return RuntimeHelper.requireNonNull(constants$1630.const$1,"pango_layout_get_log_attrs");
    }
    /**
     * {@snippet :
     * void pango_layout_get_log_attrs(struct _PangoLayout* layout, struct _PangoLogAttr** attrs, int* n_attrs);
     * }
     */
    public static void pango_layout_get_log_attrs(MemorySegment layout, MemorySegment attrs, MemorySegment n_attrs) {
        var mh$ = pango_layout_get_log_attrs$MH();
        try {
            mh$.invokeExact(layout, attrs, n_attrs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_log_attrs_readonly$MH() {
        return RuntimeHelper.requireNonNull(constants$1630.const$2,"pango_layout_get_log_attrs_readonly");
    }
    /**
     * {@snippet :
     * struct _PangoLogAttr* pango_layout_get_log_attrs_readonly(struct _PangoLayout* layout, int* n_attrs);
     * }
     */
    public static MemorySegment pango_layout_get_log_attrs_readonly(MemorySegment layout, MemorySegment n_attrs) {
        var mh$ = pango_layout_get_log_attrs_readonly$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout, n_attrs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_index_to_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1630.const$3,"pango_layout_index_to_pos");
    }
    /**
     * {@snippet :
     * void pango_layout_index_to_pos(struct _PangoLayout* layout, int index_, struct _PangoRectangle* pos);
     * }
     */
    public static void pango_layout_index_to_pos(MemorySegment layout, int index_, MemorySegment pos) {
        var mh$ = pango_layout_index_to_pos$MH();
        try {
            mh$.invokeExact(layout, index_, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_index_to_line_x$MH() {
        return RuntimeHelper.requireNonNull(constants$1630.const$4,"pango_layout_index_to_line_x");
    }
    /**
     * {@snippet :
     * void pango_layout_index_to_line_x(struct _PangoLayout* layout, int index_, int trailing, int* line, int* x_pos);
     * }
     */
    public static void pango_layout_index_to_line_x(MemorySegment layout, int index_, int trailing, MemorySegment line, MemorySegment x_pos) {
        var mh$ = pango_layout_index_to_line_x$MH();
        try {
            mh$.invokeExact(layout, index_, trailing, line, x_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_cursor_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1630.const$5,"pango_layout_get_cursor_pos");
    }
    /**
     * {@snippet :
     * void pango_layout_get_cursor_pos(struct _PangoLayout* layout, int index_, struct _PangoRectangle* strong_pos, struct _PangoRectangle* weak_pos);
     * }
     */
    public static void pango_layout_get_cursor_pos(MemorySegment layout, int index_, MemorySegment strong_pos, MemorySegment weak_pos) {
        var mh$ = pango_layout_get_cursor_pos$MH();
        try {
            mh$.invokeExact(layout, index_, strong_pos, weak_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_caret_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1631.const$0,"pango_layout_get_caret_pos");
    }
    /**
     * {@snippet :
     * void pango_layout_get_caret_pos(struct _PangoLayout* layout, int index_, struct _PangoRectangle* strong_pos, struct _PangoRectangle* weak_pos);
     * }
     */
    public static void pango_layout_get_caret_pos(MemorySegment layout, int index_, MemorySegment strong_pos, MemorySegment weak_pos) {
        var mh$ = pango_layout_get_caret_pos$MH();
        try {
            mh$.invokeExact(layout, index_, strong_pos, weak_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_move_cursor_visually$MH() {
        return RuntimeHelper.requireNonNull(constants$1631.const$2,"pango_layout_move_cursor_visually");
    }
    /**
     * {@snippet :
     * void pango_layout_move_cursor_visually(struct _PangoLayout* layout, int strong, int old_index, int old_trailing, int direction, int* new_index, int* new_trailing);
     * }
     */
    public static void pango_layout_move_cursor_visually(MemorySegment layout, int strong, int old_index, int old_trailing, int direction, MemorySegment new_index, MemorySegment new_trailing) {
        var mh$ = pango_layout_move_cursor_visually$MH();
        try {
            mh$.invokeExact(layout, strong, old_index, old_trailing, direction, new_index, new_trailing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_xy_to_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1631.const$3,"pango_layout_xy_to_index");
    }
    /**
     * {@snippet :
     * int pango_layout_xy_to_index(struct _PangoLayout* layout, int x, int y, int* index_, int* trailing);
     * }
     */
    public static int pango_layout_xy_to_index(MemorySegment layout, int x, int y, MemorySegment index_, MemorySegment trailing) {
        var mh$ = pango_layout_xy_to_index$MH();
        try {
            return (int)mh$.invokeExact(layout, x, y, index_, trailing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1631.const$4,"pango_layout_get_extents");
    }
    /**
     * {@snippet :
     * void pango_layout_get_extents(struct _PangoLayout* layout, struct _PangoRectangle* ink_rect, struct _PangoRectangle* logical_rect);
     * }
     */
    public static void pango_layout_get_extents(MemorySegment layout, MemorySegment ink_rect, MemorySegment logical_rect) {
        var mh$ = pango_layout_get_extents$MH();
        try {
            mh$.invokeExact(layout, ink_rect, logical_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_pixel_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1631.const$5,"pango_layout_get_pixel_extents");
    }
    /**
     * {@snippet :
     * void pango_layout_get_pixel_extents(struct _PangoLayout* layout, struct _PangoRectangle* ink_rect, struct _PangoRectangle* logical_rect);
     * }
     */
    public static void pango_layout_get_pixel_extents(MemorySegment layout, MemorySegment ink_rect, MemorySegment logical_rect) {
        var mh$ = pango_layout_get_pixel_extents$MH();
        try {
            mh$.invokeExact(layout, ink_rect, logical_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1632.const$0,"pango_layout_get_size");
    }
    /**
     * {@snippet :
     * void pango_layout_get_size(struct _PangoLayout* layout, int* width, int* height);
     * }
     */
    public static void pango_layout_get_size(MemorySegment layout, MemorySegment width, MemorySegment height) {
        var mh$ = pango_layout_get_size$MH();
        try {
            mh$.invokeExact(layout, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_pixel_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1632.const$1,"pango_layout_get_pixel_size");
    }
    /**
     * {@snippet :
     * void pango_layout_get_pixel_size(struct _PangoLayout* layout, int* width, int* height);
     * }
     */
    public static void pango_layout_get_pixel_size(MemorySegment layout, MemorySegment width, MemorySegment height) {
        var mh$ = pango_layout_get_pixel_size$MH();
        try {
            mh$.invokeExact(layout, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_baseline$MH() {
        return RuntimeHelper.requireNonNull(constants$1632.const$2,"pango_layout_get_baseline");
    }
    /**
     * {@snippet :
     * int pango_layout_get_baseline(struct _PangoLayout* layout);
     * }
     */
    public static int pango_layout_get_baseline(MemorySegment layout) {
        var mh$ = pango_layout_get_baseline$MH();
        try {
            return (int)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_line_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1632.const$3,"pango_layout_get_line_count");
    }
    /**
     * {@snippet :
     * int pango_layout_get_line_count(struct _PangoLayout* layout);
     * }
     */
    public static int pango_layout_get_line_count(MemorySegment layout) {
        var mh$ = pango_layout_get_line_count$MH();
        try {
            return (int)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1632.const$4,"pango_layout_get_line");
    }
    /**
     * {@snippet :
     * struct _PangoLayoutLine* pango_layout_get_line(struct _PangoLayout* layout, int line);
     * }
     */
    public static MemorySegment pango_layout_get_line(MemorySegment layout, int line) {
        var mh$ = pango_layout_get_line$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout, line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_line_readonly$MH() {
        return RuntimeHelper.requireNonNull(constants$1632.const$5,"pango_layout_get_line_readonly");
    }
    /**
     * {@snippet :
     * struct _PangoLayoutLine* pango_layout_get_line_readonly(struct _PangoLayout* layout, int line);
     * }
     */
    public static MemorySegment pango_layout_get_line_readonly(MemorySegment layout, int line) {
        var mh$ = pango_layout_get_line_readonly$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout, line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$1633.const$0,"pango_layout_get_lines");
    }
    /**
     * {@snippet :
     * struct _GSList* pango_layout_get_lines(struct _PangoLayout* layout);
     * }
     */
    public static MemorySegment pango_layout_get_lines(MemorySegment layout) {
        var mh$ = pango_layout_get_lines$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_lines_readonly$MH() {
        return RuntimeHelper.requireNonNull(constants$1633.const$1,"pango_layout_get_lines_readonly");
    }
    /**
     * {@snippet :
     * struct _GSList* pango_layout_get_lines_readonly(struct _PangoLayout* layout);
     * }
     */
    public static MemorySegment pango_layout_get_lines_readonly(MemorySegment layout) {
        var mh$ = pango_layout_get_lines_readonly$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum PangoLayoutSerializeFlags.PANGO_LAYOUT_SERIALIZE_DEFAULT = 0;
     * }
     */
    public static int PANGO_LAYOUT_SERIALIZE_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoLayoutSerializeFlags.PANGO_LAYOUT_SERIALIZE_CONTEXT = 1;
     * }
     */
    public static int PANGO_LAYOUT_SERIALIZE_CONTEXT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoLayoutSerializeFlags.PANGO_LAYOUT_SERIALIZE_OUTPUT = 2;
     * }
     */
    public static int PANGO_LAYOUT_SERIALIZE_OUTPUT() {
        return (int)2L;
    }
    public static MethodHandle pango_layout_serialize$MH() {
        return RuntimeHelper.requireNonNull(constants$1633.const$2,"pango_layout_serialize");
    }
    /**
     * {@snippet :
     * struct _GBytes* pango_layout_serialize(struct _PangoLayout* layout, enum PangoLayoutSerializeFlags flags);
     * }
     */
    public static MemorySegment pango_layout_serialize(MemorySegment layout, int flags) {
        var mh$ = pango_layout_serialize$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_write_to_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1633.const$3,"pango_layout_write_to_file");
    }
    /**
     * {@snippet :
     * int pango_layout_write_to_file(struct _PangoLayout* layout, enum PangoLayoutSerializeFlags flags, char* filename, struct _GError** error);
     * }
     */
    public static int pango_layout_write_to_file(MemorySegment layout, int flags, MemorySegment filename, MemorySegment error) {
        var mh$ = pango_layout_write_to_file$MH();
        try {
            return (int)mh$.invokeExact(layout, flags, filename, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum PangoLayoutDeserializeError.PANGO_LAYOUT_DESERIALIZE_INVALID = 0;
     * }
     */
    public static int PANGO_LAYOUT_DESERIALIZE_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoLayoutDeserializeError.PANGO_LAYOUT_DESERIALIZE_INVALID_VALUE = 1;
     * }
     */
    public static int PANGO_LAYOUT_DESERIALIZE_INVALID_VALUE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoLayoutDeserializeError.PANGO_LAYOUT_DESERIALIZE_MISSING_VALUE = 2;
     * }
     */
    public static int PANGO_LAYOUT_DESERIALIZE_MISSING_VALUE() {
        return (int)2L;
    }
    public static MethodHandle pango_layout_deserialize_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1633.const$4,"pango_layout_deserialize_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int pango_layout_deserialize_error_quark();
     * }
     */
    public static int pango_layout_deserialize_error_quark() {
        var mh$ = pango_layout_deserialize_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum PangoLayoutDeserializeFlags.PANGO_LAYOUT_DESERIALIZE_DEFAULT = 0;
     * }
     */
    public static int PANGO_LAYOUT_DESERIALIZE_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoLayoutDeserializeFlags.PANGO_LAYOUT_DESERIALIZE_CONTEXT = 1;
     * }
     */
    public static int PANGO_LAYOUT_DESERIALIZE_CONTEXT() {
        return (int)1L;
    }
    public static MethodHandle pango_layout_deserialize$MH() {
        return RuntimeHelper.requireNonNull(constants$1633.const$5,"pango_layout_deserialize");
    }
    /**
     * {@snippet :
     * struct _PangoLayout* pango_layout_deserialize(struct _PangoContext* context, struct _GBytes* bytes, enum PangoLayoutDeserializeFlags flags, struct _GError** error);
     * }
     */
    public static MemorySegment pango_layout_deserialize(MemorySegment context, MemorySegment bytes, int flags, MemorySegment error) {
        var mh$ = pango_layout_deserialize$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, bytes, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_line_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1634.const$0,"pango_layout_line_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_layout_line_get_type();
     * }
     */
    public static long pango_layout_line_get_type() {
        var mh$ = pango_layout_line_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_line_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1634.const$1,"pango_layout_line_ref");
    }
    /**
     * {@snippet :
     * struct _PangoLayoutLine* pango_layout_line_ref(struct _PangoLayoutLine* line);
     * }
     */
    public static MemorySegment pango_layout_line_ref(MemorySegment line) {
        var mh$ = pango_layout_line_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_line_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1634.const$2,"pango_layout_line_unref");
    }
    /**
     * {@snippet :
     * void pango_layout_line_unref(struct _PangoLayoutLine* line);
     * }
     */
    public static void pango_layout_line_unref(MemorySegment line) {
        var mh$ = pango_layout_line_unref$MH();
        try {
            mh$.invokeExact(line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_line_get_start_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1634.const$3,"pango_layout_line_get_start_index");
    }
    /**
     * {@snippet :
     * int pango_layout_line_get_start_index(struct _PangoLayoutLine* line);
     * }
     */
    public static int pango_layout_line_get_start_index(MemorySegment line) {
        var mh$ = pango_layout_line_get_start_index$MH();
        try {
            return (int)mh$.invokeExact(line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_line_get_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1634.const$4,"pango_layout_line_get_length");
    }
    /**
     * {@snippet :
     * int pango_layout_line_get_length(struct _PangoLayoutLine* line);
     * }
     */
    public static int pango_layout_line_get_length(MemorySegment line) {
        var mh$ = pango_layout_line_get_length$MH();
        try {
            return (int)mh$.invokeExact(line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_line_is_paragraph_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1634.const$5,"pango_layout_line_is_paragraph_start");
    }
    /**
     * {@snippet :
     * int pango_layout_line_is_paragraph_start(struct _PangoLayoutLine* line);
     * }
     */
    public static int pango_layout_line_is_paragraph_start(MemorySegment line) {
        var mh$ = pango_layout_line_is_paragraph_start$MH();
        try {
            return (int)mh$.invokeExact(line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_line_get_resolved_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1635.const$0,"pango_layout_line_get_resolved_direction");
    }
    /**
     * {@snippet :
     * enum PangoDirection pango_layout_line_get_resolved_direction(struct _PangoLayoutLine* line);
     * }
     */
    public static int pango_layout_line_get_resolved_direction(MemorySegment line) {
        var mh$ = pango_layout_line_get_resolved_direction$MH();
        try {
            return (int)mh$.invokeExact(line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_line_x_to_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1635.const$1,"pango_layout_line_x_to_index");
    }
    /**
     * {@snippet :
     * int pango_layout_line_x_to_index(struct _PangoLayoutLine* line, int x_pos, int* index_, int* trailing);
     * }
     */
    public static int pango_layout_line_x_to_index(MemorySegment line, int x_pos, MemorySegment index_, MemorySegment trailing) {
        var mh$ = pango_layout_line_x_to_index$MH();
        try {
            return (int)mh$.invokeExact(line, x_pos, index_, trailing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_line_index_to_x$MH() {
        return RuntimeHelper.requireNonNull(constants$1635.const$2,"pango_layout_line_index_to_x");
    }
    /**
     * {@snippet :
     * void pango_layout_line_index_to_x(struct _PangoLayoutLine* line, int index_, int trailing, int* x_pos);
     * }
     */
    public static void pango_layout_line_index_to_x(MemorySegment line, int index_, int trailing, MemorySegment x_pos) {
        var mh$ = pango_layout_line_index_to_x$MH();
        try {
            mh$.invokeExact(line, index_, trailing, x_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_line_get_x_ranges$MH() {
        return RuntimeHelper.requireNonNull(constants$1635.const$3,"pango_layout_line_get_x_ranges");
    }
    /**
     * {@snippet :
     * void pango_layout_line_get_x_ranges(struct _PangoLayoutLine* line, int start_index, int end_index, int** ranges, int* n_ranges);
     * }
     */
    public static void pango_layout_line_get_x_ranges(MemorySegment line, int start_index, int end_index, MemorySegment ranges, MemorySegment n_ranges) {
        var mh$ = pango_layout_line_get_x_ranges$MH();
        try {
            mh$.invokeExact(line, start_index, end_index, ranges, n_ranges);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_line_get_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1635.const$4,"pango_layout_line_get_extents");
    }
    /**
     * {@snippet :
     * void pango_layout_line_get_extents(struct _PangoLayoutLine* line, struct _PangoRectangle* ink_rect, struct _PangoRectangle* logical_rect);
     * }
     */
    public static void pango_layout_line_get_extents(MemorySegment line, MemorySegment ink_rect, MemorySegment logical_rect) {
        var mh$ = pango_layout_line_get_extents$MH();
        try {
            mh$.invokeExact(line, ink_rect, logical_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_line_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1635.const$5,"pango_layout_line_get_height");
    }
    /**
     * {@snippet :
     * void pango_layout_line_get_height(struct _PangoLayoutLine* line, int* height);
     * }
     */
    public static void pango_layout_line_get_height(MemorySegment line, MemorySegment height) {
        var mh$ = pango_layout_line_get_height$MH();
        try {
            mh$.invokeExact(line, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_line_get_pixel_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1636.const$0,"pango_layout_line_get_pixel_extents");
    }
    /**
     * {@snippet :
     * void pango_layout_line_get_pixel_extents(struct _PangoLayoutLine* layout_line, struct _PangoRectangle* ink_rect, struct _PangoRectangle* logical_rect);
     * }
     */
    public static void pango_layout_line_get_pixel_extents(MemorySegment layout_line, MemorySegment ink_rect, MemorySegment logical_rect) {
        var mh$ = pango_layout_line_get_pixel_extents$MH();
        try {
            mh$.invokeExact(layout_line, ink_rect, logical_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1636.const$1,"pango_layout_iter_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_layout_iter_get_type();
     * }
     */
    public static long pango_layout_iter_get_type() {
        var mh$ = pango_layout_iter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_get_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$1636.const$2,"pango_layout_get_iter");
    }
    /**
     * {@snippet :
     * struct _PangoLayoutIter* pango_layout_get_iter(struct _PangoLayout* layout);
     * }
     */
    public static MemorySegment pango_layout_get_iter(MemorySegment layout) {
        var mh$ = pango_layout_get_iter$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1636.const$3,"pango_layout_iter_copy");
    }
    /**
     * {@snippet :
     * struct _PangoLayoutIter* pango_layout_iter_copy(struct _PangoLayoutIter* iter);
     * }
     */
    public static MemorySegment pango_layout_iter_copy(MemorySegment iter) {
        var mh$ = pango_layout_iter_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1636.const$4,"pango_layout_iter_free");
    }
    /**
     * {@snippet :
     * void pango_layout_iter_free(struct _PangoLayoutIter* iter);
     * }
     */
    public static void pango_layout_iter_free(MemorySegment iter) {
        var mh$ = pango_layout_iter_free$MH();
        try {
            mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_get_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1636.const$5,"pango_layout_iter_get_index");
    }
    /**
     * {@snippet :
     * int pango_layout_iter_get_index(struct _PangoLayoutIter* iter);
     * }
     */
    public static int pango_layout_iter_get_index(MemorySegment iter) {
        var mh$ = pango_layout_iter_get_index$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_get_run$MH() {
        return RuntimeHelper.requireNonNull(constants$1637.const$0,"pango_layout_iter_get_run");
    }
    /**
     * {@snippet :
     * struct _PangoGlyphItem* pango_layout_iter_get_run(struct _PangoLayoutIter* iter);
     * }
     */
    public static MemorySegment pango_layout_iter_get_run(MemorySegment iter) {
        var mh$ = pango_layout_iter_get_run$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_get_run_readonly$MH() {
        return RuntimeHelper.requireNonNull(constants$1637.const$1,"pango_layout_iter_get_run_readonly");
    }
    /**
     * {@snippet :
     * struct _PangoGlyphItem* pango_layout_iter_get_run_readonly(struct _PangoLayoutIter* iter);
     * }
     */
    public static MemorySegment pango_layout_iter_get_run_readonly(MemorySegment iter) {
        var mh$ = pango_layout_iter_get_run_readonly$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_get_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1637.const$2,"pango_layout_iter_get_line");
    }
    /**
     * {@snippet :
     * struct _PangoLayoutLine* pango_layout_iter_get_line(struct _PangoLayoutIter* iter);
     * }
     */
    public static MemorySegment pango_layout_iter_get_line(MemorySegment iter) {
        var mh$ = pango_layout_iter_get_line$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_get_line_readonly$MH() {
        return RuntimeHelper.requireNonNull(constants$1637.const$3,"pango_layout_iter_get_line_readonly");
    }
    /**
     * {@snippet :
     * struct _PangoLayoutLine* pango_layout_iter_get_line_readonly(struct _PangoLayoutIter* iter);
     * }
     */
    public static MemorySegment pango_layout_iter_get_line_readonly(MemorySegment iter) {
        var mh$ = pango_layout_iter_get_line_readonly$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_at_last_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1637.const$4,"pango_layout_iter_at_last_line");
    }
    /**
     * {@snippet :
     * int pango_layout_iter_at_last_line(struct _PangoLayoutIter* iter);
     * }
     */
    public static int pango_layout_iter_at_last_line(MemorySegment iter) {
        var mh$ = pango_layout_iter_at_last_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_get_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1637.const$5,"pango_layout_iter_get_layout");
    }
    /**
     * {@snippet :
     * struct _PangoLayout* pango_layout_iter_get_layout(struct _PangoLayoutIter* iter);
     * }
     */
    public static MemorySegment pango_layout_iter_get_layout(MemorySegment iter) {
        var mh$ = pango_layout_iter_get_layout$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_next_char$MH() {
        return RuntimeHelper.requireNonNull(constants$1638.const$0,"pango_layout_iter_next_char");
    }
    /**
     * {@snippet :
     * int pango_layout_iter_next_char(struct _PangoLayoutIter* iter);
     * }
     */
    public static int pango_layout_iter_next_char(MemorySegment iter) {
        var mh$ = pango_layout_iter_next_char$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_next_cluster$MH() {
        return RuntimeHelper.requireNonNull(constants$1638.const$1,"pango_layout_iter_next_cluster");
    }
    /**
     * {@snippet :
     * int pango_layout_iter_next_cluster(struct _PangoLayoutIter* iter);
     * }
     */
    public static int pango_layout_iter_next_cluster(MemorySegment iter) {
        var mh$ = pango_layout_iter_next_cluster$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_next_run$MH() {
        return RuntimeHelper.requireNonNull(constants$1638.const$2,"pango_layout_iter_next_run");
    }
    /**
     * {@snippet :
     * int pango_layout_iter_next_run(struct _PangoLayoutIter* iter);
     * }
     */
    public static int pango_layout_iter_next_run(MemorySegment iter) {
        var mh$ = pango_layout_iter_next_run$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_next_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1638.const$3,"pango_layout_iter_next_line");
    }
    /**
     * {@snippet :
     * int pango_layout_iter_next_line(struct _PangoLayoutIter* iter);
     * }
     */
    public static int pango_layout_iter_next_line(MemorySegment iter) {
        var mh$ = pango_layout_iter_next_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_get_char_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1638.const$4,"pango_layout_iter_get_char_extents");
    }
    /**
     * {@snippet :
     * void pango_layout_iter_get_char_extents(struct _PangoLayoutIter* iter, struct _PangoRectangle* logical_rect);
     * }
     */
    public static void pango_layout_iter_get_char_extents(MemorySegment iter, MemorySegment logical_rect) {
        var mh$ = pango_layout_iter_get_char_extents$MH();
        try {
            mh$.invokeExact(iter, logical_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_get_cluster_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1638.const$5,"pango_layout_iter_get_cluster_extents");
    }
    /**
     * {@snippet :
     * void pango_layout_iter_get_cluster_extents(struct _PangoLayoutIter* iter, struct _PangoRectangle* ink_rect, struct _PangoRectangle* logical_rect);
     * }
     */
    public static void pango_layout_iter_get_cluster_extents(MemorySegment iter, MemorySegment ink_rect, MemorySegment logical_rect) {
        var mh$ = pango_layout_iter_get_cluster_extents$MH();
        try {
            mh$.invokeExact(iter, ink_rect, logical_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_get_run_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1639.const$0,"pango_layout_iter_get_run_extents");
    }
    /**
     * {@snippet :
     * void pango_layout_iter_get_run_extents(struct _PangoLayoutIter* iter, struct _PangoRectangle* ink_rect, struct _PangoRectangle* logical_rect);
     * }
     */
    public static void pango_layout_iter_get_run_extents(MemorySegment iter, MemorySegment ink_rect, MemorySegment logical_rect) {
        var mh$ = pango_layout_iter_get_run_extents$MH();
        try {
            mh$.invokeExact(iter, ink_rect, logical_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_get_line_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1639.const$1,"pango_layout_iter_get_line_extents");
    }
    /**
     * {@snippet :
     * void pango_layout_iter_get_line_extents(struct _PangoLayoutIter* iter, struct _PangoRectangle* ink_rect, struct _PangoRectangle* logical_rect);
     * }
     */
    public static void pango_layout_iter_get_line_extents(MemorySegment iter, MemorySegment ink_rect, MemorySegment logical_rect) {
        var mh$ = pango_layout_iter_get_line_extents$MH();
        try {
            mh$.invokeExact(iter, ink_rect, logical_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_get_line_yrange$MH() {
        return RuntimeHelper.requireNonNull(constants$1639.const$2,"pango_layout_iter_get_line_yrange");
    }
    /**
     * {@snippet :
     * void pango_layout_iter_get_line_yrange(struct _PangoLayoutIter* iter, int* y0_, int* y1_);
     * }
     */
    public static void pango_layout_iter_get_line_yrange(MemorySegment iter, MemorySegment y0_, MemorySegment y1_) {
        var mh$ = pango_layout_iter_get_line_yrange$MH();
        try {
            mh$.invokeExact(iter, y0_, y1_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_get_layout_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1639.const$3,"pango_layout_iter_get_layout_extents");
    }
    /**
     * {@snippet :
     * void pango_layout_iter_get_layout_extents(struct _PangoLayoutIter* iter, struct _PangoRectangle* ink_rect, struct _PangoRectangle* logical_rect);
     * }
     */
    public static void pango_layout_iter_get_layout_extents(MemorySegment iter, MemorySegment ink_rect, MemorySegment logical_rect) {
        var mh$ = pango_layout_iter_get_layout_extents$MH();
        try {
            mh$.invokeExact(iter, ink_rect, logical_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_get_baseline$MH() {
        return RuntimeHelper.requireNonNull(constants$1639.const$4,"pango_layout_iter_get_baseline");
    }
    /**
     * {@snippet :
     * int pango_layout_iter_get_baseline(struct _PangoLayoutIter* iter);
     * }
     */
    public static int pango_layout_iter_get_baseline(MemorySegment iter) {
        var mh$ = pango_layout_iter_get_baseline$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_layout_iter_get_run_baseline$MH() {
        return RuntimeHelper.requireNonNull(constants$1639.const$5,"pango_layout_iter_get_run_baseline");
    }
    /**
     * {@snippet :
     * int pango_layout_iter_get_run_baseline(struct _PangoLayoutIter* iter);
     * }
     */
    public static int pango_layout_iter_get_run_baseline(MemorySegment iter) {
        var mh$ = pango_layout_iter_get_run_baseline$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _PangoLayout* PangoLayout_autoptr;
     * }
     */
    public static final AddressLayout PangoLayout_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* PangoLayout_listautoptr;
     * }
     */
    public static final AddressLayout PangoLayout_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* PangoLayout_slistautoptr;
     * }
     */
    public static final AddressLayout PangoLayout_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* PangoLayout_queueautoptr;
     * }
     */
    public static final AddressLayout PangoLayout_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PangoLayoutIter* PangoLayoutIter_autoptr;
     * }
     */
    public static final AddressLayout PangoLayoutIter_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* PangoLayoutIter_listautoptr;
     * }
     */
    public static final AddressLayout PangoLayoutIter_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* PangoLayoutIter_slistautoptr;
     * }
     */
    public static final AddressLayout PangoLayoutIter_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* PangoLayoutIter_queueautoptr;
     * }
     */
    public static final AddressLayout PangoLayoutIter_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle pango_markup_parser_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1640.const$0,"pango_markup_parser_new");
    }
    /**
     * {@snippet :
     * struct _GMarkupParseContext* pango_markup_parser_new(unsigned int accel_marker);
     * }
     */
    public static MemorySegment pango_markup_parser_new(int accel_marker) {
        var mh$ = pango_markup_parser_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accel_marker);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_markup_parser_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1640.const$1,"pango_markup_parser_finish");
    }
    /**
     * {@snippet :
     * int pango_markup_parser_finish(struct _GMarkupParseContext* context, struct _PangoAttrList** attr_list, char** text, unsigned int* accel_char, struct _GError** error);
     * }
     */
    public static int pango_markup_parser_finish(MemorySegment context, MemorySegment attr_list, MemorySegment text, MemorySegment accel_char, MemorySegment error) {
        var mh$ = pango_markup_parser_finish$MH();
        try {
            return (int)mh$.invokeExact(context, attr_list, text, accel_char, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_parse_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1640.const$3,"pango_parse_markup");
    }
    /**
     * {@snippet :
     * int pango_parse_markup(char* markup_text, int length, unsigned int accel_marker, struct _PangoAttrList** attr_list, char** text, unsigned int* accel_char, struct _GError** error);
     * }
     */
    public static int pango_parse_markup(MemorySegment markup_text, int length, int accel_marker, MemorySegment attr_list, MemorySegment text, MemorySegment accel_char, MemorySegment error) {
        var mh$ = pango_parse_markup$MH();
        try {
            return (int)mh$.invokeExact(markup_text, length, accel_marker, attr_list, text, accel_char, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum PangoRenderPart.PANGO_RENDER_PART_FOREGROUND = 0;
     * }
     */
    public static int PANGO_RENDER_PART_FOREGROUND() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum PangoRenderPart.PANGO_RENDER_PART_BACKGROUND = 1;
     * }
     */
    public static int PANGO_RENDER_PART_BACKGROUND() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum PangoRenderPart.PANGO_RENDER_PART_UNDERLINE = 2;
     * }
     */
    public static int PANGO_RENDER_PART_UNDERLINE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum PangoRenderPart.PANGO_RENDER_PART_STRIKETHROUGH = 3;
     * }
     */
    public static int PANGO_RENDER_PART_STRIKETHROUGH() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum PangoRenderPart.PANGO_RENDER_PART_OVERLINE = 4;
     * }
     */
    public static int PANGO_RENDER_PART_OVERLINE() {
        return (int)4L;
    }
    public static MethodHandle pango_renderer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1648.const$2,"pango_renderer_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_renderer_get_type();
     * }
     */
    public static long pango_renderer_get_type() {
        var mh$ = pango_renderer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_renderer_draw_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1648.const$3,"pango_renderer_draw_layout");
    }
    /**
     * {@snippet :
     * void pango_renderer_draw_layout(struct _PangoRenderer* renderer, struct _PangoLayout* layout, int x, int y);
     * }
     */
    public static void pango_renderer_draw_layout(MemorySegment renderer, MemorySegment layout, int x, int y) {
        var mh$ = pango_renderer_draw_layout$MH();
        try {
            mh$.invokeExact(renderer, layout, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_renderer_draw_layout_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1648.const$4,"pango_renderer_draw_layout_line");
    }
    /**
     * {@snippet :
     * void pango_renderer_draw_layout_line(struct _PangoRenderer* renderer, struct _PangoLayoutLine* line, int x, int y);
     * }
     */
    public static void pango_renderer_draw_layout_line(MemorySegment renderer, MemorySegment line, int x, int y) {
        var mh$ = pango_renderer_draw_layout_line$MH();
        try {
            mh$.invokeExact(renderer, line, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_renderer_draw_glyphs$MH() {
        return RuntimeHelper.requireNonNull(constants$1648.const$5,"pango_renderer_draw_glyphs");
    }
    /**
     * {@snippet :
     * void pango_renderer_draw_glyphs(struct _PangoRenderer* renderer, struct _PangoFont* font, struct _PangoGlyphString* glyphs, int x, int y);
     * }
     */
    public static void pango_renderer_draw_glyphs(MemorySegment renderer, MemorySegment font, MemorySegment glyphs, int x, int y) {
        var mh$ = pango_renderer_draw_glyphs$MH();
        try {
            mh$.invokeExact(renderer, font, glyphs, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_renderer_draw_glyph_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1649.const$0,"pango_renderer_draw_glyph_item");
    }
    /**
     * {@snippet :
     * void pango_renderer_draw_glyph_item(struct _PangoRenderer* renderer, char* text, struct _PangoGlyphItem* glyph_item, int x, int y);
     * }
     */
    public static void pango_renderer_draw_glyph_item(MemorySegment renderer, MemorySegment text, MemorySegment glyph_item, int x, int y) {
        var mh$ = pango_renderer_draw_glyph_item$MH();
        try {
            mh$.invokeExact(renderer, text, glyph_item, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_renderer_draw_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1649.const$1,"pango_renderer_draw_rectangle");
    }
    /**
     * {@snippet :
     * void pango_renderer_draw_rectangle(struct _PangoRenderer* renderer, enum PangoRenderPart part, int x, int y, int width, int height);
     * }
     */
    public static void pango_renderer_draw_rectangle(MemorySegment renderer, int part, int x, int y, int width, int height) {
        var mh$ = pango_renderer_draw_rectangle$MH();
        try {
            mh$.invokeExact(renderer, part, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_renderer_draw_error_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1649.const$2,"pango_renderer_draw_error_underline");
    }
    /**
     * {@snippet :
     * void pango_renderer_draw_error_underline(struct _PangoRenderer* renderer, int x, int y, int width, int height);
     * }
     */
    public static void pango_renderer_draw_error_underline(MemorySegment renderer, int x, int y, int width, int height) {
        var mh$ = pango_renderer_draw_error_underline$MH();
        try {
            mh$.invokeExact(renderer, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_renderer_draw_trapezoid$MH() {
        return RuntimeHelper.requireNonNull(constants$1649.const$3,"pango_renderer_draw_trapezoid");
    }
    /**
     * {@snippet :
     * void pango_renderer_draw_trapezoid(struct _PangoRenderer* renderer, enum PangoRenderPart part, double y1_, double x11, double x21, double y2, double x12, double x22);
     * }
     */
    public static void pango_renderer_draw_trapezoid(MemorySegment renderer, int part, double y1_, double x11, double x21, double y2, double x12, double x22) {
        var mh$ = pango_renderer_draw_trapezoid$MH();
        try {
            mh$.invokeExact(renderer, part, y1_, x11, x21, y2, x12, x22);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_renderer_draw_glyph$MH() {
        return RuntimeHelper.requireNonNull(constants$1649.const$4,"pango_renderer_draw_glyph");
    }
    /**
     * {@snippet :
     * void pango_renderer_draw_glyph(struct _PangoRenderer* renderer, struct _PangoFont* font, unsigned int glyph, double x, double y);
     * }
     */
    public static void pango_renderer_draw_glyph(MemorySegment renderer, MemorySegment font, int glyph, double x, double y) {
        var mh$ = pango_renderer_draw_glyph$MH();
        try {
            mh$.invokeExact(renderer, font, glyph, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_renderer_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1649.const$5,"pango_renderer_activate");
    }
    /**
     * {@snippet :
     * void pango_renderer_activate(struct _PangoRenderer* renderer);
     * }
     */
    public static void pango_renderer_activate(MemorySegment renderer) {
        var mh$ = pango_renderer_activate$MH();
        try {
            mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_renderer_deactivate$MH() {
        return RuntimeHelper.requireNonNull(constants$1650.const$0,"pango_renderer_deactivate");
    }
    /**
     * {@snippet :
     * void pango_renderer_deactivate(struct _PangoRenderer* renderer);
     * }
     */
    public static void pango_renderer_deactivate(MemorySegment renderer) {
        var mh$ = pango_renderer_deactivate$MH();
        try {
            mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_renderer_part_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$1650.const$1,"pango_renderer_part_changed");
    }
    /**
     * {@snippet :
     * void pango_renderer_part_changed(struct _PangoRenderer* renderer, enum PangoRenderPart part);
     * }
     */
    public static void pango_renderer_part_changed(MemorySegment renderer, int part) {
        var mh$ = pango_renderer_part_changed$MH();
        try {
            mh$.invokeExact(renderer, part);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_renderer_set_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1650.const$2,"pango_renderer_set_color");
    }
    /**
     * {@snippet :
     * void pango_renderer_set_color(struct _PangoRenderer* renderer, enum PangoRenderPart part, struct _PangoColor* color);
     * }
     */
    public static void pango_renderer_set_color(MemorySegment renderer, int part, MemorySegment color) {
        var mh$ = pango_renderer_set_color$MH();
        try {
            mh$.invokeExact(renderer, part, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_renderer_get_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1650.const$3,"pango_renderer_get_color");
    }
    /**
     * {@snippet :
     * struct _PangoColor* pango_renderer_get_color(struct _PangoRenderer* renderer, enum PangoRenderPart part);
     * }
     */
    public static MemorySegment pango_renderer_get_color(MemorySegment renderer, int part) {
        var mh$ = pango_renderer_get_color$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(renderer, part);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_renderer_set_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1650.const$5,"pango_renderer_set_alpha");
    }
    /**
     * {@snippet :
     * void pango_renderer_set_alpha(struct _PangoRenderer* renderer, enum PangoRenderPart part, unsigned short alpha);
     * }
     */
    public static void pango_renderer_set_alpha(MemorySegment renderer, int part, short alpha) {
        var mh$ = pango_renderer_set_alpha$MH();
        try {
            mh$.invokeExact(renderer, part, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_renderer_get_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1651.const$1,"pango_renderer_get_alpha");
    }
    /**
     * {@snippet :
     * unsigned short pango_renderer_get_alpha(struct _PangoRenderer* renderer, enum PangoRenderPart part);
     * }
     */
    public static short pango_renderer_get_alpha(MemorySegment renderer, int part) {
        var mh$ = pango_renderer_get_alpha$MH();
        try {
            return (short)mh$.invokeExact(renderer, part);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_renderer_set_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1651.const$2,"pango_renderer_set_matrix");
    }
    /**
     * {@snippet :
     * void pango_renderer_set_matrix(struct _PangoRenderer* renderer, struct _PangoMatrix* matrix);
     * }
     */
    public static void pango_renderer_set_matrix(MemorySegment renderer, MemorySegment matrix) {
        var mh$ = pango_renderer_set_matrix$MH();
        try {
            mh$.invokeExact(renderer, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_renderer_get_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1651.const$3,"pango_renderer_get_matrix");
    }
    /**
     * {@snippet :
     * struct _PangoMatrix* pango_renderer_get_matrix(struct _PangoRenderer* renderer);
     * }
     */
    public static MemorySegment pango_renderer_get_matrix(MemorySegment renderer) {
        var mh$ = pango_renderer_get_matrix$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_renderer_get_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1651.const$4,"pango_renderer_get_layout");
    }
    /**
     * {@snippet :
     * struct _PangoLayout* pango_renderer_get_layout(struct _PangoRenderer* renderer);
     * }
     */
    public static MemorySegment pango_renderer_get_layout(MemorySegment renderer) {
        var mh$ = pango_renderer_get_layout$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_renderer_get_layout_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1651.const$5,"pango_renderer_get_layout_line");
    }
    /**
     * {@snippet :
     * struct _PangoLayoutLine* pango_renderer_get_layout_line(struct _PangoRenderer* renderer);
     * }
     */
    public static MemorySegment pango_renderer_get_layout_line(MemorySegment renderer) {
        var mh$ = pango_renderer_get_layout_line$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout stdin$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle stdin$VH() {
        return constants$211.const$1;
    }
    public static MemorySegment stdin$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1658.const$0,"stdin");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * struct _IO_FILE* stdin;
     * }
     */
    public static MemorySegment stdin$get() {
        return (java.lang.foreign.MemorySegment) constants$211.const$1.get(RuntimeHelper.requireNonNull(constants$1658.const$0, "stdin"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * struct _IO_FILE* stdin;
     * }
     */
    public static void stdin$set(MemorySegment x) {
        constants$211.const$1.set(RuntimeHelper.requireNonNull(constants$1658.const$0, "stdin"), x);
    }
    public static MemoryLayout stdout$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle stdout$VH() {
        return constants$211.const$1;
    }
    public static MemorySegment stdout$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1658.const$1,"stdout");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * struct _IO_FILE* stdout;
     * }
     */
    public static MemorySegment stdout$get() {
        return (java.lang.foreign.MemorySegment) constants$211.const$1.get(RuntimeHelper.requireNonNull(constants$1658.const$1, "stdout"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * struct _IO_FILE* stdout;
     * }
     */
    public static void stdout$set(MemorySegment x) {
        constants$211.const$1.set(RuntimeHelper.requireNonNull(constants$1658.const$1, "stdout"), x);
    }
    public static MemoryLayout stderr$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle stderr$VH() {
        return constants$211.const$1;
    }
    public static MemorySegment stderr$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1658.const$2,"stderr");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * struct _IO_FILE* stderr;
     * }
     */
    public static MemorySegment stderr$get() {
        return (java.lang.foreign.MemorySegment) constants$211.const$1.get(RuntimeHelper.requireNonNull(constants$1658.const$2, "stderr"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * struct _IO_FILE* stderr;
     * }
     */
    public static void stderr$set(MemorySegment x) {
        constants$211.const$1.set(RuntimeHelper.requireNonNull(constants$1658.const$2, "stderr"), x);
    }
    public static MethodHandle remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1658.const$3,"remove");
    }
    /**
     * {@snippet :
     * int remove(char* __filename);
     * }
     */
    public static int remove(MemorySegment __filename) {
        var mh$ = remove$MH();
        try {
            return (int)mh$.invokeExact(__filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rename$MH() {
        return RuntimeHelper.requireNonNull(constants$1658.const$4,"rename");
    }
    /**
     * {@snippet :
     * int rename(char* __old, char* __new);
     * }
     */
    public static int rename(MemorySegment __old, MemorySegment __new) {
        var mh$ = rename$MH();
        try {
            return (int)mh$.invokeExact(__old, __new);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle renameat$MH() {
        return RuntimeHelper.requireNonNull(constants$1658.const$6,"renameat");
    }
    /**
     * {@snippet :
     * int renameat(int __oldfd, char* __old, int __newfd, char* __new);
     * }
     */
    public static int renameat(int __oldfd, MemorySegment __old, int __newfd, MemorySegment __new) {
        var mh$ = renameat$MH();
        try {
            return (int)mh$.invokeExact(__oldfd, __old, __newfd, __new);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fclose$MH() {
        return RuntimeHelper.requireNonNull(constants$1659.const$0,"fclose");
    }
    /**
     * {@snippet :
     * int fclose(struct _IO_FILE* __stream);
     * }
     */
    public static int fclose(MemorySegment __stream) {
        var mh$ = fclose$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tmpfile$MH() {
        return RuntimeHelper.requireNonNull(constants$1659.const$1,"tmpfile");
    }
    /**
     * {@snippet :
     * struct _IO_FILE* tmpfile();
     * }
     */
    public static MemorySegment tmpfile() {
        var mh$ = tmpfile$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tmpnam$MH() {
        return RuntimeHelper.requireNonNull(constants$1659.const$2,"tmpnam");
    }
    /**
     * {@snippet :
     * char* tmpnam(char [20]);
     * }
     */
    public static MemorySegment tmpnam(MemorySegment x0) {
        var mh$ = tmpnam$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tmpnam_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1659.const$3,"tmpnam_r");
    }
    /**
     * {@snippet :
     * char* tmpnam_r(char __s[20]);
     * }
     */
    public static MemorySegment tmpnam_r(MemorySegment __s) {
        var mh$ = tmpnam_r$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tempnam$MH() {
        return RuntimeHelper.requireNonNull(constants$1659.const$4,"tempnam");
    }
    /**
     * {@snippet :
     * char* tempnam(char* __dir, char* __pfx);
     * }
     */
    public static MemorySegment tempnam(MemorySegment __dir, MemorySegment __pfx) {
        var mh$ = tempnam$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__dir, __pfx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fflush$MH() {
        return RuntimeHelper.requireNonNull(constants$1659.const$5,"fflush");
    }
    /**
     * {@snippet :
     * int fflush(struct _IO_FILE* __stream);
     * }
     */
    public static int fflush(MemorySegment __stream) {
        var mh$ = fflush$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fflush_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1660.const$0,"fflush_unlocked");
    }
    /**
     * {@snippet :
     * int fflush_unlocked(struct _IO_FILE* __stream);
     * }
     */
    public static int fflush_unlocked(MemorySegment __stream) {
        var mh$ = fflush_unlocked$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fopen$MH() {
        return RuntimeHelper.requireNonNull(constants$1660.const$1,"fopen");
    }
    /**
     * {@snippet :
     * FILE* fopen(char* __filename, char* __modes);
     * }
     */
    public static MemorySegment fopen(MemorySegment __filename, MemorySegment __modes) {
        var mh$ = fopen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__filename, __modes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle freopen$MH() {
        return RuntimeHelper.requireNonNull(constants$1660.const$2,"freopen");
    }
    /**
     * {@snippet :
     * struct _IO_FILE* freopen(char* __filename, char* __modes, struct _IO_FILE* __stream);
     * }
     */
    public static MemorySegment freopen(MemorySegment __filename, MemorySegment __modes, MemorySegment __stream) {
        var mh$ = freopen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__filename, __modes, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fdopen$MH() {
        return RuntimeHelper.requireNonNull(constants$1660.const$3,"fdopen");
    }
    /**
     * {@snippet :
     * struct _IO_FILE* fdopen(int __fd, char* __modes);
     * }
     */
    public static MemorySegment fdopen(int __fd, MemorySegment __modes) {
        var mh$ = fdopen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__fd, __modes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fmemopen$MH() {
        return RuntimeHelper.requireNonNull(constants$1660.const$4,"fmemopen");
    }
    /**
     * {@snippet :
     * struct _IO_FILE* fmemopen(void* __s, unsigned long __len, char* __modes);
     * }
     */
    public static MemorySegment fmemopen(MemorySegment __s, long __len, MemorySegment __modes) {
        var mh$ = fmemopen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__s, __len, __modes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle open_memstream$MH() {
        return RuntimeHelper.requireNonNull(constants$1660.const$5,"open_memstream");
    }
    /**
     * {@snippet :
     * struct _IO_FILE* open_memstream(char** __bufloc, unsigned long* __sizeloc);
     * }
     */
    public static MemorySegment open_memstream(MemorySegment __bufloc, MemorySegment __sizeloc) {
        var mh$ = open_memstream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__bufloc, __sizeloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1661.const$0,"setbuf");
    }
    /**
     * {@snippet :
     * void setbuf(struct _IO_FILE* __stream, char* __buf);
     * }
     */
    public static void setbuf(MemorySegment __stream, MemorySegment __buf) {
        var mh$ = setbuf$MH();
        try {
            mh$.invokeExact(__stream, __buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setvbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1661.const$2,"setvbuf");
    }
    /**
     * {@snippet :
     * int setvbuf(struct _IO_FILE* __stream, char* __buf, int __modes, unsigned long __n);
     * }
     */
    public static int setvbuf(MemorySegment __stream, MemorySegment __buf, int __modes, long __n) {
        var mh$ = setvbuf$MH();
        try {
            return (int)mh$.invokeExact(__stream, __buf, __modes, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setbuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1661.const$3,"setbuffer");
    }
    /**
     * {@snippet :
     * void setbuffer(struct _IO_FILE* __stream, char* __buf, unsigned long __size);
     * }
     */
    public static void setbuffer(MemorySegment __stream, MemorySegment __buf, long __size) {
        var mh$ = setbuffer$MH();
        try {
            mh$.invokeExact(__stream, __buf, __size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setlinebuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1661.const$4,"setlinebuf");
    }
    /**
     * {@snippet :
     * void setlinebuf(struct _IO_FILE* __stream);
     * }
     */
    public static void setlinebuf(MemorySegment __stream) {
        var mh$ = setlinebuf$MH();
        try {
            mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1661.const$5,"fprintf");
    }
    /**
     * {@snippet :
     * int fprintf(struct _IO_FILE* __stream, char* __format,...);
     * }
     */
    public static int fprintf(MemorySegment __stream, MemorySegment __format, Object... x2) {
        var mh$ = fprintf$MH();
        try {
            return (int)mh$.invokeExact(__stream, __format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle printf$MH() {
        return RuntimeHelper.requireNonNull(constants$1662.const$0,"printf");
    }
    /**
     * {@snippet :
     * int printf(char* __format,...);
     * }
     */
    public static int printf(MemorySegment __format, Object... x1) {
        var mh$ = printf$MH();
        try {
            return (int)mh$.invokeExact(__format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1662.const$1,"sprintf");
    }
    /**
     * {@snippet :
     * int sprintf(char* __s, char* __format,...);
     * }
     */
    public static int sprintf(MemorySegment __s, MemorySegment __format, Object... x2) {
        var mh$ = sprintf$MH();
        try {
            return (int)mh$.invokeExact(__s, __format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1662.const$3,"vfprintf");
    }
    /**
     * {@snippet :
     * int vfprintf(struct _IO_FILE* __s, char* __format, struct __va_list __arg);
     * }
     */
    public static int vfprintf(MemorySegment __s, MemorySegment __format, MemorySegment __arg) {
        var mh$ = vfprintf$MH();
        try {
            return (int)mh$.invokeExact(__s, __format, __arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1662.const$5,"vprintf");
    }
    /**
     * {@snippet :
     * int vprintf(char* __format, struct __va_list __arg);
     * }
     */
    public static int vprintf(MemorySegment __format, MemorySegment __arg) {
        var mh$ = vprintf$MH();
        try {
            return (int)mh$.invokeExact(__format, __arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1663.const$0,"vsprintf");
    }
    /**
     * {@snippet :
     * int vsprintf(char* __s, char* __format, struct __va_list __arg);
     * }
     */
    public static int vsprintf(MemorySegment __s, MemorySegment __format, MemorySegment __arg) {
        var mh$ = vsprintf$MH();
        try {
            return (int)mh$.invokeExact(__s, __format, __arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle snprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1663.const$1,"snprintf");
    }
    /**
     * {@snippet :
     * int snprintf(char* __s, unsigned long __maxlen, char* __format,...);
     * }
     */
    public static int snprintf(MemorySegment __s, long __maxlen, MemorySegment __format, Object... x3) {
        var mh$ = snprintf$MH();
        try {
            return (int)mh$.invokeExact(__s, __maxlen, __format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsnprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1663.const$2,"vsnprintf");
    }
    /**
     * {@snippet :
     * int vsnprintf(char* __s, unsigned long __maxlen, char* __format, struct __va_list __arg);
     * }
     */
    public static int vsnprintf(MemorySegment __s, long __maxlen, MemorySegment __format, MemorySegment __arg) {
        var mh$ = vsnprintf$MH();
        try {
            return (int)mh$.invokeExact(__s, __maxlen, __format, __arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vdprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1663.const$4,"vdprintf");
    }
    /**
     * {@snippet :
     * int vdprintf(int __fd, char* __fmt, struct __va_list __arg);
     * }
     */
    public static int vdprintf(int __fd, MemorySegment __fmt, MemorySegment __arg) {
        var mh$ = vdprintf$MH();
        try {
            return (int)mh$.invokeExact(__fd, __fmt, __arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle dprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1663.const$5,"dprintf");
    }
    /**
     * {@snippet :
     * int dprintf(int __fd, char* __fmt,...);
     * }
     */
    public static int dprintf(int __fd, MemorySegment __fmt, Object... x2) {
        var mh$ = dprintf$MH();
        try {
            return (int)mh$.invokeExact(__fd, __fmt, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1664.const$0,"fscanf");
    }
    /**
     * {@snippet :
     * int fscanf(struct _IO_FILE* __stream, char* __format,...);
     * }
     */
    public static int fscanf(MemorySegment __stream, MemorySegment __format, Object... x2) {
        var mh$ = fscanf$MH();
        try {
            return (int)mh$.invokeExact(__stream, __format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle scanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1664.const$1,"scanf");
    }
    /**
     * {@snippet :
     * int scanf(char* __format,...);
     * }
     */
    public static int scanf(MemorySegment __format, Object... x1) {
        var mh$ = scanf$MH();
        try {
            return (int)mh$.invokeExact(__format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1664.const$2,"sscanf");
    }
    /**
     * {@snippet :
     * int sscanf(char* __s, char* __format,...);
     * }
     */
    public static int sscanf(MemorySegment __s, MemorySegment __format, Object... x2) {
        var mh$ = sscanf$MH();
        try {
            return (int)mh$.invokeExact(__s, __format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1664.const$3,"vfscanf");
    }
    /**
     * {@snippet :
     * int vfscanf(struct _IO_FILE* __s, char* __format, struct __va_list __arg);
     * }
     */
    public static int vfscanf(MemorySegment __s, MemorySegment __format, MemorySegment __arg) {
        var mh$ = vfscanf$MH();
        try {
            return (int)mh$.invokeExact(__s, __format, __arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1664.const$4,"vscanf");
    }
    /**
     * {@snippet :
     * int vscanf(char* __format, struct __va_list __arg);
     * }
     */
    public static int vscanf(MemorySegment __format, MemorySegment __arg) {
        var mh$ = vscanf$MH();
        try {
            return (int)mh$.invokeExact(__format, __arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1664.const$5,"vsscanf");
    }
    /**
     * {@snippet :
     * int vsscanf(char* __s, char* __format, struct __va_list __arg);
     * }
     */
    public static int vsscanf(MemorySegment __s, MemorySegment __format, MemorySegment __arg) {
        var mh$ = vsscanf$MH();
        try {
            return (int)mh$.invokeExact(__s, __format, __arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetc$MH() {
        return RuntimeHelper.requireNonNull(constants$1665.const$0,"fgetc");
    }
    /**
     * {@snippet :
     * int fgetc(struct _IO_FILE* __stream);
     * }
     */
    public static int fgetc(MemorySegment __stream) {
        var mh$ = fgetc$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getc$MH() {
        return RuntimeHelper.requireNonNull(constants$1665.const$1,"getc");
    }
    /**
     * {@snippet :
     * int getc(struct _IO_FILE* __stream);
     * }
     */
    public static int getc(MemorySegment __stream) {
        var mh$ = getc$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getchar$MH() {
        return RuntimeHelper.requireNonNull(constants$1665.const$2,"getchar");
    }
    /**
     * {@snippet :
     * int getchar();
     * }
     */
    public static int getchar() {
        var mh$ = getchar$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getc_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1665.const$3,"getc_unlocked");
    }
    /**
     * {@snippet :
     * int getc_unlocked(struct _IO_FILE* __stream);
     * }
     */
    public static int getc_unlocked(MemorySegment __stream) {
        var mh$ = getc_unlocked$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getchar_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1665.const$4,"getchar_unlocked");
    }
    /**
     * {@snippet :
     * int getchar_unlocked();
     * }
     */
    public static int getchar_unlocked() {
        var mh$ = getchar_unlocked$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetc_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1665.const$5,"fgetc_unlocked");
    }
    /**
     * {@snippet :
     * int fgetc_unlocked(struct _IO_FILE* __stream);
     * }
     */
    public static int fgetc_unlocked(MemorySegment __stream) {
        var mh$ = fgetc_unlocked$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputc$MH() {
        return RuntimeHelper.requireNonNull(constants$1666.const$0,"fputc");
    }
    /**
     * {@snippet :
     * int fputc(int __c, struct _IO_FILE* __stream);
     * }
     */
    public static int fputc(int __c, MemorySegment __stream) {
        var mh$ = fputc$MH();
        try {
            return (int)mh$.invokeExact(__c, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putc$MH() {
        return RuntimeHelper.requireNonNull(constants$1666.const$1,"putc");
    }
    /**
     * {@snippet :
     * int putc(int __c, struct _IO_FILE* __stream);
     * }
     */
    public static int putc(int __c, MemorySegment __stream) {
        var mh$ = putc$MH();
        try {
            return (int)mh$.invokeExact(__c, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putchar$MH() {
        return RuntimeHelper.requireNonNull(constants$1666.const$2,"putchar");
    }
    /**
     * {@snippet :
     * int putchar(int __c);
     * }
     */
    public static int putchar(int __c) {
        var mh$ = putchar$MH();
        try {
            return (int)mh$.invokeExact(__c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputc_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1666.const$3,"fputc_unlocked");
    }
    /**
     * {@snippet :
     * int fputc_unlocked(int __c, struct _IO_FILE* __stream);
     * }
     */
    public static int fputc_unlocked(int __c, MemorySegment __stream) {
        var mh$ = fputc_unlocked$MH();
        try {
            return (int)mh$.invokeExact(__c, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putc_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1666.const$4,"putc_unlocked");
    }
    /**
     * {@snippet :
     * int putc_unlocked(int __c, struct _IO_FILE* __stream);
     * }
     */
    public static int putc_unlocked(int __c, MemorySegment __stream) {
        var mh$ = putc_unlocked$MH();
        try {
            return (int)mh$.invokeExact(__c, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putchar_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1666.const$5,"putchar_unlocked");
    }
    /**
     * {@snippet :
     * int putchar_unlocked(int __c);
     * }
     */
    public static int putchar_unlocked(int __c) {
        var mh$ = putchar_unlocked$MH();
        try {
            return (int)mh$.invokeExact(__c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getw$MH() {
        return RuntimeHelper.requireNonNull(constants$1667.const$0,"getw");
    }
    /**
     * {@snippet :
     * int getw(struct _IO_FILE* __stream);
     * }
     */
    public static int getw(MemorySegment __stream) {
        var mh$ = getw$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putw$MH() {
        return RuntimeHelper.requireNonNull(constants$1667.const$1,"putw");
    }
    /**
     * {@snippet :
     * int putw(int __w, struct _IO_FILE* __stream);
     * }
     */
    public static int putw(int __w, MemorySegment __stream) {
        var mh$ = putw$MH();
        try {
            return (int)mh$.invokeExact(__w, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgets$MH() {
        return RuntimeHelper.requireNonNull(constants$1667.const$2,"fgets");
    }
    /**
     * {@snippet :
     * char* fgets(char* __s, int __n, struct _IO_FILE* __stream);
     * }
     */
    public static MemorySegment fgets(MemorySegment __s, int __n, MemorySegment __stream) {
        var mh$ = fgets$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__s, __n, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __getdelim$MH() {
        return RuntimeHelper.requireNonNull(constants$1667.const$4,"__getdelim");
    }
    /**
     * {@snippet :
     * long __getdelim(char** __lineptr, unsigned long* __n, int __delimiter, struct _IO_FILE* __stream);
     * }
     */
    public static long __getdelim(MemorySegment __lineptr, MemorySegment __n, int __delimiter, MemorySegment __stream) {
        var mh$ = __getdelim$MH();
        try {
            return (long)mh$.invokeExact(__lineptr, __n, __delimiter, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getdelim$MH() {
        return RuntimeHelper.requireNonNull(constants$1667.const$5,"getdelim");
    }
    /**
     * {@snippet :
     * long getdelim(char** __lineptr, unsigned long* __n, int __delimiter, struct _IO_FILE* __stream);
     * }
     */
    public static long getdelim(MemorySegment __lineptr, MemorySegment __n, int __delimiter, MemorySegment __stream) {
        var mh$ = getdelim$MH();
        try {
            return (long)mh$.invokeExact(__lineptr, __n, __delimiter, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getline$MH() {
        return RuntimeHelper.requireNonNull(constants$1668.const$0,"getline");
    }
    /**
     * {@snippet :
     * long getline(char** __lineptr, unsigned long* __n, struct _IO_FILE* __stream);
     * }
     */
    public static long getline(MemorySegment __lineptr, MemorySegment __n, MemorySegment __stream) {
        var mh$ = getline$MH();
        try {
            return (long)mh$.invokeExact(__lineptr, __n, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputs$MH() {
        return RuntimeHelper.requireNonNull(constants$1668.const$1,"fputs");
    }
    /**
     * {@snippet :
     * int fputs(char* __s, struct _IO_FILE* __stream);
     * }
     */
    public static int fputs(MemorySegment __s, MemorySegment __stream) {
        var mh$ = fputs$MH();
        try {
            return (int)mh$.invokeExact(__s, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle puts$MH() {
        return RuntimeHelper.requireNonNull(constants$1668.const$2,"puts");
    }
    /**
     * {@snippet :
     * int puts(char* __s);
     * }
     */
    public static int puts(MemorySegment __s) {
        var mh$ = puts$MH();
        try {
            return (int)mh$.invokeExact(__s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ungetc$MH() {
        return RuntimeHelper.requireNonNull(constants$1668.const$3,"ungetc");
    }
    /**
     * {@snippet :
     * int ungetc(int __c, struct _IO_FILE* __stream);
     * }
     */
    public static int ungetc(int __c, MemorySegment __stream) {
        var mh$ = ungetc$MH();
        try {
            return (int)mh$.invokeExact(__c, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fread$MH() {
        return RuntimeHelper.requireNonNull(constants$1668.const$5,"fread");
    }
    /**
     * {@snippet :
     * unsigned long fread(void* __ptr, unsigned long __size, unsigned long __n, struct _IO_FILE* __stream);
     * }
     */
    public static long fread(MemorySegment __ptr, long __size, long __n, MemorySegment __stream) {
        var mh$ = fread$MH();
        try {
            return (long)mh$.invokeExact(__ptr, __size, __n, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fwrite$MH() {
        return RuntimeHelper.requireNonNull(constants$1669.const$0,"fwrite");
    }
    /**
     * {@snippet :
     * unsigned long fwrite(void* __ptr, unsigned long __size, unsigned long __n, struct _IO_FILE* __s);
     * }
     */
    public static long fwrite(MemorySegment __ptr, long __size, long __n, MemorySegment __s) {
        var mh$ = fwrite$MH();
        try {
            return (long)mh$.invokeExact(__ptr, __size, __n, __s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fread_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1669.const$1,"fread_unlocked");
    }
    /**
     * {@snippet :
     * unsigned long fread_unlocked(void* __ptr, unsigned long __size, unsigned long __n, struct _IO_FILE* __stream);
     * }
     */
    public static long fread_unlocked(MemorySegment __ptr, long __size, long __n, MemorySegment __stream) {
        var mh$ = fread_unlocked$MH();
        try {
            return (long)mh$.invokeExact(__ptr, __size, __n, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fwrite_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1669.const$2,"fwrite_unlocked");
    }
    /**
     * {@snippet :
     * unsigned long fwrite_unlocked(void* __ptr, unsigned long __size, unsigned long __n, struct _IO_FILE* __stream);
     * }
     */
    public static long fwrite_unlocked(MemorySegment __ptr, long __size, long __n, MemorySegment __stream) {
        var mh$ = fwrite_unlocked$MH();
        try {
            return (long)mh$.invokeExact(__ptr, __size, __n, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fseek$MH() {
        return RuntimeHelper.requireNonNull(constants$1669.const$3,"fseek");
    }
    /**
     * {@snippet :
     * int fseek(struct _IO_FILE* __stream, long __off, int __whence);
     * }
     */
    public static int fseek(MemorySegment __stream, long __off, int __whence) {
        var mh$ = fseek$MH();
        try {
            return (int)mh$.invokeExact(__stream, __off, __whence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ftell$MH() {
        return RuntimeHelper.requireNonNull(constants$1669.const$4,"ftell");
    }
    /**
     * {@snippet :
     * long ftell(struct _IO_FILE* __stream);
     * }
     */
    public static long ftell(MemorySegment __stream) {
        var mh$ = ftell$MH();
        try {
            return (long)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rewind$MH() {
        return RuntimeHelper.requireNonNull(constants$1669.const$5,"rewind");
    }
    /**
     * {@snippet :
     * void rewind(struct _IO_FILE* __stream);
     * }
     */
    public static void rewind(MemorySegment __stream) {
        var mh$ = rewind$MH();
        try {
            mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fseeko$MH() {
        return RuntimeHelper.requireNonNull(constants$1670.const$0,"fseeko");
    }
    /**
     * {@snippet :
     * int fseeko(struct _IO_FILE* __stream, long __off, int __whence);
     * }
     */
    public static int fseeko(MemorySegment __stream, long __off, int __whence) {
        var mh$ = fseeko$MH();
        try {
            return (int)mh$.invokeExact(__stream, __off, __whence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ftello$MH() {
        return RuntimeHelper.requireNonNull(constants$1670.const$1,"ftello");
    }
    /**
     * {@snippet :
     * long ftello(struct _IO_FILE* __stream);
     * }
     */
    public static long ftello(MemorySegment __stream) {
        var mh$ = ftello$MH();
        try {
            return (long)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetpos$MH() {
        return RuntimeHelper.requireNonNull(constants$1670.const$2,"fgetpos");
    }
    /**
     * {@snippet :
     * int fgetpos(struct _IO_FILE* __stream, struct _G_fpos_t* __pos);
     * }
     */
    public static int fgetpos(MemorySegment __stream, MemorySegment __pos) {
        var mh$ = fgetpos$MH();
        try {
            return (int)mh$.invokeExact(__stream, __pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fsetpos$MH() {
        return RuntimeHelper.requireNonNull(constants$1670.const$3,"fsetpos");
    }
    /**
     * {@snippet :
     * int fsetpos(struct _IO_FILE* __stream, struct _G_fpos_t* __pos);
     * }
     */
    public static int fsetpos(MemorySegment __stream, MemorySegment __pos) {
        var mh$ = fsetpos$MH();
        try {
            return (int)mh$.invokeExact(__stream, __pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle clearerr$MH() {
        return RuntimeHelper.requireNonNull(constants$1670.const$4,"clearerr");
    }
    /**
     * {@snippet :
     * void clearerr(struct _IO_FILE* __stream);
     * }
     */
    public static void clearerr(MemorySegment __stream) {
        var mh$ = clearerr$MH();
        try {
            mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle feof$MH() {
        return RuntimeHelper.requireNonNull(constants$1670.const$5,"feof");
    }
    /**
     * {@snippet :
     * int feof(struct _IO_FILE* __stream);
     * }
     */
    public static int feof(MemorySegment __stream) {
        var mh$ = feof$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ferror$MH() {
        return RuntimeHelper.requireNonNull(constants$1671.const$0,"ferror");
    }
    /**
     * {@snippet :
     * int ferror(struct _IO_FILE* __stream);
     * }
     */
    public static int ferror(MemorySegment __stream) {
        var mh$ = ferror$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle clearerr_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1671.const$1,"clearerr_unlocked");
    }
    /**
     * {@snippet :
     * void clearerr_unlocked(struct _IO_FILE* __stream);
     * }
     */
    public static void clearerr_unlocked(MemorySegment __stream) {
        var mh$ = clearerr_unlocked$MH();
        try {
            mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle feof_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1671.const$2,"feof_unlocked");
    }
    /**
     * {@snippet :
     * int feof_unlocked(struct _IO_FILE* __stream);
     * }
     */
    public static int feof_unlocked(MemorySegment __stream) {
        var mh$ = feof_unlocked$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ferror_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1671.const$3,"ferror_unlocked");
    }
    /**
     * {@snippet :
     * int ferror_unlocked(struct _IO_FILE* __stream);
     * }
     */
    public static int ferror_unlocked(MemorySegment __stream) {
        var mh$ = ferror_unlocked$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle perror$MH() {
        return RuntimeHelper.requireNonNull(constants$1671.const$4,"perror");
    }
    /**
     * {@snippet :
     * void perror(char* __s);
     * }
     */
    public static void perror(MemorySegment __s) {
        var mh$ = perror$MH();
        try {
            mh$.invokeExact(__s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fileno$MH() {
        return RuntimeHelper.requireNonNull(constants$1671.const$5,"fileno");
    }
    /**
     * {@snippet :
     * int fileno(struct _IO_FILE* __stream);
     * }
     */
    public static int fileno(MemorySegment __stream) {
        var mh$ = fileno$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fileno_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1672.const$0,"fileno_unlocked");
    }
    /**
     * {@snippet :
     * int fileno_unlocked(struct _IO_FILE* __stream);
     * }
     */
    public static int fileno_unlocked(MemorySegment __stream) {
        var mh$ = fileno_unlocked$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pclose$MH() {
        return RuntimeHelper.requireNonNull(constants$1672.const$1,"pclose");
    }
    /**
     * {@snippet :
     * int pclose(struct _IO_FILE* __stream);
     * }
     */
    public static int pclose(MemorySegment __stream) {
        var mh$ = pclose$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle popen$MH() {
        return RuntimeHelper.requireNonNull(constants$1672.const$2,"popen");
    }
    /**
     * {@snippet :
     * struct _IO_FILE* popen(char* __command, char* __modes);
     * }
     */
    public static MemorySegment popen(MemorySegment __command, MemorySegment __modes) {
        var mh$ = popen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__command, __modes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ctermid$MH() {
        return RuntimeHelper.requireNonNull(constants$1672.const$3,"ctermid");
    }
    /**
     * {@snippet :
     * char* ctermid(char* __s);
     * }
     */
    public static MemorySegment ctermid(MemorySegment __s) {
        var mh$ = ctermid$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(__s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle flockfile$MH() {
        return RuntimeHelper.requireNonNull(constants$1672.const$4,"flockfile");
    }
    /**
     * {@snippet :
     * void flockfile(struct _IO_FILE* __stream);
     * }
     */
    public static void flockfile(MemorySegment __stream) {
        var mh$ = flockfile$MH();
        try {
            mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ftrylockfile$MH() {
        return RuntimeHelper.requireNonNull(constants$1672.const$5,"ftrylockfile");
    }
    /**
     * {@snippet :
     * int ftrylockfile(struct _IO_FILE* __stream);
     * }
     */
    public static int ftrylockfile(MemorySegment __stream) {
        var mh$ = ftrylockfile$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle funlockfile$MH() {
        return RuntimeHelper.requireNonNull(constants$1673.const$0,"funlockfile");
    }
    /**
     * {@snippet :
     * void funlockfile(struct _IO_FILE* __stream);
     * }
     */
    public static void funlockfile(MemorySegment __stream) {
        var mh$ = funlockfile$MH();
        try {
            mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __uflow$MH() {
        return RuntimeHelper.requireNonNull(constants$1673.const$1,"__uflow");
    }
    /**
     * {@snippet :
     * int __uflow(struct _IO_FILE*);
     * }
     */
    public static int __uflow(MemorySegment x0) {
        var mh$ = __uflow$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __overflow$MH() {
        return RuntimeHelper.requireNonNull(constants$1673.const$2,"__overflow");
    }
    /**
     * {@snippet :
     * int __overflow(struct _IO_FILE*, int);
     * }
     */
    public static int __overflow(MemorySegment x0, int x1) {
        var mh$ = __overflow$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_split_file_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1673.const$3,"pango_split_file_list");
    }
    /**
     * {@snippet :
     * char** pango_split_file_list(char* str);
     * }
     */
    public static MemorySegment pango_split_file_list(MemorySegment str) {
        var mh$ = pango_split_file_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_trim_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1673.const$4,"pango_trim_string");
    }
    /**
     * {@snippet :
     * char* pango_trim_string(char* str);
     * }
     */
    public static MemorySegment pango_trim_string(MemorySegment str) {
        var mh$ = pango_trim_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_read_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1673.const$5,"pango_read_line");
    }
    /**
     * {@snippet :
     * int pango_read_line(struct _IO_FILE* stream, struct _GString* str);
     * }
     */
    public static int pango_read_line(MemorySegment stream, MemorySegment str) {
        var mh$ = pango_read_line$MH();
        try {
            return (int)mh$.invokeExact(stream, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_skip_space$MH() {
        return RuntimeHelper.requireNonNull(constants$1674.const$0,"pango_skip_space");
    }
    /**
     * {@snippet :
     * int pango_skip_space(char** pos);
     * }
     */
    public static int pango_skip_space(MemorySegment pos) {
        var mh$ = pango_skip_space$MH();
        try {
            return (int)mh$.invokeExact(pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_scan_word$MH() {
        return RuntimeHelper.requireNonNull(constants$1674.const$1,"pango_scan_word");
    }
    /**
     * {@snippet :
     * int pango_scan_word(char** pos, struct _GString* out);
     * }
     */
    public static int pango_scan_word(MemorySegment pos, MemorySegment out) {
        var mh$ = pango_scan_word$MH();
        try {
            return (int)mh$.invokeExact(pos, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_scan_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1674.const$2,"pango_scan_string");
    }
    /**
     * {@snippet :
     * int pango_scan_string(char** pos, struct _GString* out);
     * }
     */
    public static int pango_scan_string(MemorySegment pos, MemorySegment out) {
        var mh$ = pango_scan_string$MH();
        try {
            return (int)mh$.invokeExact(pos, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_scan_int$MH() {
        return RuntimeHelper.requireNonNull(constants$1674.const$3,"pango_scan_int");
    }
    /**
     * {@snippet :
     * int pango_scan_int(char** pos, int* out);
     * }
     */
    public static int pango_scan_int(MemorySegment pos, MemorySegment out) {
        var mh$ = pango_scan_int$MH();
        try {
            return (int)mh$.invokeExact(pos, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_parse_enum$MH() {
        return RuntimeHelper.requireNonNull(constants$1674.const$5,"pango_parse_enum");
    }
    /**
     * {@snippet :
     * int pango_parse_enum(unsigned long type, char* str, int* value, int warn, char** possible_values);
     * }
     */
    public static int pango_parse_enum(long type, MemorySegment str, MemorySegment value, int warn, MemorySegment possible_values) {
        var mh$ = pango_parse_enum$MH();
        try {
            return (int)mh$.invokeExact(type, str, value, warn, possible_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_parse_style$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.const$0,"pango_parse_style");
    }
    /**
     * {@snippet :
     * int pango_parse_style(char* str, enum PangoStyle* style, int warn);
     * }
     */
    public static int pango_parse_style(MemorySegment str, MemorySegment style, int warn) {
        var mh$ = pango_parse_style$MH();
        try {
            return (int)mh$.invokeExact(str, style, warn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_parse_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.const$1,"pango_parse_variant");
    }
    /**
     * {@snippet :
     * int pango_parse_variant(char* str, enum PangoVariant* variant, int warn);
     * }
     */
    public static int pango_parse_variant(MemorySegment str, MemorySegment variant, int warn) {
        var mh$ = pango_parse_variant$MH();
        try {
            return (int)mh$.invokeExact(str, variant, warn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_parse_weight$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.const$2,"pango_parse_weight");
    }
    /**
     * {@snippet :
     * int pango_parse_weight(char* str, enum PangoWeight* weight, int warn);
     * }
     */
    public static int pango_parse_weight(MemorySegment str, MemorySegment weight, int warn) {
        var mh$ = pango_parse_weight$MH();
        try {
            return (int)mh$.invokeExact(str, weight, warn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_parse_stretch$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.const$3,"pango_parse_stretch");
    }
    /**
     * {@snippet :
     * int pango_parse_stretch(char* str, enum PangoStretch* stretch, int warn);
     * }
     */
    public static int pango_parse_stretch(MemorySegment str, MemorySegment stretch, int warn) {
        var mh$ = pango_parse_stretch$MH();
        try {
            return (int)mh$.invokeExact(str, stretch, warn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_quantize_line_geometry$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.const$4,"pango_quantize_line_geometry");
    }
    /**
     * {@snippet :
     * void pango_quantize_line_geometry(int* thickness, int* position);
     * }
     */
    public static void pango_quantize_line_geometry(MemorySegment thickness, MemorySegment position) {
        var mh$ = pango_quantize_line_geometry$MH();
        try {
            mh$.invokeExact(thickness, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_log2vis_get_embedding_levels$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.const$5,"pango_log2vis_get_embedding_levels");
    }
    /**
     * {@snippet :
     * unsigned char* pango_log2vis_get_embedding_levels(char* text, int length, enum PangoDirection* pbase_dir);
     * }
     */
    public static MemorySegment pango_log2vis_get_embedding_levels(MemorySegment text, int length, MemorySegment pbase_dir) {
        var mh$ = pango_log2vis_get_embedding_levels$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text, length, pbase_dir);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_is_zero_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.const$0,"pango_is_zero_width");
    }
    /**
     * {@snippet :
     * int pango_is_zero_width(unsigned int ch);
     * }
     */
    public static int pango_is_zero_width(int ch) {
        var mh$ = pango_is_zero_width$MH();
        try {
            return (int)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_find_paragraph_boundary$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.const$1,"pango_find_paragraph_boundary");
    }
    /**
     * {@snippet :
     * void pango_find_paragraph_boundary(char* text, int length, int* paragraph_delimiter_index, int* next_paragraph_start);
     * }
     */
    public static void pango_find_paragraph_boundary(MemorySegment text, int length, MemorySegment paragraph_delimiter_index, MemorySegment next_paragraph_start) {
        var mh$ = pango_find_paragraph_boundary$MH();
        try {
            mh$.invokeExact(text, length, paragraph_delimiter_index, next_paragraph_start);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.const$2,"pango_version");
    }
    /**
     * {@snippet :
     * int pango_version();
     * }
     */
    public static int pango_version() {
        var mh$ = pango_version$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_version_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.const$3,"pango_version_string");
    }
    /**
     * {@snippet :
     * char* pango_version_string();
     * }
     */
    public static MemorySegment pango_version_string() {
        var mh$ = pango_version_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_version_check$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.const$4,"pango_version_check");
    }
    /**
     * {@snippet :
     * char* pango_version_check(int required_major, int required_minor, int required_micro);
     * }
     */
    public static MemorySegment pango_version_check(int required_major, int required_minor, int required_micro) {
        var mh$ = pango_version_check$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(required_major, required_minor, required_micro);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.const$5,"cairo_version");
    }
    /**
     * {@snippet :
     * int cairo_version();
     * }
     */
    public static int cairo_version() {
        var mh$ = cairo_version$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_version_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1677.const$0,"cairo_version_string");
    }
    /**
     * {@snippet :
     * char* cairo_version_string();
     * }
     */
    public static MemorySegment cairo_version_string() {
        var mh$ = cairo_version_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef int cairo_bool_t;
     * }
     */
    public static final OfInt cairo_bool_t = JAVA_INT;
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_SUCCESS = 0;
     * }
     */
    public static int CAIRO_STATUS_SUCCESS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_NO_MEMORY = 1;
     * }
     */
    public static int CAIRO_STATUS_NO_MEMORY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_INVALID_RESTORE = 2;
     * }
     */
    public static int CAIRO_STATUS_INVALID_RESTORE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_INVALID_POP_GROUP = 3;
     * }
     */
    public static int CAIRO_STATUS_INVALID_POP_GROUP() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_NO_CURRENT_POINT = 4;
     * }
     */
    public static int CAIRO_STATUS_NO_CURRENT_POINT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_INVALID_MATRIX = 5;
     * }
     */
    public static int CAIRO_STATUS_INVALID_MATRIX() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_INVALID_STATUS = 6;
     * }
     */
    public static int CAIRO_STATUS_INVALID_STATUS() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_NULL_POINTER = 7;
     * }
     */
    public static int CAIRO_STATUS_NULL_POINTER() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_INVALID_STRING = 8;
     * }
     */
    public static int CAIRO_STATUS_INVALID_STRING() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_INVALID_PATH_DATA = 9;
     * }
     */
    public static int CAIRO_STATUS_INVALID_PATH_DATA() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_READ_ERROR = 10;
     * }
     */
    public static int CAIRO_STATUS_READ_ERROR() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_WRITE_ERROR = 11;
     * }
     */
    public static int CAIRO_STATUS_WRITE_ERROR() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_SURFACE_FINISHED = 12;
     * }
     */
    public static int CAIRO_STATUS_SURFACE_FINISHED() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_SURFACE_TYPE_MISMATCH = 13;
     * }
     */
    public static int CAIRO_STATUS_SURFACE_TYPE_MISMATCH() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_PATTERN_TYPE_MISMATCH = 14;
     * }
     */
    public static int CAIRO_STATUS_PATTERN_TYPE_MISMATCH() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_INVALID_CONTENT = 15;
     * }
     */
    public static int CAIRO_STATUS_INVALID_CONTENT() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_INVALID_FORMAT = 16;
     * }
     */
    public static int CAIRO_STATUS_INVALID_FORMAT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_INVALID_VISUAL = 17;
     * }
     */
    public static int CAIRO_STATUS_INVALID_VISUAL() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_FILE_NOT_FOUND = 18;
     * }
     */
    public static int CAIRO_STATUS_FILE_NOT_FOUND() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_INVALID_DASH = 19;
     * }
     */
    public static int CAIRO_STATUS_INVALID_DASH() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_INVALID_DSC_COMMENT = 20;
     * }
     */
    public static int CAIRO_STATUS_INVALID_DSC_COMMENT() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_INVALID_INDEX = 21;
     * }
     */
    public static int CAIRO_STATUS_INVALID_INDEX() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_CLIP_NOT_REPRESENTABLE = 22;
     * }
     */
    public static int CAIRO_STATUS_CLIP_NOT_REPRESENTABLE() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_TEMP_FILE_ERROR = 23;
     * }
     */
    public static int CAIRO_STATUS_TEMP_FILE_ERROR() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_INVALID_STRIDE = 24;
     * }
     */
    public static int CAIRO_STATUS_INVALID_STRIDE() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_FONT_TYPE_MISMATCH = 25;
     * }
     */
    public static int CAIRO_STATUS_FONT_TYPE_MISMATCH() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_USER_FONT_IMMUTABLE = 26;
     * }
     */
    public static int CAIRO_STATUS_USER_FONT_IMMUTABLE() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_USER_FONT_ERROR = 27;
     * }
     */
    public static int CAIRO_STATUS_USER_FONT_ERROR() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_NEGATIVE_COUNT = 28;
     * }
     */
    public static int CAIRO_STATUS_NEGATIVE_COUNT() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_INVALID_CLUSTERS = 29;
     * }
     */
    public static int CAIRO_STATUS_INVALID_CLUSTERS() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_INVALID_SLANT = 30;
     * }
     */
    public static int CAIRO_STATUS_INVALID_SLANT() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_INVALID_WEIGHT = 31;
     * }
     */
    public static int CAIRO_STATUS_INVALID_WEIGHT() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_INVALID_SIZE = 32;
     * }
     */
    public static int CAIRO_STATUS_INVALID_SIZE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED = 33;
     * }
     */
    public static int CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_DEVICE_TYPE_MISMATCH = 34;
     * }
     */
    public static int CAIRO_STATUS_DEVICE_TYPE_MISMATCH() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_DEVICE_ERROR = 35;
     * }
     */
    public static int CAIRO_STATUS_DEVICE_ERROR() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_INVALID_MESH_CONSTRUCTION = 36;
     * }
     */
    public static int CAIRO_STATUS_INVALID_MESH_CONSTRUCTION() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_DEVICE_FINISHED = 37;
     * }
     */
    public static int CAIRO_STATUS_DEVICE_FINISHED() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_JBIG2_GLOBAL_MISSING = 38;
     * }
     */
    public static int CAIRO_STATUS_JBIG2_GLOBAL_MISSING() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_PNG_ERROR = 39;
     * }
     */
    public static int CAIRO_STATUS_PNG_ERROR() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_FREETYPE_ERROR = 40;
     * }
     */
    public static int CAIRO_STATUS_FREETYPE_ERROR() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_WIN32_GDI_ERROR = 41;
     * }
     */
    public static int CAIRO_STATUS_WIN32_GDI_ERROR() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_TAG_ERROR = 42;
     * }
     */
    public static int CAIRO_STATUS_TAG_ERROR() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_DWRITE_ERROR = 43;
     * }
     */
    public static int CAIRO_STATUS_DWRITE_ERROR() {
        return (int)43L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_SVG_FONT_ERROR = 44;
     * }
     */
    public static int CAIRO_STATUS_SVG_FONT_ERROR() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * enum _cairo_status.CAIRO_STATUS_LAST_STATUS = 45;
     * }
     */
    public static int CAIRO_STATUS_LAST_STATUS() {
        return (int)45L;
    }
    /**
     * {@snippet :
     * enum _cairo_content.CAIRO_CONTENT_COLOR = 4096;
     * }
     */
    public static int CAIRO_CONTENT_COLOR() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * enum _cairo_content.CAIRO_CONTENT_ALPHA = 8192;
     * }
     */
    public static int CAIRO_CONTENT_ALPHA() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * enum _cairo_content.CAIRO_CONTENT_COLOR_ALPHA = 12288;
     * }
     */
    public static int CAIRO_CONTENT_COLOR_ALPHA() {
        return (int)12288L;
    }
    /**
     * {@snippet :
     * enum _cairo_format.CAIRO_FORMAT_INVALID = -1;
     * }
     */
    public static int CAIRO_FORMAT_INVALID() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * enum _cairo_format.CAIRO_FORMAT_ARGB32 = 0;
     * }
     */
    public static int CAIRO_FORMAT_ARGB32() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_format.CAIRO_FORMAT_RGB24 = 1;
     * }
     */
    public static int CAIRO_FORMAT_RGB24() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_format.CAIRO_FORMAT_A8 = 2;
     * }
     */
    public static int CAIRO_FORMAT_A8() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _cairo_format.CAIRO_FORMAT_A1 = 3;
     * }
     */
    public static int CAIRO_FORMAT_A1() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _cairo_format.CAIRO_FORMAT_RGB16_565 = 4;
     * }
     */
    public static int CAIRO_FORMAT_RGB16_565() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _cairo_format.CAIRO_FORMAT_RGB30 = 5;
     * }
     */
    public static int CAIRO_FORMAT_RGB30() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _cairo_format.CAIRO_FORMAT_RGB96F = 6;
     * }
     */
    public static int CAIRO_FORMAT_RGB96F() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _cairo_format.CAIRO_FORMAT_RGBA128F = 7;
     * }
     */
    public static int CAIRO_FORMAT_RGBA128F() {
        return (int)7L;
    }
    public static MethodHandle cairo_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.const$0,"cairo_create");
    }
    /**
     * {@snippet :
     * struct _cairo* cairo_create(struct _cairo_surface* target);
     * }
     */
    public static MemorySegment cairo_create(MemorySegment target) {
        var mh$ = cairo_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.const$1,"cairo_reference");
    }
    /**
     * {@snippet :
     * struct _cairo* cairo_reference(struct _cairo* cr);
     * }
     */
    public static MemorySegment cairo_reference(MemorySegment cr) {
        var mh$ = cairo_reference$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.const$2,"cairo_destroy");
    }
    /**
     * {@snippet :
     * void cairo_destroy(struct _cairo* cr);
     * }
     */
    public static void cairo_destroy(MemorySegment cr) {
        var mh$ = cairo_destroy$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_reference_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.const$3,"cairo_get_reference_count");
    }
    /**
     * {@snippet :
     * unsigned int cairo_get_reference_count(struct _cairo* cr);
     * }
     */
    public static int cairo_get_reference_count(MemorySegment cr) {
        var mh$ = cairo_get_reference_count$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.const$4,"cairo_get_user_data");
    }
    /**
     * {@snippet :
     * void* cairo_get_user_data(struct _cairo* cr, struct _cairo_user_data_key* key);
     * }
     */
    public static MemorySegment cairo_get_user_data(MemorySegment cr, MemorySegment key) {
        var mh$ = cairo_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cr, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.const$0,"cairo_set_user_data");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_set_user_data(struct _cairo* cr, struct _cairo_user_data_key* key, void* user_data, void (*destroy)(void*));
     * }
     */
    public static int cairo_set_user_data(MemorySegment cr, MemorySegment key, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = cairo_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(cr, key, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_save$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.const$1,"cairo_save");
    }
    /**
     * {@snippet :
     * void cairo_save(struct _cairo* cr);
     * }
     */
    public static void cairo_save(MemorySegment cr) {
        var mh$ = cairo_save$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_restore$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.const$2,"cairo_restore");
    }
    /**
     * {@snippet :
     * void cairo_restore(struct _cairo* cr);
     * }
     */
    public static void cairo_restore(MemorySegment cr) {
        var mh$ = cairo_restore$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_push_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.const$3,"cairo_push_group");
    }
    /**
     * {@snippet :
     * void cairo_push_group(struct _cairo* cr);
     * }
     */
    public static void cairo_push_group(MemorySegment cr) {
        var mh$ = cairo_push_group$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_push_group_with_content$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.const$4,"cairo_push_group_with_content");
    }
    /**
     * {@snippet :
     * void cairo_push_group_with_content(struct _cairo* cr, enum _cairo_content content);
     * }
     */
    public static void cairo_push_group_with_content(MemorySegment cr, int content) {
        var mh$ = cairo_push_group_with_content$MH();
        try {
            mh$.invokeExact(cr, content);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pop_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.const$5,"cairo_pop_group");
    }
    /**
     * {@snippet :
     * struct _cairo_pattern* cairo_pop_group(struct _cairo* cr);
     * }
     */
    public static MemorySegment cairo_pop_group(MemorySegment cr) {
        var mh$ = cairo_pop_group$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pop_group_to_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.const$0,"cairo_pop_group_to_source");
    }
    /**
     * {@snippet :
     * void cairo_pop_group_to_source(struct _cairo* cr);
     * }
     */
    public static void cairo_pop_group_to_source(MemorySegment cr) {
        var mh$ = cairo_pop_group_to_source$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_CLEAR = 0;
     * }
     */
    public static int CAIRO_OPERATOR_CLEAR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_SOURCE = 1;
     * }
     */
    public static int CAIRO_OPERATOR_SOURCE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_OVER = 2;
     * }
     */
    public static int CAIRO_OPERATOR_OVER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_IN = 3;
     * }
     */
    public static int CAIRO_OPERATOR_IN() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_OUT = 4;
     * }
     */
    public static int CAIRO_OPERATOR_OUT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_ATOP = 5;
     * }
     */
    public static int CAIRO_OPERATOR_ATOP() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_DEST = 6;
     * }
     */
    public static int CAIRO_OPERATOR_DEST() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_DEST_OVER = 7;
     * }
     */
    public static int CAIRO_OPERATOR_DEST_OVER() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_DEST_IN = 8;
     * }
     */
    public static int CAIRO_OPERATOR_DEST_IN() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_DEST_OUT = 9;
     * }
     */
    public static int CAIRO_OPERATOR_DEST_OUT() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_DEST_ATOP = 10;
     * }
     */
    public static int CAIRO_OPERATOR_DEST_ATOP() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_XOR = 11;
     * }
     */
    public static int CAIRO_OPERATOR_XOR() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_ADD = 12;
     * }
     */
    public static int CAIRO_OPERATOR_ADD() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_SATURATE = 13;
     * }
     */
    public static int CAIRO_OPERATOR_SATURATE() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_MULTIPLY = 14;
     * }
     */
    public static int CAIRO_OPERATOR_MULTIPLY() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_SCREEN = 15;
     * }
     */
    public static int CAIRO_OPERATOR_SCREEN() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_OVERLAY = 16;
     * }
     */
    public static int CAIRO_OPERATOR_OVERLAY() {
        return (int)16L;
    }
}


