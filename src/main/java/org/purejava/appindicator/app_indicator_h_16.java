// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.AddressLayout;
import java.lang.foreign.MemorySegment;
import java.lang.invoke.MethodHandle;
public class app_indicator_h_16 extends app_indicator_h_15 {

    public static MethodHandle gtk_editable_cut_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$2406.const$2,"gtk_editable_cut_clipboard");
    }
    /**
     * {@snippet :
     * void gtk_editable_cut_clipboard(struct _GtkEditable* editable);
     * }
     */
    public static void gtk_editable_cut_clipboard(MemorySegment editable) {
        var mh$ = gtk_editable_cut_clipboard$MH();
        try {
            mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_copy_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$2406.const$3,"gtk_editable_copy_clipboard");
    }
    /**
     * {@snippet :
     * void gtk_editable_copy_clipboard(struct _GtkEditable* editable);
     * }
     */
    public static void gtk_editable_copy_clipboard(MemorySegment editable) {
        var mh$ = gtk_editable_copy_clipboard$MH();
        try {
            mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_paste_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$2406.const$4,"gtk_editable_paste_clipboard");
    }
    /**
     * {@snippet :
     * void gtk_editable_paste_clipboard(struct _GtkEditable* editable);
     * }
     */
    public static void gtk_editable_paste_clipboard(MemorySegment editable) {
        var mh$ = gtk_editable_paste_clipboard$MH();
        try {
            mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_delete_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2406.const$5,"gtk_editable_delete_selection");
    }
    /**
     * {@snippet :
     * void gtk_editable_delete_selection(struct _GtkEditable* editable);
     * }
     */
    public static void gtk_editable_delete_selection(MemorySegment editable) {
        var mh$ = gtk_editable_delete_selection$MH();
        try {
            mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_set_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2407.const$0,"gtk_editable_set_position");
    }
    /**
     * {@snippet :
     * void gtk_editable_set_position(struct _GtkEditable* editable, int position);
     * }
     */
    public static void gtk_editable_set_position(MemorySegment editable, int position) {
        var mh$ = gtk_editable_set_position$MH();
        try {
            mh$.invokeExact(editable, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2407.const$1,"gtk_editable_get_position");
    }
    /**
     * {@snippet :
     * int gtk_editable_get_position(struct _GtkEditable* editable);
     * }
     */
    public static int gtk_editable_get_position(MemorySegment editable) {
        var mh$ = gtk_editable_get_position$MH();
        try {
            return (int)mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_set_editable$MH() {
        return RuntimeHelper.requireNonNull(constants$2407.const$2,"gtk_editable_set_editable");
    }
    /**
     * {@snippet :
     * void gtk_editable_set_editable(struct _GtkEditable* editable, int is_editable);
     * }
     */
    public static void gtk_editable_set_editable(MemorySegment editable, int is_editable) {
        var mh$ = gtk_editable_set_editable$MH();
        try {
            mh$.invokeExact(editable, is_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_get_editable$MH() {
        return RuntimeHelper.requireNonNull(constants$2407.const$3,"gtk_editable_get_editable");
    }
    /**
     * {@snippet :
     * int gtk_editable_get_editable(struct _GtkEditable* editable);
     * }
     */
    public static int gtk_editable_get_editable(MemorySegment editable) {
        var mh$ = gtk_editable_get_editable$MH();
        try {
            return (int)mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2415.const$2,"gtk_im_context_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_im_context_get_type();
     * }
     */
    public static long gtk_im_context_get_type() {
        var mh$ = gtk_im_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_set_client_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2415.const$3,"gtk_im_context_set_client_window");
    }
    /**
     * {@snippet :
     * void gtk_im_context_set_client_window(struct _GtkIMContext* context, struct _GdkWindow* window);
     * }
     */
    public static void gtk_im_context_set_client_window(MemorySegment context, MemorySegment window) {
        var mh$ = gtk_im_context_set_client_window$MH();
        try {
            mh$.invokeExact(context, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_get_preedit_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2415.const$4,"gtk_im_context_get_preedit_string");
    }
    /**
     * {@snippet :
     * void gtk_im_context_get_preedit_string(struct _GtkIMContext* context, char** str, struct _PangoAttrList** attrs, int* cursor_pos);
     * }
     */
    public static void gtk_im_context_get_preedit_string(MemorySegment context, MemorySegment str, MemorySegment attrs, MemorySegment cursor_pos) {
        var mh$ = gtk_im_context_get_preedit_string$MH();
        try {
            mh$.invokeExact(context, str, attrs, cursor_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_filter_keypress$MH() {
        return RuntimeHelper.requireNonNull(constants$2415.const$5,"gtk_im_context_filter_keypress");
    }
    /**
     * {@snippet :
     * int gtk_im_context_filter_keypress(struct _GtkIMContext* context, struct _GdkEventKey* event);
     * }
     */
    public static int gtk_im_context_filter_keypress(MemorySegment context, MemorySegment event) {
        var mh$ = gtk_im_context_filter_keypress$MH();
        try {
            return (int)mh$.invokeExact(context, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_focus_in$MH() {
        return RuntimeHelper.requireNonNull(constants$2416.const$0,"gtk_im_context_focus_in");
    }
    /**
     * {@snippet :
     * void gtk_im_context_focus_in(struct _GtkIMContext* context);
     * }
     */
    public static void gtk_im_context_focus_in(MemorySegment context) {
        var mh$ = gtk_im_context_focus_in$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_focus_out$MH() {
        return RuntimeHelper.requireNonNull(constants$2416.const$1,"gtk_im_context_focus_out");
    }
    /**
     * {@snippet :
     * void gtk_im_context_focus_out(struct _GtkIMContext* context);
     * }
     */
    public static void gtk_im_context_focus_out(MemorySegment context) {
        var mh$ = gtk_im_context_focus_out$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$2416.const$2,"gtk_im_context_reset");
    }
    /**
     * {@snippet :
     * void gtk_im_context_reset(struct _GtkIMContext* context);
     * }
     */
    public static void gtk_im_context_reset(MemorySegment context) {
        var mh$ = gtk_im_context_reset$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_set_cursor_location$MH() {
        return RuntimeHelper.requireNonNull(constants$2416.const$3,"gtk_im_context_set_cursor_location");
    }
    /**
     * {@snippet :
     * void gtk_im_context_set_cursor_location(struct _GtkIMContext* context, struct _cairo_rectangle_int* area);
     * }
     */
    public static void gtk_im_context_set_cursor_location(MemorySegment context, MemorySegment area) {
        var mh$ = gtk_im_context_set_cursor_location$MH();
        try {
            mh$.invokeExact(context, area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_set_use_preedit$MH() {
        return RuntimeHelper.requireNonNull(constants$2416.const$4,"gtk_im_context_set_use_preedit");
    }
    /**
     * {@snippet :
     * void gtk_im_context_set_use_preedit(struct _GtkIMContext* context, int use_preedit);
     * }
     */
    public static void gtk_im_context_set_use_preedit(MemorySegment context, int use_preedit) {
        var mh$ = gtk_im_context_set_use_preedit$MH();
        try {
            mh$.invokeExact(context, use_preedit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_set_surrounding$MH() {
        return RuntimeHelper.requireNonNull(constants$2416.const$5,"gtk_im_context_set_surrounding");
    }
    /**
     * {@snippet :
     * void gtk_im_context_set_surrounding(struct _GtkIMContext* context, char* text, int len, int cursor_index);
     * }
     */
    public static void gtk_im_context_set_surrounding(MemorySegment context, MemorySegment text, int len, int cursor_index) {
        var mh$ = gtk_im_context_set_surrounding$MH();
        try {
            mh$.invokeExact(context, text, len, cursor_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_get_surrounding$MH() {
        return RuntimeHelper.requireNonNull(constants$2417.const$0,"gtk_im_context_get_surrounding");
    }
    /**
     * {@snippet :
     * int gtk_im_context_get_surrounding(struct _GtkIMContext* context, char** text, int* cursor_index);
     * }
     */
    public static int gtk_im_context_get_surrounding(MemorySegment context, MemorySegment text, MemorySegment cursor_index) {
        var mh$ = gtk_im_context_get_surrounding$MH();
        try {
            return (int)mh$.invokeExact(context, text, cursor_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_delete_surrounding$MH() {
        return RuntimeHelper.requireNonNull(constants$2417.const$1,"gtk_im_context_delete_surrounding");
    }
    /**
     * {@snippet :
     * int gtk_im_context_delete_surrounding(struct _GtkIMContext* context, int offset, int n_chars);
     * }
     */
    public static int gtk_im_context_delete_surrounding(MemorySegment context, int offset, int n_chars) {
        var mh$ = gtk_im_context_delete_surrounding$MH();
        try {
            return (int)mh$.invokeExact(context, offset, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2422.const$5,"gtk_entry_buffer_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_entry_buffer_get_type();
     * }
     */
    public static long gtk_entry_buffer_get_type() {
        var mh$ = gtk_entry_buffer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2423.const$0,"gtk_entry_buffer_new");
    }
    /**
     * {@snippet :
     * struct _GtkEntryBuffer* gtk_entry_buffer_new(char* initial_chars, int n_initial_chars);
     * }
     */
    public static MemorySegment gtk_entry_buffer_new(MemorySegment initial_chars, int n_initial_chars) {
        var mh$ = gtk_entry_buffer_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(initial_chars, n_initial_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_get_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$2423.const$1,"gtk_entry_buffer_get_bytes");
    }
    /**
     * {@snippet :
     * unsigned long gtk_entry_buffer_get_bytes(struct _GtkEntryBuffer* buffer);
     * }
     */
    public static long gtk_entry_buffer_get_bytes(MemorySegment buffer) {
        var mh$ = gtk_entry_buffer_get_bytes$MH();
        try {
            return (long)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_get_length$MH() {
        return RuntimeHelper.requireNonNull(constants$2423.const$2,"gtk_entry_buffer_get_length");
    }
    /**
     * {@snippet :
     * unsigned int gtk_entry_buffer_get_length(struct _GtkEntryBuffer* buffer);
     * }
     */
    public static int gtk_entry_buffer_get_length(MemorySegment buffer) {
        var mh$ = gtk_entry_buffer_get_length$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2423.const$3,"gtk_entry_buffer_get_text");
    }
    /**
     * {@snippet :
     * char* gtk_entry_buffer_get_text(struct _GtkEntryBuffer* buffer);
     * }
     */
    public static MemorySegment gtk_entry_buffer_get_text(MemorySegment buffer) {
        var mh$ = gtk_entry_buffer_get_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2423.const$4,"gtk_entry_buffer_set_text");
    }
    /**
     * {@snippet :
     * void gtk_entry_buffer_set_text(struct _GtkEntryBuffer* buffer, char* chars, int n_chars);
     * }
     */
    public static void gtk_entry_buffer_set_text(MemorySegment buffer, MemorySegment chars, int n_chars) {
        var mh$ = gtk_entry_buffer_set_text$MH();
        try {
            mh$.invokeExact(buffer, chars, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_set_max_length$MH() {
        return RuntimeHelper.requireNonNull(constants$2423.const$5,"gtk_entry_buffer_set_max_length");
    }
    /**
     * {@snippet :
     * void gtk_entry_buffer_set_max_length(struct _GtkEntryBuffer* buffer, int max_length);
     * }
     */
    public static void gtk_entry_buffer_set_max_length(MemorySegment buffer, int max_length) {
        var mh$ = gtk_entry_buffer_set_max_length$MH();
        try {
            mh$.invokeExact(buffer, max_length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_get_max_length$MH() {
        return RuntimeHelper.requireNonNull(constants$2424.const$0,"gtk_entry_buffer_get_max_length");
    }
    /**
     * {@snippet :
     * int gtk_entry_buffer_get_max_length(struct _GtkEntryBuffer* buffer);
     * }
     */
    public static int gtk_entry_buffer_get_max_length(MemorySegment buffer) {
        var mh$ = gtk_entry_buffer_get_max_length$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_insert_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2424.const$1,"gtk_entry_buffer_insert_text");
    }
    /**
     * {@snippet :
     * unsigned int gtk_entry_buffer_insert_text(struct _GtkEntryBuffer* buffer, unsigned int position, char* chars, int n_chars);
     * }
     */
    public static int gtk_entry_buffer_insert_text(MemorySegment buffer, int position, MemorySegment chars, int n_chars) {
        var mh$ = gtk_entry_buffer_insert_text$MH();
        try {
            return (int)mh$.invokeExact(buffer, position, chars, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_delete_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2424.const$2,"gtk_entry_buffer_delete_text");
    }
    /**
     * {@snippet :
     * unsigned int gtk_entry_buffer_delete_text(struct _GtkEntryBuffer* buffer, unsigned int position, int n_chars);
     * }
     */
    public static int gtk_entry_buffer_delete_text(MemorySegment buffer, int position, int n_chars) {
        var mh$ = gtk_entry_buffer_delete_text$MH();
        try {
            return (int)mh$.invokeExact(buffer, position, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_emit_inserted_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2424.const$3,"gtk_entry_buffer_emit_inserted_text");
    }
    /**
     * {@snippet :
     * void gtk_entry_buffer_emit_inserted_text(struct _GtkEntryBuffer* buffer, unsigned int position, char* chars, unsigned int n_chars);
     * }
     */
    public static void gtk_entry_buffer_emit_inserted_text(MemorySegment buffer, int position, MemorySegment chars, int n_chars) {
        var mh$ = gtk_entry_buffer_emit_inserted_text$MH();
        try {
            mh$.invokeExact(buffer, position, chars, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_emit_deleted_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2424.const$4,"gtk_entry_buffer_emit_deleted_text");
    }
    /**
     * {@snippet :
     * void gtk_entry_buffer_emit_deleted_text(struct _GtkEntryBuffer* buffer, unsigned int position, unsigned int n_chars);
     * }
     */
    public static void gtk_entry_buffer_emit_deleted_text(MemorySegment buffer, int position, int n_chars) {
        var mh$ = gtk_entry_buffer_emit_deleted_text$MH();
        try {
            mh$.invokeExact(buffer, position, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2426.const$4,"gtk_list_store_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_list_store_get_type();
     * }
     */
    public static long gtk_list_store_get_type() {
        var mh$ = gtk_list_store_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2426.const$5,"gtk_list_store_new");
    }
    /**
     * {@snippet :
     * struct _GtkListStore* gtk_list_store_new(int n_columns,...);
     * }
     */
    public static MemorySegment gtk_list_store_new(int n_columns, Object... x1) {
        var mh$ = gtk_list_store_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(n_columns, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$2427.const$0,"gtk_list_store_newv");
    }
    /**
     * {@snippet :
     * struct _GtkListStore* gtk_list_store_newv(int n_columns, unsigned long* types);
     * }
     */
    public static MemorySegment gtk_list_store_newv(int n_columns, MemorySegment types) {
        var mh$ = gtk_list_store_newv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(n_columns, types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_set_column_types$MH() {
        return RuntimeHelper.requireNonNull(constants$2427.const$1,"gtk_list_store_set_column_types");
    }
    /**
     * {@snippet :
     * void gtk_list_store_set_column_types(struct _GtkListStore* list_store, int n_columns, unsigned long* types);
     * }
     */
    public static void gtk_list_store_set_column_types(MemorySegment list_store, int n_columns, MemorySegment types) {
        var mh$ = gtk_list_store_set_column_types$MH();
        try {
            mh$.invokeExact(list_store, n_columns, types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2427.const$2,"gtk_list_store_set_value");
    }
    /**
     * {@snippet :
     * void gtk_list_store_set_value(struct _GtkListStore* list_store, struct _GtkTreeIter* iter, int column, struct _GValue* value);
     * }
     */
    public static void gtk_list_store_set_value(MemorySegment list_store, MemorySegment iter, int column, MemorySegment value) {
        var mh$ = gtk_list_store_set_value$MH();
        try {
            mh$.invokeExact(list_store, iter, column, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2427.const$3,"gtk_list_store_set");
    }
    /**
     * {@snippet :
     * void gtk_list_store_set(struct _GtkListStore* list_store, struct _GtkTreeIter* iter,...);
     * }
     */
    public static void gtk_list_store_set(MemorySegment list_store, MemorySegment iter, Object... x2) {
        var mh$ = gtk_list_store_set$MH();
        try {
            mh$.invokeExact(list_store, iter, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_set_valuesv$MH() {
        return RuntimeHelper.requireNonNull(constants$2427.const$4,"gtk_list_store_set_valuesv");
    }
    /**
     * {@snippet :
     * void gtk_list_store_set_valuesv(struct _GtkListStore* list_store, struct _GtkTreeIter* iter, int* columns, struct _GValue* values, int n_values);
     * }
     */
    public static void gtk_list_store_set_valuesv(MemorySegment list_store, MemorySegment iter, MemorySegment columns, MemorySegment values, int n_values) {
        var mh$ = gtk_list_store_set_valuesv$MH();
        try {
            mh$.invokeExact(list_store, iter, columns, values, n_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_set_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$2427.const$5,"gtk_list_store_set_valist");
    }
    /**
     * {@snippet :
     * void gtk_list_store_set_valist(struct _GtkListStore* list_store, struct _GtkTreeIter* iter, struct __va_list var_args);
     * }
     */
    public static void gtk_list_store_set_valist(MemorySegment list_store, MemorySegment iter, MemorySegment var_args) {
        var mh$ = gtk_list_store_set_valist$MH();
        try {
            mh$.invokeExact(list_store, iter, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2428.const$0,"gtk_list_store_remove");
    }
    /**
     * {@snippet :
     * int gtk_list_store_remove(struct _GtkListStore* list_store, struct _GtkTreeIter* iter);
     * }
     */
    public static int gtk_list_store_remove(MemorySegment list_store, MemorySegment iter) {
        var mh$ = gtk_list_store_remove$MH();
        try {
            return (int)mh$.invokeExact(list_store, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$2428.const$1,"gtk_list_store_insert");
    }
    /**
     * {@snippet :
     * void gtk_list_store_insert(struct _GtkListStore* list_store, struct _GtkTreeIter* iter, int position);
     * }
     */
    public static void gtk_list_store_insert(MemorySegment list_store, MemorySegment iter, int position) {
        var mh$ = gtk_list_store_insert$MH();
        try {
            mh$.invokeExact(list_store, iter, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_insert_before$MH() {
        return RuntimeHelper.requireNonNull(constants$2428.const$2,"gtk_list_store_insert_before");
    }
    /**
     * {@snippet :
     * void gtk_list_store_insert_before(struct _GtkListStore* list_store, struct _GtkTreeIter* iter, struct _GtkTreeIter* sibling);
     * }
     */
    public static void gtk_list_store_insert_before(MemorySegment list_store, MemorySegment iter, MemorySegment sibling) {
        var mh$ = gtk_list_store_insert_before$MH();
        try {
            mh$.invokeExact(list_store, iter, sibling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_insert_after$MH() {
        return RuntimeHelper.requireNonNull(constants$2428.const$3,"gtk_list_store_insert_after");
    }
    /**
     * {@snippet :
     * void gtk_list_store_insert_after(struct _GtkListStore* list_store, struct _GtkTreeIter* iter, struct _GtkTreeIter* sibling);
     * }
     */
    public static void gtk_list_store_insert_after(MemorySegment list_store, MemorySegment iter, MemorySegment sibling) {
        var mh$ = gtk_list_store_insert_after$MH();
        try {
            mh$.invokeExact(list_store, iter, sibling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_insert_with_values$MH() {
        return RuntimeHelper.requireNonNull(constants$2428.const$4,"gtk_list_store_insert_with_values");
    }
    /**
     * {@snippet :
     * void gtk_list_store_insert_with_values(struct _GtkListStore* list_store, struct _GtkTreeIter* iter, int position,...);
     * }
     */
    public static void gtk_list_store_insert_with_values(MemorySegment list_store, MemorySegment iter, int position, Object... x3) {
        var mh$ = gtk_list_store_insert_with_values$MH();
        try {
            mh$.invokeExact(list_store, iter, position, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_insert_with_valuesv$MH() {
        return RuntimeHelper.requireNonNull(constants$2428.const$5,"gtk_list_store_insert_with_valuesv");
    }
    /**
     * {@snippet :
     * void gtk_list_store_insert_with_valuesv(struct _GtkListStore* list_store, struct _GtkTreeIter* iter, int position, int* columns, struct _GValue* values, int n_values);
     * }
     */
    public static void gtk_list_store_insert_with_valuesv(MemorySegment list_store, MemorySegment iter, int position, MemorySegment columns, MemorySegment values, int n_values) {
        var mh$ = gtk_list_store_insert_with_valuesv$MH();
        try {
            mh$.invokeExact(list_store, iter, position, columns, values, n_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$2429.const$0,"gtk_list_store_prepend");
    }
    /**
     * {@snippet :
     * void gtk_list_store_prepend(struct _GtkListStore* list_store, struct _GtkTreeIter* iter);
     * }
     */
    public static void gtk_list_store_prepend(MemorySegment list_store, MemorySegment iter) {
        var mh$ = gtk_list_store_prepend$MH();
        try {
            mh$.invokeExact(list_store, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_append$MH() {
        return RuntimeHelper.requireNonNull(constants$2429.const$1,"gtk_list_store_append");
    }
    /**
     * {@snippet :
     * void gtk_list_store_append(struct _GtkListStore* list_store, struct _GtkTreeIter* iter);
     * }
     */
    public static void gtk_list_store_append(MemorySegment list_store, MemorySegment iter) {
        var mh$ = gtk_list_store_append$MH();
        try {
            mh$.invokeExact(list_store, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$2429.const$2,"gtk_list_store_clear");
    }
    /**
     * {@snippet :
     * void gtk_list_store_clear(struct _GtkListStore* list_store);
     * }
     */
    public static void gtk_list_store_clear(MemorySegment list_store) {
        var mh$ = gtk_list_store_clear$MH();
        try {
            mh$.invokeExact(list_store);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_iter_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$2429.const$3,"gtk_list_store_iter_is_valid");
    }
    /**
     * {@snippet :
     * int gtk_list_store_iter_is_valid(struct _GtkListStore* list_store, struct _GtkTreeIter* iter);
     * }
     */
    public static int gtk_list_store_iter_is_valid(MemorySegment list_store, MemorySegment iter) {
        var mh$ = gtk_list_store_iter_is_valid$MH();
        try {
            return (int)mh$.invokeExact(list_store, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_reorder$MH() {
        return RuntimeHelper.requireNonNull(constants$2429.const$4,"gtk_list_store_reorder");
    }
    /**
     * {@snippet :
     * void gtk_list_store_reorder(struct _GtkListStore* store, int* new_order);
     * }
     */
    public static void gtk_list_store_reorder(MemorySegment store, MemorySegment new_order) {
        var mh$ = gtk_list_store_reorder$MH();
        try {
            mh$.invokeExact(store, new_order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_swap$MH() {
        return RuntimeHelper.requireNonNull(constants$2429.const$5,"gtk_list_store_swap");
    }
    /**
     * {@snippet :
     * void gtk_list_store_swap(struct _GtkListStore* store, struct _GtkTreeIter* a, struct _GtkTreeIter* b);
     * }
     */
    public static void gtk_list_store_swap(MemorySegment store, MemorySegment a, MemorySegment b) {
        var mh$ = gtk_list_store_swap$MH();
        try {
            mh$.invokeExact(store, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_move_after$MH() {
        return RuntimeHelper.requireNonNull(constants$2430.const$0,"gtk_list_store_move_after");
    }
    /**
     * {@snippet :
     * void gtk_list_store_move_after(struct _GtkListStore* store, struct _GtkTreeIter* iter, struct _GtkTreeIter* position);
     * }
     */
    public static void gtk_list_store_move_after(MemorySegment store, MemorySegment iter, MemorySegment position) {
        var mh$ = gtk_list_store_move_after$MH();
        try {
            mh$.invokeExact(store, iter, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_store_move_before$MH() {
        return RuntimeHelper.requireNonNull(constants$2430.const$1,"gtk_list_store_move_before");
    }
    /**
     * {@snippet :
     * void gtk_list_store_move_before(struct _GtkListStore* store, struct _GtkTreeIter* iter, struct _GtkTreeIter* position);
     * }
     */
    public static void gtk_list_store_move_before(MemorySegment store, MemorySegment iter, MemorySegment position) {
        var mh$ = gtk_list_store_move_before$MH();
        try {
            mh$.invokeExact(store, iter, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2433.const$2,"gtk_tree_model_filter_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tree_model_filter_get_type();
     * }
     */
    public static long gtk_tree_model_filter_get_type() {
        var mh$ = gtk_tree_model_filter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2433.const$3,"gtk_tree_model_filter_new");
    }
    /**
     * {@snippet :
     * struct _GtkTreeModel* gtk_tree_model_filter_new(struct _GtkTreeModel* child_model, struct _GtkTreePath* root);
     * }
     */
    public static MemorySegment gtk_tree_model_filter_new(MemorySegment child_model, MemorySegment root) {
        var mh$ = gtk_tree_model_filter_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(child_model, root);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_set_visible_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2434.const$0,"gtk_tree_model_filter_set_visible_func");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_filter_set_visible_func(struct _GtkTreeModelFilter* filter, int (*func)(struct _GtkTreeModel*,struct _GtkTreeIter*,void*), void* data, void (*destroy)(void*));
     * }
     */
    public static void gtk_tree_model_filter_set_visible_func(MemorySegment filter, MemorySegment func, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_tree_model_filter_set_visible_func$MH();
        try {
            mh$.invokeExact(filter, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_set_modify_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2434.const$3,"gtk_tree_model_filter_set_modify_func");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_filter_set_modify_func(struct _GtkTreeModelFilter* filter, int n_columns, unsigned long* types, void (*func)(struct _GtkTreeModel*,struct _GtkTreeIter*,struct _GValue*,int,void*), void* data, void (*destroy)(void*));
     * }
     */
    public static void gtk_tree_model_filter_set_modify_func(MemorySegment filter, int n_columns, MemorySegment types, MemorySegment func, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_tree_model_filter_set_modify_func$MH();
        try {
            mh$.invokeExact(filter, n_columns, types, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_set_visible_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2434.const$4,"gtk_tree_model_filter_set_visible_column");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_filter_set_visible_column(struct _GtkTreeModelFilter* filter, int column);
     * }
     */
    public static void gtk_tree_model_filter_set_visible_column(MemorySegment filter, int column) {
        var mh$ = gtk_tree_model_filter_set_visible_column$MH();
        try {
            mh$.invokeExact(filter, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2434.const$5,"gtk_tree_model_filter_get_model");
    }
    /**
     * {@snippet :
     * struct _GtkTreeModel* gtk_tree_model_filter_get_model(struct _GtkTreeModelFilter* filter);
     * }
     */
    public static MemorySegment gtk_tree_model_filter_get_model(MemorySegment filter) {
        var mh$ = gtk_tree_model_filter_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_convert_child_iter_to_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$2435.const$0,"gtk_tree_model_filter_convert_child_iter_to_iter");
    }
    /**
     * {@snippet :
     * int gtk_tree_model_filter_convert_child_iter_to_iter(struct _GtkTreeModelFilter* filter, struct _GtkTreeIter* filter_iter, struct _GtkTreeIter* child_iter);
     * }
     */
    public static int gtk_tree_model_filter_convert_child_iter_to_iter(MemorySegment filter, MemorySegment filter_iter, MemorySegment child_iter) {
        var mh$ = gtk_tree_model_filter_convert_child_iter_to_iter$MH();
        try {
            return (int)mh$.invokeExact(filter, filter_iter, child_iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_convert_iter_to_child_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$2435.const$1,"gtk_tree_model_filter_convert_iter_to_child_iter");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_filter_convert_iter_to_child_iter(struct _GtkTreeModelFilter* filter, struct _GtkTreeIter* child_iter, struct _GtkTreeIter* filter_iter);
     * }
     */
    public static void gtk_tree_model_filter_convert_iter_to_child_iter(MemorySegment filter, MemorySegment child_iter, MemorySegment filter_iter) {
        var mh$ = gtk_tree_model_filter_convert_iter_to_child_iter$MH();
        try {
            mh$.invokeExact(filter, child_iter, filter_iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_convert_child_path_to_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2435.const$2,"gtk_tree_model_filter_convert_child_path_to_path");
    }
    /**
     * {@snippet :
     * struct _GtkTreePath* gtk_tree_model_filter_convert_child_path_to_path(struct _GtkTreeModelFilter* filter, struct _GtkTreePath* child_path);
     * }
     */
    public static MemorySegment gtk_tree_model_filter_convert_child_path_to_path(MemorySegment filter, MemorySegment child_path) {
        var mh$ = gtk_tree_model_filter_convert_child_path_to_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filter, child_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_convert_path_to_child_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2435.const$3,"gtk_tree_model_filter_convert_path_to_child_path");
    }
    /**
     * {@snippet :
     * struct _GtkTreePath* gtk_tree_model_filter_convert_path_to_child_path(struct _GtkTreeModelFilter* filter, struct _GtkTreePath* filter_path);
     * }
     */
    public static MemorySegment gtk_tree_model_filter_convert_path_to_child_path(MemorySegment filter, MemorySegment filter_path) {
        var mh$ = gtk_tree_model_filter_convert_path_to_child_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filter, filter_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_refilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2435.const$4,"gtk_tree_model_filter_refilter");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_filter_refilter(struct _GtkTreeModelFilter* filter);
     * }
     */
    public static void gtk_tree_model_filter_refilter(MemorySegment filter) {
        var mh$ = gtk_tree_model_filter_refilter$MH();
        try {
            mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_filter_clear_cache$MH() {
        return RuntimeHelper.requireNonNull(constants$2435.const$5,"gtk_tree_model_filter_clear_cache");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_filter_clear_cache(struct _GtkTreeModelFilter* filter);
     * }
     */
    public static void gtk_tree_model_filter_clear_cache(MemorySegment filter) {
        var mh$ = gtk_tree_model_filter_clear_cache$MH();
        try {
            mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2439.const$2,"gtk_entry_completion_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_entry_completion_get_type();
     * }
     */
    public static long gtk_entry_completion_get_type() {
        var mh$ = gtk_entry_completion_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2439.const$3,"gtk_entry_completion_new");
    }
    /**
     * {@snippet :
     * struct _GtkEntryCompletion* gtk_entry_completion_new();
     * }
     */
    public static MemorySegment gtk_entry_completion_new() {
        var mh$ = gtk_entry_completion_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_new_with_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2439.const$4,"gtk_entry_completion_new_with_area");
    }
    /**
     * {@snippet :
     * struct _GtkEntryCompletion* gtk_entry_completion_new_with_area(struct _GtkCellArea* area);
     * }
     */
    public static MemorySegment gtk_entry_completion_new_with_area(MemorySegment area) {
        var mh$ = gtk_entry_completion_new_with_area$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$2439.const$5,"gtk_entry_completion_get_entry");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_entry_completion_get_entry(struct _GtkEntryCompletion* completion);
     * }
     */
    public static MemorySegment gtk_entry_completion_get_entry(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_entry$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2440.const$0,"gtk_entry_completion_set_model");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_set_model(struct _GtkEntryCompletion* completion, struct _GtkTreeModel* model);
     * }
     */
    public static void gtk_entry_completion_set_model(MemorySegment completion, MemorySegment model) {
        var mh$ = gtk_entry_completion_set_model$MH();
        try {
            mh$.invokeExact(completion, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2440.const$1,"gtk_entry_completion_get_model");
    }
    /**
     * {@snippet :
     * struct _GtkTreeModel* gtk_entry_completion_get_model(struct _GtkEntryCompletion* completion);
     * }
     */
    public static MemorySegment gtk_entry_completion_get_model(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_set_match_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2440.const$4,"gtk_entry_completion_set_match_func");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_set_match_func(struct _GtkEntryCompletion* completion, int (*func)(struct _GtkEntryCompletion*,char*,struct _GtkTreeIter*,void*), void* func_data, void (*func_notify)(void*));
     * }
     */
    public static void gtk_entry_completion_set_match_func(MemorySegment completion, MemorySegment func, MemorySegment func_data, MemorySegment func_notify) {
        var mh$ = gtk_entry_completion_set_match_func$MH();
        try {
            mh$.invokeExact(completion, func, func_data, func_notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_set_minimum_key_length$MH() {
        return RuntimeHelper.requireNonNull(constants$2440.const$5,"gtk_entry_completion_set_minimum_key_length");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_set_minimum_key_length(struct _GtkEntryCompletion* completion, int length);
     * }
     */
    public static void gtk_entry_completion_set_minimum_key_length(MemorySegment completion, int length) {
        var mh$ = gtk_entry_completion_set_minimum_key_length$MH();
        try {
            mh$.invokeExact(completion, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_minimum_key_length$MH() {
        return RuntimeHelper.requireNonNull(constants$2441.const$0,"gtk_entry_completion_get_minimum_key_length");
    }
    /**
     * {@snippet :
     * int gtk_entry_completion_get_minimum_key_length(struct _GtkEntryCompletion* completion);
     * }
     */
    public static int gtk_entry_completion_get_minimum_key_length(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_minimum_key_length$MH();
        try {
            return (int)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_compute_prefix$MH() {
        return RuntimeHelper.requireNonNull(constants$2441.const$1,"gtk_entry_completion_compute_prefix");
    }
    /**
     * {@snippet :
     * char* gtk_entry_completion_compute_prefix(struct _GtkEntryCompletion* completion, char* key);
     * }
     */
    public static MemorySegment gtk_entry_completion_compute_prefix(MemorySegment completion, MemorySegment key) {
        var mh$ = gtk_entry_completion_compute_prefix$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(completion, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_complete$MH() {
        return RuntimeHelper.requireNonNull(constants$2441.const$2,"gtk_entry_completion_complete");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_complete(struct _GtkEntryCompletion* completion);
     * }
     */
    public static void gtk_entry_completion_complete(MemorySegment completion) {
        var mh$ = gtk_entry_completion_complete$MH();
        try {
            mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_insert_prefix$MH() {
        return RuntimeHelper.requireNonNull(constants$2441.const$3,"gtk_entry_completion_insert_prefix");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_insert_prefix(struct _GtkEntryCompletion* completion);
     * }
     */
    public static void gtk_entry_completion_insert_prefix(MemorySegment completion) {
        var mh$ = gtk_entry_completion_insert_prefix$MH();
        try {
            mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_insert_action_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2441.const$4,"gtk_entry_completion_insert_action_text");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_insert_action_text(struct _GtkEntryCompletion* completion, int index_, char* text);
     * }
     */
    public static void gtk_entry_completion_insert_action_text(MemorySegment completion, int index_, MemorySegment text) {
        var mh$ = gtk_entry_completion_insert_action_text$MH();
        try {
            mh$.invokeExact(completion, index_, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_insert_action_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2441.const$5,"gtk_entry_completion_insert_action_markup");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_insert_action_markup(struct _GtkEntryCompletion* completion, int index_, char* markup);
     * }
     */
    public static void gtk_entry_completion_insert_action_markup(MemorySegment completion, int index_, MemorySegment markup) {
        var mh$ = gtk_entry_completion_insert_action_markup$MH();
        try {
            mh$.invokeExact(completion, index_, markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_delete_action$MH() {
        return RuntimeHelper.requireNonNull(constants$2442.const$0,"gtk_entry_completion_delete_action");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_delete_action(struct _GtkEntryCompletion* completion, int index_);
     * }
     */
    public static void gtk_entry_completion_delete_action(MemorySegment completion, int index_) {
        var mh$ = gtk_entry_completion_delete_action$MH();
        try {
            mh$.invokeExact(completion, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_set_inline_completion$MH() {
        return RuntimeHelper.requireNonNull(constants$2442.const$1,"gtk_entry_completion_set_inline_completion");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_set_inline_completion(struct _GtkEntryCompletion* completion, int inline_completion);
     * }
     */
    public static void gtk_entry_completion_set_inline_completion(MemorySegment completion, int inline_completion) {
        var mh$ = gtk_entry_completion_set_inline_completion$MH();
        try {
            mh$.invokeExact(completion, inline_completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_inline_completion$MH() {
        return RuntimeHelper.requireNonNull(constants$2442.const$2,"gtk_entry_completion_get_inline_completion");
    }
    /**
     * {@snippet :
     * int gtk_entry_completion_get_inline_completion(struct _GtkEntryCompletion* completion);
     * }
     */
    public static int gtk_entry_completion_get_inline_completion(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_inline_completion$MH();
        try {
            return (int)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_set_inline_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2442.const$3,"gtk_entry_completion_set_inline_selection");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_set_inline_selection(struct _GtkEntryCompletion* completion, int inline_selection);
     * }
     */
    public static void gtk_entry_completion_set_inline_selection(MemorySegment completion, int inline_selection) {
        var mh$ = gtk_entry_completion_set_inline_selection$MH();
        try {
            mh$.invokeExact(completion, inline_selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_inline_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2442.const$4,"gtk_entry_completion_get_inline_selection");
    }
    /**
     * {@snippet :
     * int gtk_entry_completion_get_inline_selection(struct _GtkEntryCompletion* completion);
     * }
     */
    public static int gtk_entry_completion_get_inline_selection(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_inline_selection$MH();
        try {
            return (int)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_set_popup_completion$MH() {
        return RuntimeHelper.requireNonNull(constants$2442.const$5,"gtk_entry_completion_set_popup_completion");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_set_popup_completion(struct _GtkEntryCompletion* completion, int popup_completion);
     * }
     */
    public static void gtk_entry_completion_set_popup_completion(MemorySegment completion, int popup_completion) {
        var mh$ = gtk_entry_completion_set_popup_completion$MH();
        try {
            mh$.invokeExact(completion, popup_completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_popup_completion$MH() {
        return RuntimeHelper.requireNonNull(constants$2443.const$0,"gtk_entry_completion_get_popup_completion");
    }
    /**
     * {@snippet :
     * int gtk_entry_completion_get_popup_completion(struct _GtkEntryCompletion* completion);
     * }
     */
    public static int gtk_entry_completion_get_popup_completion(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_popup_completion$MH();
        try {
            return (int)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_set_popup_set_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2443.const$1,"gtk_entry_completion_set_popup_set_width");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_set_popup_set_width(struct _GtkEntryCompletion* completion, int popup_set_width);
     * }
     */
    public static void gtk_entry_completion_set_popup_set_width(MemorySegment completion, int popup_set_width) {
        var mh$ = gtk_entry_completion_set_popup_set_width$MH();
        try {
            mh$.invokeExact(completion, popup_set_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_popup_set_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2443.const$2,"gtk_entry_completion_get_popup_set_width");
    }
    /**
     * {@snippet :
     * int gtk_entry_completion_get_popup_set_width(struct _GtkEntryCompletion* completion);
     * }
     */
    public static int gtk_entry_completion_get_popup_set_width(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_popup_set_width$MH();
        try {
            return (int)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_set_popup_single_match$MH() {
        return RuntimeHelper.requireNonNull(constants$2443.const$3,"gtk_entry_completion_set_popup_single_match");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_set_popup_single_match(struct _GtkEntryCompletion* completion, int popup_single_match);
     * }
     */
    public static void gtk_entry_completion_set_popup_single_match(MemorySegment completion, int popup_single_match) {
        var mh$ = gtk_entry_completion_set_popup_single_match$MH();
        try {
            mh$.invokeExact(completion, popup_single_match);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_popup_single_match$MH() {
        return RuntimeHelper.requireNonNull(constants$2443.const$4,"gtk_entry_completion_get_popup_single_match");
    }
    /**
     * {@snippet :
     * int gtk_entry_completion_get_popup_single_match(struct _GtkEntryCompletion* completion);
     * }
     */
    public static int gtk_entry_completion_get_popup_single_match(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_popup_single_match$MH();
        try {
            return (int)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_completion_prefix$MH() {
        return RuntimeHelper.requireNonNull(constants$2443.const$5,"gtk_entry_completion_get_completion_prefix");
    }
    /**
     * {@snippet :
     * char* gtk_entry_completion_get_completion_prefix(struct _GtkEntryCompletion* completion);
     * }
     */
    public static MemorySegment gtk_entry_completion_get_completion_prefix(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_completion_prefix$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_set_text_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2444.const$0,"gtk_entry_completion_set_text_column");
    }
    /**
     * {@snippet :
     * void gtk_entry_completion_set_text_column(struct _GtkEntryCompletion* completion, int column);
     * }
     */
    public static void gtk_entry_completion_set_text_column(MemorySegment completion, int column) {
        var mh$ = gtk_entry_completion_set_text_column$MH();
        try {
            mh$.invokeExact(completion, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_completion_get_text_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2444.const$1,"gtk_entry_completion_get_text_column");
    }
    /**
     * {@snippet :
     * int gtk_entry_completion_get_text_column(struct _GtkEntryCompletion* completion);
     * }
     */
    public static int gtk_entry_completion_get_text_column(MemorySegment completion) {
        var mh$ = gtk_entry_completion_get_text_column$MH();
        try {
            return (int)mh$.invokeExact(completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkImageType.GTK_IMAGE_EMPTY = 0;
     * }
     */
    public static int GTK_IMAGE_EMPTY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkImageType.GTK_IMAGE_PIXBUF = 1;
     * }
     */
    public static int GTK_IMAGE_PIXBUF() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkImageType.GTK_IMAGE_STOCK = 2;
     * }
     */
    public static int GTK_IMAGE_STOCK() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkImageType.GTK_IMAGE_ICON_SET = 3;
     * }
     */
    public static int GTK_IMAGE_ICON_SET() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkImageType.GTK_IMAGE_ANIMATION = 4;
     * }
     */
    public static int GTK_IMAGE_ANIMATION() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkImageType.GTK_IMAGE_ICON_NAME = 5;
     * }
     */
    public static int GTK_IMAGE_ICON_NAME() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkImageType.GTK_IMAGE_GICON = 6;
     * }
     */
    public static int GTK_IMAGE_GICON() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GtkImageType.GTK_IMAGE_SURFACE = 7;
     * }
     */
    public static int GTK_IMAGE_SURFACE() {
        return (int)7L;
    }
    public static MethodHandle gtk_image_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2446.const$1,"gtk_image_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_image_get_type();
     * }
     */
    public static long gtk_image_get_type() {
        var mh$ = gtk_image_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2446.const$2,"gtk_image_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_image_new();
     * }
     */
    public static MemorySegment gtk_image_new() {
        var mh$ = gtk_image_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2446.const$3,"gtk_image_new_from_file");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_image_new_from_file(char* filename);
     * }
     */
    public static MemorySegment gtk_image_new_from_file(MemorySegment filename) {
        var mh$ = gtk_image_new_from_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_new_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$2446.const$4,"gtk_image_new_from_resource");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_image_new_from_resource(char* resource_path);
     * }
     */
    public static MemorySegment gtk_image_new_from_resource(MemorySegment resource_path) {
        var mh$ = gtk_image_new_from_resource$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_new_from_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2446.const$5,"gtk_image_new_from_pixbuf");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_image_new_from_pixbuf(struct _GdkPixbuf* pixbuf);
     * }
     */
    public static MemorySegment gtk_image_new_from_pixbuf(MemorySegment pixbuf) {
        var mh$ = gtk_image_new_from_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_new_from_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$2447.const$0,"gtk_image_new_from_stock");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_image_new_from_stock(char* stock_id, enum GtkIconSize size);
     * }
     */
    public static MemorySegment gtk_image_new_from_stock(MemorySegment stock_id, int size) {
        var mh$ = gtk_image_new_from_stock$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stock_id, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_new_from_icon_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2447.const$1,"gtk_image_new_from_icon_set");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_image_new_from_icon_set(struct _GtkIconSet* icon_set, enum GtkIconSize size);
     * }
     */
    public static MemorySegment gtk_image_new_from_icon_set(MemorySegment icon_set, int size) {
        var mh$ = gtk_image_new_from_icon_set$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_set, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_new_from_animation$MH() {
        return RuntimeHelper.requireNonNull(constants$2447.const$2,"gtk_image_new_from_animation");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_image_new_from_animation(struct _GdkPixbufAnimation* animation);
     * }
     */
    public static MemorySegment gtk_image_new_from_animation(MemorySegment animation) {
        var mh$ = gtk_image_new_from_animation$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(animation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_new_from_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2447.const$3,"gtk_image_new_from_icon_name");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_image_new_from_icon_name(char* icon_name, enum GtkIconSize size);
     * }
     */
    public static MemorySegment gtk_image_new_from_icon_name(MemorySegment icon_name, int size) {
        var mh$ = gtk_image_new_from_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_name, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_new_from_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$2447.const$4,"gtk_image_new_from_gicon");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_image_new_from_gicon(struct _GIcon* icon, enum GtkIconSize size);
     * }
     */
    public static MemorySegment gtk_image_new_from_gicon(MemorySegment icon, int size) {
        var mh$ = gtk_image_new_from_gicon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_new_from_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$2447.const$5,"gtk_image_new_from_surface");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_image_new_from_surface(struct _cairo_surface* surface);
     * }
     */
    public static MemorySegment gtk_image_new_from_surface(MemorySegment surface) {
        var mh$ = gtk_image_new_from_surface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$2448.const$0,"gtk_image_clear");
    }
    /**
     * {@snippet :
     * void gtk_image_clear(struct _GtkImage* image);
     * }
     */
    public static void gtk_image_clear(MemorySegment image) {
        var mh$ = gtk_image_clear$MH();
        try {
            mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_set_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2448.const$1,"gtk_image_set_from_file");
    }
    /**
     * {@snippet :
     * void gtk_image_set_from_file(struct _GtkImage* image, char* filename);
     * }
     */
    public static void gtk_image_set_from_file(MemorySegment image, MemorySegment filename) {
        var mh$ = gtk_image_set_from_file$MH();
        try {
            mh$.invokeExact(image, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_set_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$2448.const$2,"gtk_image_set_from_resource");
    }
    /**
     * {@snippet :
     * void gtk_image_set_from_resource(struct _GtkImage* image, char* resource_path);
     * }
     */
    public static void gtk_image_set_from_resource(MemorySegment image, MemorySegment resource_path) {
        var mh$ = gtk_image_set_from_resource$MH();
        try {
            mh$.invokeExact(image, resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_set_from_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2448.const$3,"gtk_image_set_from_pixbuf");
    }
    /**
     * {@snippet :
     * void gtk_image_set_from_pixbuf(struct _GtkImage* image, struct _GdkPixbuf* pixbuf);
     * }
     */
    public static void gtk_image_set_from_pixbuf(MemorySegment image, MemorySegment pixbuf) {
        var mh$ = gtk_image_set_from_pixbuf$MH();
        try {
            mh$.invokeExact(image, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_set_from_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$2448.const$4,"gtk_image_set_from_stock");
    }
    /**
     * {@snippet :
     * void gtk_image_set_from_stock(struct _GtkImage* image, char* stock_id, enum GtkIconSize size);
     * }
     */
    public static void gtk_image_set_from_stock(MemorySegment image, MemorySegment stock_id, int size) {
        var mh$ = gtk_image_set_from_stock$MH();
        try {
            mh$.invokeExact(image, stock_id, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_set_from_icon_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2448.const$5,"gtk_image_set_from_icon_set");
    }
    /**
     * {@snippet :
     * void gtk_image_set_from_icon_set(struct _GtkImage* image, struct _GtkIconSet* icon_set, enum GtkIconSize size);
     * }
     */
    public static void gtk_image_set_from_icon_set(MemorySegment image, MemorySegment icon_set, int size) {
        var mh$ = gtk_image_set_from_icon_set$MH();
        try {
            mh$.invokeExact(image, icon_set, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_set_from_animation$MH() {
        return RuntimeHelper.requireNonNull(constants$2449.const$0,"gtk_image_set_from_animation");
    }
    /**
     * {@snippet :
     * void gtk_image_set_from_animation(struct _GtkImage* image, struct _GdkPixbufAnimation* animation);
     * }
     */
    public static void gtk_image_set_from_animation(MemorySegment image, MemorySegment animation) {
        var mh$ = gtk_image_set_from_animation$MH();
        try {
            mh$.invokeExact(image, animation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_set_from_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2449.const$1,"gtk_image_set_from_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_image_set_from_icon_name(struct _GtkImage* image, char* icon_name, enum GtkIconSize size);
     * }
     */
    public static void gtk_image_set_from_icon_name(MemorySegment image, MemorySegment icon_name, int size) {
        var mh$ = gtk_image_set_from_icon_name$MH();
        try {
            mh$.invokeExact(image, icon_name, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_set_from_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$2449.const$2,"gtk_image_set_from_gicon");
    }
    /**
     * {@snippet :
     * void gtk_image_set_from_gicon(struct _GtkImage* image, struct _GIcon* icon, enum GtkIconSize size);
     * }
     */
    public static void gtk_image_set_from_gicon(MemorySegment image, MemorySegment icon, int size) {
        var mh$ = gtk_image_set_from_gicon$MH();
        try {
            mh$.invokeExact(image, icon, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_set_from_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$2449.const$3,"gtk_image_set_from_surface");
    }
    /**
     * {@snippet :
     * void gtk_image_set_from_surface(struct _GtkImage* image, struct _cairo_surface* surface);
     * }
     */
    public static void gtk_image_set_from_surface(MemorySegment image, MemorySegment surface) {
        var mh$ = gtk_image_set_from_surface$MH();
        try {
            mh$.invokeExact(image, surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_set_pixel_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2449.const$4,"gtk_image_set_pixel_size");
    }
    /**
     * {@snippet :
     * void gtk_image_set_pixel_size(struct _GtkImage* image, int pixel_size);
     * }
     */
    public static void gtk_image_set_pixel_size(MemorySegment image, int pixel_size) {
        var mh$ = gtk_image_set_pixel_size$MH();
        try {
            mh$.invokeExact(image, pixel_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_get_storage_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2449.const$5,"gtk_image_get_storage_type");
    }
    /**
     * {@snippet :
     * enum GtkImageType gtk_image_get_storage_type(struct _GtkImage* image);
     * }
     */
    public static int gtk_image_get_storage_type(MemorySegment image) {
        var mh$ = gtk_image_get_storage_type$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_get_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2450.const$0,"gtk_image_get_pixbuf");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_image_get_pixbuf(struct _GtkImage* image);
     * }
     */
    public static MemorySegment gtk_image_get_pixbuf(MemorySegment image) {
        var mh$ = gtk_image_get_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_get_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$2450.const$1,"gtk_image_get_stock");
    }
    /**
     * {@snippet :
     * void gtk_image_get_stock(struct _GtkImage* image, char** stock_id, enum GtkIconSize* size);
     * }
     */
    public static void gtk_image_get_stock(MemorySegment image, MemorySegment stock_id, MemorySegment size) {
        var mh$ = gtk_image_get_stock$MH();
        try {
            mh$.invokeExact(image, stock_id, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_get_icon_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2450.const$2,"gtk_image_get_icon_set");
    }
    /**
     * {@snippet :
     * void gtk_image_get_icon_set(struct _GtkImage* image, struct _GtkIconSet** icon_set, enum GtkIconSize* size);
     * }
     */
    public static void gtk_image_get_icon_set(MemorySegment image, MemorySegment icon_set, MemorySegment size) {
        var mh$ = gtk_image_get_icon_set$MH();
        try {
            mh$.invokeExact(image, icon_set, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_get_animation$MH() {
        return RuntimeHelper.requireNonNull(constants$2450.const$3,"gtk_image_get_animation");
    }
    /**
     * {@snippet :
     * struct _GdkPixbufAnimation* gtk_image_get_animation(struct _GtkImage* image);
     * }
     */
    public static MemorySegment gtk_image_get_animation(MemorySegment image) {
        var mh$ = gtk_image_get_animation$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_get_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2450.const$4,"gtk_image_get_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_image_get_icon_name(struct _GtkImage* image, char** icon_name, enum GtkIconSize* size);
     * }
     */
    public static void gtk_image_get_icon_name(MemorySegment image, MemorySegment icon_name, MemorySegment size) {
        var mh$ = gtk_image_get_icon_name$MH();
        try {
            mh$.invokeExact(image, icon_name, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_get_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$2450.const$5,"gtk_image_get_gicon");
    }
    /**
     * {@snippet :
     * void gtk_image_get_gicon(struct _GtkImage* image, struct _GIcon** gicon, enum GtkIconSize* size);
     * }
     */
    public static void gtk_image_get_gicon(MemorySegment image, MemorySegment gicon, MemorySegment size) {
        var mh$ = gtk_image_get_gicon$MH();
        try {
            mh$.invokeExact(image, gicon, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_image_get_pixel_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2451.const$0,"gtk_image_get_pixel_size");
    }
    /**
     * {@snippet :
     * int gtk_image_get_pixel_size(struct _GtkImage* image);
     * }
     */
    public static int gtk_image_get_pixel_size(MemorySegment image) {
        var mh$ = gtk_image_get_pixel_size$MH();
        try {
            return (int)mh$.invokeExact(image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkEntryIconPosition.GTK_ENTRY_ICON_PRIMARY = 0;
     * }
     */
    public static int GTK_ENTRY_ICON_PRIMARY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkEntryIconPosition.GTK_ENTRY_ICON_SECONDARY = 1;
     * }
     */
    public static int GTK_ENTRY_ICON_SECONDARY() {
        return (int)1L;
    }
    public static MethodHandle gtk_entry_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2458.const$0,"gtk_entry_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_entry_get_type();
     * }
     */
    public static long gtk_entry_get_type() {
        var mh$ = gtk_entry_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2458.const$1,"gtk_entry_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_entry_new();
     * }
     */
    public static MemorySegment gtk_entry_new() {
        var mh$ = gtk_entry_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_new_with_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2458.const$2,"gtk_entry_new_with_buffer");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_entry_new_with_buffer(struct _GtkEntryBuffer* buffer);
     * }
     */
    public static MemorySegment gtk_entry_new_with_buffer(MemorySegment buffer) {
        var mh$ = gtk_entry_new_with_buffer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2458.const$3,"gtk_entry_get_buffer");
    }
    /**
     * {@snippet :
     * struct _GtkEntryBuffer* gtk_entry_get_buffer(struct _GtkEntry* entry);
     * }
     */
    public static MemorySegment gtk_entry_get_buffer(MemorySegment entry) {
        var mh$ = gtk_entry_get_buffer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2458.const$4,"gtk_entry_set_buffer");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_buffer(struct _GtkEntry* entry, struct _GtkEntryBuffer* buffer);
     * }
     */
    public static void gtk_entry_set_buffer(MemorySegment entry, MemorySegment buffer) {
        var mh$ = gtk_entry_set_buffer$MH();
        try {
            mh$.invokeExact(entry, buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_text_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2458.const$5,"gtk_entry_get_text_area");
    }
    /**
     * {@snippet :
     * void gtk_entry_get_text_area(struct _GtkEntry* entry, struct _cairo_rectangle_int* text_area);
     * }
     */
    public static void gtk_entry_get_text_area(MemorySegment entry, MemorySegment text_area) {
        var mh$ = gtk_entry_get_text_area$MH();
        try {
            mh$.invokeExact(entry, text_area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_visibility$MH() {
        return RuntimeHelper.requireNonNull(constants$2459.const$0,"gtk_entry_set_visibility");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_visibility(struct _GtkEntry* entry, int visible);
     * }
     */
    public static void gtk_entry_set_visibility(MemorySegment entry, int visible) {
        var mh$ = gtk_entry_set_visibility$MH();
        try {
            mh$.invokeExact(entry, visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_visibility$MH() {
        return RuntimeHelper.requireNonNull(constants$2459.const$1,"gtk_entry_get_visibility");
    }
    /**
     * {@snippet :
     * int gtk_entry_get_visibility(struct _GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_visibility(MemorySegment entry) {
        var mh$ = gtk_entry_get_visibility$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_invisible_char$MH() {
        return RuntimeHelper.requireNonNull(constants$2459.const$2,"gtk_entry_set_invisible_char");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_invisible_char(struct _GtkEntry* entry, unsigned int ch);
     * }
     */
    public static void gtk_entry_set_invisible_char(MemorySegment entry, int ch) {
        var mh$ = gtk_entry_set_invisible_char$MH();
        try {
            mh$.invokeExact(entry, ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_invisible_char$MH() {
        return RuntimeHelper.requireNonNull(constants$2459.const$3,"gtk_entry_get_invisible_char");
    }
    /**
     * {@snippet :
     * unsigned int gtk_entry_get_invisible_char(struct _GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_invisible_char(MemorySegment entry) {
        var mh$ = gtk_entry_get_invisible_char$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_unset_invisible_char$MH() {
        return RuntimeHelper.requireNonNull(constants$2459.const$4,"gtk_entry_unset_invisible_char");
    }
    /**
     * {@snippet :
     * void gtk_entry_unset_invisible_char(struct _GtkEntry* entry);
     * }
     */
    public static void gtk_entry_unset_invisible_char(MemorySegment entry) {
        var mh$ = gtk_entry_unset_invisible_char$MH();
        try {
            mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_has_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$2459.const$5,"gtk_entry_set_has_frame");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_has_frame(struct _GtkEntry* entry, int setting);
     * }
     */
    public static void gtk_entry_set_has_frame(MemorySegment entry, int setting) {
        var mh$ = gtk_entry_set_has_frame$MH();
        try {
            mh$.invokeExact(entry, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_has_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$2460.const$0,"gtk_entry_get_has_frame");
    }
    /**
     * {@snippet :
     * int gtk_entry_get_has_frame(struct _GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_has_frame(MemorySegment entry) {
        var mh$ = gtk_entry_get_has_frame$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_inner_border$MH() {
        return RuntimeHelper.requireNonNull(constants$2460.const$1,"gtk_entry_set_inner_border");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_inner_border(struct _GtkEntry* entry, struct _GtkBorder* border);
     * }
     */
    public static void gtk_entry_set_inner_border(MemorySegment entry, MemorySegment border) {
        var mh$ = gtk_entry_set_inner_border$MH();
        try {
            mh$.invokeExact(entry, border);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_inner_border$MH() {
        return RuntimeHelper.requireNonNull(constants$2460.const$2,"gtk_entry_get_inner_border");
    }
    /**
     * {@snippet :
     * struct _GtkBorder* gtk_entry_get_inner_border(struct _GtkEntry* entry);
     * }
     */
    public static MemorySegment gtk_entry_get_inner_border(MemorySegment entry) {
        var mh$ = gtk_entry_get_inner_border$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_overwrite_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2460.const$3,"gtk_entry_set_overwrite_mode");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_overwrite_mode(struct _GtkEntry* entry, int overwrite);
     * }
     */
    public static void gtk_entry_set_overwrite_mode(MemorySegment entry, int overwrite) {
        var mh$ = gtk_entry_set_overwrite_mode$MH();
        try {
            mh$.invokeExact(entry, overwrite);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_overwrite_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2460.const$4,"gtk_entry_get_overwrite_mode");
    }
    /**
     * {@snippet :
     * int gtk_entry_get_overwrite_mode(struct _GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_overwrite_mode(MemorySegment entry) {
        var mh$ = gtk_entry_get_overwrite_mode$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_max_length$MH() {
        return RuntimeHelper.requireNonNull(constants$2460.const$5,"gtk_entry_set_max_length");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_max_length(struct _GtkEntry* entry, int max);
     * }
     */
    public static void gtk_entry_set_max_length(MemorySegment entry, int max) {
        var mh$ = gtk_entry_set_max_length$MH();
        try {
            mh$.invokeExact(entry, max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_max_length$MH() {
        return RuntimeHelper.requireNonNull(constants$2461.const$0,"gtk_entry_get_max_length");
    }
    /**
     * {@snippet :
     * int gtk_entry_get_max_length(struct _GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_max_length(MemorySegment entry) {
        var mh$ = gtk_entry_get_max_length$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_text_length$MH() {
        return RuntimeHelper.requireNonNull(constants$2461.const$1,"gtk_entry_get_text_length");
    }
    /**
     * {@snippet :
     * unsigned short gtk_entry_get_text_length(struct _GtkEntry* entry);
     * }
     */
    public static short gtk_entry_get_text_length(MemorySegment entry) {
        var mh$ = gtk_entry_get_text_length$MH();
        try {
            return (short)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_activates_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2461.const$2,"gtk_entry_set_activates_default");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_activates_default(struct _GtkEntry* entry, int setting);
     * }
     */
    public static void gtk_entry_set_activates_default(MemorySegment entry, int setting) {
        var mh$ = gtk_entry_set_activates_default$MH();
        try {
            mh$.invokeExact(entry, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_activates_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2461.const$3,"gtk_entry_get_activates_default");
    }
    /**
     * {@snippet :
     * int gtk_entry_get_activates_default(struct _GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_activates_default(MemorySegment entry) {
        var mh$ = gtk_entry_get_activates_default$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$2461.const$4,"gtk_entry_set_width_chars");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_width_chars(struct _GtkEntry* entry, int n_chars);
     * }
     */
    public static void gtk_entry_set_width_chars(MemorySegment entry, int n_chars) {
        var mh$ = gtk_entry_set_width_chars$MH();
        try {
            mh$.invokeExact(entry, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$2461.const$5,"gtk_entry_get_width_chars");
    }
    /**
     * {@snippet :
     * int gtk_entry_get_width_chars(struct _GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_width_chars(MemorySegment entry) {
        var mh$ = gtk_entry_get_width_chars$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_max_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$2462.const$0,"gtk_entry_set_max_width_chars");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_max_width_chars(struct _GtkEntry* entry, int n_chars);
     * }
     */
    public static void gtk_entry_set_max_width_chars(MemorySegment entry, int n_chars) {
        var mh$ = gtk_entry_set_max_width_chars$MH();
        try {
            mh$.invokeExact(entry, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_max_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$2462.const$1,"gtk_entry_get_max_width_chars");
    }
    /**
     * {@snippet :
     * int gtk_entry_get_max_width_chars(struct _GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_max_width_chars(MemorySegment entry) {
        var mh$ = gtk_entry_get_max_width_chars$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2462.const$2,"gtk_entry_set_text");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_text(struct _GtkEntry* entry, char* text);
     * }
     */
    public static void gtk_entry_set_text(MemorySegment entry, MemorySegment text) {
        var mh$ = gtk_entry_set_text$MH();
        try {
            mh$.invokeExact(entry, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2462.const$3,"gtk_entry_get_text");
    }
    /**
     * {@snippet :
     * char* gtk_entry_get_text(struct _GtkEntry* entry);
     * }
     */
    public static MemorySegment gtk_entry_get_text(MemorySegment entry) {
        var mh$ = gtk_entry_get_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$2462.const$4,"gtk_entry_get_layout");
    }
    /**
     * {@snippet :
     * struct _PangoLayout* gtk_entry_get_layout(struct _GtkEntry* entry);
     * }
     */
    public static MemorySegment gtk_entry_get_layout(MemorySegment entry) {
        var mh$ = gtk_entry_get_layout$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_layout_offsets$MH() {
        return RuntimeHelper.requireNonNull(constants$2462.const$5,"gtk_entry_get_layout_offsets");
    }
    /**
     * {@snippet :
     * void gtk_entry_get_layout_offsets(struct _GtkEntry* entry, int* x, int* y);
     * }
     */
    public static void gtk_entry_get_layout_offsets(MemorySegment entry, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_entry_get_layout_offsets$MH();
        try {
            mh$.invokeExact(entry, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$2463.const$0,"gtk_entry_set_alignment");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_alignment(struct _GtkEntry* entry, float xalign);
     * }
     */
    public static void gtk_entry_set_alignment(MemorySegment entry, float xalign) {
        var mh$ = gtk_entry_set_alignment$MH();
        try {
            mh$.invokeExact(entry, xalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$2463.const$1,"gtk_entry_get_alignment");
    }
    /**
     * {@snippet :
     * float gtk_entry_get_alignment(struct _GtkEntry* entry);
     * }
     */
    public static float gtk_entry_get_alignment(MemorySegment entry) {
        var mh$ = gtk_entry_get_alignment$MH();
        try {
            return (float)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_completion$MH() {
        return RuntimeHelper.requireNonNull(constants$2463.const$2,"gtk_entry_set_completion");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_completion(struct _GtkEntry* entry, struct _GtkEntryCompletion* completion);
     * }
     */
    public static void gtk_entry_set_completion(MemorySegment entry, MemorySegment completion) {
        var mh$ = gtk_entry_set_completion$MH();
        try {
            mh$.invokeExact(entry, completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_completion$MH() {
        return RuntimeHelper.requireNonNull(constants$2463.const$3,"gtk_entry_get_completion");
    }
    /**
     * {@snippet :
     * struct _GtkEntryCompletion* gtk_entry_get_completion(struct _GtkEntry* entry);
     * }
     */
    public static MemorySegment gtk_entry_get_completion(MemorySegment entry) {
        var mh$ = gtk_entry_get_completion$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_layout_index_to_text_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2463.const$4,"gtk_entry_layout_index_to_text_index");
    }
    /**
     * {@snippet :
     * int gtk_entry_layout_index_to_text_index(struct _GtkEntry* entry, int layout_index);
     * }
     */
    public static int gtk_entry_layout_index_to_text_index(MemorySegment entry, int layout_index) {
        var mh$ = gtk_entry_layout_index_to_text_index$MH();
        try {
            return (int)mh$.invokeExact(entry, layout_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_text_index_to_layout_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2463.const$5,"gtk_entry_text_index_to_layout_index");
    }
    /**
     * {@snippet :
     * int gtk_entry_text_index_to_layout_index(struct _GtkEntry* entry, int text_index);
     * }
     */
    public static int gtk_entry_text_index_to_layout_index(MemorySegment entry, int text_index) {
        var mh$ = gtk_entry_text_index_to_layout_index$MH();
        try {
            return (int)mh$.invokeExact(entry, text_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_cursor_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2464.const$0,"gtk_entry_set_cursor_hadjustment");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_cursor_hadjustment(struct _GtkEntry* entry, struct _GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_entry_set_cursor_hadjustment(MemorySegment entry, MemorySegment adjustment) {
        var mh$ = gtk_entry_set_cursor_hadjustment$MH();
        try {
            mh$.invokeExact(entry, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_cursor_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2464.const$1,"gtk_entry_get_cursor_hadjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_entry_get_cursor_hadjustment(struct _GtkEntry* entry);
     * }
     */
    public static MemorySegment gtk_entry_get_cursor_hadjustment(MemorySegment entry) {
        var mh$ = gtk_entry_get_cursor_hadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_progress_fraction$MH() {
        return RuntimeHelper.requireNonNull(constants$2464.const$2,"gtk_entry_set_progress_fraction");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_progress_fraction(struct _GtkEntry* entry, double fraction);
     * }
     */
    public static void gtk_entry_set_progress_fraction(MemorySegment entry, double fraction) {
        var mh$ = gtk_entry_set_progress_fraction$MH();
        try {
            mh$.invokeExact(entry, fraction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_progress_fraction$MH() {
        return RuntimeHelper.requireNonNull(constants$2464.const$3,"gtk_entry_get_progress_fraction");
    }
    /**
     * {@snippet :
     * double gtk_entry_get_progress_fraction(struct _GtkEntry* entry);
     * }
     */
    public static double gtk_entry_get_progress_fraction(MemorySegment entry) {
        var mh$ = gtk_entry_get_progress_fraction$MH();
        try {
            return (double)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_progress_pulse_step$MH() {
        return RuntimeHelper.requireNonNull(constants$2464.const$4,"gtk_entry_set_progress_pulse_step");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_progress_pulse_step(struct _GtkEntry* entry, double fraction);
     * }
     */
    public static void gtk_entry_set_progress_pulse_step(MemorySegment entry, double fraction) {
        var mh$ = gtk_entry_set_progress_pulse_step$MH();
        try {
            mh$.invokeExact(entry, fraction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_progress_pulse_step$MH() {
        return RuntimeHelper.requireNonNull(constants$2464.const$5,"gtk_entry_get_progress_pulse_step");
    }
    /**
     * {@snippet :
     * double gtk_entry_get_progress_pulse_step(struct _GtkEntry* entry);
     * }
     */
    public static double gtk_entry_get_progress_pulse_step(MemorySegment entry) {
        var mh$ = gtk_entry_get_progress_pulse_step$MH();
        try {
            return (double)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_progress_pulse$MH() {
        return RuntimeHelper.requireNonNull(constants$2465.const$0,"gtk_entry_progress_pulse");
    }
    /**
     * {@snippet :
     * void gtk_entry_progress_pulse(struct _GtkEntry* entry);
     * }
     */
    public static void gtk_entry_progress_pulse(MemorySegment entry) {
        var mh$ = gtk_entry_progress_pulse$MH();
        try {
            mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_placeholder_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2465.const$1,"gtk_entry_get_placeholder_text");
    }
    /**
     * {@snippet :
     * char* gtk_entry_get_placeholder_text(struct _GtkEntry* entry);
     * }
     */
    public static MemorySegment gtk_entry_get_placeholder_text(MemorySegment entry) {
        var mh$ = gtk_entry_get_placeholder_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_placeholder_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2465.const$2,"gtk_entry_set_placeholder_text");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_placeholder_text(struct _GtkEntry* entry, char* text);
     * }
     */
    public static void gtk_entry_set_placeholder_text(MemorySegment entry, MemorySegment text) {
        var mh$ = gtk_entry_set_placeholder_text$MH();
        try {
            mh$.invokeExact(entry, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_icon_from_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2465.const$3,"gtk_entry_set_icon_from_pixbuf");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_icon_from_pixbuf(struct _GtkEntry* entry, enum GtkEntryIconPosition icon_pos, struct _GdkPixbuf* pixbuf);
     * }
     */
    public static void gtk_entry_set_icon_from_pixbuf(MemorySegment entry, int icon_pos, MemorySegment pixbuf) {
        var mh$ = gtk_entry_set_icon_from_pixbuf$MH();
        try {
            mh$.invokeExact(entry, icon_pos, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_icon_from_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$2465.const$4,"gtk_entry_set_icon_from_stock");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_icon_from_stock(struct _GtkEntry* entry, enum GtkEntryIconPosition icon_pos, char* stock_id);
     * }
     */
    public static void gtk_entry_set_icon_from_stock(MemorySegment entry, int icon_pos, MemorySegment stock_id) {
        var mh$ = gtk_entry_set_icon_from_stock$MH();
        try {
            mh$.invokeExact(entry, icon_pos, stock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_icon_from_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2465.const$5,"gtk_entry_set_icon_from_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_icon_from_icon_name(struct _GtkEntry* entry, enum GtkEntryIconPosition icon_pos, char* icon_name);
     * }
     */
    public static void gtk_entry_set_icon_from_icon_name(MemorySegment entry, int icon_pos, MemorySegment icon_name) {
        var mh$ = gtk_entry_set_icon_from_icon_name$MH();
        try {
            mh$.invokeExact(entry, icon_pos, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_icon_from_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$2466.const$0,"gtk_entry_set_icon_from_gicon");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_icon_from_gicon(struct _GtkEntry* entry, enum GtkEntryIconPosition icon_pos, struct _GIcon* icon);
     * }
     */
    public static void gtk_entry_set_icon_from_gicon(MemorySegment entry, int icon_pos, MemorySegment icon) {
        var mh$ = gtk_entry_set_icon_from_gicon$MH();
        try {
            mh$.invokeExact(entry, icon_pos, icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_storage_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2466.const$1,"gtk_entry_get_icon_storage_type");
    }
    /**
     * {@snippet :
     * enum GtkImageType gtk_entry_get_icon_storage_type(struct _GtkEntry* entry, enum GtkEntryIconPosition icon_pos);
     * }
     */
    public static int gtk_entry_get_icon_storage_type(MemorySegment entry, int icon_pos) {
        var mh$ = gtk_entry_get_icon_storage_type$MH();
        try {
            return (int)mh$.invokeExact(entry, icon_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2466.const$2,"gtk_entry_get_icon_pixbuf");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_entry_get_icon_pixbuf(struct _GtkEntry* entry, enum GtkEntryIconPosition icon_pos);
     * }
     */
    public static MemorySegment gtk_entry_get_icon_pixbuf(MemorySegment entry, int icon_pos) {
        var mh$ = gtk_entry_get_icon_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry, icon_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$2466.const$3,"gtk_entry_get_icon_stock");
    }
    /**
     * {@snippet :
     * char* gtk_entry_get_icon_stock(struct _GtkEntry* entry, enum GtkEntryIconPosition icon_pos);
     * }
     */
    public static MemorySegment gtk_entry_get_icon_stock(MemorySegment entry, int icon_pos) {
        var mh$ = gtk_entry_get_icon_stock$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry, icon_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2466.const$4,"gtk_entry_get_icon_name");
    }
    /**
     * {@snippet :
     * char* gtk_entry_get_icon_name(struct _GtkEntry* entry, enum GtkEntryIconPosition icon_pos);
     * }
     */
    public static MemorySegment gtk_entry_get_icon_name(MemorySegment entry, int icon_pos) {
        var mh$ = gtk_entry_get_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry, icon_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$2466.const$5,"gtk_entry_get_icon_gicon");
    }
    /**
     * {@snippet :
     * struct _GIcon* gtk_entry_get_icon_gicon(struct _GtkEntry* entry, enum GtkEntryIconPosition icon_pos);
     * }
     */
    public static MemorySegment gtk_entry_get_icon_gicon(MemorySegment entry, int icon_pos) {
        var mh$ = gtk_entry_get_icon_gicon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry, icon_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_icon_activatable$MH() {
        return RuntimeHelper.requireNonNull(constants$2467.const$0,"gtk_entry_set_icon_activatable");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_icon_activatable(struct _GtkEntry* entry, enum GtkEntryIconPosition icon_pos, int activatable);
     * }
     */
    public static void gtk_entry_set_icon_activatable(MemorySegment entry, int icon_pos, int activatable) {
        var mh$ = gtk_entry_set_icon_activatable$MH();
        try {
            mh$.invokeExact(entry, icon_pos, activatable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_activatable$MH() {
        return RuntimeHelper.requireNonNull(constants$2467.const$1,"gtk_entry_get_icon_activatable");
    }
    /**
     * {@snippet :
     * int gtk_entry_get_icon_activatable(struct _GtkEntry* entry, enum GtkEntryIconPosition icon_pos);
     * }
     */
    public static int gtk_entry_get_icon_activatable(MemorySegment entry, int icon_pos) {
        var mh$ = gtk_entry_get_icon_activatable$MH();
        try {
            return (int)mh$.invokeExact(entry, icon_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_icon_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$2467.const$2,"gtk_entry_set_icon_sensitive");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_icon_sensitive(struct _GtkEntry* entry, enum GtkEntryIconPosition icon_pos, int sensitive);
     * }
     */
    public static void gtk_entry_set_icon_sensitive(MemorySegment entry, int icon_pos, int sensitive) {
        var mh$ = gtk_entry_set_icon_sensitive$MH();
        try {
            mh$.invokeExact(entry, icon_pos, sensitive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$2467.const$3,"gtk_entry_get_icon_sensitive");
    }
    /**
     * {@snippet :
     * int gtk_entry_get_icon_sensitive(struct _GtkEntry* entry, enum GtkEntryIconPosition icon_pos);
     * }
     */
    public static int gtk_entry_get_icon_sensitive(MemorySegment entry, int icon_pos) {
        var mh$ = gtk_entry_get_icon_sensitive$MH();
        try {
            return (int)mh$.invokeExact(entry, icon_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$2467.const$4,"gtk_entry_get_icon_at_pos");
    }
    /**
     * {@snippet :
     * int gtk_entry_get_icon_at_pos(struct _GtkEntry* entry, int x, int y);
     * }
     */
    public static int gtk_entry_get_icon_at_pos(MemorySegment entry, int x, int y) {
        var mh$ = gtk_entry_get_icon_at_pos$MH();
        try {
            return (int)mh$.invokeExact(entry, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_icon_tooltip_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2467.const$5,"gtk_entry_set_icon_tooltip_text");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_icon_tooltip_text(struct _GtkEntry* entry, enum GtkEntryIconPosition icon_pos, char* tooltip);
     * }
     */
    public static void gtk_entry_set_icon_tooltip_text(MemorySegment entry, int icon_pos, MemorySegment tooltip) {
        var mh$ = gtk_entry_set_icon_tooltip_text$MH();
        try {
            mh$.invokeExact(entry, icon_pos, tooltip);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_tooltip_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2468.const$0,"gtk_entry_get_icon_tooltip_text");
    }
    /**
     * {@snippet :
     * char* gtk_entry_get_icon_tooltip_text(struct _GtkEntry* entry, enum GtkEntryIconPosition icon_pos);
     * }
     */
    public static MemorySegment gtk_entry_get_icon_tooltip_text(MemorySegment entry, int icon_pos) {
        var mh$ = gtk_entry_get_icon_tooltip_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry, icon_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_icon_tooltip_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2468.const$1,"gtk_entry_set_icon_tooltip_markup");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_icon_tooltip_markup(struct _GtkEntry* entry, enum GtkEntryIconPosition icon_pos, char* tooltip);
     * }
     */
    public static void gtk_entry_set_icon_tooltip_markup(MemorySegment entry, int icon_pos, MemorySegment tooltip) {
        var mh$ = gtk_entry_set_icon_tooltip_markup$MH();
        try {
            mh$.invokeExact(entry, icon_pos, tooltip);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_tooltip_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2468.const$2,"gtk_entry_get_icon_tooltip_markup");
    }
    /**
     * {@snippet :
     * char* gtk_entry_get_icon_tooltip_markup(struct _GtkEntry* entry, enum GtkEntryIconPosition icon_pos);
     * }
     */
    public static MemorySegment gtk_entry_get_icon_tooltip_markup(MemorySegment entry, int icon_pos) {
        var mh$ = gtk_entry_get_icon_tooltip_markup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry, icon_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_icon_drag_source$MH() {
        return RuntimeHelper.requireNonNull(constants$2468.const$3,"gtk_entry_set_icon_drag_source");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_icon_drag_source(struct _GtkEntry* entry, enum GtkEntryIconPosition icon_pos, struct _GtkTargetList* target_list, enum GdkDragAction actions);
     * }
     */
    public static void gtk_entry_set_icon_drag_source(MemorySegment entry, int icon_pos, MemorySegment target_list, int actions) {
        var mh$ = gtk_entry_set_icon_drag_source$MH();
        try {
            mh$.invokeExact(entry, icon_pos, target_list, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_current_icon_drag_source$MH() {
        return RuntimeHelper.requireNonNull(constants$2468.const$4,"gtk_entry_get_current_icon_drag_source");
    }
    /**
     * {@snippet :
     * int gtk_entry_get_current_icon_drag_source(struct _GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_current_icon_drag_source(MemorySegment entry) {
        var mh$ = gtk_entry_get_current_icon_drag_source$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_icon_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2468.const$5,"gtk_entry_get_icon_area");
    }
    /**
     * {@snippet :
     * void gtk_entry_get_icon_area(struct _GtkEntry* entry, enum GtkEntryIconPosition icon_pos, struct _cairo_rectangle_int* icon_area);
     * }
     */
    public static void gtk_entry_get_icon_area(MemorySegment entry, int icon_pos, MemorySegment icon_area) {
        var mh$ = gtk_entry_get_icon_area$MH();
        try {
            mh$.invokeExact(entry, icon_pos, icon_area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_im_context_filter_keypress$MH() {
        return RuntimeHelper.requireNonNull(constants$2469.const$0,"gtk_entry_im_context_filter_keypress");
    }
    /**
     * {@snippet :
     * int gtk_entry_im_context_filter_keypress(struct _GtkEntry* entry, struct _GdkEventKey* event);
     * }
     */
    public static int gtk_entry_im_context_filter_keypress(MemorySegment entry, MemorySegment event) {
        var mh$ = gtk_entry_im_context_filter_keypress$MH();
        try {
            return (int)mh$.invokeExact(entry, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_reset_im_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2469.const$1,"gtk_entry_reset_im_context");
    }
    /**
     * {@snippet :
     * void gtk_entry_reset_im_context(struct _GtkEntry* entry);
     * }
     */
    public static void gtk_entry_reset_im_context(MemorySegment entry) {
        var mh$ = gtk_entry_reset_im_context$MH();
        try {
            mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_input_purpose$MH() {
        return RuntimeHelper.requireNonNull(constants$2469.const$2,"gtk_entry_set_input_purpose");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_input_purpose(struct _GtkEntry* entry, enum GtkInputPurpose purpose);
     * }
     */
    public static void gtk_entry_set_input_purpose(MemorySegment entry, int purpose) {
        var mh$ = gtk_entry_set_input_purpose$MH();
        try {
            mh$.invokeExact(entry, purpose);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_input_purpose$MH() {
        return RuntimeHelper.requireNonNull(constants$2469.const$3,"gtk_entry_get_input_purpose");
    }
    /**
     * {@snippet :
     * enum GtkInputPurpose gtk_entry_get_input_purpose(struct _GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_input_purpose(MemorySegment entry) {
        var mh$ = gtk_entry_get_input_purpose$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_input_hints$MH() {
        return RuntimeHelper.requireNonNull(constants$2469.const$4,"gtk_entry_set_input_hints");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_input_hints(struct _GtkEntry* entry, enum GtkInputHints hints);
     * }
     */
    public static void gtk_entry_set_input_hints(MemorySegment entry, int hints) {
        var mh$ = gtk_entry_set_input_hints$MH();
        try {
            mh$.invokeExact(entry, hints);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_input_hints$MH() {
        return RuntimeHelper.requireNonNull(constants$2469.const$5,"gtk_entry_get_input_hints");
    }
    /**
     * {@snippet :
     * enum GtkInputHints gtk_entry_get_input_hints(struct _GtkEntry* entry);
     * }
     */
    public static int gtk_entry_get_input_hints(MemorySegment entry) {
        var mh$ = gtk_entry_get_input_hints$MH();
        try {
            return (int)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2470.const$0,"gtk_entry_set_attributes");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_attributes(struct _GtkEntry* entry, struct _PangoAttrList* attrs);
     * }
     */
    public static void gtk_entry_set_attributes(MemorySegment entry, MemorySegment attrs) {
        var mh$ = gtk_entry_set_attributes$MH();
        try {
            mh$.invokeExact(entry, attrs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2470.const$1,"gtk_entry_get_attributes");
    }
    /**
     * {@snippet :
     * struct _PangoAttrList* gtk_entry_get_attributes(struct _GtkEntry* entry);
     * }
     */
    public static MemorySegment gtk_entry_get_attributes(MemorySegment entry) {
        var mh$ = gtk_entry_get_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_set_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$2470.const$2,"gtk_entry_set_tabs");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_tabs(struct _GtkEntry* entry, struct _PangoTabArray* tabs);
     * }
     */
    public static void gtk_entry_set_tabs(MemorySegment entry, MemorySegment tabs) {
        var mh$ = gtk_entry_set_tabs$MH();
        try {
            mh$.invokeExact(entry, tabs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$2470.const$3,"gtk_entry_get_tabs");
    }
    /**
     * {@snippet :
     * struct _PangoTabArray* gtk_entry_get_tabs(struct _GtkEntry* entry);
     * }
     */
    public static MemorySegment gtk_entry_get_tabs(MemorySegment entry) {
        var mh$ = gtk_entry_get_tabs$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_grab_focus_without_selecting$MH() {
        return RuntimeHelper.requireNonNull(constants$2470.const$4,"gtk_entry_grab_focus_without_selecting");
    }
    /**
     * {@snippet :
     * void gtk_entry_grab_focus_without_selecting(struct _GtkEntry* entry);
     * }
     */
    public static void gtk_entry_grab_focus_without_selecting(MemorySegment entry) {
        var mh$ = gtk_entry_grab_focus_without_selecting$MH();
        try {
            mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkTreeViewDropPosition.GTK_TREE_VIEW_DROP_BEFORE = 0;
     * }
     */
    public static int GTK_TREE_VIEW_DROP_BEFORE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkTreeViewDropPosition.GTK_TREE_VIEW_DROP_AFTER = 1;
     * }
     */
    public static int GTK_TREE_VIEW_DROP_AFTER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkTreeViewDropPosition.GTK_TREE_VIEW_DROP_INTO_OR_BEFORE = 2;
     * }
     */
    public static int GTK_TREE_VIEW_DROP_INTO_OR_BEFORE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkTreeViewDropPosition.GTK_TREE_VIEW_DROP_INTO_OR_AFTER = 3;
     * }
     */
    public static int GTK_TREE_VIEW_DROP_INTO_OR_AFTER() {
        return (int)3L;
    }
    public static MethodHandle gtk_tree_view_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2479.const$5,"gtk_tree_view_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tree_view_get_type();
     * }
     */
    public static long gtk_tree_view_get_type() {
        var mh$ = gtk_tree_view_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2480.const$0,"gtk_tree_view_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_tree_view_new();
     * }
     */
    public static MemorySegment gtk_tree_view_new() {
        var mh$ = gtk_tree_view_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_new_with_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2480.const$1,"gtk_tree_view_new_with_model");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_tree_view_new_with_model(struct _GtkTreeModel* model);
     * }
     */
    public static MemorySegment gtk_tree_view_new_with_model(MemorySegment model) {
        var mh$ = gtk_tree_view_new_with_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2480.const$2,"gtk_tree_view_get_model");
    }
    /**
     * {@snippet :
     * struct _GtkTreeModel* gtk_tree_view_get_model(struct _GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_model(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2480.const$3,"gtk_tree_view_set_model");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_model(struct _GtkTreeView* tree_view, struct _GtkTreeModel* model);
     * }
     */
    public static void gtk_tree_view_set_model(MemorySegment tree_view, MemorySegment model) {
        var mh$ = gtk_tree_view_set_model$MH();
        try {
            mh$.invokeExact(tree_view, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2480.const$4,"gtk_tree_view_get_selection");
    }
    /**
     * {@snippet :
     * struct _GtkTreeSelection* gtk_tree_view_get_selection(struct _GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_selection(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_selection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2480.const$5,"gtk_tree_view_get_hadjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_tree_view_get_hadjustment(struct _GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_hadjustment(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_hadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2481.const$0,"gtk_tree_view_set_hadjustment");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_hadjustment(struct _GtkTreeView* tree_view, struct _GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_tree_view_set_hadjustment(MemorySegment tree_view, MemorySegment adjustment) {
        var mh$ = gtk_tree_view_set_hadjustment$MH();
        try {
            mh$.invokeExact(tree_view, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2481.const$1,"gtk_tree_view_get_vadjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_tree_view_get_vadjustment(struct _GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_vadjustment(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_vadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2481.const$2,"gtk_tree_view_set_vadjustment");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_vadjustment(struct _GtkTreeView* tree_view, struct _GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_tree_view_set_vadjustment(MemorySegment tree_view, MemorySegment adjustment) {
        var mh$ = gtk_tree_view_set_vadjustment$MH();
        try {
            mh$.invokeExact(tree_view, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_headers_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2481.const$3,"gtk_tree_view_get_headers_visible");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_headers_visible(struct _GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_headers_visible(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_headers_visible$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_headers_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2481.const$4,"gtk_tree_view_set_headers_visible");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_headers_visible(struct _GtkTreeView* tree_view, int headers_visible);
     * }
     */
    public static void gtk_tree_view_set_headers_visible(MemorySegment tree_view, int headers_visible) {
        var mh$ = gtk_tree_view_set_headers_visible$MH();
        try {
            mh$.invokeExact(tree_view, headers_visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_columns_autosize$MH() {
        return RuntimeHelper.requireNonNull(constants$2481.const$5,"gtk_tree_view_columns_autosize");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_columns_autosize(struct _GtkTreeView* tree_view);
     * }
     */
    public static void gtk_tree_view_columns_autosize(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_columns_autosize$MH();
        try {
            mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_headers_clickable$MH() {
        return RuntimeHelper.requireNonNull(constants$2482.const$0,"gtk_tree_view_get_headers_clickable");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_headers_clickable(struct _GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_headers_clickable(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_headers_clickable$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_headers_clickable$MH() {
        return RuntimeHelper.requireNonNull(constants$2482.const$1,"gtk_tree_view_set_headers_clickable");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_headers_clickable(struct _GtkTreeView* tree_view, int setting);
     * }
     */
    public static void gtk_tree_view_set_headers_clickable(MemorySegment tree_view, int setting) {
        var mh$ = gtk_tree_view_set_headers_clickable$MH();
        try {
            mh$.invokeExact(tree_view, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_rules_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$2482.const$2,"gtk_tree_view_set_rules_hint");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_rules_hint(struct _GtkTreeView* tree_view, int setting);
     * }
     */
    public static void gtk_tree_view_set_rules_hint(MemorySegment tree_view, int setting) {
        var mh$ = gtk_tree_view_set_rules_hint$MH();
        try {
            mh$.invokeExact(tree_view, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_rules_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$2482.const$3,"gtk_tree_view_get_rules_hint");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_rules_hint(struct _GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_rules_hint(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_rules_hint$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2482.const$4,"gtk_tree_view_get_activate_on_single_click");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_activate_on_single_click(struct _GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_activate_on_single_click(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_activate_on_single_click$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2482.const$5,"gtk_tree_view_set_activate_on_single_click");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_activate_on_single_click(struct _GtkTreeView* tree_view, int single);
     * }
     */
    public static void gtk_tree_view_set_activate_on_single_click(MemorySegment tree_view, int single) {
        var mh$ = gtk_tree_view_set_activate_on_single_click$MH();
        try {
            mh$.invokeExact(tree_view, single);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_append_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2483.const$0,"gtk_tree_view_append_column");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_append_column(struct _GtkTreeView* tree_view, struct _GtkTreeViewColumn* column);
     * }
     */
    public static int gtk_tree_view_append_column(MemorySegment tree_view, MemorySegment column) {
        var mh$ = gtk_tree_view_append_column$MH();
        try {
            return (int)mh$.invokeExact(tree_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_remove_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2483.const$1,"gtk_tree_view_remove_column");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_remove_column(struct _GtkTreeView* tree_view, struct _GtkTreeViewColumn* column);
     * }
     */
    public static int gtk_tree_view_remove_column(MemorySegment tree_view, MemorySegment column) {
        var mh$ = gtk_tree_view_remove_column$MH();
        try {
            return (int)mh$.invokeExact(tree_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_insert_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2483.const$2,"gtk_tree_view_insert_column");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_insert_column(struct _GtkTreeView* tree_view, struct _GtkTreeViewColumn* column, int position);
     * }
     */
    public static int gtk_tree_view_insert_column(MemorySegment tree_view, MemorySegment column, int position) {
        var mh$ = gtk_tree_view_insert_column$MH();
        try {
            return (int)mh$.invokeExact(tree_view, column, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_insert_column_with_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2483.const$3,"gtk_tree_view_insert_column_with_attributes");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_insert_column_with_attributes(struct _GtkTreeView* tree_view, int position, char* title, struct _GtkCellRenderer* cell,...);
     * }
     */
    public static int gtk_tree_view_insert_column_with_attributes(MemorySegment tree_view, int position, MemorySegment title, MemorySegment cell, Object... x4) {
        var mh$ = gtk_tree_view_insert_column_with_attributes$MH();
        try {
            return (int)mh$.invokeExact(tree_view, position, title, cell, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_insert_column_with_data_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2484.const$0,"gtk_tree_view_insert_column_with_data_func");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_insert_column_with_data_func(struct _GtkTreeView* tree_view, int position, char* title, struct _GtkCellRenderer* cell, void (*func)(struct _GtkTreeViewColumn*,struct _GtkCellRenderer*,struct _GtkTreeModel*,struct _GtkTreeIter*,void*), void* data, void (*dnotify)(void*));
     * }
     */
    public static int gtk_tree_view_insert_column_with_data_func(MemorySegment tree_view, int position, MemorySegment title, MemorySegment cell, MemorySegment func, MemorySegment data, MemorySegment dnotify) {
        var mh$ = gtk_tree_view_insert_column_with_data_func$MH();
        try {
            return (int)mh$.invokeExact(tree_view, position, title, cell, func, data, dnotify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_n_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$2484.const$1,"gtk_tree_view_get_n_columns");
    }
    /**
     * {@snippet :
     * unsigned int gtk_tree_view_get_n_columns(struct _GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_n_columns(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_n_columns$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2484.const$2,"gtk_tree_view_get_column");
    }
    /**
     * {@snippet :
     * struct _GtkTreeViewColumn* gtk_tree_view_get_column(struct _GtkTreeView* tree_view, int n);
     * }
     */
    public static MemorySegment gtk_tree_view_get_column(MemorySegment tree_view, int n) {
        var mh$ = gtk_tree_view_get_column$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$2484.const$3,"gtk_tree_view_get_columns");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_tree_view_get_columns(struct _GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_columns(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_columns$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_move_column_after$MH() {
        return RuntimeHelper.requireNonNull(constants$2484.const$4,"gtk_tree_view_move_column_after");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_move_column_after(struct _GtkTreeView* tree_view, struct _GtkTreeViewColumn* column, struct _GtkTreeViewColumn* base_column);
     * }
     */
    public static void gtk_tree_view_move_column_after(MemorySegment tree_view, MemorySegment column, MemorySegment base_column) {
        var mh$ = gtk_tree_view_move_column_after$MH();
        try {
            mh$.invokeExact(tree_view, column, base_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_expander_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2484.const$5,"gtk_tree_view_set_expander_column");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_expander_column(struct _GtkTreeView* tree_view, struct _GtkTreeViewColumn* column);
     * }
     */
    public static void gtk_tree_view_set_expander_column(MemorySegment tree_view, MemorySegment column) {
        var mh$ = gtk_tree_view_set_expander_column$MH();
        try {
            mh$.invokeExact(tree_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_expander_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2485.const$0,"gtk_tree_view_get_expander_column");
    }
    /**
     * {@snippet :
     * struct _GtkTreeViewColumn* gtk_tree_view_get_expander_column(struct _GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_expander_column(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_expander_column$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_column_drag_function$MH() {
        return RuntimeHelper.requireNonNull(constants$2485.const$3,"gtk_tree_view_set_column_drag_function");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_column_drag_function(struct _GtkTreeView* tree_view, int (*func)(struct _GtkTreeView*,struct _GtkTreeViewColumn*,struct _GtkTreeViewColumn*,struct _GtkTreeViewColumn*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void gtk_tree_view_set_column_drag_function(MemorySegment tree_view, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_tree_view_set_column_drag_function$MH();
        try {
            mh$.invokeExact(tree_view, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_scroll_to_point$MH() {
        return RuntimeHelper.requireNonNull(constants$2485.const$4,"gtk_tree_view_scroll_to_point");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_scroll_to_point(struct _GtkTreeView* tree_view, int tree_x, int tree_y);
     * }
     */
    public static void gtk_tree_view_scroll_to_point(MemorySegment tree_view, int tree_x, int tree_y) {
        var mh$ = gtk_tree_view_scroll_to_point$MH();
        try {
            mh$.invokeExact(tree_view, tree_x, tree_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_scroll_to_cell$MH() {
        return RuntimeHelper.requireNonNull(constants$2485.const$6,"gtk_tree_view_scroll_to_cell");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_scroll_to_cell(struct _GtkTreeView* tree_view, struct _GtkTreePath* path, struct _GtkTreeViewColumn* column, int use_align, float row_align, float col_align);
     * }
     */
    public static void gtk_tree_view_scroll_to_cell(MemorySegment tree_view, MemorySegment path, MemorySegment column, int use_align, float row_align, float col_align) {
        var mh$ = gtk_tree_view_scroll_to_cell$MH();
        try {
            mh$.invokeExact(tree_view, path, column, use_align, row_align, col_align);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_row_activated$MH() {
        return RuntimeHelper.requireNonNull(constants$2486.const$0,"gtk_tree_view_row_activated");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_row_activated(struct _GtkTreeView* tree_view, struct _GtkTreePath* path, struct _GtkTreeViewColumn* column);
     * }
     */
    public static void gtk_tree_view_row_activated(MemorySegment tree_view, MemorySegment path, MemorySegment column) {
        var mh$ = gtk_tree_view_row_activated$MH();
        try {
            mh$.invokeExact(tree_view, path, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_expand_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2486.const$1,"gtk_tree_view_expand_all");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_expand_all(struct _GtkTreeView* tree_view);
     * }
     */
    public static void gtk_tree_view_expand_all(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_expand_all$MH();
        try {
            mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_collapse_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2486.const$2,"gtk_tree_view_collapse_all");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_collapse_all(struct _GtkTreeView* tree_view);
     * }
     */
    public static void gtk_tree_view_collapse_all(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_collapse_all$MH();
        try {
            mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_expand_to_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2486.const$3,"gtk_tree_view_expand_to_path");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_expand_to_path(struct _GtkTreeView* tree_view, struct _GtkTreePath* path);
     * }
     */
    public static void gtk_tree_view_expand_to_path(MemorySegment tree_view, MemorySegment path) {
        var mh$ = gtk_tree_view_expand_to_path$MH();
        try {
            mh$.invokeExact(tree_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_expand_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2486.const$4,"gtk_tree_view_expand_row");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_expand_row(struct _GtkTreeView* tree_view, struct _GtkTreePath* path, int open_all);
     * }
     */
    public static int gtk_tree_view_expand_row(MemorySegment tree_view, MemorySegment path, int open_all) {
        var mh$ = gtk_tree_view_expand_row$MH();
        try {
            return (int)mh$.invokeExact(tree_view, path, open_all);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_collapse_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2486.const$5,"gtk_tree_view_collapse_row");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_collapse_row(struct _GtkTreeView* tree_view, struct _GtkTreePath* path);
     * }
     */
    public static int gtk_tree_view_collapse_row(MemorySegment tree_view, MemorySegment path) {
        var mh$ = gtk_tree_view_collapse_row$MH();
        try {
            return (int)mh$.invokeExact(tree_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_map_expanded_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$2487.const$1,"gtk_tree_view_map_expanded_rows");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_map_expanded_rows(struct _GtkTreeView* tree_view, void (*func)(struct _GtkTreeView*,struct _GtkTreePath*,void*), void* data);
     * }
     */
    public static void gtk_tree_view_map_expanded_rows(MemorySegment tree_view, MemorySegment func, MemorySegment data) {
        var mh$ = gtk_tree_view_map_expanded_rows$MH();
        try {
            mh$.invokeExact(tree_view, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_row_expanded$MH() {
        return RuntimeHelper.requireNonNull(constants$2487.const$2,"gtk_tree_view_row_expanded");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_row_expanded(struct _GtkTreeView* tree_view, struct _GtkTreePath* path);
     * }
     */
    public static int gtk_tree_view_row_expanded(MemorySegment tree_view, MemorySegment path) {
        var mh$ = gtk_tree_view_row_expanded$MH();
        try {
            return (int)mh$.invokeExact(tree_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_reorderable$MH() {
        return RuntimeHelper.requireNonNull(constants$2487.const$3,"gtk_tree_view_set_reorderable");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_reorderable(struct _GtkTreeView* tree_view, int reorderable);
     * }
     */
    public static void gtk_tree_view_set_reorderable(MemorySegment tree_view, int reorderable) {
        var mh$ = gtk_tree_view_set_reorderable$MH();
        try {
            mh$.invokeExact(tree_view, reorderable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_reorderable$MH() {
        return RuntimeHelper.requireNonNull(constants$2487.const$4,"gtk_tree_view_get_reorderable");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_reorderable(struct _GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_reorderable(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_reorderable$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$2487.const$5,"gtk_tree_view_set_cursor");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_cursor(struct _GtkTreeView* tree_view, struct _GtkTreePath* path, struct _GtkTreeViewColumn* focus_column, int start_editing);
     * }
     */
    public static void gtk_tree_view_set_cursor(MemorySegment tree_view, MemorySegment path, MemorySegment focus_column, int start_editing) {
        var mh$ = gtk_tree_view_set_cursor$MH();
        try {
            mh$.invokeExact(tree_view, path, focus_column, start_editing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_cursor_on_cell$MH() {
        return RuntimeHelper.requireNonNull(constants$2488.const$0,"gtk_tree_view_set_cursor_on_cell");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_cursor_on_cell(struct _GtkTreeView* tree_view, struct _GtkTreePath* path, struct _GtkTreeViewColumn* focus_column, struct _GtkCellRenderer* focus_cell, int start_editing);
     * }
     */
    public static void gtk_tree_view_set_cursor_on_cell(MemorySegment tree_view, MemorySegment path, MemorySegment focus_column, MemorySegment focus_cell, int start_editing) {
        var mh$ = gtk_tree_view_set_cursor_on_cell$MH();
        try {
            mh$.invokeExact(tree_view, path, focus_column, focus_cell, start_editing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$2488.const$1,"gtk_tree_view_get_cursor");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_get_cursor(struct _GtkTreeView* tree_view, struct _GtkTreePath** path, struct _GtkTreeViewColumn** focus_column);
     * }
     */
    public static void gtk_tree_view_get_cursor(MemorySegment tree_view, MemorySegment path, MemorySegment focus_column) {
        var mh$ = gtk_tree_view_get_cursor$MH();
        try {
            mh$.invokeExact(tree_view, path, focus_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_bin_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2488.const$2,"gtk_tree_view_get_bin_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gtk_tree_view_get_bin_window(struct _GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_bin_window(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_bin_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_path_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$2488.const$3,"gtk_tree_view_get_path_at_pos");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_path_at_pos(struct _GtkTreeView* tree_view, int x, int y, struct _GtkTreePath** path, struct _GtkTreeViewColumn** column, int* cell_x, int* cell_y);
     * }
     */
    public static int gtk_tree_view_get_path_at_pos(MemorySegment tree_view, int x, int y, MemorySegment path, MemorySegment column, MemorySegment cell_x, MemorySegment cell_y) {
        var mh$ = gtk_tree_view_get_path_at_pos$MH();
        try {
            return (int)mh$.invokeExact(tree_view, x, y, path, column, cell_x, cell_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_cell_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2488.const$4,"gtk_tree_view_get_cell_area");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_get_cell_area(struct _GtkTreeView* tree_view, struct _GtkTreePath* path, struct _GtkTreeViewColumn* column, struct _cairo_rectangle_int* rect);
     * }
     */
    public static void gtk_tree_view_get_cell_area(MemorySegment tree_view, MemorySegment path, MemorySegment column, MemorySegment rect) {
        var mh$ = gtk_tree_view_get_cell_area$MH();
        try {
            mh$.invokeExact(tree_view, path, column, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_background_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2488.const$5,"gtk_tree_view_get_background_area");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_get_background_area(struct _GtkTreeView* tree_view, struct _GtkTreePath* path, struct _GtkTreeViewColumn* column, struct _cairo_rectangle_int* rect);
     * }
     */
    public static void gtk_tree_view_get_background_area(MemorySegment tree_view, MemorySegment path, MemorySegment column, MemorySegment rect) {
        var mh$ = gtk_tree_view_get_background_area$MH();
        try {
            mh$.invokeExact(tree_view, path, column, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_visible_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$2489.const$0,"gtk_tree_view_get_visible_rect");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_get_visible_rect(struct _GtkTreeView* tree_view, struct _cairo_rectangle_int* visible_rect);
     * }
     */
    public static void gtk_tree_view_get_visible_rect(MemorySegment tree_view, MemorySegment visible_rect) {
        var mh$ = gtk_tree_view_get_visible_rect$MH();
        try {
            mh$.invokeExact(tree_view, visible_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_visible_range$MH() {
        return RuntimeHelper.requireNonNull(constants$2489.const$1,"gtk_tree_view_get_visible_range");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_visible_range(struct _GtkTreeView* tree_view, struct _GtkTreePath** start_path, struct _GtkTreePath** end_path);
     * }
     */
    public static int gtk_tree_view_get_visible_range(MemorySegment tree_view, MemorySegment start_path, MemorySegment end_path) {
        var mh$ = gtk_tree_view_get_visible_range$MH();
        try {
            return (int)mh$.invokeExact(tree_view, start_path, end_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_is_blank_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$2489.const$2,"gtk_tree_view_is_blank_at_pos");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_is_blank_at_pos(struct _GtkTreeView* tree_view, int x, int y, struct _GtkTreePath** path, struct _GtkTreeViewColumn** column, int* cell_x, int* cell_y);
     * }
     */
    public static int gtk_tree_view_is_blank_at_pos(MemorySegment tree_view, int x, int y, MemorySegment path, MemorySegment column, MemorySegment cell_x, MemorySegment cell_y) {
        var mh$ = gtk_tree_view_is_blank_at_pos$MH();
        try {
            return (int)mh$.invokeExact(tree_view, x, y, path, column, cell_x, cell_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_enable_model_drag_source$MH() {
        return RuntimeHelper.requireNonNull(constants$2489.const$4,"gtk_tree_view_enable_model_drag_source");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_enable_model_drag_source(struct _GtkTreeView* tree_view, enum GdkModifierType start_button_mask, struct _GtkTargetEntry* targets, int n_targets, enum GdkDragAction actions);
     * }
     */
    public static void gtk_tree_view_enable_model_drag_source(MemorySegment tree_view, int start_button_mask, MemorySegment targets, int n_targets, int actions) {
        var mh$ = gtk_tree_view_enable_model_drag_source$MH();
        try {
            mh$.invokeExact(tree_view, start_button_mask, targets, n_targets, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_enable_model_drag_dest$MH() {
        return RuntimeHelper.requireNonNull(constants$2489.const$5,"gtk_tree_view_enable_model_drag_dest");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_enable_model_drag_dest(struct _GtkTreeView* tree_view, struct _GtkTargetEntry* targets, int n_targets, enum GdkDragAction actions);
     * }
     */
    public static void gtk_tree_view_enable_model_drag_dest(MemorySegment tree_view, MemorySegment targets, int n_targets, int actions) {
        var mh$ = gtk_tree_view_enable_model_drag_dest$MH();
        try {
            mh$.invokeExact(tree_view, targets, n_targets, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_unset_rows_drag_source$MH() {
        return RuntimeHelper.requireNonNull(constants$2490.const$0,"gtk_tree_view_unset_rows_drag_source");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_unset_rows_drag_source(struct _GtkTreeView* tree_view);
     * }
     */
    public static void gtk_tree_view_unset_rows_drag_source(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_unset_rows_drag_source$MH();
        try {
            mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_unset_rows_drag_dest$MH() {
        return RuntimeHelper.requireNonNull(constants$2490.const$1,"gtk_tree_view_unset_rows_drag_dest");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_unset_rows_drag_dest(struct _GtkTreeView* tree_view);
     * }
     */
    public static void gtk_tree_view_unset_rows_drag_dest(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_unset_rows_drag_dest$MH();
        try {
            mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_drag_dest_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2490.const$2,"gtk_tree_view_set_drag_dest_row");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_drag_dest_row(struct _GtkTreeView* tree_view, struct _GtkTreePath* path, enum GtkTreeViewDropPosition pos);
     * }
     */
    public static void gtk_tree_view_set_drag_dest_row(MemorySegment tree_view, MemorySegment path, int pos) {
        var mh$ = gtk_tree_view_set_drag_dest_row$MH();
        try {
            mh$.invokeExact(tree_view, path, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_drag_dest_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2490.const$3,"gtk_tree_view_get_drag_dest_row");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_get_drag_dest_row(struct _GtkTreeView* tree_view, struct _GtkTreePath** path, enum GtkTreeViewDropPosition* pos);
     * }
     */
    public static void gtk_tree_view_get_drag_dest_row(MemorySegment tree_view, MemorySegment path, MemorySegment pos) {
        var mh$ = gtk_tree_view_get_drag_dest_row$MH();
        try {
            mh$.invokeExact(tree_view, path, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_dest_row_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$2490.const$4,"gtk_tree_view_get_dest_row_at_pos");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_dest_row_at_pos(struct _GtkTreeView* tree_view, int drag_x, int drag_y, struct _GtkTreePath** path, enum GtkTreeViewDropPosition* pos);
     * }
     */
    public static int gtk_tree_view_get_dest_row_at_pos(MemorySegment tree_view, int drag_x, int drag_y, MemorySegment path, MemorySegment pos) {
        var mh$ = gtk_tree_view_get_dest_row_at_pos$MH();
        try {
            return (int)mh$.invokeExact(tree_view, drag_x, drag_y, path, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_create_row_drag_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2490.const$5,"gtk_tree_view_create_row_drag_icon");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* gtk_tree_view_create_row_drag_icon(struct _GtkTreeView* tree_view, struct _GtkTreePath* path);
     * }
     */
    public static MemorySegment gtk_tree_view_create_row_drag_icon(MemorySegment tree_view, MemorySegment path) {
        var mh$ = gtk_tree_view_create_row_drag_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_enable_search$MH() {
        return RuntimeHelper.requireNonNull(constants$2491.const$0,"gtk_tree_view_set_enable_search");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_enable_search(struct _GtkTreeView* tree_view, int enable_search);
     * }
     */
    public static void gtk_tree_view_set_enable_search(MemorySegment tree_view, int enable_search) {
        var mh$ = gtk_tree_view_set_enable_search$MH();
        try {
            mh$.invokeExact(tree_view, enable_search);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_enable_search$MH() {
        return RuntimeHelper.requireNonNull(constants$2491.const$1,"gtk_tree_view_get_enable_search");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_enable_search(struct _GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_enable_search(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_enable_search$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_search_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2491.const$2,"gtk_tree_view_get_search_column");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_search_column(struct _GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_search_column(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_search_column$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_search_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2491.const$3,"gtk_tree_view_set_search_column");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_search_column(struct _GtkTreeView* tree_view, int column);
     * }
     */
    public static void gtk_tree_view_set_search_column(MemorySegment tree_view, int column) {
        var mh$ = gtk_tree_view_set_search_column$MH();
        try {
            mh$.invokeExact(tree_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_search_equal_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2491.const$5,"gtk_tree_view_get_search_equal_func");
    }
    /**
     * {@snippet :
     * int (*gtk_tree_view_get_search_equal_func(struct _GtkTreeView* tree_view))(struct _GtkTreeModel*,int,char*,struct _GtkTreeIter*,void*);
     * }
     */
    public static MemorySegment gtk_tree_view_get_search_equal_func(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_search_equal_func$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_search_equal_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2492.const$2,"gtk_tree_view_set_search_equal_func");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_search_equal_func(struct _GtkTreeView* tree_view, int (*search_equal_func)(struct _GtkTreeModel*,int,char*,struct _GtkTreeIter*,void*), void* search_user_data, void (*search_destroy)(void*));
     * }
     */
    public static void gtk_tree_view_set_search_equal_func(MemorySegment tree_view, MemorySegment search_equal_func, MemorySegment search_user_data, MemorySegment search_destroy) {
        var mh$ = gtk_tree_view_set_search_equal_func$MH();
        try {
            mh$.invokeExact(tree_view, search_equal_func, search_user_data, search_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_search_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$2492.const$3,"gtk_tree_view_get_search_entry");
    }
    /**
     * {@snippet :
     * struct _GtkEntry* gtk_tree_view_get_search_entry(struct _GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_search_entry(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_search_entry$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_search_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$2492.const$4,"gtk_tree_view_set_search_entry");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_search_entry(struct _GtkTreeView* tree_view, struct _GtkEntry* entry);
     * }
     */
    public static void gtk_tree_view_set_search_entry(MemorySegment tree_view, MemorySegment entry) {
        var mh$ = gtk_tree_view_set_search_entry$MH();
        try {
            mh$.invokeExact(tree_view, entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_search_position_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2493.const$0,"gtk_tree_view_get_search_position_func");
    }
    /**
     * {@snippet :
     * void (*gtk_tree_view_get_search_position_func(struct _GtkTreeView* tree_view))(struct _GtkTreeView*,struct _GtkWidget*,void*);
     * }
     */
    public static MemorySegment gtk_tree_view_get_search_position_func(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_search_position_func$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_search_position_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2493.const$3,"gtk_tree_view_set_search_position_func");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_search_position_func(struct _GtkTreeView* tree_view, void (*func)(struct _GtkTreeView*,struct _GtkWidget*,void*), void* data, void (*destroy)(void*));
     * }
     */
    public static void gtk_tree_view_set_search_position_func(MemorySegment tree_view, MemorySegment func, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_tree_view_set_search_position_func$MH();
        try {
            mh$.invokeExact(tree_view, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_convert_widget_to_tree_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$2493.const$4,"gtk_tree_view_convert_widget_to_tree_coords");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_convert_widget_to_tree_coords(struct _GtkTreeView* tree_view, int wx, int wy, int* tx, int* ty);
     * }
     */
    public static void gtk_tree_view_convert_widget_to_tree_coords(MemorySegment tree_view, int wx, int wy, MemorySegment tx, MemorySegment ty) {
        var mh$ = gtk_tree_view_convert_widget_to_tree_coords$MH();
        try {
            mh$.invokeExact(tree_view, wx, wy, tx, ty);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_convert_tree_to_widget_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$2493.const$5,"gtk_tree_view_convert_tree_to_widget_coords");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_convert_tree_to_widget_coords(struct _GtkTreeView* tree_view, int tx, int ty, int* wx, int* wy);
     * }
     */
    public static void gtk_tree_view_convert_tree_to_widget_coords(MemorySegment tree_view, int tx, int ty, MemorySegment wx, MemorySegment wy) {
        var mh$ = gtk_tree_view_convert_tree_to_widget_coords$MH();
        try {
            mh$.invokeExact(tree_view, tx, ty, wx, wy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_convert_widget_to_bin_window_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$2494.const$0,"gtk_tree_view_convert_widget_to_bin_window_coords");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_convert_widget_to_bin_window_coords(struct _GtkTreeView* tree_view, int wx, int wy, int* bx, int* by);
     * }
     */
    public static void gtk_tree_view_convert_widget_to_bin_window_coords(MemorySegment tree_view, int wx, int wy, MemorySegment bx, MemorySegment by) {
        var mh$ = gtk_tree_view_convert_widget_to_bin_window_coords$MH();
        try {
            mh$.invokeExact(tree_view, wx, wy, bx, by);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_convert_bin_window_to_widget_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$2494.const$1,"gtk_tree_view_convert_bin_window_to_widget_coords");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_convert_bin_window_to_widget_coords(struct _GtkTreeView* tree_view, int bx, int by, int* wx, int* wy);
     * }
     */
    public static void gtk_tree_view_convert_bin_window_to_widget_coords(MemorySegment tree_view, int bx, int by, MemorySegment wx, MemorySegment wy) {
        var mh$ = gtk_tree_view_convert_bin_window_to_widget_coords$MH();
        try {
            mh$.invokeExact(tree_view, bx, by, wx, wy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_convert_tree_to_bin_window_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$2494.const$2,"gtk_tree_view_convert_tree_to_bin_window_coords");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_convert_tree_to_bin_window_coords(struct _GtkTreeView* tree_view, int tx, int ty, int* bx, int* by);
     * }
     */
    public static void gtk_tree_view_convert_tree_to_bin_window_coords(MemorySegment tree_view, int tx, int ty, MemorySegment bx, MemorySegment by) {
        var mh$ = gtk_tree_view_convert_tree_to_bin_window_coords$MH();
        try {
            mh$.invokeExact(tree_view, tx, ty, bx, by);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_convert_bin_window_to_tree_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$2494.const$3,"gtk_tree_view_convert_bin_window_to_tree_coords");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_convert_bin_window_to_tree_coords(struct _GtkTreeView* tree_view, int bx, int by, int* tx, int* ty);
     * }
     */
    public static void gtk_tree_view_convert_bin_window_to_tree_coords(MemorySegment tree_view, int bx, int by, MemorySegment tx, MemorySegment ty) {
        var mh$ = gtk_tree_view_convert_bin_window_to_tree_coords$MH();
        try {
            mh$.invokeExact(tree_view, bx, by, tx, ty);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_destroy_count_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2495.const$1,"gtk_tree_view_set_destroy_count_func");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_destroy_count_func(struct _GtkTreeView* tree_view, void (*func)(struct _GtkTreeView*,struct _GtkTreePath*,int,void*), void* data, void (*destroy)(void*));
     * }
     */
    public static void gtk_tree_view_set_destroy_count_func(MemorySegment tree_view, MemorySegment func, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_tree_view_set_destroy_count_func$MH();
        try {
            mh$.invokeExact(tree_view, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_fixed_height_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2495.const$2,"gtk_tree_view_set_fixed_height_mode");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_fixed_height_mode(struct _GtkTreeView* tree_view, int enable);
     * }
     */
    public static void gtk_tree_view_set_fixed_height_mode(MemorySegment tree_view, int enable) {
        var mh$ = gtk_tree_view_set_fixed_height_mode$MH();
        try {
            mh$.invokeExact(tree_view, enable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_fixed_height_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2495.const$3,"gtk_tree_view_get_fixed_height_mode");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_fixed_height_mode(struct _GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_fixed_height_mode(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_fixed_height_mode$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_hover_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2495.const$4,"gtk_tree_view_set_hover_selection");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_hover_selection(struct _GtkTreeView* tree_view, int hover);
     * }
     */
    public static void gtk_tree_view_set_hover_selection(MemorySegment tree_view, int hover) {
        var mh$ = gtk_tree_view_set_hover_selection$MH();
        try {
            mh$.invokeExact(tree_view, hover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_hover_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2495.const$5,"gtk_tree_view_get_hover_selection");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_hover_selection(struct _GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_hover_selection(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_hover_selection$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_hover_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$2496.const$0,"gtk_tree_view_set_hover_expand");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_hover_expand(struct _GtkTreeView* tree_view, int expand);
     * }
     */
    public static void gtk_tree_view_set_hover_expand(MemorySegment tree_view, int expand) {
        var mh$ = gtk_tree_view_set_hover_expand$MH();
        try {
            mh$.invokeExact(tree_view, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_hover_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$2496.const$1,"gtk_tree_view_get_hover_expand");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_hover_expand(struct _GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_hover_expand(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_hover_expand$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_rubber_banding$MH() {
        return RuntimeHelper.requireNonNull(constants$2496.const$2,"gtk_tree_view_set_rubber_banding");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_rubber_banding(struct _GtkTreeView* tree_view, int enable);
     * }
     */
    public static void gtk_tree_view_set_rubber_banding(MemorySegment tree_view, int enable) {
        var mh$ = gtk_tree_view_set_rubber_banding$MH();
        try {
            mh$.invokeExact(tree_view, enable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_rubber_banding$MH() {
        return RuntimeHelper.requireNonNull(constants$2496.const$3,"gtk_tree_view_get_rubber_banding");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_rubber_banding(struct _GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_rubber_banding(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_rubber_banding$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_is_rubber_banding_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2496.const$4,"gtk_tree_view_is_rubber_banding_active");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_is_rubber_banding_active(struct _GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_is_rubber_banding_active(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_is_rubber_banding_active$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_row_separator_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2497.const$0,"gtk_tree_view_get_row_separator_func");
    }
    /**
     * {@snippet :
     * int (*gtk_tree_view_get_row_separator_func(struct _GtkTreeView* tree_view))(struct _GtkTreeModel*,struct _GtkTreeIter*,void*);
     * }
     */
    public static MemorySegment gtk_tree_view_get_row_separator_func(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_row_separator_func$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_row_separator_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2497.const$3,"gtk_tree_view_set_row_separator_func");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_row_separator_func(struct _GtkTreeView* tree_view, int (*func)(struct _GtkTreeModel*,struct _GtkTreeIter*,void*), void* data, void (*destroy)(void*));
     * }
     */
    public static void gtk_tree_view_set_row_separator_func(MemorySegment tree_view, MemorySegment func, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_tree_view_set_row_separator_func$MH();
        try {
            mh$.invokeExact(tree_view, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_grid_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$2497.const$4,"gtk_tree_view_get_grid_lines");
    }
    /**
     * {@snippet :
     * enum GtkTreeViewGridLines gtk_tree_view_get_grid_lines(struct _GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_grid_lines(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_grid_lines$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_grid_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$2497.const$5,"gtk_tree_view_set_grid_lines");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_grid_lines(struct _GtkTreeView* tree_view, enum GtkTreeViewGridLines grid_lines);
     * }
     */
    public static void gtk_tree_view_set_grid_lines(MemorySegment tree_view, int grid_lines) {
        var mh$ = gtk_tree_view_set_grid_lines$MH();
        try {
            mh$.invokeExact(tree_view, grid_lines);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_enable_tree_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$2498.const$0,"gtk_tree_view_get_enable_tree_lines");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_enable_tree_lines(struct _GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_enable_tree_lines(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_enable_tree_lines$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_enable_tree_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$2498.const$1,"gtk_tree_view_set_enable_tree_lines");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_enable_tree_lines(struct _GtkTreeView* tree_view, int enabled);
     * }
     */
    public static void gtk_tree_view_set_enable_tree_lines(MemorySegment tree_view, int enabled) {
        var mh$ = gtk_tree_view_set_enable_tree_lines$MH();
        try {
            mh$.invokeExact(tree_view, enabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_show_expanders$MH() {
        return RuntimeHelper.requireNonNull(constants$2498.const$2,"gtk_tree_view_set_show_expanders");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_show_expanders(struct _GtkTreeView* tree_view, int enabled);
     * }
     */
    public static void gtk_tree_view_set_show_expanders(MemorySegment tree_view, int enabled) {
        var mh$ = gtk_tree_view_set_show_expanders$MH();
        try {
            mh$.invokeExact(tree_view, enabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_show_expanders$MH() {
        return RuntimeHelper.requireNonNull(constants$2498.const$3,"gtk_tree_view_get_show_expanders");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_show_expanders(struct _GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_show_expanders(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_show_expanders$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_level_indentation$MH() {
        return RuntimeHelper.requireNonNull(constants$2498.const$4,"gtk_tree_view_set_level_indentation");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_level_indentation(struct _GtkTreeView* tree_view, int indentation);
     * }
     */
    public static void gtk_tree_view_set_level_indentation(MemorySegment tree_view, int indentation) {
        var mh$ = gtk_tree_view_set_level_indentation$MH();
        try {
            mh$.invokeExact(tree_view, indentation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_level_indentation$MH() {
        return RuntimeHelper.requireNonNull(constants$2498.const$5,"gtk_tree_view_get_level_indentation");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_level_indentation(struct _GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_level_indentation(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_level_indentation$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_tooltip_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2499.const$0,"gtk_tree_view_set_tooltip_row");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_tooltip_row(struct _GtkTreeView* tree_view, struct _GtkTooltip* tooltip, struct _GtkTreePath* path);
     * }
     */
    public static void gtk_tree_view_set_tooltip_row(MemorySegment tree_view, MemorySegment tooltip, MemorySegment path) {
        var mh$ = gtk_tree_view_set_tooltip_row$MH();
        try {
            mh$.invokeExact(tree_view, tooltip, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_tooltip_cell$MH() {
        return RuntimeHelper.requireNonNull(constants$2499.const$1,"gtk_tree_view_set_tooltip_cell");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_tooltip_cell(struct _GtkTreeView* tree_view, struct _GtkTooltip* tooltip, struct _GtkTreePath* path, struct _GtkTreeViewColumn* column, struct _GtkCellRenderer* cell);
     * }
     */
    public static void gtk_tree_view_set_tooltip_cell(MemorySegment tree_view, MemorySegment tooltip, MemorySegment path, MemorySegment column, MemorySegment cell) {
        var mh$ = gtk_tree_view_set_tooltip_cell$MH();
        try {
            mh$.invokeExact(tree_view, tooltip, path, column, cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_tooltip_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2499.const$2,"gtk_tree_view_get_tooltip_context");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_tooltip_context(struct _GtkTreeView* tree_view, int* x, int* y, int keyboard_tip, struct _GtkTreeModel** model, struct _GtkTreePath** path, struct _GtkTreeIter* iter);
     * }
     */
    public static int gtk_tree_view_get_tooltip_context(MemorySegment tree_view, MemorySegment x, MemorySegment y, int keyboard_tip, MemorySegment model, MemorySegment path, MemorySegment iter) {
        var mh$ = gtk_tree_view_get_tooltip_context$MH();
        try {
            return (int)mh$.invokeExact(tree_view, x, y, keyboard_tip, model, path, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_tooltip_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2499.const$3,"gtk_tree_view_set_tooltip_column");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_tooltip_column(struct _GtkTreeView* tree_view, int column);
     * }
     */
    public static void gtk_tree_view_set_tooltip_column(MemorySegment tree_view, int column) {
        var mh$ = gtk_tree_view_set_tooltip_column$MH();
        try {
            mh$.invokeExact(tree_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_tooltip_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2499.const$4,"gtk_tree_view_get_tooltip_column");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_get_tooltip_column(struct _GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_tooltip_column(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_tooltip_column$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2502.const$0,"gtk_combo_box_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_combo_box_get_type();
     * }
     */
    public static long gtk_combo_box_get_type() {
        var mh$ = gtk_combo_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2502.const$1,"gtk_combo_box_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_combo_box_new();
     * }
     */
    public static MemorySegment gtk_combo_box_new() {
        var mh$ = gtk_combo_box_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_new_with_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2502.const$2,"gtk_combo_box_new_with_area");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_combo_box_new_with_area(struct _GtkCellArea* area);
     * }
     */
    public static MemorySegment gtk_combo_box_new_with_area(MemorySegment area) {
        var mh$ = gtk_combo_box_new_with_area$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_new_with_area_and_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$2502.const$3,"gtk_combo_box_new_with_area_and_entry");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_combo_box_new_with_area_and_entry(struct _GtkCellArea* area);
     * }
     */
    public static MemorySegment gtk_combo_box_new_with_area_and_entry(MemorySegment area) {
        var mh$ = gtk_combo_box_new_with_area_and_entry$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_new_with_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$2502.const$4,"gtk_combo_box_new_with_entry");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_combo_box_new_with_entry();
     * }
     */
    public static MemorySegment gtk_combo_box_new_with_entry() {
        var mh$ = gtk_combo_box_new_with_entry$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_new_with_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2502.const$5,"gtk_combo_box_new_with_model");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_combo_box_new_with_model(struct _GtkTreeModel* model);
     * }
     */
    public static MemorySegment gtk_combo_box_new_with_model(MemorySegment model) {
        var mh$ = gtk_combo_box_new_with_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_new_with_model_and_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$2503.const$0,"gtk_combo_box_new_with_model_and_entry");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_combo_box_new_with_model_and_entry(struct _GtkTreeModel* model);
     * }
     */
    public static MemorySegment gtk_combo_box_new_with_model_and_entry(MemorySegment model) {
        var mh$ = gtk_combo_box_new_with_model_and_entry$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_wrap_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2503.const$1,"gtk_combo_box_get_wrap_width");
    }
    /**
     * {@snippet :
     * int gtk_combo_box_get_wrap_width(struct _GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_wrap_width(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_wrap_width$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_wrap_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2503.const$2,"gtk_combo_box_set_wrap_width");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_wrap_width(struct _GtkComboBox* combo_box, int width);
     * }
     */
    public static void gtk_combo_box_set_wrap_width(MemorySegment combo_box, int width) {
        var mh$ = gtk_combo_box_set_wrap_width$MH();
        try {
            mh$.invokeExact(combo_box, width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_row_span_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2503.const$3,"gtk_combo_box_get_row_span_column");
    }
    /**
     * {@snippet :
     * int gtk_combo_box_get_row_span_column(struct _GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_row_span_column(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_row_span_column$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_row_span_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2503.const$4,"gtk_combo_box_set_row_span_column");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_row_span_column(struct _GtkComboBox* combo_box, int row_span);
     * }
     */
    public static void gtk_combo_box_set_row_span_column(MemorySegment combo_box, int row_span) {
        var mh$ = gtk_combo_box_set_row_span_column$MH();
        try {
            mh$.invokeExact(combo_box, row_span);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_column_span_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2503.const$5,"gtk_combo_box_get_column_span_column");
    }
    /**
     * {@snippet :
     * int gtk_combo_box_get_column_span_column(struct _GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_column_span_column(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_column_span_column$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_column_span_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2504.const$0,"gtk_combo_box_set_column_span_column");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_column_span_column(struct _GtkComboBox* combo_box, int column_span);
     * }
     */
    public static void gtk_combo_box_set_column_span_column(MemorySegment combo_box, int column_span) {
        var mh$ = gtk_combo_box_set_column_span_column$MH();
        try {
            mh$.invokeExact(combo_box, column_span);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_add_tearoffs$MH() {
        return RuntimeHelper.requireNonNull(constants$2504.const$1,"gtk_combo_box_get_add_tearoffs");
    }
    /**
     * {@snippet :
     * int gtk_combo_box_get_add_tearoffs(struct _GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_add_tearoffs(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_add_tearoffs$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_add_tearoffs$MH() {
        return RuntimeHelper.requireNonNull(constants$2504.const$2,"gtk_combo_box_set_add_tearoffs");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_add_tearoffs(struct _GtkComboBox* combo_box, int add_tearoffs);
     * }
     */
    public static void gtk_combo_box_set_add_tearoffs(MemorySegment combo_box, int add_tearoffs) {
        var mh$ = gtk_combo_box_set_add_tearoffs$MH();
        try {
            mh$.invokeExact(combo_box, add_tearoffs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2504.const$3,"gtk_combo_box_get_title");
    }
    /**
     * {@snippet :
     * char* gtk_combo_box_get_title(struct _GtkComboBox* combo_box);
     * }
     */
    public static MemorySegment gtk_combo_box_get_title(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2504.const$4,"gtk_combo_box_set_title");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_title(struct _GtkComboBox* combo_box, char* title);
     * }
     */
    public static void gtk_combo_box_set_title(MemorySegment combo_box, MemorySegment title) {
        var mh$ = gtk_combo_box_set_title$MH();
        try {
            mh$.invokeExact(combo_box, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2504.const$5,"gtk_combo_box_get_focus_on_click");
    }
    /**
     * {@snippet :
     * int gtk_combo_box_get_focus_on_click(struct _GtkComboBox* combo);
     * }
     */
    public static int gtk_combo_box_get_focus_on_click(MemorySegment combo) {
        var mh$ = gtk_combo_box_get_focus_on_click$MH();
        try {
            return (int)mh$.invokeExact(combo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2505.const$0,"gtk_combo_box_set_focus_on_click");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_focus_on_click(struct _GtkComboBox* combo, int focus_on_click);
     * }
     */
    public static void gtk_combo_box_set_focus_on_click(MemorySegment combo, int focus_on_click) {
        var mh$ = gtk_combo_box_set_focus_on_click$MH();
        try {
            mh$.invokeExact(combo, focus_on_click);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2505.const$1,"gtk_combo_box_get_active");
    }
    /**
     * {@snippet :
     * int gtk_combo_box_get_active(struct _GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_active(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_active$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2505.const$2,"gtk_combo_box_set_active");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_active(struct _GtkComboBox* combo_box, int index_);
     * }
     */
    public static void gtk_combo_box_set_active(MemorySegment combo_box, int index_) {
        var mh$ = gtk_combo_box_set_active$MH();
        try {
            mh$.invokeExact(combo_box, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_active_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$2505.const$3,"gtk_combo_box_get_active_iter");
    }
    /**
     * {@snippet :
     * int gtk_combo_box_get_active_iter(struct _GtkComboBox* combo_box, struct _GtkTreeIter* iter);
     * }
     */
    public static int gtk_combo_box_get_active_iter(MemorySegment combo_box, MemorySegment iter) {
        var mh$ = gtk_combo_box_get_active_iter$MH();
        try {
            return (int)mh$.invokeExact(combo_box, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_active_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$2505.const$4,"gtk_combo_box_set_active_iter");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_active_iter(struct _GtkComboBox* combo_box, struct _GtkTreeIter* iter);
     * }
     */
    public static void gtk_combo_box_set_active_iter(MemorySegment combo_box, MemorySegment iter) {
        var mh$ = gtk_combo_box_set_active_iter$MH();
        try {
            mh$.invokeExact(combo_box, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2505.const$5,"gtk_combo_box_set_model");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_model(struct _GtkComboBox* combo_box, struct _GtkTreeModel* model);
     * }
     */
    public static void gtk_combo_box_set_model(MemorySegment combo_box, MemorySegment model) {
        var mh$ = gtk_combo_box_set_model$MH();
        try {
            mh$.invokeExact(combo_box, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2506.const$0,"gtk_combo_box_get_model");
    }
    /**
     * {@snippet :
     * struct _GtkTreeModel* gtk_combo_box_get_model(struct _GtkComboBox* combo_box);
     * }
     */
    public static MemorySegment gtk_combo_box_get_model(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_row_separator_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2506.const$2,"gtk_combo_box_get_row_separator_func");
    }
    /**
     * {@snippet :
     * int (*gtk_combo_box_get_row_separator_func(struct _GtkComboBox* combo_box))(struct _GtkTreeModel*,struct _GtkTreeIter*,void*);
     * }
     */
    public static MemorySegment gtk_combo_box_get_row_separator_func(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_row_separator_func$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_row_separator_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2506.const$5,"gtk_combo_box_set_row_separator_func");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_row_separator_func(struct _GtkComboBox* combo_box, int (*func)(struct _GtkTreeModel*,struct _GtkTreeIter*,void*), void* data, void (*destroy)(void*));
     * }
     */
    public static void gtk_combo_box_set_row_separator_func(MemorySegment combo_box, MemorySegment func, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_combo_box_set_row_separator_func$MH();
        try {
            mh$.invokeExact(combo_box, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_button_sensitivity$MH() {
        return RuntimeHelper.requireNonNull(constants$2507.const$0,"gtk_combo_box_set_button_sensitivity");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_button_sensitivity(struct _GtkComboBox* combo_box, enum GtkSensitivityType sensitivity);
     * }
     */
    public static void gtk_combo_box_set_button_sensitivity(MemorySegment combo_box, int sensitivity) {
        var mh$ = gtk_combo_box_set_button_sensitivity$MH();
        try {
            mh$.invokeExact(combo_box, sensitivity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_button_sensitivity$MH() {
        return RuntimeHelper.requireNonNull(constants$2507.const$1,"gtk_combo_box_get_button_sensitivity");
    }
    /**
     * {@snippet :
     * enum GtkSensitivityType gtk_combo_box_get_button_sensitivity(struct _GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_button_sensitivity(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_button_sensitivity$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_has_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$2507.const$2,"gtk_combo_box_get_has_entry");
    }
    /**
     * {@snippet :
     * int gtk_combo_box_get_has_entry(struct _GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_has_entry(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_has_entry$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_entry_text_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2507.const$3,"gtk_combo_box_set_entry_text_column");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_entry_text_column(struct _GtkComboBox* combo_box, int text_column);
     * }
     */
    public static void gtk_combo_box_set_entry_text_column(MemorySegment combo_box, int text_column) {
        var mh$ = gtk_combo_box_set_entry_text_column$MH();
        try {
            mh$.invokeExact(combo_box, text_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_entry_text_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2507.const$4,"gtk_combo_box_get_entry_text_column");
    }
    /**
     * {@snippet :
     * int gtk_combo_box_get_entry_text_column(struct _GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_entry_text_column(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_entry_text_column$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_popup_fixed_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2507.const$5,"gtk_combo_box_set_popup_fixed_width");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_popup_fixed_width(struct _GtkComboBox* combo_box, int fixed);
     * }
     */
    public static void gtk_combo_box_set_popup_fixed_width(MemorySegment combo_box, int fixed) {
        var mh$ = gtk_combo_box_set_popup_fixed_width$MH();
        try {
            mh$.invokeExact(combo_box, fixed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_popup_fixed_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2508.const$0,"gtk_combo_box_get_popup_fixed_width");
    }
    /**
     * {@snippet :
     * int gtk_combo_box_get_popup_fixed_width(struct _GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_popup_fixed_width(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_popup_fixed_width$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_popup$MH() {
        return RuntimeHelper.requireNonNull(constants$2508.const$1,"gtk_combo_box_popup");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_popup(struct _GtkComboBox* combo_box);
     * }
     */
    public static void gtk_combo_box_popup(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_popup$MH();
        try {
            mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_popup_for_device$MH() {
        return RuntimeHelper.requireNonNull(constants$2508.const$2,"gtk_combo_box_popup_for_device");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_popup_for_device(struct _GtkComboBox* combo_box, struct _GdkDevice* device);
     * }
     */
    public static void gtk_combo_box_popup_for_device(MemorySegment combo_box, MemorySegment device) {
        var mh$ = gtk_combo_box_popup_for_device$MH();
        try {
            mh$.invokeExact(combo_box, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_popdown$MH() {
        return RuntimeHelper.requireNonNull(constants$2508.const$3,"gtk_combo_box_popdown");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_popdown(struct _GtkComboBox* combo_box);
     * }
     */
    public static void gtk_combo_box_popdown(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_popdown$MH();
        try {
            mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_popup_accessible$MH() {
        return RuntimeHelper.requireNonNull(constants$2508.const$4,"gtk_combo_box_get_popup_accessible");
    }
    /**
     * {@snippet :
     * struct _AtkObject* gtk_combo_box_get_popup_accessible(struct _GtkComboBox* combo_box);
     * }
     */
    public static MemorySegment gtk_combo_box_get_popup_accessible(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_popup_accessible$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_id_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2508.const$5,"gtk_combo_box_get_id_column");
    }
    /**
     * {@snippet :
     * int gtk_combo_box_get_id_column(struct _GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_id_column(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_id_column$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_id_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2509.const$0,"gtk_combo_box_set_id_column");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_id_column(struct _GtkComboBox* combo_box, int id_column);
     * }
     */
    public static void gtk_combo_box_set_id_column(MemorySegment combo_box, int id_column) {
        var mh$ = gtk_combo_box_set_id_column$MH();
        try {
            mh$.invokeExact(combo_box, id_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_active_id$MH() {
        return RuntimeHelper.requireNonNull(constants$2509.const$1,"gtk_combo_box_get_active_id");
    }
    /**
     * {@snippet :
     * char* gtk_combo_box_get_active_id(struct _GtkComboBox* combo_box);
     * }
     */
    public static MemorySegment gtk_combo_box_get_active_id(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_active_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_active_id$MH() {
        return RuntimeHelper.requireNonNull(constants$2509.const$2,"gtk_combo_box_set_active_id");
    }
    /**
     * {@snippet :
     * int gtk_combo_box_set_active_id(struct _GtkComboBox* combo_box, char* active_id);
     * }
     */
    public static int gtk_combo_box_set_active_id(MemorySegment combo_box, MemorySegment active_id) {
        var mh$ = gtk_combo_box_set_active_id$MH();
        try {
            return (int)mh$.invokeExact(combo_box, active_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2510.const$2,"gtk_app_chooser_button_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_app_chooser_button_get_type();
     * }
     */
    public static long gtk_app_chooser_button_get_type() {
        var mh$ = gtk_app_chooser_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2510.const$3,"gtk_app_chooser_button_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_app_chooser_button_new(char* content_type);
     * }
     */
    public static MemorySegment gtk_app_chooser_button_new(MemorySegment content_type) {
        var mh$ = gtk_app_chooser_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(content_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_append_separator$MH() {
        return RuntimeHelper.requireNonNull(constants$2510.const$4,"gtk_app_chooser_button_append_separator");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_button_append_separator(struct _GtkAppChooserButton* self);
     * }
     */
    public static void gtk_app_chooser_button_append_separator(MemorySegment self) {
        var mh$ = gtk_app_chooser_button_append_separator$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_append_custom_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2510.const$5,"gtk_app_chooser_button_append_custom_item");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_button_append_custom_item(struct _GtkAppChooserButton* self, char* name, char* label, struct _GIcon* icon);
     * }
     */
    public static void gtk_app_chooser_button_append_custom_item(MemorySegment self, MemorySegment name, MemorySegment label, MemorySegment icon) {
        var mh$ = gtk_app_chooser_button_append_custom_item$MH();
        try {
            mh$.invokeExact(self, name, label, icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_set_active_custom_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2511.const$0,"gtk_app_chooser_button_set_active_custom_item");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_button_set_active_custom_item(struct _GtkAppChooserButton* self, char* name);
     * }
     */
    public static void gtk_app_chooser_button_set_active_custom_item(MemorySegment self, MemorySegment name) {
        var mh$ = gtk_app_chooser_button_set_active_custom_item$MH();
        try {
            mh$.invokeExact(self, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_set_show_dialog_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2511.const$1,"gtk_app_chooser_button_set_show_dialog_item");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_button_set_show_dialog_item(struct _GtkAppChooserButton* self, int setting);
     * }
     */
    public static void gtk_app_chooser_button_set_show_dialog_item(MemorySegment self, int setting) {
        var mh$ = gtk_app_chooser_button_set_show_dialog_item$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_get_show_dialog_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2511.const$2,"gtk_app_chooser_button_get_show_dialog_item");
    }
    /**
     * {@snippet :
     * int gtk_app_chooser_button_get_show_dialog_item(struct _GtkAppChooserButton* self);
     * }
     */
    public static int gtk_app_chooser_button_get_show_dialog_item(MemorySegment self) {
        var mh$ = gtk_app_chooser_button_get_show_dialog_item$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_set_heading$MH() {
        return RuntimeHelper.requireNonNull(constants$2511.const$3,"gtk_app_chooser_button_set_heading");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_button_set_heading(struct _GtkAppChooserButton* self, char* heading);
     * }
     */
    public static void gtk_app_chooser_button_set_heading(MemorySegment self, MemorySegment heading) {
        var mh$ = gtk_app_chooser_button_set_heading$MH();
        try {
            mh$.invokeExact(self, heading);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_get_heading$MH() {
        return RuntimeHelper.requireNonNull(constants$2511.const$4,"gtk_app_chooser_button_get_heading");
    }
    /**
     * {@snippet :
     * char* gtk_app_chooser_button_get_heading(struct _GtkAppChooserButton* self);
     * }
     */
    public static MemorySegment gtk_app_chooser_button_get_heading(MemorySegment self) {
        var mh$ = gtk_app_chooser_button_get_heading$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_set_show_default_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2511.const$5,"gtk_app_chooser_button_set_show_default_item");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_button_set_show_default_item(struct _GtkAppChooserButton* self, int setting);
     * }
     */
    public static void gtk_app_chooser_button_set_show_default_item(MemorySegment self, int setting) {
        var mh$ = gtk_app_chooser_button_set_show_default_item$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_get_show_default_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2512.const$0,"gtk_app_chooser_button_get_show_default_item");
    }
    /**
     * {@snippet :
     * int gtk_app_chooser_button_get_show_default_item(struct _GtkAppChooserButton* self);
     * }
     */
    public static int gtk_app_chooser_button_get_show_default_item(MemorySegment self) {
        var mh$ = gtk_app_chooser_button_get_show_default_item$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcuts_window_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2513.const$1,"gtk_shortcuts_window_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_shortcuts_window_get_type();
     * }
     */
    public static long gtk_shortcuts_window_get_type() {
        var mh$ = gtk_shortcuts_window_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkShortcutsWindow* GtkShortcutsWindow_autoptr;
     * }
     */
    public static final AddressLayout GtkShortcutsWindow_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkShortcutsWindow_listautoptr;
     * }
     */
    public static final AddressLayout GtkShortcutsWindow_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkShortcutsWindow_slistautoptr;
     * }
     */
    public static final AddressLayout GtkShortcutsWindow_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkShortcutsWindow_queueautoptr;
     * }
     */
    public static final AddressLayout GtkShortcutsWindow_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle gtk_application_window_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2513.const$5,"gtk_application_window_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_application_window_get_type();
     * }
     */
    public static long gtk_application_window_get_type() {
        var mh$ = gtk_application_window_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_window_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2514.const$0,"gtk_application_window_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_application_window_new(struct _GtkApplication* application);
     * }
     */
    public static MemorySegment gtk_application_window_new(MemorySegment application) {
        var mh$ = gtk_application_window_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_window_set_show_menubar$MH() {
        return RuntimeHelper.requireNonNull(constants$2514.const$1,"gtk_application_window_set_show_menubar");
    }
    /**
     * {@snippet :
     * void gtk_application_window_set_show_menubar(struct _GtkApplicationWindow* window, int show_menubar);
     * }
     */
    public static void gtk_application_window_set_show_menubar(MemorySegment window, int show_menubar) {
        var mh$ = gtk_application_window_set_show_menubar$MH();
        try {
            mh$.invokeExact(window, show_menubar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_window_get_show_menubar$MH() {
        return RuntimeHelper.requireNonNull(constants$2514.const$2,"gtk_application_window_get_show_menubar");
    }
    /**
     * {@snippet :
     * int gtk_application_window_get_show_menubar(struct _GtkApplicationWindow* window);
     * }
     */
    public static int gtk_application_window_get_show_menubar(MemorySegment window) {
        var mh$ = gtk_application_window_get_show_menubar$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_window_get_id$MH() {
        return RuntimeHelper.requireNonNull(constants$2514.const$3,"gtk_application_window_get_id");
    }
    /**
     * {@snippet :
     * unsigned int gtk_application_window_get_id(struct _GtkApplicationWindow* window);
     * }
     */
    public static int gtk_application_window_get_id(MemorySegment window) {
        var mh$ = gtk_application_window_get_id$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_window_set_help_overlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2514.const$4,"gtk_application_window_set_help_overlay");
    }
    /**
     * {@snippet :
     * void gtk_application_window_set_help_overlay(struct _GtkApplicationWindow* window, struct _GtkShortcutsWindow* help_overlay);
     * }
     */
    public static void gtk_application_window_set_help_overlay(MemorySegment window, MemorySegment help_overlay) {
        var mh$ = gtk_application_window_set_help_overlay$MH();
        try {
            mh$.invokeExact(window, help_overlay);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_window_get_help_overlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2514.const$5,"gtk_application_window_get_help_overlay");
    }
    /**
     * {@snippet :
     * struct _GtkShortcutsWindow* gtk_application_window_get_help_overlay(struct _GtkApplicationWindow* window);
     * }
     */
    public static MemorySegment gtk_application_window_get_help_overlay(MemorySegment window) {
        var mh$ = gtk_application_window_get_help_overlay$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2517.const$1,"gtk_frame_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_frame_get_type();
     * }
     */
    public static long gtk_frame_get_type() {
        var mh$ = gtk_frame_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2517.const$2,"gtk_frame_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_frame_new(char* label);
     * }
     */
    public static MemorySegment gtk_frame_new(MemorySegment label) {
        var mh$ = gtk_frame_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2517.const$3,"gtk_frame_set_label");
    }
    /**
     * {@snippet :
     * void gtk_frame_set_label(struct _GtkFrame* frame, char* label);
     * }
     */
    public static void gtk_frame_set_label(MemorySegment frame, MemorySegment label) {
        var mh$ = gtk_frame_set_label$MH();
        try {
            mh$.invokeExact(frame, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2517.const$4,"gtk_frame_get_label");
    }
    /**
     * {@snippet :
     * char* gtk_frame_get_label(struct _GtkFrame* frame);
     * }
     */
    public static MemorySegment gtk_frame_get_label(MemorySegment frame) {
        var mh$ = gtk_frame_get_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2517.const$5,"gtk_frame_set_label_widget");
    }
    /**
     * {@snippet :
     * void gtk_frame_set_label_widget(struct _GtkFrame* frame, struct _GtkWidget* label_widget);
     * }
     */
    public static void gtk_frame_set_label_widget(MemorySegment frame, MemorySegment label_widget) {
        var mh$ = gtk_frame_set_label_widget$MH();
        try {
            mh$.invokeExact(frame, label_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2518.const$0,"gtk_frame_get_label_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_frame_get_label_widget(struct _GtkFrame* frame);
     * }
     */
    public static MemorySegment gtk_frame_get_label_widget(MemorySegment frame) {
        var mh$ = gtk_frame_get_label_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_label_align$MH() {
        return RuntimeHelper.requireNonNull(constants$2518.const$1,"gtk_frame_set_label_align");
    }
    /**
     * {@snippet :
     * void gtk_frame_set_label_align(struct _GtkFrame* frame, float xalign, float yalign);
     * }
     */
    public static void gtk_frame_set_label_align(MemorySegment frame, float xalign, float yalign) {
        var mh$ = gtk_frame_set_label_align$MH();
        try {
            mh$.invokeExact(frame, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_label_align$MH() {
        return RuntimeHelper.requireNonNull(constants$2518.const$2,"gtk_frame_get_label_align");
    }
    /**
     * {@snippet :
     * void gtk_frame_get_label_align(struct _GtkFrame* frame, float* xalign, float* yalign);
     * }
     */
    public static void gtk_frame_get_label_align(MemorySegment frame, MemorySegment xalign, MemorySegment yalign) {
        var mh$ = gtk_frame_get_label_align$MH();
        try {
            mh$.invokeExact(frame, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_shadow_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2518.const$3,"gtk_frame_set_shadow_type");
    }
    /**
     * {@snippet :
     * void gtk_frame_set_shadow_type(struct _GtkFrame* frame, enum GtkShadowType type);
     * }
     */
    public static void gtk_frame_set_shadow_type(MemorySegment frame, int type) {
        var mh$ = gtk_frame_set_shadow_type$MH();
        try {
            mh$.invokeExact(frame, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_shadow_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2518.const$4,"gtk_frame_get_shadow_type");
    }
    /**
     * {@snippet :
     * enum GtkShadowType gtk_frame_get_shadow_type(struct _GtkFrame* frame);
     * }
     */
    public static int gtk_frame_get_shadow_type(MemorySegment frame) {
        var mh$ = gtk_frame_get_shadow_type$MH();
        try {
            return (int)mh$.invokeExact(frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_aspect_frame_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2520.const$4,"gtk_aspect_frame_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_aspect_frame_get_type();
     * }
     */
    public static long gtk_aspect_frame_get_type() {
        var mh$ = gtk_aspect_frame_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_aspect_frame_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2520.const$6,"gtk_aspect_frame_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_aspect_frame_new(char* label, float xalign, float yalign, float ratio, int obey_child);
     * }
     */
    public static MemorySegment gtk_aspect_frame_new(MemorySegment label, float xalign, float yalign, float ratio, int obey_child) {
        var mh$ = gtk_aspect_frame_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label, xalign, yalign, ratio, obey_child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_aspect_frame_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2521.const$1,"gtk_aspect_frame_set");
    }
    /**
     * {@snippet :
     * void gtk_aspect_frame_set(struct _GtkAspectFrame* aspect_frame, float xalign, float yalign, float ratio, int obey_child);
     * }
     */
    public static void gtk_aspect_frame_set(MemorySegment aspect_frame, float xalign, float yalign, float ratio, int obey_child) {
        var mh$ = gtk_aspect_frame_set$MH();
        try {
            mh$.invokeExact(aspect_frame, xalign, yalign, ratio, obey_child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkAssistantPageType.GTK_ASSISTANT_PAGE_CONTENT = 0;
     * }
     */
    public static int GTK_ASSISTANT_PAGE_CONTENT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkAssistantPageType.GTK_ASSISTANT_PAGE_INTRO = 1;
     * }
     */
    public static int GTK_ASSISTANT_PAGE_INTRO() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkAssistantPageType.GTK_ASSISTANT_PAGE_CONFIRM = 2;
     * }
     */
    public static int GTK_ASSISTANT_PAGE_CONFIRM() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkAssistantPageType.GTK_ASSISTANT_PAGE_SUMMARY = 3;
     * }
     */
    public static int GTK_ASSISTANT_PAGE_SUMMARY() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkAssistantPageType.GTK_ASSISTANT_PAGE_PROGRESS = 4;
     * }
     */
    public static int GTK_ASSISTANT_PAGE_PROGRESS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkAssistantPageType.GTK_ASSISTANT_PAGE_CUSTOM = 5;
     * }
     */
    public static int GTK_ASSISTANT_PAGE_CUSTOM() {
        return (int)5L;
    }
    public static MethodHandle gtk_assistant_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2525.const$0,"gtk_assistant_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_assistant_get_type();
     * }
     */
    public static long gtk_assistant_get_type() {
        var mh$ = gtk_assistant_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2525.const$1,"gtk_assistant_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_assistant_new();
     * }
     */
    public static MemorySegment gtk_assistant_new() {
        var mh$ = gtk_assistant_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_next_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2525.const$2,"gtk_assistant_next_page");
    }
    /**
     * {@snippet :
     * void gtk_assistant_next_page(struct _GtkAssistant* assistant);
     * }
     */
    public static void gtk_assistant_next_page(MemorySegment assistant) {
        var mh$ = gtk_assistant_next_page$MH();
        try {
            mh$.invokeExact(assistant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_previous_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2525.const$3,"gtk_assistant_previous_page");
    }
    /**
     * {@snippet :
     * void gtk_assistant_previous_page(struct _GtkAssistant* assistant);
     * }
     */
    public static void gtk_assistant_previous_page(MemorySegment assistant) {
        var mh$ = gtk_assistant_previous_page$MH();
        try {
            mh$.invokeExact(assistant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_current_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2525.const$4,"gtk_assistant_get_current_page");
    }
    /**
     * {@snippet :
     * int gtk_assistant_get_current_page(struct _GtkAssistant* assistant);
     * }
     */
    public static int gtk_assistant_get_current_page(MemorySegment assistant) {
        var mh$ = gtk_assistant_get_current_page$MH();
        try {
            return (int)mh$.invokeExact(assistant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_current_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2525.const$5,"gtk_assistant_set_current_page");
    }
    /**
     * {@snippet :
     * void gtk_assistant_set_current_page(struct _GtkAssistant* assistant, int page_num);
     * }
     */
    public static void gtk_assistant_set_current_page(MemorySegment assistant, int page_num) {
        var mh$ = gtk_assistant_set_current_page$MH();
        try {
            mh$.invokeExact(assistant, page_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_n_pages$MH() {
        return RuntimeHelper.requireNonNull(constants$2526.const$0,"gtk_assistant_get_n_pages");
    }
    /**
     * {@snippet :
     * int gtk_assistant_get_n_pages(struct _GtkAssistant* assistant);
     * }
     */
    public static int gtk_assistant_get_n_pages(MemorySegment assistant) {
        var mh$ = gtk_assistant_get_n_pages$MH();
        try {
            return (int)mh$.invokeExact(assistant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_nth_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2526.const$1,"gtk_assistant_get_nth_page");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_assistant_get_nth_page(struct _GtkAssistant* assistant, int page_num);
     * }
     */
    public static MemorySegment gtk_assistant_get_nth_page(MemorySegment assistant, int page_num) {
        var mh$ = gtk_assistant_get_nth_page$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(assistant, page_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_prepend_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2526.const$2,"gtk_assistant_prepend_page");
    }
    /**
     * {@snippet :
     * int gtk_assistant_prepend_page(struct _GtkAssistant* assistant, struct _GtkWidget* page);
     * }
     */
    public static int gtk_assistant_prepend_page(MemorySegment assistant, MemorySegment page) {
        var mh$ = gtk_assistant_prepend_page$MH();
        try {
            return (int)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_append_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2526.const$3,"gtk_assistant_append_page");
    }
    /**
     * {@snippet :
     * int gtk_assistant_append_page(struct _GtkAssistant* assistant, struct _GtkWidget* page);
     * }
     */
    public static int gtk_assistant_append_page(MemorySegment assistant, MemorySegment page) {
        var mh$ = gtk_assistant_append_page$MH();
        try {
            return (int)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_insert_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2526.const$4,"gtk_assistant_insert_page");
    }
    /**
     * {@snippet :
     * int gtk_assistant_insert_page(struct _GtkAssistant* assistant, struct _GtkWidget* page, int position);
     * }
     */
    public static int gtk_assistant_insert_page(MemorySegment assistant, MemorySegment page, int position) {
        var mh$ = gtk_assistant_insert_page$MH();
        try {
            return (int)mh$.invokeExact(assistant, page, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_remove_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2526.const$5,"gtk_assistant_remove_page");
    }
    /**
     * {@snippet :
     * void gtk_assistant_remove_page(struct _GtkAssistant* assistant, int page_num);
     * }
     */
    public static void gtk_assistant_remove_page(MemorySegment assistant, int page_num) {
        var mh$ = gtk_assistant_remove_page$MH();
        try {
            mh$.invokeExact(assistant, page_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_forward_page_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2527.const$2,"gtk_assistant_set_forward_page_func");
    }
    /**
     * {@snippet :
     * void gtk_assistant_set_forward_page_func(struct _GtkAssistant* assistant, int (*page_func)(int,void*), void* data, void (*destroy)(void*));
     * }
     */
    public static void gtk_assistant_set_forward_page_func(MemorySegment assistant, MemorySegment page_func, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_assistant_set_forward_page_func$MH();
        try {
            mh$.invokeExact(assistant, page_func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_page_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2527.const$3,"gtk_assistant_set_page_type");
    }
    /**
     * {@snippet :
     * void gtk_assistant_set_page_type(struct _GtkAssistant* assistant, struct _GtkWidget* page, enum GtkAssistantPageType type);
     * }
     */
    public static void gtk_assistant_set_page_type(MemorySegment assistant, MemorySegment page, int type) {
        var mh$ = gtk_assistant_set_page_type$MH();
        try {
            mh$.invokeExact(assistant, page, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_page_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2527.const$4,"gtk_assistant_get_page_type");
    }
    /**
     * {@snippet :
     * enum GtkAssistantPageType gtk_assistant_get_page_type(struct _GtkAssistant* assistant, struct _GtkWidget* page);
     * }
     */
    public static int gtk_assistant_get_page_type(MemorySegment assistant, MemorySegment page) {
        var mh$ = gtk_assistant_get_page_type$MH();
        try {
            return (int)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_page_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2527.const$5,"gtk_assistant_set_page_title");
    }
    /**
     * {@snippet :
     * void gtk_assistant_set_page_title(struct _GtkAssistant* assistant, struct _GtkWidget* page, char* title);
     * }
     */
    public static void gtk_assistant_set_page_title(MemorySegment assistant, MemorySegment page, MemorySegment title) {
        var mh$ = gtk_assistant_set_page_title$MH();
        try {
            mh$.invokeExact(assistant, page, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_page_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2528.const$0,"gtk_assistant_get_page_title");
    }
    /**
     * {@snippet :
     * char* gtk_assistant_get_page_title(struct _GtkAssistant* assistant, struct _GtkWidget* page);
     * }
     */
    public static MemorySegment gtk_assistant_get_page_title(MemorySegment assistant, MemorySegment page) {
        var mh$ = gtk_assistant_get_page_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_page_header_image$MH() {
        return RuntimeHelper.requireNonNull(constants$2528.const$1,"gtk_assistant_set_page_header_image");
    }
    /**
     * {@snippet :
     * void gtk_assistant_set_page_header_image(struct _GtkAssistant* assistant, struct _GtkWidget* page, struct _GdkPixbuf* pixbuf);
     * }
     */
    public static void gtk_assistant_set_page_header_image(MemorySegment assistant, MemorySegment page, MemorySegment pixbuf) {
        var mh$ = gtk_assistant_set_page_header_image$MH();
        try {
            mh$.invokeExact(assistant, page, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_page_header_image$MH() {
        return RuntimeHelper.requireNonNull(constants$2528.const$2,"gtk_assistant_get_page_header_image");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_assistant_get_page_header_image(struct _GtkAssistant* assistant, struct _GtkWidget* page);
     * }
     */
    public static MemorySegment gtk_assistant_get_page_header_image(MemorySegment assistant, MemorySegment page) {
        var mh$ = gtk_assistant_get_page_header_image$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_page_side_image$MH() {
        return RuntimeHelper.requireNonNull(constants$2528.const$3,"gtk_assistant_set_page_side_image");
    }
    /**
     * {@snippet :
     * void gtk_assistant_set_page_side_image(struct _GtkAssistant* assistant, struct _GtkWidget* page, struct _GdkPixbuf* pixbuf);
     * }
     */
    public static void gtk_assistant_set_page_side_image(MemorySegment assistant, MemorySegment page, MemorySegment pixbuf) {
        var mh$ = gtk_assistant_set_page_side_image$MH();
        try {
            mh$.invokeExact(assistant, page, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_page_side_image$MH() {
        return RuntimeHelper.requireNonNull(constants$2528.const$4,"gtk_assistant_get_page_side_image");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_assistant_get_page_side_image(struct _GtkAssistant* assistant, struct _GtkWidget* page);
     * }
     */
    public static MemorySegment gtk_assistant_get_page_side_image(MemorySegment assistant, MemorySegment page) {
        var mh$ = gtk_assistant_get_page_side_image$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_page_complete$MH() {
        return RuntimeHelper.requireNonNull(constants$2528.const$5,"gtk_assistant_set_page_complete");
    }
    /**
     * {@snippet :
     * void gtk_assistant_set_page_complete(struct _GtkAssistant* assistant, struct _GtkWidget* page, int complete);
     * }
     */
    public static void gtk_assistant_set_page_complete(MemorySegment assistant, MemorySegment page, int complete) {
        var mh$ = gtk_assistant_set_page_complete$MH();
        try {
            mh$.invokeExact(assistant, page, complete);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_page_complete$MH() {
        return RuntimeHelper.requireNonNull(constants$2529.const$0,"gtk_assistant_get_page_complete");
    }
    /**
     * {@snippet :
     * int gtk_assistant_get_page_complete(struct _GtkAssistant* assistant, struct _GtkWidget* page);
     * }
     */
    public static int gtk_assistant_get_page_complete(MemorySegment assistant, MemorySegment page) {
        var mh$ = gtk_assistant_get_page_complete$MH();
        try {
            return (int)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_add_action_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2529.const$1,"gtk_assistant_add_action_widget");
    }
    /**
     * {@snippet :
     * void gtk_assistant_add_action_widget(struct _GtkAssistant* assistant, struct _GtkWidget* child);
     * }
     */
    public static void gtk_assistant_add_action_widget(MemorySegment assistant, MemorySegment child) {
        var mh$ = gtk_assistant_add_action_widget$MH();
        try {
            mh$.invokeExact(assistant, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_remove_action_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2529.const$2,"gtk_assistant_remove_action_widget");
    }
    /**
     * {@snippet :
     * void gtk_assistant_remove_action_widget(struct _GtkAssistant* assistant, struct _GtkWidget* child);
     * }
     */
    public static void gtk_assistant_remove_action_widget(MemorySegment assistant, MemorySegment child) {
        var mh$ = gtk_assistant_remove_action_widget$MH();
        try {
            mh$.invokeExact(assistant, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_update_buttons_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2529.const$3,"gtk_assistant_update_buttons_state");
    }
    /**
     * {@snippet :
     * void gtk_assistant_update_buttons_state(struct _GtkAssistant* assistant);
     * }
     */
    public static void gtk_assistant_update_buttons_state(MemorySegment assistant) {
        var mh$ = gtk_assistant_update_buttons_state$MH();
        try {
            mh$.invokeExact(assistant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_commit$MH() {
        return RuntimeHelper.requireNonNull(constants$2529.const$4,"gtk_assistant_commit");
    }
    /**
     * {@snippet :
     * void gtk_assistant_commit(struct _GtkAssistant* assistant);
     * }
     */
    public static void gtk_assistant_commit(MemorySegment assistant) {
        var mh$ = gtk_assistant_commit$MH();
        try {
            mh$.invokeExact(assistant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_page_has_padding$MH() {
        return RuntimeHelper.requireNonNull(constants$2529.const$5,"gtk_assistant_set_page_has_padding");
    }
    /**
     * {@snippet :
     * void gtk_assistant_set_page_has_padding(struct _GtkAssistant* assistant, struct _GtkWidget* page, int has_padding);
     * }
     */
    public static void gtk_assistant_set_page_has_padding(MemorySegment assistant, MemorySegment page, int has_padding) {
        var mh$ = gtk_assistant_set_page_has_padding$MH();
        try {
            mh$.invokeExact(assistant, page, has_padding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_page_has_padding$MH() {
        return RuntimeHelper.requireNonNull(constants$2530.const$0,"gtk_assistant_get_page_has_padding");
    }
    /**
     * {@snippet :
     * int gtk_assistant_get_page_has_padding(struct _GtkAssistant* assistant, struct _GtkWidget* page);
     * }
     */
    public static int gtk_assistant_get_page_has_padding(MemorySegment assistant, MemorySegment page) {
        var mh$ = gtk_assistant_get_page_has_padding$MH();
        try {
            return (int)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkButtonBoxStyle.GTK_BUTTONBOX_SPREAD = 1;
     * }
     */
    public static int GTK_BUTTONBOX_SPREAD() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkButtonBoxStyle.GTK_BUTTONBOX_EDGE = 2;
     * }
     */
    public static int GTK_BUTTONBOX_EDGE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkButtonBoxStyle.GTK_BUTTONBOX_START = 3;
     * }
     */
    public static int GTK_BUTTONBOX_START() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkButtonBoxStyle.GTK_BUTTONBOX_END = 4;
     * }
     */
    public static int GTK_BUTTONBOX_END() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkButtonBoxStyle.GTK_BUTTONBOX_CENTER = 5;
     * }
     */
    public static int GTK_BUTTONBOX_CENTER() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkButtonBoxStyle.GTK_BUTTONBOX_EXPAND = 6;
     * }
     */
    public static int GTK_BUTTONBOX_EXPAND() {
        return (int)6L;
    }
    public static MethodHandle gtk_button_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2532.const$0,"gtk_button_box_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_button_box_get_type();
     * }
     */
    public static long gtk_button_box_get_type() {
        var mh$ = gtk_button_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2532.const$1,"gtk_button_box_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_button_box_new(enum GtkOrientation orientation);
     * }
     */
    public static MemorySegment gtk_button_box_new(int orientation) {
        var mh$ = gtk_button_box_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_get_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$2532.const$2,"gtk_button_box_get_layout");
    }
    /**
     * {@snippet :
     * enum GtkButtonBoxStyle gtk_button_box_get_layout(struct _GtkButtonBox* widget);
     * }
     */
    public static int gtk_button_box_get_layout(MemorySegment widget) {
        var mh$ = gtk_button_box_get_layout$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_set_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$2532.const$3,"gtk_button_box_set_layout");
    }
    /**
     * {@snippet :
     * void gtk_button_box_set_layout(struct _GtkButtonBox* widget, enum GtkButtonBoxStyle layout_style);
     * }
     */
    public static void gtk_button_box_set_layout(MemorySegment widget, int layout_style) {
        var mh$ = gtk_button_box_set_layout$MH();
        try {
            mh$.invokeExact(widget, layout_style);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_get_child_secondary$MH() {
        return RuntimeHelper.requireNonNull(constants$2532.const$4,"gtk_button_box_get_child_secondary");
    }
    /**
     * {@snippet :
     * int gtk_button_box_get_child_secondary(struct _GtkButtonBox* widget, struct _GtkWidget* child);
     * }
     */
    public static int gtk_button_box_get_child_secondary(MemorySegment widget, MemorySegment child) {
        var mh$ = gtk_button_box_get_child_secondary$MH();
        try {
            return (int)mh$.invokeExact(widget, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_set_child_secondary$MH() {
        return RuntimeHelper.requireNonNull(constants$2532.const$5,"gtk_button_box_set_child_secondary");
    }
    /**
     * {@snippet :
     * void gtk_button_box_set_child_secondary(struct _GtkButtonBox* widget, struct _GtkWidget* child, int is_secondary);
     * }
     */
    public static void gtk_button_box_set_child_secondary(MemorySegment widget, MemorySegment child, int is_secondary) {
        var mh$ = gtk_button_box_set_child_secondary$MH();
        try {
            mh$.invokeExact(widget, child, is_secondary);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_get_child_non_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2533.const$0,"gtk_button_box_get_child_non_homogeneous");
    }
    /**
     * {@snippet :
     * int gtk_button_box_get_child_non_homogeneous(struct _GtkButtonBox* widget, struct _GtkWidget* child);
     * }
     */
    public static int gtk_button_box_get_child_non_homogeneous(MemorySegment widget, MemorySegment child) {
        var mh$ = gtk_button_box_get_child_non_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(widget, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_set_child_non_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2533.const$1,"gtk_button_box_set_child_non_homogeneous");
    }
    /**
     * {@snippet :
     * void gtk_button_box_set_child_non_homogeneous(struct _GtkButtonBox* widget, struct _GtkWidget* child, int non_homogeneous);
     * }
     */
    public static void gtk_button_box_set_child_non_homogeneous(MemorySegment widget, MemorySegment child, int non_homogeneous) {
        var mh$ = gtk_button_box_set_child_non_homogeneous$MH();
        try {
            mh$.invokeExact(widget, child, non_homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_set_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2537.const$4,"gtk_binding_set_new");
    }
    /**
     * {@snippet :
     * struct _GtkBindingSet* gtk_binding_set_new(char* set_name);
     * }
     */
    public static MemorySegment gtk_binding_set_new(MemorySegment set_name) {
        var mh$ = gtk_binding_set_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(set_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_set_by_class$MH() {
        return RuntimeHelper.requireNonNull(constants$2537.const$5,"gtk_binding_set_by_class");
    }
    /**
     * {@snippet :
     * struct _GtkBindingSet* gtk_binding_set_by_class(void* object_class);
     * }
     */
    public static MemorySegment gtk_binding_set_by_class(MemorySegment object_class) {
        var mh$ = gtk_binding_set_by_class$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_set_find$MH() {
        return RuntimeHelper.requireNonNull(constants$2538.const$0,"gtk_binding_set_find");
    }
    /**
     * {@snippet :
     * struct _GtkBindingSet* gtk_binding_set_find(char* set_name);
     * }
     */
    public static MemorySegment gtk_binding_set_find(MemorySegment set_name) {
        var mh$ = gtk_binding_set_find$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(set_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_bindings_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$2538.const$1,"gtk_bindings_activate");
    }
    /**
     * {@snippet :
     * int gtk_bindings_activate(struct _GObject* object, unsigned int keyval, enum GdkModifierType modifiers);
     * }
     */
    public static int gtk_bindings_activate(MemorySegment object, int keyval, int modifiers) {
        var mh$ = gtk_bindings_activate$MH();
        try {
            return (int)mh$.invokeExact(object, keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_bindings_activate_event$MH() {
        return RuntimeHelper.requireNonNull(constants$2538.const$2,"gtk_bindings_activate_event");
    }
    /**
     * {@snippet :
     * int gtk_bindings_activate_event(struct _GObject* object, struct _GdkEventKey* event);
     * }
     */
    public static int gtk_bindings_activate_event(MemorySegment object, MemorySegment event) {
        var mh$ = gtk_bindings_activate_event$MH();
        try {
            return (int)mh$.invokeExact(object, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_set_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$2538.const$3,"gtk_binding_set_activate");
    }
    /**
     * {@snippet :
     * int gtk_binding_set_activate(struct _GtkBindingSet* binding_set, unsigned int keyval, enum GdkModifierType modifiers, struct _GObject* object);
     * }
     */
    public static int gtk_binding_set_activate(MemorySegment binding_set, int keyval, int modifiers, MemorySegment object) {
        var mh$ = gtk_binding_set_activate$MH();
        try {
            return (int)mh$.invokeExact(binding_set, keyval, modifiers, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_entry_skip$MH() {
        return RuntimeHelper.requireNonNull(constants$2538.const$4,"gtk_binding_entry_skip");
    }
    /**
     * {@snippet :
     * void gtk_binding_entry_skip(struct _GtkBindingSet* binding_set, unsigned int keyval, enum GdkModifierType modifiers);
     * }
     */
    public static void gtk_binding_entry_skip(MemorySegment binding_set, int keyval, int modifiers) {
        var mh$ = gtk_binding_entry_skip$MH();
        try {
            mh$.invokeExact(binding_set, keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_entry_add_signal$MH() {
        return RuntimeHelper.requireNonNull(constants$2538.const$5,"gtk_binding_entry_add_signal");
    }
    /**
     * {@snippet :
     * void gtk_binding_entry_add_signal(struct _GtkBindingSet* binding_set, unsigned int keyval, enum GdkModifierType modifiers, char* signal_name, unsigned int n_args,...);
     * }
     */
    public static void gtk_binding_entry_add_signal(MemorySegment binding_set, int keyval, int modifiers, MemorySegment signal_name, int n_args, Object... x5) {
        var mh$ = gtk_binding_entry_add_signal$MH();
        try {
            mh$.invokeExact(binding_set, keyval, modifiers, signal_name, n_args, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_entry_add_signall$MH() {
        return RuntimeHelper.requireNonNull(constants$2539.const$0,"gtk_binding_entry_add_signall");
    }
    /**
     * {@snippet :
     * void gtk_binding_entry_add_signall(struct _GtkBindingSet* binding_set, unsigned int keyval, enum GdkModifierType modifiers, char* signal_name, struct _GSList* binding_args);
     * }
     */
    public static void gtk_binding_entry_add_signall(MemorySegment binding_set, int keyval, int modifiers, MemorySegment signal_name, MemorySegment binding_args) {
        var mh$ = gtk_binding_entry_add_signall$MH();
        try {
            mh$.invokeExact(binding_set, keyval, modifiers, signal_name, binding_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_entry_add_signal_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2539.const$1,"gtk_binding_entry_add_signal_from_string");
    }
    /**
     * {@snippet :
     * enum GTokenType gtk_binding_entry_add_signal_from_string(struct _GtkBindingSet* binding_set, char* signal_desc);
     * }
     */
    public static int gtk_binding_entry_add_signal_from_string(MemorySegment binding_set, MemorySegment signal_desc) {
        var mh$ = gtk_binding_entry_add_signal_from_string$MH();
        try {
            return (int)mh$.invokeExact(binding_set, signal_desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_entry_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2539.const$2,"gtk_binding_entry_remove");
    }
    /**
     * {@snippet :
     * void gtk_binding_entry_remove(struct _GtkBindingSet* binding_set, unsigned int keyval, enum GdkModifierType modifiers);
     * }
     */
    public static void gtk_binding_entry_remove(MemorySegment binding_set, int keyval, int modifiers) {
        var mh$ = gtk_binding_entry_remove$MH();
        try {
            mh$.invokeExact(binding_set, keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkBuilderError.GTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION = 0;
     * }
     */
    public static int GTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkBuilderError.GTK_BUILDER_ERROR_UNHANDLED_TAG = 1;
     * }
     */
    public static int GTK_BUILDER_ERROR_UNHANDLED_TAG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkBuilderError.GTK_BUILDER_ERROR_MISSING_ATTRIBUTE = 2;
     * }
     */
    public static int GTK_BUILDER_ERROR_MISSING_ATTRIBUTE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkBuilderError.GTK_BUILDER_ERROR_INVALID_ATTRIBUTE = 3;
     * }
     */
    public static int GTK_BUILDER_ERROR_INVALID_ATTRIBUTE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkBuilderError.GTK_BUILDER_ERROR_INVALID_TAG = 4;
     * }
     */
    public static int GTK_BUILDER_ERROR_INVALID_TAG() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkBuilderError.GTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE = 5;
     * }
     */
    public static int GTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkBuilderError.GTK_BUILDER_ERROR_INVALID_VALUE = 6;
     * }
     */
    public static int GTK_BUILDER_ERROR_INVALID_VALUE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GtkBuilderError.GTK_BUILDER_ERROR_VERSION_MISMATCH = 7;
     * }
     */
    public static int GTK_BUILDER_ERROR_VERSION_MISMATCH() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GtkBuilderError.GTK_BUILDER_ERROR_DUPLICATE_ID = 8;
     * }
     */
    public static int GTK_BUILDER_ERROR_DUPLICATE_ID() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GtkBuilderError.GTK_BUILDER_ERROR_OBJECT_TYPE_REFUSED = 9;
     * }
     */
    public static int GTK_BUILDER_ERROR_OBJECT_TYPE_REFUSED() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum GtkBuilderError.GTK_BUILDER_ERROR_TEMPLATE_MISMATCH = 10;
     * }
     */
    public static int GTK_BUILDER_ERROR_TEMPLATE_MISMATCH() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum GtkBuilderError.GTK_BUILDER_ERROR_INVALID_PROPERTY = 11;
     * }
     */
    public static int GTK_BUILDER_ERROR_INVALID_PROPERTY() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum GtkBuilderError.GTK_BUILDER_ERROR_INVALID_SIGNAL = 12;
     * }
     */
    public static int GTK_BUILDER_ERROR_INVALID_SIGNAL() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum GtkBuilderError.GTK_BUILDER_ERROR_INVALID_ID = 13;
     * }
     */
    public static int GTK_BUILDER_ERROR_INVALID_ID() {
        return (int)13L;
    }
    public static MethodHandle gtk_builder_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$2539.const$3,"gtk_builder_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int gtk_builder_error_quark();
     * }
     */
    public static int gtk_builder_error_quark() {
        var mh$ = gtk_builder_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2543.const$2,"gtk_builder_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_builder_get_type();
     * }
     */
    public static long gtk_builder_get_type() {
        var mh$ = gtk_builder_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2543.const$3,"gtk_builder_new");
    }
    /**
     * {@snippet :
     * struct _GtkBuilder* gtk_builder_new();
     * }
     */
    public static MemorySegment gtk_builder_new() {
        var mh$ = gtk_builder_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2543.const$4,"gtk_builder_add_from_file");
    }
    /**
     * {@snippet :
     * unsigned int gtk_builder_add_from_file(struct _GtkBuilder* builder, char* filename, struct _GError** error);
     * }
     */
    public static int gtk_builder_add_from_file(MemorySegment builder, MemorySegment filename, MemorySegment error) {
        var mh$ = gtk_builder_add_from_file$MH();
        try {
            return (int)mh$.invokeExact(builder, filename, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$2543.const$5,"gtk_builder_add_from_resource");
    }
    /**
     * {@snippet :
     * unsigned int gtk_builder_add_from_resource(struct _GtkBuilder* builder, char* resource_path, struct _GError** error);
     * }
     */
    public static int gtk_builder_add_from_resource(MemorySegment builder, MemorySegment resource_path, MemorySegment error) {
        var mh$ = gtk_builder_add_from_resource$MH();
        try {
            return (int)mh$.invokeExact(builder, resource_path, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2544.const$0,"gtk_builder_add_from_string");
    }
    /**
     * {@snippet :
     * unsigned int gtk_builder_add_from_string(struct _GtkBuilder* builder, char* buffer, unsigned long length, struct _GError** error);
     * }
     */
    public static int gtk_builder_add_from_string(MemorySegment builder, MemorySegment buffer, long length, MemorySegment error) {
        var mh$ = gtk_builder_add_from_string$MH();
        try {
            return (int)mh$.invokeExact(builder, buffer, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_objects_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2544.const$1,"gtk_builder_add_objects_from_file");
    }
    /**
     * {@snippet :
     * unsigned int gtk_builder_add_objects_from_file(struct _GtkBuilder* builder, char* filename, char** object_ids, struct _GError** error);
     * }
     */
    public static int gtk_builder_add_objects_from_file(MemorySegment builder, MemorySegment filename, MemorySegment object_ids, MemorySegment error) {
        var mh$ = gtk_builder_add_objects_from_file$MH();
        try {
            return (int)mh$.invokeExact(builder, filename, object_ids, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_objects_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$2544.const$2,"gtk_builder_add_objects_from_resource");
    }
    /**
     * {@snippet :
     * unsigned int gtk_builder_add_objects_from_resource(struct _GtkBuilder* builder, char* resource_path, char** object_ids, struct _GError** error);
     * }
     */
    public static int gtk_builder_add_objects_from_resource(MemorySegment builder, MemorySegment resource_path, MemorySegment object_ids, MemorySegment error) {
        var mh$ = gtk_builder_add_objects_from_resource$MH();
        try {
            return (int)mh$.invokeExact(builder, resource_path, object_ids, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_objects_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2544.const$3,"gtk_builder_add_objects_from_string");
    }
    /**
     * {@snippet :
     * unsigned int gtk_builder_add_objects_from_string(struct _GtkBuilder* builder, char* buffer, unsigned long length, char** object_ids, struct _GError** error);
     * }
     */
    public static int gtk_builder_add_objects_from_string(MemorySegment builder, MemorySegment buffer, long length, MemorySegment object_ids, MemorySegment error) {
        var mh$ = gtk_builder_add_objects_from_string$MH();
        try {
            return (int)mh$.invokeExact(builder, buffer, length, object_ids, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_get_object$MH() {
        return RuntimeHelper.requireNonNull(constants$2544.const$4,"gtk_builder_get_object");
    }
    /**
     * {@snippet :
     * struct _GObject* gtk_builder_get_object(struct _GtkBuilder* builder, char* name);
     * }
     */
    public static MemorySegment gtk_builder_get_object(MemorySegment builder, MemorySegment name) {
        var mh$ = gtk_builder_get_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(builder, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_get_objects$MH() {
        return RuntimeHelper.requireNonNull(constants$2544.const$5,"gtk_builder_get_objects");
    }
    /**
     * {@snippet :
     * struct _GSList* gtk_builder_get_objects(struct _GtkBuilder* builder);
     * }
     */
    public static MemorySegment gtk_builder_get_objects(MemorySegment builder) {
        var mh$ = gtk_builder_get_objects$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_expose_object$MH() {
        return RuntimeHelper.requireNonNull(constants$2545.const$0,"gtk_builder_expose_object");
    }
    /**
     * {@snippet :
     * void gtk_builder_expose_object(struct _GtkBuilder* builder, char* name, struct _GObject* object);
     * }
     */
    public static void gtk_builder_expose_object(MemorySegment builder, MemorySegment name, MemorySegment object) {
        var mh$ = gtk_builder_expose_object$MH();
        try {
            mh$.invokeExact(builder, name, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_connect_signals$MH() {
        return RuntimeHelper.requireNonNull(constants$2545.const$1,"gtk_builder_connect_signals");
    }
    /**
     * {@snippet :
     * void gtk_builder_connect_signals(struct _GtkBuilder* builder, void* user_data);
     * }
     */
    public static void gtk_builder_connect_signals(MemorySegment builder, MemorySegment user_data) {
        var mh$ = gtk_builder_connect_signals$MH();
        try {
            mh$.invokeExact(builder, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_connect_signals_full$MH() {
        return RuntimeHelper.requireNonNull(constants$2545.const$3,"gtk_builder_connect_signals_full");
    }
    /**
     * {@snippet :
     * void gtk_builder_connect_signals_full(struct _GtkBuilder* builder, void (*func)(struct _GtkBuilder*,struct _GObject*,char*,char*,struct _GObject*,enum GConnectFlags,void*), void* user_data);
     * }
     */
    public static void gtk_builder_connect_signals_full(MemorySegment builder, MemorySegment func, MemorySegment user_data) {
        var mh$ = gtk_builder_connect_signals_full$MH();
        try {
            mh$.invokeExact(builder, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_set_translation_domain$MH() {
        return RuntimeHelper.requireNonNull(constants$2545.const$4,"gtk_builder_set_translation_domain");
    }
    /**
     * {@snippet :
     * void gtk_builder_set_translation_domain(struct _GtkBuilder* builder, char* domain);
     * }
     */
    public static void gtk_builder_set_translation_domain(MemorySegment builder, MemorySegment domain) {
        var mh$ = gtk_builder_set_translation_domain$MH();
        try {
            mh$.invokeExact(builder, domain);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_get_translation_domain$MH() {
        return RuntimeHelper.requireNonNull(constants$2545.const$5,"gtk_builder_get_translation_domain");
    }
    /**
     * {@snippet :
     * char* gtk_builder_get_translation_domain(struct _GtkBuilder* builder);
     * }
     */
    public static MemorySegment gtk_builder_get_translation_domain(MemorySegment builder) {
        var mh$ = gtk_builder_get_translation_domain$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_get_type_from_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2546.const$0,"gtk_builder_get_type_from_name");
    }
    /**
     * {@snippet :
     * unsigned long gtk_builder_get_type_from_name(struct _GtkBuilder* builder, char* type_name);
     * }
     */
    public static long gtk_builder_get_type_from_name(MemorySegment builder, MemorySegment type_name) {
        var mh$ = gtk_builder_get_type_from_name$MH();
        try {
            return (long)mh$.invokeExact(builder, type_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_value_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2546.const$1,"gtk_builder_value_from_string");
    }
    /**
     * {@snippet :
     * int gtk_builder_value_from_string(struct _GtkBuilder* builder, struct _GParamSpec* pspec, char* string, struct _GValue* value, struct _GError** error);
     * }
     */
    public static int gtk_builder_value_from_string(MemorySegment builder, MemorySegment pspec, MemorySegment string, MemorySegment value, MemorySegment error) {
        var mh$ = gtk_builder_value_from_string$MH();
        try {
            return (int)mh$.invokeExact(builder, pspec, string, value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_value_from_string_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2546.const$2,"gtk_builder_value_from_string_type");
    }
    /**
     * {@snippet :
     * int gtk_builder_value_from_string_type(struct _GtkBuilder* builder, unsigned long type, char* string, struct _GValue* value, struct _GError** error);
     * }
     */
    public static int gtk_builder_value_from_string_type(MemorySegment builder, long type, MemorySegment string, MemorySegment value, MemorySegment error) {
        var mh$ = gtk_builder_value_from_string_type$MH();
        try {
            return (int)mh$.invokeExact(builder, type, string, value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2546.const$3,"gtk_builder_new_from_file");
    }
    /**
     * {@snippet :
     * struct _GtkBuilder* gtk_builder_new_from_file(char* filename);
     * }
     */
    public static MemorySegment gtk_builder_new_from_file(MemorySegment filename) {
        var mh$ = gtk_builder_new_from_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_new_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$2546.const$4,"gtk_builder_new_from_resource");
    }
    /**
     * {@snippet :
     * struct _GtkBuilder* gtk_builder_new_from_resource(char* resource_path);
     * }
     */
    public static MemorySegment gtk_builder_new_from_resource(MemorySegment resource_path) {
        var mh$ = gtk_builder_new_from_resource$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_new_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2546.const$5,"gtk_builder_new_from_string");
    }
    /**
     * {@snippet :
     * struct _GtkBuilder* gtk_builder_new_from_string(char* string, long length);
     * }
     */
    public static MemorySegment gtk_builder_new_from_string(MemorySegment string, long length) {
        var mh$ = gtk_builder_new_from_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_callback_symbol$MH() {
        return RuntimeHelper.requireNonNull(constants$2547.const$1,"gtk_builder_add_callback_symbol");
    }
    /**
     * {@snippet :
     * void gtk_builder_add_callback_symbol(struct _GtkBuilder* builder, char* callback_name, void (*callback_symbol)());
     * }
     */
    public static void gtk_builder_add_callback_symbol(MemorySegment builder, MemorySegment callback_name, MemorySegment callback_symbol) {
        var mh$ = gtk_builder_add_callback_symbol$MH();
        try {
            mh$.invokeExact(builder, callback_name, callback_symbol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_callback_symbols$MH() {
        return RuntimeHelper.requireNonNull(constants$2547.const$3,"gtk_builder_add_callback_symbols");
    }
    /**
     * {@snippet :
     * void gtk_builder_add_callback_symbols(struct _GtkBuilder* builder, char* first_callback_name, void (*first_callback_symbol)(),...);
     * }
     */
    public static void gtk_builder_add_callback_symbols(MemorySegment builder, MemorySegment first_callback_name, MemorySegment first_callback_symbol, Object... x3) {
        var mh$ = gtk_builder_add_callback_symbols$MH();
        try {
            mh$.invokeExact(builder, first_callback_name, first_callback_symbol, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_lookup_callback_symbol$MH() {
        return RuntimeHelper.requireNonNull(constants$2547.const$5,"gtk_builder_lookup_callback_symbol");
    }
    /**
     * {@snippet :
     * void (*gtk_builder_lookup_callback_symbol(struct _GtkBuilder* builder, char* callback_name))();
     * }
     */
    public static MemorySegment gtk_builder_lookup_callback_symbol(MemorySegment builder, MemorySegment callback_name) {
        var mh$ = gtk_builder_lookup_callback_symbol$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(builder, callback_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_set_application$MH() {
        return RuntimeHelper.requireNonNull(constants$2548.const$0,"gtk_builder_set_application");
    }
    /**
     * {@snippet :
     * void gtk_builder_set_application(struct _GtkBuilder* builder, struct _GtkApplication* application);
     * }
     */
    public static void gtk_builder_set_application(MemorySegment builder, MemorySegment application) {
        var mh$ = gtk_builder_set_application$MH();
        try {
            mh$.invokeExact(builder, application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_get_application$MH() {
        return RuntimeHelper.requireNonNull(constants$2548.const$1,"gtk_builder_get_application");
    }
    /**
     * {@snippet :
     * struct _GtkApplication* gtk_builder_get_application(struct _GtkBuilder* builder);
     * }
     */
    public static MemorySegment gtk_builder_get_application(MemorySegment builder) {
        var mh$ = gtk_builder_get_application$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_extend_with_template$MH() {
        return RuntimeHelper.requireNonNull(constants$2548.const$3,"gtk_builder_extend_with_template");
    }
    /**
     * {@snippet :
     * unsigned int gtk_builder_extend_with_template(struct _GtkBuilder* builder, struct _GtkWidget* widget, unsigned long template_type, char* buffer, unsigned long length, struct _GError** error);
     * }
     */
    public static int gtk_builder_extend_with_template(MemorySegment builder, MemorySegment widget, long template_type, MemorySegment buffer, long length, MemorySegment error) {
        var mh$ = gtk_builder_extend_with_template$MH();
        try {
            return (int)mh$.invokeExact(builder, widget, template_type, buffer, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2552.const$1,"gtk_buildable_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_buildable_get_type();
     * }
     */
    public static long gtk_buildable_get_type() {
        var mh$ = gtk_buildable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2552.const$2,"gtk_buildable_set_name");
    }
    /**
     * {@snippet :
     * void gtk_buildable_set_name(struct _GtkBuildable* buildable, char* name);
     * }
     */
    public static void gtk_buildable_set_name(MemorySegment buildable, MemorySegment name) {
        var mh$ = gtk_buildable_set_name$MH();
        try {
            mh$.invokeExact(buildable, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2552.const$3,"gtk_buildable_get_name");
    }
    /**
     * {@snippet :
     * char* gtk_buildable_get_name(struct _GtkBuildable* buildable);
     * }
     */
    public static MemorySegment gtk_buildable_get_name(MemorySegment buildable) {
        var mh$ = gtk_buildable_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buildable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_add_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2552.const$4,"gtk_buildable_add_child");
    }
    /**
     * {@snippet :
     * void gtk_buildable_add_child(struct _GtkBuildable* buildable, struct _GtkBuilder* builder, struct _GObject* child, char* type);
     * }
     */
    public static void gtk_buildable_add_child(MemorySegment buildable, MemorySegment builder, MemorySegment child, MemorySegment type) {
        var mh$ = gtk_buildable_add_child$MH();
        try {
            mh$.invokeExact(buildable, builder, child, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_set_buildable_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2552.const$5,"gtk_buildable_set_buildable_property");
    }
    /**
     * {@snippet :
     * void gtk_buildable_set_buildable_property(struct _GtkBuildable* buildable, struct _GtkBuilder* builder, char* name, struct _GValue* value);
     * }
     */
    public static void gtk_buildable_set_buildable_property(MemorySegment buildable, MemorySegment builder, MemorySegment name, MemorySegment value) {
        var mh$ = gtk_buildable_set_buildable_property$MH();
        try {
            mh$.invokeExact(buildable, builder, name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_construct_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2553.const$0,"gtk_buildable_construct_child");
    }
    /**
     * {@snippet :
     * struct _GObject* gtk_buildable_construct_child(struct _GtkBuildable* buildable, struct _GtkBuilder* builder, char* name);
     * }
     */
    public static MemorySegment gtk_buildable_construct_child(MemorySegment buildable, MemorySegment builder, MemorySegment name) {
        var mh$ = gtk_buildable_construct_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buildable, builder, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_custom_tag_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2553.const$1,"gtk_buildable_custom_tag_start");
    }
    /**
     * {@snippet :
     * int gtk_buildable_custom_tag_start(struct _GtkBuildable* buildable, struct _GtkBuilder* builder, struct _GObject* child, char* tagname, struct _GMarkupParser* parser, void** data);
     * }
     */
    public static int gtk_buildable_custom_tag_start(MemorySegment buildable, MemorySegment builder, MemorySegment child, MemorySegment tagname, MemorySegment parser, MemorySegment data) {
        var mh$ = gtk_buildable_custom_tag_start$MH();
        try {
            return (int)mh$.invokeExact(buildable, builder, child, tagname, parser, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_custom_tag_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2553.const$2,"gtk_buildable_custom_tag_end");
    }
    /**
     * {@snippet :
     * void gtk_buildable_custom_tag_end(struct _GtkBuildable* buildable, struct _GtkBuilder* builder, struct _GObject* child, char* tagname, void** data);
     * }
     */
    public static void gtk_buildable_custom_tag_end(MemorySegment buildable, MemorySegment builder, MemorySegment child, MemorySegment tagname, MemorySegment data) {
        var mh$ = gtk_buildable_custom_tag_end$MH();
        try {
            mh$.invokeExact(buildable, builder, child, tagname, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_custom_finished$MH() {
        return RuntimeHelper.requireNonNull(constants$2553.const$3,"gtk_buildable_custom_finished");
    }
    /**
     * {@snippet :
     * void gtk_buildable_custom_finished(struct _GtkBuildable* buildable, struct _GtkBuilder* builder, struct _GObject* child, char* tagname, void* data);
     * }
     */
    public static void gtk_buildable_custom_finished(MemorySegment buildable, MemorySegment builder, MemorySegment child, MemorySegment tagname, MemorySegment data) {
        var mh$ = gtk_buildable_custom_finished$MH();
        try {
            mh$.invokeExact(buildable, builder, child, tagname, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_parser_finished$MH() {
        return RuntimeHelper.requireNonNull(constants$2553.const$4,"gtk_buildable_parser_finished");
    }
    /**
     * {@snippet :
     * void gtk_buildable_parser_finished(struct _GtkBuildable* buildable, struct _GtkBuilder* builder);
     * }
     */
    public static void gtk_buildable_parser_finished(MemorySegment buildable, MemorySegment builder) {
        var mh$ = gtk_buildable_parser_finished$MH();
        try {
            mh$.invokeExact(buildable, builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_get_internal_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2553.const$5,"gtk_buildable_get_internal_child");
    }
    /**
     * {@snippet :
     * struct _GObject* gtk_buildable_get_internal_child(struct _GtkBuildable* buildable, struct _GtkBuilder* builder, char* childname);
     * }
     */
    public static MemorySegment gtk_buildable_get_internal_child(MemorySegment buildable, MemorySegment builder, MemorySegment childname) {
        var mh$ = gtk_buildable_get_internal_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buildable, builder, childname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2557.const$5,"gtk_button_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_button_get_type();
     * }
     */
    public static long gtk_button_get_type() {
        var mh$ = gtk_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2558.const$0,"gtk_button_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_button_new();
     * }
     */
    public static MemorySegment gtk_button_new() {
        var mh$ = gtk_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_new_with_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2558.const$1,"gtk_button_new_with_label");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_button_new_with_label(char* label);
     * }
     */
    public static MemorySegment gtk_button_new_with_label(MemorySegment label) {
        var mh$ = gtk_button_new_with_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_new_from_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2558.const$2,"gtk_button_new_from_icon_name");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_button_new_from_icon_name(char* icon_name, enum GtkIconSize size);
     * }
     */
    public static MemorySegment gtk_button_new_from_icon_name(MemorySegment icon_name, int size) {
        var mh$ = gtk_button_new_from_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_name, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_new_from_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$2558.const$3,"gtk_button_new_from_stock");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_button_new_from_stock(char* stock_id);
     * }
     */
    public static MemorySegment gtk_button_new_from_stock(MemorySegment stock_id) {
        var mh$ = gtk_button_new_from_stock$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$2558.const$4,"gtk_button_new_with_mnemonic");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_button_new_with_mnemonic(char* label);
     * }
     */
    public static MemorySegment gtk_button_new_with_mnemonic(MemorySegment label) {
        var mh$ = gtk_button_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_clicked$MH() {
        return RuntimeHelper.requireNonNull(constants$2558.const$5,"gtk_button_clicked");
    }
    /**
     * {@snippet :
     * void gtk_button_clicked(struct _GtkButton* button);
     * }
     */
    public static void gtk_button_clicked(MemorySegment button) {
        var mh$ = gtk_button_clicked$MH();
        try {
            mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_pressed$MH() {
        return RuntimeHelper.requireNonNull(constants$2559.const$0,"gtk_button_pressed");
    }
    /**
     * {@snippet :
     * void gtk_button_pressed(struct _GtkButton* button);
     * }
     */
    public static void gtk_button_pressed(MemorySegment button) {
        var mh$ = gtk_button_pressed$MH();
        try {
            mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_released$MH() {
        return RuntimeHelper.requireNonNull(constants$2559.const$1,"gtk_button_released");
    }
    /**
     * {@snippet :
     * void gtk_button_released(struct _GtkButton* button);
     * }
     */
    public static void gtk_button_released(MemorySegment button) {
        var mh$ = gtk_button_released$MH();
        try {
            mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_enter$MH() {
        return RuntimeHelper.requireNonNull(constants$2559.const$2,"gtk_button_enter");
    }
    /**
     * {@snippet :
     * void gtk_button_enter(struct _GtkButton* button);
     * }
     */
    public static void gtk_button_enter(MemorySegment button) {
        var mh$ = gtk_button_enter$MH();
        try {
            mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_leave$MH() {
        return RuntimeHelper.requireNonNull(constants$2559.const$3,"gtk_button_leave");
    }
    /**
     * {@snippet :
     * void gtk_button_leave(struct _GtkButton* button);
     * }
     */
    public static void gtk_button_leave(MemorySegment button) {
        var mh$ = gtk_button_leave$MH();
        try {
            mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_relief$MH() {
        return RuntimeHelper.requireNonNull(constants$2559.const$4,"gtk_button_set_relief");
    }
    /**
     * {@snippet :
     * void gtk_button_set_relief(struct _GtkButton* button, enum GtkReliefStyle relief);
     * }
     */
    public static void gtk_button_set_relief(MemorySegment button, int relief) {
        var mh$ = gtk_button_set_relief$MH();
        try {
            mh$.invokeExact(button, relief);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_relief$MH() {
        return RuntimeHelper.requireNonNull(constants$2559.const$5,"gtk_button_get_relief");
    }
    /**
     * {@snippet :
     * enum GtkReliefStyle gtk_button_get_relief(struct _GtkButton* button);
     * }
     */
    public static int gtk_button_get_relief(MemorySegment button) {
        var mh$ = gtk_button_get_relief$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2560.const$0,"gtk_button_set_label");
    }
    /**
     * {@snippet :
     * void gtk_button_set_label(struct _GtkButton* button, char* label);
     * }
     */
    public static void gtk_button_set_label(MemorySegment button, MemorySegment label) {
        var mh$ = gtk_button_set_label$MH();
        try {
            mh$.invokeExact(button, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2560.const$1,"gtk_button_get_label");
    }
    /**
     * {@snippet :
     * char* gtk_button_get_label(struct _GtkButton* button);
     * }
     */
    public static MemorySegment gtk_button_get_label(MemorySegment button) {
        var mh$ = gtk_button_get_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$2560.const$2,"gtk_button_set_use_underline");
    }
    /**
     * {@snippet :
     * void gtk_button_set_use_underline(struct _GtkButton* button, int use_underline);
     * }
     */
    public static void gtk_button_set_use_underline(MemorySegment button, int use_underline) {
        var mh$ = gtk_button_set_use_underline$MH();
        try {
            mh$.invokeExact(button, use_underline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$2560.const$3,"gtk_button_get_use_underline");
    }
    /**
     * {@snippet :
     * int gtk_button_get_use_underline(struct _GtkButton* button);
     * }
     */
    public static int gtk_button_get_use_underline(MemorySegment button) {
        var mh$ = gtk_button_get_use_underline$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_use_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$2560.const$4,"gtk_button_set_use_stock");
    }
    /**
     * {@snippet :
     * void gtk_button_set_use_stock(struct _GtkButton* button, int use_stock);
     * }
     */
    public static void gtk_button_set_use_stock(MemorySegment button, int use_stock) {
        var mh$ = gtk_button_set_use_stock$MH();
        try {
            mh$.invokeExact(button, use_stock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_use_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$2560.const$5,"gtk_button_get_use_stock");
    }
    /**
     * {@snippet :
     * int gtk_button_get_use_stock(struct _GtkButton* button);
     * }
     */
    public static int gtk_button_get_use_stock(MemorySegment button) {
        var mh$ = gtk_button_get_use_stock$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2561.const$0,"gtk_button_set_focus_on_click");
    }
    /**
     * {@snippet :
     * void gtk_button_set_focus_on_click(struct _GtkButton* button, int focus_on_click);
     * }
     */
    public static void gtk_button_set_focus_on_click(MemorySegment button, int focus_on_click) {
        var mh$ = gtk_button_set_focus_on_click$MH();
        try {
            mh$.invokeExact(button, focus_on_click);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2561.const$1,"gtk_button_get_focus_on_click");
    }
    /**
     * {@snippet :
     * int gtk_button_get_focus_on_click(struct _GtkButton* button);
     * }
     */
    public static int gtk_button_get_focus_on_click(MemorySegment button) {
        var mh$ = gtk_button_get_focus_on_click$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$2561.const$2,"gtk_button_set_alignment");
    }
    /**
     * {@snippet :
     * void gtk_button_set_alignment(struct _GtkButton* button, float xalign, float yalign);
     * }
     */
    public static void gtk_button_set_alignment(MemorySegment button, float xalign, float yalign) {
        var mh$ = gtk_button_set_alignment$MH();
        try {
            mh$.invokeExact(button, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$2561.const$3,"gtk_button_get_alignment");
    }
    /**
     * {@snippet :
     * void gtk_button_get_alignment(struct _GtkButton* button, float* xalign, float* yalign);
     * }
     */
    public static void gtk_button_get_alignment(MemorySegment button, MemorySegment xalign, MemorySegment yalign) {
        var mh$ = gtk_button_get_alignment$MH();
        try {
            mh$.invokeExact(button, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_image$MH() {
        return RuntimeHelper.requireNonNull(constants$2561.const$4,"gtk_button_set_image");
    }
    /**
     * {@snippet :
     * void gtk_button_set_image(struct _GtkButton* button, struct _GtkWidget* image);
     * }
     */
    public static void gtk_button_set_image(MemorySegment button, MemorySegment image) {
        var mh$ = gtk_button_set_image$MH();
        try {
            mh$.invokeExact(button, image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_image$MH() {
        return RuntimeHelper.requireNonNull(constants$2561.const$5,"gtk_button_get_image");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_button_get_image(struct _GtkButton* button);
     * }
     */
    public static MemorySegment gtk_button_get_image(MemorySegment button) {
        var mh$ = gtk_button_get_image$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_image_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2562.const$0,"gtk_button_set_image_position");
    }
    /**
     * {@snippet :
     * void gtk_button_set_image_position(struct _GtkButton* button, enum GtkPositionType position);
     * }
     */
    public static void gtk_button_set_image_position(MemorySegment button, int position) {
        var mh$ = gtk_button_set_image_position$MH();
        try {
            mh$.invokeExact(button, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_image_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2562.const$1,"gtk_button_get_image_position");
    }
    /**
     * {@snippet :
     * enum GtkPositionType gtk_button_get_image_position(struct _GtkButton* button);
     * }
     */
    public static int gtk_button_get_image_position(MemorySegment button) {
        var mh$ = gtk_button_get_image_position$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_always_show_image$MH() {
        return RuntimeHelper.requireNonNull(constants$2562.const$2,"gtk_button_set_always_show_image");
    }
    /**
     * {@snippet :
     * void gtk_button_set_always_show_image(struct _GtkButton* button, int always_show);
     * }
     */
    public static void gtk_button_set_always_show_image(MemorySegment button, int always_show) {
        var mh$ = gtk_button_set_always_show_image$MH();
        try {
            mh$.invokeExact(button, always_show);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_always_show_image$MH() {
        return RuntimeHelper.requireNonNull(constants$2562.const$3,"gtk_button_get_always_show_image");
    }
    /**
     * {@snippet :
     * int gtk_button_get_always_show_image(struct _GtkButton* button);
     * }
     */
    public static int gtk_button_get_always_show_image(MemorySegment button) {
        var mh$ = gtk_button_get_always_show_image$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_event_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2562.const$4,"gtk_button_get_event_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gtk_button_get_event_window(struct _GtkButton* button);
     * }
     */
    public static MemorySegment gtk_button_get_event_window(MemorySegment button) {
        var mh$ = gtk_button_get_event_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkCalendarDisplayOptions.GTK_CALENDAR_SHOW_HEADING = 1;
     * }
     */
    public static int GTK_CALENDAR_SHOW_HEADING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkCalendarDisplayOptions.GTK_CALENDAR_SHOW_DAY_NAMES = 2;
     * }
     */
    public static int GTK_CALENDAR_SHOW_DAY_NAMES() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkCalendarDisplayOptions.GTK_CALENDAR_NO_MONTH_CHANGE = 4;
     * }
     */
    public static int GTK_CALENDAR_NO_MONTH_CHANGE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkCalendarDisplayOptions.GTK_CALENDAR_SHOW_WEEK_NUMBERS = 8;
     * }
     */
    public static int GTK_CALENDAR_SHOW_WEEK_NUMBERS() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GtkCalendarDisplayOptions.GTK_CALENDAR_SHOW_DETAILS = 32;
     * }
     */
    public static int GTK_CALENDAR_SHOW_DETAILS() {
        return (int)32L;
    }
    public static MethodHandle gtk_calendar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2567.const$2,"gtk_calendar_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_calendar_get_type();
     * }
     */
    public static long gtk_calendar_get_type() {
        var mh$ = gtk_calendar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2567.const$3,"gtk_calendar_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_calendar_new();
     * }
     */
    public static MemorySegment gtk_calendar_new() {
        var mh$ = gtk_calendar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_select_month$MH() {
        return RuntimeHelper.requireNonNull(constants$2567.const$4,"gtk_calendar_select_month");
    }
    /**
     * {@snippet :
     * void gtk_calendar_select_month(struct _GtkCalendar* calendar, unsigned int month, unsigned int year);
     * }
     */
    public static void gtk_calendar_select_month(MemorySegment calendar, int month, int year) {
        var mh$ = gtk_calendar_select_month$MH();
        try {
            mh$.invokeExact(calendar, month, year);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_select_day$MH() {
        return RuntimeHelper.requireNonNull(constants$2567.const$5,"gtk_calendar_select_day");
    }
    /**
     * {@snippet :
     * void gtk_calendar_select_day(struct _GtkCalendar* calendar, unsigned int day);
     * }
     */
    public static void gtk_calendar_select_day(MemorySegment calendar, int day) {
        var mh$ = gtk_calendar_select_day$MH();
        try {
            mh$.invokeExact(calendar, day);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_mark_day$MH() {
        return RuntimeHelper.requireNonNull(constants$2568.const$0,"gtk_calendar_mark_day");
    }
    /**
     * {@snippet :
     * void gtk_calendar_mark_day(struct _GtkCalendar* calendar, unsigned int day);
     * }
     */
    public static void gtk_calendar_mark_day(MemorySegment calendar, int day) {
        var mh$ = gtk_calendar_mark_day$MH();
        try {
            mh$.invokeExact(calendar, day);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_unmark_day$MH() {
        return RuntimeHelper.requireNonNull(constants$2568.const$1,"gtk_calendar_unmark_day");
    }
    /**
     * {@snippet :
     * void gtk_calendar_unmark_day(struct _GtkCalendar* calendar, unsigned int day);
     * }
     */
    public static void gtk_calendar_unmark_day(MemorySegment calendar, int day) {
        var mh$ = gtk_calendar_unmark_day$MH();
        try {
            mh$.invokeExact(calendar, day);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_clear_marks$MH() {
        return RuntimeHelper.requireNonNull(constants$2568.const$2,"gtk_calendar_clear_marks");
    }
    /**
     * {@snippet :
     * void gtk_calendar_clear_marks(struct _GtkCalendar* calendar);
     * }
     */
    public static void gtk_calendar_clear_marks(MemorySegment calendar) {
        var mh$ = gtk_calendar_clear_marks$MH();
        try {
            mh$.invokeExact(calendar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_set_display_options$MH() {
        return RuntimeHelper.requireNonNull(constants$2568.const$3,"gtk_calendar_set_display_options");
    }
    /**
     * {@snippet :
     * void gtk_calendar_set_display_options(struct _GtkCalendar* calendar, enum GtkCalendarDisplayOptions flags);
     * }
     */
    public static void gtk_calendar_set_display_options(MemorySegment calendar, int flags) {
        var mh$ = gtk_calendar_set_display_options$MH();
        try {
            mh$.invokeExact(calendar, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_get_display_options$MH() {
        return RuntimeHelper.requireNonNull(constants$2568.const$4,"gtk_calendar_get_display_options");
    }
    /**
     * {@snippet :
     * enum GtkCalendarDisplayOptions gtk_calendar_get_display_options(struct _GtkCalendar* calendar);
     * }
     */
    public static int gtk_calendar_get_display_options(MemorySegment calendar) {
        var mh$ = gtk_calendar_get_display_options$MH();
        try {
            return (int)mh$.invokeExact(calendar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_get_date$MH() {
        return RuntimeHelper.requireNonNull(constants$2568.const$5,"gtk_calendar_get_date");
    }
    /**
     * {@snippet :
     * void gtk_calendar_get_date(struct _GtkCalendar* calendar, unsigned int* year, unsigned int* month, unsigned int* day);
     * }
     */
    public static void gtk_calendar_get_date(MemorySegment calendar, MemorySegment year, MemorySegment month, MemorySegment day) {
        var mh$ = gtk_calendar_get_date$MH();
        try {
            mh$.invokeExact(calendar, year, month, day);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_set_detail_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2569.const$2,"gtk_calendar_set_detail_func");
    }
    /**
     * {@snippet :
     * void gtk_calendar_set_detail_func(struct _GtkCalendar* calendar, char* (*func)(struct _GtkCalendar*,unsigned int,unsigned int,unsigned int,void*), void* data, void (*destroy)(void*));
     * }
     */
    public static void gtk_calendar_set_detail_func(MemorySegment calendar, MemorySegment func, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_calendar_set_detail_func$MH();
        try {
            mh$.invokeExact(calendar, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_set_detail_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$2569.const$3,"gtk_calendar_set_detail_width_chars");
    }
    /**
     * {@snippet :
     * void gtk_calendar_set_detail_width_chars(struct _GtkCalendar* calendar, int chars);
     * }
     */
    public static void gtk_calendar_set_detail_width_chars(MemorySegment calendar, int chars) {
        var mh$ = gtk_calendar_set_detail_width_chars$MH();
        try {
            mh$.invokeExact(calendar, chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_set_detail_height_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$2569.const$4,"gtk_calendar_set_detail_height_rows");
    }
    /**
     * {@snippet :
     * void gtk_calendar_set_detail_height_rows(struct _GtkCalendar* calendar, int rows);
     * }
     */
    public static void gtk_calendar_set_detail_height_rows(MemorySegment calendar, int rows) {
        var mh$ = gtk_calendar_set_detail_height_rows$MH();
        try {
            mh$.invokeExact(calendar, rows);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_get_detail_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$2569.const$5,"gtk_calendar_get_detail_width_chars");
    }
    /**
     * {@snippet :
     * int gtk_calendar_get_detail_width_chars(struct _GtkCalendar* calendar);
     * }
     */
    public static int gtk_calendar_get_detail_width_chars(MemorySegment calendar) {
        var mh$ = gtk_calendar_get_detail_width_chars$MH();
        try {
            return (int)mh$.invokeExact(calendar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_get_detail_height_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$2570.const$0,"gtk_calendar_get_detail_height_rows");
    }
    /**
     * {@snippet :
     * int gtk_calendar_get_detail_height_rows(struct _GtkCalendar* calendar);
     * }
     */
    public static int gtk_calendar_get_detail_height_rows(MemorySegment calendar) {
        var mh$ = gtk_calendar_get_detail_height_rows$MH();
        try {
            return (int)mh$.invokeExact(calendar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_get_day_is_marked$MH() {
        return RuntimeHelper.requireNonNull(constants$2570.const$1,"gtk_calendar_get_day_is_marked");
    }
    /**
     * {@snippet :
     * int gtk_calendar_get_day_is_marked(struct _GtkCalendar* calendar, unsigned int day);
     * }
     */
    public static int gtk_calendar_get_day_is_marked(MemorySegment calendar, int day) {
        var mh$ = gtk_calendar_get_day_is_marked$MH();
        try {
            return (int)mh$.invokeExact(calendar, day);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2572.const$1,"gtk_cell_area_box_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_cell_area_box_get_type();
     * }
     */
    public static long gtk_cell_area_box_get_type() {
        var mh$ = gtk_cell_area_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2572.const$2,"gtk_cell_area_box_new");
    }
    /**
     * {@snippet :
     * struct _GtkCellArea* gtk_cell_area_box_new();
     * }
     */
    public static MemorySegment gtk_cell_area_box_new() {
        var mh$ = gtk_cell_area_box_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_box_pack_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2572.const$3,"gtk_cell_area_box_pack_start");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_box_pack_start(struct _GtkCellAreaBox* box, struct _GtkCellRenderer* renderer, int expand, int align, int fixed);
     * }
     */
    public static void gtk_cell_area_box_pack_start(MemorySegment box, MemorySegment renderer, int expand, int align, int fixed) {
        var mh$ = gtk_cell_area_box_pack_start$MH();
        try {
            mh$.invokeExact(box, renderer, expand, align, fixed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_box_pack_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2572.const$4,"gtk_cell_area_box_pack_end");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_box_pack_end(struct _GtkCellAreaBox* box, struct _GtkCellRenderer* renderer, int expand, int align, int fixed);
     * }
     */
    public static void gtk_cell_area_box_pack_end(MemorySegment box, MemorySegment renderer, int expand, int align, int fixed) {
        var mh$ = gtk_cell_area_box_pack_end$MH();
        try {
            mh$.invokeExact(box, renderer, expand, align, fixed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_box_get_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2572.const$5,"gtk_cell_area_box_get_spacing");
    }
    /**
     * {@snippet :
     * int gtk_cell_area_box_get_spacing(struct _GtkCellAreaBox* box);
     * }
     */
    public static int gtk_cell_area_box_get_spacing(MemorySegment box) {
        var mh$ = gtk_cell_area_box_get_spacing$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_box_set_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2573.const$0,"gtk_cell_area_box_set_spacing");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_box_set_spacing(struct _GtkCellAreaBox* box, int spacing);
     * }
     */
    public static void gtk_cell_area_box_set_spacing(MemorySegment box, int spacing) {
        var mh$ = gtk_cell_area_box_set_spacing$MH();
        try {
            mh$.invokeExact(box, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_cell_area_box_group_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2573.const$1,"_gtk_cell_area_box_group_visible");
    }
    /**
     * {@snippet :
     * int _gtk_cell_area_box_group_visible(struct _GtkCellAreaBox* box, int group_idx);
     * }
     */
    public static int _gtk_cell_area_box_group_visible(MemorySegment box, int group_idx) {
        var mh$ = _gtk_cell_area_box_group_visible$MH();
        try {
            return (int)mh$.invokeExact(box, group_idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2577.const$1,"gtk_cell_area_context_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_cell_area_context_get_type();
     * }
     */
    public static long gtk_cell_area_context_get_type() {
        var mh$ = gtk_cell_area_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2577.const$2,"gtk_cell_area_context_get_area");
    }
    /**
     * {@snippet :
     * struct _GtkCellArea* gtk_cell_area_context_get_area(struct _GtkCellAreaContext* context);
     * }
     */
    public static MemorySegment gtk_cell_area_context_get_area(MemorySegment context) {
        var mh$ = gtk_cell_area_context_get_area$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$2577.const$3,"gtk_cell_area_context_allocate");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_context_allocate(struct _GtkCellAreaContext* context, int width, int height);
     * }
     */
    public static void gtk_cell_area_context_allocate(MemorySegment context, int width, int height) {
        var mh$ = gtk_cell_area_context_allocate$MH();
        try {
            mh$.invokeExact(context, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$2577.const$4,"gtk_cell_area_context_reset");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_context_reset(struct _GtkCellAreaContext* context);
     * }
     */
    public static void gtk_cell_area_context_reset(MemorySegment context) {
        var mh$ = gtk_cell_area_context_reset$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_preferred_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2577.const$5,"gtk_cell_area_context_get_preferred_width");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_context_get_preferred_width(struct _GtkCellAreaContext* context, int* minimum_width, int* natural_width);
     * }
     */
    public static void gtk_cell_area_context_get_preferred_width(MemorySegment context, MemorySegment minimum_width, MemorySegment natural_width) {
        var mh$ = gtk_cell_area_context_get_preferred_width$MH();
        try {
            mh$.invokeExact(context, minimum_width, natural_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_preferred_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2578.const$0,"gtk_cell_area_context_get_preferred_height");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_context_get_preferred_height(struct _GtkCellAreaContext* context, int* minimum_height, int* natural_height);
     * }
     */
    public static void gtk_cell_area_context_get_preferred_height(MemorySegment context, MemorySegment minimum_height, MemorySegment natural_height) {
        var mh$ = gtk_cell_area_context_get_preferred_height$MH();
        try {
            mh$.invokeExact(context, minimum_height, natural_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_preferred_height_for_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2578.const$1,"gtk_cell_area_context_get_preferred_height_for_width");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_context_get_preferred_height_for_width(struct _GtkCellAreaContext* context, int width, int* minimum_height, int* natural_height);
     * }
     */
    public static void gtk_cell_area_context_get_preferred_height_for_width(MemorySegment context, int width, MemorySegment minimum_height, MemorySegment natural_height) {
        var mh$ = gtk_cell_area_context_get_preferred_height_for_width$MH();
        try {
            mh$.invokeExact(context, width, minimum_height, natural_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_preferred_width_for_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2578.const$2,"gtk_cell_area_context_get_preferred_width_for_height");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_context_get_preferred_width_for_height(struct _GtkCellAreaContext* context, int height, int* minimum_width, int* natural_width);
     * }
     */
    public static void gtk_cell_area_context_get_preferred_width_for_height(MemorySegment context, int height, MemorySegment minimum_width, MemorySegment natural_width) {
        var mh$ = gtk_cell_area_context_get_preferred_width_for_height$MH();
        try {
            mh$.invokeExact(context, height, minimum_width, natural_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_allocation$MH() {
        return RuntimeHelper.requireNonNull(constants$2578.const$3,"gtk_cell_area_context_get_allocation");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_context_get_allocation(struct _GtkCellAreaContext* context, int* width, int* height);
     * }
     */
    public static void gtk_cell_area_context_get_allocation(MemorySegment context, MemorySegment width, MemorySegment height) {
        var mh$ = gtk_cell_area_context_get_allocation$MH();
        try {
            mh$.invokeExact(context, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_push_preferred_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2578.const$4,"gtk_cell_area_context_push_preferred_width");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_context_push_preferred_width(struct _GtkCellAreaContext* context, int minimum_width, int natural_width);
     * }
     */
    public static void gtk_cell_area_context_push_preferred_width(MemorySegment context, int minimum_width, int natural_width) {
        var mh$ = gtk_cell_area_context_push_preferred_width$MH();
        try {
            mh$.invokeExact(context, minimum_width, natural_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_push_preferred_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2578.const$5,"gtk_cell_area_context_push_preferred_height");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_context_push_preferred_height(struct _GtkCellAreaContext* context, int minimum_height, int natural_height);
     * }
     */
    public static void gtk_cell_area_context_push_preferred_height(MemorySegment context, int minimum_height, int natural_height) {
        var mh$ = gtk_cell_area_context_push_preferred_height$MH();
        try {
            mh$.invokeExact(context, minimum_height, natural_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2582.const$2,"gtk_cell_layout_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_cell_layout_get_type();
     * }
     */
    public static long gtk_cell_layout_get_type() {
        var mh$ = gtk_cell_layout_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_pack_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2582.const$3,"gtk_cell_layout_pack_start");
    }
    /**
     * {@snippet :
     * void gtk_cell_layout_pack_start(struct _GtkCellLayout* cell_layout, struct _GtkCellRenderer* cell, int expand);
     * }
     */
    public static void gtk_cell_layout_pack_start(MemorySegment cell_layout, MemorySegment cell, int expand) {
        var mh$ = gtk_cell_layout_pack_start$MH();
        try {
            mh$.invokeExact(cell_layout, cell, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_pack_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2582.const$4,"gtk_cell_layout_pack_end");
    }
    /**
     * {@snippet :
     * void gtk_cell_layout_pack_end(struct _GtkCellLayout* cell_layout, struct _GtkCellRenderer* cell, int expand);
     * }
     */
    public static void gtk_cell_layout_pack_end(MemorySegment cell_layout, MemorySegment cell, int expand) {
        var mh$ = gtk_cell_layout_pack_end$MH();
        try {
            mh$.invokeExact(cell_layout, cell, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_get_cells$MH() {
        return RuntimeHelper.requireNonNull(constants$2582.const$5,"gtk_cell_layout_get_cells");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_cell_layout_get_cells(struct _GtkCellLayout* cell_layout);
     * }
     */
    public static MemorySegment gtk_cell_layout_get_cells(MemorySegment cell_layout) {
        var mh$ = gtk_cell_layout_get_cells$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cell_layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$2583.const$0,"gtk_cell_layout_clear");
    }
    /**
     * {@snippet :
     * void gtk_cell_layout_clear(struct _GtkCellLayout* cell_layout);
     * }
     */
    public static void gtk_cell_layout_clear(MemorySegment cell_layout) {
        var mh$ = gtk_cell_layout_clear$MH();
        try {
            mh$.invokeExact(cell_layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_set_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2583.const$1,"gtk_cell_layout_set_attributes");
    }
    /**
     * {@snippet :
     * void gtk_cell_layout_set_attributes(struct _GtkCellLayout* cell_layout, struct _GtkCellRenderer* cell,...);
     * }
     */
    public static void gtk_cell_layout_set_attributes(MemorySegment cell_layout, MemorySegment cell, Object... x2) {
        var mh$ = gtk_cell_layout_set_attributes$MH();
        try {
            mh$.invokeExact(cell_layout, cell, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_add_attribute$MH() {
        return RuntimeHelper.requireNonNull(constants$2583.const$2,"gtk_cell_layout_add_attribute");
    }
    /**
     * {@snippet :
     * void gtk_cell_layout_add_attribute(struct _GtkCellLayout* cell_layout, struct _GtkCellRenderer* cell, char* attribute, int column);
     * }
     */
    public static void gtk_cell_layout_add_attribute(MemorySegment cell_layout, MemorySegment cell, MemorySegment attribute, int column) {
        var mh$ = gtk_cell_layout_add_attribute$MH();
        try {
            mh$.invokeExact(cell_layout, cell, attribute, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_set_cell_data_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2583.const$5,"gtk_cell_layout_set_cell_data_func");
    }
    /**
     * {@snippet :
     * void gtk_cell_layout_set_cell_data_func(struct _GtkCellLayout* cell_layout, struct _GtkCellRenderer* cell, void (*func)(struct _GtkCellLayout*,struct _GtkCellRenderer*,struct _GtkTreeModel*,struct _GtkTreeIter*,void*), void* func_data, void (*destroy)(void*));
     * }
     */
    public static void gtk_cell_layout_set_cell_data_func(MemorySegment cell_layout, MemorySegment cell, MemorySegment func, MemorySegment func_data, MemorySegment destroy) {
        var mh$ = gtk_cell_layout_set_cell_data_func$MH();
        try {
            mh$.invokeExact(cell_layout, cell, func, func_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_clear_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2584.const$0,"gtk_cell_layout_clear_attributes");
    }
    /**
     * {@snippet :
     * void gtk_cell_layout_clear_attributes(struct _GtkCellLayout* cell_layout, struct _GtkCellRenderer* cell);
     * }
     */
    public static void gtk_cell_layout_clear_attributes(MemorySegment cell_layout, MemorySegment cell) {
        var mh$ = gtk_cell_layout_clear_attributes$MH();
        try {
            mh$.invokeExact(cell_layout, cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_reorder$MH() {
        return RuntimeHelper.requireNonNull(constants$2584.const$1,"gtk_cell_layout_reorder");
    }
    /**
     * {@snippet :
     * void gtk_cell_layout_reorder(struct _GtkCellLayout* cell_layout, struct _GtkCellRenderer* cell, int position);
     * }
     */
    public static void gtk_cell_layout_reorder(MemorySegment cell_layout, MemorySegment cell, int position) {
        var mh$ = gtk_cell_layout_reorder$MH();
        try {
            mh$.invokeExact(cell_layout, cell, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_get_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2584.const$2,"gtk_cell_layout_get_area");
    }
    /**
     * {@snippet :
     * struct _GtkCellArea* gtk_cell_layout_get_area(struct _GtkCellLayout* cell_layout);
     * }
     */
    public static MemorySegment gtk_cell_layout_get_area(MemorySegment cell_layout) {
        var mh$ = gtk_cell_layout_get_area$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cell_layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_cell_layout_buildable_custom_tag_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2584.const$3,"_gtk_cell_layout_buildable_custom_tag_start");
    }
    /**
     * {@snippet :
     * int _gtk_cell_layout_buildable_custom_tag_start(struct _GtkBuildable* buildable, struct _GtkBuilder* builder, struct _GObject* child, char* tagname, struct _GMarkupParser* parser, void** data);
     * }
     */
    public static int _gtk_cell_layout_buildable_custom_tag_start(MemorySegment buildable, MemorySegment builder, MemorySegment child, MemorySegment tagname, MemorySegment parser, MemorySegment data) {
        var mh$ = _gtk_cell_layout_buildable_custom_tag_start$MH();
        try {
            return (int)mh$.invokeExact(buildable, builder, child, tagname, parser, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_cell_layout_buildable_custom_tag_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2584.const$4,"_gtk_cell_layout_buildable_custom_tag_end");
    }
    /**
     * {@snippet :
     * int _gtk_cell_layout_buildable_custom_tag_end(struct _GtkBuildable* buildable, struct _GtkBuilder* builder, struct _GObject* child, char* tagname, void** data);
     * }
     */
    public static int _gtk_cell_layout_buildable_custom_tag_end(MemorySegment buildable, MemorySegment builder, MemorySegment child, MemorySegment tagname, MemorySegment data) {
        var mh$ = _gtk_cell_layout_buildable_custom_tag_end$MH();
        try {
            return (int)mh$.invokeExact(buildable, builder, child, tagname, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_cell_layout_buildable_add_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2584.const$5,"_gtk_cell_layout_buildable_add_child");
    }
    /**
     * {@snippet :
     * void _gtk_cell_layout_buildable_add_child(struct _GtkBuildable* buildable, struct _GtkBuilder* builder, struct _GObject* child, char* type);
     * }
     */
    public static void _gtk_cell_layout_buildable_add_child(MemorySegment buildable, MemorySegment builder, MemorySegment child, MemorySegment type) {
        var mh$ = _gtk_cell_layout_buildable_add_child$MH();
        try {
            mh$.invokeExact(buildable, builder, child, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_text_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2587.const$1,"gtk_cell_renderer_text_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_cell_renderer_text_get_type();
     * }
     */
    public static long gtk_cell_renderer_text_get_type() {
        var mh$ = gtk_cell_renderer_text_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_text_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2587.const$2,"gtk_cell_renderer_text_new");
    }
    /**
     * {@snippet :
     * struct _GtkCellRenderer* gtk_cell_renderer_text_new();
     * }
     */
    public static MemorySegment gtk_cell_renderer_text_new() {
        var mh$ = gtk_cell_renderer_text_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_text_set_fixed_height_from_font$MH() {
        return RuntimeHelper.requireNonNull(constants$2587.const$3,"gtk_cell_renderer_text_set_fixed_height_from_font");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_text_set_fixed_height_from_font(struct _GtkCellRendererText* renderer, int number_of_rows);
     * }
     */
    public static void gtk_cell_renderer_text_set_fixed_height_from_font(MemorySegment renderer, int number_of_rows) {
        var mh$ = gtk_cell_renderer_text_set_fixed_height_from_font$MH();
        try {
            mh$.invokeExact(renderer, number_of_rows);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkCellRendererAccelMode.GTK_CELL_RENDERER_ACCEL_MODE_GTK = 0;
     * }
     */
    public static int GTK_CELL_RENDERER_ACCEL_MODE_GTK() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkCellRendererAccelMode.GTK_CELL_RENDERER_ACCEL_MODE_OTHER = 1;
     * }
     */
    public static int GTK_CELL_RENDERER_ACCEL_MODE_OTHER() {
        return (int)1L;
    }
    public static MethodHandle gtk_cell_renderer_accel_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2590.const$3,"gtk_cell_renderer_accel_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_cell_renderer_accel_get_type();
     * }
     */
    public static long gtk_cell_renderer_accel_get_type() {
        var mh$ = gtk_cell_renderer_accel_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_accel_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2590.const$4,"gtk_cell_renderer_accel_new");
    }
    /**
     * {@snippet :
     * struct _GtkCellRenderer* gtk_cell_renderer_accel_new();
     * }
     */
    public static MemorySegment gtk_cell_renderer_accel_new() {
        var mh$ = gtk_cell_renderer_accel_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_combo_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2592.const$4,"gtk_cell_renderer_combo_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_cell_renderer_combo_get_type();
     * }
     */
    public static long gtk_cell_renderer_combo_get_type() {
        var mh$ = gtk_cell_renderer_combo_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_combo_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2592.const$5,"gtk_cell_renderer_combo_new");
    }
    /**
     * {@snippet :
     * struct _GtkCellRenderer* gtk_cell_renderer_combo_new();
     * }
     */
    public static MemorySegment gtk_cell_renderer_combo_new() {
        var mh$ = gtk_cell_renderer_combo_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_pixbuf_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2594.const$5,"gtk_cell_renderer_pixbuf_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_cell_renderer_pixbuf_get_type();
     * }
     */
    public static long gtk_cell_renderer_pixbuf_get_type() {
        var mh$ = gtk_cell_renderer_pixbuf_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_pixbuf_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2595.const$0,"gtk_cell_renderer_pixbuf_new");
    }
    /**
     * {@snippet :
     * struct _GtkCellRenderer* gtk_cell_renderer_pixbuf_new();
     * }
     */
    public static MemorySegment gtk_cell_renderer_pixbuf_new() {
        var mh$ = gtk_cell_renderer_pixbuf_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_progress_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2597.const$0,"gtk_cell_renderer_progress_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_cell_renderer_progress_get_type();
     * }
     */
    public static long gtk_cell_renderer_progress_get_type() {
        var mh$ = gtk_cell_renderer_progress_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_progress_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2597.const$1,"gtk_cell_renderer_progress_new");
    }
    /**
     * {@snippet :
     * struct _GtkCellRenderer* gtk_cell_renderer_progress_new();
     * }
     */
    public static MemorySegment gtk_cell_renderer_progress_new() {
        var mh$ = gtk_cell_renderer_progress_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_spin_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2599.const$1,"gtk_cell_renderer_spin_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_cell_renderer_spin_get_type();
     * }
     */
    public static long gtk_cell_renderer_spin_get_type() {
        var mh$ = gtk_cell_renderer_spin_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_spin_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2599.const$2,"gtk_cell_renderer_spin_new");
    }
    /**
     * {@snippet :
     * struct _GtkCellRenderer* gtk_cell_renderer_spin_new();
     * }
     */
    public static MemorySegment gtk_cell_renderer_spin_new() {
        var mh$ = gtk_cell_renderer_spin_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_spinner_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2601.const$2,"gtk_cell_renderer_spinner_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_cell_renderer_spinner_get_type();
     * }
     */
    public static long gtk_cell_renderer_spinner_get_type() {
        var mh$ = gtk_cell_renderer_spinner_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_spinner_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2601.const$3,"gtk_cell_renderer_spinner_new");
    }
    /**
     * {@snippet :
     * struct _GtkCellRenderer* gtk_cell_renderer_spinner_new();
     * }
     */
    public static MemorySegment gtk_cell_renderer_spinner_new() {
        var mh$ = gtk_cell_renderer_spinner_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2603.const$5,"gtk_cell_renderer_toggle_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_cell_renderer_toggle_get_type();
     * }
     */
    public static long gtk_cell_renderer_toggle_get_type() {
        var mh$ = gtk_cell_renderer_toggle_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2604.const$0,"gtk_cell_renderer_toggle_new");
    }
    /**
     * {@snippet :
     * struct _GtkCellRenderer* gtk_cell_renderer_toggle_new();
     * }
     */
    public static MemorySegment gtk_cell_renderer_toggle_new() {
        var mh$ = gtk_cell_renderer_toggle_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_get_radio$MH() {
        return RuntimeHelper.requireNonNull(constants$2604.const$1,"gtk_cell_renderer_toggle_get_radio");
    }
    /**
     * {@snippet :
     * int gtk_cell_renderer_toggle_get_radio(struct _GtkCellRendererToggle* toggle);
     * }
     */
    public static int gtk_cell_renderer_toggle_get_radio(MemorySegment toggle) {
        var mh$ = gtk_cell_renderer_toggle_get_radio$MH();
        try {
            return (int)mh$.invokeExact(toggle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_set_radio$MH() {
        return RuntimeHelper.requireNonNull(constants$2604.const$2,"gtk_cell_renderer_toggle_set_radio");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_toggle_set_radio(struct _GtkCellRendererToggle* toggle, int radio);
     * }
     */
    public static void gtk_cell_renderer_toggle_set_radio(MemorySegment toggle, int radio) {
        var mh$ = gtk_cell_renderer_toggle_set_radio$MH();
        try {
            mh$.invokeExact(toggle, radio);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_get_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2604.const$3,"gtk_cell_renderer_toggle_get_active");
    }
    /**
     * {@snippet :
     * int gtk_cell_renderer_toggle_get_active(struct _GtkCellRendererToggle* toggle);
     * }
     */
    public static int gtk_cell_renderer_toggle_get_active(MemorySegment toggle) {
        var mh$ = gtk_cell_renderer_toggle_get_active$MH();
        try {
            return (int)mh$.invokeExact(toggle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_set_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2604.const$4,"gtk_cell_renderer_toggle_set_active");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_toggle_set_active(struct _GtkCellRendererToggle* toggle, int setting);
     * }
     */
    public static void gtk_cell_renderer_toggle_set_active(MemorySegment toggle, int setting) {
        var mh$ = gtk_cell_renderer_toggle_set_active$MH();
        try {
            mh$.invokeExact(toggle, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_get_activatable$MH() {
        return RuntimeHelper.requireNonNull(constants$2604.const$5,"gtk_cell_renderer_toggle_get_activatable");
    }
    /**
     * {@snippet :
     * int gtk_cell_renderer_toggle_get_activatable(struct _GtkCellRendererToggle* toggle);
     * }
     */
    public static int gtk_cell_renderer_toggle_get_activatable(MemorySegment toggle) {
        var mh$ = gtk_cell_renderer_toggle_get_activatable$MH();
        try {
            return (int)mh$.invokeExact(toggle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_set_activatable$MH() {
        return RuntimeHelper.requireNonNull(constants$2605.const$0,"gtk_cell_renderer_toggle_set_activatable");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_toggle_set_activatable(struct _GtkCellRendererToggle* toggle, int setting);
     * }
     */
    public static void gtk_cell_renderer_toggle_set_activatable(MemorySegment toggle, int setting) {
        var mh$ = gtk_cell_renderer_toggle_set_activatable$MH();
        try {
            mh$.invokeExact(toggle, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2607.const$0,"gtk_cell_view_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_cell_view_get_type();
     * }
     */
    public static long gtk_cell_view_get_type() {
        var mh$ = gtk_cell_view_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2607.const$1,"gtk_cell_view_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_cell_view_new();
     * }
     */
    public static MemorySegment gtk_cell_view_new() {
        var mh$ = gtk_cell_view_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_new_with_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2607.const$2,"gtk_cell_view_new_with_context");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_cell_view_new_with_context(struct _GtkCellArea* area, struct _GtkCellAreaContext* context);
     * }
     */
    public static MemorySegment gtk_cell_view_new_with_context(MemorySegment area, MemorySegment context) {
        var mh$ = gtk_cell_view_new_with_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area, context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_new_with_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2607.const$3,"gtk_cell_view_new_with_text");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_cell_view_new_with_text(char* text);
     * }
     */
    public static MemorySegment gtk_cell_view_new_with_text(MemorySegment text) {
        var mh$ = gtk_cell_view_new_with_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_new_with_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2607.const$4,"gtk_cell_view_new_with_markup");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_cell_view_new_with_markup(char* markup);
     * }
     */
    public static MemorySegment gtk_cell_view_new_with_markup(MemorySegment markup) {
        var mh$ = gtk_cell_view_new_with_markup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_new_with_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2607.const$5,"gtk_cell_view_new_with_pixbuf");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_cell_view_new_with_pixbuf(struct _GdkPixbuf* pixbuf);
     * }
     */
    public static MemorySegment gtk_cell_view_new_with_pixbuf(MemorySegment pixbuf) {
        var mh$ = gtk_cell_view_new_with_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2608.const$0,"gtk_cell_view_set_model");
    }
    /**
     * {@snippet :
     * void gtk_cell_view_set_model(struct _GtkCellView* cell_view, struct _GtkTreeModel* model);
     * }
     */
    public static void gtk_cell_view_set_model(MemorySegment cell_view, MemorySegment model) {
        var mh$ = gtk_cell_view_set_model$MH();
        try {
            mh$.invokeExact(cell_view, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2608.const$1,"gtk_cell_view_get_model");
    }
    /**
     * {@snippet :
     * struct _GtkTreeModel* gtk_cell_view_get_model(struct _GtkCellView* cell_view);
     * }
     */
    public static MemorySegment gtk_cell_view_get_model(MemorySegment cell_view) {
        var mh$ = gtk_cell_view_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cell_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_set_displayed_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2608.const$2,"gtk_cell_view_set_displayed_row");
    }
    /**
     * {@snippet :
     * void gtk_cell_view_set_displayed_row(struct _GtkCellView* cell_view, struct _GtkTreePath* path);
     * }
     */
    public static void gtk_cell_view_set_displayed_row(MemorySegment cell_view, MemorySegment path) {
        var mh$ = gtk_cell_view_set_displayed_row$MH();
        try {
            mh$.invokeExact(cell_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_get_displayed_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2608.const$3,"gtk_cell_view_get_displayed_row");
    }
    /**
     * {@snippet :
     * struct _GtkTreePath* gtk_cell_view_get_displayed_row(struct _GtkCellView* cell_view);
     * }
     */
    public static MemorySegment gtk_cell_view_get_displayed_row(MemorySegment cell_view) {
        var mh$ = gtk_cell_view_get_displayed_row$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cell_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_set_background_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$2608.const$4,"gtk_cell_view_set_background_rgba");
    }
    /**
     * {@snippet :
     * void gtk_cell_view_set_background_rgba(struct _GtkCellView* cell_view, struct _GdkRGBA* rgba);
     * }
     */
    public static void gtk_cell_view_set_background_rgba(MemorySegment cell_view, MemorySegment rgba) {
        var mh$ = gtk_cell_view_set_background_rgba$MH();
        try {
            mh$.invokeExact(cell_view, rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_get_draw_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$2608.const$5,"gtk_cell_view_get_draw_sensitive");
    }
    /**
     * {@snippet :
     * int gtk_cell_view_get_draw_sensitive(struct _GtkCellView* cell_view);
     * }
     */
    public static int gtk_cell_view_get_draw_sensitive(MemorySegment cell_view) {
        var mh$ = gtk_cell_view_get_draw_sensitive$MH();
        try {
            return (int)mh$.invokeExact(cell_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_set_draw_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$2609.const$0,"gtk_cell_view_set_draw_sensitive");
    }
    /**
     * {@snippet :
     * void gtk_cell_view_set_draw_sensitive(struct _GtkCellView* cell_view, int draw_sensitive);
     * }
     */
    public static void gtk_cell_view_set_draw_sensitive(MemorySegment cell_view, int draw_sensitive) {
        var mh$ = gtk_cell_view_set_draw_sensitive$MH();
        try {
            mh$.invokeExact(cell_view, draw_sensitive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_get_fit_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2609.const$1,"gtk_cell_view_get_fit_model");
    }
    /**
     * {@snippet :
     * int gtk_cell_view_get_fit_model(struct _GtkCellView* cell_view);
     * }
     */
    public static int gtk_cell_view_get_fit_model(MemorySegment cell_view) {
        var mh$ = gtk_cell_view_get_fit_model$MH();
        try {
            return (int)mh$.invokeExact(cell_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_set_fit_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2609.const$2,"gtk_cell_view_set_fit_model");
    }
    /**
     * {@snippet :
     * void gtk_cell_view_set_fit_model(struct _GtkCellView* cell_view, int fit_model);
     * }
     */
    public static void gtk_cell_view_set_fit_model(MemorySegment cell_view, int fit_model) {
        var mh$ = gtk_cell_view_set_fit_model$MH();
        try {
            mh$.invokeExact(cell_view, fit_model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_get_size_of_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2609.const$3,"gtk_cell_view_get_size_of_row");
    }
    /**
     * {@snippet :
     * int gtk_cell_view_get_size_of_row(struct _GtkCellView* cell_view, struct _GtkTreePath* path, struct _GtkRequisition* requisition);
     * }
     */
    public static int gtk_cell_view_get_size_of_row(MemorySegment cell_view, MemorySegment path, MemorySegment requisition) {
        var mh$ = gtk_cell_view_get_size_of_row$MH();
        try {
            return (int)mh$.invokeExact(cell_view, path, requisition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_set_background_color$MH() {
        return RuntimeHelper.requireNonNull(constants$2609.const$4,"gtk_cell_view_set_background_color");
    }
    /**
     * {@snippet :
     * void gtk_cell_view_set_background_color(struct _GtkCellView* cell_view, struct _GdkColor* color);
     * }
     */
    public static void gtk_cell_view_set_background_color(MemorySegment cell_view, MemorySegment color) {
        var mh$ = gtk_cell_view_set_background_color$MH();
        try {
            mh$.invokeExact(cell_view, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2612.const$0,"gtk_toggle_button_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_toggle_button_get_type();
     * }
     */
    public static long gtk_toggle_button_get_type() {
        var mh$ = gtk_toggle_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2612.const$1,"gtk_toggle_button_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_toggle_button_new();
     * }
     */
    public static MemorySegment gtk_toggle_button_new() {
        var mh$ = gtk_toggle_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_new_with_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2612.const$2,"gtk_toggle_button_new_with_label");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_toggle_button_new_with_label(char* label);
     * }
     */
    public static MemorySegment gtk_toggle_button_new_with_label(MemorySegment label) {
        var mh$ = gtk_toggle_button_new_with_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$2612.const$3,"gtk_toggle_button_new_with_mnemonic");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_toggle_button_new_with_mnemonic(char* label);
     * }
     */
    public static MemorySegment gtk_toggle_button_new_with_mnemonic(MemorySegment label) {
        var mh$ = gtk_toggle_button_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_set_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2612.const$4,"gtk_toggle_button_set_mode");
    }
    /**
     * {@snippet :
     * void gtk_toggle_button_set_mode(struct _GtkToggleButton* toggle_button, int draw_indicator);
     * }
     */
    public static void gtk_toggle_button_set_mode(MemorySegment toggle_button, int draw_indicator) {
        var mh$ = gtk_toggle_button_set_mode$MH();
        try {
            mh$.invokeExact(toggle_button, draw_indicator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_get_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2612.const$5,"gtk_toggle_button_get_mode");
    }
    /**
     * {@snippet :
     * int gtk_toggle_button_get_mode(struct _GtkToggleButton* toggle_button);
     * }
     */
    public static int gtk_toggle_button_get_mode(MemorySegment toggle_button) {
        var mh$ = gtk_toggle_button_get_mode$MH();
        try {
            return (int)mh$.invokeExact(toggle_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_set_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2613.const$0,"gtk_toggle_button_set_active");
    }
    /**
     * {@snippet :
     * void gtk_toggle_button_set_active(struct _GtkToggleButton* toggle_button, int is_active);
     * }
     */
    public static void gtk_toggle_button_set_active(MemorySegment toggle_button, int is_active) {
        var mh$ = gtk_toggle_button_set_active$MH();
        try {
            mh$.invokeExact(toggle_button, is_active);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_get_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2613.const$1,"gtk_toggle_button_get_active");
    }
    /**
     * {@snippet :
     * int gtk_toggle_button_get_active(struct _GtkToggleButton* toggle_button);
     * }
     */
    public static int gtk_toggle_button_get_active(MemorySegment toggle_button) {
        var mh$ = gtk_toggle_button_get_active$MH();
        try {
            return (int)mh$.invokeExact(toggle_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_toggled$MH() {
        return RuntimeHelper.requireNonNull(constants$2613.const$2,"gtk_toggle_button_toggled");
    }
    /**
     * {@snippet :
     * void gtk_toggle_button_toggled(struct _GtkToggleButton* toggle_button);
     * }
     */
    public static void gtk_toggle_button_toggled(MemorySegment toggle_button) {
        var mh$ = gtk_toggle_button_toggled$MH();
        try {
            mh$.invokeExact(toggle_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_set_inconsistent$MH() {
        return RuntimeHelper.requireNonNull(constants$2613.const$3,"gtk_toggle_button_set_inconsistent");
    }
    /**
     * {@snippet :
     * void gtk_toggle_button_set_inconsistent(struct _GtkToggleButton* toggle_button, int setting);
     * }
     */
    public static void gtk_toggle_button_set_inconsistent(MemorySegment toggle_button, int setting) {
        var mh$ = gtk_toggle_button_set_inconsistent$MH();
        try {
            mh$.invokeExact(toggle_button, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_get_inconsistent$MH() {
        return RuntimeHelper.requireNonNull(constants$2613.const$4,"gtk_toggle_button_get_inconsistent");
    }
    /**
     * {@snippet :
     * int gtk_toggle_button_get_inconsistent(struct _GtkToggleButton* toggle_button);
     * }
     */
    public static int gtk_toggle_button_get_inconsistent(MemorySegment toggle_button) {
        var mh$ = gtk_toggle_button_get_inconsistent$MH();
        try {
            return (int)mh$.invokeExact(toggle_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2615.const$5,"gtk_check_button_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_check_button_get_type();
     * }
     */
    public static long gtk_check_button_get_type() {
        var mh$ = gtk_check_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2616.const$0,"gtk_check_button_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_check_button_new();
     * }
     */
    public static MemorySegment gtk_check_button_new() {
        var mh$ = gtk_check_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_button_new_with_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2616.const$1,"gtk_check_button_new_with_label");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_check_button_new_with_label(char* label);
     * }
     */
    public static MemorySegment gtk_check_button_new_with_label(MemorySegment label) {
        var mh$ = gtk_check_button_new_with_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_button_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$2616.const$2,"gtk_check_button_new_with_mnemonic");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_check_button_new_with_mnemonic(char* label);
     * }
     */
    public static MemorySegment gtk_check_button_new_with_mnemonic(MemorySegment label) {
        var mh$ = gtk_check_button_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_check_button_get_props$MH() {
        return RuntimeHelper.requireNonNull(constants$2616.const$3,"_gtk_check_button_get_props");
    }
    /**
     * {@snippet :
     * void _gtk_check_button_get_props(struct _GtkCheckButton* check_button, int* indicator_size, int* indicator_spacing);
     * }
     */
    public static void _gtk_check_button_get_props(MemorySegment check_button, MemorySegment indicator_size, MemorySegment indicator_spacing) {
        var mh$ = _gtk_check_button_get_props$MH();
        try {
            mh$.invokeExact(check_button, indicator_size, indicator_spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2621.const$1,"gtk_menu_item_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_menu_item_get_type();
     * }
     */
    public static long gtk_menu_item_get_type() {
        var mh$ = gtk_menu_item_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2621.const$2,"gtk_menu_item_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_menu_item_new();
     * }
     */
    public static MemorySegment gtk_menu_item_new() {
        var mh$ = gtk_menu_item_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_new_with_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2621.const$3,"gtk_menu_item_new_with_label");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_menu_item_new_with_label(char* label);
     * }
     */
    public static MemorySegment gtk_menu_item_new_with_label(MemorySegment label) {
        var mh$ = gtk_menu_item_new_with_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$2621.const$4,"gtk_menu_item_new_with_mnemonic");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_menu_item_new_with_mnemonic(char* label);
     * }
     */
    public static MemorySegment gtk_menu_item_new_with_mnemonic(MemorySegment label) {
        var mh$ = gtk_menu_item_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_submenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2621.const$5,"gtk_menu_item_set_submenu");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_set_submenu(struct _GtkMenuItem* menu_item, struct _GtkWidget* submenu);
     * }
     */
    public static void gtk_menu_item_set_submenu(MemorySegment menu_item, MemorySegment submenu) {
        var mh$ = gtk_menu_item_set_submenu$MH();
        try {
            mh$.invokeExact(menu_item, submenu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_submenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2622.const$0,"gtk_menu_item_get_submenu");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_menu_item_get_submenu(struct _GtkMenuItem* menu_item);
     * }
     */
    public static MemorySegment gtk_menu_item_get_submenu(MemorySegment menu_item) {
        var mh$ = gtk_menu_item_get_submenu$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_select$MH() {
        return RuntimeHelper.requireNonNull(constants$2622.const$1,"gtk_menu_item_select");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_select(struct _GtkMenuItem* menu_item);
     * }
     */
    public static void gtk_menu_item_select(MemorySegment menu_item) {
        var mh$ = gtk_menu_item_select$MH();
        try {
            mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_deselect$MH() {
        return RuntimeHelper.requireNonNull(constants$2622.const$2,"gtk_menu_item_deselect");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_deselect(struct _GtkMenuItem* menu_item);
     * }
     */
    public static void gtk_menu_item_deselect(MemorySegment menu_item) {
        var mh$ = gtk_menu_item_deselect$MH();
        try {
            mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$2622.const$3,"gtk_menu_item_activate");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_activate(struct _GtkMenuItem* menu_item);
     * }
     */
    public static void gtk_menu_item_activate(MemorySegment menu_item) {
        var mh$ = gtk_menu_item_activate$MH();
        try {
            mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_toggle_size_request$MH() {
        return RuntimeHelper.requireNonNull(constants$2622.const$4,"gtk_menu_item_toggle_size_request");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_toggle_size_request(struct _GtkMenuItem* menu_item, int* requisition);
     * }
     */
    public static void gtk_menu_item_toggle_size_request(MemorySegment menu_item, MemorySegment requisition) {
        var mh$ = gtk_menu_item_toggle_size_request$MH();
        try {
            mh$.invokeExact(menu_item, requisition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_toggle_size_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$2622.const$5,"gtk_menu_item_toggle_size_allocate");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_toggle_size_allocate(struct _GtkMenuItem* menu_item, int allocation);
     * }
     */
    public static void gtk_menu_item_toggle_size_allocate(MemorySegment menu_item, int allocation) {
        var mh$ = gtk_menu_item_toggle_size_allocate$MH();
        try {
            mh$.invokeExact(menu_item, allocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_right_justified$MH() {
        return RuntimeHelper.requireNonNull(constants$2623.const$0,"gtk_menu_item_set_right_justified");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_set_right_justified(struct _GtkMenuItem* menu_item, int right_justified);
     * }
     */
    public static void gtk_menu_item_set_right_justified(MemorySegment menu_item, int right_justified) {
        var mh$ = gtk_menu_item_set_right_justified$MH();
        try {
            mh$.invokeExact(menu_item, right_justified);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_right_justified$MH() {
        return RuntimeHelper.requireNonNull(constants$2623.const$1,"gtk_menu_item_get_right_justified");
    }
    /**
     * {@snippet :
     * int gtk_menu_item_get_right_justified(struct _GtkMenuItem* menu_item);
     * }
     */
    public static int gtk_menu_item_get_right_justified(MemorySegment menu_item) {
        var mh$ = gtk_menu_item_get_right_justified$MH();
        try {
            return (int)mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_accel_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2623.const$2,"gtk_menu_item_set_accel_path");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_set_accel_path(struct _GtkMenuItem* menu_item, char* accel_path);
     * }
     */
    public static void gtk_menu_item_set_accel_path(MemorySegment menu_item, MemorySegment accel_path) {
        var mh$ = gtk_menu_item_set_accel_path$MH();
        try {
            mh$.invokeExact(menu_item, accel_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_accel_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2623.const$3,"gtk_menu_item_get_accel_path");
    }
    /**
     * {@snippet :
     * char* gtk_menu_item_get_accel_path(struct _GtkMenuItem* menu_item);
     * }
     */
    public static MemorySegment gtk_menu_item_get_accel_path(MemorySegment menu_item) {
        var mh$ = gtk_menu_item_get_accel_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2623.const$4,"gtk_menu_item_set_label");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_set_label(struct _GtkMenuItem* menu_item, char* label);
     * }
     */
    public static void gtk_menu_item_set_label(MemorySegment menu_item, MemorySegment label) {
        var mh$ = gtk_menu_item_set_label$MH();
        try {
            mh$.invokeExact(menu_item, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2623.const$5,"gtk_menu_item_get_label");
    }
    /**
     * {@snippet :
     * char* gtk_menu_item_get_label(struct _GtkMenuItem* menu_item);
     * }
     */
    public static MemorySegment gtk_menu_item_get_label(MemorySegment menu_item) {
        var mh$ = gtk_menu_item_get_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$2624.const$0,"gtk_menu_item_set_use_underline");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_set_use_underline(struct _GtkMenuItem* menu_item, int setting);
     * }
     */
    public static void gtk_menu_item_set_use_underline(MemorySegment menu_item, int setting) {
        var mh$ = gtk_menu_item_set_use_underline$MH();
        try {
            mh$.invokeExact(menu_item, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$2624.const$1,"gtk_menu_item_get_use_underline");
    }
    /**
     * {@snippet :
     * int gtk_menu_item_get_use_underline(struct _GtkMenuItem* menu_item);
     * }
     */
    public static int gtk_menu_item_get_use_underline(MemorySegment menu_item) {
        var mh$ = gtk_menu_item_get_use_underline$MH();
        try {
            return (int)mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_reserve_indicator$MH() {
        return RuntimeHelper.requireNonNull(constants$2624.const$2,"gtk_menu_item_set_reserve_indicator");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_set_reserve_indicator(struct _GtkMenuItem* menu_item, int reserve);
     * }
     */
    public static void gtk_menu_item_set_reserve_indicator(MemorySegment menu_item, int reserve) {
        var mh$ = gtk_menu_item_set_reserve_indicator$MH();
        try {
            mh$.invokeExact(menu_item, reserve);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_reserve_indicator$MH() {
        return RuntimeHelper.requireNonNull(constants$2624.const$3,"gtk_menu_item_get_reserve_indicator");
    }
    /**
     * {@snippet :
     * int gtk_menu_item_get_reserve_indicator(struct _GtkMenuItem* menu_item);
     * }
     */
    public static int gtk_menu_item_get_reserve_indicator(MemorySegment menu_item) {
        var mh$ = gtk_menu_item_get_reserve_indicator$MH();
        try {
            return (int)mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2627.const$1,"gtk_check_menu_item_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_check_menu_item_get_type();
     * }
     */
    public static long gtk_check_menu_item_get_type() {
        var mh$ = gtk_check_menu_item_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2627.const$2,"gtk_check_menu_item_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_check_menu_item_new();
     * }
     */
    public static MemorySegment gtk_check_menu_item_new() {
        var mh$ = gtk_check_menu_item_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_new_with_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2627.const$3,"gtk_check_menu_item_new_with_label");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_check_menu_item_new_with_label(char* label);
     * }
     */
    public static MemorySegment gtk_check_menu_item_new_with_label(MemorySegment label) {
        var mh$ = gtk_check_menu_item_new_with_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$2627.const$4,"gtk_check_menu_item_new_with_mnemonic");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_check_menu_item_new_with_mnemonic(char* label);
     * }
     */
    public static MemorySegment gtk_check_menu_item_new_with_mnemonic(MemorySegment label) {
        var mh$ = gtk_check_menu_item_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_set_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2627.const$5,"gtk_check_menu_item_set_active");
    }
    /**
     * {@snippet :
     * void gtk_check_menu_item_set_active(struct _GtkCheckMenuItem* check_menu_item, int is_active);
     * }
     */
    public static void gtk_check_menu_item_set_active(MemorySegment check_menu_item, int is_active) {
        var mh$ = gtk_check_menu_item_set_active$MH();
        try {
            mh$.invokeExact(check_menu_item, is_active);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_get_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2628.const$0,"gtk_check_menu_item_get_active");
    }
    /**
     * {@snippet :
     * int gtk_check_menu_item_get_active(struct _GtkCheckMenuItem* check_menu_item);
     * }
     */
    public static int gtk_check_menu_item_get_active(MemorySegment check_menu_item) {
        var mh$ = gtk_check_menu_item_get_active$MH();
        try {
            return (int)mh$.invokeExact(check_menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_toggled$MH() {
        return RuntimeHelper.requireNonNull(constants$2628.const$1,"gtk_check_menu_item_toggled");
    }
    /**
     * {@snippet :
     * void gtk_check_menu_item_toggled(struct _GtkCheckMenuItem* check_menu_item);
     * }
     */
    public static void gtk_check_menu_item_toggled(MemorySegment check_menu_item) {
        var mh$ = gtk_check_menu_item_toggled$MH();
        try {
            mh$.invokeExact(check_menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_set_inconsistent$MH() {
        return RuntimeHelper.requireNonNull(constants$2628.const$2,"gtk_check_menu_item_set_inconsistent");
    }
    /**
     * {@snippet :
     * void gtk_check_menu_item_set_inconsistent(struct _GtkCheckMenuItem* check_menu_item, int setting);
     * }
     */
    public static void gtk_check_menu_item_set_inconsistent(MemorySegment check_menu_item, int setting) {
        var mh$ = gtk_check_menu_item_set_inconsistent$MH();
        try {
            mh$.invokeExact(check_menu_item, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_get_inconsistent$MH() {
        return RuntimeHelper.requireNonNull(constants$2628.const$3,"gtk_check_menu_item_get_inconsistent");
    }
    /**
     * {@snippet :
     * int gtk_check_menu_item_get_inconsistent(struct _GtkCheckMenuItem* check_menu_item);
     * }
     */
    public static int gtk_check_menu_item_get_inconsistent(MemorySegment check_menu_item) {
        var mh$ = gtk_check_menu_item_get_inconsistent$MH();
        try {
            return (int)mh$.invokeExact(check_menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_set_draw_as_radio$MH() {
        return RuntimeHelper.requireNonNull(constants$2628.const$4,"gtk_check_menu_item_set_draw_as_radio");
    }
    /**
     * {@snippet :
     * void gtk_check_menu_item_set_draw_as_radio(struct _GtkCheckMenuItem* check_menu_item, int draw_as_radio);
     * }
     */
    public static void gtk_check_menu_item_set_draw_as_radio(MemorySegment check_menu_item, int draw_as_radio) {
        var mh$ = gtk_check_menu_item_set_draw_as_radio$MH();
        try {
            mh$.invokeExact(check_menu_item, draw_as_radio);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_get_draw_as_radio$MH() {
        return RuntimeHelper.requireNonNull(constants$2628.const$5,"gtk_check_menu_item_get_draw_as_radio");
    }
    /**
     * {@snippet :
     * int gtk_check_menu_item_get_draw_as_radio(struct _GtkCheckMenuItem* check_menu_item);
     * }
     */
    public static int gtk_check_menu_item_get_draw_as_radio(MemorySegment check_menu_item) {
        var mh$ = gtk_check_menu_item_get_draw_as_radio$MH();
        try {
            return (int)mh$.invokeExact(check_menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2630.const$4,"gtk_clipboard_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_clipboard_get_type();
     * }
     */
    public static long gtk_clipboard_get_type() {
        var mh$ = gtk_clipboard_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get_for_display$MH() {
        return RuntimeHelper.requireNonNull(constants$2630.const$5,"gtk_clipboard_get_for_display");
    }
    /**
     * {@snippet :
     * struct _GtkClipboard* gtk_clipboard_get_for_display(struct _GdkDisplay* display, struct _GdkAtom* selection);
     * }
     */
    public static MemorySegment gtk_clipboard_get_for_display(MemorySegment display, MemorySegment selection) {
        var mh$ = gtk_clipboard_get_for_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display, selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get$MH() {
        return RuntimeHelper.requireNonNull(constants$2631.const$0,"gtk_clipboard_get");
    }
    /**
     * {@snippet :
     * struct _GtkClipboard* gtk_clipboard_get(struct _GdkAtom* selection);
     * }
     */
    public static MemorySegment gtk_clipboard_get(MemorySegment selection) {
        var mh$ = gtk_clipboard_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2631.const$1,"gtk_clipboard_get_default");
    }
    /**
     * {@snippet :
     * struct _GtkClipboard* gtk_clipboard_get_default(struct _GdkDisplay* display);
     * }
     */
    public static MemorySegment gtk_clipboard_get_default(MemorySegment display) {
        var mh$ = gtk_clipboard_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$2631.const$2,"gtk_clipboard_get_display");
    }
    /**
     * {@snippet :
     * struct _GdkDisplay* gtk_clipboard_get_display(struct _GtkClipboard* clipboard);
     * }
     */
    public static MemorySegment gtk_clipboard_get_display(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_set_with_data$MH() {
        return RuntimeHelper.requireNonNull(constants$2631.const$5,"gtk_clipboard_set_with_data");
    }
    /**
     * {@snippet :
     * int gtk_clipboard_set_with_data(struct _GtkClipboard* clipboard, struct _GtkTargetEntry* targets, unsigned int n_targets, void (*get_func)(struct _GtkClipboard*,struct _GtkSelectionData*,unsigned int,void*), void (*clear_func)(struct _GtkClipboard*,void*), void* user_data);
     * }
     */
    public static int gtk_clipboard_set_with_data(MemorySegment clipboard, MemorySegment targets, int n_targets, MemorySegment get_func, MemorySegment clear_func, MemorySegment user_data) {
        var mh$ = gtk_clipboard_set_with_data$MH();
        try {
            return (int)mh$.invokeExact(clipboard, targets, n_targets, get_func, clear_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_set_with_owner$MH() {
        return RuntimeHelper.requireNonNull(constants$2632.const$2,"gtk_clipboard_set_with_owner");
    }
    /**
     * {@snippet :
     * int gtk_clipboard_set_with_owner(struct _GtkClipboard* clipboard, struct _GtkTargetEntry* targets, unsigned int n_targets, void (*get_func)(struct _GtkClipboard*,struct _GtkSelectionData*,unsigned int,void*), void (*clear_func)(struct _GtkClipboard*,void*), struct _GObject* owner);
     * }
     */
    public static int gtk_clipboard_set_with_owner(MemorySegment clipboard, MemorySegment targets, int n_targets, MemorySegment get_func, MemorySegment clear_func, MemorySegment owner) {
        var mh$ = gtk_clipboard_set_with_owner$MH();
        try {
            return (int)mh$.invokeExact(clipboard, targets, n_targets, get_func, clear_func, owner);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get_owner$MH() {
        return RuntimeHelper.requireNonNull(constants$2632.const$3,"gtk_clipboard_get_owner");
    }
    /**
     * {@snippet :
     * struct _GObject* gtk_clipboard_get_owner(struct _GtkClipboard* clipboard);
     * }
     */
    public static MemorySegment gtk_clipboard_get_owner(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_get_owner$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$2632.const$4,"gtk_clipboard_clear");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_clear(struct _GtkClipboard* clipboard);
     * }
     */
    public static void gtk_clipboard_clear(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_clear$MH();
        try {
            mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2632.const$5,"gtk_clipboard_set_text");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_set_text(struct _GtkClipboard* clipboard, char* text, int len);
     * }
     */
    public static void gtk_clipboard_set_text(MemorySegment clipboard, MemorySegment text, int len) {
        var mh$ = gtk_clipboard_set_text$MH();
        try {
            mh$.invokeExact(clipboard, text, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_set_image$MH() {
        return RuntimeHelper.requireNonNull(constants$2633.const$0,"gtk_clipboard_set_image");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_set_image(struct _GtkClipboard* clipboard, struct _GdkPixbuf* pixbuf);
     * }
     */
    public static void gtk_clipboard_set_image(MemorySegment clipboard, MemorySegment pixbuf) {
        var mh$ = gtk_clipboard_set_image$MH();
        try {
            mh$.invokeExact(clipboard, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_request_contents$MH() {
        return RuntimeHelper.requireNonNull(constants$2633.const$2,"gtk_clipboard_request_contents");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_request_contents(struct _GtkClipboard* clipboard, struct _GdkAtom* target, void (*callback)(struct _GtkClipboard*,struct _GtkSelectionData*,void*), void* user_data);
     * }
     */
    public static void gtk_clipboard_request_contents(MemorySegment clipboard, MemorySegment target, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gtk_clipboard_request_contents$MH();
        try {
            mh$.invokeExact(clipboard, target, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_request_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2633.const$4,"gtk_clipboard_request_text");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_request_text(struct _GtkClipboard* clipboard, void (*callback)(struct _GtkClipboard*,char*,void*), void* user_data);
     * }
     */
    public static void gtk_clipboard_request_text(MemorySegment clipboard, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gtk_clipboard_request_text$MH();
        try {
            mh$.invokeExact(clipboard, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_request_rich_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2634.const$0,"gtk_clipboard_request_rich_text");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_request_rich_text(struct _GtkClipboard* clipboard, struct _GtkTextBuffer* buffer, void (*callback)(struct _GtkClipboard*,struct _GdkAtom*,unsigned char*,unsigned long,void*), void* user_data);
     * }
     */
    public static void gtk_clipboard_request_rich_text(MemorySegment clipboard, MemorySegment buffer, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gtk_clipboard_request_rich_text$MH();
        try {
            mh$.invokeExact(clipboard, buffer, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_request_image$MH() {
        return RuntimeHelper.requireNonNull(constants$2634.const$2,"gtk_clipboard_request_image");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_request_image(struct _GtkClipboard* clipboard, void (*callback)(struct _GtkClipboard*,struct _GdkPixbuf*,void*), void* user_data);
     * }
     */
    public static void gtk_clipboard_request_image(MemorySegment clipboard, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gtk_clipboard_request_image$MH();
        try {
            mh$.invokeExact(clipboard, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_request_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$2634.const$4,"gtk_clipboard_request_uris");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_request_uris(struct _GtkClipboard* clipboard, void (*callback)(struct _GtkClipboard*,char**,void*), void* user_data);
     * }
     */
    public static void gtk_clipboard_request_uris(MemorySegment clipboard, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gtk_clipboard_request_uris$MH();
        try {
            mh$.invokeExact(clipboard, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_request_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$2635.const$0,"gtk_clipboard_request_targets");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_request_targets(struct _GtkClipboard* clipboard, void (*callback)(struct _GtkClipboard*,struct _GdkAtom**,int,void*), void* user_data);
     * }
     */
    public static void gtk_clipboard_request_targets(MemorySegment clipboard, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gtk_clipboard_request_targets$MH();
        try {
            mh$.invokeExact(clipboard, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_for_contents$MH() {
        return RuntimeHelper.requireNonNull(constants$2635.const$1,"gtk_clipboard_wait_for_contents");
    }
    /**
     * {@snippet :
     * struct _GtkSelectionData* gtk_clipboard_wait_for_contents(struct _GtkClipboard* clipboard, struct _GdkAtom* target);
     * }
     */
    public static MemorySegment gtk_clipboard_wait_for_contents(MemorySegment clipboard, MemorySegment target) {
        var mh$ = gtk_clipboard_wait_for_contents$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(clipboard, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_for_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2635.const$2,"gtk_clipboard_wait_for_text");
    }
    /**
     * {@snippet :
     * char* gtk_clipboard_wait_for_text(struct _GtkClipboard* clipboard);
     * }
     */
    public static MemorySegment gtk_clipboard_wait_for_text(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_wait_for_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_for_rich_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2635.const$3,"gtk_clipboard_wait_for_rich_text");
    }
    /**
     * {@snippet :
     * unsigned char* gtk_clipboard_wait_for_rich_text(struct _GtkClipboard* clipboard, struct _GtkTextBuffer* buffer, struct _GdkAtom** format, unsigned long* length);
     * }
     */
    public static MemorySegment gtk_clipboard_wait_for_rich_text(MemorySegment clipboard, MemorySegment buffer, MemorySegment format, MemorySegment length) {
        var mh$ = gtk_clipboard_wait_for_rich_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(clipboard, buffer, format, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_for_image$MH() {
        return RuntimeHelper.requireNonNull(constants$2635.const$4,"gtk_clipboard_wait_for_image");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_clipboard_wait_for_image(struct _GtkClipboard* clipboard);
     * }
     */
    public static MemorySegment gtk_clipboard_wait_for_image(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_wait_for_image$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_for_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$2635.const$5,"gtk_clipboard_wait_for_uris");
    }
    /**
     * {@snippet :
     * char** gtk_clipboard_wait_for_uris(struct _GtkClipboard* clipboard);
     * }
     */
    public static MemorySegment gtk_clipboard_wait_for_uris(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_wait_for_uris$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_for_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$2636.const$0,"gtk_clipboard_wait_for_targets");
    }
    /**
     * {@snippet :
     * int gtk_clipboard_wait_for_targets(struct _GtkClipboard* clipboard, struct _GdkAtom*** targets, int* n_targets);
     * }
     */
    public static int gtk_clipboard_wait_for_targets(MemorySegment clipboard, MemorySegment targets, MemorySegment n_targets) {
        var mh$ = gtk_clipboard_wait_for_targets$MH();
        try {
            return (int)mh$.invokeExact(clipboard, targets, n_targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_is_text_available$MH() {
        return RuntimeHelper.requireNonNull(constants$2636.const$1,"gtk_clipboard_wait_is_text_available");
    }
    /**
     * {@snippet :
     * int gtk_clipboard_wait_is_text_available(struct _GtkClipboard* clipboard);
     * }
     */
    public static int gtk_clipboard_wait_is_text_available(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_wait_is_text_available$MH();
        try {
            return (int)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_is_rich_text_available$MH() {
        return RuntimeHelper.requireNonNull(constants$2636.const$2,"gtk_clipboard_wait_is_rich_text_available");
    }
    /**
     * {@snippet :
     * int gtk_clipboard_wait_is_rich_text_available(struct _GtkClipboard* clipboard, struct _GtkTextBuffer* buffer);
     * }
     */
    public static int gtk_clipboard_wait_is_rich_text_available(MemorySegment clipboard, MemorySegment buffer) {
        var mh$ = gtk_clipboard_wait_is_rich_text_available$MH();
        try {
            return (int)mh$.invokeExact(clipboard, buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_is_image_available$MH() {
        return RuntimeHelper.requireNonNull(constants$2636.const$3,"gtk_clipboard_wait_is_image_available");
    }
    /**
     * {@snippet :
     * int gtk_clipboard_wait_is_image_available(struct _GtkClipboard* clipboard);
     * }
     */
    public static int gtk_clipboard_wait_is_image_available(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_wait_is_image_available$MH();
        try {
            return (int)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_is_uris_available$MH() {
        return RuntimeHelper.requireNonNull(constants$2636.const$4,"gtk_clipboard_wait_is_uris_available");
    }
    /**
     * {@snippet :
     * int gtk_clipboard_wait_is_uris_available(struct _GtkClipboard* clipboard);
     * }
     */
    public static int gtk_clipboard_wait_is_uris_available(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_wait_is_uris_available$MH();
        try {
            return (int)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_is_target_available$MH() {
        return RuntimeHelper.requireNonNull(constants$2636.const$5,"gtk_clipboard_wait_is_target_available");
    }
    /**
     * {@snippet :
     * int gtk_clipboard_wait_is_target_available(struct _GtkClipboard* clipboard, struct _GdkAtom* target);
     * }
     */
    public static int gtk_clipboard_wait_is_target_available(MemorySegment clipboard, MemorySegment target) {
        var mh$ = gtk_clipboard_wait_is_target_available$MH();
        try {
            return (int)mh$.invokeExact(clipboard, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_set_can_store$MH() {
        return RuntimeHelper.requireNonNull(constants$2637.const$0,"gtk_clipboard_set_can_store");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_set_can_store(struct _GtkClipboard* clipboard, struct _GtkTargetEntry* targets, int n_targets);
     * }
     */
    public static void gtk_clipboard_set_can_store(MemorySegment clipboard, MemorySegment targets, int n_targets) {
        var mh$ = gtk_clipboard_set_can_store$MH();
        try {
            mh$.invokeExact(clipboard, targets, n_targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_store$MH() {
        return RuntimeHelper.requireNonNull(constants$2637.const$1,"gtk_clipboard_store");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_store(struct _GtkClipboard* clipboard);
     * }
     */
    public static void gtk_clipboard_store(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_store$MH();
        try {
            mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2637.const$2,"gtk_clipboard_get_selection");
    }
    /**
     * {@snippet :
     * struct _GdkAtom* gtk_clipboard_get_selection(struct _GtkClipboard* clipboard);
     * }
     */
    public static MemorySegment gtk_clipboard_get_selection(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_get_selection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2639.const$4,"gtk_color_button_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_color_button_get_type();
     * }
     */
    public static long gtk_color_button_get_type() {
        var mh$ = gtk_color_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2639.const$5,"gtk_color_button_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_color_button_new();
     * }
     */
    public static MemorySegment gtk_color_button_new() {
        var mh$ = gtk_color_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_new_with_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$2640.const$0,"gtk_color_button_new_with_rgba");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_color_button_new_with_rgba(struct _GdkRGBA* rgba);
     * }
     */
    public static MemorySegment gtk_color_button_new_with_rgba(MemorySegment rgba) {
        var mh$ = gtk_color_button_new_with_rgba$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2640.const$1,"gtk_color_button_set_title");
    }
    /**
     * {@snippet :
     * void gtk_color_button_set_title(struct _GtkColorButton* button, char* title);
     * }
     */
    public static void gtk_color_button_set_title(MemorySegment button, MemorySegment title) {
        var mh$ = gtk_color_button_set_title$MH();
        try {
            mh$.invokeExact(button, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2640.const$2,"gtk_color_button_get_title");
    }
    /**
     * {@snippet :
     * char* gtk_color_button_get_title(struct _GtkColorButton* button);
     * }
     */
    public static MemorySegment gtk_color_button_get_title(MemorySegment button) {
        var mh$ = gtk_color_button_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_new_with_color$MH() {
        return RuntimeHelper.requireNonNull(constants$2640.const$3,"gtk_color_button_new_with_color");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_color_button_new_with_color(struct _GdkColor* color);
     * }
     */
    public static MemorySegment gtk_color_button_new_with_color(MemorySegment color) {
        var mh$ = gtk_color_button_new_with_color$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_set_color$MH() {
        return RuntimeHelper.requireNonNull(constants$2640.const$4,"gtk_color_button_set_color");
    }
    /**
     * {@snippet :
     * void gtk_color_button_set_color(struct _GtkColorButton* button, struct _GdkColor* color);
     * }
     */
    public static void gtk_color_button_set_color(MemorySegment button, MemorySegment color) {
        var mh$ = gtk_color_button_set_color$MH();
        try {
            mh$.invokeExact(button, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_get_color$MH() {
        return RuntimeHelper.requireNonNull(constants$2640.const$5,"gtk_color_button_get_color");
    }
    /**
     * {@snippet :
     * void gtk_color_button_get_color(struct _GtkColorButton* button, struct _GdkColor* color);
     * }
     */
    public static void gtk_color_button_get_color(MemorySegment button, MemorySegment color) {
        var mh$ = gtk_color_button_get_color$MH();
        try {
            mh$.invokeExact(button, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_set_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$2641.const$0,"gtk_color_button_set_alpha");
    }
    /**
     * {@snippet :
     * void gtk_color_button_set_alpha(struct _GtkColorButton* button, unsigned short alpha);
     * }
     */
    public static void gtk_color_button_set_alpha(MemorySegment button, short alpha) {
        var mh$ = gtk_color_button_set_alpha$MH();
        try {
            mh$.invokeExact(button, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_get_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$2641.const$1,"gtk_color_button_get_alpha");
    }
    /**
     * {@snippet :
     * unsigned short gtk_color_button_get_alpha(struct _GtkColorButton* button);
     * }
     */
    public static short gtk_color_button_get_alpha(MemorySegment button) {
        var mh$ = gtk_color_button_get_alpha$MH();
        try {
            return (short)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_set_use_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$2641.const$2,"gtk_color_button_set_use_alpha");
    }
    /**
     * {@snippet :
     * void gtk_color_button_set_use_alpha(struct _GtkColorButton* button, int use_alpha);
     * }
     */
    public static void gtk_color_button_set_use_alpha(MemorySegment button, int use_alpha) {
        var mh$ = gtk_color_button_set_use_alpha$MH();
        try {
            mh$.invokeExact(button, use_alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_get_use_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$2641.const$3,"gtk_color_button_get_use_alpha");
    }
    /**
     * {@snippet :
     * int gtk_color_button_get_use_alpha(struct _GtkColorButton* button);
     * }
     */
    public static int gtk_color_button_get_use_alpha(MemorySegment button) {
        var mh$ = gtk_color_button_get_use_alpha$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_set_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$2641.const$4,"gtk_color_button_set_rgba");
    }
    /**
     * {@snippet :
     * void gtk_color_button_set_rgba(struct _GtkColorButton* button, struct _GdkRGBA* rgba);
     * }
     */
    public static void gtk_color_button_set_rgba(MemorySegment button, MemorySegment rgba) {
        var mh$ = gtk_color_button_set_rgba$MH();
        try {
            mh$.invokeExact(button, rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_get_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$2641.const$5,"gtk_color_button_get_rgba");
    }
    /**
     * {@snippet :
     * void gtk_color_button_get_rgba(struct _GtkColorButton* button, struct _GdkRGBA* rgba);
     * }
     */
    public static void gtk_color_button_get_rgba(MemorySegment button, MemorySegment rgba) {
        var mh$ = gtk_color_button_get_rgba$MH();
        try {
            mh$.invokeExact(button, rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2643.const$3,"gtk_color_chooser_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_color_chooser_get_type();
     * }
     */
    public static long gtk_color_chooser_get_type() {
        var mh$ = gtk_color_chooser_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_get_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$2643.const$4,"gtk_color_chooser_get_rgba");
    }
    /**
     * {@snippet :
     * void gtk_color_chooser_get_rgba(struct _GtkColorChooser* chooser, struct _GdkRGBA* color);
     * }
     */
    public static void gtk_color_chooser_get_rgba(MemorySegment chooser, MemorySegment color) {
        var mh$ = gtk_color_chooser_get_rgba$MH();
        try {
            mh$.invokeExact(chooser, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_set_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$2643.const$5,"gtk_color_chooser_set_rgba");
    }
    /**
     * {@snippet :
     * void gtk_color_chooser_set_rgba(struct _GtkColorChooser* chooser, struct _GdkRGBA* color);
     * }
     */
    public static void gtk_color_chooser_set_rgba(MemorySegment chooser, MemorySegment color) {
        var mh$ = gtk_color_chooser_set_rgba$MH();
        try {
            mh$.invokeExact(chooser, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_get_use_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$2644.const$0,"gtk_color_chooser_get_use_alpha");
    }
    /**
     * {@snippet :
     * int gtk_color_chooser_get_use_alpha(struct _GtkColorChooser* chooser);
     * }
     */
    public static int gtk_color_chooser_get_use_alpha(MemorySegment chooser) {
        var mh$ = gtk_color_chooser_get_use_alpha$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_set_use_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$2644.const$1,"gtk_color_chooser_set_use_alpha");
    }
    /**
     * {@snippet :
     * void gtk_color_chooser_set_use_alpha(struct _GtkColorChooser* chooser, int use_alpha);
     * }
     */
    public static void gtk_color_chooser_set_use_alpha(MemorySegment chooser, int use_alpha) {
        var mh$ = gtk_color_chooser_set_use_alpha$MH();
        try {
            mh$.invokeExact(chooser, use_alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_add_palette$MH() {
        return RuntimeHelper.requireNonNull(constants$2644.const$2,"gtk_color_chooser_add_palette");
    }
    /**
     * {@snippet :
     * void gtk_color_chooser_add_palette(struct _GtkColorChooser* chooser, enum GtkOrientation orientation, int colors_per_line, int n_colors, struct _GdkRGBA* colors);
     * }
     */
    public static void gtk_color_chooser_add_palette(MemorySegment chooser, int orientation, int colors_per_line, int n_colors, MemorySegment colors) {
        var mh$ = gtk_color_chooser_add_palette$MH();
        try {
            mh$.invokeExact(chooser, orientation, colors_per_line, n_colors, colors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2646.const$2,"gtk_color_chooser_dialog_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_color_chooser_dialog_get_type();
     * }
     */
    public static long gtk_color_chooser_dialog_get_type() {
        var mh$ = gtk_color_chooser_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2646.const$3,"gtk_color_chooser_dialog_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_color_chooser_dialog_new(char* title, struct _GtkWindow* parent);
     * }
     */
    public static MemorySegment gtk_color_chooser_dialog_new(MemorySegment title, MemorySegment parent) {
        var mh$ = gtk_color_chooser_dialog_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(title, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_widget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2649.const$5,"gtk_color_chooser_widget_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_color_chooser_widget_get_type();
     * }
     */
    public static long gtk_color_chooser_widget_get_type() {
        var mh$ = gtk_color_chooser_widget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_widget_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2650.const$0,"gtk_color_chooser_widget_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_color_chooser_widget_new();
     * }
     */
    public static MemorySegment gtk_color_chooser_widget_new() {
        var mh$ = gtk_color_chooser_widget_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_hsv_to_rgb$MH() {
        return RuntimeHelper.requireNonNull(constants$2650.const$2,"gtk_hsv_to_rgb");
    }
    /**
     * {@snippet :
     * void gtk_hsv_to_rgb(double h, double s, double v, double* r, double* g, double* b);
     * }
     */
    public static void gtk_hsv_to_rgb(double h, double s, double v, MemorySegment r, MemorySegment g, MemorySegment b) {
        var mh$ = gtk_hsv_to_rgb$MH();
        try {
            mh$.invokeExact(h, s, v, r, g, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_rgb_to_hsv$MH() {
        return RuntimeHelper.requireNonNull(constants$2650.const$3,"gtk_rgb_to_hsv");
    }
    /**
     * {@snippet :
     * void gtk_rgb_to_hsv(double r, double g, double b, double* h, double* s, double* v);
     * }
     */
    public static void gtk_rgb_to_hsv(double r, double g, double b, MemorySegment h, MemorySegment s, MemorySegment v) {
        var mh$ = gtk_rgb_to_hsv$MH();
        try {
            mh$.invokeExact(r, g, b, h, s, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2652.const$3,"gtk_combo_box_text_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_combo_box_text_get_type();
     * }
     */
    public static long gtk_combo_box_text_get_type() {
        var mh$ = gtk_combo_box_text_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2652.const$4,"gtk_combo_box_text_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_combo_box_text_new();
     * }
     */
    public static MemorySegment gtk_combo_box_text_new() {
        var mh$ = gtk_combo_box_text_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_new_with_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$2652.const$5,"gtk_combo_box_text_new_with_entry");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_combo_box_text_new_with_entry();
     * }
     */
    public static MemorySegment gtk_combo_box_text_new_with_entry() {
        var mh$ = gtk_combo_box_text_new_with_entry$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_append_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2653.const$0,"gtk_combo_box_text_append_text");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_append_text(struct _GtkComboBoxText* combo_box, char* text);
     * }
     */
    public static void gtk_combo_box_text_append_text(MemorySegment combo_box, MemorySegment text) {
        var mh$ = gtk_combo_box_text_append_text$MH();
        try {
            mh$.invokeExact(combo_box, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_insert_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2653.const$1,"gtk_combo_box_text_insert_text");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_insert_text(struct _GtkComboBoxText* combo_box, int position, char* text);
     * }
     */
    public static void gtk_combo_box_text_insert_text(MemorySegment combo_box, int position, MemorySegment text) {
        var mh$ = gtk_combo_box_text_insert_text$MH();
        try {
            mh$.invokeExact(combo_box, position, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_prepend_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2653.const$2,"gtk_combo_box_text_prepend_text");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_prepend_text(struct _GtkComboBoxText* combo_box, char* text);
     * }
     */
    public static void gtk_combo_box_text_prepend_text(MemorySegment combo_box, MemorySegment text) {
        var mh$ = gtk_combo_box_text_prepend_text$MH();
        try {
            mh$.invokeExact(combo_box, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2653.const$3,"gtk_combo_box_text_remove");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_remove(struct _GtkComboBoxText* combo_box, int position);
     * }
     */
    public static void gtk_combo_box_text_remove(MemorySegment combo_box, int position) {
        var mh$ = gtk_combo_box_text_remove$MH();
        try {
            mh$.invokeExact(combo_box, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_remove_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2653.const$4,"gtk_combo_box_text_remove_all");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_remove_all(struct _GtkComboBoxText* combo_box);
     * }
     */
    public static void gtk_combo_box_text_remove_all(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_text_remove_all$MH();
        try {
            mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_get_active_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2653.const$5,"gtk_combo_box_text_get_active_text");
    }
    /**
     * {@snippet :
     * char* gtk_combo_box_text_get_active_text(struct _GtkComboBoxText* combo_box);
     * }
     */
    public static MemorySegment gtk_combo_box_text_get_active_text(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_text_get_active_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$2654.const$0,"gtk_combo_box_text_insert");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_insert(struct _GtkComboBoxText* combo_box, int position, char* id, char* text);
     * }
     */
    public static void gtk_combo_box_text_insert(MemorySegment combo_box, int position, MemorySegment id, MemorySegment text) {
        var mh$ = gtk_combo_box_text_insert$MH();
        try {
            mh$.invokeExact(combo_box, position, id, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_append$MH() {
        return RuntimeHelper.requireNonNull(constants$2654.const$1,"gtk_combo_box_text_append");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_append(struct _GtkComboBoxText* combo_box, char* id, char* text);
     * }
     */
    public static void gtk_combo_box_text_append(MemorySegment combo_box, MemorySegment id, MemorySegment text) {
        var mh$ = gtk_combo_box_text_append$MH();
        try {
            mh$.invokeExact(combo_box, id, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$2654.const$2,"gtk_combo_box_text_prepend");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_prepend(struct _GtkComboBoxText* combo_box, char* id, char* text);
     * }
     */
    public static void gtk_combo_box_text_prepend(MemorySegment combo_box, MemorySegment id, MemorySegment text) {
        var mh$ = gtk_combo_box_text_prepend$MH();
        try {
            mh$.invokeExact(combo_box, id, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkCssSectionType.GTK_CSS_SECTION_DOCUMENT = 0;
     * }
     */
    public static int GTK_CSS_SECTION_DOCUMENT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkCssSectionType.GTK_CSS_SECTION_IMPORT = 1;
     * }
     */
    public static int GTK_CSS_SECTION_IMPORT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkCssSectionType.GTK_CSS_SECTION_COLOR_DEFINITION = 2;
     * }
     */
    public static int GTK_CSS_SECTION_COLOR_DEFINITION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkCssSectionType.GTK_CSS_SECTION_BINDING_SET = 3;
     * }
     */
    public static int GTK_CSS_SECTION_BINDING_SET() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkCssSectionType.GTK_CSS_SECTION_RULESET = 4;
     * }
     */
    public static int GTK_CSS_SECTION_RULESET() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkCssSectionType.GTK_CSS_SECTION_SELECTOR = 5;
     * }
     */
    public static int GTK_CSS_SECTION_SELECTOR() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkCssSectionType.GTK_CSS_SECTION_DECLARATION = 6;
     * }
     */
    public static int GTK_CSS_SECTION_DECLARATION() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GtkCssSectionType.GTK_CSS_SECTION_VALUE = 7;
     * }
     */
    public static int GTK_CSS_SECTION_VALUE() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GtkCssSectionType.GTK_CSS_SECTION_KEYFRAMES = 8;
     * }
     */
    public static int GTK_CSS_SECTION_KEYFRAMES() {
        return (int)8L;
    }
    public static MethodHandle gtk_css_section_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2654.const$3,"gtk_css_section_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_css_section_get_type();
     * }
     */
    public static long gtk_css_section_get_type() {
        var mh$ = gtk_css_section_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$2654.const$4,"gtk_css_section_ref");
    }
    /**
     * {@snippet :
     * struct _GtkCssSection* gtk_css_section_ref(struct _GtkCssSection* section);
     * }
     */
    public static MemorySegment gtk_css_section_ref(MemorySegment section) {
        var mh$ = gtk_css_section_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$2654.const$5,"gtk_css_section_unref");
    }
    /**
     * {@snippet :
     * void gtk_css_section_unref(struct _GtkCssSection* section);
     * }
     */
    public static void gtk_css_section_unref(MemorySegment section) {
        var mh$ = gtk_css_section_unref$MH();
        try {
            mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_section_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2655.const$0,"gtk_css_section_get_section_type");
    }
    /**
     * {@snippet :
     * enum GtkCssSectionType gtk_css_section_get_section_type(struct _GtkCssSection* section);
     * }
     */
    public static int gtk_css_section_get_section_type(MemorySegment section) {
        var mh$ = gtk_css_section_get_section_type$MH();
        try {
            return (int)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$2655.const$1,"gtk_css_section_get_parent");
    }
    /**
     * {@snippet :
     * struct _GtkCssSection* gtk_css_section_get_parent(struct _GtkCssSection* section);
     * }
     */
    public static MemorySegment gtk_css_section_get_parent(MemorySegment section) {
        var mh$ = gtk_css_section_get_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2655.const$2,"gtk_css_section_get_file");
    }
    /**
     * {@snippet :
     * struct _GFile* gtk_css_section_get_file(struct _GtkCssSection* section);
     * }
     */
    public static MemorySegment gtk_css_section_get_file(MemorySegment section) {
        var mh$ = gtk_css_section_get_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_start_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2655.const$3,"gtk_css_section_get_start_line");
    }
    /**
     * {@snippet :
     * unsigned int gtk_css_section_get_start_line(struct _GtkCssSection* section);
     * }
     */
    public static int gtk_css_section_get_start_line(MemorySegment section) {
        var mh$ = gtk_css_section_get_start_line$MH();
        try {
            return (int)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_start_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2655.const$4,"gtk_css_section_get_start_position");
    }
    /**
     * {@snippet :
     * unsigned int gtk_css_section_get_start_position(struct _GtkCssSection* section);
     * }
     */
    public static int gtk_css_section_get_start_position(MemorySegment section) {
        var mh$ = gtk_css_section_get_start_position$MH();
        try {
            return (int)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_end_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2655.const$5,"gtk_css_section_get_end_line");
    }
    /**
     * {@snippet :
     * unsigned int gtk_css_section_get_end_line(struct _GtkCssSection* section);
     * }
     */
    public static int gtk_css_section_get_end_line(MemorySegment section) {
        var mh$ = gtk_css_section_get_end_line$MH();
        try {
            return (int)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_end_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2656.const$0,"gtk_css_section_get_end_position");
    }
    /**
     * {@snippet :
     * unsigned int gtk_css_section_get_end_position(struct _GtkCssSection* section);
     * }
     */
    public static int gtk_css_section_get_end_position(MemorySegment section) {
        var mh$ = gtk_css_section_get_end_position$MH();
        try {
            return (int)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkCssProviderError.GTK_CSS_PROVIDER_ERROR_FAILED = 0;
     * }
     */
    public static int GTK_CSS_PROVIDER_ERROR_FAILED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkCssProviderError.GTK_CSS_PROVIDER_ERROR_SYNTAX = 1;
     * }
     */
    public static int GTK_CSS_PROVIDER_ERROR_SYNTAX() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkCssProviderError.GTK_CSS_PROVIDER_ERROR_IMPORT = 2;
     * }
     */
    public static int GTK_CSS_PROVIDER_ERROR_IMPORT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkCssProviderError.GTK_CSS_PROVIDER_ERROR_NAME = 3;
     * }
     */
    public static int GTK_CSS_PROVIDER_ERROR_NAME() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkCssProviderError.GTK_CSS_PROVIDER_ERROR_DEPRECATED = 4;
     * }
     */
    public static int GTK_CSS_PROVIDER_ERROR_DEPRECATED() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkCssProviderError.GTK_CSS_PROVIDER_ERROR_UNKNOWN_VALUE = 5;
     * }
     */
    public static int GTK_CSS_PROVIDER_ERROR_UNKNOWN_VALUE() {
        return (int)5L;
    }
    public static MethodHandle gtk_css_provider_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$2656.const$1,"gtk_css_provider_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int gtk_css_provider_error_quark();
     * }
     */
    public static int gtk_css_provider_error_quark() {
        var mh$ = gtk_css_provider_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2658.const$1,"gtk_css_provider_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_css_provider_get_type();
     * }
     */
    public static long gtk_css_provider_get_type() {
        var mh$ = gtk_css_provider_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2658.const$2,"gtk_css_provider_new");
    }
    /**
     * {@snippet :
     * struct _GtkCssProvider* gtk_css_provider_new();
     * }
     */
    public static MemorySegment gtk_css_provider_new() {
        var mh$ = gtk_css_provider_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2658.const$3,"gtk_css_provider_to_string");
    }
    /**
     * {@snippet :
     * char* gtk_css_provider_to_string(struct _GtkCssProvider* provider);
     * }
     */
    public static MemorySegment gtk_css_provider_to_string(MemorySegment provider) {
        var mh$ = gtk_css_provider_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(provider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_data$MH() {
        return RuntimeHelper.requireNonNull(constants$2658.const$4,"gtk_css_provider_load_from_data");
    }
    /**
     * {@snippet :
     * int gtk_css_provider_load_from_data(struct _GtkCssProvider* css_provider, char* data, long length, struct _GError** error);
     * }
     */
    public static int gtk_css_provider_load_from_data(MemorySegment css_provider, MemorySegment data, long length, MemorySegment error) {
        var mh$ = gtk_css_provider_load_from_data$MH();
        try {
            return (int)mh$.invokeExact(css_provider, data, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2658.const$5,"gtk_css_provider_load_from_file");
    }
    /**
     * {@snippet :
     * int gtk_css_provider_load_from_file(struct _GtkCssProvider* css_provider, struct _GFile* file, struct _GError** error);
     * }
     */
    public static int gtk_css_provider_load_from_file(MemorySegment css_provider, MemorySegment file, MemorySegment error) {
        var mh$ = gtk_css_provider_load_from_file$MH();
        try {
            return (int)mh$.invokeExact(css_provider, file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2659.const$0,"gtk_css_provider_load_from_path");
    }
    /**
     * {@snippet :
     * int gtk_css_provider_load_from_path(struct _GtkCssProvider* css_provider, char* path, struct _GError** error);
     * }
     */
    public static int gtk_css_provider_load_from_path(MemorySegment css_provider, MemorySegment path, MemorySegment error) {
        var mh$ = gtk_css_provider_load_from_path$MH();
        try {
            return (int)mh$.invokeExact(css_provider, path, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$2659.const$1,"gtk_css_provider_load_from_resource");
    }
    /**
     * {@snippet :
     * void gtk_css_provider_load_from_resource(struct _GtkCssProvider* css_provider, char* resource_path);
     * }
     */
    public static void gtk_css_provider_load_from_resource(MemorySegment css_provider, MemorySegment resource_path) {
        var mh$ = gtk_css_provider_load_from_resource$MH();
        try {
            mh$.invokeExact(css_provider, resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2659.const$2,"gtk_css_provider_get_default");
    }
    /**
     * {@snippet :
     * struct _GtkCssProvider* gtk_css_provider_get_default();
     * }
     */
    public static MemorySegment gtk_css_provider_get_default() {
        var mh$ = gtk_css_provider_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_get_named$MH() {
        return RuntimeHelper.requireNonNull(constants$2659.const$3,"gtk_css_provider_get_named");
    }
    /**
     * {@snippet :
     * struct _GtkCssProvider* gtk_css_provider_get_named(char* name, char* variant);
     * }
     */
    public static MemorySegment gtk_css_provider_get_named(MemorySegment name, MemorySegment variant) {
        var mh$ = gtk_css_provider_get_named$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_MISC = 1;
     * }
     */
    public static int GTK_DEBUG_MISC() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_PLUGSOCKET = 2;
     * }
     */
    public static int GTK_DEBUG_PLUGSOCKET() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_TEXT = 4;
     * }
     */
    public static int GTK_DEBUG_TEXT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_TREE = 8;
     * }
     */
    public static int GTK_DEBUG_TREE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_UPDATES = 16;
     * }
     */
    public static int GTK_DEBUG_UPDATES() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_KEYBINDINGS = 32;
     * }
     */
    public static int GTK_DEBUG_KEYBINDINGS() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_MULTIHEAD = 64;
     * }
     */
    public static int GTK_DEBUG_MULTIHEAD() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_MODULES = 128;
     * }
     */
    public static int GTK_DEBUG_MODULES() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_GEOMETRY = 256;
     * }
     */
    public static int GTK_DEBUG_GEOMETRY() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_ICONTHEME = 512;
     * }
     */
    public static int GTK_DEBUG_ICONTHEME() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_PRINTING = 1024;
     * }
     */
    public static int GTK_DEBUG_PRINTING() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_BUILDER = 2048;
     * }
     */
    public static int GTK_DEBUG_BUILDER() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_SIZE_REQUEST = 4096;
     * }
     */
    public static int GTK_DEBUG_SIZE_REQUEST() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_NO_CSS_CACHE = 8192;
     * }
     */
    public static int GTK_DEBUG_NO_CSS_CACHE() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_BASELINES = 16384;
     * }
     */
    public static int GTK_DEBUG_BASELINES() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_PIXEL_CACHE = 32768;
     * }
     */
    public static int GTK_DEBUG_PIXEL_CACHE() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_NO_PIXEL_CACHE = 65536;
     * }
     */
    public static int GTK_DEBUG_NO_PIXEL_CACHE() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_INTERACTIVE = 131072;
     * }
     */
    public static int GTK_DEBUG_INTERACTIVE() {
        return (int)131072L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_TOUCHSCREEN = 262144;
     * }
     */
    public static int GTK_DEBUG_TOUCHSCREEN() {
        return (int)262144L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_ACTIONS = 524288;
     * }
     */
    public static int GTK_DEBUG_ACTIONS() {
        return (int)524288L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_RESIZE = 1048576;
     * }
     */
    public static int GTK_DEBUG_RESIZE() {
        return (int)1048576L;
    }
    /**
     * {@snippet :
     * enum GtkDebugFlag.GTK_DEBUG_LAYOUT = 2097152;
     * }
     */
    public static int GTK_DEBUG_LAYOUT() {
        return (int)2097152L;
    }
    public static MethodHandle gtk_get_debug_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$2659.const$4,"gtk_get_debug_flags");
    }
    /**
     * {@snippet :
     * unsigned int gtk_get_debug_flags();
     * }
     */
    public static int gtk_get_debug_flags() {
        var mh$ = gtk_get_debug_flags$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_set_debug_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$2659.const$5,"gtk_set_debug_flags");
    }
    /**
     * {@snippet :
     * void gtk_set_debug_flags(unsigned int flags);
     * }
     */
    public static void gtk_set_debug_flags(int flags) {
        var mh$ = gtk_set_debug_flags$MH();
        try {
            mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkDestDefaults.GTK_DEST_DEFAULT_MOTION = 1;
     * }
     */
    public static int GTK_DEST_DEFAULT_MOTION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkDestDefaults.GTK_DEST_DEFAULT_HIGHLIGHT = 2;
     * }
     */
    public static int GTK_DEST_DEFAULT_HIGHLIGHT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkDestDefaults.GTK_DEST_DEFAULT_DROP = 4;
     * }
     */
    public static int GTK_DEST_DEFAULT_DROP() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkDestDefaults.GTK_DEST_DEFAULT_ALL = 7;
     * }
     */
    public static int GTK_DEST_DEFAULT_ALL() {
        return (int)7L;
    }
    public static MethodHandle gtk_drag_dest_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2660.const$0,"gtk_drag_dest_set");
    }
    /**
     * {@snippet :
     * void gtk_drag_dest_set(struct _GtkWidget* widget, enum GtkDestDefaults flags, struct _GtkTargetEntry* targets, int n_targets, enum GdkDragAction actions);
     * }
     */
    public static void gtk_drag_dest_set(MemorySegment widget, int flags, MemorySegment targets, int n_targets, int actions) {
        var mh$ = gtk_drag_dest_set$MH();
        try {
            mh$.invokeExact(widget, flags, targets, n_targets, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_set_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$2660.const$1,"gtk_drag_dest_set_proxy");
    }
    /**
     * {@snippet :
     * void gtk_drag_dest_set_proxy(struct _GtkWidget* widget, struct _GdkWindow* proxy_window, enum GdkDragProtocol protocol, int use_coordinates);
     * }
     */
    public static void gtk_drag_dest_set_proxy(MemorySegment widget, MemorySegment proxy_window, int protocol, int use_coordinates) {
        var mh$ = gtk_drag_dest_set_proxy$MH();
        try {
            mh$.invokeExact(widget, proxy_window, protocol, use_coordinates);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_unset$MH() {
        return RuntimeHelper.requireNonNull(constants$2660.const$2,"gtk_drag_dest_unset");
    }
    /**
     * {@snippet :
     * void gtk_drag_dest_unset(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_drag_dest_unset(MemorySegment widget) {
        var mh$ = gtk_drag_dest_unset$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_find_target$MH() {
        return RuntimeHelper.requireNonNull(constants$2660.const$3,"gtk_drag_dest_find_target");
    }
    /**
     * {@snippet :
     * struct _GdkAtom* gtk_drag_dest_find_target(struct _GtkWidget* widget, struct _GdkDragContext* context, struct _GtkTargetList* target_list);
     * }
     */
    public static MemorySegment gtk_drag_dest_find_target(MemorySegment widget, MemorySegment context, MemorySegment target_list) {
        var mh$ = gtk_drag_dest_find_target$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, context, target_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_get_target_list$MH() {
        return RuntimeHelper.requireNonNull(constants$2660.const$4,"gtk_drag_dest_get_target_list");
    }
    /**
     * {@snippet :
     * struct _GtkTargetList* gtk_drag_dest_get_target_list(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_drag_dest_get_target_list(MemorySegment widget) {
        var mh$ = gtk_drag_dest_get_target_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_set_target_list$MH() {
        return RuntimeHelper.requireNonNull(constants$2660.const$5,"gtk_drag_dest_set_target_list");
    }
    /**
     * {@snippet :
     * void gtk_drag_dest_set_target_list(struct _GtkWidget* widget, struct _GtkTargetList* target_list);
     * }
     */
    public static void gtk_drag_dest_set_target_list(MemorySegment widget, MemorySegment target_list) {
        var mh$ = gtk_drag_dest_set_target_list$MH();
        try {
            mh$.invokeExact(widget, target_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_add_text_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$2661.const$0,"gtk_drag_dest_add_text_targets");
    }
    /**
     * {@snippet :
     * void gtk_drag_dest_add_text_targets(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_drag_dest_add_text_targets(MemorySegment widget) {
        var mh$ = gtk_drag_dest_add_text_targets$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_add_image_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$2661.const$1,"gtk_drag_dest_add_image_targets");
    }
    /**
     * {@snippet :
     * void gtk_drag_dest_add_image_targets(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_drag_dest_add_image_targets(MemorySegment widget) {
        var mh$ = gtk_drag_dest_add_image_targets$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_add_uri_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$2661.const$2,"gtk_drag_dest_add_uri_targets");
    }
    /**
     * {@snippet :
     * void gtk_drag_dest_add_uri_targets(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_drag_dest_add_uri_targets(MemorySegment widget) {
        var mh$ = gtk_drag_dest_add_uri_targets$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_set_track_motion$MH() {
        return RuntimeHelper.requireNonNull(constants$2661.const$3,"gtk_drag_dest_set_track_motion");
    }
    /**
     * {@snippet :
     * void gtk_drag_dest_set_track_motion(struct _GtkWidget* widget, int track_motion);
     * }
     */
    public static void gtk_drag_dest_set_track_motion(MemorySegment widget, int track_motion) {
        var mh$ = gtk_drag_dest_set_track_motion$MH();
        try {
            mh$.invokeExact(widget, track_motion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_get_track_motion$MH() {
        return RuntimeHelper.requireNonNull(constants$2661.const$4,"gtk_drag_dest_get_track_motion");
    }
    /**
     * {@snippet :
     * int gtk_drag_dest_get_track_motion(struct _GtkWidget* widget);
     * }
     */
    public static int gtk_drag_dest_get_track_motion(MemorySegment widget) {
        var mh$ = gtk_drag_dest_get_track_motion$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2661.const$5,"gtk_drag_source_set");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_set(struct _GtkWidget* widget, enum GdkModifierType start_button_mask, struct _GtkTargetEntry* targets, int n_targets, enum GdkDragAction actions);
     * }
     */
    public static void gtk_drag_source_set(MemorySegment widget, int start_button_mask, MemorySegment targets, int n_targets, int actions) {
        var mh$ = gtk_drag_source_set$MH();
        try {
            mh$.invokeExact(widget, start_button_mask, targets, n_targets, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_unset$MH() {
        return RuntimeHelper.requireNonNull(constants$2662.const$0,"gtk_drag_source_unset");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_unset(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_drag_source_unset(MemorySegment widget) {
        var mh$ = gtk_drag_source_unset$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_get_target_list$MH() {
        return RuntimeHelper.requireNonNull(constants$2662.const$1,"gtk_drag_source_get_target_list");
    }
    /**
     * {@snippet :
     * struct _GtkTargetList* gtk_drag_source_get_target_list(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_drag_source_get_target_list(MemorySegment widget) {
        var mh$ = gtk_drag_source_get_target_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_target_list$MH() {
        return RuntimeHelper.requireNonNull(constants$2662.const$2,"gtk_drag_source_set_target_list");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_set_target_list(struct _GtkWidget* widget, struct _GtkTargetList* target_list);
     * }
     */
    public static void gtk_drag_source_set_target_list(MemorySegment widget, MemorySegment target_list) {
        var mh$ = gtk_drag_source_set_target_list$MH();
        try {
            mh$.invokeExact(widget, target_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_add_text_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$2662.const$3,"gtk_drag_source_add_text_targets");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_add_text_targets(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_drag_source_add_text_targets(MemorySegment widget) {
        var mh$ = gtk_drag_source_add_text_targets$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_add_image_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$2662.const$4,"gtk_drag_source_add_image_targets");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_add_image_targets(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_drag_source_add_image_targets(MemorySegment widget) {
        var mh$ = gtk_drag_source_add_image_targets$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_add_uri_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$2662.const$5,"gtk_drag_source_add_uri_targets");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_add_uri_targets(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_drag_source_add_uri_targets(MemorySegment widget) {
        var mh$ = gtk_drag_source_add_uri_targets$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_icon_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2663.const$0,"gtk_drag_source_set_icon_pixbuf");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_set_icon_pixbuf(struct _GtkWidget* widget, struct _GdkPixbuf* pixbuf);
     * }
     */
    public static void gtk_drag_source_set_icon_pixbuf(MemorySegment widget, MemorySegment pixbuf) {
        var mh$ = gtk_drag_source_set_icon_pixbuf$MH();
        try {
            mh$.invokeExact(widget, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_icon_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$2663.const$1,"gtk_drag_source_set_icon_stock");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_set_icon_stock(struct _GtkWidget* widget, char* stock_id);
     * }
     */
    public static void gtk_drag_source_set_icon_stock(MemorySegment widget, MemorySegment stock_id) {
        var mh$ = gtk_drag_source_set_icon_stock$MH();
        try {
            mh$.invokeExact(widget, stock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2663.const$2,"gtk_drag_source_set_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_set_icon_name(struct _GtkWidget* widget, char* icon_name);
     * }
     */
    public static void gtk_drag_source_set_icon_name(MemorySegment widget, MemorySegment icon_name) {
        var mh$ = gtk_drag_source_set_icon_name$MH();
        try {
            mh$.invokeExact(widget, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_icon_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$2663.const$3,"gtk_drag_source_set_icon_gicon");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_set_icon_gicon(struct _GtkWidget* widget, struct _GIcon* icon);
     * }
     */
    public static void gtk_drag_source_set_icon_gicon(MemorySegment widget, MemorySegment icon) {
        var mh$ = gtk_drag_source_set_icon_gicon$MH();
        try {
            mh$.invokeExact(widget, icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2665.const$3,"gtk_drawing_area_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_drawing_area_get_type();
     * }
     */
    public static long gtk_drawing_area_get_type() {
        var mh$ = gtk_drawing_area_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2665.const$4,"gtk_drawing_area_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_drawing_area_new();
     * }
     */
    public static MemorySegment gtk_drawing_area_new() {
        var mh$ = gtk_drawing_area_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2667.const$4,"gtk_event_box_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_event_box_get_type();
     * }
     */
    public static long gtk_event_box_get_type() {
        var mh$ = gtk_event_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2667.const$5,"gtk_event_box_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_event_box_new();
     * }
     */
    public static MemorySegment gtk_event_box_new() {
        var mh$ = gtk_event_box_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_box_get_visible_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2668.const$0,"gtk_event_box_get_visible_window");
    }
    /**
     * {@snippet :
     * int gtk_event_box_get_visible_window(struct _GtkEventBox* event_box);
     * }
     */
    public static int gtk_event_box_get_visible_window(MemorySegment event_box) {
        var mh$ = gtk_event_box_get_visible_window$MH();
        try {
            return (int)mh$.invokeExact(event_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_box_set_visible_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2668.const$1,"gtk_event_box_set_visible_window");
    }
    /**
     * {@snippet :
     * void gtk_event_box_set_visible_window(struct _GtkEventBox* event_box, int visible_window);
     * }
     */
    public static void gtk_event_box_set_visible_window(MemorySegment event_box, int visible_window) {
        var mh$ = gtk_event_box_set_visible_window$MH();
        try {
            mh$.invokeExact(event_box, visible_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_box_get_above_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2668.const$2,"gtk_event_box_get_above_child");
    }
    /**
     * {@snippet :
     * int gtk_event_box_get_above_child(struct _GtkEventBox* event_box);
     * }
     */
    public static int gtk_event_box_get_above_child(MemorySegment event_box) {
        var mh$ = gtk_event_box_get_above_child$MH();
        try {
            return (int)mh$.invokeExact(event_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_box_set_above_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2668.const$3,"gtk_event_box_set_above_child");
    }
    /**
     * {@snippet :
     * void gtk_event_box_set_above_child(struct _GtkEventBox* event_box, int above_child);
     * }
     */
    public static void gtk_event_box_set_above_child(MemorySegment event_box, int above_child) {
        var mh$ = gtk_event_box_set_above_child$MH();
        try {
            mh$.invokeExact(event_box, above_child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2668.const$4,"gtk_event_controller_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_event_controller_get_type();
     * }
     */
    public static long gtk_event_controller_get_type() {
        var mh$ = gtk_event_controller_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2668.const$5,"gtk_event_controller_get_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_event_controller_get_widget(struct _GtkEventController* controller);
     * }
     */
    public static MemorySegment gtk_event_controller_get_widget(MemorySegment controller) {
        var mh$ = gtk_event_controller_get_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_handle_event$MH() {
        return RuntimeHelper.requireNonNull(constants$2669.const$0,"gtk_event_controller_handle_event");
    }
    /**
     * {@snippet :
     * int gtk_event_controller_handle_event(struct _GtkEventController* controller, union _GdkEvent* event);
     * }
     */
    public static int gtk_event_controller_handle_event(MemorySegment controller, MemorySegment event) {
        var mh$ = gtk_event_controller_handle_event$MH();
        try {
            return (int)mh$.invokeExact(controller, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$2669.const$1,"gtk_event_controller_reset");
    }
    /**
     * {@snippet :
     * void gtk_event_controller_reset(struct _GtkEventController* controller);
     * }
     */
    public static void gtk_event_controller_reset(MemorySegment controller) {
        var mh$ = gtk_event_controller_reset$MH();
        try {
            mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_propagation_phase$MH() {
        return RuntimeHelper.requireNonNull(constants$2669.const$2,"gtk_event_controller_get_propagation_phase");
    }
    /**
     * {@snippet :
     * enum GtkPropagationPhase gtk_event_controller_get_propagation_phase(struct _GtkEventController* controller);
     * }
     */
    public static int gtk_event_controller_get_propagation_phase(MemorySegment controller) {
        var mh$ = gtk_event_controller_get_propagation_phase$MH();
        try {
            return (int)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_set_propagation_phase$MH() {
        return RuntimeHelper.requireNonNull(constants$2669.const$3,"gtk_event_controller_set_propagation_phase");
    }
    /**
     * {@snippet :
     * void gtk_event_controller_set_propagation_phase(struct _GtkEventController* controller, enum GtkPropagationPhase phase);
     * }
     */
    public static void gtk_event_controller_set_propagation_phase(MemorySegment controller, int phase) {
        var mh$ = gtk_event_controller_set_propagation_phase$MH();
        try {
            mh$.invokeExact(controller, phase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2669.const$4,"gtk_event_controller_key_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_event_controller_key_get_type();
     * }
     */
    public static long gtk_event_controller_key_get_type() {
        var mh$ = gtk_event_controller_key_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2669.const$5,"gtk_event_controller_key_new");
    }
    /**
     * {@snippet :
     * struct _GtkEventController* gtk_event_controller_key_new(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_event_controller_key_new(MemorySegment widget) {
        var mh$ = gtk_event_controller_key_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_set_im_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2670.const$0,"gtk_event_controller_key_set_im_context");
    }
    /**
     * {@snippet :
     * void gtk_event_controller_key_set_im_context(struct _GtkEventControllerKey* controller, struct _GtkIMContext* im_context);
     * }
     */
    public static void gtk_event_controller_key_set_im_context(MemorySegment controller, MemorySegment im_context) {
        var mh$ = gtk_event_controller_key_set_im_context$MH();
        try {
            mh$.invokeExact(controller, im_context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_get_im_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2670.const$1,"gtk_event_controller_key_get_im_context");
    }
    /**
     * {@snippet :
     * struct _GtkIMContext* gtk_event_controller_key_get_im_context(struct _GtkEventControllerKey* controller);
     * }
     */
    public static MemorySegment gtk_event_controller_key_get_im_context(MemorySegment controller) {
        var mh$ = gtk_event_controller_key_get_im_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_forward$MH() {
        return RuntimeHelper.requireNonNull(constants$2670.const$2,"gtk_event_controller_key_forward");
    }
    /**
     * {@snippet :
     * int gtk_event_controller_key_forward(struct _GtkEventControllerKey* controller, struct _GtkWidget* widget);
     * }
     */
    public static int gtk_event_controller_key_forward(MemorySegment controller, MemorySegment widget) {
        var mh$ = gtk_event_controller_key_forward$MH();
        try {
            return (int)mh$.invokeExact(controller, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_get_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2670.const$3,"gtk_event_controller_key_get_group");
    }
    /**
     * {@snippet :
     * unsigned int gtk_event_controller_key_get_group(struct _GtkEventControllerKey* controller);
     * }
     */
    public static int gtk_event_controller_key_get_group(MemorySegment controller) {
        var mh$ = gtk_event_controller_key_get_group$MH();
        try {
            return (int)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_motion_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2670.const$4,"gtk_event_controller_motion_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_event_controller_motion_get_type();
     * }
     */
    public static long gtk_event_controller_motion_get_type() {
        var mh$ = gtk_event_controller_motion_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_motion_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2670.const$5,"gtk_event_controller_motion_new");
    }
    /**
     * {@snippet :
     * struct _GtkEventController* gtk_event_controller_motion_new(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_event_controller_motion_new(MemorySegment widget) {
        var mh$ = gtk_event_controller_motion_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkEventControllerScrollFlags.GTK_EVENT_CONTROLLER_SCROLL_NONE = 0;
     * }
     */
    public static int GTK_EVENT_CONTROLLER_SCROLL_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkEventControllerScrollFlags.GTK_EVENT_CONTROLLER_SCROLL_VERTICAL = 1;
     * }
     */
    public static int GTK_EVENT_CONTROLLER_SCROLL_VERTICAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkEventControllerScrollFlags.GTK_EVENT_CONTROLLER_SCROLL_HORIZONTAL = 2;
     * }
     */
    public static int GTK_EVENT_CONTROLLER_SCROLL_HORIZONTAL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkEventControllerScrollFlags.GTK_EVENT_CONTROLLER_SCROLL_DISCRETE = 4;
     * }
     */
    public static int GTK_EVENT_CONTROLLER_SCROLL_DISCRETE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkEventControllerScrollFlags.GTK_EVENT_CONTROLLER_SCROLL_KINETIC = 8;
     * }
     */
    public static int GTK_EVENT_CONTROLLER_SCROLL_KINETIC() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GtkEventControllerScrollFlags.GTK_EVENT_CONTROLLER_SCROLL_BOTH_AXES = 3;
     * }
     */
    public static int GTK_EVENT_CONTROLLER_SCROLL_BOTH_AXES() {
        return (int)3L;
    }
    public static MethodHandle gtk_event_controller_scroll_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2671.const$0,"gtk_event_controller_scroll_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_event_controller_scroll_get_type();
     * }
     */
    public static long gtk_event_controller_scroll_get_type() {
        var mh$ = gtk_event_controller_scroll_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_scroll_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2671.const$1,"gtk_event_controller_scroll_new");
    }
    /**
     * {@snippet :
     * struct _GtkEventController* gtk_event_controller_scroll_new(struct _GtkWidget* widget, enum GtkEventControllerScrollFlags flags);
     * }
     */
    public static MemorySegment gtk_event_controller_scroll_new(MemorySegment widget, int flags) {
        var mh$ = gtk_event_controller_scroll_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_scroll_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$2671.const$2,"gtk_event_controller_scroll_set_flags");
    }
    /**
     * {@snippet :
     * void gtk_event_controller_scroll_set_flags(struct _GtkEventControllerScroll* scroll, enum GtkEventControllerScrollFlags flags);
     * }
     */
    public static void gtk_event_controller_scroll_set_flags(MemorySegment scroll, int flags) {
        var mh$ = gtk_event_controller_scroll_set_flags$MH();
        try {
            mh$.invokeExact(scroll, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_scroll_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$2671.const$3,"gtk_event_controller_scroll_get_flags");
    }
    /**
     * {@snippet :
     * enum GtkEventControllerScrollFlags gtk_event_controller_scroll_get_flags(struct _GtkEventControllerScroll* scroll);
     * }
     */
    public static int gtk_event_controller_scroll_get_flags(MemorySegment scroll) {
        var mh$ = gtk_event_controller_scroll_get_flags$MH();
        try {
            return (int)mh$.invokeExact(scroll);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2673.const$5,"gtk_expander_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_expander_get_type();
     * }
     */
    public static long gtk_expander_get_type() {
        var mh$ = gtk_expander_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2674.const$0,"gtk_expander_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_expander_new(char* label);
     * }
     */
    public static MemorySegment gtk_expander_new(MemorySegment label) {
        var mh$ = gtk_expander_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$2674.const$1,"gtk_expander_new_with_mnemonic");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_expander_new_with_mnemonic(char* label);
     * }
     */
    public static MemorySegment gtk_expander_new_with_mnemonic(MemorySegment label) {
        var mh$ = gtk_expander_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_expanded$MH() {
        return RuntimeHelper.requireNonNull(constants$2674.const$2,"gtk_expander_set_expanded");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_expanded(struct _GtkExpander* expander, int expanded);
     * }
     */
    public static void gtk_expander_set_expanded(MemorySegment expander, int expanded) {
        var mh$ = gtk_expander_set_expanded$MH();
        try {
            mh$.invokeExact(expander, expanded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_expanded$MH() {
        return RuntimeHelper.requireNonNull(constants$2674.const$3,"gtk_expander_get_expanded");
    }
    /**
     * {@snippet :
     * int gtk_expander_get_expanded(struct _GtkExpander* expander);
     * }
     */
    public static int gtk_expander_get_expanded(MemorySegment expander) {
        var mh$ = gtk_expander_get_expanded$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2674.const$4,"gtk_expander_set_spacing");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_spacing(struct _GtkExpander* expander, int spacing);
     * }
     */
    public static void gtk_expander_set_spacing(MemorySegment expander, int spacing) {
        var mh$ = gtk_expander_set_spacing$MH();
        try {
            mh$.invokeExact(expander, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2674.const$5,"gtk_expander_get_spacing");
    }
    /**
     * {@snippet :
     * int gtk_expander_get_spacing(struct _GtkExpander* expander);
     * }
     */
    public static int gtk_expander_get_spacing(MemorySegment expander) {
        var mh$ = gtk_expander_get_spacing$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2675.const$0,"gtk_expander_set_label");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_label(struct _GtkExpander* expander, char* label);
     * }
     */
    public static void gtk_expander_set_label(MemorySegment expander, MemorySegment label) {
        var mh$ = gtk_expander_set_label$MH();
        try {
            mh$.invokeExact(expander, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2675.const$1,"gtk_expander_get_label");
    }
    /**
     * {@snippet :
     * char* gtk_expander_get_label(struct _GtkExpander* expander);
     * }
     */
    public static MemorySegment gtk_expander_get_label(MemorySegment expander) {
        var mh$ = gtk_expander_get_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$2675.const$2,"gtk_expander_set_use_underline");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_use_underline(struct _GtkExpander* expander, int use_underline);
     * }
     */
    public static void gtk_expander_set_use_underline(MemorySegment expander, int use_underline) {
        var mh$ = gtk_expander_set_use_underline$MH();
        try {
            mh$.invokeExact(expander, use_underline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$2675.const$3,"gtk_expander_get_use_underline");
    }
    /**
     * {@snippet :
     * int gtk_expander_get_use_underline(struct _GtkExpander* expander);
     * }
     */
    public static int gtk_expander_get_use_underline(MemorySegment expander) {
        var mh$ = gtk_expander_get_use_underline$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_use_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2675.const$4,"gtk_expander_set_use_markup");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_use_markup(struct _GtkExpander* expander, int use_markup);
     * }
     */
    public static void gtk_expander_set_use_markup(MemorySegment expander, int use_markup) {
        var mh$ = gtk_expander_set_use_markup$MH();
        try {
            mh$.invokeExact(expander, use_markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_use_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2675.const$5,"gtk_expander_get_use_markup");
    }
    /**
     * {@snippet :
     * int gtk_expander_get_use_markup(struct _GtkExpander* expander);
     * }
     */
    public static int gtk_expander_get_use_markup(MemorySegment expander) {
        var mh$ = gtk_expander_get_use_markup$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2676.const$0,"gtk_expander_set_label_widget");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_label_widget(struct _GtkExpander* expander, struct _GtkWidget* label_widget);
     * }
     */
    public static void gtk_expander_set_label_widget(MemorySegment expander, MemorySegment label_widget) {
        var mh$ = gtk_expander_set_label_widget$MH();
        try {
            mh$.invokeExact(expander, label_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2676.const$1,"gtk_expander_get_label_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_expander_get_label_widget(struct _GtkExpander* expander);
     * }
     */
    public static MemorySegment gtk_expander_get_label_widget(MemorySegment expander) {
        var mh$ = gtk_expander_get_label_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_label_fill$MH() {
        return RuntimeHelper.requireNonNull(constants$2676.const$2,"gtk_expander_set_label_fill");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_label_fill(struct _GtkExpander* expander, int label_fill);
     * }
     */
    public static void gtk_expander_set_label_fill(MemorySegment expander, int label_fill) {
        var mh$ = gtk_expander_set_label_fill$MH();
        try {
            mh$.invokeExact(expander, label_fill);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_label_fill$MH() {
        return RuntimeHelper.requireNonNull(constants$2676.const$3,"gtk_expander_get_label_fill");
    }
    /**
     * {@snippet :
     * int gtk_expander_get_label_fill(struct _GtkExpander* expander);
     * }
     */
    public static int gtk_expander_get_label_fill(MemorySegment expander) {
        var mh$ = gtk_expander_get_label_fill$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_resize_toplevel$MH() {
        return RuntimeHelper.requireNonNull(constants$2676.const$4,"gtk_expander_set_resize_toplevel");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_resize_toplevel(struct _GtkExpander* expander, int resize_toplevel);
     * }
     */
    public static void gtk_expander_set_resize_toplevel(MemorySegment expander, int resize_toplevel) {
        var mh$ = gtk_expander_set_resize_toplevel$MH();
        try {
            mh$.invokeExact(expander, resize_toplevel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_resize_toplevel$MH() {
        return RuntimeHelper.requireNonNull(constants$2676.const$5,"gtk_expander_get_resize_toplevel");
    }
    /**
     * {@snippet :
     * int gtk_expander_get_resize_toplevel(struct _GtkExpander* expander);
     * }
     */
    public static int gtk_expander_get_resize_toplevel(MemorySegment expander) {
        var mh$ = gtk_expander_get_resize_toplevel$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2679.const$3,"gtk_fixed_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_fixed_get_type();
     * }
     */
    public static long gtk_fixed_get_type() {
        var mh$ = gtk_fixed_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2679.const$4,"gtk_fixed_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_fixed_new();
     * }
     */
    public static MemorySegment gtk_fixed_new() {
        var mh$ = gtk_fixed_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_put$MH() {
        return RuntimeHelper.requireNonNull(constants$2679.const$5,"gtk_fixed_put");
    }
    /**
     * {@snippet :
     * void gtk_fixed_put(struct _GtkFixed* fixed, struct _GtkWidget* widget, int x, int y);
     * }
     */
    public static void gtk_fixed_put(MemorySegment fixed, MemorySegment widget, int x, int y) {
        var mh$ = gtk_fixed_put$MH();
        try {
            mh$.invokeExact(fixed, widget, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_move$MH() {
        return RuntimeHelper.requireNonNull(constants$2680.const$0,"gtk_fixed_move");
    }
    /**
     * {@snippet :
     * void gtk_fixed_move(struct _GtkFixed* fixed, struct _GtkWidget* widget, int x, int y);
     * }
     */
    public static void gtk_fixed_move(MemorySegment fixed, MemorySegment widget, int x, int y) {
        var mh$ = gtk_fixed_move$MH();
        try {
            mh$.invokeExact(fixed, widget, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkFileFilterFlags.GTK_FILE_FILTER_FILENAME = 1;
     * }
     */
    public static int GTK_FILE_FILTER_FILENAME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkFileFilterFlags.GTK_FILE_FILTER_URI = 2;
     * }
     */
    public static int GTK_FILE_FILTER_URI() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkFileFilterFlags.GTK_FILE_FILTER_DISPLAY_NAME = 4;
     * }
     */
    public static int GTK_FILE_FILTER_DISPLAY_NAME() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkFileFilterFlags.GTK_FILE_FILTER_MIME_TYPE = 8;
     * }
     */
    public static int GTK_FILE_FILTER_MIME_TYPE() {
        return (int)8L;
    }
    public static MethodHandle gtk_file_filter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2681.const$2,"gtk_file_filter_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_file_filter_get_type();
     * }
     */
    public static long gtk_file_filter_get_type() {
        var mh$ = gtk_file_filter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2681.const$3,"gtk_file_filter_new");
    }
    /**
     * {@snippet :
     * struct _GtkFileFilter* gtk_file_filter_new();
     * }
     */
    public static MemorySegment gtk_file_filter_new() {
        var mh$ = gtk_file_filter_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2681.const$4,"gtk_file_filter_set_name");
    }
    /**
     * {@snippet :
     * void gtk_file_filter_set_name(struct _GtkFileFilter* filter, char* name);
     * }
     */
    public static void gtk_file_filter_set_name(MemorySegment filter, MemorySegment name) {
        var mh$ = gtk_file_filter_set_name$MH();
        try {
            mh$.invokeExact(filter, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2681.const$5,"gtk_file_filter_get_name");
    }
    /**
     * {@snippet :
     * char* gtk_file_filter_get_name(struct _GtkFileFilter* filter);
     * }
     */
    public static MemorySegment gtk_file_filter_get_name(MemorySegment filter) {
        var mh$ = gtk_file_filter_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2682.const$0,"gtk_file_filter_add_mime_type");
    }
    /**
     * {@snippet :
     * void gtk_file_filter_add_mime_type(struct _GtkFileFilter* filter, char* mime_type);
     * }
     */
    public static void gtk_file_filter_add_mime_type(MemorySegment filter, MemorySegment mime_type) {
        var mh$ = gtk_file_filter_add_mime_type$MH();
        try {
            mh$.invokeExact(filter, mime_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_pattern$MH() {
        return RuntimeHelper.requireNonNull(constants$2682.const$1,"gtk_file_filter_add_pattern");
    }
    /**
     * {@snippet :
     * void gtk_file_filter_add_pattern(struct _GtkFileFilter* filter, char* pattern);
     * }
     */
    public static void gtk_file_filter_add_pattern(MemorySegment filter, MemorySegment pattern) {
        var mh$ = gtk_file_filter_add_pattern$MH();
        try {
            mh$.invokeExact(filter, pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_pixbuf_formats$MH() {
        return RuntimeHelper.requireNonNull(constants$2682.const$2,"gtk_file_filter_add_pixbuf_formats");
    }
    /**
     * {@snippet :
     * void gtk_file_filter_add_pixbuf_formats(struct _GtkFileFilter* filter);
     * }
     */
    public static void gtk_file_filter_add_pixbuf_formats(MemorySegment filter) {
        var mh$ = gtk_file_filter_add_pixbuf_formats$MH();
        try {
            mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_custom$MH() {
        return RuntimeHelper.requireNonNull(constants$2682.const$5,"gtk_file_filter_add_custom");
    }
    /**
     * {@snippet :
     * void gtk_file_filter_add_custom(struct _GtkFileFilter* filter, enum GtkFileFilterFlags needed, int (*func)(struct _GtkFileFilterInfo*,void*), void* data, void (*notify)(void*));
     * }
     */
    public static void gtk_file_filter_add_custom(MemorySegment filter, int needed, MemorySegment func, MemorySegment data, MemorySegment notify) {
        var mh$ = gtk_file_filter_add_custom$MH();
        try {
            mh$.invokeExact(filter, needed, func, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_get_needed$MH() {
        return RuntimeHelper.requireNonNull(constants$2683.const$0,"gtk_file_filter_get_needed");
    }
    /**
     * {@snippet :
     * enum GtkFileFilterFlags gtk_file_filter_get_needed(struct _GtkFileFilter* filter);
     * }
     */
    public static int gtk_file_filter_get_needed(MemorySegment filter) {
        var mh$ = gtk_file_filter_get_needed$MH();
        try {
            return (int)mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$2683.const$1,"gtk_file_filter_filter");
    }
    /**
     * {@snippet :
     * int gtk_file_filter_filter(struct _GtkFileFilter* filter, struct _GtkFileFilterInfo* filter_info);
     * }
     */
    public static int gtk_file_filter_filter(MemorySegment filter, MemorySegment filter_info) {
        var mh$ = gtk_file_filter_filter$MH();
        try {
            return (int)mh$.invokeExact(filter, filter_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_to_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$2683.const$2,"gtk_file_filter_to_gvariant");
    }
    /**
     * {@snippet :
     * struct _GVariant* gtk_file_filter_to_gvariant(struct _GtkFileFilter* filter);
     * }
     */
    public static MemorySegment gtk_file_filter_to_gvariant(MemorySegment filter) {
        var mh$ = gtk_file_filter_to_gvariant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_new_from_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$2683.const$3,"gtk_file_filter_new_from_gvariant");
    }
    /**
     * {@snippet :
     * struct _GtkFileFilter* gtk_file_filter_new_from_gvariant(struct _GVariant* variant);
     * }
     */
    public static MemorySegment gtk_file_filter_new_from_gvariant(MemorySegment variant) {
        var mh$ = gtk_file_filter_new_from_gvariant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkFileChooserAction.GTK_FILE_CHOOSER_ACTION_OPEN = 0;
     * }
     */
    public static int GTK_FILE_CHOOSER_ACTION_OPEN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkFileChooserAction.GTK_FILE_CHOOSER_ACTION_SAVE = 1;
     * }
     */
    public static int GTK_FILE_CHOOSER_ACTION_SAVE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkFileChooserAction.GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER = 2;
     * }
     */
    public static int GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkFileChooserAction.GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER = 3;
     * }
     */
    public static int GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkFileChooserConfirmation.GTK_FILE_CHOOSER_CONFIRMATION_CONFIRM = 0;
     * }
     */
    public static int GTK_FILE_CHOOSER_CONFIRMATION_CONFIRM() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkFileChooserConfirmation.GTK_FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME = 1;
     * }
     */
    public static int GTK_FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkFileChooserConfirmation.GTK_FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN = 2;
     * }
     */
    public static int GTK_FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN() {
        return (int)2L;
    }
    public static MethodHandle gtk_file_chooser_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2683.const$4,"gtk_file_chooser_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_file_chooser_get_type();
     * }
     */
    public static long gtk_file_chooser_get_type() {
        var mh$ = gtk_file_chooser_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkFileChooserError.GTK_FILE_CHOOSER_ERROR_NONEXISTENT = 0;
     * }
     */
    public static int GTK_FILE_CHOOSER_ERROR_NONEXISTENT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkFileChooserError.GTK_FILE_CHOOSER_ERROR_BAD_FILENAME = 1;
     * }
     */
    public static int GTK_FILE_CHOOSER_ERROR_BAD_FILENAME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkFileChooserError.GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS = 2;
     * }
     */
    public static int GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkFileChooserError.GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME = 3;
     * }
     */
    public static int GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME() {
        return (int)3L;
    }
    public static MethodHandle gtk_file_chooser_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$2683.const$5,"gtk_file_chooser_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int gtk_file_chooser_error_quark();
     * }
     */
    public static int gtk_file_chooser_error_quark() {
        var mh$ = gtk_file_chooser_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_action$MH() {
        return RuntimeHelper.requireNonNull(constants$2684.const$0,"gtk_file_chooser_set_action");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_action(struct _GtkFileChooser* chooser, enum GtkFileChooserAction action);
     * }
     */
    public static void gtk_file_chooser_set_action(MemorySegment chooser, int action) {
        var mh$ = gtk_file_chooser_set_action$MH();
        try {
            mh$.invokeExact(chooser, action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_action$MH() {
        return RuntimeHelper.requireNonNull(constants$2684.const$1,"gtk_file_chooser_get_action");
    }
    /**
     * {@snippet :
     * enum GtkFileChooserAction gtk_file_chooser_get_action(struct _GtkFileChooser* chooser);
     * }
     */
    public static int gtk_file_chooser_get_action(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_action$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_local_only$MH() {
        return RuntimeHelper.requireNonNull(constants$2684.const$2,"gtk_file_chooser_set_local_only");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_local_only(struct _GtkFileChooser* chooser, int local_only);
     * }
     */
    public static void gtk_file_chooser_set_local_only(MemorySegment chooser, int local_only) {
        var mh$ = gtk_file_chooser_set_local_only$MH();
        try {
            mh$.invokeExact(chooser, local_only);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_local_only$MH() {
        return RuntimeHelper.requireNonNull(constants$2684.const$3,"gtk_file_chooser_get_local_only");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_get_local_only(struct _GtkFileChooser* chooser);
     * }
     */
    public static int gtk_file_chooser_get_local_only(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_local_only$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_select_multiple$MH() {
        return RuntimeHelper.requireNonNull(constants$2684.const$4,"gtk_file_chooser_set_select_multiple");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_select_multiple(struct _GtkFileChooser* chooser, int select_multiple);
     * }
     */
    public static void gtk_file_chooser_set_select_multiple(MemorySegment chooser, int select_multiple) {
        var mh$ = gtk_file_chooser_set_select_multiple$MH();
        try {
            mh$.invokeExact(chooser, select_multiple);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_select_multiple$MH() {
        return RuntimeHelper.requireNonNull(constants$2684.const$5,"gtk_file_chooser_get_select_multiple");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_get_select_multiple(struct _GtkFileChooser* chooser);
     * }
     */
    public static int gtk_file_chooser_get_select_multiple(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_select_multiple$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_show_hidden$MH() {
        return RuntimeHelper.requireNonNull(constants$2685.const$0,"gtk_file_chooser_set_show_hidden");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_show_hidden(struct _GtkFileChooser* chooser, int show_hidden);
     * }
     */
    public static void gtk_file_chooser_set_show_hidden(MemorySegment chooser, int show_hidden) {
        var mh$ = gtk_file_chooser_set_show_hidden$MH();
        try {
            mh$.invokeExact(chooser, show_hidden);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_show_hidden$MH() {
        return RuntimeHelper.requireNonNull(constants$2685.const$1,"gtk_file_chooser_get_show_hidden");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_get_show_hidden(struct _GtkFileChooser* chooser);
     * }
     */
    public static int gtk_file_chooser_get_show_hidden(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_show_hidden$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_do_overwrite_confirmation$MH() {
        return RuntimeHelper.requireNonNull(constants$2685.const$2,"gtk_file_chooser_set_do_overwrite_confirmation");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_do_overwrite_confirmation(struct _GtkFileChooser* chooser, int do_overwrite_confirmation);
     * }
     */
    public static void gtk_file_chooser_set_do_overwrite_confirmation(MemorySegment chooser, int do_overwrite_confirmation) {
        var mh$ = gtk_file_chooser_set_do_overwrite_confirmation$MH();
        try {
            mh$.invokeExact(chooser, do_overwrite_confirmation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_do_overwrite_confirmation$MH() {
        return RuntimeHelper.requireNonNull(constants$2685.const$3,"gtk_file_chooser_get_do_overwrite_confirmation");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_get_do_overwrite_confirmation(struct _GtkFileChooser* chooser);
     * }
     */
    public static int gtk_file_chooser_get_do_overwrite_confirmation(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_do_overwrite_confirmation$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_create_folders$MH() {
        return RuntimeHelper.requireNonNull(constants$2685.const$4,"gtk_file_chooser_set_create_folders");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_create_folders(struct _GtkFileChooser* chooser, int create_folders);
     * }
     */
    public static void gtk_file_chooser_set_create_folders(MemorySegment chooser, int create_folders) {
        var mh$ = gtk_file_chooser_set_create_folders$MH();
        try {
            mh$.invokeExact(chooser, create_folders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_create_folders$MH() {
        return RuntimeHelper.requireNonNull(constants$2685.const$5,"gtk_file_chooser_get_create_folders");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_get_create_folders(struct _GtkFileChooser* chooser);
     * }
     */
    public static int gtk_file_chooser_get_create_folders(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_create_folders$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_current_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2686.const$0,"gtk_file_chooser_set_current_name");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_current_name(struct _GtkFileChooser* chooser, char* name);
     * }
     */
    public static void gtk_file_chooser_set_current_name(MemorySegment chooser, MemorySegment name) {
        var mh$ = gtk_file_chooser_set_current_name$MH();
        try {
            mh$.invokeExact(chooser, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_current_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2686.const$1,"gtk_file_chooser_get_current_name");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_get_current_name(struct _GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_current_name(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_current_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$2686.const$2,"gtk_file_chooser_get_filename");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_get_filename(struct _GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_filename(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_filename$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$2686.const$3,"gtk_file_chooser_set_filename");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_set_filename(struct _GtkFileChooser* chooser, char* filename);
     * }
     */
    public static int gtk_file_chooser_set_filename(MemorySegment chooser, MemorySegment filename) {
        var mh$ = gtk_file_chooser_set_filename$MH();
        try {
            return (int)mh$.invokeExact(chooser, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_select_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$2686.const$4,"gtk_file_chooser_select_filename");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_select_filename(struct _GtkFileChooser* chooser, char* filename);
     * }
     */
    public static int gtk_file_chooser_select_filename(MemorySegment chooser, MemorySegment filename) {
        var mh$ = gtk_file_chooser_select_filename$MH();
        try {
            return (int)mh$.invokeExact(chooser, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_unselect_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$2686.const$5,"gtk_file_chooser_unselect_filename");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_unselect_filename(struct _GtkFileChooser* chooser, char* filename);
     * }
     */
    public static void gtk_file_chooser_unselect_filename(MemorySegment chooser, MemorySegment filename) {
        var mh$ = gtk_file_chooser_unselect_filename$MH();
        try {
            mh$.invokeExact(chooser, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_select_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2687.const$0,"gtk_file_chooser_select_all");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_select_all(struct _GtkFileChooser* chooser);
     * }
     */
    public static void gtk_file_chooser_select_all(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_select_all$MH();
        try {
            mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_unselect_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2687.const$1,"gtk_file_chooser_unselect_all");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_unselect_all(struct _GtkFileChooser* chooser);
     * }
     */
    public static void gtk_file_chooser_unselect_all(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_unselect_all$MH();
        try {
            mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_filenames$MH() {
        return RuntimeHelper.requireNonNull(constants$2687.const$2,"gtk_file_chooser_get_filenames");
    }
    /**
     * {@snippet :
     * struct _GSList* gtk_file_chooser_get_filenames(struct _GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_filenames(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_filenames$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_current_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$2687.const$3,"gtk_file_chooser_set_current_folder");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_set_current_folder(struct _GtkFileChooser* chooser, char* filename);
     * }
     */
    public static int gtk_file_chooser_set_current_folder(MemorySegment chooser, MemorySegment filename) {
        var mh$ = gtk_file_chooser_set_current_folder$MH();
        try {
            return (int)mh$.invokeExact(chooser, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_current_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$2687.const$4,"gtk_file_chooser_get_current_folder");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_get_current_folder(struct _GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_current_folder(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_current_folder$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$2687.const$5,"gtk_file_chooser_get_uri");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_get_uri(struct _GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_uri(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$2688.const$0,"gtk_file_chooser_set_uri");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_set_uri(struct _GtkFileChooser* chooser, char* uri);
     * }
     */
    public static int gtk_file_chooser_set_uri(MemorySegment chooser, MemorySegment uri) {
        var mh$ = gtk_file_chooser_set_uri$MH();
        try {
            return (int)mh$.invokeExact(chooser, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_select_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$2688.const$1,"gtk_file_chooser_select_uri");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_select_uri(struct _GtkFileChooser* chooser, char* uri);
     * }
     */
    public static int gtk_file_chooser_select_uri(MemorySegment chooser, MemorySegment uri) {
        var mh$ = gtk_file_chooser_select_uri$MH();
        try {
            return (int)mh$.invokeExact(chooser, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_unselect_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$2688.const$2,"gtk_file_chooser_unselect_uri");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_unselect_uri(struct _GtkFileChooser* chooser, char* uri);
     * }
     */
    public static void gtk_file_chooser_unselect_uri(MemorySegment chooser, MemorySegment uri) {
        var mh$ = gtk_file_chooser_unselect_uri$MH();
        try {
            mh$.invokeExact(chooser, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$2688.const$3,"gtk_file_chooser_get_uris");
    }
    /**
     * {@snippet :
     * struct _GSList* gtk_file_chooser_get_uris(struct _GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_uris(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_uris$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_current_folder_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$2688.const$4,"gtk_file_chooser_set_current_folder_uri");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_set_current_folder_uri(struct _GtkFileChooser* chooser, char* uri);
     * }
     */
    public static int gtk_file_chooser_set_current_folder_uri(MemorySegment chooser, MemorySegment uri) {
        var mh$ = gtk_file_chooser_set_current_folder_uri$MH();
        try {
            return (int)mh$.invokeExact(chooser, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_current_folder_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$2688.const$5,"gtk_file_chooser_get_current_folder_uri");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_get_current_folder_uri(struct _GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_current_folder_uri(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_current_folder_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2689.const$0,"gtk_file_chooser_get_file");
    }
    /**
     * {@snippet :
     * struct _GFile* gtk_file_chooser_get_file(struct _GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_file(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2689.const$1,"gtk_file_chooser_set_file");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_set_file(struct _GtkFileChooser* chooser, struct _GFile* file, struct _GError** error);
     * }
     */
    public static int gtk_file_chooser_set_file(MemorySegment chooser, MemorySegment file, MemorySegment error) {
        var mh$ = gtk_file_chooser_set_file$MH();
        try {
            return (int)mh$.invokeExact(chooser, file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_select_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2689.const$2,"gtk_file_chooser_select_file");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_select_file(struct _GtkFileChooser* chooser, struct _GFile* file, struct _GError** error);
     * }
     */
    public static int gtk_file_chooser_select_file(MemorySegment chooser, MemorySegment file, MemorySegment error) {
        var mh$ = gtk_file_chooser_select_file$MH();
        try {
            return (int)mh$.invokeExact(chooser, file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_unselect_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2689.const$3,"gtk_file_chooser_unselect_file");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_unselect_file(struct _GtkFileChooser* chooser, struct _GFile* file);
     * }
     */
    public static void gtk_file_chooser_unselect_file(MemorySegment chooser, MemorySegment file) {
        var mh$ = gtk_file_chooser_unselect_file$MH();
        try {
            mh$.invokeExact(chooser, file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_files$MH() {
        return RuntimeHelper.requireNonNull(constants$2689.const$4,"gtk_file_chooser_get_files");
    }
    /**
     * {@snippet :
     * struct _GSList* gtk_file_chooser_get_files(struct _GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_files(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_files$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_current_folder_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2689.const$5,"gtk_file_chooser_set_current_folder_file");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_set_current_folder_file(struct _GtkFileChooser* chooser, struct _GFile* file, struct _GError** error);
     * }
     */
    public static int gtk_file_chooser_set_current_folder_file(MemorySegment chooser, MemorySegment file, MemorySegment error) {
        var mh$ = gtk_file_chooser_set_current_folder_file$MH();
        try {
            return (int)mh$.invokeExact(chooser, file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_current_folder_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2690.const$0,"gtk_file_chooser_get_current_folder_file");
    }
    /**
     * {@snippet :
     * struct _GFile* gtk_file_chooser_get_current_folder_file(struct _GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_current_folder_file(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_current_folder_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_preview_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2690.const$1,"gtk_file_chooser_set_preview_widget");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_preview_widget(struct _GtkFileChooser* chooser, struct _GtkWidget* preview_widget);
     * }
     */
    public static void gtk_file_chooser_set_preview_widget(MemorySegment chooser, MemorySegment preview_widget) {
        var mh$ = gtk_file_chooser_set_preview_widget$MH();
        try {
            mh$.invokeExact(chooser, preview_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_preview_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2690.const$2,"gtk_file_chooser_get_preview_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_file_chooser_get_preview_widget(struct _GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_preview_widget(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_preview_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_preview_widget_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2690.const$3,"gtk_file_chooser_set_preview_widget_active");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_preview_widget_active(struct _GtkFileChooser* chooser, int active);
     * }
     */
    public static void gtk_file_chooser_set_preview_widget_active(MemorySegment chooser, int active) {
        var mh$ = gtk_file_chooser_set_preview_widget_active$MH();
        try {
            mh$.invokeExact(chooser, active);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_preview_widget_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2690.const$4,"gtk_file_chooser_get_preview_widget_active");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_get_preview_widget_active(struct _GtkFileChooser* chooser);
     * }
     */
    public static int gtk_file_chooser_get_preview_widget_active(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_preview_widget_active$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_use_preview_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2690.const$5,"gtk_file_chooser_set_use_preview_label");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_use_preview_label(struct _GtkFileChooser* chooser, int use_label);
     * }
     */
    public static void gtk_file_chooser_set_use_preview_label(MemorySegment chooser, int use_label) {
        var mh$ = gtk_file_chooser_set_use_preview_label$MH();
        try {
            mh$.invokeExact(chooser, use_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_use_preview_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2691.const$0,"gtk_file_chooser_get_use_preview_label");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_get_use_preview_label(struct _GtkFileChooser* chooser);
     * }
     */
    public static int gtk_file_chooser_get_use_preview_label(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_use_preview_label$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_preview_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$2691.const$1,"gtk_file_chooser_get_preview_filename");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_get_preview_filename(struct _GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_preview_filename(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_preview_filename$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_preview_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$2691.const$2,"gtk_file_chooser_get_preview_uri");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_get_preview_uri(struct _GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_preview_uri(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_preview_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_preview_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2691.const$3,"gtk_file_chooser_get_preview_file");
    }
    /**
     * {@snippet :
     * struct _GFile* gtk_file_chooser_get_preview_file(struct _GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_preview_file(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_preview_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_extra_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2691.const$4,"gtk_file_chooser_set_extra_widget");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_extra_widget(struct _GtkFileChooser* chooser, struct _GtkWidget* extra_widget);
     * }
     */
    public static void gtk_file_chooser_set_extra_widget(MemorySegment chooser, MemorySegment extra_widget) {
        var mh$ = gtk_file_chooser_set_extra_widget$MH();
        try {
            mh$.invokeExact(chooser, extra_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_extra_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2691.const$5,"gtk_file_chooser_get_extra_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_file_chooser_get_extra_widget(struct _GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_extra_widget(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_extra_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_add_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$2692.const$0,"gtk_file_chooser_add_filter");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_add_filter(struct _GtkFileChooser* chooser, struct _GtkFileFilter* filter);
     * }
     */
    public static void gtk_file_chooser_add_filter(MemorySegment chooser, MemorySegment filter) {
        var mh$ = gtk_file_chooser_add_filter$MH();
        try {
            mh$.invokeExact(chooser, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_remove_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$2692.const$1,"gtk_file_chooser_remove_filter");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_remove_filter(struct _GtkFileChooser* chooser, struct _GtkFileFilter* filter);
     * }
     */
    public static void gtk_file_chooser_remove_filter(MemorySegment chooser, MemorySegment filter) {
        var mh$ = gtk_file_chooser_remove_filter$MH();
        try {
            mh$.invokeExact(chooser, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_list_filters$MH() {
        return RuntimeHelper.requireNonNull(constants$2692.const$2,"gtk_file_chooser_list_filters");
    }
    /**
     * {@snippet :
     * struct _GSList* gtk_file_chooser_list_filters(struct _GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_list_filters(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_list_filters$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$2692.const$3,"gtk_file_chooser_set_filter");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_filter(struct _GtkFileChooser* chooser, struct _GtkFileFilter* filter);
     * }
     */
    public static void gtk_file_chooser_set_filter(MemorySegment chooser, MemorySegment filter) {
        var mh$ = gtk_file_chooser_set_filter$MH();
        try {
            mh$.invokeExact(chooser, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$2692.const$4,"gtk_file_chooser_get_filter");
    }
    /**
     * {@snippet :
     * struct _GtkFileFilter* gtk_file_chooser_get_filter(struct _GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_filter(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_filter$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_add_shortcut_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$2692.const$5,"gtk_file_chooser_add_shortcut_folder");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_add_shortcut_folder(struct _GtkFileChooser* chooser, char* folder, struct _GError** error);
     * }
     */
    public static int gtk_file_chooser_add_shortcut_folder(MemorySegment chooser, MemorySegment folder, MemorySegment error) {
        var mh$ = gtk_file_chooser_add_shortcut_folder$MH();
        try {
            return (int)mh$.invokeExact(chooser, folder, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_remove_shortcut_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$2693.const$0,"gtk_file_chooser_remove_shortcut_folder");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_remove_shortcut_folder(struct _GtkFileChooser* chooser, char* folder, struct _GError** error);
     * }
     */
    public static int gtk_file_chooser_remove_shortcut_folder(MemorySegment chooser, MemorySegment folder, MemorySegment error) {
        var mh$ = gtk_file_chooser_remove_shortcut_folder$MH();
        try {
            return (int)mh$.invokeExact(chooser, folder, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_list_shortcut_folders$MH() {
        return RuntimeHelper.requireNonNull(constants$2693.const$1,"gtk_file_chooser_list_shortcut_folders");
    }
    /**
     * {@snippet :
     * struct _GSList* gtk_file_chooser_list_shortcut_folders(struct _GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_list_shortcut_folders(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_list_shortcut_folders$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_add_shortcut_folder_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$2693.const$2,"gtk_file_chooser_add_shortcut_folder_uri");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_add_shortcut_folder_uri(struct _GtkFileChooser* chooser, char* uri, struct _GError** error);
     * }
     */
    public static int gtk_file_chooser_add_shortcut_folder_uri(MemorySegment chooser, MemorySegment uri, MemorySegment error) {
        var mh$ = gtk_file_chooser_add_shortcut_folder_uri$MH();
        try {
            return (int)mh$.invokeExact(chooser, uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_remove_shortcut_folder_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$2693.const$3,"gtk_file_chooser_remove_shortcut_folder_uri");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_remove_shortcut_folder_uri(struct _GtkFileChooser* chooser, char* uri, struct _GError** error);
     * }
     */
    public static int gtk_file_chooser_remove_shortcut_folder_uri(MemorySegment chooser, MemorySegment uri, MemorySegment error) {
        var mh$ = gtk_file_chooser_remove_shortcut_folder_uri$MH();
        try {
            return (int)mh$.invokeExact(chooser, uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_list_shortcut_folder_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$2693.const$4,"gtk_file_chooser_list_shortcut_folder_uris");
    }
    /**
     * {@snippet :
     * struct _GSList* gtk_file_chooser_list_shortcut_folder_uris(struct _GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_list_shortcut_folder_uris(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_list_shortcut_folder_uris$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_add_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$2693.const$5,"gtk_file_chooser_add_choice");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_add_choice(struct _GtkFileChooser* chooser, char* id, char* label, char** options, char** option_labels);
     * }
     */
    public static void gtk_file_chooser_add_choice(MemorySegment chooser, MemorySegment id, MemorySegment label, MemorySegment options, MemorySegment option_labels) {
        var mh$ = gtk_file_chooser_add_choice$MH();
        try {
            mh$.invokeExact(chooser, id, label, options, option_labels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_remove_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$2694.const$0,"gtk_file_chooser_remove_choice");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_remove_choice(struct _GtkFileChooser* chooser, char* id);
     * }
     */
    public static void gtk_file_chooser_remove_choice(MemorySegment chooser, MemorySegment id) {
        var mh$ = gtk_file_chooser_remove_choice$MH();
        try {
            mh$.invokeExact(chooser, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$2694.const$1,"gtk_file_chooser_set_choice");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_choice(struct _GtkFileChooser* chooser, char* id, char* option);
     * }
     */
    public static void gtk_file_chooser_set_choice(MemorySegment chooser, MemorySegment id, MemorySegment option) {
        var mh$ = gtk_file_chooser_set_choice$MH();
        try {
            mh$.invokeExact(chooser, id, option);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$2694.const$2,"gtk_file_chooser_get_choice");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_get_choice(struct _GtkFileChooser* chooser, char* id);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_choice(MemorySegment chooser, MemorySegment id) {
        var mh$ = gtk_file_chooser_get_choice$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2696.const$4,"gtk_file_chooser_button_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_file_chooser_button_get_type();
     * }
     */
    public static long gtk_file_chooser_button_get_type() {
        var mh$ = gtk_file_chooser_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2696.const$5,"gtk_file_chooser_button_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_file_chooser_button_new(char* title, enum GtkFileChooserAction action);
     * }
     */
    public static MemorySegment gtk_file_chooser_button_new(MemorySegment title, int action) {
        var mh$ = gtk_file_chooser_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(title, action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_new_with_dialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2697.const$0,"gtk_file_chooser_button_new_with_dialog");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_file_chooser_button_new_with_dialog(struct _GtkWidget* dialog);
     * }
     */
    public static MemorySegment gtk_file_chooser_button_new_with_dialog(MemorySegment dialog) {
        var mh$ = gtk_file_chooser_button_new_with_dialog$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2697.const$1,"gtk_file_chooser_button_get_title");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_button_get_title(struct _GtkFileChooserButton* button);
     * }
     */
    public static MemorySegment gtk_file_chooser_button_get_title(MemorySegment button) {
        var mh$ = gtk_file_chooser_button_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2697.const$2,"gtk_file_chooser_button_set_title");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_button_set_title(struct _GtkFileChooserButton* button, char* title);
     * }
     */
    public static void gtk_file_chooser_button_set_title(MemorySegment button, MemorySegment title) {
        var mh$ = gtk_file_chooser_button_set_title$MH();
        try {
            mh$.invokeExact(button, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_get_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$2697.const$3,"gtk_file_chooser_button_get_width_chars");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_button_get_width_chars(struct _GtkFileChooserButton* button);
     * }
     */
    public static int gtk_file_chooser_button_get_width_chars(MemorySegment button) {
        var mh$ = gtk_file_chooser_button_get_width_chars$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_set_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$2697.const$4,"gtk_file_chooser_button_set_width_chars");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_button_set_width_chars(struct _GtkFileChooserButton* button, int n_chars);
     * }
     */
    public static void gtk_file_chooser_button_set_width_chars(MemorySegment button, int n_chars) {
        var mh$ = gtk_file_chooser_button_set_width_chars$MH();
        try {
            mh$.invokeExact(button, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_get_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2697.const$5,"gtk_file_chooser_button_get_focus_on_click");
    }
    /**
     * {@snippet :
     * int gtk_file_chooser_button_get_focus_on_click(struct _GtkFileChooserButton* button);
     * }
     */
    public static int gtk_file_chooser_button_get_focus_on_click(MemorySegment button) {
        var mh$ = gtk_file_chooser_button_get_focus_on_click$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_set_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2698.const$0,"gtk_file_chooser_button_set_focus_on_click");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_button_set_focus_on_click(struct _GtkFileChooserButton* button, int focus_on_click);
     * }
     */
    public static void gtk_file_chooser_button_set_focus_on_click(MemorySegment button, int focus_on_click) {
        var mh$ = gtk_file_chooser_button_set_focus_on_click$MH();
        try {
            mh$.invokeExact(button, focus_on_click);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2700.const$0,"gtk_file_chooser_dialog_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_file_chooser_dialog_get_type();
     * }
     */
    public static long gtk_file_chooser_dialog_get_type() {
        var mh$ = gtk_file_chooser_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2700.const$1,"gtk_file_chooser_dialog_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_file_chooser_dialog_new(char* title, struct _GtkWindow* parent, enum GtkFileChooserAction action, char* first_button_text,...);
     * }
     */
    public static MemorySegment gtk_file_chooser_dialog_new(MemorySegment title, MemorySegment parent, int action, MemorySegment first_button_text, Object... x4) {
        var mh$ = gtk_file_chooser_dialog_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(title, parent, action, first_button_text, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2700.const$2,"gtk_native_dialog_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_native_dialog_get_type();
     * }
     */
    public static long gtk_native_dialog_get_type() {
        var mh$ = gtk_native_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkNativeDialog* GtkNativeDialog_autoptr;
     * }
     */
    public static final AddressLayout GtkNativeDialog_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkNativeDialog_listautoptr;
     * }
     */
    public static final AddressLayout GtkNativeDialog_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkNativeDialog_slistautoptr;
     * }
     */
    public static final AddressLayout GtkNativeDialog_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkNativeDialog_queueautoptr;
     * }
     */
    public static final AddressLayout GtkNativeDialog_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GtkNativeDialogClass* GtkNativeDialogClass_autoptr;
     * }
     */
    public static final AddressLayout GtkNativeDialogClass_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkNativeDialogClass_listautoptr;
     * }
     */
    public static final AddressLayout GtkNativeDialogClass_listautoptr = RuntimeHelper.POINTER;
}


