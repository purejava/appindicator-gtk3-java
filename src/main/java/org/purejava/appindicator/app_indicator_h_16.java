// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class app_indicator_h_16 extends app_indicator_h_15 {

    public static MethodHandle gtk_entry_set_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$1462.gtk_entry_set_tabs$MH,"gtk_entry_set_tabs");
    }
    /**
     * {@snippet :
     * void gtk_entry_set_tabs(GtkEntry* entry, PangoTabArray* tabs);
     * }
     */
    public static void gtk_entry_set_tabs(MemorySegment entry, MemorySegment tabs) {
        var mh$ = gtk_entry_set_tabs$MH();
        try {
            mh$.invokeExact(entry, tabs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_get_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$1462.gtk_entry_get_tabs$MH,"gtk_entry_get_tabs");
    }
    /**
     * {@snippet :
     * PangoTabArray* gtk_entry_get_tabs(GtkEntry* entry);
     * }
     */
    public static MemorySegment gtk_entry_get_tabs(MemorySegment entry) {
        var mh$ = gtk_entry_get_tabs$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_grab_focus_without_selecting$MH() {
        return RuntimeHelper.requireNonNull(constants$1462.gtk_entry_grab_focus_without_selecting$MH,"gtk_entry_grab_focus_without_selecting");
    }
    /**
     * {@snippet :
     * void gtk_entry_grab_focus_without_selecting(GtkEntry* entry);
     * }
     */
    public static void gtk_entry_grab_focus_without_selecting(MemorySegment entry) {
        var mh$ = gtk_entry_grab_focus_without_selecting$MH();
        try {
            mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_TREE_VIEW_DROP_BEFORE = 0;
     * }
     */
    public static int GTK_TREE_VIEW_DROP_BEFORE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_TREE_VIEW_DROP_AFTER = 1;
     * }
     */
    public static int GTK_TREE_VIEW_DROP_AFTER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_TREE_VIEW_DROP_INTO_OR_BEFORE = 2;
     * }
     */
    public static int GTK_TREE_VIEW_DROP_INTO_OR_BEFORE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_TREE_VIEW_DROP_INTO_OR_AFTER = 3;
     * }
     */
    public static int GTK_TREE_VIEW_DROP_INTO_OR_AFTER() {
        return (int)3L;
    }
    public static MethodHandle gtk_tree_view_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1464.gtk_tree_view_get_type$MH,"gtk_tree_view_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_tree_view_get_type();
     * }
     */
    public static long gtk_tree_view_get_type() {
        var mh$ = gtk_tree_view_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1464.gtk_tree_view_new$MH,"gtk_tree_view_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_tree_view_new();
     * }
     */
    public static MemorySegment gtk_tree_view_new() {
        var mh$ = gtk_tree_view_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_new_with_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1465.gtk_tree_view_new_with_model$MH,"gtk_tree_view_new_with_model");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_tree_view_new_with_model(GtkTreeModel* model);
     * }
     */
    public static MemorySegment gtk_tree_view_new_with_model(MemorySegment model) {
        var mh$ = gtk_tree_view_new_with_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1465.gtk_tree_view_get_model$MH,"gtk_tree_view_get_model");
    }
    /**
     * {@snippet :
     * GtkTreeModel* gtk_tree_view_get_model(GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_model(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1465.gtk_tree_view_set_model$MH,"gtk_tree_view_set_model");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_model(GtkTreeView* tree_view, GtkTreeModel* model);
     * }
     */
    public static void gtk_tree_view_set_model(MemorySegment tree_view, MemorySegment model) {
        var mh$ = gtk_tree_view_set_model$MH();
        try {
            mh$.invokeExact(tree_view, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1465.gtk_tree_view_get_selection$MH,"gtk_tree_view_get_selection");
    }
    /**
     * {@snippet :
     * GtkTreeSelection* gtk_tree_view_get_selection(GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_selection(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_selection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1465.gtk_tree_view_get_hadjustment$MH,"gtk_tree_view_get_hadjustment");
    }
    /**
     * {@snippet :
     * GtkAdjustment* gtk_tree_view_get_hadjustment(GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_hadjustment(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_hadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1465.gtk_tree_view_set_hadjustment$MH,"gtk_tree_view_set_hadjustment");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_hadjustment(GtkTreeView* tree_view, GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_tree_view_set_hadjustment(MemorySegment tree_view, MemorySegment adjustment) {
        var mh$ = gtk_tree_view_set_hadjustment$MH();
        try {
            mh$.invokeExact(tree_view, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1466.gtk_tree_view_get_vadjustment$MH,"gtk_tree_view_get_vadjustment");
    }
    /**
     * {@snippet :
     * GtkAdjustment* gtk_tree_view_get_vadjustment(GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_vadjustment(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_vadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1466.gtk_tree_view_set_vadjustment$MH,"gtk_tree_view_set_vadjustment");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_vadjustment(GtkTreeView* tree_view, GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_tree_view_set_vadjustment(MemorySegment tree_view, MemorySegment adjustment) {
        var mh$ = gtk_tree_view_set_vadjustment$MH();
        try {
            mh$.invokeExact(tree_view, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_headers_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1466.gtk_tree_view_get_headers_visible$MH,"gtk_tree_view_get_headers_visible");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_headers_visible(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_headers_visible(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_headers_visible$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_headers_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1466.gtk_tree_view_set_headers_visible$MH,"gtk_tree_view_set_headers_visible");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_headers_visible(GtkTreeView* tree_view, gboolean headers_visible);
     * }
     */
    public static void gtk_tree_view_set_headers_visible(MemorySegment tree_view, int headers_visible) {
        var mh$ = gtk_tree_view_set_headers_visible$MH();
        try {
            mh$.invokeExact(tree_view, headers_visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_columns_autosize$MH() {
        return RuntimeHelper.requireNonNull(constants$1466.gtk_tree_view_columns_autosize$MH,"gtk_tree_view_columns_autosize");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_columns_autosize(GtkTreeView* tree_view);
     * }
     */
    public static void gtk_tree_view_columns_autosize(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_columns_autosize$MH();
        try {
            mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_headers_clickable$MH() {
        return RuntimeHelper.requireNonNull(constants$1466.gtk_tree_view_get_headers_clickable$MH,"gtk_tree_view_get_headers_clickable");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_headers_clickable(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_headers_clickable(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_headers_clickable$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_headers_clickable$MH() {
        return RuntimeHelper.requireNonNull(constants$1467.gtk_tree_view_set_headers_clickable$MH,"gtk_tree_view_set_headers_clickable");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_headers_clickable(GtkTreeView* tree_view, gboolean setting);
     * }
     */
    public static void gtk_tree_view_set_headers_clickable(MemorySegment tree_view, int setting) {
        var mh$ = gtk_tree_view_set_headers_clickable$MH();
        try {
            mh$.invokeExact(tree_view, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_rules_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1467.gtk_tree_view_set_rules_hint$MH,"gtk_tree_view_set_rules_hint");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_rules_hint(GtkTreeView* tree_view, gboolean setting);
     * }
     */
    public static void gtk_tree_view_set_rules_hint(MemorySegment tree_view, int setting) {
        var mh$ = gtk_tree_view_set_rules_hint$MH();
        try {
            mh$.invokeExact(tree_view, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_rules_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1467.gtk_tree_view_get_rules_hint$MH,"gtk_tree_view_get_rules_hint");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_rules_hint(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_rules_hint(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_rules_hint$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1467.gtk_tree_view_get_activate_on_single_click$MH,"gtk_tree_view_get_activate_on_single_click");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_activate_on_single_click(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_activate_on_single_click(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_activate_on_single_click$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1467.gtk_tree_view_set_activate_on_single_click$MH,"gtk_tree_view_set_activate_on_single_click");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_activate_on_single_click(GtkTreeView* tree_view, gboolean single);
     * }
     */
    public static void gtk_tree_view_set_activate_on_single_click(MemorySegment tree_view, int single) {
        var mh$ = gtk_tree_view_set_activate_on_single_click$MH();
        try {
            mh$.invokeExact(tree_view, single);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_append_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1467.gtk_tree_view_append_column$MH,"gtk_tree_view_append_column");
    }
    /**
     * {@snippet :
     * gint gtk_tree_view_append_column(GtkTreeView* tree_view, GtkTreeViewColumn* column);
     * }
     */
    public static int gtk_tree_view_append_column(MemorySegment tree_view, MemorySegment column) {
        var mh$ = gtk_tree_view_append_column$MH();
        try {
            return (int)mh$.invokeExact(tree_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_remove_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1468.gtk_tree_view_remove_column$MH,"gtk_tree_view_remove_column");
    }
    /**
     * {@snippet :
     * gint gtk_tree_view_remove_column(GtkTreeView* tree_view, GtkTreeViewColumn* column);
     * }
     */
    public static int gtk_tree_view_remove_column(MemorySegment tree_view, MemorySegment column) {
        var mh$ = gtk_tree_view_remove_column$MH();
        try {
            return (int)mh$.invokeExact(tree_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_insert_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1468.gtk_tree_view_insert_column$MH,"gtk_tree_view_insert_column");
    }
    /**
     * {@snippet :
     * gint gtk_tree_view_insert_column(GtkTreeView* tree_view, GtkTreeViewColumn* column, gint position);
     * }
     */
    public static int gtk_tree_view_insert_column(MemorySegment tree_view, MemorySegment column, int position) {
        var mh$ = gtk_tree_view_insert_column$MH();
        try {
            return (int)mh$.invokeExact(tree_view, column, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_insert_column_with_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1468.gtk_tree_view_insert_column_with_attributes$MH,"gtk_tree_view_insert_column_with_attributes");
    }
    /**
     * {@snippet :
     * gint gtk_tree_view_insert_column_with_attributes(GtkTreeView* tree_view, gint position, const gchar* title, GtkCellRenderer* cell,...);
     * }
     */
    public static int gtk_tree_view_insert_column_with_attributes(MemorySegment tree_view, int position, MemorySegment title, MemorySegment cell, Object... x4) {
        var mh$ = gtk_tree_view_insert_column_with_attributes$MH();
        try {
            return (int)mh$.invokeExact(tree_view, position, title, cell, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_insert_column_with_data_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1468.gtk_tree_view_insert_column_with_data_func$MH,"gtk_tree_view_insert_column_with_data_func");
    }
    /**
     * {@snippet :
     * gint gtk_tree_view_insert_column_with_data_func(GtkTreeView* tree_view, gint position, const gchar* title, GtkCellRenderer* cell, GtkTreeCellDataFunc func, gpointer data, GDestroyNotify dnotify);
     * }
     */
    public static int gtk_tree_view_insert_column_with_data_func(MemorySegment tree_view, int position, MemorySegment title, MemorySegment cell, MemorySegment func, MemorySegment data, MemorySegment dnotify) {
        var mh$ = gtk_tree_view_insert_column_with_data_func$MH();
        try {
            return (int)mh$.invokeExact(tree_view, position, title, cell, func, data, dnotify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_n_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$1468.gtk_tree_view_get_n_columns$MH,"gtk_tree_view_get_n_columns");
    }
    /**
     * {@snippet :
     * guint gtk_tree_view_get_n_columns(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_n_columns(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_n_columns$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1468.gtk_tree_view_get_column$MH,"gtk_tree_view_get_column");
    }
    /**
     * {@snippet :
     * GtkTreeViewColumn* gtk_tree_view_get_column(GtkTreeView* tree_view, gint n);
     * }
     */
    public static MemorySegment gtk_tree_view_get_column(MemorySegment tree_view, int n) {
        var mh$ = gtk_tree_view_get_column$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$1469.gtk_tree_view_get_columns$MH,"gtk_tree_view_get_columns");
    }
    /**
     * {@snippet :
     * GList* gtk_tree_view_get_columns(GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_columns(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_columns$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_move_column_after$MH() {
        return RuntimeHelper.requireNonNull(constants$1469.gtk_tree_view_move_column_after$MH,"gtk_tree_view_move_column_after");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_move_column_after(GtkTreeView* tree_view, GtkTreeViewColumn* column, GtkTreeViewColumn* base_column);
     * }
     */
    public static void gtk_tree_view_move_column_after(MemorySegment tree_view, MemorySegment column, MemorySegment base_column) {
        var mh$ = gtk_tree_view_move_column_after$MH();
        try {
            mh$.invokeExact(tree_view, column, base_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_expander_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1469.gtk_tree_view_set_expander_column$MH,"gtk_tree_view_set_expander_column");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_expander_column(GtkTreeView* tree_view, GtkTreeViewColumn* column);
     * }
     */
    public static void gtk_tree_view_set_expander_column(MemorySegment tree_view, MemorySegment column) {
        var mh$ = gtk_tree_view_set_expander_column$MH();
        try {
            mh$.invokeExact(tree_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_expander_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1469.gtk_tree_view_get_expander_column$MH,"gtk_tree_view_get_expander_column");
    }
    /**
     * {@snippet :
     * GtkTreeViewColumn* gtk_tree_view_get_expander_column(GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_expander_column(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_expander_column$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_column_drag_function$MH() {
        return RuntimeHelper.requireNonNull(constants$1469.gtk_tree_view_set_column_drag_function$MH,"gtk_tree_view_set_column_drag_function");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_column_drag_function(GtkTreeView* tree_view, GtkTreeViewColumnDropFunc func, gpointer user_data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_tree_view_set_column_drag_function(MemorySegment tree_view, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_tree_view_set_column_drag_function$MH();
        try {
            mh$.invokeExact(tree_view, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_scroll_to_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1469.gtk_tree_view_scroll_to_point$MH,"gtk_tree_view_scroll_to_point");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_scroll_to_point(GtkTreeView* tree_view, gint tree_x, gint tree_y);
     * }
     */
    public static void gtk_tree_view_scroll_to_point(MemorySegment tree_view, int tree_x, int tree_y) {
        var mh$ = gtk_tree_view_scroll_to_point$MH();
        try {
            mh$.invokeExact(tree_view, tree_x, tree_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_scroll_to_cell$MH() {
        return RuntimeHelper.requireNonNull(constants$1470.gtk_tree_view_scroll_to_cell$MH,"gtk_tree_view_scroll_to_cell");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_scroll_to_cell(GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewColumn* column, gboolean use_align, gfloat row_align, gfloat col_align);
     * }
     */
    public static void gtk_tree_view_scroll_to_cell(MemorySegment tree_view, MemorySegment path, MemorySegment column, int use_align, float row_align, float col_align) {
        var mh$ = gtk_tree_view_scroll_to_cell$MH();
        try {
            mh$.invokeExact(tree_view, path, column, use_align, row_align, col_align);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_row_activated$MH() {
        return RuntimeHelper.requireNonNull(constants$1470.gtk_tree_view_row_activated$MH,"gtk_tree_view_row_activated");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_row_activated(GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewColumn* column);
     * }
     */
    public static void gtk_tree_view_row_activated(MemorySegment tree_view, MemorySegment path, MemorySegment column) {
        var mh$ = gtk_tree_view_row_activated$MH();
        try {
            mh$.invokeExact(tree_view, path, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_expand_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1470.gtk_tree_view_expand_all$MH,"gtk_tree_view_expand_all");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_expand_all(GtkTreeView* tree_view);
     * }
     */
    public static void gtk_tree_view_expand_all(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_expand_all$MH();
        try {
            mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_collapse_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1470.gtk_tree_view_collapse_all$MH,"gtk_tree_view_collapse_all");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_collapse_all(GtkTreeView* tree_view);
     * }
     */
    public static void gtk_tree_view_collapse_all(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_collapse_all$MH();
        try {
            mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_expand_to_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1470.gtk_tree_view_expand_to_path$MH,"gtk_tree_view_expand_to_path");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_expand_to_path(GtkTreeView* tree_view, GtkTreePath* path);
     * }
     */
    public static void gtk_tree_view_expand_to_path(MemorySegment tree_view, MemorySegment path) {
        var mh$ = gtk_tree_view_expand_to_path$MH();
        try {
            mh$.invokeExact(tree_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_expand_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1470.gtk_tree_view_expand_row$MH,"gtk_tree_view_expand_row");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_expand_row(GtkTreeView* tree_view, GtkTreePath* path, gboolean open_all);
     * }
     */
    public static int gtk_tree_view_expand_row(MemorySegment tree_view, MemorySegment path, int open_all) {
        var mh$ = gtk_tree_view_expand_row$MH();
        try {
            return (int)mh$.invokeExact(tree_view, path, open_all);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_collapse_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1471.gtk_tree_view_collapse_row$MH,"gtk_tree_view_collapse_row");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_collapse_row(GtkTreeView* tree_view, GtkTreePath* path);
     * }
     */
    public static int gtk_tree_view_collapse_row(MemorySegment tree_view, MemorySegment path) {
        var mh$ = gtk_tree_view_collapse_row$MH();
        try {
            return (int)mh$.invokeExact(tree_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_map_expanded_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$1471.gtk_tree_view_map_expanded_rows$MH,"gtk_tree_view_map_expanded_rows");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_map_expanded_rows(GtkTreeView* tree_view, GtkTreeViewMappingFunc func, gpointer data);
     * }
     */
    public static void gtk_tree_view_map_expanded_rows(MemorySegment tree_view, MemorySegment func, MemorySegment data) {
        var mh$ = gtk_tree_view_map_expanded_rows$MH();
        try {
            mh$.invokeExact(tree_view, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_row_expanded$MH() {
        return RuntimeHelper.requireNonNull(constants$1471.gtk_tree_view_row_expanded$MH,"gtk_tree_view_row_expanded");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_row_expanded(GtkTreeView* tree_view, GtkTreePath* path);
     * }
     */
    public static int gtk_tree_view_row_expanded(MemorySegment tree_view, MemorySegment path) {
        var mh$ = gtk_tree_view_row_expanded$MH();
        try {
            return (int)mh$.invokeExact(tree_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_reorderable$MH() {
        return RuntimeHelper.requireNonNull(constants$1471.gtk_tree_view_set_reorderable$MH,"gtk_tree_view_set_reorderable");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_reorderable(GtkTreeView* tree_view, gboolean reorderable);
     * }
     */
    public static void gtk_tree_view_set_reorderable(MemorySegment tree_view, int reorderable) {
        var mh$ = gtk_tree_view_set_reorderable$MH();
        try {
            mh$.invokeExact(tree_view, reorderable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_reorderable$MH() {
        return RuntimeHelper.requireNonNull(constants$1471.gtk_tree_view_get_reorderable$MH,"gtk_tree_view_get_reorderable");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_reorderable(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_reorderable(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_reorderable$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1471.gtk_tree_view_set_cursor$MH,"gtk_tree_view_set_cursor");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_cursor(GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewColumn* focus_column, gboolean start_editing);
     * }
     */
    public static void gtk_tree_view_set_cursor(MemorySegment tree_view, MemorySegment path, MemorySegment focus_column, int start_editing) {
        var mh$ = gtk_tree_view_set_cursor$MH();
        try {
            mh$.invokeExact(tree_view, path, focus_column, start_editing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_cursor_on_cell$MH() {
        return RuntimeHelper.requireNonNull(constants$1472.gtk_tree_view_set_cursor_on_cell$MH,"gtk_tree_view_set_cursor_on_cell");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_cursor_on_cell(GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewColumn* focus_column, GtkCellRenderer* focus_cell, gboolean start_editing);
     * }
     */
    public static void gtk_tree_view_set_cursor_on_cell(MemorySegment tree_view, MemorySegment path, MemorySegment focus_column, MemorySegment focus_cell, int start_editing) {
        var mh$ = gtk_tree_view_set_cursor_on_cell$MH();
        try {
            mh$.invokeExact(tree_view, path, focus_column, focus_cell, start_editing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1472.gtk_tree_view_get_cursor$MH,"gtk_tree_view_get_cursor");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_get_cursor(GtkTreeView* tree_view, GtkTreePath** path, GtkTreeViewColumn** focus_column);
     * }
     */
    public static void gtk_tree_view_get_cursor(MemorySegment tree_view, MemorySegment path, MemorySegment focus_column) {
        var mh$ = gtk_tree_view_get_cursor$MH();
        try {
            mh$.invokeExact(tree_view, path, focus_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_bin_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1472.gtk_tree_view_get_bin_window$MH,"gtk_tree_view_get_bin_window");
    }
    /**
     * {@snippet :
     * GdkWindow* gtk_tree_view_get_bin_window(GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_bin_window(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_bin_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_path_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1472.gtk_tree_view_get_path_at_pos$MH,"gtk_tree_view_get_path_at_pos");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_path_at_pos(GtkTreeView* tree_view, gint x, gint y, GtkTreePath** path, GtkTreeViewColumn** column, gint* cell_x, gint* cell_y);
     * }
     */
    public static int gtk_tree_view_get_path_at_pos(MemorySegment tree_view, int x, int y, MemorySegment path, MemorySegment column, MemorySegment cell_x, MemorySegment cell_y) {
        var mh$ = gtk_tree_view_get_path_at_pos$MH();
        try {
            return (int)mh$.invokeExact(tree_view, x, y, path, column, cell_x, cell_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_cell_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1472.gtk_tree_view_get_cell_area$MH,"gtk_tree_view_get_cell_area");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_get_cell_area(GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewColumn* column, GdkRectangle* rect);
     * }
     */
    public static void gtk_tree_view_get_cell_area(MemorySegment tree_view, MemorySegment path, MemorySegment column, MemorySegment rect) {
        var mh$ = gtk_tree_view_get_cell_area$MH();
        try {
            mh$.invokeExact(tree_view, path, column, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_background_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1472.gtk_tree_view_get_background_area$MH,"gtk_tree_view_get_background_area");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_get_background_area(GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewColumn* column, GdkRectangle* rect);
     * }
     */
    public static void gtk_tree_view_get_background_area(MemorySegment tree_view, MemorySegment path, MemorySegment column, MemorySegment rect) {
        var mh$ = gtk_tree_view_get_background_area$MH();
        try {
            mh$.invokeExact(tree_view, path, column, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_visible_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1473.gtk_tree_view_get_visible_rect$MH,"gtk_tree_view_get_visible_rect");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_get_visible_rect(GtkTreeView* tree_view, GdkRectangle* visible_rect);
     * }
     */
    public static void gtk_tree_view_get_visible_rect(MemorySegment tree_view, MemorySegment visible_rect) {
        var mh$ = gtk_tree_view_get_visible_rect$MH();
        try {
            mh$.invokeExact(tree_view, visible_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_visible_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1473.gtk_tree_view_get_visible_range$MH,"gtk_tree_view_get_visible_range");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_visible_range(GtkTreeView* tree_view, GtkTreePath** start_path, GtkTreePath** end_path);
     * }
     */
    public static int gtk_tree_view_get_visible_range(MemorySegment tree_view, MemorySegment start_path, MemorySegment end_path) {
        var mh$ = gtk_tree_view_get_visible_range$MH();
        try {
            return (int)mh$.invokeExact(tree_view, start_path, end_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_is_blank_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1473.gtk_tree_view_is_blank_at_pos$MH,"gtk_tree_view_is_blank_at_pos");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_is_blank_at_pos(GtkTreeView* tree_view, gint x, gint y, GtkTreePath** path, GtkTreeViewColumn** column, gint* cell_x, gint* cell_y);
     * }
     */
    public static int gtk_tree_view_is_blank_at_pos(MemorySegment tree_view, int x, int y, MemorySegment path, MemorySegment column, MemorySegment cell_x, MemorySegment cell_y) {
        var mh$ = gtk_tree_view_is_blank_at_pos$MH();
        try {
            return (int)mh$.invokeExact(tree_view, x, y, path, column, cell_x, cell_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_enable_model_drag_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1473.gtk_tree_view_enable_model_drag_source$MH,"gtk_tree_view_enable_model_drag_source");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_enable_model_drag_source(GtkTreeView* tree_view, GdkModifierType start_button_mask, const GtkTargetEntry* targets, gint n_targets, GdkDragAction actions);
     * }
     */
    public static void gtk_tree_view_enable_model_drag_source(MemorySegment tree_view, int start_button_mask, MemorySegment targets, int n_targets, int actions) {
        var mh$ = gtk_tree_view_enable_model_drag_source$MH();
        try {
            mh$.invokeExact(tree_view, start_button_mask, targets, n_targets, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_enable_model_drag_dest$MH() {
        return RuntimeHelper.requireNonNull(constants$1473.gtk_tree_view_enable_model_drag_dest$MH,"gtk_tree_view_enable_model_drag_dest");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_enable_model_drag_dest(GtkTreeView* tree_view, const GtkTargetEntry* targets, gint n_targets, GdkDragAction actions);
     * }
     */
    public static void gtk_tree_view_enable_model_drag_dest(MemorySegment tree_view, MemorySegment targets, int n_targets, int actions) {
        var mh$ = gtk_tree_view_enable_model_drag_dest$MH();
        try {
            mh$.invokeExact(tree_view, targets, n_targets, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_unset_rows_drag_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1473.gtk_tree_view_unset_rows_drag_source$MH,"gtk_tree_view_unset_rows_drag_source");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_unset_rows_drag_source(GtkTreeView* tree_view);
     * }
     */
    public static void gtk_tree_view_unset_rows_drag_source(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_unset_rows_drag_source$MH();
        try {
            mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_unset_rows_drag_dest$MH() {
        return RuntimeHelper.requireNonNull(constants$1474.gtk_tree_view_unset_rows_drag_dest$MH,"gtk_tree_view_unset_rows_drag_dest");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_unset_rows_drag_dest(GtkTreeView* tree_view);
     * }
     */
    public static void gtk_tree_view_unset_rows_drag_dest(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_unset_rows_drag_dest$MH();
        try {
            mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_drag_dest_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1474.gtk_tree_view_set_drag_dest_row$MH,"gtk_tree_view_set_drag_dest_row");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_drag_dest_row(GtkTreeView* tree_view, GtkTreePath* path, GtkTreeViewDropPosition pos);
     * }
     */
    public static void gtk_tree_view_set_drag_dest_row(MemorySegment tree_view, MemorySegment path, int pos) {
        var mh$ = gtk_tree_view_set_drag_dest_row$MH();
        try {
            mh$.invokeExact(tree_view, path, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_drag_dest_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1474.gtk_tree_view_get_drag_dest_row$MH,"gtk_tree_view_get_drag_dest_row");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_get_drag_dest_row(GtkTreeView* tree_view, GtkTreePath** path, GtkTreeViewDropPosition* pos);
     * }
     */
    public static void gtk_tree_view_get_drag_dest_row(MemorySegment tree_view, MemorySegment path, MemorySegment pos) {
        var mh$ = gtk_tree_view_get_drag_dest_row$MH();
        try {
            mh$.invokeExact(tree_view, path, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_dest_row_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1474.gtk_tree_view_get_dest_row_at_pos$MH,"gtk_tree_view_get_dest_row_at_pos");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_dest_row_at_pos(GtkTreeView* tree_view, gint drag_x, gint drag_y, GtkTreePath** path, GtkTreeViewDropPosition* pos);
     * }
     */
    public static int gtk_tree_view_get_dest_row_at_pos(MemorySegment tree_view, int drag_x, int drag_y, MemorySegment path, MemorySegment pos) {
        var mh$ = gtk_tree_view_get_dest_row_at_pos$MH();
        try {
            return (int)mh$.invokeExact(tree_view, drag_x, drag_y, path, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_create_row_drag_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1474.gtk_tree_view_create_row_drag_icon$MH,"gtk_tree_view_create_row_drag_icon");
    }
    /**
     * {@snippet :
     * cairo_surface_t* gtk_tree_view_create_row_drag_icon(GtkTreeView* tree_view, GtkTreePath* path);
     * }
     */
    public static MemorySegment gtk_tree_view_create_row_drag_icon(MemorySegment tree_view, MemorySegment path) {
        var mh$ = gtk_tree_view_create_row_drag_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_enable_search$MH() {
        return RuntimeHelper.requireNonNull(constants$1474.gtk_tree_view_set_enable_search$MH,"gtk_tree_view_set_enable_search");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_enable_search(GtkTreeView* tree_view, gboolean enable_search);
     * }
     */
    public static void gtk_tree_view_set_enable_search(MemorySegment tree_view, int enable_search) {
        var mh$ = gtk_tree_view_set_enable_search$MH();
        try {
            mh$.invokeExact(tree_view, enable_search);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_enable_search$MH() {
        return RuntimeHelper.requireNonNull(constants$1475.gtk_tree_view_get_enable_search$MH,"gtk_tree_view_get_enable_search");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_enable_search(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_enable_search(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_enable_search$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_search_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1475.gtk_tree_view_get_search_column$MH,"gtk_tree_view_get_search_column");
    }
    /**
     * {@snippet :
     * gint gtk_tree_view_get_search_column(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_search_column(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_search_column$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_search_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1475.gtk_tree_view_set_search_column$MH,"gtk_tree_view_set_search_column");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_search_column(GtkTreeView* tree_view, gint column);
     * }
     */
    public static void gtk_tree_view_set_search_column(MemorySegment tree_view, int column) {
        var mh$ = gtk_tree_view_set_search_column$MH();
        try {
            mh$.invokeExact(tree_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_search_equal_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1475.gtk_tree_view_get_search_equal_func$MH,"gtk_tree_view_get_search_equal_func");
    }
    /**
     * {@snippet :
     * GtkTreeViewSearchEqualFunc gtk_tree_view_get_search_equal_func(GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_search_equal_func(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_search_equal_func$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_search_equal_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1475.gtk_tree_view_set_search_equal_func$MH,"gtk_tree_view_set_search_equal_func");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_search_equal_func(GtkTreeView* tree_view, GtkTreeViewSearchEqualFunc search_equal_func, gpointer search_user_data, GDestroyNotify search_destroy);
     * }
     */
    public static void gtk_tree_view_set_search_equal_func(MemorySegment tree_view, MemorySegment search_equal_func, MemorySegment search_user_data, MemorySegment search_destroy) {
        var mh$ = gtk_tree_view_set_search_equal_func$MH();
        try {
            mh$.invokeExact(tree_view, search_equal_func, search_user_data, search_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_search_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1475.gtk_tree_view_get_search_entry$MH,"gtk_tree_view_get_search_entry");
    }
    /**
     * {@snippet :
     * GtkEntry* gtk_tree_view_get_search_entry(GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_search_entry(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_search_entry$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_search_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1476.gtk_tree_view_set_search_entry$MH,"gtk_tree_view_set_search_entry");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_search_entry(GtkTreeView* tree_view, GtkEntry* entry);
     * }
     */
    public static void gtk_tree_view_set_search_entry(MemorySegment tree_view, MemorySegment entry) {
        var mh$ = gtk_tree_view_set_search_entry$MH();
        try {
            mh$.invokeExact(tree_view, entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_search_position_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1476.gtk_tree_view_get_search_position_func$MH,"gtk_tree_view_get_search_position_func");
    }
    /**
     * {@snippet :
     * GtkTreeViewSearchPositionFunc gtk_tree_view_get_search_position_func(GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_search_position_func(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_search_position_func$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_search_position_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1476.gtk_tree_view_set_search_position_func$MH,"gtk_tree_view_set_search_position_func");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_search_position_func(GtkTreeView* tree_view, GtkTreeViewSearchPositionFunc func, gpointer data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_tree_view_set_search_position_func(MemorySegment tree_view, MemorySegment func, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_tree_view_set_search_position_func$MH();
        try {
            mh$.invokeExact(tree_view, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_convert_widget_to_tree_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$1476.gtk_tree_view_convert_widget_to_tree_coords$MH,"gtk_tree_view_convert_widget_to_tree_coords");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_convert_widget_to_tree_coords(GtkTreeView* tree_view, gint wx, gint wy, gint* tx, gint* ty);
     * }
     */
    public static void gtk_tree_view_convert_widget_to_tree_coords(MemorySegment tree_view, int wx, int wy, MemorySegment tx, MemorySegment ty) {
        var mh$ = gtk_tree_view_convert_widget_to_tree_coords$MH();
        try {
            mh$.invokeExact(tree_view, wx, wy, tx, ty);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_convert_tree_to_widget_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$1476.gtk_tree_view_convert_tree_to_widget_coords$MH,"gtk_tree_view_convert_tree_to_widget_coords");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_convert_tree_to_widget_coords(GtkTreeView* tree_view, gint tx, gint ty, gint* wx, gint* wy);
     * }
     */
    public static void gtk_tree_view_convert_tree_to_widget_coords(MemorySegment tree_view, int tx, int ty, MemorySegment wx, MemorySegment wy) {
        var mh$ = gtk_tree_view_convert_tree_to_widget_coords$MH();
        try {
            mh$.invokeExact(tree_view, tx, ty, wx, wy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_convert_widget_to_bin_window_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$1476.gtk_tree_view_convert_widget_to_bin_window_coords$MH,"gtk_tree_view_convert_widget_to_bin_window_coords");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_convert_widget_to_bin_window_coords(GtkTreeView* tree_view, gint wx, gint wy, gint* bx, gint* by);
     * }
     */
    public static void gtk_tree_view_convert_widget_to_bin_window_coords(MemorySegment tree_view, int wx, int wy, MemorySegment bx, MemorySegment by) {
        var mh$ = gtk_tree_view_convert_widget_to_bin_window_coords$MH();
        try {
            mh$.invokeExact(tree_view, wx, wy, bx, by);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_convert_bin_window_to_widget_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$1477.gtk_tree_view_convert_bin_window_to_widget_coords$MH,"gtk_tree_view_convert_bin_window_to_widget_coords");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_convert_bin_window_to_widget_coords(GtkTreeView* tree_view, gint bx, gint by, gint* wx, gint* wy);
     * }
     */
    public static void gtk_tree_view_convert_bin_window_to_widget_coords(MemorySegment tree_view, int bx, int by, MemorySegment wx, MemorySegment wy) {
        var mh$ = gtk_tree_view_convert_bin_window_to_widget_coords$MH();
        try {
            mh$.invokeExact(tree_view, bx, by, wx, wy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_convert_tree_to_bin_window_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$1477.gtk_tree_view_convert_tree_to_bin_window_coords$MH,"gtk_tree_view_convert_tree_to_bin_window_coords");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_convert_tree_to_bin_window_coords(GtkTreeView* tree_view, gint tx, gint ty, gint* bx, gint* by);
     * }
     */
    public static void gtk_tree_view_convert_tree_to_bin_window_coords(MemorySegment tree_view, int tx, int ty, MemorySegment bx, MemorySegment by) {
        var mh$ = gtk_tree_view_convert_tree_to_bin_window_coords$MH();
        try {
            mh$.invokeExact(tree_view, tx, ty, bx, by);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_convert_bin_window_to_tree_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$1477.gtk_tree_view_convert_bin_window_to_tree_coords$MH,"gtk_tree_view_convert_bin_window_to_tree_coords");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_convert_bin_window_to_tree_coords(GtkTreeView* tree_view, gint bx, gint by, gint* tx, gint* ty);
     * }
     */
    public static void gtk_tree_view_convert_bin_window_to_tree_coords(MemorySegment tree_view, int bx, int by, MemorySegment tx, MemorySegment ty) {
        var mh$ = gtk_tree_view_convert_bin_window_to_tree_coords$MH();
        try {
            mh$.invokeExact(tree_view, bx, by, tx, ty);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_destroy_count_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1477.gtk_tree_view_set_destroy_count_func$MH,"gtk_tree_view_set_destroy_count_func");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_destroy_count_func(GtkTreeView* tree_view, GtkTreeDestroyCountFunc func, gpointer data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_tree_view_set_destroy_count_func(MemorySegment tree_view, MemorySegment func, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_tree_view_set_destroy_count_func$MH();
        try {
            mh$.invokeExact(tree_view, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_fixed_height_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1478.gtk_tree_view_set_fixed_height_mode$MH,"gtk_tree_view_set_fixed_height_mode");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_fixed_height_mode(GtkTreeView* tree_view, gboolean enable);
     * }
     */
    public static void gtk_tree_view_set_fixed_height_mode(MemorySegment tree_view, int enable) {
        var mh$ = gtk_tree_view_set_fixed_height_mode$MH();
        try {
            mh$.invokeExact(tree_view, enable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_fixed_height_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1478.gtk_tree_view_get_fixed_height_mode$MH,"gtk_tree_view_get_fixed_height_mode");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_fixed_height_mode(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_fixed_height_mode(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_fixed_height_mode$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_hover_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1478.gtk_tree_view_set_hover_selection$MH,"gtk_tree_view_set_hover_selection");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_hover_selection(GtkTreeView* tree_view, gboolean hover);
     * }
     */
    public static void gtk_tree_view_set_hover_selection(MemorySegment tree_view, int hover) {
        var mh$ = gtk_tree_view_set_hover_selection$MH();
        try {
            mh$.invokeExact(tree_view, hover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_hover_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1478.gtk_tree_view_get_hover_selection$MH,"gtk_tree_view_get_hover_selection");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_hover_selection(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_hover_selection(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_hover_selection$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_hover_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$1478.gtk_tree_view_set_hover_expand$MH,"gtk_tree_view_set_hover_expand");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_hover_expand(GtkTreeView* tree_view, gboolean expand);
     * }
     */
    public static void gtk_tree_view_set_hover_expand(MemorySegment tree_view, int expand) {
        var mh$ = gtk_tree_view_set_hover_expand$MH();
        try {
            mh$.invokeExact(tree_view, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_hover_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$1478.gtk_tree_view_get_hover_expand$MH,"gtk_tree_view_get_hover_expand");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_hover_expand(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_hover_expand(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_hover_expand$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_rubber_banding$MH() {
        return RuntimeHelper.requireNonNull(constants$1479.gtk_tree_view_set_rubber_banding$MH,"gtk_tree_view_set_rubber_banding");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_rubber_banding(GtkTreeView* tree_view, gboolean enable);
     * }
     */
    public static void gtk_tree_view_set_rubber_banding(MemorySegment tree_view, int enable) {
        var mh$ = gtk_tree_view_set_rubber_banding$MH();
        try {
            mh$.invokeExact(tree_view, enable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_rubber_banding$MH() {
        return RuntimeHelper.requireNonNull(constants$1479.gtk_tree_view_get_rubber_banding$MH,"gtk_tree_view_get_rubber_banding");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_rubber_banding(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_rubber_banding(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_rubber_banding$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_is_rubber_banding_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1479.gtk_tree_view_is_rubber_banding_active$MH,"gtk_tree_view_is_rubber_banding_active");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_is_rubber_banding_active(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_is_rubber_banding_active(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_is_rubber_banding_active$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_row_separator_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1479.gtk_tree_view_get_row_separator_func$MH,"gtk_tree_view_get_row_separator_func");
    }
    /**
     * {@snippet :
     * GtkTreeViewRowSeparatorFunc gtk_tree_view_get_row_separator_func(GtkTreeView* tree_view);
     * }
     */
    public static MemorySegment gtk_tree_view_get_row_separator_func(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_row_separator_func$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_row_separator_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1479.gtk_tree_view_set_row_separator_func$MH,"gtk_tree_view_set_row_separator_func");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_row_separator_func(GtkTreeView* tree_view, GtkTreeViewRowSeparatorFunc func, gpointer data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_tree_view_set_row_separator_func(MemorySegment tree_view, MemorySegment func, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_tree_view_set_row_separator_func$MH();
        try {
            mh$.invokeExact(tree_view, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_grid_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$1479.gtk_tree_view_get_grid_lines$MH,"gtk_tree_view_get_grid_lines");
    }
    /**
     * {@snippet :
     * GtkTreeViewGridLines gtk_tree_view_get_grid_lines(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_grid_lines(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_grid_lines$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_grid_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$1480.gtk_tree_view_set_grid_lines$MH,"gtk_tree_view_set_grid_lines");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_grid_lines(GtkTreeView* tree_view, GtkTreeViewGridLines grid_lines);
     * }
     */
    public static void gtk_tree_view_set_grid_lines(MemorySegment tree_view, int grid_lines) {
        var mh$ = gtk_tree_view_set_grid_lines$MH();
        try {
            mh$.invokeExact(tree_view, grid_lines);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_enable_tree_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$1480.gtk_tree_view_get_enable_tree_lines$MH,"gtk_tree_view_get_enable_tree_lines");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_enable_tree_lines(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_enable_tree_lines(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_enable_tree_lines$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_enable_tree_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$1480.gtk_tree_view_set_enable_tree_lines$MH,"gtk_tree_view_set_enable_tree_lines");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_enable_tree_lines(GtkTreeView* tree_view, gboolean enabled);
     * }
     */
    public static void gtk_tree_view_set_enable_tree_lines(MemorySegment tree_view, int enabled) {
        var mh$ = gtk_tree_view_set_enable_tree_lines$MH();
        try {
            mh$.invokeExact(tree_view, enabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_show_expanders$MH() {
        return RuntimeHelper.requireNonNull(constants$1480.gtk_tree_view_set_show_expanders$MH,"gtk_tree_view_set_show_expanders");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_show_expanders(GtkTreeView* tree_view, gboolean enabled);
     * }
     */
    public static void gtk_tree_view_set_show_expanders(MemorySegment tree_view, int enabled) {
        var mh$ = gtk_tree_view_set_show_expanders$MH();
        try {
            mh$.invokeExact(tree_view, enabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_show_expanders$MH() {
        return RuntimeHelper.requireNonNull(constants$1480.gtk_tree_view_get_show_expanders$MH,"gtk_tree_view_get_show_expanders");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_show_expanders(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_show_expanders(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_show_expanders$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_level_indentation$MH() {
        return RuntimeHelper.requireNonNull(constants$1480.gtk_tree_view_set_level_indentation$MH,"gtk_tree_view_set_level_indentation");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_level_indentation(GtkTreeView* tree_view, gint indentation);
     * }
     */
    public static void gtk_tree_view_set_level_indentation(MemorySegment tree_view, int indentation) {
        var mh$ = gtk_tree_view_set_level_indentation$MH();
        try {
            mh$.invokeExact(tree_view, indentation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_level_indentation$MH() {
        return RuntimeHelper.requireNonNull(constants$1481.gtk_tree_view_get_level_indentation$MH,"gtk_tree_view_get_level_indentation");
    }
    /**
     * {@snippet :
     * gint gtk_tree_view_get_level_indentation(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_level_indentation(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_level_indentation$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_tooltip_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1481.gtk_tree_view_set_tooltip_row$MH,"gtk_tree_view_set_tooltip_row");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_tooltip_row(GtkTreeView* tree_view, GtkTooltip* tooltip, GtkTreePath* path);
     * }
     */
    public static void gtk_tree_view_set_tooltip_row(MemorySegment tree_view, MemorySegment tooltip, MemorySegment path) {
        var mh$ = gtk_tree_view_set_tooltip_row$MH();
        try {
            mh$.invokeExact(tree_view, tooltip, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_tooltip_cell$MH() {
        return RuntimeHelper.requireNonNull(constants$1481.gtk_tree_view_set_tooltip_cell$MH,"gtk_tree_view_set_tooltip_cell");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_tooltip_cell(GtkTreeView* tree_view, GtkTooltip* tooltip, GtkTreePath* path, GtkTreeViewColumn* column, GtkCellRenderer* cell);
     * }
     */
    public static void gtk_tree_view_set_tooltip_cell(MemorySegment tree_view, MemorySegment tooltip, MemorySegment path, MemorySegment column, MemorySegment cell) {
        var mh$ = gtk_tree_view_set_tooltip_cell$MH();
        try {
            mh$.invokeExact(tree_view, tooltip, path, column, cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_tooltip_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1481.gtk_tree_view_get_tooltip_context$MH,"gtk_tree_view_get_tooltip_context");
    }
    /**
     * {@snippet :
     * gboolean gtk_tree_view_get_tooltip_context(GtkTreeView* tree_view, gint* x, gint* y, gboolean keyboard_tip, GtkTreeModel** model, GtkTreePath** path, GtkTreeIter* iter);
     * }
     */
    public static int gtk_tree_view_get_tooltip_context(MemorySegment tree_view, MemorySegment x, MemorySegment y, int keyboard_tip, MemorySegment model, MemorySegment path, MemorySegment iter) {
        var mh$ = gtk_tree_view_get_tooltip_context$MH();
        try {
            return (int)mh$.invokeExact(tree_view, x, y, keyboard_tip, model, path, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_set_tooltip_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1481.gtk_tree_view_set_tooltip_column$MH,"gtk_tree_view_set_tooltip_column");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_set_tooltip_column(GtkTreeView* tree_view, gint column);
     * }
     */
    public static void gtk_tree_view_set_tooltip_column(MemorySegment tree_view, int column) {
        var mh$ = gtk_tree_view_set_tooltip_column$MH();
        try {
            mh$.invokeExact(tree_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_get_tooltip_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1481.gtk_tree_view_get_tooltip_column$MH,"gtk_tree_view_get_tooltip_column");
    }
    /**
     * {@snippet :
     * gint gtk_tree_view_get_tooltip_column(GtkTreeView* tree_view);
     * }
     */
    public static int gtk_tree_view_get_tooltip_column(MemorySegment tree_view) {
        var mh$ = gtk_tree_view_get_tooltip_column$MH();
        try {
            return (int)mh$.invokeExact(tree_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1482.gtk_combo_box_get_type$MH,"gtk_combo_box_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_combo_box_get_type();
     * }
     */
    public static long gtk_combo_box_get_type() {
        var mh$ = gtk_combo_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1482.gtk_combo_box_new$MH,"gtk_combo_box_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_combo_box_new();
     * }
     */
    public static MemorySegment gtk_combo_box_new() {
        var mh$ = gtk_combo_box_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_new_with_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1482.gtk_combo_box_new_with_area$MH,"gtk_combo_box_new_with_area");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_combo_box_new_with_area(GtkCellArea* area);
     * }
     */
    public static MemorySegment gtk_combo_box_new_with_area(MemorySegment area) {
        var mh$ = gtk_combo_box_new_with_area$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_new_with_area_and_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1482.gtk_combo_box_new_with_area_and_entry$MH,"gtk_combo_box_new_with_area_and_entry");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_combo_box_new_with_area_and_entry(GtkCellArea* area);
     * }
     */
    public static MemorySegment gtk_combo_box_new_with_area_and_entry(MemorySegment area) {
        var mh$ = gtk_combo_box_new_with_area_and_entry$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_new_with_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1482.gtk_combo_box_new_with_entry$MH,"gtk_combo_box_new_with_entry");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_combo_box_new_with_entry();
     * }
     */
    public static MemorySegment gtk_combo_box_new_with_entry() {
        var mh$ = gtk_combo_box_new_with_entry$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_new_with_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1482.gtk_combo_box_new_with_model$MH,"gtk_combo_box_new_with_model");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_combo_box_new_with_model(GtkTreeModel* model);
     * }
     */
    public static MemorySegment gtk_combo_box_new_with_model(MemorySegment model) {
        var mh$ = gtk_combo_box_new_with_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_new_with_model_and_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1483.gtk_combo_box_new_with_model_and_entry$MH,"gtk_combo_box_new_with_model_and_entry");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_combo_box_new_with_model_and_entry(GtkTreeModel* model);
     * }
     */
    public static MemorySegment gtk_combo_box_new_with_model_and_entry(MemorySegment model) {
        var mh$ = gtk_combo_box_new_with_model_and_entry$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_wrap_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1483.gtk_combo_box_get_wrap_width$MH,"gtk_combo_box_get_wrap_width");
    }
    /**
     * {@snippet :
     * gint gtk_combo_box_get_wrap_width(GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_wrap_width(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_wrap_width$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_wrap_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1483.gtk_combo_box_set_wrap_width$MH,"gtk_combo_box_set_wrap_width");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_wrap_width(GtkComboBox* combo_box, gint width);
     * }
     */
    public static void gtk_combo_box_set_wrap_width(MemorySegment combo_box, int width) {
        var mh$ = gtk_combo_box_set_wrap_width$MH();
        try {
            mh$.invokeExact(combo_box, width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_row_span_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1483.gtk_combo_box_get_row_span_column$MH,"gtk_combo_box_get_row_span_column");
    }
    /**
     * {@snippet :
     * gint gtk_combo_box_get_row_span_column(GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_row_span_column(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_row_span_column$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_row_span_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1483.gtk_combo_box_set_row_span_column$MH,"gtk_combo_box_set_row_span_column");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_row_span_column(GtkComboBox* combo_box, gint row_span);
     * }
     */
    public static void gtk_combo_box_set_row_span_column(MemorySegment combo_box, int row_span) {
        var mh$ = gtk_combo_box_set_row_span_column$MH();
        try {
            mh$.invokeExact(combo_box, row_span);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_column_span_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1483.gtk_combo_box_get_column_span_column$MH,"gtk_combo_box_get_column_span_column");
    }
    /**
     * {@snippet :
     * gint gtk_combo_box_get_column_span_column(GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_column_span_column(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_column_span_column$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_column_span_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1484.gtk_combo_box_set_column_span_column$MH,"gtk_combo_box_set_column_span_column");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_column_span_column(GtkComboBox* combo_box, gint column_span);
     * }
     */
    public static void gtk_combo_box_set_column_span_column(MemorySegment combo_box, int column_span) {
        var mh$ = gtk_combo_box_set_column_span_column$MH();
        try {
            mh$.invokeExact(combo_box, column_span);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_add_tearoffs$MH() {
        return RuntimeHelper.requireNonNull(constants$1484.gtk_combo_box_get_add_tearoffs$MH,"gtk_combo_box_get_add_tearoffs");
    }
    /**
     * {@snippet :
     * gboolean gtk_combo_box_get_add_tearoffs(GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_add_tearoffs(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_add_tearoffs$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_add_tearoffs$MH() {
        return RuntimeHelper.requireNonNull(constants$1484.gtk_combo_box_set_add_tearoffs$MH,"gtk_combo_box_set_add_tearoffs");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_add_tearoffs(GtkComboBox* combo_box, gboolean add_tearoffs);
     * }
     */
    public static void gtk_combo_box_set_add_tearoffs(MemorySegment combo_box, int add_tearoffs) {
        var mh$ = gtk_combo_box_set_add_tearoffs$MH();
        try {
            mh$.invokeExact(combo_box, add_tearoffs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1484.gtk_combo_box_get_title$MH,"gtk_combo_box_get_title");
    }
    /**
     * {@snippet :
     * const gchar* gtk_combo_box_get_title(GtkComboBox* combo_box);
     * }
     */
    public static MemorySegment gtk_combo_box_get_title(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1484.gtk_combo_box_set_title$MH,"gtk_combo_box_set_title");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_title(GtkComboBox* combo_box, const gchar* title);
     * }
     */
    public static void gtk_combo_box_set_title(MemorySegment combo_box, MemorySegment title) {
        var mh$ = gtk_combo_box_set_title$MH();
        try {
            mh$.invokeExact(combo_box, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1484.gtk_combo_box_get_focus_on_click$MH,"gtk_combo_box_get_focus_on_click");
    }
    /**
     * {@snippet :
     * gboolean gtk_combo_box_get_focus_on_click(GtkComboBox* combo);
     * }
     */
    public static int gtk_combo_box_get_focus_on_click(MemorySegment combo) {
        var mh$ = gtk_combo_box_get_focus_on_click$MH();
        try {
            return (int)mh$.invokeExact(combo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1485.gtk_combo_box_set_focus_on_click$MH,"gtk_combo_box_set_focus_on_click");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_focus_on_click(GtkComboBox* combo, gboolean focus_on_click);
     * }
     */
    public static void gtk_combo_box_set_focus_on_click(MemorySegment combo, int focus_on_click) {
        var mh$ = gtk_combo_box_set_focus_on_click$MH();
        try {
            mh$.invokeExact(combo, focus_on_click);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1485.gtk_combo_box_get_active$MH,"gtk_combo_box_get_active");
    }
    /**
     * {@snippet :
     * gint gtk_combo_box_get_active(GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_active(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_active$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1485.gtk_combo_box_set_active$MH,"gtk_combo_box_set_active");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_active(GtkComboBox* combo_box, gint index_);
     * }
     */
    public static void gtk_combo_box_set_active(MemorySegment combo_box, int index_) {
        var mh$ = gtk_combo_box_set_active$MH();
        try {
            mh$.invokeExact(combo_box, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_active_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$1485.gtk_combo_box_get_active_iter$MH,"gtk_combo_box_get_active_iter");
    }
    /**
     * {@snippet :
     * gboolean gtk_combo_box_get_active_iter(GtkComboBox* combo_box, GtkTreeIter* iter);
     * }
     */
    public static int gtk_combo_box_get_active_iter(MemorySegment combo_box, MemorySegment iter) {
        var mh$ = gtk_combo_box_get_active_iter$MH();
        try {
            return (int)mh$.invokeExact(combo_box, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_active_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$1485.gtk_combo_box_set_active_iter$MH,"gtk_combo_box_set_active_iter");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_active_iter(GtkComboBox* combo_box, GtkTreeIter* iter);
     * }
     */
    public static void gtk_combo_box_set_active_iter(MemorySegment combo_box, MemorySegment iter) {
        var mh$ = gtk_combo_box_set_active_iter$MH();
        try {
            mh$.invokeExact(combo_box, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1485.gtk_combo_box_set_model$MH,"gtk_combo_box_set_model");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_model(GtkComboBox* combo_box, GtkTreeModel* model);
     * }
     */
    public static void gtk_combo_box_set_model(MemorySegment combo_box, MemorySegment model) {
        var mh$ = gtk_combo_box_set_model$MH();
        try {
            mh$.invokeExact(combo_box, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1486.gtk_combo_box_get_model$MH,"gtk_combo_box_get_model");
    }
    /**
     * {@snippet :
     * GtkTreeModel* gtk_combo_box_get_model(GtkComboBox* combo_box);
     * }
     */
    public static MemorySegment gtk_combo_box_get_model(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_row_separator_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1486.gtk_combo_box_get_row_separator_func$MH,"gtk_combo_box_get_row_separator_func");
    }
    /**
     * {@snippet :
     * GtkTreeViewRowSeparatorFunc gtk_combo_box_get_row_separator_func(GtkComboBox* combo_box);
     * }
     */
    public static MemorySegment gtk_combo_box_get_row_separator_func(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_row_separator_func$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_row_separator_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1486.gtk_combo_box_set_row_separator_func$MH,"gtk_combo_box_set_row_separator_func");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_row_separator_func(GtkComboBox* combo_box, GtkTreeViewRowSeparatorFunc func, gpointer data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_combo_box_set_row_separator_func(MemorySegment combo_box, MemorySegment func, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_combo_box_set_row_separator_func$MH();
        try {
            mh$.invokeExact(combo_box, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_button_sensitivity$MH() {
        return RuntimeHelper.requireNonNull(constants$1486.gtk_combo_box_set_button_sensitivity$MH,"gtk_combo_box_set_button_sensitivity");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_button_sensitivity(GtkComboBox* combo_box, GtkSensitivityType sensitivity);
     * }
     */
    public static void gtk_combo_box_set_button_sensitivity(MemorySegment combo_box, int sensitivity) {
        var mh$ = gtk_combo_box_set_button_sensitivity$MH();
        try {
            mh$.invokeExact(combo_box, sensitivity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_button_sensitivity$MH() {
        return RuntimeHelper.requireNonNull(constants$1486.gtk_combo_box_get_button_sensitivity$MH,"gtk_combo_box_get_button_sensitivity");
    }
    /**
     * {@snippet :
     * GtkSensitivityType gtk_combo_box_get_button_sensitivity(GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_button_sensitivity(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_button_sensitivity$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_has_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1486.gtk_combo_box_get_has_entry$MH,"gtk_combo_box_get_has_entry");
    }
    /**
     * {@snippet :
     * gboolean gtk_combo_box_get_has_entry(GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_has_entry(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_has_entry$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_entry_text_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1487.gtk_combo_box_set_entry_text_column$MH,"gtk_combo_box_set_entry_text_column");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_entry_text_column(GtkComboBox* combo_box, gint text_column);
     * }
     */
    public static void gtk_combo_box_set_entry_text_column(MemorySegment combo_box, int text_column) {
        var mh$ = gtk_combo_box_set_entry_text_column$MH();
        try {
            mh$.invokeExact(combo_box, text_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_entry_text_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1487.gtk_combo_box_get_entry_text_column$MH,"gtk_combo_box_get_entry_text_column");
    }
    /**
     * {@snippet :
     * gint gtk_combo_box_get_entry_text_column(GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_entry_text_column(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_entry_text_column$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_popup_fixed_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1487.gtk_combo_box_set_popup_fixed_width$MH,"gtk_combo_box_set_popup_fixed_width");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_popup_fixed_width(GtkComboBox* combo_box, gboolean fixed);
     * }
     */
    public static void gtk_combo_box_set_popup_fixed_width(MemorySegment combo_box, int fixed) {
        var mh$ = gtk_combo_box_set_popup_fixed_width$MH();
        try {
            mh$.invokeExact(combo_box, fixed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_popup_fixed_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1487.gtk_combo_box_get_popup_fixed_width$MH,"gtk_combo_box_get_popup_fixed_width");
    }
    /**
     * {@snippet :
     * gboolean gtk_combo_box_get_popup_fixed_width(GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_popup_fixed_width(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_popup_fixed_width$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_popup$MH() {
        return RuntimeHelper.requireNonNull(constants$1487.gtk_combo_box_popup$MH,"gtk_combo_box_popup");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_popup(GtkComboBox* combo_box);
     * }
     */
    public static void gtk_combo_box_popup(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_popup$MH();
        try {
            mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_popup_for_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1487.gtk_combo_box_popup_for_device$MH,"gtk_combo_box_popup_for_device");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_popup_for_device(GtkComboBox* combo_box, GdkDevice* device);
     * }
     */
    public static void gtk_combo_box_popup_for_device(MemorySegment combo_box, MemorySegment device) {
        var mh$ = gtk_combo_box_popup_for_device$MH();
        try {
            mh$.invokeExact(combo_box, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_popdown$MH() {
        return RuntimeHelper.requireNonNull(constants$1488.gtk_combo_box_popdown$MH,"gtk_combo_box_popdown");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_popdown(GtkComboBox* combo_box);
     * }
     */
    public static void gtk_combo_box_popdown(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_popdown$MH();
        try {
            mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_popup_accessible$MH() {
        return RuntimeHelper.requireNonNull(constants$1488.gtk_combo_box_get_popup_accessible$MH,"gtk_combo_box_get_popup_accessible");
    }
    /**
     * {@snippet :
     * AtkObject* gtk_combo_box_get_popup_accessible(GtkComboBox* combo_box);
     * }
     */
    public static MemorySegment gtk_combo_box_get_popup_accessible(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_popup_accessible$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_id_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1488.gtk_combo_box_get_id_column$MH,"gtk_combo_box_get_id_column");
    }
    /**
     * {@snippet :
     * gint gtk_combo_box_get_id_column(GtkComboBox* combo_box);
     * }
     */
    public static int gtk_combo_box_get_id_column(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_id_column$MH();
        try {
            return (int)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_id_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1488.gtk_combo_box_set_id_column$MH,"gtk_combo_box_set_id_column");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_set_id_column(GtkComboBox* combo_box, gint id_column);
     * }
     */
    public static void gtk_combo_box_set_id_column(MemorySegment combo_box, int id_column) {
        var mh$ = gtk_combo_box_set_id_column$MH();
        try {
            mh$.invokeExact(combo_box, id_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_get_active_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1488.gtk_combo_box_get_active_id$MH,"gtk_combo_box_get_active_id");
    }
    /**
     * {@snippet :
     * const gchar* gtk_combo_box_get_active_id(GtkComboBox* combo_box);
     * }
     */
    public static MemorySegment gtk_combo_box_get_active_id(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_get_active_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_set_active_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1488.gtk_combo_box_set_active_id$MH,"gtk_combo_box_set_active_id");
    }
    /**
     * {@snippet :
     * gboolean gtk_combo_box_set_active_id(GtkComboBox* combo_box, const gchar* active_id);
     * }
     */
    public static int gtk_combo_box_set_active_id(MemorySegment combo_box, MemorySegment active_id) {
        var mh$ = gtk_combo_box_set_active_id$MH();
        try {
            return (int)mh$.invokeExact(combo_box, active_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1489.gtk_app_chooser_button_get_type$MH,"gtk_app_chooser_button_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_app_chooser_button_get_type();
     * }
     */
    public static long gtk_app_chooser_button_get_type() {
        var mh$ = gtk_app_chooser_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1489.gtk_app_chooser_button_new$MH,"gtk_app_chooser_button_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_app_chooser_button_new(const gchar* content_type);
     * }
     */
    public static MemorySegment gtk_app_chooser_button_new(MemorySegment content_type) {
        var mh$ = gtk_app_chooser_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(content_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_append_separator$MH() {
        return RuntimeHelper.requireNonNull(constants$1489.gtk_app_chooser_button_append_separator$MH,"gtk_app_chooser_button_append_separator");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_button_append_separator(GtkAppChooserButton* self);
     * }
     */
    public static void gtk_app_chooser_button_append_separator(MemorySegment self) {
        var mh$ = gtk_app_chooser_button_append_separator$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_append_custom_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1489.gtk_app_chooser_button_append_custom_item$MH,"gtk_app_chooser_button_append_custom_item");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_button_append_custom_item(GtkAppChooserButton* self, const gchar* name, const gchar* label, GIcon* icon);
     * }
     */
    public static void gtk_app_chooser_button_append_custom_item(MemorySegment self, MemorySegment name, MemorySegment label, MemorySegment icon) {
        var mh$ = gtk_app_chooser_button_append_custom_item$MH();
        try {
            mh$.invokeExact(self, name, label, icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_set_active_custom_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1489.gtk_app_chooser_button_set_active_custom_item$MH,"gtk_app_chooser_button_set_active_custom_item");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_button_set_active_custom_item(GtkAppChooserButton* self, const gchar* name);
     * }
     */
    public static void gtk_app_chooser_button_set_active_custom_item(MemorySegment self, MemorySegment name) {
        var mh$ = gtk_app_chooser_button_set_active_custom_item$MH();
        try {
            mh$.invokeExact(self, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_set_show_dialog_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1489.gtk_app_chooser_button_set_show_dialog_item$MH,"gtk_app_chooser_button_set_show_dialog_item");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_button_set_show_dialog_item(GtkAppChooserButton* self, gboolean setting);
     * }
     */
    public static void gtk_app_chooser_button_set_show_dialog_item(MemorySegment self, int setting) {
        var mh$ = gtk_app_chooser_button_set_show_dialog_item$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_get_show_dialog_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1490.gtk_app_chooser_button_get_show_dialog_item$MH,"gtk_app_chooser_button_get_show_dialog_item");
    }
    /**
     * {@snippet :
     * gboolean gtk_app_chooser_button_get_show_dialog_item(GtkAppChooserButton* self);
     * }
     */
    public static int gtk_app_chooser_button_get_show_dialog_item(MemorySegment self) {
        var mh$ = gtk_app_chooser_button_get_show_dialog_item$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_set_heading$MH() {
        return RuntimeHelper.requireNonNull(constants$1490.gtk_app_chooser_button_set_heading$MH,"gtk_app_chooser_button_set_heading");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_button_set_heading(GtkAppChooserButton* self, const gchar* heading);
     * }
     */
    public static void gtk_app_chooser_button_set_heading(MemorySegment self, MemorySegment heading) {
        var mh$ = gtk_app_chooser_button_set_heading$MH();
        try {
            mh$.invokeExact(self, heading);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_get_heading$MH() {
        return RuntimeHelper.requireNonNull(constants$1490.gtk_app_chooser_button_get_heading$MH,"gtk_app_chooser_button_get_heading");
    }
    /**
     * {@snippet :
     * const gchar* gtk_app_chooser_button_get_heading(GtkAppChooserButton* self);
     * }
     */
    public static MemorySegment gtk_app_chooser_button_get_heading(MemorySegment self) {
        var mh$ = gtk_app_chooser_button_get_heading$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_set_show_default_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1490.gtk_app_chooser_button_set_show_default_item$MH,"gtk_app_chooser_button_set_show_default_item");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_button_set_show_default_item(GtkAppChooserButton* self, gboolean setting);
     * }
     */
    public static void gtk_app_chooser_button_set_show_default_item(MemorySegment self, int setting) {
        var mh$ = gtk_app_chooser_button_set_show_default_item$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_button_get_show_default_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1490.gtk_app_chooser_button_get_show_default_item$MH,"gtk_app_chooser_button_get_show_default_item");
    }
    /**
     * {@snippet :
     * gboolean gtk_app_chooser_button_get_show_default_item(GtkAppChooserButton* self);
     * }
     */
    public static int gtk_app_chooser_button_get_show_default_item(MemorySegment self) {
        var mh$ = gtk_app_chooser_button_get_show_default_item$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcuts_window_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1490.gtk_shortcuts_window_get_type$MH,"gtk_shortcuts_window_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_shortcuts_window_get_type();
     * }
     */
    public static long gtk_shortcuts_window_get_type() {
        var mh$ = gtk_shortcuts_window_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkShortcutsWindow* GtkShortcutsWindow_autoptr;
     * }
     */
    public static final OfAddress GtkShortcutsWindow_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkShortcutsWindow_listautoptr;
     * }
     */
    public static final OfAddress GtkShortcutsWindow_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkShortcutsWindow_slistautoptr;
     * }
     */
    public static final OfAddress GtkShortcutsWindow_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkShortcutsWindow_queueautoptr;
     * }
     */
    public static final OfAddress GtkShortcutsWindow_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_application_window_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1491.gtk_application_window_get_type$MH,"gtk_application_window_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_application_window_get_type();
     * }
     */
    public static long gtk_application_window_get_type() {
        var mh$ = gtk_application_window_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_window_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1491.gtk_application_window_new$MH,"gtk_application_window_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_application_window_new(GtkApplication* application);
     * }
     */
    public static MemorySegment gtk_application_window_new(MemorySegment application) {
        var mh$ = gtk_application_window_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_window_set_show_menubar$MH() {
        return RuntimeHelper.requireNonNull(constants$1491.gtk_application_window_set_show_menubar$MH,"gtk_application_window_set_show_menubar");
    }
    /**
     * {@snippet :
     * void gtk_application_window_set_show_menubar(GtkApplicationWindow* window, gboolean show_menubar);
     * }
     */
    public static void gtk_application_window_set_show_menubar(MemorySegment window, int show_menubar) {
        var mh$ = gtk_application_window_set_show_menubar$MH();
        try {
            mh$.invokeExact(window, show_menubar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_window_get_show_menubar$MH() {
        return RuntimeHelper.requireNonNull(constants$1491.gtk_application_window_get_show_menubar$MH,"gtk_application_window_get_show_menubar");
    }
    /**
     * {@snippet :
     * gboolean gtk_application_window_get_show_menubar(GtkApplicationWindow* window);
     * }
     */
    public static int gtk_application_window_get_show_menubar(MemorySegment window) {
        var mh$ = gtk_application_window_get_show_menubar$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_window_get_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1491.gtk_application_window_get_id$MH,"gtk_application_window_get_id");
    }
    /**
     * {@snippet :
     * guint gtk_application_window_get_id(GtkApplicationWindow* window);
     * }
     */
    public static int gtk_application_window_get_id(MemorySegment window) {
        var mh$ = gtk_application_window_get_id$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_window_set_help_overlay$MH() {
        return RuntimeHelper.requireNonNull(constants$1491.gtk_application_window_set_help_overlay$MH,"gtk_application_window_set_help_overlay");
    }
    /**
     * {@snippet :
     * void gtk_application_window_set_help_overlay(GtkApplicationWindow* window, GtkShortcutsWindow* help_overlay);
     * }
     */
    public static void gtk_application_window_set_help_overlay(MemorySegment window, MemorySegment help_overlay) {
        var mh$ = gtk_application_window_set_help_overlay$MH();
        try {
            mh$.invokeExact(window, help_overlay);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_window_get_help_overlay$MH() {
        return RuntimeHelper.requireNonNull(constants$1492.gtk_application_window_get_help_overlay$MH,"gtk_application_window_get_help_overlay");
    }
    /**
     * {@snippet :
     * GtkShortcutsWindow* gtk_application_window_get_help_overlay(GtkApplicationWindow* window);
     * }
     */
    public static MemorySegment gtk_application_window_get_help_overlay(MemorySegment window) {
        var mh$ = gtk_application_window_get_help_overlay$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1492.gtk_frame_get_type$MH,"gtk_frame_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_frame_get_type();
     * }
     */
    public static long gtk_frame_get_type() {
        var mh$ = gtk_frame_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1492.gtk_frame_new$MH,"gtk_frame_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_frame_new(const gchar* label);
     * }
     */
    public static MemorySegment gtk_frame_new(MemorySegment label) {
        var mh$ = gtk_frame_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1492.gtk_frame_set_label$MH,"gtk_frame_set_label");
    }
    /**
     * {@snippet :
     * void gtk_frame_set_label(GtkFrame* frame, const gchar* label);
     * }
     */
    public static void gtk_frame_set_label(MemorySegment frame, MemorySegment label) {
        var mh$ = gtk_frame_set_label$MH();
        try {
            mh$.invokeExact(frame, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1492.gtk_frame_get_label$MH,"gtk_frame_get_label");
    }
    /**
     * {@snippet :
     * const gchar* gtk_frame_get_label(GtkFrame* frame);
     * }
     */
    public static MemorySegment gtk_frame_get_label(MemorySegment frame) {
        var mh$ = gtk_frame_get_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1492.gtk_frame_set_label_widget$MH,"gtk_frame_set_label_widget");
    }
    /**
     * {@snippet :
     * void gtk_frame_set_label_widget(GtkFrame* frame, GtkWidget* label_widget);
     * }
     */
    public static void gtk_frame_set_label_widget(MemorySegment frame, MemorySegment label_widget) {
        var mh$ = gtk_frame_set_label_widget$MH();
        try {
            mh$.invokeExact(frame, label_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1493.gtk_frame_get_label_widget$MH,"gtk_frame_get_label_widget");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_frame_get_label_widget(GtkFrame* frame);
     * }
     */
    public static MemorySegment gtk_frame_get_label_widget(MemorySegment frame) {
        var mh$ = gtk_frame_get_label_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_label_align$MH() {
        return RuntimeHelper.requireNonNull(constants$1493.gtk_frame_set_label_align$MH,"gtk_frame_set_label_align");
    }
    /**
     * {@snippet :
     * void gtk_frame_set_label_align(GtkFrame* frame, gfloat xalign, gfloat yalign);
     * }
     */
    public static void gtk_frame_set_label_align(MemorySegment frame, float xalign, float yalign) {
        var mh$ = gtk_frame_set_label_align$MH();
        try {
            mh$.invokeExact(frame, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_label_align$MH() {
        return RuntimeHelper.requireNonNull(constants$1493.gtk_frame_get_label_align$MH,"gtk_frame_get_label_align");
    }
    /**
     * {@snippet :
     * void gtk_frame_get_label_align(GtkFrame* frame, gfloat* xalign, gfloat* yalign);
     * }
     */
    public static void gtk_frame_get_label_align(MemorySegment frame, MemorySegment xalign, MemorySegment yalign) {
        var mh$ = gtk_frame_get_label_align$MH();
        try {
            mh$.invokeExact(frame, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_shadow_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1493.gtk_frame_set_shadow_type$MH,"gtk_frame_set_shadow_type");
    }
    /**
     * {@snippet :
     * void gtk_frame_set_shadow_type(GtkFrame* frame, GtkShadowType type);
     * }
     */
    public static void gtk_frame_set_shadow_type(MemorySegment frame, int type) {
        var mh$ = gtk_frame_set_shadow_type$MH();
        try {
            mh$.invokeExact(frame, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_shadow_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1493.gtk_frame_get_shadow_type$MH,"gtk_frame_get_shadow_type");
    }
    /**
     * {@snippet :
     * GtkShadowType gtk_frame_get_shadow_type(GtkFrame* frame);
     * }
     */
    public static int gtk_frame_get_shadow_type(MemorySegment frame) {
        var mh$ = gtk_frame_get_shadow_type$MH();
        try {
            return (int)mh$.invokeExact(frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_aspect_frame_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1493.gtk_aspect_frame_get_type$MH,"gtk_aspect_frame_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_aspect_frame_get_type();
     * }
     */
    public static long gtk_aspect_frame_get_type() {
        var mh$ = gtk_aspect_frame_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_aspect_frame_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1494.gtk_aspect_frame_new$MH,"gtk_aspect_frame_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_aspect_frame_new(const gchar* label, gfloat xalign, gfloat yalign, gfloat ratio, gboolean obey_child);
     * }
     */
    public static MemorySegment gtk_aspect_frame_new(MemorySegment label, float xalign, float yalign, float ratio, int obey_child) {
        var mh$ = gtk_aspect_frame_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label, xalign, yalign, ratio, obey_child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_aspect_frame_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1494.gtk_aspect_frame_set$MH,"gtk_aspect_frame_set");
    }
    /**
     * {@snippet :
     * void gtk_aspect_frame_set(GtkAspectFrame* aspect_frame, gfloat xalign, gfloat yalign, gfloat ratio, gboolean obey_child);
     * }
     */
    public static void gtk_aspect_frame_set(MemorySegment aspect_frame, float xalign, float yalign, float ratio, int obey_child) {
        var mh$ = gtk_aspect_frame_set$MH();
        try {
            mh$.invokeExact(aspect_frame, xalign, yalign, ratio, obey_child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_ASSISTANT_PAGE_CONTENT = 0;
     * }
     */
    public static int GTK_ASSISTANT_PAGE_CONTENT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_ASSISTANT_PAGE_INTRO = 1;
     * }
     */
    public static int GTK_ASSISTANT_PAGE_INTRO() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_ASSISTANT_PAGE_CONFIRM = 2;
     * }
     */
    public static int GTK_ASSISTANT_PAGE_CONFIRM() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_ASSISTANT_PAGE_SUMMARY = 3;
     * }
     */
    public static int GTK_ASSISTANT_PAGE_SUMMARY() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_ASSISTANT_PAGE_PROGRESS = 4;
     * }
     */
    public static int GTK_ASSISTANT_PAGE_PROGRESS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_ASSISTANT_PAGE_CUSTOM = 5;
     * }
     */
    public static int GTK_ASSISTANT_PAGE_CUSTOM() {
        return (int)5L;
    }
    public static MethodHandle gtk_assistant_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1494.gtk_assistant_get_type$MH,"gtk_assistant_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_assistant_get_type();
     * }
     */
    public static long gtk_assistant_get_type() {
        var mh$ = gtk_assistant_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1494.gtk_assistant_new$MH,"gtk_assistant_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_assistant_new();
     * }
     */
    public static MemorySegment gtk_assistant_new() {
        var mh$ = gtk_assistant_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_next_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1495.gtk_assistant_next_page$MH,"gtk_assistant_next_page");
    }
    /**
     * {@snippet :
     * void gtk_assistant_next_page(GtkAssistant* assistant);
     * }
     */
    public static void gtk_assistant_next_page(MemorySegment assistant) {
        var mh$ = gtk_assistant_next_page$MH();
        try {
            mh$.invokeExact(assistant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_previous_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1495.gtk_assistant_previous_page$MH,"gtk_assistant_previous_page");
    }
    /**
     * {@snippet :
     * void gtk_assistant_previous_page(GtkAssistant* assistant);
     * }
     */
    public static void gtk_assistant_previous_page(MemorySegment assistant) {
        var mh$ = gtk_assistant_previous_page$MH();
        try {
            mh$.invokeExact(assistant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_current_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1495.gtk_assistant_get_current_page$MH,"gtk_assistant_get_current_page");
    }
    /**
     * {@snippet :
     * gint gtk_assistant_get_current_page(GtkAssistant* assistant);
     * }
     */
    public static int gtk_assistant_get_current_page(MemorySegment assistant) {
        var mh$ = gtk_assistant_get_current_page$MH();
        try {
            return (int)mh$.invokeExact(assistant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_current_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1495.gtk_assistant_set_current_page$MH,"gtk_assistant_set_current_page");
    }
    /**
     * {@snippet :
     * void gtk_assistant_set_current_page(GtkAssistant* assistant, gint page_num);
     * }
     */
    public static void gtk_assistant_set_current_page(MemorySegment assistant, int page_num) {
        var mh$ = gtk_assistant_set_current_page$MH();
        try {
            mh$.invokeExact(assistant, page_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_n_pages$MH() {
        return RuntimeHelper.requireNonNull(constants$1495.gtk_assistant_get_n_pages$MH,"gtk_assistant_get_n_pages");
    }
    /**
     * {@snippet :
     * gint gtk_assistant_get_n_pages(GtkAssistant* assistant);
     * }
     */
    public static int gtk_assistant_get_n_pages(MemorySegment assistant) {
        var mh$ = gtk_assistant_get_n_pages$MH();
        try {
            return (int)mh$.invokeExact(assistant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_nth_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1495.gtk_assistant_get_nth_page$MH,"gtk_assistant_get_nth_page");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_assistant_get_nth_page(GtkAssistant* assistant, gint page_num);
     * }
     */
    public static MemorySegment gtk_assistant_get_nth_page(MemorySegment assistant, int page_num) {
        var mh$ = gtk_assistant_get_nth_page$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(assistant, page_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_prepend_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1496.gtk_assistant_prepend_page$MH,"gtk_assistant_prepend_page");
    }
    /**
     * {@snippet :
     * gint gtk_assistant_prepend_page(GtkAssistant* assistant, GtkWidget* page);
     * }
     */
    public static int gtk_assistant_prepend_page(MemorySegment assistant, MemorySegment page) {
        var mh$ = gtk_assistant_prepend_page$MH();
        try {
            return (int)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_append_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1496.gtk_assistant_append_page$MH,"gtk_assistant_append_page");
    }
    /**
     * {@snippet :
     * gint gtk_assistant_append_page(GtkAssistant* assistant, GtkWidget* page);
     * }
     */
    public static int gtk_assistant_append_page(MemorySegment assistant, MemorySegment page) {
        var mh$ = gtk_assistant_append_page$MH();
        try {
            return (int)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_insert_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1496.gtk_assistant_insert_page$MH,"gtk_assistant_insert_page");
    }
    /**
     * {@snippet :
     * gint gtk_assistant_insert_page(GtkAssistant* assistant, GtkWidget* page, gint position);
     * }
     */
    public static int gtk_assistant_insert_page(MemorySegment assistant, MemorySegment page, int position) {
        var mh$ = gtk_assistant_insert_page$MH();
        try {
            return (int)mh$.invokeExact(assistant, page, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_remove_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1496.gtk_assistant_remove_page$MH,"gtk_assistant_remove_page");
    }
    /**
     * {@snippet :
     * void gtk_assistant_remove_page(GtkAssistant* assistant, gint page_num);
     * }
     */
    public static void gtk_assistant_remove_page(MemorySegment assistant, int page_num) {
        var mh$ = gtk_assistant_remove_page$MH();
        try {
            mh$.invokeExact(assistant, page_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_forward_page_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1496.gtk_assistant_set_forward_page_func$MH,"gtk_assistant_set_forward_page_func");
    }
    /**
     * {@snippet :
     * void gtk_assistant_set_forward_page_func(GtkAssistant* assistant, GtkAssistantPageFunc page_func, gpointer data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_assistant_set_forward_page_func(MemorySegment assistant, MemorySegment page_func, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_assistant_set_forward_page_func$MH();
        try {
            mh$.invokeExact(assistant, page_func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_page_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1496.gtk_assistant_set_page_type$MH,"gtk_assistant_set_page_type");
    }
    /**
     * {@snippet :
     * void gtk_assistant_set_page_type(GtkAssistant* assistant, GtkWidget* page, GtkAssistantPageType type);
     * }
     */
    public static void gtk_assistant_set_page_type(MemorySegment assistant, MemorySegment page, int type) {
        var mh$ = gtk_assistant_set_page_type$MH();
        try {
            mh$.invokeExact(assistant, page, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_page_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1497.gtk_assistant_get_page_type$MH,"gtk_assistant_get_page_type");
    }
    /**
     * {@snippet :
     * GtkAssistantPageType gtk_assistant_get_page_type(GtkAssistant* assistant, GtkWidget* page);
     * }
     */
    public static int gtk_assistant_get_page_type(MemorySegment assistant, MemorySegment page) {
        var mh$ = gtk_assistant_get_page_type$MH();
        try {
            return (int)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_page_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1497.gtk_assistant_set_page_title$MH,"gtk_assistant_set_page_title");
    }
    /**
     * {@snippet :
     * void gtk_assistant_set_page_title(GtkAssistant* assistant, GtkWidget* page, const gchar* title);
     * }
     */
    public static void gtk_assistant_set_page_title(MemorySegment assistant, MemorySegment page, MemorySegment title) {
        var mh$ = gtk_assistant_set_page_title$MH();
        try {
            mh$.invokeExact(assistant, page, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_page_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1497.gtk_assistant_get_page_title$MH,"gtk_assistant_get_page_title");
    }
    /**
     * {@snippet :
     * const gchar* gtk_assistant_get_page_title(GtkAssistant* assistant, GtkWidget* page);
     * }
     */
    public static MemorySegment gtk_assistant_get_page_title(MemorySegment assistant, MemorySegment page) {
        var mh$ = gtk_assistant_get_page_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_page_header_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1497.gtk_assistant_set_page_header_image$MH,"gtk_assistant_set_page_header_image");
    }
    /**
     * {@snippet :
     * void gtk_assistant_set_page_header_image(GtkAssistant* assistant, GtkWidget* page, GdkPixbuf* pixbuf);
     * }
     */
    public static void gtk_assistant_set_page_header_image(MemorySegment assistant, MemorySegment page, MemorySegment pixbuf) {
        var mh$ = gtk_assistant_set_page_header_image$MH();
        try {
            mh$.invokeExact(assistant, page, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_page_header_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1497.gtk_assistant_get_page_header_image$MH,"gtk_assistant_get_page_header_image");
    }
    /**
     * {@snippet :
     * GdkPixbuf* gtk_assistant_get_page_header_image(GtkAssistant* assistant, GtkWidget* page);
     * }
     */
    public static MemorySegment gtk_assistant_get_page_header_image(MemorySegment assistant, MemorySegment page) {
        var mh$ = gtk_assistant_get_page_header_image$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_page_side_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1497.gtk_assistant_set_page_side_image$MH,"gtk_assistant_set_page_side_image");
    }
    /**
     * {@snippet :
     * void gtk_assistant_set_page_side_image(GtkAssistant* assistant, GtkWidget* page, GdkPixbuf* pixbuf);
     * }
     */
    public static void gtk_assistant_set_page_side_image(MemorySegment assistant, MemorySegment page, MemorySegment pixbuf) {
        var mh$ = gtk_assistant_set_page_side_image$MH();
        try {
            mh$.invokeExact(assistant, page, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_page_side_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1498.gtk_assistant_get_page_side_image$MH,"gtk_assistant_get_page_side_image");
    }
    /**
     * {@snippet :
     * GdkPixbuf* gtk_assistant_get_page_side_image(GtkAssistant* assistant, GtkWidget* page);
     * }
     */
    public static MemorySegment gtk_assistant_get_page_side_image(MemorySegment assistant, MemorySegment page) {
        var mh$ = gtk_assistant_get_page_side_image$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_page_complete$MH() {
        return RuntimeHelper.requireNonNull(constants$1498.gtk_assistant_set_page_complete$MH,"gtk_assistant_set_page_complete");
    }
    /**
     * {@snippet :
     * void gtk_assistant_set_page_complete(GtkAssistant* assistant, GtkWidget* page, gboolean complete);
     * }
     */
    public static void gtk_assistant_set_page_complete(MemorySegment assistant, MemorySegment page, int complete) {
        var mh$ = gtk_assistant_set_page_complete$MH();
        try {
            mh$.invokeExact(assistant, page, complete);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_page_complete$MH() {
        return RuntimeHelper.requireNonNull(constants$1498.gtk_assistant_get_page_complete$MH,"gtk_assistant_get_page_complete");
    }
    /**
     * {@snippet :
     * gboolean gtk_assistant_get_page_complete(GtkAssistant* assistant, GtkWidget* page);
     * }
     */
    public static int gtk_assistant_get_page_complete(MemorySegment assistant, MemorySegment page) {
        var mh$ = gtk_assistant_get_page_complete$MH();
        try {
            return (int)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_add_action_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1498.gtk_assistant_add_action_widget$MH,"gtk_assistant_add_action_widget");
    }
    /**
     * {@snippet :
     * void gtk_assistant_add_action_widget(GtkAssistant* assistant, GtkWidget* child);
     * }
     */
    public static void gtk_assistant_add_action_widget(MemorySegment assistant, MemorySegment child) {
        var mh$ = gtk_assistant_add_action_widget$MH();
        try {
            mh$.invokeExact(assistant, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_remove_action_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1498.gtk_assistant_remove_action_widget$MH,"gtk_assistant_remove_action_widget");
    }
    /**
     * {@snippet :
     * void gtk_assistant_remove_action_widget(GtkAssistant* assistant, GtkWidget* child);
     * }
     */
    public static void gtk_assistant_remove_action_widget(MemorySegment assistant, MemorySegment child) {
        var mh$ = gtk_assistant_remove_action_widget$MH();
        try {
            mh$.invokeExact(assistant, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_update_buttons_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1498.gtk_assistant_update_buttons_state$MH,"gtk_assistant_update_buttons_state");
    }
    /**
     * {@snippet :
     * void gtk_assistant_update_buttons_state(GtkAssistant* assistant);
     * }
     */
    public static void gtk_assistant_update_buttons_state(MemorySegment assistant) {
        var mh$ = gtk_assistant_update_buttons_state$MH();
        try {
            mh$.invokeExact(assistant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_commit$MH() {
        return RuntimeHelper.requireNonNull(constants$1499.gtk_assistant_commit$MH,"gtk_assistant_commit");
    }
    /**
     * {@snippet :
     * void gtk_assistant_commit(GtkAssistant* assistant);
     * }
     */
    public static void gtk_assistant_commit(MemorySegment assistant) {
        var mh$ = gtk_assistant_commit$MH();
        try {
            mh$.invokeExact(assistant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_set_page_has_padding$MH() {
        return RuntimeHelper.requireNonNull(constants$1499.gtk_assistant_set_page_has_padding$MH,"gtk_assistant_set_page_has_padding");
    }
    /**
     * {@snippet :
     * void gtk_assistant_set_page_has_padding(GtkAssistant* assistant, GtkWidget* page, gboolean has_padding);
     * }
     */
    public static void gtk_assistant_set_page_has_padding(MemorySegment assistant, MemorySegment page, int has_padding) {
        var mh$ = gtk_assistant_set_page_has_padding$MH();
        try {
            mh$.invokeExact(assistant, page, has_padding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_assistant_get_page_has_padding$MH() {
        return RuntimeHelper.requireNonNull(constants$1499.gtk_assistant_get_page_has_padding$MH,"gtk_assistant_get_page_has_padding");
    }
    /**
     * {@snippet :
     * gboolean gtk_assistant_get_page_has_padding(GtkAssistant* assistant, GtkWidget* page);
     * }
     */
    public static int gtk_assistant_get_page_has_padding(MemorySegment assistant, MemorySegment page) {
        var mh$ = gtk_assistant_get_page_has_padding$MH();
        try {
            return (int)mh$.invokeExact(assistant, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_BUTTONBOX_SPREAD = 1;
     * }
     */
    public static int GTK_BUTTONBOX_SPREAD() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUTTONBOX_EDGE = 2;
     * }
     */
    public static int GTK_BUTTONBOX_EDGE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUTTONBOX_START = 3;
     * }
     */
    public static int GTK_BUTTONBOX_START() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUTTONBOX_END = 4;
     * }
     */
    public static int GTK_BUTTONBOX_END() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUTTONBOX_CENTER = 5;
     * }
     */
    public static int GTK_BUTTONBOX_CENTER() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUTTONBOX_EXPAND = 6;
     * }
     */
    public static int GTK_BUTTONBOX_EXPAND() {
        return (int)6L;
    }
    public static MethodHandle gtk_button_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1499.gtk_button_box_get_type$MH,"gtk_button_box_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_button_box_get_type();
     * }
     */
    public static long gtk_button_box_get_type() {
        var mh$ = gtk_button_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1499.gtk_button_box_new$MH,"gtk_button_box_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_button_box_new(GtkOrientation orientation);
     * }
     */
    public static MemorySegment gtk_button_box_new(int orientation) {
        var mh$ = gtk_button_box_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_get_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1499.gtk_button_box_get_layout$MH,"gtk_button_box_get_layout");
    }
    /**
     * {@snippet :
     * GtkButtonBoxStyle gtk_button_box_get_layout(GtkButtonBox* widget);
     * }
     */
    public static int gtk_button_box_get_layout(MemorySegment widget) {
        var mh$ = gtk_button_box_get_layout$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_set_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1500.gtk_button_box_set_layout$MH,"gtk_button_box_set_layout");
    }
    /**
     * {@snippet :
     * void gtk_button_box_set_layout(GtkButtonBox* widget, GtkButtonBoxStyle layout_style);
     * }
     */
    public static void gtk_button_box_set_layout(MemorySegment widget, int layout_style) {
        var mh$ = gtk_button_box_set_layout$MH();
        try {
            mh$.invokeExact(widget, layout_style);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_get_child_secondary$MH() {
        return RuntimeHelper.requireNonNull(constants$1500.gtk_button_box_get_child_secondary$MH,"gtk_button_box_get_child_secondary");
    }
    /**
     * {@snippet :
     * gboolean gtk_button_box_get_child_secondary(GtkButtonBox* widget, GtkWidget* child);
     * }
     */
    public static int gtk_button_box_get_child_secondary(MemorySegment widget, MemorySegment child) {
        var mh$ = gtk_button_box_get_child_secondary$MH();
        try {
            return (int)mh$.invokeExact(widget, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_set_child_secondary$MH() {
        return RuntimeHelper.requireNonNull(constants$1500.gtk_button_box_set_child_secondary$MH,"gtk_button_box_set_child_secondary");
    }
    /**
     * {@snippet :
     * void gtk_button_box_set_child_secondary(GtkButtonBox* widget, GtkWidget* child, gboolean is_secondary);
     * }
     */
    public static void gtk_button_box_set_child_secondary(MemorySegment widget, MemorySegment child, int is_secondary) {
        var mh$ = gtk_button_box_set_child_secondary$MH();
        try {
            mh$.invokeExact(widget, child, is_secondary);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_get_child_non_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1500.gtk_button_box_get_child_non_homogeneous$MH,"gtk_button_box_get_child_non_homogeneous");
    }
    /**
     * {@snippet :
     * gboolean gtk_button_box_get_child_non_homogeneous(GtkButtonBox* widget, GtkWidget* child);
     * }
     */
    public static int gtk_button_box_get_child_non_homogeneous(MemorySegment widget, MemorySegment child) {
        var mh$ = gtk_button_box_get_child_non_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(widget, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_box_set_child_non_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1500.gtk_button_box_set_child_non_homogeneous$MH,"gtk_button_box_set_child_non_homogeneous");
    }
    /**
     * {@snippet :
     * void gtk_button_box_set_child_non_homogeneous(GtkButtonBox* widget, GtkWidget* child, gboolean non_homogeneous);
     * }
     */
    public static void gtk_button_box_set_child_non_homogeneous(MemorySegment widget, MemorySegment child, int non_homogeneous) {
        var mh$ = gtk_button_box_set_child_non_homogeneous$MH();
        try {
            mh$.invokeExact(widget, child, non_homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_set_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1500.gtk_binding_set_new$MH,"gtk_binding_set_new");
    }
    /**
     * {@snippet :
     * GtkBindingSet* gtk_binding_set_new(const gchar* set_name);
     * }
     */
    public static MemorySegment gtk_binding_set_new(MemorySegment set_name) {
        var mh$ = gtk_binding_set_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(set_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_set_by_class$MH() {
        return RuntimeHelper.requireNonNull(constants$1501.gtk_binding_set_by_class$MH,"gtk_binding_set_by_class");
    }
    /**
     * {@snippet :
     * GtkBindingSet* gtk_binding_set_by_class(gpointer object_class);
     * }
     */
    public static MemorySegment gtk_binding_set_by_class(MemorySegment object_class) {
        var mh$ = gtk_binding_set_by_class$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_set_find$MH() {
        return RuntimeHelper.requireNonNull(constants$1501.gtk_binding_set_find$MH,"gtk_binding_set_find");
    }
    /**
     * {@snippet :
     * GtkBindingSet* gtk_binding_set_find(const gchar* set_name);
     * }
     */
    public static MemorySegment gtk_binding_set_find(MemorySegment set_name) {
        var mh$ = gtk_binding_set_find$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(set_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_bindings_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1501.gtk_bindings_activate$MH,"gtk_bindings_activate");
    }
    /**
     * {@snippet :
     * gboolean gtk_bindings_activate(GObject* object, guint keyval, GdkModifierType modifiers);
     * }
     */
    public static int gtk_bindings_activate(MemorySegment object, int keyval, int modifiers) {
        var mh$ = gtk_bindings_activate$MH();
        try {
            return (int)mh$.invokeExact(object, keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_bindings_activate_event$MH() {
        return RuntimeHelper.requireNonNull(constants$1501.gtk_bindings_activate_event$MH,"gtk_bindings_activate_event");
    }
    /**
     * {@snippet :
     * gboolean gtk_bindings_activate_event(GObject* object, GdkEventKey* event);
     * }
     */
    public static int gtk_bindings_activate_event(MemorySegment object, MemorySegment event) {
        var mh$ = gtk_bindings_activate_event$MH();
        try {
            return (int)mh$.invokeExact(object, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_set_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1501.gtk_binding_set_activate$MH,"gtk_binding_set_activate");
    }
    /**
     * {@snippet :
     * gboolean gtk_binding_set_activate(GtkBindingSet* binding_set, guint keyval, GdkModifierType modifiers, GObject* object);
     * }
     */
    public static int gtk_binding_set_activate(MemorySegment binding_set, int keyval, int modifiers, MemorySegment object) {
        var mh$ = gtk_binding_set_activate$MH();
        try {
            return (int)mh$.invokeExact(binding_set, keyval, modifiers, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_entry_skip$MH() {
        return RuntimeHelper.requireNonNull(constants$1501.gtk_binding_entry_skip$MH,"gtk_binding_entry_skip");
    }
    /**
     * {@snippet :
     * void gtk_binding_entry_skip(GtkBindingSet* binding_set, guint keyval, GdkModifierType modifiers);
     * }
     */
    public static void gtk_binding_entry_skip(MemorySegment binding_set, int keyval, int modifiers) {
        var mh$ = gtk_binding_entry_skip$MH();
        try {
            mh$.invokeExact(binding_set, keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_entry_add_signal$MH() {
        return RuntimeHelper.requireNonNull(constants$1502.gtk_binding_entry_add_signal$MH,"gtk_binding_entry_add_signal");
    }
    /**
     * {@snippet :
     * void gtk_binding_entry_add_signal(GtkBindingSet* binding_set, guint keyval, GdkModifierType modifiers, const gchar* signal_name, guint n_args,...);
     * }
     */
    public static void gtk_binding_entry_add_signal(MemorySegment binding_set, int keyval, int modifiers, MemorySegment signal_name, int n_args, Object... x5) {
        var mh$ = gtk_binding_entry_add_signal$MH();
        try {
            mh$.invokeExact(binding_set, keyval, modifiers, signal_name, n_args, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_entry_add_signall$MH() {
        return RuntimeHelper.requireNonNull(constants$1502.gtk_binding_entry_add_signall$MH,"gtk_binding_entry_add_signall");
    }
    /**
     * {@snippet :
     * void gtk_binding_entry_add_signall(GtkBindingSet* binding_set, guint keyval, GdkModifierType modifiers, const gchar* signal_name, GSList* binding_args);
     * }
     */
    public static void gtk_binding_entry_add_signall(MemorySegment binding_set, int keyval, int modifiers, MemorySegment signal_name, MemorySegment binding_args) {
        var mh$ = gtk_binding_entry_add_signall$MH();
        try {
            mh$.invokeExact(binding_set, keyval, modifiers, signal_name, binding_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_entry_add_signal_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1502.gtk_binding_entry_add_signal_from_string$MH,"gtk_binding_entry_add_signal_from_string");
    }
    /**
     * {@snippet :
     * GTokenType gtk_binding_entry_add_signal_from_string(GtkBindingSet* binding_set, const gchar* signal_desc);
     * }
     */
    public static int gtk_binding_entry_add_signal_from_string(MemorySegment binding_set, MemorySegment signal_desc) {
        var mh$ = gtk_binding_entry_add_signal_from_string$MH();
        try {
            return (int)mh$.invokeExact(binding_set, signal_desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_binding_entry_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1502.gtk_binding_entry_remove$MH,"gtk_binding_entry_remove");
    }
    /**
     * {@snippet :
     * void gtk_binding_entry_remove(GtkBindingSet* binding_set, guint keyval, GdkModifierType modifiers);
     * }
     */
    public static void gtk_binding_entry_remove(MemorySegment binding_set, int keyval, int modifiers) {
        var mh$ = gtk_binding_entry_remove$MH();
        try {
            mh$.invokeExact(binding_set, keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION = 0;
     * }
     */
    public static int GTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUILDER_ERROR_UNHANDLED_TAG = 1;
     * }
     */
    public static int GTK_BUILDER_ERROR_UNHANDLED_TAG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUILDER_ERROR_MISSING_ATTRIBUTE = 2;
     * }
     */
    public static int GTK_BUILDER_ERROR_MISSING_ATTRIBUTE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUILDER_ERROR_INVALID_ATTRIBUTE = 3;
     * }
     */
    public static int GTK_BUILDER_ERROR_INVALID_ATTRIBUTE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUILDER_ERROR_INVALID_TAG = 4;
     * }
     */
    public static int GTK_BUILDER_ERROR_INVALID_TAG() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE = 5;
     * }
     */
    public static int GTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUILDER_ERROR_INVALID_VALUE = 6;
     * }
     */
    public static int GTK_BUILDER_ERROR_INVALID_VALUE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUILDER_ERROR_VERSION_MISMATCH = 7;
     * }
     */
    public static int GTK_BUILDER_ERROR_VERSION_MISMATCH() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUILDER_ERROR_DUPLICATE_ID = 8;
     * }
     */
    public static int GTK_BUILDER_ERROR_DUPLICATE_ID() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUILDER_ERROR_OBJECT_TYPE_REFUSED = 9;
     * }
     */
    public static int GTK_BUILDER_ERROR_OBJECT_TYPE_REFUSED() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUILDER_ERROR_TEMPLATE_MISMATCH = 10;
     * }
     */
    public static int GTK_BUILDER_ERROR_TEMPLATE_MISMATCH() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUILDER_ERROR_INVALID_PROPERTY = 11;
     * }
     */
    public static int GTK_BUILDER_ERROR_INVALID_PROPERTY() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUILDER_ERROR_INVALID_SIGNAL = 12;
     * }
     */
    public static int GTK_BUILDER_ERROR_INVALID_SIGNAL() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum .GTK_BUILDER_ERROR_INVALID_ID = 13;
     * }
     */
    public static int GTK_BUILDER_ERROR_INVALID_ID() {
        return (int)13L;
    }
    public static MethodHandle gtk_builder_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1502.gtk_builder_error_quark$MH,"gtk_builder_error_quark");
    }
    /**
     * {@snippet :
     * GQuark gtk_builder_error_quark();
     * }
     */
    public static int gtk_builder_error_quark() {
        var mh$ = gtk_builder_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1502.gtk_builder_get_type$MH,"gtk_builder_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_builder_get_type();
     * }
     */
    public static long gtk_builder_get_type() {
        var mh$ = gtk_builder_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1503.gtk_builder_new$MH,"gtk_builder_new");
    }
    /**
     * {@snippet :
     * GtkBuilder* gtk_builder_new();
     * }
     */
    public static MemorySegment gtk_builder_new() {
        var mh$ = gtk_builder_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1503.gtk_builder_add_from_file$MH,"gtk_builder_add_from_file");
    }
    /**
     * {@snippet :
     * guint gtk_builder_add_from_file(GtkBuilder* builder, const gchar* filename, GError** error);
     * }
     */
    public static int gtk_builder_add_from_file(MemorySegment builder, MemorySegment filename, MemorySegment error) {
        var mh$ = gtk_builder_add_from_file$MH();
        try {
            return (int)mh$.invokeExact(builder, filename, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1503.gtk_builder_add_from_resource$MH,"gtk_builder_add_from_resource");
    }
    /**
     * {@snippet :
     * guint gtk_builder_add_from_resource(GtkBuilder* builder, const gchar* resource_path, GError** error);
     * }
     */
    public static int gtk_builder_add_from_resource(MemorySegment builder, MemorySegment resource_path, MemorySegment error) {
        var mh$ = gtk_builder_add_from_resource$MH();
        try {
            return (int)mh$.invokeExact(builder, resource_path, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1503.gtk_builder_add_from_string$MH,"gtk_builder_add_from_string");
    }
    /**
     * {@snippet :
     * guint gtk_builder_add_from_string(GtkBuilder* builder, const gchar* buffer, gsize length, GError** error);
     * }
     */
    public static int gtk_builder_add_from_string(MemorySegment builder, MemorySegment buffer, long length, MemorySegment error) {
        var mh$ = gtk_builder_add_from_string$MH();
        try {
            return (int)mh$.invokeExact(builder, buffer, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_objects_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1503.gtk_builder_add_objects_from_file$MH,"gtk_builder_add_objects_from_file");
    }
    /**
     * {@snippet :
     * guint gtk_builder_add_objects_from_file(GtkBuilder* builder, const gchar* filename, gchar** object_ids, GError** error);
     * }
     */
    public static int gtk_builder_add_objects_from_file(MemorySegment builder, MemorySegment filename, MemorySegment object_ids, MemorySegment error) {
        var mh$ = gtk_builder_add_objects_from_file$MH();
        try {
            return (int)mh$.invokeExact(builder, filename, object_ids, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_objects_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1503.gtk_builder_add_objects_from_resource$MH,"gtk_builder_add_objects_from_resource");
    }
    /**
     * {@snippet :
     * guint gtk_builder_add_objects_from_resource(GtkBuilder* builder, const gchar* resource_path, gchar** object_ids, GError** error);
     * }
     */
    public static int gtk_builder_add_objects_from_resource(MemorySegment builder, MemorySegment resource_path, MemorySegment object_ids, MemorySegment error) {
        var mh$ = gtk_builder_add_objects_from_resource$MH();
        try {
            return (int)mh$.invokeExact(builder, resource_path, object_ids, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_objects_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1504.gtk_builder_add_objects_from_string$MH,"gtk_builder_add_objects_from_string");
    }
    /**
     * {@snippet :
     * guint gtk_builder_add_objects_from_string(GtkBuilder* builder, const gchar* buffer, gsize length, gchar** object_ids, GError** error);
     * }
     */
    public static int gtk_builder_add_objects_from_string(MemorySegment builder, MemorySegment buffer, long length, MemorySegment object_ids, MemorySegment error) {
        var mh$ = gtk_builder_add_objects_from_string$MH();
        try {
            return (int)mh$.invokeExact(builder, buffer, length, object_ids, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_get_object$MH() {
        return RuntimeHelper.requireNonNull(constants$1504.gtk_builder_get_object$MH,"gtk_builder_get_object");
    }
    /**
     * {@snippet :
     * GObject* gtk_builder_get_object(GtkBuilder* builder, const gchar* name);
     * }
     */
    public static MemorySegment gtk_builder_get_object(MemorySegment builder, MemorySegment name) {
        var mh$ = gtk_builder_get_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(builder, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_get_objects$MH() {
        return RuntimeHelper.requireNonNull(constants$1504.gtk_builder_get_objects$MH,"gtk_builder_get_objects");
    }
    /**
     * {@snippet :
     * GSList* gtk_builder_get_objects(GtkBuilder* builder);
     * }
     */
    public static MemorySegment gtk_builder_get_objects(MemorySegment builder) {
        var mh$ = gtk_builder_get_objects$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_expose_object$MH() {
        return RuntimeHelper.requireNonNull(constants$1504.gtk_builder_expose_object$MH,"gtk_builder_expose_object");
    }
    /**
     * {@snippet :
     * void gtk_builder_expose_object(GtkBuilder* builder, const gchar* name, GObject* object);
     * }
     */
    public static void gtk_builder_expose_object(MemorySegment builder, MemorySegment name, MemorySegment object) {
        var mh$ = gtk_builder_expose_object$MH();
        try {
            mh$.invokeExact(builder, name, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_connect_signals$MH() {
        return RuntimeHelper.requireNonNull(constants$1504.gtk_builder_connect_signals$MH,"gtk_builder_connect_signals");
    }
    /**
     * {@snippet :
     * void gtk_builder_connect_signals(GtkBuilder* builder, gpointer user_data);
     * }
     */
    public static void gtk_builder_connect_signals(MemorySegment builder, MemorySegment user_data) {
        var mh$ = gtk_builder_connect_signals$MH();
        try {
            mh$.invokeExact(builder, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_connect_signals_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1504.gtk_builder_connect_signals_full$MH,"gtk_builder_connect_signals_full");
    }
    /**
     * {@snippet :
     * void gtk_builder_connect_signals_full(GtkBuilder* builder, GtkBuilderConnectFunc func, gpointer user_data);
     * }
     */
    public static void gtk_builder_connect_signals_full(MemorySegment builder, MemorySegment func, MemorySegment user_data) {
        var mh$ = gtk_builder_connect_signals_full$MH();
        try {
            mh$.invokeExact(builder, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_set_translation_domain$MH() {
        return RuntimeHelper.requireNonNull(constants$1505.gtk_builder_set_translation_domain$MH,"gtk_builder_set_translation_domain");
    }
    /**
     * {@snippet :
     * void gtk_builder_set_translation_domain(GtkBuilder* builder, const gchar* domain);
     * }
     */
    public static void gtk_builder_set_translation_domain(MemorySegment builder, MemorySegment domain) {
        var mh$ = gtk_builder_set_translation_domain$MH();
        try {
            mh$.invokeExact(builder, domain);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_get_translation_domain$MH() {
        return RuntimeHelper.requireNonNull(constants$1505.gtk_builder_get_translation_domain$MH,"gtk_builder_get_translation_domain");
    }
    /**
     * {@snippet :
     * const gchar* gtk_builder_get_translation_domain(GtkBuilder* builder);
     * }
     */
    public static MemorySegment gtk_builder_get_translation_domain(MemorySegment builder) {
        var mh$ = gtk_builder_get_translation_domain$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_get_type_from_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1505.gtk_builder_get_type_from_name$MH,"gtk_builder_get_type_from_name");
    }
    /**
     * {@snippet :
     * GType gtk_builder_get_type_from_name(GtkBuilder* builder, char* type_name);
     * }
     */
    public static long gtk_builder_get_type_from_name(MemorySegment builder, MemorySegment type_name) {
        var mh$ = gtk_builder_get_type_from_name$MH();
        try {
            return (long)mh$.invokeExact(builder, type_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_value_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1505.gtk_builder_value_from_string$MH,"gtk_builder_value_from_string");
    }
    /**
     * {@snippet :
     * gboolean gtk_builder_value_from_string(GtkBuilder* builder, GParamSpec* pspec, const gchar* string, GValue* value, GError** error);
     * }
     */
    public static int gtk_builder_value_from_string(MemorySegment builder, MemorySegment pspec, MemorySegment string, MemorySegment value, MemorySegment error) {
        var mh$ = gtk_builder_value_from_string$MH();
        try {
            return (int)mh$.invokeExact(builder, pspec, string, value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_value_from_string_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1505.gtk_builder_value_from_string_type$MH,"gtk_builder_value_from_string_type");
    }
    /**
     * {@snippet :
     * gboolean gtk_builder_value_from_string_type(GtkBuilder* builder, GType type, const gchar* string, GValue* value, GError** error);
     * }
     */
    public static int gtk_builder_value_from_string_type(MemorySegment builder, long type, MemorySegment string, MemorySegment value, MemorySegment error) {
        var mh$ = gtk_builder_value_from_string_type$MH();
        try {
            return (int)mh$.invokeExact(builder, type, string, value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1505.gtk_builder_new_from_file$MH,"gtk_builder_new_from_file");
    }
    /**
     * {@snippet :
     * GtkBuilder* gtk_builder_new_from_file(const gchar* filename);
     * }
     */
    public static MemorySegment gtk_builder_new_from_file(MemorySegment filename) {
        var mh$ = gtk_builder_new_from_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_new_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1506.gtk_builder_new_from_resource$MH,"gtk_builder_new_from_resource");
    }
    /**
     * {@snippet :
     * GtkBuilder* gtk_builder_new_from_resource(const gchar* resource_path);
     * }
     */
    public static MemorySegment gtk_builder_new_from_resource(MemorySegment resource_path) {
        var mh$ = gtk_builder_new_from_resource$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_new_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1506.gtk_builder_new_from_string$MH,"gtk_builder_new_from_string");
    }
    /**
     * {@snippet :
     * GtkBuilder* gtk_builder_new_from_string(const gchar* string, gssize length);
     * }
     */
    public static MemorySegment gtk_builder_new_from_string(MemorySegment string, long length) {
        var mh$ = gtk_builder_new_from_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_callback_symbol$MH() {
        return RuntimeHelper.requireNonNull(constants$1506.gtk_builder_add_callback_symbol$MH,"gtk_builder_add_callback_symbol");
    }
    /**
     * {@snippet :
     * void gtk_builder_add_callback_symbol(GtkBuilder* builder, const gchar* callback_name, GCallback callback_symbol);
     * }
     */
    public static void gtk_builder_add_callback_symbol(MemorySegment builder, MemorySegment callback_name, MemorySegment callback_symbol) {
        var mh$ = gtk_builder_add_callback_symbol$MH();
        try {
            mh$.invokeExact(builder, callback_name, callback_symbol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_add_callback_symbols$MH() {
        return RuntimeHelper.requireNonNull(constants$1506.gtk_builder_add_callback_symbols$MH,"gtk_builder_add_callback_symbols");
    }
    /**
     * {@snippet :
     * void gtk_builder_add_callback_symbols(GtkBuilder* builder, const gchar* first_callback_name, GCallback first_callback_symbol,...);
     * }
     */
    public static void gtk_builder_add_callback_symbols(MemorySegment builder, MemorySegment first_callback_name, MemorySegment first_callback_symbol, Object... x3) {
        var mh$ = gtk_builder_add_callback_symbols$MH();
        try {
            mh$.invokeExact(builder, first_callback_name, first_callback_symbol, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_lookup_callback_symbol$MH() {
        return RuntimeHelper.requireNonNull(constants$1506.gtk_builder_lookup_callback_symbol$MH,"gtk_builder_lookup_callback_symbol");
    }
    /**
     * {@snippet :
     * GCallback gtk_builder_lookup_callback_symbol(GtkBuilder* builder, const gchar* callback_name);
     * }
     */
    public static MemorySegment gtk_builder_lookup_callback_symbol(MemorySegment builder, MemorySegment callback_name) {
        var mh$ = gtk_builder_lookup_callback_symbol$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(builder, callback_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_set_application$MH() {
        return RuntimeHelper.requireNonNull(constants$1506.gtk_builder_set_application$MH,"gtk_builder_set_application");
    }
    /**
     * {@snippet :
     * void gtk_builder_set_application(GtkBuilder* builder, GtkApplication* application);
     * }
     */
    public static void gtk_builder_set_application(MemorySegment builder, MemorySegment application) {
        var mh$ = gtk_builder_set_application$MH();
        try {
            mh$.invokeExact(builder, application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_get_application$MH() {
        return RuntimeHelper.requireNonNull(constants$1507.gtk_builder_get_application$MH,"gtk_builder_get_application");
    }
    /**
     * {@snippet :
     * GtkApplication* gtk_builder_get_application(GtkBuilder* builder);
     * }
     */
    public static MemorySegment gtk_builder_get_application(MemorySegment builder) {
        var mh$ = gtk_builder_get_application$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_builder_extend_with_template$MH() {
        return RuntimeHelper.requireNonNull(constants$1507.gtk_builder_extend_with_template$MH,"gtk_builder_extend_with_template");
    }
    /**
     * {@snippet :
     * guint gtk_builder_extend_with_template(GtkBuilder* builder, GtkWidget* widget, GType template_type, const gchar* buffer, gsize length, GError** error);
     * }
     */
    public static int gtk_builder_extend_with_template(MemorySegment builder, MemorySegment widget, long template_type, MemorySegment buffer, long length, MemorySegment error) {
        var mh$ = gtk_builder_extend_with_template$MH();
        try {
            return (int)mh$.invokeExact(builder, widget, template_type, buffer, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1507.gtk_buildable_get_type$MH,"gtk_buildable_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_buildable_get_type();
     * }
     */
    public static long gtk_buildable_get_type() {
        var mh$ = gtk_buildable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1507.gtk_buildable_set_name$MH,"gtk_buildable_set_name");
    }
    /**
     * {@snippet :
     * void gtk_buildable_set_name(GtkBuildable* buildable, const gchar* name);
     * }
     */
    public static void gtk_buildable_set_name(MemorySegment buildable, MemorySegment name) {
        var mh$ = gtk_buildable_set_name$MH();
        try {
            mh$.invokeExact(buildable, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1507.gtk_buildable_get_name$MH,"gtk_buildable_get_name");
    }
    /**
     * {@snippet :
     * const gchar* gtk_buildable_get_name(GtkBuildable* buildable);
     * }
     */
    public static MemorySegment gtk_buildable_get_name(MemorySegment buildable) {
        var mh$ = gtk_buildable_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buildable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_add_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1507.gtk_buildable_add_child$MH,"gtk_buildable_add_child");
    }
    /**
     * {@snippet :
     * void gtk_buildable_add_child(GtkBuildable* buildable, GtkBuilder* builder, GObject* child, const gchar* type);
     * }
     */
    public static void gtk_buildable_add_child(MemorySegment buildable, MemorySegment builder, MemorySegment child, MemorySegment type) {
        var mh$ = gtk_buildable_add_child$MH();
        try {
            mh$.invokeExact(buildable, builder, child, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_set_buildable_property$MH() {
        return RuntimeHelper.requireNonNull(constants$1508.gtk_buildable_set_buildable_property$MH,"gtk_buildable_set_buildable_property");
    }
    /**
     * {@snippet :
     * void gtk_buildable_set_buildable_property(GtkBuildable* buildable, GtkBuilder* builder, const gchar* name, const GValue* value);
     * }
     */
    public static void gtk_buildable_set_buildable_property(MemorySegment buildable, MemorySegment builder, MemorySegment name, MemorySegment value) {
        var mh$ = gtk_buildable_set_buildable_property$MH();
        try {
            mh$.invokeExact(buildable, builder, name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_construct_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1508.gtk_buildable_construct_child$MH,"gtk_buildable_construct_child");
    }
    /**
     * {@snippet :
     * GObject* gtk_buildable_construct_child(GtkBuildable* buildable, GtkBuilder* builder, const gchar* name);
     * }
     */
    public static MemorySegment gtk_buildable_construct_child(MemorySegment buildable, MemorySegment builder, MemorySegment name) {
        var mh$ = gtk_buildable_construct_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buildable, builder, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_custom_tag_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1508.gtk_buildable_custom_tag_start$MH,"gtk_buildable_custom_tag_start");
    }
    /**
     * {@snippet :
     * gboolean gtk_buildable_custom_tag_start(GtkBuildable* buildable, GtkBuilder* builder, GObject* child, const gchar* tagname, GMarkupParser* parser, gpointer* data);
     * }
     */
    public static int gtk_buildable_custom_tag_start(MemorySegment buildable, MemorySegment builder, MemorySegment child, MemorySegment tagname, MemorySegment parser, MemorySegment data) {
        var mh$ = gtk_buildable_custom_tag_start$MH();
        try {
            return (int)mh$.invokeExact(buildable, builder, child, tagname, parser, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_custom_tag_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1508.gtk_buildable_custom_tag_end$MH,"gtk_buildable_custom_tag_end");
    }
    /**
     * {@snippet :
     * void gtk_buildable_custom_tag_end(GtkBuildable* buildable, GtkBuilder* builder, GObject* child, const gchar* tagname, gpointer* data);
     * }
     */
    public static void gtk_buildable_custom_tag_end(MemorySegment buildable, MemorySegment builder, MemorySegment child, MemorySegment tagname, MemorySegment data) {
        var mh$ = gtk_buildable_custom_tag_end$MH();
        try {
            mh$.invokeExact(buildable, builder, child, tagname, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_custom_finished$MH() {
        return RuntimeHelper.requireNonNull(constants$1508.gtk_buildable_custom_finished$MH,"gtk_buildable_custom_finished");
    }
    /**
     * {@snippet :
     * void gtk_buildable_custom_finished(GtkBuildable* buildable, GtkBuilder* builder, GObject* child, const gchar* tagname, gpointer data);
     * }
     */
    public static void gtk_buildable_custom_finished(MemorySegment buildable, MemorySegment builder, MemorySegment child, MemorySegment tagname, MemorySegment data) {
        var mh$ = gtk_buildable_custom_finished$MH();
        try {
            mh$.invokeExact(buildable, builder, child, tagname, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_parser_finished$MH() {
        return RuntimeHelper.requireNonNull(constants$1508.gtk_buildable_parser_finished$MH,"gtk_buildable_parser_finished");
    }
    /**
     * {@snippet :
     * void gtk_buildable_parser_finished(GtkBuildable* buildable, GtkBuilder* builder);
     * }
     */
    public static void gtk_buildable_parser_finished(MemorySegment buildable, MemorySegment builder) {
        var mh$ = gtk_buildable_parser_finished$MH();
        try {
            mh$.invokeExact(buildable, builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_buildable_get_internal_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1509.gtk_buildable_get_internal_child$MH,"gtk_buildable_get_internal_child");
    }
    /**
     * {@snippet :
     * GObject* gtk_buildable_get_internal_child(GtkBuildable* buildable, GtkBuilder* builder, const gchar* childname);
     * }
     */
    public static MemorySegment gtk_buildable_get_internal_child(MemorySegment buildable, MemorySegment builder, MemorySegment childname) {
        var mh$ = gtk_buildable_get_internal_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buildable, builder, childname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1509.gtk_button_get_type$MH,"gtk_button_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_button_get_type();
     * }
     */
    public static long gtk_button_get_type() {
        var mh$ = gtk_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1509.gtk_button_new$MH,"gtk_button_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_button_new();
     * }
     */
    public static MemorySegment gtk_button_new() {
        var mh$ = gtk_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_new_with_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1509.gtk_button_new_with_label$MH,"gtk_button_new_with_label");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_button_new_with_label(const gchar* label);
     * }
     */
    public static MemorySegment gtk_button_new_with_label(MemorySegment label) {
        var mh$ = gtk_button_new_with_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_new_from_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1509.gtk_button_new_from_icon_name$MH,"gtk_button_new_from_icon_name");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_button_new_from_icon_name(const gchar* icon_name, GtkIconSize size);
     * }
     */
    public static MemorySegment gtk_button_new_from_icon_name(MemorySegment icon_name, int size) {
        var mh$ = gtk_button_new_from_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_name, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_new_from_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$1509.gtk_button_new_from_stock$MH,"gtk_button_new_from_stock");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_button_new_from_stock(const gchar* stock_id);
     * }
     */
    public static MemorySegment gtk_button_new_from_stock(MemorySegment stock_id) {
        var mh$ = gtk_button_new_from_stock$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$1510.gtk_button_new_with_mnemonic$MH,"gtk_button_new_with_mnemonic");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_button_new_with_mnemonic(const gchar* label);
     * }
     */
    public static MemorySegment gtk_button_new_with_mnemonic(MemorySegment label) {
        var mh$ = gtk_button_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_clicked$MH() {
        return RuntimeHelper.requireNonNull(constants$1510.gtk_button_clicked$MH,"gtk_button_clicked");
    }
    /**
     * {@snippet :
     * void gtk_button_clicked(GtkButton* button);
     * }
     */
    public static void gtk_button_clicked(MemorySegment button) {
        var mh$ = gtk_button_clicked$MH();
        try {
            mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_pressed$MH() {
        return RuntimeHelper.requireNonNull(constants$1510.gtk_button_pressed$MH,"gtk_button_pressed");
    }
    /**
     * {@snippet :
     * void gtk_button_pressed(GtkButton* button);
     * }
     */
    public static void gtk_button_pressed(MemorySegment button) {
        var mh$ = gtk_button_pressed$MH();
        try {
            mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_released$MH() {
        return RuntimeHelper.requireNonNull(constants$1510.gtk_button_released$MH,"gtk_button_released");
    }
    /**
     * {@snippet :
     * void gtk_button_released(GtkButton* button);
     * }
     */
    public static void gtk_button_released(MemorySegment button) {
        var mh$ = gtk_button_released$MH();
        try {
            mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_enter$MH() {
        return RuntimeHelper.requireNonNull(constants$1510.gtk_button_enter$MH,"gtk_button_enter");
    }
    /**
     * {@snippet :
     * void gtk_button_enter(GtkButton* button);
     * }
     */
    public static void gtk_button_enter(MemorySegment button) {
        var mh$ = gtk_button_enter$MH();
        try {
            mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_leave$MH() {
        return RuntimeHelper.requireNonNull(constants$1510.gtk_button_leave$MH,"gtk_button_leave");
    }
    /**
     * {@snippet :
     * void gtk_button_leave(GtkButton* button);
     * }
     */
    public static void gtk_button_leave(MemorySegment button) {
        var mh$ = gtk_button_leave$MH();
        try {
            mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_relief$MH() {
        return RuntimeHelper.requireNonNull(constants$1511.gtk_button_set_relief$MH,"gtk_button_set_relief");
    }
    /**
     * {@snippet :
     * void gtk_button_set_relief(GtkButton* button, GtkReliefStyle relief);
     * }
     */
    public static void gtk_button_set_relief(MemorySegment button, int relief) {
        var mh$ = gtk_button_set_relief$MH();
        try {
            mh$.invokeExact(button, relief);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_relief$MH() {
        return RuntimeHelper.requireNonNull(constants$1511.gtk_button_get_relief$MH,"gtk_button_get_relief");
    }
    /**
     * {@snippet :
     * GtkReliefStyle gtk_button_get_relief(GtkButton* button);
     * }
     */
    public static int gtk_button_get_relief(MemorySegment button) {
        var mh$ = gtk_button_get_relief$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1511.gtk_button_set_label$MH,"gtk_button_set_label");
    }
    /**
     * {@snippet :
     * void gtk_button_set_label(GtkButton* button, const gchar* label);
     * }
     */
    public static void gtk_button_set_label(MemorySegment button, MemorySegment label) {
        var mh$ = gtk_button_set_label$MH();
        try {
            mh$.invokeExact(button, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1511.gtk_button_get_label$MH,"gtk_button_get_label");
    }
    /**
     * {@snippet :
     * const gchar* gtk_button_get_label(GtkButton* button);
     * }
     */
    public static MemorySegment gtk_button_get_label(MemorySegment button) {
        var mh$ = gtk_button_get_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1511.gtk_button_set_use_underline$MH,"gtk_button_set_use_underline");
    }
    /**
     * {@snippet :
     * void gtk_button_set_use_underline(GtkButton* button, gboolean use_underline);
     * }
     */
    public static void gtk_button_set_use_underline(MemorySegment button, int use_underline) {
        var mh$ = gtk_button_set_use_underline$MH();
        try {
            mh$.invokeExact(button, use_underline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1511.gtk_button_get_use_underline$MH,"gtk_button_get_use_underline");
    }
    /**
     * {@snippet :
     * gboolean gtk_button_get_use_underline(GtkButton* button);
     * }
     */
    public static int gtk_button_get_use_underline(MemorySegment button) {
        var mh$ = gtk_button_get_use_underline$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_use_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$1512.gtk_button_set_use_stock$MH,"gtk_button_set_use_stock");
    }
    /**
     * {@snippet :
     * void gtk_button_set_use_stock(GtkButton* button, gboolean use_stock);
     * }
     */
    public static void gtk_button_set_use_stock(MemorySegment button, int use_stock) {
        var mh$ = gtk_button_set_use_stock$MH();
        try {
            mh$.invokeExact(button, use_stock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_use_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$1512.gtk_button_get_use_stock$MH,"gtk_button_get_use_stock");
    }
    /**
     * {@snippet :
     * gboolean gtk_button_get_use_stock(GtkButton* button);
     * }
     */
    public static int gtk_button_get_use_stock(MemorySegment button) {
        var mh$ = gtk_button_get_use_stock$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1512.gtk_button_set_focus_on_click$MH,"gtk_button_set_focus_on_click");
    }
    /**
     * {@snippet :
     * void gtk_button_set_focus_on_click(GtkButton* button, gboolean focus_on_click);
     * }
     */
    public static void gtk_button_set_focus_on_click(MemorySegment button, int focus_on_click) {
        var mh$ = gtk_button_set_focus_on_click$MH();
        try {
            mh$.invokeExact(button, focus_on_click);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1512.gtk_button_get_focus_on_click$MH,"gtk_button_get_focus_on_click");
    }
    /**
     * {@snippet :
     * gboolean gtk_button_get_focus_on_click(GtkButton* button);
     * }
     */
    public static int gtk_button_get_focus_on_click(MemorySegment button) {
        var mh$ = gtk_button_get_focus_on_click$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$1512.gtk_button_set_alignment$MH,"gtk_button_set_alignment");
    }
    /**
     * {@snippet :
     * void gtk_button_set_alignment(GtkButton* button, gfloat xalign, gfloat yalign);
     * }
     */
    public static void gtk_button_set_alignment(MemorySegment button, float xalign, float yalign) {
        var mh$ = gtk_button_set_alignment$MH();
        try {
            mh$.invokeExact(button, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$1512.gtk_button_get_alignment$MH,"gtk_button_get_alignment");
    }
    /**
     * {@snippet :
     * void gtk_button_get_alignment(GtkButton* button, gfloat* xalign, gfloat* yalign);
     * }
     */
    public static void gtk_button_get_alignment(MemorySegment button, MemorySegment xalign, MemorySegment yalign) {
        var mh$ = gtk_button_get_alignment$MH();
        try {
            mh$.invokeExact(button, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1513.gtk_button_set_image$MH,"gtk_button_set_image");
    }
    /**
     * {@snippet :
     * void gtk_button_set_image(GtkButton* button, GtkWidget* image);
     * }
     */
    public static void gtk_button_set_image(MemorySegment button, MemorySegment image) {
        var mh$ = gtk_button_set_image$MH();
        try {
            mh$.invokeExact(button, image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1513.gtk_button_get_image$MH,"gtk_button_get_image");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_button_get_image(GtkButton* button);
     * }
     */
    public static MemorySegment gtk_button_get_image(MemorySegment button) {
        var mh$ = gtk_button_get_image$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_image_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1513.gtk_button_set_image_position$MH,"gtk_button_set_image_position");
    }
    /**
     * {@snippet :
     * void gtk_button_set_image_position(GtkButton* button, GtkPositionType position);
     * }
     */
    public static void gtk_button_set_image_position(MemorySegment button, int position) {
        var mh$ = gtk_button_set_image_position$MH();
        try {
            mh$.invokeExact(button, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_image_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1513.gtk_button_get_image_position$MH,"gtk_button_get_image_position");
    }
    /**
     * {@snippet :
     * GtkPositionType gtk_button_get_image_position(GtkButton* button);
     * }
     */
    public static int gtk_button_get_image_position(MemorySegment button) {
        var mh$ = gtk_button_get_image_position$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_set_always_show_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1513.gtk_button_set_always_show_image$MH,"gtk_button_set_always_show_image");
    }
    /**
     * {@snippet :
     * void gtk_button_set_always_show_image(GtkButton* button, gboolean always_show);
     * }
     */
    public static void gtk_button_set_always_show_image(MemorySegment button, int always_show) {
        var mh$ = gtk_button_set_always_show_image$MH();
        try {
            mh$.invokeExact(button, always_show);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_always_show_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1513.gtk_button_get_always_show_image$MH,"gtk_button_get_always_show_image");
    }
    /**
     * {@snippet :
     * gboolean gtk_button_get_always_show_image(GtkButton* button);
     * }
     */
    public static int gtk_button_get_always_show_image(MemorySegment button) {
        var mh$ = gtk_button_get_always_show_image$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_button_get_event_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1514.gtk_button_get_event_window$MH,"gtk_button_get_event_window");
    }
    /**
     * {@snippet :
     * GdkWindow* gtk_button_get_event_window(GtkButton* button);
     * }
     */
    public static MemorySegment gtk_button_get_event_window(MemorySegment button) {
        var mh$ = gtk_button_get_event_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_CALENDAR_SHOW_HEADING = 1;
     * }
     */
    public static int GTK_CALENDAR_SHOW_HEADING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_CALENDAR_SHOW_DAY_NAMES = 2;
     * }
     */
    public static int GTK_CALENDAR_SHOW_DAY_NAMES() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_CALENDAR_NO_MONTH_CHANGE = 4;
     * }
     */
    public static int GTK_CALENDAR_NO_MONTH_CHANGE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_CALENDAR_SHOW_WEEK_NUMBERS = 8;
     * }
     */
    public static int GTK_CALENDAR_SHOW_WEEK_NUMBERS() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_CALENDAR_SHOW_DETAILS = 32;
     * }
     */
    public static int GTK_CALENDAR_SHOW_DETAILS() {
        return (int)32L;
    }
    public static MethodHandle gtk_calendar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1514.gtk_calendar_get_type$MH,"gtk_calendar_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_calendar_get_type();
     * }
     */
    public static long gtk_calendar_get_type() {
        var mh$ = gtk_calendar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1514.gtk_calendar_new$MH,"gtk_calendar_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_calendar_new();
     * }
     */
    public static MemorySegment gtk_calendar_new() {
        var mh$ = gtk_calendar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_select_month$MH() {
        return RuntimeHelper.requireNonNull(constants$1514.gtk_calendar_select_month$MH,"gtk_calendar_select_month");
    }
    /**
     * {@snippet :
     * void gtk_calendar_select_month(GtkCalendar* calendar, guint month, guint year);
     * }
     */
    public static void gtk_calendar_select_month(MemorySegment calendar, int month, int year) {
        var mh$ = gtk_calendar_select_month$MH();
        try {
            mh$.invokeExact(calendar, month, year);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_select_day$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.gtk_calendar_select_day$MH,"gtk_calendar_select_day");
    }
    /**
     * {@snippet :
     * void gtk_calendar_select_day(GtkCalendar* calendar, guint day);
     * }
     */
    public static void gtk_calendar_select_day(MemorySegment calendar, int day) {
        var mh$ = gtk_calendar_select_day$MH();
        try {
            mh$.invokeExact(calendar, day);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_mark_day$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.gtk_calendar_mark_day$MH,"gtk_calendar_mark_day");
    }
    /**
     * {@snippet :
     * void gtk_calendar_mark_day(GtkCalendar* calendar, guint day);
     * }
     */
    public static void gtk_calendar_mark_day(MemorySegment calendar, int day) {
        var mh$ = gtk_calendar_mark_day$MH();
        try {
            mh$.invokeExact(calendar, day);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_unmark_day$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.gtk_calendar_unmark_day$MH,"gtk_calendar_unmark_day");
    }
    /**
     * {@snippet :
     * void gtk_calendar_unmark_day(GtkCalendar* calendar, guint day);
     * }
     */
    public static void gtk_calendar_unmark_day(MemorySegment calendar, int day) {
        var mh$ = gtk_calendar_unmark_day$MH();
        try {
            mh$.invokeExact(calendar, day);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_clear_marks$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.gtk_calendar_clear_marks$MH,"gtk_calendar_clear_marks");
    }
    /**
     * {@snippet :
     * void gtk_calendar_clear_marks(GtkCalendar* calendar);
     * }
     */
    public static void gtk_calendar_clear_marks(MemorySegment calendar) {
        var mh$ = gtk_calendar_clear_marks$MH();
        try {
            mh$.invokeExact(calendar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_set_display_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.gtk_calendar_set_display_options$MH,"gtk_calendar_set_display_options");
    }
    /**
     * {@snippet :
     * void gtk_calendar_set_display_options(GtkCalendar* calendar, GtkCalendarDisplayOptions flags);
     * }
     */
    public static void gtk_calendar_set_display_options(MemorySegment calendar, int flags) {
        var mh$ = gtk_calendar_set_display_options$MH();
        try {
            mh$.invokeExact(calendar, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_get_display_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.gtk_calendar_get_display_options$MH,"gtk_calendar_get_display_options");
    }
    /**
     * {@snippet :
     * GtkCalendarDisplayOptions gtk_calendar_get_display_options(GtkCalendar* calendar);
     * }
     */
    public static int gtk_calendar_get_display_options(MemorySegment calendar) {
        var mh$ = gtk_calendar_get_display_options$MH();
        try {
            return (int)mh$.invokeExact(calendar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_get_date$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.gtk_calendar_get_date$MH,"gtk_calendar_get_date");
    }
    /**
     * {@snippet :
     * void gtk_calendar_get_date(GtkCalendar* calendar, guint* year, guint* month, guint* day);
     * }
     */
    public static void gtk_calendar_get_date(MemorySegment calendar, MemorySegment year, MemorySegment month, MemorySegment day) {
        var mh$ = gtk_calendar_get_date$MH();
        try {
            mh$.invokeExact(calendar, year, month, day);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_set_detail_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.gtk_calendar_set_detail_func$MH,"gtk_calendar_set_detail_func");
    }
    /**
     * {@snippet :
     * void gtk_calendar_set_detail_func(GtkCalendar* calendar, GtkCalendarDetailFunc func, gpointer data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_calendar_set_detail_func(MemorySegment calendar, MemorySegment func, MemorySegment data, MemorySegment destroy) {
        var mh$ = gtk_calendar_set_detail_func$MH();
        try {
            mh$.invokeExact(calendar, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_set_detail_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.gtk_calendar_set_detail_width_chars$MH,"gtk_calendar_set_detail_width_chars");
    }
    /**
     * {@snippet :
     * void gtk_calendar_set_detail_width_chars(GtkCalendar* calendar, gint chars);
     * }
     */
    public static void gtk_calendar_set_detail_width_chars(MemorySegment calendar, int chars) {
        var mh$ = gtk_calendar_set_detail_width_chars$MH();
        try {
            mh$.invokeExact(calendar, chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_set_detail_height_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.gtk_calendar_set_detail_height_rows$MH,"gtk_calendar_set_detail_height_rows");
    }
    /**
     * {@snippet :
     * void gtk_calendar_set_detail_height_rows(GtkCalendar* calendar, gint rows);
     * }
     */
    public static void gtk_calendar_set_detail_height_rows(MemorySegment calendar, int rows) {
        var mh$ = gtk_calendar_set_detail_height_rows$MH();
        try {
            mh$.invokeExact(calendar, rows);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_get_detail_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.gtk_calendar_get_detail_width_chars$MH,"gtk_calendar_get_detail_width_chars");
    }
    /**
     * {@snippet :
     * gint gtk_calendar_get_detail_width_chars(GtkCalendar* calendar);
     * }
     */
    public static int gtk_calendar_get_detail_width_chars(MemorySegment calendar) {
        var mh$ = gtk_calendar_get_detail_width_chars$MH();
        try {
            return (int)mh$.invokeExact(calendar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_get_detail_height_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.gtk_calendar_get_detail_height_rows$MH,"gtk_calendar_get_detail_height_rows");
    }
    /**
     * {@snippet :
     * gint gtk_calendar_get_detail_height_rows(GtkCalendar* calendar);
     * }
     */
    public static int gtk_calendar_get_detail_height_rows(MemorySegment calendar) {
        var mh$ = gtk_calendar_get_detail_height_rows$MH();
        try {
            return (int)mh$.invokeExact(calendar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_calendar_get_day_is_marked$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.gtk_calendar_get_day_is_marked$MH,"gtk_calendar_get_day_is_marked");
    }
    /**
     * {@snippet :
     * gboolean gtk_calendar_get_day_is_marked(GtkCalendar* calendar, guint day);
     * }
     */
    public static int gtk_calendar_get_day_is_marked(MemorySegment calendar, int day) {
        var mh$ = gtk_calendar_get_day_is_marked$MH();
        try {
            return (int)mh$.invokeExact(calendar, day);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.gtk_cell_area_box_get_type$MH,"gtk_cell_area_box_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_cell_area_box_get_type();
     * }
     */
    public static long gtk_cell_area_box_get_type() {
        var mh$ = gtk_cell_area_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.gtk_cell_area_box_new$MH,"gtk_cell_area_box_new");
    }
    /**
     * {@snippet :
     * GtkCellArea* gtk_cell_area_box_new();
     * }
     */
    public static MemorySegment gtk_cell_area_box_new() {
        var mh$ = gtk_cell_area_box_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_box_pack_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.gtk_cell_area_box_pack_start$MH,"gtk_cell_area_box_pack_start");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_box_pack_start(GtkCellAreaBox* box, GtkCellRenderer* renderer, gboolean expand, gboolean align, gboolean fixed);
     * }
     */
    public static void gtk_cell_area_box_pack_start(MemorySegment box, MemorySegment renderer, int expand, int align, int fixed) {
        var mh$ = gtk_cell_area_box_pack_start$MH();
        try {
            mh$.invokeExact(box, renderer, expand, align, fixed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_box_pack_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.gtk_cell_area_box_pack_end$MH,"gtk_cell_area_box_pack_end");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_box_pack_end(GtkCellAreaBox* box, GtkCellRenderer* renderer, gboolean expand, gboolean align, gboolean fixed);
     * }
     */
    public static void gtk_cell_area_box_pack_end(MemorySegment box, MemorySegment renderer, int expand, int align, int fixed) {
        var mh$ = gtk_cell_area_box_pack_end$MH();
        try {
            mh$.invokeExact(box, renderer, expand, align, fixed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_box_get_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.gtk_cell_area_box_get_spacing$MH,"gtk_cell_area_box_get_spacing");
    }
    /**
     * {@snippet :
     * gint gtk_cell_area_box_get_spacing(GtkCellAreaBox* box);
     * }
     */
    public static int gtk_cell_area_box_get_spacing(MemorySegment box) {
        var mh$ = gtk_cell_area_box_get_spacing$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_box_set_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.gtk_cell_area_box_set_spacing$MH,"gtk_cell_area_box_set_spacing");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_box_set_spacing(GtkCellAreaBox* box, gint spacing);
     * }
     */
    public static void gtk_cell_area_box_set_spacing(MemorySegment box, int spacing) {
        var mh$ = gtk_cell_area_box_set_spacing$MH();
        try {
            mh$.invokeExact(box, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_cell_area_box_group_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1518._gtk_cell_area_box_group_visible$MH,"_gtk_cell_area_box_group_visible");
    }
    /**
     * {@snippet :
     * gboolean _gtk_cell_area_box_group_visible(GtkCellAreaBox* box, gint group_idx);
     * }
     */
    public static int _gtk_cell_area_box_group_visible(MemorySegment box, int group_idx) {
        var mh$ = _gtk_cell_area_box_group_visible$MH();
        try {
            return (int)mh$.invokeExact(box, group_idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.gtk_cell_area_context_get_type$MH,"gtk_cell_area_context_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_cell_area_context_get_type();
     * }
     */
    public static long gtk_cell_area_context_get_type() {
        var mh$ = gtk_cell_area_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.gtk_cell_area_context_get_area$MH,"gtk_cell_area_context_get_area");
    }
    /**
     * {@snippet :
     * GtkCellArea* gtk_cell_area_context_get_area(GtkCellAreaContext* context);
     * }
     */
    public static MemorySegment gtk_cell_area_context_get_area(MemorySegment context) {
        var mh$ = gtk_cell_area_context_get_area$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.gtk_cell_area_context_allocate$MH,"gtk_cell_area_context_allocate");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_context_allocate(GtkCellAreaContext* context, gint width, gint height);
     * }
     */
    public static void gtk_cell_area_context_allocate(MemorySegment context, int width, int height) {
        var mh$ = gtk_cell_area_context_allocate$MH();
        try {
            mh$.invokeExact(context, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.gtk_cell_area_context_reset$MH,"gtk_cell_area_context_reset");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_context_reset(GtkCellAreaContext* context);
     * }
     */
    public static void gtk_cell_area_context_reset(MemorySegment context) {
        var mh$ = gtk_cell_area_context_reset$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_preferred_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.gtk_cell_area_context_get_preferred_width$MH,"gtk_cell_area_context_get_preferred_width");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_context_get_preferred_width(GtkCellAreaContext* context, gint* minimum_width, gint* natural_width);
     * }
     */
    public static void gtk_cell_area_context_get_preferred_width(MemorySegment context, MemorySegment minimum_width, MemorySegment natural_width) {
        var mh$ = gtk_cell_area_context_get_preferred_width$MH();
        try {
            mh$.invokeExact(context, minimum_width, natural_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_preferred_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.gtk_cell_area_context_get_preferred_height$MH,"gtk_cell_area_context_get_preferred_height");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_context_get_preferred_height(GtkCellAreaContext* context, gint* minimum_height, gint* natural_height);
     * }
     */
    public static void gtk_cell_area_context_get_preferred_height(MemorySegment context, MemorySegment minimum_height, MemorySegment natural_height) {
        var mh$ = gtk_cell_area_context_get_preferred_height$MH();
        try {
            mh$.invokeExact(context, minimum_height, natural_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_preferred_height_for_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.gtk_cell_area_context_get_preferred_height_for_width$MH,"gtk_cell_area_context_get_preferred_height_for_width");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_context_get_preferred_height_for_width(GtkCellAreaContext* context, gint width, gint* minimum_height, gint* natural_height);
     * }
     */
    public static void gtk_cell_area_context_get_preferred_height_for_width(MemorySegment context, int width, MemorySegment minimum_height, MemorySegment natural_height) {
        var mh$ = gtk_cell_area_context_get_preferred_height_for_width$MH();
        try {
            mh$.invokeExact(context, width, minimum_height, natural_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_preferred_width_for_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.gtk_cell_area_context_get_preferred_width_for_height$MH,"gtk_cell_area_context_get_preferred_width_for_height");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_context_get_preferred_width_for_height(GtkCellAreaContext* context, gint height, gint* minimum_width, gint* natural_width);
     * }
     */
    public static void gtk_cell_area_context_get_preferred_width_for_height(MemorySegment context, int height, MemorySegment minimum_width, MemorySegment natural_width) {
        var mh$ = gtk_cell_area_context_get_preferred_width_for_height$MH();
        try {
            mh$.invokeExact(context, height, minimum_width, natural_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_get_allocation$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.gtk_cell_area_context_get_allocation$MH,"gtk_cell_area_context_get_allocation");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_context_get_allocation(GtkCellAreaContext* context, gint* width, gint* height);
     * }
     */
    public static void gtk_cell_area_context_get_allocation(MemorySegment context, MemorySegment width, MemorySegment height) {
        var mh$ = gtk_cell_area_context_get_allocation$MH();
        try {
            mh$.invokeExact(context, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_push_preferred_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.gtk_cell_area_context_push_preferred_width$MH,"gtk_cell_area_context_push_preferred_width");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_context_push_preferred_width(GtkCellAreaContext* context, gint minimum_width, gint natural_width);
     * }
     */
    public static void gtk_cell_area_context_push_preferred_width(MemorySegment context, int minimum_width, int natural_width) {
        var mh$ = gtk_cell_area_context_push_preferred_width$MH();
        try {
            mh$.invokeExact(context, minimum_width, natural_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_context_push_preferred_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.gtk_cell_area_context_push_preferred_height$MH,"gtk_cell_area_context_push_preferred_height");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_context_push_preferred_height(GtkCellAreaContext* context, gint minimum_height, gint natural_height);
     * }
     */
    public static void gtk_cell_area_context_push_preferred_height(MemorySegment context, int minimum_height, int natural_height) {
        var mh$ = gtk_cell_area_context_push_preferred_height$MH();
        try {
            mh$.invokeExact(context, minimum_height, natural_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.gtk_cell_layout_get_type$MH,"gtk_cell_layout_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_cell_layout_get_type();
     * }
     */
    public static long gtk_cell_layout_get_type() {
        var mh$ = gtk_cell_layout_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_pack_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.gtk_cell_layout_pack_start$MH,"gtk_cell_layout_pack_start");
    }
    /**
     * {@snippet :
     * void gtk_cell_layout_pack_start(GtkCellLayout* cell_layout, GtkCellRenderer* cell, gboolean expand);
     * }
     */
    public static void gtk_cell_layout_pack_start(MemorySegment cell_layout, MemorySegment cell, int expand) {
        var mh$ = gtk_cell_layout_pack_start$MH();
        try {
            mh$.invokeExact(cell_layout, cell, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_pack_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.gtk_cell_layout_pack_end$MH,"gtk_cell_layout_pack_end");
    }
    /**
     * {@snippet :
     * void gtk_cell_layout_pack_end(GtkCellLayout* cell_layout, GtkCellRenderer* cell, gboolean expand);
     * }
     */
    public static void gtk_cell_layout_pack_end(MemorySegment cell_layout, MemorySegment cell, int expand) {
        var mh$ = gtk_cell_layout_pack_end$MH();
        try {
            mh$.invokeExact(cell_layout, cell, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_get_cells$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.gtk_cell_layout_get_cells$MH,"gtk_cell_layout_get_cells");
    }
    /**
     * {@snippet :
     * GList* gtk_cell_layout_get_cells(GtkCellLayout* cell_layout);
     * }
     */
    public static MemorySegment gtk_cell_layout_get_cells(MemorySegment cell_layout) {
        var mh$ = gtk_cell_layout_get_cells$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cell_layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.gtk_cell_layout_clear$MH,"gtk_cell_layout_clear");
    }
    /**
     * {@snippet :
     * void gtk_cell_layout_clear(GtkCellLayout* cell_layout);
     * }
     */
    public static void gtk_cell_layout_clear(MemorySegment cell_layout) {
        var mh$ = gtk_cell_layout_clear$MH();
        try {
            mh$.invokeExact(cell_layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_set_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.gtk_cell_layout_set_attributes$MH,"gtk_cell_layout_set_attributes");
    }
    /**
     * {@snippet :
     * void gtk_cell_layout_set_attributes(GtkCellLayout* cell_layout, GtkCellRenderer* cell,...);
     * }
     */
    public static void gtk_cell_layout_set_attributes(MemorySegment cell_layout, MemorySegment cell, Object... x2) {
        var mh$ = gtk_cell_layout_set_attributes$MH();
        try {
            mh$.invokeExact(cell_layout, cell, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_add_attribute$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.gtk_cell_layout_add_attribute$MH,"gtk_cell_layout_add_attribute");
    }
    /**
     * {@snippet :
     * void gtk_cell_layout_add_attribute(GtkCellLayout* cell_layout, GtkCellRenderer* cell, const gchar* attribute, gint column);
     * }
     */
    public static void gtk_cell_layout_add_attribute(MemorySegment cell_layout, MemorySegment cell, MemorySegment attribute, int column) {
        var mh$ = gtk_cell_layout_add_attribute$MH();
        try {
            mh$.invokeExact(cell_layout, cell, attribute, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_set_cell_data_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.gtk_cell_layout_set_cell_data_func$MH,"gtk_cell_layout_set_cell_data_func");
    }
    /**
     * {@snippet :
     * void gtk_cell_layout_set_cell_data_func(GtkCellLayout* cell_layout, GtkCellRenderer* cell, GtkCellLayoutDataFunc func, gpointer func_data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_cell_layout_set_cell_data_func(MemorySegment cell_layout, MemorySegment cell, MemorySegment func, MemorySegment func_data, MemorySegment destroy) {
        var mh$ = gtk_cell_layout_set_cell_data_func$MH();
        try {
            mh$.invokeExact(cell_layout, cell, func, func_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_clear_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.gtk_cell_layout_clear_attributes$MH,"gtk_cell_layout_clear_attributes");
    }
    /**
     * {@snippet :
     * void gtk_cell_layout_clear_attributes(GtkCellLayout* cell_layout, GtkCellRenderer* cell);
     * }
     */
    public static void gtk_cell_layout_clear_attributes(MemorySegment cell_layout, MemorySegment cell) {
        var mh$ = gtk_cell_layout_clear_attributes$MH();
        try {
            mh$.invokeExact(cell_layout, cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_reorder$MH() {
        return RuntimeHelper.requireNonNull(constants$1522.gtk_cell_layout_reorder$MH,"gtk_cell_layout_reorder");
    }
    /**
     * {@snippet :
     * void gtk_cell_layout_reorder(GtkCellLayout* cell_layout, GtkCellRenderer* cell, gint position);
     * }
     */
    public static void gtk_cell_layout_reorder(MemorySegment cell_layout, MemorySegment cell, int position) {
        var mh$ = gtk_cell_layout_reorder$MH();
        try {
            mh$.invokeExact(cell_layout, cell, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_layout_get_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1522.gtk_cell_layout_get_area$MH,"gtk_cell_layout_get_area");
    }
    /**
     * {@snippet :
     * GtkCellArea* gtk_cell_layout_get_area(GtkCellLayout* cell_layout);
     * }
     */
    public static MemorySegment gtk_cell_layout_get_area(MemorySegment cell_layout) {
        var mh$ = gtk_cell_layout_get_area$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cell_layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_cell_layout_buildable_custom_tag_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1522._gtk_cell_layout_buildable_custom_tag_start$MH,"_gtk_cell_layout_buildable_custom_tag_start");
    }
    /**
     * {@snippet :
     * gboolean _gtk_cell_layout_buildable_custom_tag_start(GtkBuildable* buildable, GtkBuilder* builder, GObject* child, const gchar* tagname, GMarkupParser* parser, gpointer* data);
     * }
     */
    public static int _gtk_cell_layout_buildable_custom_tag_start(MemorySegment buildable, MemorySegment builder, MemorySegment child, MemorySegment tagname, MemorySegment parser, MemorySegment data) {
        var mh$ = _gtk_cell_layout_buildable_custom_tag_start$MH();
        try {
            return (int)mh$.invokeExact(buildable, builder, child, tagname, parser, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_cell_layout_buildable_custom_tag_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1522._gtk_cell_layout_buildable_custom_tag_end$MH,"_gtk_cell_layout_buildable_custom_tag_end");
    }
    /**
     * {@snippet :
     * gboolean _gtk_cell_layout_buildable_custom_tag_end(GtkBuildable* buildable, GtkBuilder* builder, GObject* child, const gchar* tagname, gpointer* data);
     * }
     */
    public static int _gtk_cell_layout_buildable_custom_tag_end(MemorySegment buildable, MemorySegment builder, MemorySegment child, MemorySegment tagname, MemorySegment data) {
        var mh$ = _gtk_cell_layout_buildable_custom_tag_end$MH();
        try {
            return (int)mh$.invokeExact(buildable, builder, child, tagname, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_cell_layout_buildable_add_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1522._gtk_cell_layout_buildable_add_child$MH,"_gtk_cell_layout_buildable_add_child");
    }
    /**
     * {@snippet :
     * void _gtk_cell_layout_buildable_add_child(GtkBuildable* buildable, GtkBuilder* builder, GObject* child, const gchar* type);
     * }
     */
    public static void _gtk_cell_layout_buildable_add_child(MemorySegment buildable, MemorySegment builder, MemorySegment child, MemorySegment type) {
        var mh$ = _gtk_cell_layout_buildable_add_child$MH();
        try {
            mh$.invokeExact(buildable, builder, child, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_text_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1522.gtk_cell_renderer_text_get_type$MH,"gtk_cell_renderer_text_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_cell_renderer_text_get_type();
     * }
     */
    public static long gtk_cell_renderer_text_get_type() {
        var mh$ = gtk_cell_renderer_text_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_text_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.gtk_cell_renderer_text_new$MH,"gtk_cell_renderer_text_new");
    }
    /**
     * {@snippet :
     * GtkCellRenderer* gtk_cell_renderer_text_new();
     * }
     */
    public static MemorySegment gtk_cell_renderer_text_new() {
        var mh$ = gtk_cell_renderer_text_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_text_set_fixed_height_from_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.gtk_cell_renderer_text_set_fixed_height_from_font$MH,"gtk_cell_renderer_text_set_fixed_height_from_font");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_text_set_fixed_height_from_font(GtkCellRendererText* renderer, gint number_of_rows);
     * }
     */
    public static void gtk_cell_renderer_text_set_fixed_height_from_font(MemorySegment renderer, int number_of_rows) {
        var mh$ = gtk_cell_renderer_text_set_fixed_height_from_font$MH();
        try {
            mh$.invokeExact(renderer, number_of_rows);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_CELL_RENDERER_ACCEL_MODE_GTK = 0;
     * }
     */
    public static int GTK_CELL_RENDERER_ACCEL_MODE_GTK() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_CELL_RENDERER_ACCEL_MODE_OTHER = 1;
     * }
     */
    public static int GTK_CELL_RENDERER_ACCEL_MODE_OTHER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_CELL_RENDERER_ACCEL_MODE_MODIFIER_TAP = 2;
     * }
     */
    public static int GTK_CELL_RENDERER_ACCEL_MODE_MODIFIER_TAP() {
        return (int)2L;
    }
    public static MethodHandle gtk_cell_renderer_accel_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.gtk_cell_renderer_accel_get_type$MH,"gtk_cell_renderer_accel_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_cell_renderer_accel_get_type();
     * }
     */
    public static long gtk_cell_renderer_accel_get_type() {
        var mh$ = gtk_cell_renderer_accel_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_accel_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.gtk_cell_renderer_accel_new$MH,"gtk_cell_renderer_accel_new");
    }
    /**
     * {@snippet :
     * GtkCellRenderer* gtk_cell_renderer_accel_new();
     * }
     */
    public static MemorySegment gtk_cell_renderer_accel_new() {
        var mh$ = gtk_cell_renderer_accel_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_combo_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.gtk_cell_renderer_combo_get_type$MH,"gtk_cell_renderer_combo_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_cell_renderer_combo_get_type();
     * }
     */
    public static long gtk_cell_renderer_combo_get_type() {
        var mh$ = gtk_cell_renderer_combo_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_combo_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.gtk_cell_renderer_combo_new$MH,"gtk_cell_renderer_combo_new");
    }
    /**
     * {@snippet :
     * GtkCellRenderer* gtk_cell_renderer_combo_new();
     * }
     */
    public static MemorySegment gtk_cell_renderer_combo_new() {
        var mh$ = gtk_cell_renderer_combo_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_pixbuf_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1524.gtk_cell_renderer_pixbuf_get_type$MH,"gtk_cell_renderer_pixbuf_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_cell_renderer_pixbuf_get_type();
     * }
     */
    public static long gtk_cell_renderer_pixbuf_get_type() {
        var mh$ = gtk_cell_renderer_pixbuf_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_pixbuf_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1524.gtk_cell_renderer_pixbuf_new$MH,"gtk_cell_renderer_pixbuf_new");
    }
    /**
     * {@snippet :
     * GtkCellRenderer* gtk_cell_renderer_pixbuf_new();
     * }
     */
    public static MemorySegment gtk_cell_renderer_pixbuf_new() {
        var mh$ = gtk_cell_renderer_pixbuf_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_progress_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1524.gtk_cell_renderer_progress_get_type$MH,"gtk_cell_renderer_progress_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_cell_renderer_progress_get_type();
     * }
     */
    public static long gtk_cell_renderer_progress_get_type() {
        var mh$ = gtk_cell_renderer_progress_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_progress_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1524.gtk_cell_renderer_progress_new$MH,"gtk_cell_renderer_progress_new");
    }
    /**
     * {@snippet :
     * GtkCellRenderer* gtk_cell_renderer_progress_new();
     * }
     */
    public static MemorySegment gtk_cell_renderer_progress_new() {
        var mh$ = gtk_cell_renderer_progress_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_spin_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1524.gtk_cell_renderer_spin_get_type$MH,"gtk_cell_renderer_spin_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_cell_renderer_spin_get_type();
     * }
     */
    public static long gtk_cell_renderer_spin_get_type() {
        var mh$ = gtk_cell_renderer_spin_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_spin_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1524.gtk_cell_renderer_spin_new$MH,"gtk_cell_renderer_spin_new");
    }
    /**
     * {@snippet :
     * GtkCellRenderer* gtk_cell_renderer_spin_new();
     * }
     */
    public static MemorySegment gtk_cell_renderer_spin_new() {
        var mh$ = gtk_cell_renderer_spin_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_spinner_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1525.gtk_cell_renderer_spinner_get_type$MH,"gtk_cell_renderer_spinner_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_cell_renderer_spinner_get_type();
     * }
     */
    public static long gtk_cell_renderer_spinner_get_type() {
        var mh$ = gtk_cell_renderer_spinner_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_spinner_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1525.gtk_cell_renderer_spinner_new$MH,"gtk_cell_renderer_spinner_new");
    }
    /**
     * {@snippet :
     * GtkCellRenderer* gtk_cell_renderer_spinner_new();
     * }
     */
    public static MemorySegment gtk_cell_renderer_spinner_new() {
        var mh$ = gtk_cell_renderer_spinner_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1525.gtk_cell_renderer_toggle_get_type$MH,"gtk_cell_renderer_toggle_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_cell_renderer_toggle_get_type();
     * }
     */
    public static long gtk_cell_renderer_toggle_get_type() {
        var mh$ = gtk_cell_renderer_toggle_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1525.gtk_cell_renderer_toggle_new$MH,"gtk_cell_renderer_toggle_new");
    }
    /**
     * {@snippet :
     * GtkCellRenderer* gtk_cell_renderer_toggle_new();
     * }
     */
    public static MemorySegment gtk_cell_renderer_toggle_new() {
        var mh$ = gtk_cell_renderer_toggle_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_get_radio$MH() {
        return RuntimeHelper.requireNonNull(constants$1525.gtk_cell_renderer_toggle_get_radio$MH,"gtk_cell_renderer_toggle_get_radio");
    }
    /**
     * {@snippet :
     * gboolean gtk_cell_renderer_toggle_get_radio(GtkCellRendererToggle* toggle);
     * }
     */
    public static int gtk_cell_renderer_toggle_get_radio(MemorySegment toggle) {
        var mh$ = gtk_cell_renderer_toggle_get_radio$MH();
        try {
            return (int)mh$.invokeExact(toggle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_set_radio$MH() {
        return RuntimeHelper.requireNonNull(constants$1525.gtk_cell_renderer_toggle_set_radio$MH,"gtk_cell_renderer_toggle_set_radio");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_toggle_set_radio(GtkCellRendererToggle* toggle, gboolean radio);
     * }
     */
    public static void gtk_cell_renderer_toggle_set_radio(MemorySegment toggle, int radio) {
        var mh$ = gtk_cell_renderer_toggle_set_radio$MH();
        try {
            mh$.invokeExact(toggle, radio);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_get_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.gtk_cell_renderer_toggle_get_active$MH,"gtk_cell_renderer_toggle_get_active");
    }
    /**
     * {@snippet :
     * gboolean gtk_cell_renderer_toggle_get_active(GtkCellRendererToggle* toggle);
     * }
     */
    public static int gtk_cell_renderer_toggle_get_active(MemorySegment toggle) {
        var mh$ = gtk_cell_renderer_toggle_get_active$MH();
        try {
            return (int)mh$.invokeExact(toggle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_set_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.gtk_cell_renderer_toggle_set_active$MH,"gtk_cell_renderer_toggle_set_active");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_toggle_set_active(GtkCellRendererToggle* toggle, gboolean setting);
     * }
     */
    public static void gtk_cell_renderer_toggle_set_active(MemorySegment toggle, int setting) {
        var mh$ = gtk_cell_renderer_toggle_set_active$MH();
        try {
            mh$.invokeExact(toggle, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_get_activatable$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.gtk_cell_renderer_toggle_get_activatable$MH,"gtk_cell_renderer_toggle_get_activatable");
    }
    /**
     * {@snippet :
     * gboolean gtk_cell_renderer_toggle_get_activatable(GtkCellRendererToggle* toggle);
     * }
     */
    public static int gtk_cell_renderer_toggle_get_activatable(MemorySegment toggle) {
        var mh$ = gtk_cell_renderer_toggle_get_activatable$MH();
        try {
            return (int)mh$.invokeExact(toggle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_toggle_set_activatable$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.gtk_cell_renderer_toggle_set_activatable$MH,"gtk_cell_renderer_toggle_set_activatable");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_toggle_set_activatable(GtkCellRendererToggle* toggle, gboolean setting);
     * }
     */
    public static void gtk_cell_renderer_toggle_set_activatable(MemorySegment toggle, int setting) {
        var mh$ = gtk_cell_renderer_toggle_set_activatable$MH();
        try {
            mh$.invokeExact(toggle, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.gtk_cell_view_get_type$MH,"gtk_cell_view_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_cell_view_get_type();
     * }
     */
    public static long gtk_cell_view_get_type() {
        var mh$ = gtk_cell_view_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.gtk_cell_view_new$MH,"gtk_cell_view_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_cell_view_new();
     * }
     */
    public static MemorySegment gtk_cell_view_new() {
        var mh$ = gtk_cell_view_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_new_with_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.gtk_cell_view_new_with_context$MH,"gtk_cell_view_new_with_context");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_cell_view_new_with_context(GtkCellArea* area, GtkCellAreaContext* context);
     * }
     */
    public static MemorySegment gtk_cell_view_new_with_context(MemorySegment area, MemorySegment context) {
        var mh$ = gtk_cell_view_new_with_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area, context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_new_with_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.gtk_cell_view_new_with_text$MH,"gtk_cell_view_new_with_text");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_cell_view_new_with_text(const gchar* text);
     * }
     */
    public static MemorySegment gtk_cell_view_new_with_text(MemorySegment text) {
        var mh$ = gtk_cell_view_new_with_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_new_with_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.gtk_cell_view_new_with_markup$MH,"gtk_cell_view_new_with_markup");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_cell_view_new_with_markup(const gchar* markup);
     * }
     */
    public static MemorySegment gtk_cell_view_new_with_markup(MemorySegment markup) {
        var mh$ = gtk_cell_view_new_with_markup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_new_with_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.gtk_cell_view_new_with_pixbuf$MH,"gtk_cell_view_new_with_pixbuf");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_cell_view_new_with_pixbuf(GdkPixbuf* pixbuf);
     * }
     */
    public static MemorySegment gtk_cell_view_new_with_pixbuf(MemorySegment pixbuf) {
        var mh$ = gtk_cell_view_new_with_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.gtk_cell_view_set_model$MH,"gtk_cell_view_set_model");
    }
    /**
     * {@snippet :
     * void gtk_cell_view_set_model(GtkCellView* cell_view, GtkTreeModel* model);
     * }
     */
    public static void gtk_cell_view_set_model(MemorySegment cell_view, MemorySegment model) {
        var mh$ = gtk_cell_view_set_model$MH();
        try {
            mh$.invokeExact(cell_view, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.gtk_cell_view_get_model$MH,"gtk_cell_view_get_model");
    }
    /**
     * {@snippet :
     * GtkTreeModel* gtk_cell_view_get_model(GtkCellView* cell_view);
     * }
     */
    public static MemorySegment gtk_cell_view_get_model(MemorySegment cell_view) {
        var mh$ = gtk_cell_view_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cell_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_set_displayed_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.gtk_cell_view_set_displayed_row$MH,"gtk_cell_view_set_displayed_row");
    }
    /**
     * {@snippet :
     * void gtk_cell_view_set_displayed_row(GtkCellView* cell_view, GtkTreePath* path);
     * }
     */
    public static void gtk_cell_view_set_displayed_row(MemorySegment cell_view, MemorySegment path) {
        var mh$ = gtk_cell_view_set_displayed_row$MH();
        try {
            mh$.invokeExact(cell_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_get_displayed_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.gtk_cell_view_get_displayed_row$MH,"gtk_cell_view_get_displayed_row");
    }
    /**
     * {@snippet :
     * GtkTreePath* gtk_cell_view_get_displayed_row(GtkCellView* cell_view);
     * }
     */
    public static MemorySegment gtk_cell_view_get_displayed_row(MemorySegment cell_view) {
        var mh$ = gtk_cell_view_get_displayed_row$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cell_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_set_background_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.gtk_cell_view_set_background_rgba$MH,"gtk_cell_view_set_background_rgba");
    }
    /**
     * {@snippet :
     * void gtk_cell_view_set_background_rgba(GtkCellView* cell_view, const GdkRGBA* rgba);
     * }
     */
    public static void gtk_cell_view_set_background_rgba(MemorySegment cell_view, MemorySegment rgba) {
        var mh$ = gtk_cell_view_set_background_rgba$MH();
        try {
            mh$.invokeExact(cell_view, rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_get_draw_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.gtk_cell_view_get_draw_sensitive$MH,"gtk_cell_view_get_draw_sensitive");
    }
    /**
     * {@snippet :
     * gboolean gtk_cell_view_get_draw_sensitive(GtkCellView* cell_view);
     * }
     */
    public static int gtk_cell_view_get_draw_sensitive(MemorySegment cell_view) {
        var mh$ = gtk_cell_view_get_draw_sensitive$MH();
        try {
            return (int)mh$.invokeExact(cell_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_set_draw_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.gtk_cell_view_set_draw_sensitive$MH,"gtk_cell_view_set_draw_sensitive");
    }
    /**
     * {@snippet :
     * void gtk_cell_view_set_draw_sensitive(GtkCellView* cell_view, gboolean draw_sensitive);
     * }
     */
    public static void gtk_cell_view_set_draw_sensitive(MemorySegment cell_view, int draw_sensitive) {
        var mh$ = gtk_cell_view_set_draw_sensitive$MH();
        try {
            mh$.invokeExact(cell_view, draw_sensitive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_get_fit_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.gtk_cell_view_get_fit_model$MH,"gtk_cell_view_get_fit_model");
    }
    /**
     * {@snippet :
     * gboolean gtk_cell_view_get_fit_model(GtkCellView* cell_view);
     * }
     */
    public static int gtk_cell_view_get_fit_model(MemorySegment cell_view) {
        var mh$ = gtk_cell_view_get_fit_model$MH();
        try {
            return (int)mh$.invokeExact(cell_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_set_fit_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.gtk_cell_view_set_fit_model$MH,"gtk_cell_view_set_fit_model");
    }
    /**
     * {@snippet :
     * void gtk_cell_view_set_fit_model(GtkCellView* cell_view, gboolean fit_model);
     * }
     */
    public static void gtk_cell_view_set_fit_model(MemorySegment cell_view, int fit_model) {
        var mh$ = gtk_cell_view_set_fit_model$MH();
        try {
            mh$.invokeExact(cell_view, fit_model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_get_size_of_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.gtk_cell_view_get_size_of_row$MH,"gtk_cell_view_get_size_of_row");
    }
    /**
     * {@snippet :
     * gboolean gtk_cell_view_get_size_of_row(GtkCellView* cell_view, GtkTreePath* path, GtkRequisition* requisition);
     * }
     */
    public static int gtk_cell_view_get_size_of_row(MemorySegment cell_view, MemorySegment path, MemorySegment requisition) {
        var mh$ = gtk_cell_view_get_size_of_row$MH();
        try {
            return (int)mh$.invokeExact(cell_view, path, requisition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_view_set_background_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.gtk_cell_view_set_background_color$MH,"gtk_cell_view_set_background_color");
    }
    /**
     * {@snippet :
     * void gtk_cell_view_set_background_color(GtkCellView* cell_view, const GdkColor* color);
     * }
     */
    public static void gtk_cell_view_set_background_color(MemorySegment cell_view, MemorySegment color) {
        var mh$ = gtk_cell_view_set_background_color$MH();
        try {
            mh$.invokeExact(cell_view, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.gtk_toggle_button_get_type$MH,"gtk_toggle_button_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_toggle_button_get_type();
     * }
     */
    public static long gtk_toggle_button_get_type() {
        var mh$ = gtk_toggle_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.gtk_toggle_button_new$MH,"gtk_toggle_button_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_toggle_button_new();
     * }
     */
    public static MemorySegment gtk_toggle_button_new() {
        var mh$ = gtk_toggle_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_new_with_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.gtk_toggle_button_new_with_label$MH,"gtk_toggle_button_new_with_label");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_toggle_button_new_with_label(const gchar* label);
     * }
     */
    public static MemorySegment gtk_toggle_button_new_with_label(MemorySegment label) {
        var mh$ = gtk_toggle_button_new_with_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.gtk_toggle_button_new_with_mnemonic$MH,"gtk_toggle_button_new_with_mnemonic");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_toggle_button_new_with_mnemonic(const gchar* label);
     * }
     */
    public static MemorySegment gtk_toggle_button_new_with_mnemonic(MemorySegment label) {
        var mh$ = gtk_toggle_button_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_set_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.gtk_toggle_button_set_mode$MH,"gtk_toggle_button_set_mode");
    }
    /**
     * {@snippet :
     * void gtk_toggle_button_set_mode(GtkToggleButton* toggle_button, gboolean draw_indicator);
     * }
     */
    public static void gtk_toggle_button_set_mode(MemorySegment toggle_button, int draw_indicator) {
        var mh$ = gtk_toggle_button_set_mode$MH();
        try {
            mh$.invokeExact(toggle_button, draw_indicator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_get_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.gtk_toggle_button_get_mode$MH,"gtk_toggle_button_get_mode");
    }
    /**
     * {@snippet :
     * gboolean gtk_toggle_button_get_mode(GtkToggleButton* toggle_button);
     * }
     */
    public static int gtk_toggle_button_get_mode(MemorySegment toggle_button) {
        var mh$ = gtk_toggle_button_get_mode$MH();
        try {
            return (int)mh$.invokeExact(toggle_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_set_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.gtk_toggle_button_set_active$MH,"gtk_toggle_button_set_active");
    }
    /**
     * {@snippet :
     * void gtk_toggle_button_set_active(GtkToggleButton* toggle_button, gboolean is_active);
     * }
     */
    public static void gtk_toggle_button_set_active(MemorySegment toggle_button, int is_active) {
        var mh$ = gtk_toggle_button_set_active$MH();
        try {
            mh$.invokeExact(toggle_button, is_active);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_get_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.gtk_toggle_button_get_active$MH,"gtk_toggle_button_get_active");
    }
    /**
     * {@snippet :
     * gboolean gtk_toggle_button_get_active(GtkToggleButton* toggle_button);
     * }
     */
    public static int gtk_toggle_button_get_active(MemorySegment toggle_button) {
        var mh$ = gtk_toggle_button_get_active$MH();
        try {
            return (int)mh$.invokeExact(toggle_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_toggled$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.gtk_toggle_button_toggled$MH,"gtk_toggle_button_toggled");
    }
    /**
     * {@snippet :
     * void gtk_toggle_button_toggled(GtkToggleButton* toggle_button);
     * }
     */
    public static void gtk_toggle_button_toggled(MemorySegment toggle_button) {
        var mh$ = gtk_toggle_button_toggled$MH();
        try {
            mh$.invokeExact(toggle_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_set_inconsistent$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.gtk_toggle_button_set_inconsistent$MH,"gtk_toggle_button_set_inconsistent");
    }
    /**
     * {@snippet :
     * void gtk_toggle_button_set_inconsistent(GtkToggleButton* toggle_button, gboolean setting);
     * }
     */
    public static void gtk_toggle_button_set_inconsistent(MemorySegment toggle_button, int setting) {
        var mh$ = gtk_toggle_button_set_inconsistent$MH();
        try {
            mh$.invokeExact(toggle_button, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_toggle_button_get_inconsistent$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.gtk_toggle_button_get_inconsistent$MH,"gtk_toggle_button_get_inconsistent");
    }
    /**
     * {@snippet :
     * gboolean gtk_toggle_button_get_inconsistent(GtkToggleButton* toggle_button);
     * }
     */
    public static int gtk_toggle_button_get_inconsistent(MemorySegment toggle_button) {
        var mh$ = gtk_toggle_button_get_inconsistent$MH();
        try {
            return (int)mh$.invokeExact(toggle_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.gtk_check_button_get_type$MH,"gtk_check_button_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_check_button_get_type();
     * }
     */
    public static long gtk_check_button_get_type() {
        var mh$ = gtk_check_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.gtk_check_button_new$MH,"gtk_check_button_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_check_button_new();
     * }
     */
    public static MemorySegment gtk_check_button_new() {
        var mh$ = gtk_check_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_button_new_with_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.gtk_check_button_new_with_label$MH,"gtk_check_button_new_with_label");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_check_button_new_with_label(const gchar* label);
     * }
     */
    public static MemorySegment gtk_check_button_new_with_label(MemorySegment label) {
        var mh$ = gtk_check_button_new_with_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_button_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.gtk_check_button_new_with_mnemonic$MH,"gtk_check_button_new_with_mnemonic");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_check_button_new_with_mnemonic(const gchar* label);
     * }
     */
    public static MemorySegment gtk_check_button_new_with_mnemonic(MemorySegment label) {
        var mh$ = gtk_check_button_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_check_button_get_props$MH() {
        return RuntimeHelper.requireNonNull(constants$1532._gtk_check_button_get_props$MH,"_gtk_check_button_get_props");
    }
    /**
     * {@snippet :
     * void _gtk_check_button_get_props(GtkCheckButton* check_button, gint* indicator_size, gint* indicator_spacing);
     * }
     */
    public static void _gtk_check_button_get_props(MemorySegment check_button, MemorySegment indicator_size, MemorySegment indicator_spacing) {
        var mh$ = _gtk_check_button_get_props$MH();
        try {
            mh$.invokeExact(check_button, indicator_size, indicator_spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.gtk_menu_item_get_type$MH,"gtk_menu_item_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_menu_item_get_type();
     * }
     */
    public static long gtk_menu_item_get_type() {
        var mh$ = gtk_menu_item_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.gtk_menu_item_new$MH,"gtk_menu_item_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_menu_item_new();
     * }
     */
    public static MemorySegment gtk_menu_item_new() {
        var mh$ = gtk_menu_item_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_new_with_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.gtk_menu_item_new_with_label$MH,"gtk_menu_item_new_with_label");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_menu_item_new_with_label(const gchar* label);
     * }
     */
    public static MemorySegment gtk_menu_item_new_with_label(MemorySegment label) {
        var mh$ = gtk_menu_item_new_with_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.gtk_menu_item_new_with_mnemonic$MH,"gtk_menu_item_new_with_mnemonic");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_menu_item_new_with_mnemonic(const gchar* label);
     * }
     */
    public static MemorySegment gtk_menu_item_new_with_mnemonic(MemorySegment label) {
        var mh$ = gtk_menu_item_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_submenu$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.gtk_menu_item_set_submenu$MH,"gtk_menu_item_set_submenu");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_set_submenu(GtkMenuItem* menu_item, GtkWidget* submenu);
     * }
     */
    public static void gtk_menu_item_set_submenu(MemorySegment menu_item, MemorySegment submenu) {
        var mh$ = gtk_menu_item_set_submenu$MH();
        try {
            mh$.invokeExact(menu_item, submenu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_submenu$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.gtk_menu_item_get_submenu$MH,"gtk_menu_item_get_submenu");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_menu_item_get_submenu(GtkMenuItem* menu_item);
     * }
     */
    public static MemorySegment gtk_menu_item_get_submenu(MemorySegment menu_item) {
        var mh$ = gtk_menu_item_get_submenu$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_select$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.gtk_menu_item_select$MH,"gtk_menu_item_select");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_select(GtkMenuItem* menu_item);
     * }
     */
    public static void gtk_menu_item_select(MemorySegment menu_item) {
        var mh$ = gtk_menu_item_select$MH();
        try {
            mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_deselect$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.gtk_menu_item_deselect$MH,"gtk_menu_item_deselect");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_deselect(GtkMenuItem* menu_item);
     * }
     */
    public static void gtk_menu_item_deselect(MemorySegment menu_item) {
        var mh$ = gtk_menu_item_deselect$MH();
        try {
            mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.gtk_menu_item_activate$MH,"gtk_menu_item_activate");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_activate(GtkMenuItem* menu_item);
     * }
     */
    public static void gtk_menu_item_activate(MemorySegment menu_item) {
        var mh$ = gtk_menu_item_activate$MH();
        try {
            mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_toggle_size_request$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.gtk_menu_item_toggle_size_request$MH,"gtk_menu_item_toggle_size_request");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_toggle_size_request(GtkMenuItem* menu_item, gint* requisition);
     * }
     */
    public static void gtk_menu_item_toggle_size_request(MemorySegment menu_item, MemorySegment requisition) {
        var mh$ = gtk_menu_item_toggle_size_request$MH();
        try {
            mh$.invokeExact(menu_item, requisition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_toggle_size_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.gtk_menu_item_toggle_size_allocate$MH,"gtk_menu_item_toggle_size_allocate");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_toggle_size_allocate(GtkMenuItem* menu_item, gint allocation);
     * }
     */
    public static void gtk_menu_item_toggle_size_allocate(MemorySegment menu_item, int allocation) {
        var mh$ = gtk_menu_item_toggle_size_allocate$MH();
        try {
            mh$.invokeExact(menu_item, allocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_right_justified$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.gtk_menu_item_set_right_justified$MH,"gtk_menu_item_set_right_justified");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_set_right_justified(GtkMenuItem* menu_item, gboolean right_justified);
     * }
     */
    public static void gtk_menu_item_set_right_justified(MemorySegment menu_item, int right_justified) {
        var mh$ = gtk_menu_item_set_right_justified$MH();
        try {
            mh$.invokeExact(menu_item, right_justified);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_right_justified$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.gtk_menu_item_get_right_justified$MH,"gtk_menu_item_get_right_justified");
    }
    /**
     * {@snippet :
     * gboolean gtk_menu_item_get_right_justified(GtkMenuItem* menu_item);
     * }
     */
    public static int gtk_menu_item_get_right_justified(MemorySegment menu_item) {
        var mh$ = gtk_menu_item_get_right_justified$MH();
        try {
            return (int)mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_accel_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.gtk_menu_item_set_accel_path$MH,"gtk_menu_item_set_accel_path");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_set_accel_path(GtkMenuItem* menu_item, const gchar* accel_path);
     * }
     */
    public static void gtk_menu_item_set_accel_path(MemorySegment menu_item, MemorySegment accel_path) {
        var mh$ = gtk_menu_item_set_accel_path$MH();
        try {
            mh$.invokeExact(menu_item, accel_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_accel_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.gtk_menu_item_get_accel_path$MH,"gtk_menu_item_get_accel_path");
    }
    /**
     * {@snippet :
     * const gchar* gtk_menu_item_get_accel_path(GtkMenuItem* menu_item);
     * }
     */
    public static MemorySegment gtk_menu_item_get_accel_path(MemorySegment menu_item) {
        var mh$ = gtk_menu_item_get_accel_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.gtk_menu_item_set_label$MH,"gtk_menu_item_set_label");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_set_label(GtkMenuItem* menu_item, const gchar* label);
     * }
     */
    public static void gtk_menu_item_set_label(MemorySegment menu_item, MemorySegment label) {
        var mh$ = gtk_menu_item_set_label$MH();
        try {
            mh$.invokeExact(menu_item, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.gtk_menu_item_get_label$MH,"gtk_menu_item_get_label");
    }
    /**
     * {@snippet :
     * const gchar* gtk_menu_item_get_label(GtkMenuItem* menu_item);
     * }
     */
    public static MemorySegment gtk_menu_item_get_label(MemorySegment menu_item) {
        var mh$ = gtk_menu_item_get_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.gtk_menu_item_set_use_underline$MH,"gtk_menu_item_set_use_underline");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_set_use_underline(GtkMenuItem* menu_item, gboolean setting);
     * }
     */
    public static void gtk_menu_item_set_use_underline(MemorySegment menu_item, int setting) {
        var mh$ = gtk_menu_item_set_use_underline$MH();
        try {
            mh$.invokeExact(menu_item, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.gtk_menu_item_get_use_underline$MH,"gtk_menu_item_get_use_underline");
    }
    /**
     * {@snippet :
     * gboolean gtk_menu_item_get_use_underline(GtkMenuItem* menu_item);
     * }
     */
    public static int gtk_menu_item_get_use_underline(MemorySegment menu_item) {
        var mh$ = gtk_menu_item_get_use_underline$MH();
        try {
            return (int)mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_set_reserve_indicator$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.gtk_menu_item_set_reserve_indicator$MH,"gtk_menu_item_set_reserve_indicator");
    }
    /**
     * {@snippet :
     * void gtk_menu_item_set_reserve_indicator(GtkMenuItem* menu_item, gboolean reserve);
     * }
     */
    public static void gtk_menu_item_set_reserve_indicator(MemorySegment menu_item, int reserve) {
        var mh$ = gtk_menu_item_set_reserve_indicator$MH();
        try {
            mh$.invokeExact(menu_item, reserve);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_item_get_reserve_indicator$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.gtk_menu_item_get_reserve_indicator$MH,"gtk_menu_item_get_reserve_indicator");
    }
    /**
     * {@snippet :
     * gboolean gtk_menu_item_get_reserve_indicator(GtkMenuItem* menu_item);
     * }
     */
    public static int gtk_menu_item_get_reserve_indicator(MemorySegment menu_item) {
        var mh$ = gtk_menu_item_get_reserve_indicator$MH();
        try {
            return (int)mh$.invokeExact(menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.gtk_check_menu_item_get_type$MH,"gtk_check_menu_item_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_check_menu_item_get_type();
     * }
     */
    public static long gtk_check_menu_item_get_type() {
        var mh$ = gtk_check_menu_item_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.gtk_check_menu_item_new$MH,"gtk_check_menu_item_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_check_menu_item_new();
     * }
     */
    public static MemorySegment gtk_check_menu_item_new() {
        var mh$ = gtk_check_menu_item_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_new_with_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.gtk_check_menu_item_new_with_label$MH,"gtk_check_menu_item_new_with_label");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_check_menu_item_new_with_label(const gchar* label);
     * }
     */
    public static MemorySegment gtk_check_menu_item_new_with_label(MemorySegment label) {
        var mh$ = gtk_check_menu_item_new_with_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.gtk_check_menu_item_new_with_mnemonic$MH,"gtk_check_menu_item_new_with_mnemonic");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_check_menu_item_new_with_mnemonic(const gchar* label);
     * }
     */
    public static MemorySegment gtk_check_menu_item_new_with_mnemonic(MemorySegment label) {
        var mh$ = gtk_check_menu_item_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_set_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.gtk_check_menu_item_set_active$MH,"gtk_check_menu_item_set_active");
    }
    /**
     * {@snippet :
     * void gtk_check_menu_item_set_active(GtkCheckMenuItem* check_menu_item, gboolean is_active);
     * }
     */
    public static void gtk_check_menu_item_set_active(MemorySegment check_menu_item, int is_active) {
        var mh$ = gtk_check_menu_item_set_active$MH();
        try {
            mh$.invokeExact(check_menu_item, is_active);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_get_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.gtk_check_menu_item_get_active$MH,"gtk_check_menu_item_get_active");
    }
    /**
     * {@snippet :
     * gboolean gtk_check_menu_item_get_active(GtkCheckMenuItem* check_menu_item);
     * }
     */
    public static int gtk_check_menu_item_get_active(MemorySegment check_menu_item) {
        var mh$ = gtk_check_menu_item_get_active$MH();
        try {
            return (int)mh$.invokeExact(check_menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_toggled$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.gtk_check_menu_item_toggled$MH,"gtk_check_menu_item_toggled");
    }
    /**
     * {@snippet :
     * void gtk_check_menu_item_toggled(GtkCheckMenuItem* check_menu_item);
     * }
     */
    public static void gtk_check_menu_item_toggled(MemorySegment check_menu_item) {
        var mh$ = gtk_check_menu_item_toggled$MH();
        try {
            mh$.invokeExact(check_menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_set_inconsistent$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.gtk_check_menu_item_set_inconsistent$MH,"gtk_check_menu_item_set_inconsistent");
    }
    /**
     * {@snippet :
     * void gtk_check_menu_item_set_inconsistent(GtkCheckMenuItem* check_menu_item, gboolean setting);
     * }
     */
    public static void gtk_check_menu_item_set_inconsistent(MemorySegment check_menu_item, int setting) {
        var mh$ = gtk_check_menu_item_set_inconsistent$MH();
        try {
            mh$.invokeExact(check_menu_item, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_get_inconsistent$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.gtk_check_menu_item_get_inconsistent$MH,"gtk_check_menu_item_get_inconsistent");
    }
    /**
     * {@snippet :
     * gboolean gtk_check_menu_item_get_inconsistent(GtkCheckMenuItem* check_menu_item);
     * }
     */
    public static int gtk_check_menu_item_get_inconsistent(MemorySegment check_menu_item) {
        var mh$ = gtk_check_menu_item_get_inconsistent$MH();
        try {
            return (int)mh$.invokeExact(check_menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_set_draw_as_radio$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.gtk_check_menu_item_set_draw_as_radio$MH,"gtk_check_menu_item_set_draw_as_radio");
    }
    /**
     * {@snippet :
     * void gtk_check_menu_item_set_draw_as_radio(GtkCheckMenuItem* check_menu_item, gboolean draw_as_radio);
     * }
     */
    public static void gtk_check_menu_item_set_draw_as_radio(MemorySegment check_menu_item, int draw_as_radio) {
        var mh$ = gtk_check_menu_item_set_draw_as_radio$MH();
        try {
            mh$.invokeExact(check_menu_item, draw_as_radio);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_menu_item_get_draw_as_radio$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.gtk_check_menu_item_get_draw_as_radio$MH,"gtk_check_menu_item_get_draw_as_radio");
    }
    /**
     * {@snippet :
     * gboolean gtk_check_menu_item_get_draw_as_radio(GtkCheckMenuItem* check_menu_item);
     * }
     */
    public static int gtk_check_menu_item_get_draw_as_radio(MemorySegment check_menu_item) {
        var mh$ = gtk_check_menu_item_get_draw_as_radio$MH();
        try {
            return (int)mh$.invokeExact(check_menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.gtk_clipboard_get_type$MH,"gtk_clipboard_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_clipboard_get_type();
     * }
     */
    public static long gtk_clipboard_get_type() {
        var mh$ = gtk_clipboard_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get_for_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.gtk_clipboard_get_for_display$MH,"gtk_clipboard_get_for_display");
    }
    /**
     * {@snippet :
     * GtkClipboard* gtk_clipboard_get_for_display(GdkDisplay* display, GdkAtom selection);
     * }
     */
    public static MemorySegment gtk_clipboard_get_for_display(MemorySegment display, MemorySegment selection) {
        var mh$ = gtk_clipboard_get_for_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display, selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.gtk_clipboard_get$MH,"gtk_clipboard_get");
    }
    /**
     * {@snippet :
     * GtkClipboard* gtk_clipboard_get(GdkAtom selection);
     * }
     */
    public static MemorySegment gtk_clipboard_get(MemorySegment selection) {
        var mh$ = gtk_clipboard_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.gtk_clipboard_get_default$MH,"gtk_clipboard_get_default");
    }
    /**
     * {@snippet :
     * GtkClipboard* gtk_clipboard_get_default(GdkDisplay* display);
     * }
     */
    public static MemorySegment gtk_clipboard_get_default(MemorySegment display) {
        var mh$ = gtk_clipboard_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.gtk_clipboard_get_display$MH,"gtk_clipboard_get_display");
    }
    /**
     * {@snippet :
     * GdkDisplay* gtk_clipboard_get_display(GtkClipboard* clipboard);
     * }
     */
    public static MemorySegment gtk_clipboard_get_display(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_set_with_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.gtk_clipboard_set_with_data$MH,"gtk_clipboard_set_with_data");
    }
    /**
     * {@snippet :
     * gboolean gtk_clipboard_set_with_data(GtkClipboard* clipboard, const GtkTargetEntry* targets, guint n_targets, GtkClipboardGetFunc get_func, GtkClipboardClearFunc clear_func, gpointer user_data);
     * }
     */
    public static int gtk_clipboard_set_with_data(MemorySegment clipboard, MemorySegment targets, int n_targets, MemorySegment get_func, MemorySegment clear_func, MemorySegment user_data) {
        var mh$ = gtk_clipboard_set_with_data$MH();
        try {
            return (int)mh$.invokeExact(clipboard, targets, n_targets, get_func, clear_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_set_with_owner$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.gtk_clipboard_set_with_owner$MH,"gtk_clipboard_set_with_owner");
    }
    /**
     * {@snippet :
     * gboolean gtk_clipboard_set_with_owner(GtkClipboard* clipboard, const GtkTargetEntry* targets, guint n_targets, GtkClipboardGetFunc get_func, GtkClipboardClearFunc clear_func, GObject* owner);
     * }
     */
    public static int gtk_clipboard_set_with_owner(MemorySegment clipboard, MemorySegment targets, int n_targets, MemorySegment get_func, MemorySegment clear_func, MemorySegment owner) {
        var mh$ = gtk_clipboard_set_with_owner$MH();
        try {
            return (int)mh$.invokeExact(clipboard, targets, n_targets, get_func, clear_func, owner);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get_owner$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.gtk_clipboard_get_owner$MH,"gtk_clipboard_get_owner");
    }
    /**
     * {@snippet :
     * GObject* gtk_clipboard_get_owner(GtkClipboard* clipboard);
     * }
     */
    public static MemorySegment gtk_clipboard_get_owner(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_get_owner$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.gtk_clipboard_clear$MH,"gtk_clipboard_clear");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_clear(GtkClipboard* clipboard);
     * }
     */
    public static void gtk_clipboard_clear(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_clear$MH();
        try {
            mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.gtk_clipboard_set_text$MH,"gtk_clipboard_set_text");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_set_text(GtkClipboard* clipboard, const gchar* text, gint len);
     * }
     */
    public static void gtk_clipboard_set_text(MemorySegment clipboard, MemorySegment text, int len) {
        var mh$ = gtk_clipboard_set_text$MH();
        try {
            mh$.invokeExact(clipboard, text, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_set_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.gtk_clipboard_set_image$MH,"gtk_clipboard_set_image");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_set_image(GtkClipboard* clipboard, GdkPixbuf* pixbuf);
     * }
     */
    public static void gtk_clipboard_set_image(MemorySegment clipboard, MemorySegment pixbuf) {
        var mh$ = gtk_clipboard_set_image$MH();
        try {
            mh$.invokeExact(clipboard, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_request_contents$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.gtk_clipboard_request_contents$MH,"gtk_clipboard_request_contents");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_request_contents(GtkClipboard* clipboard, GdkAtom target, GtkClipboardReceivedFunc callback, gpointer user_data);
     * }
     */
    public static void gtk_clipboard_request_contents(MemorySegment clipboard, MemorySegment target, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gtk_clipboard_request_contents$MH();
        try {
            mh$.invokeExact(clipboard, target, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_request_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.gtk_clipboard_request_text$MH,"gtk_clipboard_request_text");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_request_text(GtkClipboard* clipboard, GtkClipboardTextReceivedFunc callback, gpointer user_data);
     * }
     */
    public static void gtk_clipboard_request_text(MemorySegment clipboard, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gtk_clipboard_request_text$MH();
        try {
            mh$.invokeExact(clipboard, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_request_rich_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.gtk_clipboard_request_rich_text$MH,"gtk_clipboard_request_rich_text");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_request_rich_text(GtkClipboard* clipboard, GtkTextBuffer* buffer, GtkClipboardRichTextReceivedFunc callback, gpointer user_data);
     * }
     */
    public static void gtk_clipboard_request_rich_text(MemorySegment clipboard, MemorySegment buffer, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gtk_clipboard_request_rich_text$MH();
        try {
            mh$.invokeExact(clipboard, buffer, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_request_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.gtk_clipboard_request_image$MH,"gtk_clipboard_request_image");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_request_image(GtkClipboard* clipboard, GtkClipboardImageReceivedFunc callback, gpointer user_data);
     * }
     */
    public static void gtk_clipboard_request_image(MemorySegment clipboard, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gtk_clipboard_request_image$MH();
        try {
            mh$.invokeExact(clipboard, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_request_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.gtk_clipboard_request_uris$MH,"gtk_clipboard_request_uris");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_request_uris(GtkClipboard* clipboard, GtkClipboardURIReceivedFunc callback, gpointer user_data);
     * }
     */
    public static void gtk_clipboard_request_uris(MemorySegment clipboard, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gtk_clipboard_request_uris$MH();
        try {
            mh$.invokeExact(clipboard, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_request_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.gtk_clipboard_request_targets$MH,"gtk_clipboard_request_targets");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_request_targets(GtkClipboard* clipboard, GtkClipboardTargetsReceivedFunc callback, gpointer user_data);
     * }
     */
    public static void gtk_clipboard_request_targets(MemorySegment clipboard, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gtk_clipboard_request_targets$MH();
        try {
            mh$.invokeExact(clipboard, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_for_contents$MH() {
        return RuntimeHelper.requireNonNull(constants$1543.gtk_clipboard_wait_for_contents$MH,"gtk_clipboard_wait_for_contents");
    }
    /**
     * {@snippet :
     * GtkSelectionData* gtk_clipboard_wait_for_contents(GtkClipboard* clipboard, GdkAtom target);
     * }
     */
    public static MemorySegment gtk_clipboard_wait_for_contents(MemorySegment clipboard, MemorySegment target) {
        var mh$ = gtk_clipboard_wait_for_contents$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(clipboard, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_for_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1543.gtk_clipboard_wait_for_text$MH,"gtk_clipboard_wait_for_text");
    }
    /**
     * {@snippet :
     * gchar* gtk_clipboard_wait_for_text(GtkClipboard* clipboard);
     * }
     */
    public static MemorySegment gtk_clipboard_wait_for_text(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_wait_for_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_for_rich_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1543.gtk_clipboard_wait_for_rich_text$MH,"gtk_clipboard_wait_for_rich_text");
    }
    /**
     * {@snippet :
     * guint8* gtk_clipboard_wait_for_rich_text(GtkClipboard* clipboard, GtkTextBuffer* buffer, GdkAtom* format, gsize* length);
     * }
     */
    public static MemorySegment gtk_clipboard_wait_for_rich_text(MemorySegment clipboard, MemorySegment buffer, MemorySegment format, MemorySegment length) {
        var mh$ = gtk_clipboard_wait_for_rich_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(clipboard, buffer, format, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_for_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1543.gtk_clipboard_wait_for_image$MH,"gtk_clipboard_wait_for_image");
    }
    /**
     * {@snippet :
     * GdkPixbuf* gtk_clipboard_wait_for_image(GtkClipboard* clipboard);
     * }
     */
    public static MemorySegment gtk_clipboard_wait_for_image(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_wait_for_image$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_for_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$1543.gtk_clipboard_wait_for_uris$MH,"gtk_clipboard_wait_for_uris");
    }
    /**
     * {@snippet :
     * gchar** gtk_clipboard_wait_for_uris(GtkClipboard* clipboard);
     * }
     */
    public static MemorySegment gtk_clipboard_wait_for_uris(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_wait_for_uris$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_for_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$1543.gtk_clipboard_wait_for_targets$MH,"gtk_clipboard_wait_for_targets");
    }
    /**
     * {@snippet :
     * gboolean gtk_clipboard_wait_for_targets(GtkClipboard* clipboard, GdkAtom** targets, gint* n_targets);
     * }
     */
    public static int gtk_clipboard_wait_for_targets(MemorySegment clipboard, MemorySegment targets, MemorySegment n_targets) {
        var mh$ = gtk_clipboard_wait_for_targets$MH();
        try {
            return (int)mh$.invokeExact(clipboard, targets, n_targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_is_text_available$MH() {
        return RuntimeHelper.requireNonNull(constants$1544.gtk_clipboard_wait_is_text_available$MH,"gtk_clipboard_wait_is_text_available");
    }
    /**
     * {@snippet :
     * gboolean gtk_clipboard_wait_is_text_available(GtkClipboard* clipboard);
     * }
     */
    public static int gtk_clipboard_wait_is_text_available(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_wait_is_text_available$MH();
        try {
            return (int)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_is_rich_text_available$MH() {
        return RuntimeHelper.requireNonNull(constants$1544.gtk_clipboard_wait_is_rich_text_available$MH,"gtk_clipboard_wait_is_rich_text_available");
    }
    /**
     * {@snippet :
     * gboolean gtk_clipboard_wait_is_rich_text_available(GtkClipboard* clipboard, GtkTextBuffer* buffer);
     * }
     */
    public static int gtk_clipboard_wait_is_rich_text_available(MemorySegment clipboard, MemorySegment buffer) {
        var mh$ = gtk_clipboard_wait_is_rich_text_available$MH();
        try {
            return (int)mh$.invokeExact(clipboard, buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_is_image_available$MH() {
        return RuntimeHelper.requireNonNull(constants$1544.gtk_clipboard_wait_is_image_available$MH,"gtk_clipboard_wait_is_image_available");
    }
    /**
     * {@snippet :
     * gboolean gtk_clipboard_wait_is_image_available(GtkClipboard* clipboard);
     * }
     */
    public static int gtk_clipboard_wait_is_image_available(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_wait_is_image_available$MH();
        try {
            return (int)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_is_uris_available$MH() {
        return RuntimeHelper.requireNonNull(constants$1544.gtk_clipboard_wait_is_uris_available$MH,"gtk_clipboard_wait_is_uris_available");
    }
    /**
     * {@snippet :
     * gboolean gtk_clipboard_wait_is_uris_available(GtkClipboard* clipboard);
     * }
     */
    public static int gtk_clipboard_wait_is_uris_available(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_wait_is_uris_available$MH();
        try {
            return (int)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_wait_is_target_available$MH() {
        return RuntimeHelper.requireNonNull(constants$1544.gtk_clipboard_wait_is_target_available$MH,"gtk_clipboard_wait_is_target_available");
    }
    /**
     * {@snippet :
     * gboolean gtk_clipboard_wait_is_target_available(GtkClipboard* clipboard, GdkAtom target);
     * }
     */
    public static int gtk_clipboard_wait_is_target_available(MemorySegment clipboard, MemorySegment target) {
        var mh$ = gtk_clipboard_wait_is_target_available$MH();
        try {
            return (int)mh$.invokeExact(clipboard, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_set_can_store$MH() {
        return RuntimeHelper.requireNonNull(constants$1544.gtk_clipboard_set_can_store$MH,"gtk_clipboard_set_can_store");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_set_can_store(GtkClipboard* clipboard, const GtkTargetEntry* targets, gint n_targets);
     * }
     */
    public static void gtk_clipboard_set_can_store(MemorySegment clipboard, MemorySegment targets, int n_targets) {
        var mh$ = gtk_clipboard_set_can_store$MH();
        try {
            mh$.invokeExact(clipboard, targets, n_targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_store$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.gtk_clipboard_store$MH,"gtk_clipboard_store");
    }
    /**
     * {@snippet :
     * void gtk_clipboard_store(GtkClipboard* clipboard);
     * }
     */
    public static void gtk_clipboard_store(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_store$MH();
        try {
            mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_clipboard_get_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.gtk_clipboard_get_selection$MH,"gtk_clipboard_get_selection");
    }
    /**
     * {@snippet :
     * GdkAtom gtk_clipboard_get_selection(GtkClipboard* clipboard);
     * }
     */
    public static MemorySegment gtk_clipboard_get_selection(MemorySegment clipboard) {
        var mh$ = gtk_clipboard_get_selection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.gtk_color_button_get_type$MH,"gtk_color_button_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_color_button_get_type();
     * }
     */
    public static long gtk_color_button_get_type() {
        var mh$ = gtk_color_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.gtk_color_button_new$MH,"gtk_color_button_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_color_button_new();
     * }
     */
    public static MemorySegment gtk_color_button_new() {
        var mh$ = gtk_color_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_new_with_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.gtk_color_button_new_with_rgba$MH,"gtk_color_button_new_with_rgba");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_color_button_new_with_rgba(const GdkRGBA* rgba);
     * }
     */
    public static MemorySegment gtk_color_button_new_with_rgba(MemorySegment rgba) {
        var mh$ = gtk_color_button_new_with_rgba$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.gtk_color_button_set_title$MH,"gtk_color_button_set_title");
    }
    /**
     * {@snippet :
     * void gtk_color_button_set_title(GtkColorButton* button, const gchar* title);
     * }
     */
    public static void gtk_color_button_set_title(MemorySegment button, MemorySegment title) {
        var mh$ = gtk_color_button_set_title$MH();
        try {
            mh$.invokeExact(button, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.gtk_color_button_get_title$MH,"gtk_color_button_get_title");
    }
    /**
     * {@snippet :
     * const gchar* gtk_color_button_get_title(GtkColorButton* button);
     * }
     */
    public static MemorySegment gtk_color_button_get_title(MemorySegment button) {
        var mh$ = gtk_color_button_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_new_with_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.gtk_color_button_new_with_color$MH,"gtk_color_button_new_with_color");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_color_button_new_with_color(const GdkColor* color);
     * }
     */
    public static MemorySegment gtk_color_button_new_with_color(MemorySegment color) {
        var mh$ = gtk_color_button_new_with_color$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_set_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.gtk_color_button_set_color$MH,"gtk_color_button_set_color");
    }
    /**
     * {@snippet :
     * void gtk_color_button_set_color(GtkColorButton* button, const GdkColor* color);
     * }
     */
    public static void gtk_color_button_set_color(MemorySegment button, MemorySegment color) {
        var mh$ = gtk_color_button_set_color$MH();
        try {
            mh$.invokeExact(button, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_get_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.gtk_color_button_get_color$MH,"gtk_color_button_get_color");
    }
    /**
     * {@snippet :
     * void gtk_color_button_get_color(GtkColorButton* button, GdkColor* color);
     * }
     */
    public static void gtk_color_button_get_color(MemorySegment button, MemorySegment color) {
        var mh$ = gtk_color_button_get_color$MH();
        try {
            mh$.invokeExact(button, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_set_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.gtk_color_button_set_alpha$MH,"gtk_color_button_set_alpha");
    }
    /**
     * {@snippet :
     * void gtk_color_button_set_alpha(GtkColorButton* button, guint16 alpha);
     * }
     */
    public static void gtk_color_button_set_alpha(MemorySegment button, short alpha) {
        var mh$ = gtk_color_button_set_alpha$MH();
        try {
            mh$.invokeExact(button, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_get_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.gtk_color_button_get_alpha$MH,"gtk_color_button_get_alpha");
    }
    /**
     * {@snippet :
     * guint16 gtk_color_button_get_alpha(GtkColorButton* button);
     * }
     */
    public static short gtk_color_button_get_alpha(MemorySegment button) {
        var mh$ = gtk_color_button_get_alpha$MH();
        try {
            return (short)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_set_use_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1547.gtk_color_button_set_use_alpha$MH,"gtk_color_button_set_use_alpha");
    }
    /**
     * {@snippet :
     * void gtk_color_button_set_use_alpha(GtkColorButton* button, gboolean use_alpha);
     * }
     */
    public static void gtk_color_button_set_use_alpha(MemorySegment button, int use_alpha) {
        var mh$ = gtk_color_button_set_use_alpha$MH();
        try {
            mh$.invokeExact(button, use_alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_get_use_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1547.gtk_color_button_get_use_alpha$MH,"gtk_color_button_get_use_alpha");
    }
    /**
     * {@snippet :
     * gboolean gtk_color_button_get_use_alpha(GtkColorButton* button);
     * }
     */
    public static int gtk_color_button_get_use_alpha(MemorySegment button) {
        var mh$ = gtk_color_button_get_use_alpha$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_set_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1547.gtk_color_button_set_rgba$MH,"gtk_color_button_set_rgba");
    }
    /**
     * {@snippet :
     * void gtk_color_button_set_rgba(GtkColorButton* button, const GdkRGBA* rgba);
     * }
     */
    public static void gtk_color_button_set_rgba(MemorySegment button, MemorySegment rgba) {
        var mh$ = gtk_color_button_set_rgba$MH();
        try {
            mh$.invokeExact(button, rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_button_get_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1547.gtk_color_button_get_rgba$MH,"gtk_color_button_get_rgba");
    }
    /**
     * {@snippet :
     * void gtk_color_button_get_rgba(GtkColorButton* button, GdkRGBA* rgba);
     * }
     */
    public static void gtk_color_button_get_rgba(MemorySegment button, MemorySegment rgba) {
        var mh$ = gtk_color_button_get_rgba$MH();
        try {
            mh$.invokeExact(button, rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1547.gtk_color_chooser_get_type$MH,"gtk_color_chooser_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_color_chooser_get_type();
     * }
     */
    public static long gtk_color_chooser_get_type() {
        var mh$ = gtk_color_chooser_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_get_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1547.gtk_color_chooser_get_rgba$MH,"gtk_color_chooser_get_rgba");
    }
    /**
     * {@snippet :
     * void gtk_color_chooser_get_rgba(GtkColorChooser* chooser, GdkRGBA* color);
     * }
     */
    public static void gtk_color_chooser_get_rgba(MemorySegment chooser, MemorySegment color) {
        var mh$ = gtk_color_chooser_get_rgba$MH();
        try {
            mh$.invokeExact(chooser, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_set_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1548.gtk_color_chooser_set_rgba$MH,"gtk_color_chooser_set_rgba");
    }
    /**
     * {@snippet :
     * void gtk_color_chooser_set_rgba(GtkColorChooser* chooser, const GdkRGBA* color);
     * }
     */
    public static void gtk_color_chooser_set_rgba(MemorySegment chooser, MemorySegment color) {
        var mh$ = gtk_color_chooser_set_rgba$MH();
        try {
            mh$.invokeExact(chooser, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_get_use_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1548.gtk_color_chooser_get_use_alpha$MH,"gtk_color_chooser_get_use_alpha");
    }
    /**
     * {@snippet :
     * gboolean gtk_color_chooser_get_use_alpha(GtkColorChooser* chooser);
     * }
     */
    public static int gtk_color_chooser_get_use_alpha(MemorySegment chooser) {
        var mh$ = gtk_color_chooser_get_use_alpha$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_set_use_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1548.gtk_color_chooser_set_use_alpha$MH,"gtk_color_chooser_set_use_alpha");
    }
    /**
     * {@snippet :
     * void gtk_color_chooser_set_use_alpha(GtkColorChooser* chooser, gboolean use_alpha);
     * }
     */
    public static void gtk_color_chooser_set_use_alpha(MemorySegment chooser, int use_alpha) {
        var mh$ = gtk_color_chooser_set_use_alpha$MH();
        try {
            mh$.invokeExact(chooser, use_alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_add_palette$MH() {
        return RuntimeHelper.requireNonNull(constants$1548.gtk_color_chooser_add_palette$MH,"gtk_color_chooser_add_palette");
    }
    /**
     * {@snippet :
     * void gtk_color_chooser_add_palette(GtkColorChooser* chooser, GtkOrientation orientation, gint colors_per_line, gint n_colors, GdkRGBA* colors);
     * }
     */
    public static void gtk_color_chooser_add_palette(MemorySegment chooser, int orientation, int colors_per_line, int n_colors, MemorySegment colors) {
        var mh$ = gtk_color_chooser_add_palette$MH();
        try {
            mh$.invokeExact(chooser, orientation, colors_per_line, n_colors, colors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1548.gtk_color_chooser_dialog_get_type$MH,"gtk_color_chooser_dialog_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_color_chooser_dialog_get_type();
     * }
     */
    public static long gtk_color_chooser_dialog_get_type() {
        var mh$ = gtk_color_chooser_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1548.gtk_color_chooser_dialog_new$MH,"gtk_color_chooser_dialog_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_color_chooser_dialog_new(const gchar* title, GtkWindow* parent);
     * }
     */
    public static MemorySegment gtk_color_chooser_dialog_new(MemorySegment title, MemorySegment parent) {
        var mh$ = gtk_color_chooser_dialog_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(title, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_widget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.gtk_color_chooser_widget_get_type$MH,"gtk_color_chooser_widget_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_color_chooser_widget_get_type();
     * }
     */
    public static long gtk_color_chooser_widget_get_type() {
        var mh$ = gtk_color_chooser_widget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_color_chooser_widget_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.gtk_color_chooser_widget_new$MH,"gtk_color_chooser_widget_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_color_chooser_widget_new();
     * }
     */
    public static MemorySegment gtk_color_chooser_widget_new() {
        var mh$ = gtk_color_chooser_widget_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_hsv_to_rgb$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.gtk_hsv_to_rgb$MH,"gtk_hsv_to_rgb");
    }
    /**
     * {@snippet :
     * void gtk_hsv_to_rgb(gdouble h, gdouble s, gdouble v, gdouble* r, gdouble* g, gdouble* b);
     * }
     */
    public static void gtk_hsv_to_rgb(double h, double s, double v, MemorySegment r, MemorySegment g, MemorySegment b) {
        var mh$ = gtk_hsv_to_rgb$MH();
        try {
            mh$.invokeExact(h, s, v, r, g, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_rgb_to_hsv$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.gtk_rgb_to_hsv$MH,"gtk_rgb_to_hsv");
    }
    /**
     * {@snippet :
     * void gtk_rgb_to_hsv(gdouble r, gdouble g, gdouble b, gdouble* h, gdouble* s, gdouble* v);
     * }
     */
    public static void gtk_rgb_to_hsv(double r, double g, double b, MemorySegment h, MemorySegment s, MemorySegment v) {
        var mh$ = gtk_rgb_to_hsv$MH();
        try {
            mh$.invokeExact(r, g, b, h, s, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.gtk_combo_box_text_get_type$MH,"gtk_combo_box_text_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_combo_box_text_get_type();
     * }
     */
    public static long gtk_combo_box_text_get_type() {
        var mh$ = gtk_combo_box_text_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.gtk_combo_box_text_new$MH,"gtk_combo_box_text_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_combo_box_text_new();
     * }
     */
    public static MemorySegment gtk_combo_box_text_new() {
        var mh$ = gtk_combo_box_text_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_new_with_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.gtk_combo_box_text_new_with_entry$MH,"gtk_combo_box_text_new_with_entry");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_combo_box_text_new_with_entry();
     * }
     */
    public static MemorySegment gtk_combo_box_text_new_with_entry() {
        var mh$ = gtk_combo_box_text_new_with_entry$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_append_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.gtk_combo_box_text_append_text$MH,"gtk_combo_box_text_append_text");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_append_text(GtkComboBoxText* combo_box, const gchar* text);
     * }
     */
    public static void gtk_combo_box_text_append_text(MemorySegment combo_box, MemorySegment text) {
        var mh$ = gtk_combo_box_text_append_text$MH();
        try {
            mh$.invokeExact(combo_box, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_insert_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.gtk_combo_box_text_insert_text$MH,"gtk_combo_box_text_insert_text");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_insert_text(GtkComboBoxText* combo_box, gint position, const gchar* text);
     * }
     */
    public static void gtk_combo_box_text_insert_text(MemorySegment combo_box, int position, MemorySegment text) {
        var mh$ = gtk_combo_box_text_insert_text$MH();
        try {
            mh$.invokeExact(combo_box, position, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_prepend_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.gtk_combo_box_text_prepend_text$MH,"gtk_combo_box_text_prepend_text");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_prepend_text(GtkComboBoxText* combo_box, const gchar* text);
     * }
     */
    public static void gtk_combo_box_text_prepend_text(MemorySegment combo_box, MemorySegment text) {
        var mh$ = gtk_combo_box_text_prepend_text$MH();
        try {
            mh$.invokeExact(combo_box, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.gtk_combo_box_text_remove$MH,"gtk_combo_box_text_remove");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_remove(GtkComboBoxText* combo_box, gint position);
     * }
     */
    public static void gtk_combo_box_text_remove(MemorySegment combo_box, int position) {
        var mh$ = gtk_combo_box_text_remove$MH();
        try {
            mh$.invokeExact(combo_box, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_remove_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.gtk_combo_box_text_remove_all$MH,"gtk_combo_box_text_remove_all");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_remove_all(GtkComboBoxText* combo_box);
     * }
     */
    public static void gtk_combo_box_text_remove_all(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_text_remove_all$MH();
        try {
            mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_get_active_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1551.gtk_combo_box_text_get_active_text$MH,"gtk_combo_box_text_get_active_text");
    }
    /**
     * {@snippet :
     * gchar* gtk_combo_box_text_get_active_text(GtkComboBoxText* combo_box);
     * }
     */
    public static MemorySegment gtk_combo_box_text_get_active_text(MemorySegment combo_box) {
        var mh$ = gtk_combo_box_text_get_active_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(combo_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$1551.gtk_combo_box_text_insert$MH,"gtk_combo_box_text_insert");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_insert(GtkComboBoxText* combo_box, gint position, const gchar* id, const gchar* text);
     * }
     */
    public static void gtk_combo_box_text_insert(MemorySegment combo_box, int position, MemorySegment id, MemorySegment text) {
        var mh$ = gtk_combo_box_text_insert$MH();
        try {
            mh$.invokeExact(combo_box, position, id, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_append$MH() {
        return RuntimeHelper.requireNonNull(constants$1551.gtk_combo_box_text_append$MH,"gtk_combo_box_text_append");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_append(GtkComboBoxText* combo_box, const gchar* id, const gchar* text);
     * }
     */
    public static void gtk_combo_box_text_append(MemorySegment combo_box, MemorySegment id, MemorySegment text) {
        var mh$ = gtk_combo_box_text_append$MH();
        try {
            mh$.invokeExact(combo_box, id, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_combo_box_text_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$1551.gtk_combo_box_text_prepend$MH,"gtk_combo_box_text_prepend");
    }
    /**
     * {@snippet :
     * void gtk_combo_box_text_prepend(GtkComboBoxText* combo_box, const gchar* id, const gchar* text);
     * }
     */
    public static void gtk_combo_box_text_prepend(MemorySegment combo_box, MemorySegment id, MemorySegment text) {
        var mh$ = gtk_combo_box_text_prepend$MH();
        try {
            mh$.invokeExact(combo_box, id, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_CSS_SECTION_DOCUMENT = 0;
     * }
     */
    public static int GTK_CSS_SECTION_DOCUMENT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_CSS_SECTION_IMPORT = 1;
     * }
     */
    public static int GTK_CSS_SECTION_IMPORT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_CSS_SECTION_COLOR_DEFINITION = 2;
     * }
     */
    public static int GTK_CSS_SECTION_COLOR_DEFINITION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_CSS_SECTION_BINDING_SET = 3;
     * }
     */
    public static int GTK_CSS_SECTION_BINDING_SET() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_CSS_SECTION_RULESET = 4;
     * }
     */
    public static int GTK_CSS_SECTION_RULESET() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_CSS_SECTION_SELECTOR = 5;
     * }
     */
    public static int GTK_CSS_SECTION_SELECTOR() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .GTK_CSS_SECTION_DECLARATION = 6;
     * }
     */
    public static int GTK_CSS_SECTION_DECLARATION() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .GTK_CSS_SECTION_VALUE = 7;
     * }
     */
    public static int GTK_CSS_SECTION_VALUE() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .GTK_CSS_SECTION_KEYFRAMES = 8;
     * }
     */
    public static int GTK_CSS_SECTION_KEYFRAMES() {
        return (int)8L;
    }
    public static MethodHandle gtk_css_section_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1551.gtk_css_section_get_type$MH,"gtk_css_section_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_css_section_get_type();
     * }
     */
    public static long gtk_css_section_get_type() {
        var mh$ = gtk_css_section_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1551.gtk_css_section_ref$MH,"gtk_css_section_ref");
    }
    /**
     * {@snippet :
     * GtkCssSection* gtk_css_section_ref(GtkCssSection* section);
     * }
     */
    public static MemorySegment gtk_css_section_ref(MemorySegment section) {
        var mh$ = gtk_css_section_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1552.gtk_css_section_unref$MH,"gtk_css_section_unref");
    }
    /**
     * {@snippet :
     * void gtk_css_section_unref(GtkCssSection* section);
     * }
     */
    public static void gtk_css_section_unref(MemorySegment section) {
        var mh$ = gtk_css_section_unref$MH();
        try {
            mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_section_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1552.gtk_css_section_get_section_type$MH,"gtk_css_section_get_section_type");
    }
    /**
     * {@snippet :
     * GtkCssSectionType gtk_css_section_get_section_type(const GtkCssSection* section);
     * }
     */
    public static int gtk_css_section_get_section_type(MemorySegment section) {
        var mh$ = gtk_css_section_get_section_type$MH();
        try {
            return (int)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1552.gtk_css_section_get_parent$MH,"gtk_css_section_get_parent");
    }
    /**
     * {@snippet :
     * GtkCssSection* gtk_css_section_get_parent(const GtkCssSection* section);
     * }
     */
    public static MemorySegment gtk_css_section_get_parent(MemorySegment section) {
        var mh$ = gtk_css_section_get_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1552.gtk_css_section_get_file$MH,"gtk_css_section_get_file");
    }
    /**
     * {@snippet :
     * GFile* gtk_css_section_get_file(const GtkCssSection* section);
     * }
     */
    public static MemorySegment gtk_css_section_get_file(MemorySegment section) {
        var mh$ = gtk_css_section_get_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_start_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1552.gtk_css_section_get_start_line$MH,"gtk_css_section_get_start_line");
    }
    /**
     * {@snippet :
     * guint gtk_css_section_get_start_line(const GtkCssSection* section);
     * }
     */
    public static int gtk_css_section_get_start_line(MemorySegment section) {
        var mh$ = gtk_css_section_get_start_line$MH();
        try {
            return (int)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_start_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1552.gtk_css_section_get_start_position$MH,"gtk_css_section_get_start_position");
    }
    /**
     * {@snippet :
     * guint gtk_css_section_get_start_position(const GtkCssSection* section);
     * }
     */
    public static int gtk_css_section_get_start_position(MemorySegment section) {
        var mh$ = gtk_css_section_get_start_position$MH();
        try {
            return (int)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_end_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.gtk_css_section_get_end_line$MH,"gtk_css_section_get_end_line");
    }
    /**
     * {@snippet :
     * guint gtk_css_section_get_end_line(const GtkCssSection* section);
     * }
     */
    public static int gtk_css_section_get_end_line(MemorySegment section) {
        var mh$ = gtk_css_section_get_end_line$MH();
        try {
            return (int)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_end_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.gtk_css_section_get_end_position$MH,"gtk_css_section_get_end_position");
    }
    /**
     * {@snippet :
     * guint gtk_css_section_get_end_position(const GtkCssSection* section);
     * }
     */
    public static int gtk_css_section_get_end_position(MemorySegment section) {
        var mh$ = gtk_css_section_get_end_position$MH();
        try {
            return (int)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_CSS_PROVIDER_ERROR_FAILED = 0;
     * }
     */
    public static int GTK_CSS_PROVIDER_ERROR_FAILED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_CSS_PROVIDER_ERROR_SYNTAX = 1;
     * }
     */
    public static int GTK_CSS_PROVIDER_ERROR_SYNTAX() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_CSS_PROVIDER_ERROR_IMPORT = 2;
     * }
     */
    public static int GTK_CSS_PROVIDER_ERROR_IMPORT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_CSS_PROVIDER_ERROR_NAME = 3;
     * }
     */
    public static int GTK_CSS_PROVIDER_ERROR_NAME() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_CSS_PROVIDER_ERROR_DEPRECATED = 4;
     * }
     */
    public static int GTK_CSS_PROVIDER_ERROR_DEPRECATED() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_CSS_PROVIDER_ERROR_UNKNOWN_VALUE = 5;
     * }
     */
    public static int GTK_CSS_PROVIDER_ERROR_UNKNOWN_VALUE() {
        return (int)5L;
    }
    public static MethodHandle gtk_css_provider_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.gtk_css_provider_error_quark$MH,"gtk_css_provider_error_quark");
    }
    /**
     * {@snippet :
     * GQuark gtk_css_provider_error_quark();
     * }
     */
    public static int gtk_css_provider_error_quark() {
        var mh$ = gtk_css_provider_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.gtk_css_provider_get_type$MH,"gtk_css_provider_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_css_provider_get_type();
     * }
     */
    public static long gtk_css_provider_get_type() {
        var mh$ = gtk_css_provider_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.gtk_css_provider_new$MH,"gtk_css_provider_new");
    }
    /**
     * {@snippet :
     * GtkCssProvider* gtk_css_provider_new();
     * }
     */
    public static MemorySegment gtk_css_provider_new() {
        var mh$ = gtk_css_provider_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.gtk_css_provider_to_string$MH,"gtk_css_provider_to_string");
    }
    /**
     * {@snippet :
     * char* gtk_css_provider_to_string(GtkCssProvider* provider);
     * }
     */
    public static MemorySegment gtk_css_provider_to_string(MemorySegment provider) {
        var mh$ = gtk_css_provider_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(provider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1554.gtk_css_provider_load_from_data$MH,"gtk_css_provider_load_from_data");
    }
    /**
     * {@snippet :
     * gboolean gtk_css_provider_load_from_data(GtkCssProvider* css_provider, const gchar* data, gssize length, GError** error);
     * }
     */
    public static int gtk_css_provider_load_from_data(MemorySegment css_provider, MemorySegment data, long length, MemorySegment error) {
        var mh$ = gtk_css_provider_load_from_data$MH();
        try {
            return (int)mh$.invokeExact(css_provider, data, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1554.gtk_css_provider_load_from_file$MH,"gtk_css_provider_load_from_file");
    }
    /**
     * {@snippet :
     * gboolean gtk_css_provider_load_from_file(GtkCssProvider* css_provider, GFile* file, GError** error);
     * }
     */
    public static int gtk_css_provider_load_from_file(MemorySegment css_provider, MemorySegment file, MemorySegment error) {
        var mh$ = gtk_css_provider_load_from_file$MH();
        try {
            return (int)mh$.invokeExact(css_provider, file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1554.gtk_css_provider_load_from_path$MH,"gtk_css_provider_load_from_path");
    }
    /**
     * {@snippet :
     * gboolean gtk_css_provider_load_from_path(GtkCssProvider* css_provider, const gchar* path, GError** error);
     * }
     */
    public static int gtk_css_provider_load_from_path(MemorySegment css_provider, MemorySegment path, MemorySegment error) {
        var mh$ = gtk_css_provider_load_from_path$MH();
        try {
            return (int)mh$.invokeExact(css_provider, path, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1554.gtk_css_provider_load_from_resource$MH,"gtk_css_provider_load_from_resource");
    }
    /**
     * {@snippet :
     * void gtk_css_provider_load_from_resource(GtkCssProvider* css_provider, const gchar* resource_path);
     * }
     */
    public static void gtk_css_provider_load_from_resource(MemorySegment css_provider, MemorySegment resource_path) {
        var mh$ = gtk_css_provider_load_from_resource$MH();
        try {
            mh$.invokeExact(css_provider, resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1554.gtk_css_provider_get_default$MH,"gtk_css_provider_get_default");
    }
    /**
     * {@snippet :
     * GtkCssProvider* gtk_css_provider_get_default();
     * }
     */
    public static MemorySegment gtk_css_provider_get_default() {
        var mh$ = gtk_css_provider_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_get_named$MH() {
        return RuntimeHelper.requireNonNull(constants$1554.gtk_css_provider_get_named$MH,"gtk_css_provider_get_named");
    }
    /**
     * {@snippet :
     * GtkCssProvider* gtk_css_provider_get_named(const gchar* name, const gchar* variant);
     * }
     */
    public static MemorySegment gtk_css_provider_get_named(MemorySegment name, MemorySegment variant) {
        var mh$ = gtk_css_provider_get_named$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_MISC = 1;
     * }
     */
    public static int GTK_DEBUG_MISC() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_PLUGSOCKET = 2;
     * }
     */
    public static int GTK_DEBUG_PLUGSOCKET() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_TEXT = 4;
     * }
     */
    public static int GTK_DEBUG_TEXT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_TREE = 8;
     * }
     */
    public static int GTK_DEBUG_TREE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_UPDATES = 16;
     * }
     */
    public static int GTK_DEBUG_UPDATES() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_KEYBINDINGS = 32;
     * }
     */
    public static int GTK_DEBUG_KEYBINDINGS() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_MULTIHEAD = 64;
     * }
     */
    public static int GTK_DEBUG_MULTIHEAD() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_MODULES = 128;
     * }
     */
    public static int GTK_DEBUG_MODULES() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_GEOMETRY = 256;
     * }
     */
    public static int GTK_DEBUG_GEOMETRY() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_ICONTHEME = 512;
     * }
     */
    public static int GTK_DEBUG_ICONTHEME() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_PRINTING = 1024;
     * }
     */
    public static int GTK_DEBUG_PRINTING() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_BUILDER = 2048;
     * }
     */
    public static int GTK_DEBUG_BUILDER() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_SIZE_REQUEST = 4096;
     * }
     */
    public static int GTK_DEBUG_SIZE_REQUEST() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_NO_CSS_CACHE = 8192;
     * }
     */
    public static int GTK_DEBUG_NO_CSS_CACHE() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_BASELINES = 16384;
     * }
     */
    public static int GTK_DEBUG_BASELINES() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_PIXEL_CACHE = 32768;
     * }
     */
    public static int GTK_DEBUG_PIXEL_CACHE() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_NO_PIXEL_CACHE = 65536;
     * }
     */
    public static int GTK_DEBUG_NO_PIXEL_CACHE() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_INTERACTIVE = 131072;
     * }
     */
    public static int GTK_DEBUG_INTERACTIVE() {
        return (int)131072L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_TOUCHSCREEN = 262144;
     * }
     */
    public static int GTK_DEBUG_TOUCHSCREEN() {
        return (int)262144L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_ACTIONS = 524288;
     * }
     */
    public static int GTK_DEBUG_ACTIONS() {
        return (int)524288L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_RESIZE = 1048576;
     * }
     */
    public static int GTK_DEBUG_RESIZE() {
        return (int)1048576L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEBUG_LAYOUT = 2097152;
     * }
     */
    public static int GTK_DEBUG_LAYOUT() {
        return (int)2097152L;
    }
    public static MethodHandle gtk_get_debug_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1555.gtk_get_debug_flags$MH,"gtk_get_debug_flags");
    }
    /**
     * {@snippet :
     * guint gtk_get_debug_flags();
     * }
     */
    public static int gtk_get_debug_flags() {
        var mh$ = gtk_get_debug_flags$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_set_debug_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1555.gtk_set_debug_flags$MH,"gtk_set_debug_flags");
    }
    /**
     * {@snippet :
     * void gtk_set_debug_flags(guint flags);
     * }
     */
    public static void gtk_set_debug_flags(int flags) {
        var mh$ = gtk_set_debug_flags$MH();
        try {
            mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_DEST_DEFAULT_MOTION = 1;
     * }
     */
    public static int GTK_DEST_DEFAULT_MOTION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEST_DEFAULT_HIGHLIGHT = 2;
     * }
     */
    public static int GTK_DEST_DEFAULT_HIGHLIGHT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEST_DEFAULT_DROP = 4;
     * }
     */
    public static int GTK_DEST_DEFAULT_DROP() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_DEST_DEFAULT_ALL = 7;
     * }
     */
    public static int GTK_DEST_DEFAULT_ALL() {
        return (int)7L;
    }
    public static MethodHandle gtk_drag_dest_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1555.gtk_drag_dest_set$MH,"gtk_drag_dest_set");
    }
    /**
     * {@snippet :
     * void gtk_drag_dest_set(GtkWidget* widget, GtkDestDefaults flags, const GtkTargetEntry* targets, gint n_targets, GdkDragAction actions);
     * }
     */
    public static void gtk_drag_dest_set(MemorySegment widget, int flags, MemorySegment targets, int n_targets, int actions) {
        var mh$ = gtk_drag_dest_set$MH();
        try {
            mh$.invokeExact(widget, flags, targets, n_targets, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_set_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1555.gtk_drag_dest_set_proxy$MH,"gtk_drag_dest_set_proxy");
    }
    /**
     * {@snippet :
     * void gtk_drag_dest_set_proxy(GtkWidget* widget, GdkWindow* proxy_window, GdkDragProtocol protocol, gboolean use_coordinates);
     * }
     */
    public static void gtk_drag_dest_set_proxy(MemorySegment widget, MemorySegment proxy_window, int protocol, int use_coordinates) {
        var mh$ = gtk_drag_dest_set_proxy$MH();
        try {
            mh$.invokeExact(widget, proxy_window, protocol, use_coordinates);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_unset$MH() {
        return RuntimeHelper.requireNonNull(constants$1555.gtk_drag_dest_unset$MH,"gtk_drag_dest_unset");
    }
    /**
     * {@snippet :
     * void gtk_drag_dest_unset(GtkWidget* widget);
     * }
     */
    public static void gtk_drag_dest_unset(MemorySegment widget) {
        var mh$ = gtk_drag_dest_unset$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_find_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1555.gtk_drag_dest_find_target$MH,"gtk_drag_dest_find_target");
    }
    /**
     * {@snippet :
     * GdkAtom gtk_drag_dest_find_target(GtkWidget* widget, GdkDragContext* context, GtkTargetList* target_list);
     * }
     */
    public static MemorySegment gtk_drag_dest_find_target(MemorySegment widget, MemorySegment context, MemorySegment target_list) {
        var mh$ = gtk_drag_dest_find_target$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, context, target_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_get_target_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1556.gtk_drag_dest_get_target_list$MH,"gtk_drag_dest_get_target_list");
    }
    /**
     * {@snippet :
     * GtkTargetList* gtk_drag_dest_get_target_list(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_drag_dest_get_target_list(MemorySegment widget) {
        var mh$ = gtk_drag_dest_get_target_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_set_target_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1556.gtk_drag_dest_set_target_list$MH,"gtk_drag_dest_set_target_list");
    }
    /**
     * {@snippet :
     * void gtk_drag_dest_set_target_list(GtkWidget* widget, GtkTargetList* target_list);
     * }
     */
    public static void gtk_drag_dest_set_target_list(MemorySegment widget, MemorySegment target_list) {
        var mh$ = gtk_drag_dest_set_target_list$MH();
        try {
            mh$.invokeExact(widget, target_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_add_text_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$1556.gtk_drag_dest_add_text_targets$MH,"gtk_drag_dest_add_text_targets");
    }
    /**
     * {@snippet :
     * void gtk_drag_dest_add_text_targets(GtkWidget* widget);
     * }
     */
    public static void gtk_drag_dest_add_text_targets(MemorySegment widget) {
        var mh$ = gtk_drag_dest_add_text_targets$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_add_image_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$1556.gtk_drag_dest_add_image_targets$MH,"gtk_drag_dest_add_image_targets");
    }
    /**
     * {@snippet :
     * void gtk_drag_dest_add_image_targets(GtkWidget* widget);
     * }
     */
    public static void gtk_drag_dest_add_image_targets(MemorySegment widget) {
        var mh$ = gtk_drag_dest_add_image_targets$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_add_uri_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$1556.gtk_drag_dest_add_uri_targets$MH,"gtk_drag_dest_add_uri_targets");
    }
    /**
     * {@snippet :
     * void gtk_drag_dest_add_uri_targets(GtkWidget* widget);
     * }
     */
    public static void gtk_drag_dest_add_uri_targets(MemorySegment widget) {
        var mh$ = gtk_drag_dest_add_uri_targets$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_set_track_motion$MH() {
        return RuntimeHelper.requireNonNull(constants$1556.gtk_drag_dest_set_track_motion$MH,"gtk_drag_dest_set_track_motion");
    }
    /**
     * {@snippet :
     * void gtk_drag_dest_set_track_motion(GtkWidget* widget, gboolean track_motion);
     * }
     */
    public static void gtk_drag_dest_set_track_motion(MemorySegment widget, int track_motion) {
        var mh$ = gtk_drag_dest_set_track_motion$MH();
        try {
            mh$.invokeExact(widget, track_motion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_dest_get_track_motion$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.gtk_drag_dest_get_track_motion$MH,"gtk_drag_dest_get_track_motion");
    }
    /**
     * {@snippet :
     * gboolean gtk_drag_dest_get_track_motion(GtkWidget* widget);
     * }
     */
    public static int gtk_drag_dest_get_track_motion(MemorySegment widget) {
        var mh$ = gtk_drag_dest_get_track_motion$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.gtk_drag_source_set$MH,"gtk_drag_source_set");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_set(GtkWidget* widget, GdkModifierType start_button_mask, const GtkTargetEntry* targets, gint n_targets, GdkDragAction actions);
     * }
     */
    public static void gtk_drag_source_set(MemorySegment widget, int start_button_mask, MemorySegment targets, int n_targets, int actions) {
        var mh$ = gtk_drag_source_set$MH();
        try {
            mh$.invokeExact(widget, start_button_mask, targets, n_targets, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_unset$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.gtk_drag_source_unset$MH,"gtk_drag_source_unset");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_unset(GtkWidget* widget);
     * }
     */
    public static void gtk_drag_source_unset(MemorySegment widget) {
        var mh$ = gtk_drag_source_unset$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_get_target_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.gtk_drag_source_get_target_list$MH,"gtk_drag_source_get_target_list");
    }
    /**
     * {@snippet :
     * GtkTargetList* gtk_drag_source_get_target_list(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_drag_source_get_target_list(MemorySegment widget) {
        var mh$ = gtk_drag_source_get_target_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_target_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.gtk_drag_source_set_target_list$MH,"gtk_drag_source_set_target_list");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_set_target_list(GtkWidget* widget, GtkTargetList* target_list);
     * }
     */
    public static void gtk_drag_source_set_target_list(MemorySegment widget, MemorySegment target_list) {
        var mh$ = gtk_drag_source_set_target_list$MH();
        try {
            mh$.invokeExact(widget, target_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_add_text_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.gtk_drag_source_add_text_targets$MH,"gtk_drag_source_add_text_targets");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_add_text_targets(GtkWidget* widget);
     * }
     */
    public static void gtk_drag_source_add_text_targets(MemorySegment widget) {
        var mh$ = gtk_drag_source_add_text_targets$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_add_image_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.gtk_drag_source_add_image_targets$MH,"gtk_drag_source_add_image_targets");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_add_image_targets(GtkWidget* widget);
     * }
     */
    public static void gtk_drag_source_add_image_targets(MemorySegment widget) {
        var mh$ = gtk_drag_source_add_image_targets$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_add_uri_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.gtk_drag_source_add_uri_targets$MH,"gtk_drag_source_add_uri_targets");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_add_uri_targets(GtkWidget* widget);
     * }
     */
    public static void gtk_drag_source_add_uri_targets(MemorySegment widget) {
        var mh$ = gtk_drag_source_add_uri_targets$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_icon_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.gtk_drag_source_set_icon_pixbuf$MH,"gtk_drag_source_set_icon_pixbuf");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_set_icon_pixbuf(GtkWidget* widget, GdkPixbuf* pixbuf);
     * }
     */
    public static void gtk_drag_source_set_icon_pixbuf(MemorySegment widget, MemorySegment pixbuf) {
        var mh$ = gtk_drag_source_set_icon_pixbuf$MH();
        try {
            mh$.invokeExact(widget, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_icon_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.gtk_drag_source_set_icon_stock$MH,"gtk_drag_source_set_icon_stock");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_set_icon_stock(GtkWidget* widget, const gchar* stock_id);
     * }
     */
    public static void gtk_drag_source_set_icon_stock(MemorySegment widget, MemorySegment stock_id) {
        var mh$ = gtk_drag_source_set_icon_stock$MH();
        try {
            mh$.invokeExact(widget, stock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.gtk_drag_source_set_icon_name$MH,"gtk_drag_source_set_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_set_icon_name(GtkWidget* widget, const gchar* icon_name);
     * }
     */
    public static void gtk_drag_source_set_icon_name(MemorySegment widget, MemorySegment icon_name) {
        var mh$ = gtk_drag_source_set_icon_name$MH();
        try {
            mh$.invokeExact(widget, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_icon_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.gtk_drag_source_set_icon_gicon$MH,"gtk_drag_source_set_icon_gicon");
    }
    /**
     * {@snippet :
     * void gtk_drag_source_set_icon_gicon(GtkWidget* widget, GIcon* icon);
     * }
     */
    public static void gtk_drag_source_set_icon_gicon(MemorySegment widget, MemorySegment icon) {
        var mh$ = gtk_drag_source_set_icon_gicon$MH();
        try {
            mh$.invokeExact(widget, icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.gtk_drawing_area_get_type$MH,"gtk_drawing_area_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_drawing_area_get_type();
     * }
     */
    public static long gtk_drawing_area_get_type() {
        var mh$ = gtk_drawing_area_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.gtk_drawing_area_new$MH,"gtk_drawing_area_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_drawing_area_new();
     * }
     */
    public static MemorySegment gtk_drawing_area_new() {
        var mh$ = gtk_drawing_area_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.gtk_event_box_get_type$MH,"gtk_event_box_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_event_box_get_type();
     * }
     */
    public static long gtk_event_box_get_type() {
        var mh$ = gtk_event_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.gtk_event_box_new$MH,"gtk_event_box_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_event_box_new();
     * }
     */
    public static MemorySegment gtk_event_box_new() {
        var mh$ = gtk_event_box_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_box_get_visible_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.gtk_event_box_get_visible_window$MH,"gtk_event_box_get_visible_window");
    }
    /**
     * {@snippet :
     * gboolean gtk_event_box_get_visible_window(GtkEventBox* event_box);
     * }
     */
    public static int gtk_event_box_get_visible_window(MemorySegment event_box) {
        var mh$ = gtk_event_box_get_visible_window$MH();
        try {
            return (int)mh$.invokeExact(event_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_box_set_visible_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.gtk_event_box_set_visible_window$MH,"gtk_event_box_set_visible_window");
    }
    /**
     * {@snippet :
     * void gtk_event_box_set_visible_window(GtkEventBox* event_box, gboolean visible_window);
     * }
     */
    public static void gtk_event_box_set_visible_window(MemorySegment event_box, int visible_window) {
        var mh$ = gtk_event_box_set_visible_window$MH();
        try {
            mh$.invokeExact(event_box, visible_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_box_get_above_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.gtk_event_box_get_above_child$MH,"gtk_event_box_get_above_child");
    }
    /**
     * {@snippet :
     * gboolean gtk_event_box_get_above_child(GtkEventBox* event_box);
     * }
     */
    public static int gtk_event_box_get_above_child(MemorySegment event_box) {
        var mh$ = gtk_event_box_get_above_child$MH();
        try {
            return (int)mh$.invokeExact(event_box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_box_set_above_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.gtk_event_box_set_above_child$MH,"gtk_event_box_set_above_child");
    }
    /**
     * {@snippet :
     * void gtk_event_box_set_above_child(GtkEventBox* event_box, gboolean above_child);
     * }
     */
    public static void gtk_event_box_set_above_child(MemorySegment event_box, int above_child) {
        var mh$ = gtk_event_box_set_above_child$MH();
        try {
            mh$.invokeExact(event_box, above_child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.gtk_event_controller_get_type$MH,"gtk_event_controller_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_event_controller_get_type();
     * }
     */
    public static long gtk_event_controller_get_type() {
        var mh$ = gtk_event_controller_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.gtk_event_controller_get_widget$MH,"gtk_event_controller_get_widget");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_event_controller_get_widget(GtkEventController* controller);
     * }
     */
    public static MemorySegment gtk_event_controller_get_widget(MemorySegment controller) {
        var mh$ = gtk_event_controller_get_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_handle_event$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.gtk_event_controller_handle_event$MH,"gtk_event_controller_handle_event");
    }
    /**
     * {@snippet :
     * gboolean gtk_event_controller_handle_event(GtkEventController* controller, const GdkEvent* event);
     * }
     */
    public static int gtk_event_controller_handle_event(MemorySegment controller, MemorySegment event) {
        var mh$ = gtk_event_controller_handle_event$MH();
        try {
            return (int)mh$.invokeExact(controller, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.gtk_event_controller_reset$MH,"gtk_event_controller_reset");
    }
    /**
     * {@snippet :
     * void gtk_event_controller_reset(GtkEventController* controller);
     * }
     */
    public static void gtk_event_controller_reset(MemorySegment controller) {
        var mh$ = gtk_event_controller_reset$MH();
        try {
            mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_propagation_phase$MH() {
        return RuntimeHelper.requireNonNull(constants$1561.gtk_event_controller_get_propagation_phase$MH,"gtk_event_controller_get_propagation_phase");
    }
    /**
     * {@snippet :
     * GtkPropagationPhase gtk_event_controller_get_propagation_phase(GtkEventController* controller);
     * }
     */
    public static int gtk_event_controller_get_propagation_phase(MemorySegment controller) {
        var mh$ = gtk_event_controller_get_propagation_phase$MH();
        try {
            return (int)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_set_propagation_phase$MH() {
        return RuntimeHelper.requireNonNull(constants$1561.gtk_event_controller_set_propagation_phase$MH,"gtk_event_controller_set_propagation_phase");
    }
    /**
     * {@snippet :
     * void gtk_event_controller_set_propagation_phase(GtkEventController* controller, GtkPropagationPhase phase);
     * }
     */
    public static void gtk_event_controller_set_propagation_phase(MemorySegment controller, int phase) {
        var mh$ = gtk_event_controller_set_propagation_phase$MH();
        try {
            mh$.invokeExact(controller, phase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1561.gtk_event_controller_key_get_type$MH,"gtk_event_controller_key_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_event_controller_key_get_type();
     * }
     */
    public static long gtk_event_controller_key_get_type() {
        var mh$ = gtk_event_controller_key_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1561.gtk_event_controller_key_new$MH,"gtk_event_controller_key_new");
    }
    /**
     * {@snippet :
     * GtkEventController* gtk_event_controller_key_new(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_event_controller_key_new(MemorySegment widget) {
        var mh$ = gtk_event_controller_key_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_set_im_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1561.gtk_event_controller_key_set_im_context$MH,"gtk_event_controller_key_set_im_context");
    }
    /**
     * {@snippet :
     * void gtk_event_controller_key_set_im_context(GtkEventControllerKey* controller, GtkIMContext* im_context);
     * }
     */
    public static void gtk_event_controller_key_set_im_context(MemorySegment controller, MemorySegment im_context) {
        var mh$ = gtk_event_controller_key_set_im_context$MH();
        try {
            mh$.invokeExact(controller, im_context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_get_im_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1561.gtk_event_controller_key_get_im_context$MH,"gtk_event_controller_key_get_im_context");
    }
    /**
     * {@snippet :
     * GtkIMContext* gtk_event_controller_key_get_im_context(GtkEventControllerKey* controller);
     * }
     */
    public static MemorySegment gtk_event_controller_key_get_im_context(MemorySegment controller) {
        var mh$ = gtk_event_controller_key_get_im_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_forward$MH() {
        return RuntimeHelper.requireNonNull(constants$1562.gtk_event_controller_key_forward$MH,"gtk_event_controller_key_forward");
    }
    /**
     * {@snippet :
     * gboolean gtk_event_controller_key_forward(GtkEventControllerKey* controller, GtkWidget* widget);
     * }
     */
    public static int gtk_event_controller_key_forward(MemorySegment controller, MemorySegment widget) {
        var mh$ = gtk_event_controller_key_forward$MH();
        try {
            return (int)mh$.invokeExact(controller, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_get_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1562.gtk_event_controller_key_get_group$MH,"gtk_event_controller_key_get_group");
    }
    /**
     * {@snippet :
     * guint gtk_event_controller_key_get_group(GtkEventControllerKey* controller);
     * }
     */
    public static int gtk_event_controller_key_get_group(MemorySegment controller) {
        var mh$ = gtk_event_controller_key_get_group$MH();
        try {
            return (int)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_motion_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1562.gtk_event_controller_motion_get_type$MH,"gtk_event_controller_motion_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_event_controller_motion_get_type();
     * }
     */
    public static long gtk_event_controller_motion_get_type() {
        var mh$ = gtk_event_controller_motion_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_motion_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1562.gtk_event_controller_motion_new$MH,"gtk_event_controller_motion_new");
    }
    /**
     * {@snippet :
     * GtkEventController* gtk_event_controller_motion_new(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_event_controller_motion_new(MemorySegment widget) {
        var mh$ = gtk_event_controller_motion_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_EVENT_CONTROLLER_SCROLL_NONE = 0;
     * }
     */
    public static int GTK_EVENT_CONTROLLER_SCROLL_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_EVENT_CONTROLLER_SCROLL_VERTICAL = 1;
     * }
     */
    public static int GTK_EVENT_CONTROLLER_SCROLL_VERTICAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_EVENT_CONTROLLER_SCROLL_HORIZONTAL = 2;
     * }
     */
    public static int GTK_EVENT_CONTROLLER_SCROLL_HORIZONTAL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_EVENT_CONTROLLER_SCROLL_DISCRETE = 4;
     * }
     */
    public static int GTK_EVENT_CONTROLLER_SCROLL_DISCRETE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_EVENT_CONTROLLER_SCROLL_KINETIC = 8;
     * }
     */
    public static int GTK_EVENT_CONTROLLER_SCROLL_KINETIC() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .GTK_EVENT_CONTROLLER_SCROLL_BOTH_AXES = 3;
     * }
     */
    public static int GTK_EVENT_CONTROLLER_SCROLL_BOTH_AXES() {
        return (int)3L;
    }
    public static MethodHandle gtk_event_controller_scroll_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1562.gtk_event_controller_scroll_get_type$MH,"gtk_event_controller_scroll_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_event_controller_scroll_get_type();
     * }
     */
    public static long gtk_event_controller_scroll_get_type() {
        var mh$ = gtk_event_controller_scroll_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_scroll_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1562.gtk_event_controller_scroll_new$MH,"gtk_event_controller_scroll_new");
    }
    /**
     * {@snippet :
     * GtkEventController* gtk_event_controller_scroll_new(GtkWidget* widget, GtkEventControllerScrollFlags flags);
     * }
     */
    public static MemorySegment gtk_event_controller_scroll_new(MemorySegment widget, int flags) {
        var mh$ = gtk_event_controller_scroll_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_scroll_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1563.gtk_event_controller_scroll_set_flags$MH,"gtk_event_controller_scroll_set_flags");
    }
    /**
     * {@snippet :
     * void gtk_event_controller_scroll_set_flags(GtkEventControllerScroll* scroll, GtkEventControllerScrollFlags flags);
     * }
     */
    public static void gtk_event_controller_scroll_set_flags(MemorySegment scroll, int flags) {
        var mh$ = gtk_event_controller_scroll_set_flags$MH();
        try {
            mh$.invokeExact(scroll, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_scroll_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1563.gtk_event_controller_scroll_get_flags$MH,"gtk_event_controller_scroll_get_flags");
    }
    /**
     * {@snippet :
     * GtkEventControllerScrollFlags gtk_event_controller_scroll_get_flags(GtkEventControllerScroll* scroll);
     * }
     */
    public static int gtk_event_controller_scroll_get_flags(MemorySegment scroll) {
        var mh$ = gtk_event_controller_scroll_get_flags$MH();
        try {
            return (int)mh$.invokeExact(scroll);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1563.gtk_expander_get_type$MH,"gtk_expander_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_expander_get_type();
     * }
     */
    public static long gtk_expander_get_type() {
        var mh$ = gtk_expander_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1563.gtk_expander_new$MH,"gtk_expander_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_expander_new(const gchar* label);
     * }
     */
    public static MemorySegment gtk_expander_new(MemorySegment label) {
        var mh$ = gtk_expander_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$1563.gtk_expander_new_with_mnemonic$MH,"gtk_expander_new_with_mnemonic");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_expander_new_with_mnemonic(const gchar* label);
     * }
     */
    public static MemorySegment gtk_expander_new_with_mnemonic(MemorySegment label) {
        var mh$ = gtk_expander_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_expanded$MH() {
        return RuntimeHelper.requireNonNull(constants$1563.gtk_expander_set_expanded$MH,"gtk_expander_set_expanded");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_expanded(GtkExpander* expander, gboolean expanded);
     * }
     */
    public static void gtk_expander_set_expanded(MemorySegment expander, int expanded) {
        var mh$ = gtk_expander_set_expanded$MH();
        try {
            mh$.invokeExact(expander, expanded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_expanded$MH() {
        return RuntimeHelper.requireNonNull(constants$1564.gtk_expander_get_expanded$MH,"gtk_expander_get_expanded");
    }
    /**
     * {@snippet :
     * gboolean gtk_expander_get_expanded(GtkExpander* expander);
     * }
     */
    public static int gtk_expander_get_expanded(MemorySegment expander) {
        var mh$ = gtk_expander_get_expanded$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1564.gtk_expander_set_spacing$MH,"gtk_expander_set_spacing");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_spacing(GtkExpander* expander, gint spacing);
     * }
     */
    public static void gtk_expander_set_spacing(MemorySegment expander, int spacing) {
        var mh$ = gtk_expander_set_spacing$MH();
        try {
            mh$.invokeExact(expander, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1564.gtk_expander_get_spacing$MH,"gtk_expander_get_spacing");
    }
    /**
     * {@snippet :
     * gint gtk_expander_get_spacing(GtkExpander* expander);
     * }
     */
    public static int gtk_expander_get_spacing(MemorySegment expander) {
        var mh$ = gtk_expander_get_spacing$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1564.gtk_expander_set_label$MH,"gtk_expander_set_label");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_label(GtkExpander* expander, const gchar* label);
     * }
     */
    public static void gtk_expander_set_label(MemorySegment expander, MemorySegment label) {
        var mh$ = gtk_expander_set_label$MH();
        try {
            mh$.invokeExact(expander, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1564.gtk_expander_get_label$MH,"gtk_expander_get_label");
    }
    /**
     * {@snippet :
     * const gchar* gtk_expander_get_label(GtkExpander* expander);
     * }
     */
    public static MemorySegment gtk_expander_get_label(MemorySegment expander) {
        var mh$ = gtk_expander_get_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1564.gtk_expander_set_use_underline$MH,"gtk_expander_set_use_underline");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_use_underline(GtkExpander* expander, gboolean use_underline);
     * }
     */
    public static void gtk_expander_set_use_underline(MemorySegment expander, int use_underline) {
        var mh$ = gtk_expander_set_use_underline$MH();
        try {
            mh$.invokeExact(expander, use_underline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1565.gtk_expander_get_use_underline$MH,"gtk_expander_get_use_underline");
    }
    /**
     * {@snippet :
     * gboolean gtk_expander_get_use_underline(GtkExpander* expander);
     * }
     */
    public static int gtk_expander_get_use_underline(MemorySegment expander) {
        var mh$ = gtk_expander_get_use_underline$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_use_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1565.gtk_expander_set_use_markup$MH,"gtk_expander_set_use_markup");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_use_markup(GtkExpander* expander, gboolean use_markup);
     * }
     */
    public static void gtk_expander_set_use_markup(MemorySegment expander, int use_markup) {
        var mh$ = gtk_expander_set_use_markup$MH();
        try {
            mh$.invokeExact(expander, use_markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_use_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$1565.gtk_expander_get_use_markup$MH,"gtk_expander_get_use_markup");
    }
    /**
     * {@snippet :
     * gboolean gtk_expander_get_use_markup(GtkExpander* expander);
     * }
     */
    public static int gtk_expander_get_use_markup(MemorySegment expander) {
        var mh$ = gtk_expander_get_use_markup$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1565.gtk_expander_set_label_widget$MH,"gtk_expander_set_label_widget");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_label_widget(GtkExpander* expander, GtkWidget* label_widget);
     * }
     */
    public static void gtk_expander_set_label_widget(MemorySegment expander, MemorySegment label_widget) {
        var mh$ = gtk_expander_set_label_widget$MH();
        try {
            mh$.invokeExact(expander, label_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1565.gtk_expander_get_label_widget$MH,"gtk_expander_get_label_widget");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_expander_get_label_widget(GtkExpander* expander);
     * }
     */
    public static MemorySegment gtk_expander_get_label_widget(MemorySegment expander) {
        var mh$ = gtk_expander_get_label_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_label_fill$MH() {
        return RuntimeHelper.requireNonNull(constants$1565.gtk_expander_set_label_fill$MH,"gtk_expander_set_label_fill");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_label_fill(GtkExpander* expander, gboolean label_fill);
     * }
     */
    public static void gtk_expander_set_label_fill(MemorySegment expander, int label_fill) {
        var mh$ = gtk_expander_set_label_fill$MH();
        try {
            mh$.invokeExact(expander, label_fill);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_label_fill$MH() {
        return RuntimeHelper.requireNonNull(constants$1566.gtk_expander_get_label_fill$MH,"gtk_expander_get_label_fill");
    }
    /**
     * {@snippet :
     * gboolean gtk_expander_get_label_fill(GtkExpander* expander);
     * }
     */
    public static int gtk_expander_get_label_fill(MemorySegment expander) {
        var mh$ = gtk_expander_get_label_fill$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_resize_toplevel$MH() {
        return RuntimeHelper.requireNonNull(constants$1566.gtk_expander_set_resize_toplevel$MH,"gtk_expander_set_resize_toplevel");
    }
    /**
     * {@snippet :
     * void gtk_expander_set_resize_toplevel(GtkExpander* expander, gboolean resize_toplevel);
     * }
     */
    public static void gtk_expander_set_resize_toplevel(MemorySegment expander, int resize_toplevel) {
        var mh$ = gtk_expander_set_resize_toplevel$MH();
        try {
            mh$.invokeExact(expander, resize_toplevel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_resize_toplevel$MH() {
        return RuntimeHelper.requireNonNull(constants$1566.gtk_expander_get_resize_toplevel$MH,"gtk_expander_get_resize_toplevel");
    }
    /**
     * {@snippet :
     * gboolean gtk_expander_get_resize_toplevel(GtkExpander* expander);
     * }
     */
    public static int gtk_expander_get_resize_toplevel(MemorySegment expander) {
        var mh$ = gtk_expander_get_resize_toplevel$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1566.gtk_fixed_get_type$MH,"gtk_fixed_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_fixed_get_type();
     * }
     */
    public static long gtk_fixed_get_type() {
        var mh$ = gtk_fixed_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1566.gtk_fixed_new$MH,"gtk_fixed_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_fixed_new();
     * }
     */
    public static MemorySegment gtk_fixed_new() {
        var mh$ = gtk_fixed_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_put$MH() {
        return RuntimeHelper.requireNonNull(constants$1566.gtk_fixed_put$MH,"gtk_fixed_put");
    }
    /**
     * {@snippet :
     * void gtk_fixed_put(GtkFixed* fixed, GtkWidget* widget, gint x, gint y);
     * }
     */
    public static void gtk_fixed_put(MemorySegment fixed, MemorySegment widget, int x, int y) {
        var mh$ = gtk_fixed_put$MH();
        try {
            mh$.invokeExact(fixed, widget, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_move$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.gtk_fixed_move$MH,"gtk_fixed_move");
    }
    /**
     * {@snippet :
     * void gtk_fixed_move(GtkFixed* fixed, GtkWidget* widget, gint x, gint y);
     * }
     */
    public static void gtk_fixed_move(MemorySegment fixed, MemorySegment widget, int x, int y) {
        var mh$ = gtk_fixed_move$MH();
        try {
            mh$.invokeExact(fixed, widget, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_FILTER_FILENAME = 1;
     * }
     */
    public static int GTK_FILE_FILTER_FILENAME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_FILTER_URI = 2;
     * }
     */
    public static int GTK_FILE_FILTER_URI() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_FILTER_DISPLAY_NAME = 4;
     * }
     */
    public static int GTK_FILE_FILTER_DISPLAY_NAME() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_FILTER_MIME_TYPE = 8;
     * }
     */
    public static int GTK_FILE_FILTER_MIME_TYPE() {
        return (int)8L;
    }
    public static MethodHandle gtk_file_filter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.gtk_file_filter_get_type$MH,"gtk_file_filter_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_file_filter_get_type();
     * }
     */
    public static long gtk_file_filter_get_type() {
        var mh$ = gtk_file_filter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.gtk_file_filter_new$MH,"gtk_file_filter_new");
    }
    /**
     * {@snippet :
     * GtkFileFilter* gtk_file_filter_new();
     * }
     */
    public static MemorySegment gtk_file_filter_new() {
        var mh$ = gtk_file_filter_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.gtk_file_filter_set_name$MH,"gtk_file_filter_set_name");
    }
    /**
     * {@snippet :
     * void gtk_file_filter_set_name(GtkFileFilter* filter, const gchar* name);
     * }
     */
    public static void gtk_file_filter_set_name(MemorySegment filter, MemorySegment name) {
        var mh$ = gtk_file_filter_set_name$MH();
        try {
            mh$.invokeExact(filter, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.gtk_file_filter_get_name$MH,"gtk_file_filter_get_name");
    }
    /**
     * {@snippet :
     * const gchar* gtk_file_filter_get_name(GtkFileFilter* filter);
     * }
     */
    public static MemorySegment gtk_file_filter_get_name(MemorySegment filter) {
        var mh$ = gtk_file_filter_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.gtk_file_filter_add_mime_type$MH,"gtk_file_filter_add_mime_type");
    }
    /**
     * {@snippet :
     * void gtk_file_filter_add_mime_type(GtkFileFilter* filter, const gchar* mime_type);
     * }
     */
    public static void gtk_file_filter_add_mime_type(MemorySegment filter, MemorySegment mime_type) {
        var mh$ = gtk_file_filter_add_mime_type$MH();
        try {
            mh$.invokeExact(filter, mime_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_pattern$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.gtk_file_filter_add_pattern$MH,"gtk_file_filter_add_pattern");
    }
    /**
     * {@snippet :
     * void gtk_file_filter_add_pattern(GtkFileFilter* filter, const gchar* pattern);
     * }
     */
    public static void gtk_file_filter_add_pattern(MemorySegment filter, MemorySegment pattern) {
        var mh$ = gtk_file_filter_add_pattern$MH();
        try {
            mh$.invokeExact(filter, pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_pixbuf_formats$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.gtk_file_filter_add_pixbuf_formats$MH,"gtk_file_filter_add_pixbuf_formats");
    }
    /**
     * {@snippet :
     * void gtk_file_filter_add_pixbuf_formats(GtkFileFilter* filter);
     * }
     */
    public static void gtk_file_filter_add_pixbuf_formats(MemorySegment filter) {
        var mh$ = gtk_file_filter_add_pixbuf_formats$MH();
        try {
            mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_custom$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.gtk_file_filter_add_custom$MH,"gtk_file_filter_add_custom");
    }
    /**
     * {@snippet :
     * void gtk_file_filter_add_custom(GtkFileFilter* filter, GtkFileFilterFlags needed, GtkFileFilterFunc func, gpointer data, GDestroyNotify notify);
     * }
     */
    public static void gtk_file_filter_add_custom(MemorySegment filter, int needed, MemorySegment func, MemorySegment data, MemorySegment notify) {
        var mh$ = gtk_file_filter_add_custom$MH();
        try {
            mh$.invokeExact(filter, needed, func, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_get_needed$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.gtk_file_filter_get_needed$MH,"gtk_file_filter_get_needed");
    }
    /**
     * {@snippet :
     * GtkFileFilterFlags gtk_file_filter_get_needed(GtkFileFilter* filter);
     * }
     */
    public static int gtk_file_filter_get_needed(MemorySegment filter) {
        var mh$ = gtk_file_filter_get_needed$MH();
        try {
            return (int)mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.gtk_file_filter_filter$MH,"gtk_file_filter_filter");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_filter_filter(GtkFileFilter* filter, const GtkFileFilterInfo* filter_info);
     * }
     */
    public static int gtk_file_filter_filter(MemorySegment filter, MemorySegment filter_info) {
        var mh$ = gtk_file_filter_filter$MH();
        try {
            return (int)mh$.invokeExact(filter, filter_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_to_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.gtk_file_filter_to_gvariant$MH,"gtk_file_filter_to_gvariant");
    }
    /**
     * {@snippet :
     * GVariant* gtk_file_filter_to_gvariant(GtkFileFilter* filter);
     * }
     */
    public static MemorySegment gtk_file_filter_to_gvariant(MemorySegment filter) {
        var mh$ = gtk_file_filter_to_gvariant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_new_from_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.gtk_file_filter_new_from_gvariant$MH,"gtk_file_filter_new_from_gvariant");
    }
    /**
     * {@snippet :
     * GtkFileFilter* gtk_file_filter_new_from_gvariant(GVariant* variant);
     * }
     */
    public static MemorySegment gtk_file_filter_new_from_gvariant(MemorySegment variant) {
        var mh$ = gtk_file_filter_new_from_gvariant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_CHOOSER_ACTION_OPEN = 0;
     * }
     */
    public static int GTK_FILE_CHOOSER_ACTION_OPEN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_CHOOSER_ACTION_SAVE = 1;
     * }
     */
    public static int GTK_FILE_CHOOSER_ACTION_SAVE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER = 2;
     * }
     */
    public static int GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER = 3;
     * }
     */
    public static int GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_CHOOSER_CONFIRMATION_CONFIRM = 0;
     * }
     */
    public static int GTK_FILE_CHOOSER_CONFIRMATION_CONFIRM() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME = 1;
     * }
     */
    public static int GTK_FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN = 2;
     * }
     */
    public static int GTK_FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN() {
        return (int)2L;
    }
    public static MethodHandle gtk_file_chooser_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.gtk_file_chooser_get_type$MH,"gtk_file_chooser_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_file_chooser_get_type();
     * }
     */
    public static long gtk_file_chooser_get_type() {
        var mh$ = gtk_file_chooser_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_CHOOSER_ERROR_NONEXISTENT = 0;
     * }
     */
    public static int GTK_FILE_CHOOSER_ERROR_NONEXISTENT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_CHOOSER_ERROR_BAD_FILENAME = 1;
     * }
     */
    public static int GTK_FILE_CHOOSER_ERROR_BAD_FILENAME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS = 2;
     * }
     */
    public static int GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME = 3;
     * }
     */
    public static int GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME() {
        return (int)3L;
    }
    public static MethodHandle gtk_file_chooser_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.gtk_file_chooser_error_quark$MH,"gtk_file_chooser_error_quark");
    }
    /**
     * {@snippet :
     * GQuark gtk_file_chooser_error_quark();
     * }
     */
    public static int gtk_file_chooser_error_quark() {
        var mh$ = gtk_file_chooser_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.gtk_file_chooser_set_action$MH,"gtk_file_chooser_set_action");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_action(GtkFileChooser* chooser, GtkFileChooserAction action);
     * }
     */
    public static void gtk_file_chooser_set_action(MemorySegment chooser, int action) {
        var mh$ = gtk_file_chooser_set_action$MH();
        try {
            mh$.invokeExact(chooser, action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.gtk_file_chooser_get_action$MH,"gtk_file_chooser_get_action");
    }
    /**
     * {@snippet :
     * GtkFileChooserAction gtk_file_chooser_get_action(GtkFileChooser* chooser);
     * }
     */
    public static int gtk_file_chooser_get_action(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_action$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_local_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.gtk_file_chooser_set_local_only$MH,"gtk_file_chooser_set_local_only");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_local_only(GtkFileChooser* chooser, gboolean local_only);
     * }
     */
    public static void gtk_file_chooser_set_local_only(MemorySegment chooser, int local_only) {
        var mh$ = gtk_file_chooser_set_local_only$MH();
        try {
            mh$.invokeExact(chooser, local_only);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_local_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.gtk_file_chooser_get_local_only$MH,"gtk_file_chooser_get_local_only");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_get_local_only(GtkFileChooser* chooser);
     * }
     */
    public static int gtk_file_chooser_get_local_only(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_local_only$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_select_multiple$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.gtk_file_chooser_set_select_multiple$MH,"gtk_file_chooser_set_select_multiple");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_select_multiple(GtkFileChooser* chooser, gboolean select_multiple);
     * }
     */
    public static void gtk_file_chooser_set_select_multiple(MemorySegment chooser, int select_multiple) {
        var mh$ = gtk_file_chooser_set_select_multiple$MH();
        try {
            mh$.invokeExact(chooser, select_multiple);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_select_multiple$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.gtk_file_chooser_get_select_multiple$MH,"gtk_file_chooser_get_select_multiple");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_get_select_multiple(GtkFileChooser* chooser);
     * }
     */
    public static int gtk_file_chooser_get_select_multiple(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_select_multiple$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_show_hidden$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.gtk_file_chooser_set_show_hidden$MH,"gtk_file_chooser_set_show_hidden");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_show_hidden(GtkFileChooser* chooser, gboolean show_hidden);
     * }
     */
    public static void gtk_file_chooser_set_show_hidden(MemorySegment chooser, int show_hidden) {
        var mh$ = gtk_file_chooser_set_show_hidden$MH();
        try {
            mh$.invokeExact(chooser, show_hidden);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_show_hidden$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.gtk_file_chooser_get_show_hidden$MH,"gtk_file_chooser_get_show_hidden");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_get_show_hidden(GtkFileChooser* chooser);
     * }
     */
    public static int gtk_file_chooser_get_show_hidden(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_show_hidden$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_do_overwrite_confirmation$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.gtk_file_chooser_set_do_overwrite_confirmation$MH,"gtk_file_chooser_set_do_overwrite_confirmation");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_do_overwrite_confirmation(GtkFileChooser* chooser, gboolean do_overwrite_confirmation);
     * }
     */
    public static void gtk_file_chooser_set_do_overwrite_confirmation(MemorySegment chooser, int do_overwrite_confirmation) {
        var mh$ = gtk_file_chooser_set_do_overwrite_confirmation$MH();
        try {
            mh$.invokeExact(chooser, do_overwrite_confirmation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_do_overwrite_confirmation$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.gtk_file_chooser_get_do_overwrite_confirmation$MH,"gtk_file_chooser_get_do_overwrite_confirmation");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_get_do_overwrite_confirmation(GtkFileChooser* chooser);
     * }
     */
    public static int gtk_file_chooser_get_do_overwrite_confirmation(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_do_overwrite_confirmation$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_create_folders$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.gtk_file_chooser_set_create_folders$MH,"gtk_file_chooser_set_create_folders");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_create_folders(GtkFileChooser* chooser, gboolean create_folders);
     * }
     */
    public static void gtk_file_chooser_set_create_folders(MemorySegment chooser, int create_folders) {
        var mh$ = gtk_file_chooser_set_create_folders$MH();
        try {
            mh$.invokeExact(chooser, create_folders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_create_folders$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.gtk_file_chooser_get_create_folders$MH,"gtk_file_chooser_get_create_folders");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_get_create_folders(GtkFileChooser* chooser);
     * }
     */
    public static int gtk_file_chooser_get_create_folders(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_create_folders$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_current_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.gtk_file_chooser_set_current_name$MH,"gtk_file_chooser_set_current_name");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_current_name(GtkFileChooser* chooser, const gchar* name);
     * }
     */
    public static void gtk_file_chooser_set_current_name(MemorySegment chooser, MemorySegment name) {
        var mh$ = gtk_file_chooser_set_current_name$MH();
        try {
            mh$.invokeExact(chooser, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_current_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.gtk_file_chooser_get_current_name$MH,"gtk_file_chooser_get_current_name");
    }
    /**
     * {@snippet :
     * gchar* gtk_file_chooser_get_current_name(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_current_name(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_current_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.gtk_file_chooser_get_filename$MH,"gtk_file_chooser_get_filename");
    }
    /**
     * {@snippet :
     * gchar* gtk_file_chooser_get_filename(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_filename(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_filename$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.gtk_file_chooser_set_filename$MH,"gtk_file_chooser_set_filename");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_set_filename(GtkFileChooser* chooser, char* filename);
     * }
     */
    public static int gtk_file_chooser_set_filename(MemorySegment chooser, MemorySegment filename) {
        var mh$ = gtk_file_chooser_set_filename$MH();
        try {
            return (int)mh$.invokeExact(chooser, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_select_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.gtk_file_chooser_select_filename$MH,"gtk_file_chooser_select_filename");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_select_filename(GtkFileChooser* chooser, char* filename);
     * }
     */
    public static int gtk_file_chooser_select_filename(MemorySegment chooser, MemorySegment filename) {
        var mh$ = gtk_file_chooser_select_filename$MH();
        try {
            return (int)mh$.invokeExact(chooser, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_unselect_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.gtk_file_chooser_unselect_filename$MH,"gtk_file_chooser_unselect_filename");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_unselect_filename(GtkFileChooser* chooser, char* filename);
     * }
     */
    public static void gtk_file_chooser_unselect_filename(MemorySegment chooser, MemorySegment filename) {
        var mh$ = gtk_file_chooser_unselect_filename$MH();
        try {
            mh$.invokeExact(chooser, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_select_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.gtk_file_chooser_select_all$MH,"gtk_file_chooser_select_all");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_select_all(GtkFileChooser* chooser);
     * }
     */
    public static void gtk_file_chooser_select_all(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_select_all$MH();
        try {
            mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_unselect_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.gtk_file_chooser_unselect_all$MH,"gtk_file_chooser_unselect_all");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_unselect_all(GtkFileChooser* chooser);
     * }
     */
    public static void gtk_file_chooser_unselect_all(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_unselect_all$MH();
        try {
            mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_filenames$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.gtk_file_chooser_get_filenames$MH,"gtk_file_chooser_get_filenames");
    }
    /**
     * {@snippet :
     * GSList* gtk_file_chooser_get_filenames(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_filenames(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_filenames$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_current_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.gtk_file_chooser_set_current_folder$MH,"gtk_file_chooser_set_current_folder");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_set_current_folder(GtkFileChooser* chooser, const gchar* filename);
     * }
     */
    public static int gtk_file_chooser_set_current_folder(MemorySegment chooser, MemorySegment filename) {
        var mh$ = gtk_file_chooser_set_current_folder$MH();
        try {
            return (int)mh$.invokeExact(chooser, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_current_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.gtk_file_chooser_get_current_folder$MH,"gtk_file_chooser_get_current_folder");
    }
    /**
     * {@snippet :
     * gchar* gtk_file_chooser_get_current_folder(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_current_folder(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_current_folder$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.gtk_file_chooser_get_uri$MH,"gtk_file_chooser_get_uri");
    }
    /**
     * {@snippet :
     * gchar* gtk_file_chooser_get_uri(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_uri(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.gtk_file_chooser_set_uri$MH,"gtk_file_chooser_set_uri");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_set_uri(GtkFileChooser* chooser, char* uri);
     * }
     */
    public static int gtk_file_chooser_set_uri(MemorySegment chooser, MemorySegment uri) {
        var mh$ = gtk_file_chooser_set_uri$MH();
        try {
            return (int)mh$.invokeExact(chooser, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_select_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.gtk_file_chooser_select_uri$MH,"gtk_file_chooser_select_uri");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_select_uri(GtkFileChooser* chooser, char* uri);
     * }
     */
    public static int gtk_file_chooser_select_uri(MemorySegment chooser, MemorySegment uri) {
        var mh$ = gtk_file_chooser_select_uri$MH();
        try {
            return (int)mh$.invokeExact(chooser, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_unselect_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.gtk_file_chooser_unselect_uri$MH,"gtk_file_chooser_unselect_uri");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_unselect_uri(GtkFileChooser* chooser, char* uri);
     * }
     */
    public static void gtk_file_chooser_unselect_uri(MemorySegment chooser, MemorySegment uri) {
        var mh$ = gtk_file_chooser_unselect_uri$MH();
        try {
            mh$.invokeExact(chooser, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.gtk_file_chooser_get_uris$MH,"gtk_file_chooser_get_uris");
    }
    /**
     * {@snippet :
     * GSList* gtk_file_chooser_get_uris(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_uris(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_uris$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_current_folder_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.gtk_file_chooser_set_current_folder_uri$MH,"gtk_file_chooser_set_current_folder_uri");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_set_current_folder_uri(GtkFileChooser* chooser, const gchar* uri);
     * }
     */
    public static int gtk_file_chooser_set_current_folder_uri(MemorySegment chooser, MemorySegment uri) {
        var mh$ = gtk_file_chooser_set_current_folder_uri$MH();
        try {
            return (int)mh$.invokeExact(chooser, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_current_folder_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.gtk_file_chooser_get_current_folder_uri$MH,"gtk_file_chooser_get_current_folder_uri");
    }
    /**
     * {@snippet :
     * gchar* gtk_file_chooser_get_current_folder_uri(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_current_folder_uri(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_current_folder_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.gtk_file_chooser_get_file$MH,"gtk_file_chooser_get_file");
    }
    /**
     * {@snippet :
     * GFile* gtk_file_chooser_get_file(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_file(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.gtk_file_chooser_set_file$MH,"gtk_file_chooser_set_file");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_set_file(GtkFileChooser* chooser, GFile* file, GError** error);
     * }
     */
    public static int gtk_file_chooser_set_file(MemorySegment chooser, MemorySegment file, MemorySegment error) {
        var mh$ = gtk_file_chooser_set_file$MH();
        try {
            return (int)mh$.invokeExact(chooser, file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_select_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.gtk_file_chooser_select_file$MH,"gtk_file_chooser_select_file");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_select_file(GtkFileChooser* chooser, GFile* file, GError** error);
     * }
     */
    public static int gtk_file_chooser_select_file(MemorySegment chooser, MemorySegment file, MemorySegment error) {
        var mh$ = gtk_file_chooser_select_file$MH();
        try {
            return (int)mh$.invokeExact(chooser, file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_unselect_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.gtk_file_chooser_unselect_file$MH,"gtk_file_chooser_unselect_file");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_unselect_file(GtkFileChooser* chooser, GFile* file);
     * }
     */
    public static void gtk_file_chooser_unselect_file(MemorySegment chooser, MemorySegment file) {
        var mh$ = gtk_file_chooser_unselect_file$MH();
        try {
            mh$.invokeExact(chooser, file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_files$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.gtk_file_chooser_get_files$MH,"gtk_file_chooser_get_files");
    }
    /**
     * {@snippet :
     * GSList* gtk_file_chooser_get_files(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_files(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_files$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_current_folder_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.gtk_file_chooser_set_current_folder_file$MH,"gtk_file_chooser_set_current_folder_file");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_set_current_folder_file(GtkFileChooser* chooser, GFile* file, GError** error);
     * }
     */
    public static int gtk_file_chooser_set_current_folder_file(MemorySegment chooser, MemorySegment file, MemorySegment error) {
        var mh$ = gtk_file_chooser_set_current_folder_file$MH();
        try {
            return (int)mh$.invokeExact(chooser, file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_current_folder_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.gtk_file_chooser_get_current_folder_file$MH,"gtk_file_chooser_get_current_folder_file");
    }
    /**
     * {@snippet :
     * GFile* gtk_file_chooser_get_current_folder_file(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_current_folder_file(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_current_folder_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_preview_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.gtk_file_chooser_set_preview_widget$MH,"gtk_file_chooser_set_preview_widget");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_preview_widget(GtkFileChooser* chooser, GtkWidget* preview_widget);
     * }
     */
    public static void gtk_file_chooser_set_preview_widget(MemorySegment chooser, MemorySegment preview_widget) {
        var mh$ = gtk_file_chooser_set_preview_widget$MH();
        try {
            mh$.invokeExact(chooser, preview_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_preview_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.gtk_file_chooser_get_preview_widget$MH,"gtk_file_chooser_get_preview_widget");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_file_chooser_get_preview_widget(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_preview_widget(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_preview_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_preview_widget_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.gtk_file_chooser_set_preview_widget_active$MH,"gtk_file_chooser_set_preview_widget_active");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_preview_widget_active(GtkFileChooser* chooser, gboolean active);
     * }
     */
    public static void gtk_file_chooser_set_preview_widget_active(MemorySegment chooser, int active) {
        var mh$ = gtk_file_chooser_set_preview_widget_active$MH();
        try {
            mh$.invokeExact(chooser, active);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_preview_widget_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.gtk_file_chooser_get_preview_widget_active$MH,"gtk_file_chooser_get_preview_widget_active");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_get_preview_widget_active(GtkFileChooser* chooser);
     * }
     */
    public static int gtk_file_chooser_get_preview_widget_active(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_preview_widget_active$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_use_preview_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.gtk_file_chooser_set_use_preview_label$MH,"gtk_file_chooser_set_use_preview_label");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_use_preview_label(GtkFileChooser* chooser, gboolean use_label);
     * }
     */
    public static void gtk_file_chooser_set_use_preview_label(MemorySegment chooser, int use_label) {
        var mh$ = gtk_file_chooser_set_use_preview_label$MH();
        try {
            mh$.invokeExact(chooser, use_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_use_preview_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.gtk_file_chooser_get_use_preview_label$MH,"gtk_file_chooser_get_use_preview_label");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_get_use_preview_label(GtkFileChooser* chooser);
     * }
     */
    public static int gtk_file_chooser_get_use_preview_label(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_use_preview_label$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_preview_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.gtk_file_chooser_get_preview_filename$MH,"gtk_file_chooser_get_preview_filename");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_get_preview_filename(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_preview_filename(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_preview_filename$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_preview_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.gtk_file_chooser_get_preview_uri$MH,"gtk_file_chooser_get_preview_uri");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_get_preview_uri(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_preview_uri(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_preview_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_preview_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.gtk_file_chooser_get_preview_file$MH,"gtk_file_chooser_get_preview_file");
    }
    /**
     * {@snippet :
     * GFile* gtk_file_chooser_get_preview_file(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_preview_file(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_preview_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_extra_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.gtk_file_chooser_set_extra_widget$MH,"gtk_file_chooser_set_extra_widget");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_extra_widget(GtkFileChooser* chooser, GtkWidget* extra_widget);
     * }
     */
    public static void gtk_file_chooser_set_extra_widget(MemorySegment chooser, MemorySegment extra_widget) {
        var mh$ = gtk_file_chooser_set_extra_widget$MH();
        try {
            mh$.invokeExact(chooser, extra_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_extra_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.gtk_file_chooser_get_extra_widget$MH,"gtk_file_chooser_get_extra_widget");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_file_chooser_get_extra_widget(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_extra_widget(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_extra_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_add_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.gtk_file_chooser_add_filter$MH,"gtk_file_chooser_add_filter");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_add_filter(GtkFileChooser* chooser, GtkFileFilter* filter);
     * }
     */
    public static void gtk_file_chooser_add_filter(MemorySegment chooser, MemorySegment filter) {
        var mh$ = gtk_file_chooser_add_filter$MH();
        try {
            mh$.invokeExact(chooser, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_remove_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.gtk_file_chooser_remove_filter$MH,"gtk_file_chooser_remove_filter");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_remove_filter(GtkFileChooser* chooser, GtkFileFilter* filter);
     * }
     */
    public static void gtk_file_chooser_remove_filter(MemorySegment chooser, MemorySegment filter) {
        var mh$ = gtk_file_chooser_remove_filter$MH();
        try {
            mh$.invokeExact(chooser, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_list_filters$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.gtk_file_chooser_list_filters$MH,"gtk_file_chooser_list_filters");
    }
    /**
     * {@snippet :
     * GSList* gtk_file_chooser_list_filters(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_list_filters(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_list_filters$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.gtk_file_chooser_set_filter$MH,"gtk_file_chooser_set_filter");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_filter(GtkFileChooser* chooser, GtkFileFilter* filter);
     * }
     */
    public static void gtk_file_chooser_set_filter(MemorySegment chooser, MemorySegment filter) {
        var mh$ = gtk_file_chooser_set_filter$MH();
        try {
            mh$.invokeExact(chooser, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.gtk_file_chooser_get_filter$MH,"gtk_file_chooser_get_filter");
    }
    /**
     * {@snippet :
     * GtkFileFilter* gtk_file_chooser_get_filter(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_filter(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_get_filter$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_add_shortcut_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.gtk_file_chooser_add_shortcut_folder$MH,"gtk_file_chooser_add_shortcut_folder");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_add_shortcut_folder(GtkFileChooser* chooser, char* folder, GError** error);
     * }
     */
    public static int gtk_file_chooser_add_shortcut_folder(MemorySegment chooser, MemorySegment folder, MemorySegment error) {
        var mh$ = gtk_file_chooser_add_shortcut_folder$MH();
        try {
            return (int)mh$.invokeExact(chooser, folder, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_remove_shortcut_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.gtk_file_chooser_remove_shortcut_folder$MH,"gtk_file_chooser_remove_shortcut_folder");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_remove_shortcut_folder(GtkFileChooser* chooser, char* folder, GError** error);
     * }
     */
    public static int gtk_file_chooser_remove_shortcut_folder(MemorySegment chooser, MemorySegment folder, MemorySegment error) {
        var mh$ = gtk_file_chooser_remove_shortcut_folder$MH();
        try {
            return (int)mh$.invokeExact(chooser, folder, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_list_shortcut_folders$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.gtk_file_chooser_list_shortcut_folders$MH,"gtk_file_chooser_list_shortcut_folders");
    }
    /**
     * {@snippet :
     * GSList* gtk_file_chooser_list_shortcut_folders(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_list_shortcut_folders(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_list_shortcut_folders$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_add_shortcut_folder_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.gtk_file_chooser_add_shortcut_folder_uri$MH,"gtk_file_chooser_add_shortcut_folder_uri");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_add_shortcut_folder_uri(GtkFileChooser* chooser, char* uri, GError** error);
     * }
     */
    public static int gtk_file_chooser_add_shortcut_folder_uri(MemorySegment chooser, MemorySegment uri, MemorySegment error) {
        var mh$ = gtk_file_chooser_add_shortcut_folder_uri$MH();
        try {
            return (int)mh$.invokeExact(chooser, uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_remove_shortcut_folder_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.gtk_file_chooser_remove_shortcut_folder_uri$MH,"gtk_file_chooser_remove_shortcut_folder_uri");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_remove_shortcut_folder_uri(GtkFileChooser* chooser, char* uri, GError** error);
     * }
     */
    public static int gtk_file_chooser_remove_shortcut_folder_uri(MemorySegment chooser, MemorySegment uri, MemorySegment error) {
        var mh$ = gtk_file_chooser_remove_shortcut_folder_uri$MH();
        try {
            return (int)mh$.invokeExact(chooser, uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_list_shortcut_folder_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.gtk_file_chooser_list_shortcut_folder_uris$MH,"gtk_file_chooser_list_shortcut_folder_uris");
    }
    /**
     * {@snippet :
     * GSList* gtk_file_chooser_list_shortcut_folder_uris(GtkFileChooser* chooser);
     * }
     */
    public static MemorySegment gtk_file_chooser_list_shortcut_folder_uris(MemorySegment chooser) {
        var mh$ = gtk_file_chooser_list_shortcut_folder_uris$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_add_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.gtk_file_chooser_add_choice$MH,"gtk_file_chooser_add_choice");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_add_choice(GtkFileChooser* chooser, char* id, char* label, char** options, char** option_labels);
     * }
     */
    public static void gtk_file_chooser_add_choice(MemorySegment chooser, MemorySegment id, MemorySegment label, MemorySegment options, MemorySegment option_labels) {
        var mh$ = gtk_file_chooser_add_choice$MH();
        try {
            mh$.invokeExact(chooser, id, label, options, option_labels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_remove_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.gtk_file_chooser_remove_choice$MH,"gtk_file_chooser_remove_choice");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_remove_choice(GtkFileChooser* chooser, char* id);
     * }
     */
    public static void gtk_file_chooser_remove_choice(MemorySegment chooser, MemorySegment id) {
        var mh$ = gtk_file_chooser_remove_choice$MH();
        try {
            mh$.invokeExact(chooser, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.gtk_file_chooser_set_choice$MH,"gtk_file_chooser_set_choice");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_set_choice(GtkFileChooser* chooser, char* id, char* option);
     * }
     */
    public static void gtk_file_chooser_set_choice(MemorySegment chooser, MemorySegment id, MemorySegment option) {
        var mh$ = gtk_file_chooser_set_choice$MH();
        try {
            mh$.invokeExact(chooser, id, option);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.gtk_file_chooser_get_choice$MH,"gtk_file_chooser_get_choice");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_get_choice(GtkFileChooser* chooser, char* id);
     * }
     */
    public static MemorySegment gtk_file_chooser_get_choice(MemorySegment chooser, MemorySegment id) {
        var mh$ = gtk_file_chooser_get_choice$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(chooser, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.gtk_file_chooser_button_get_type$MH,"gtk_file_chooser_button_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_file_chooser_button_get_type();
     * }
     */
    public static long gtk_file_chooser_button_get_type() {
        var mh$ = gtk_file_chooser_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.gtk_file_chooser_button_new$MH,"gtk_file_chooser_button_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_file_chooser_button_new(const gchar* title, GtkFileChooserAction action);
     * }
     */
    public static MemorySegment gtk_file_chooser_button_new(MemorySegment title, int action) {
        var mh$ = gtk_file_chooser_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(title, action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_new_with_dialog$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.gtk_file_chooser_button_new_with_dialog$MH,"gtk_file_chooser_button_new_with_dialog");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_file_chooser_button_new_with_dialog(GtkWidget* dialog);
     * }
     */
    public static MemorySegment gtk_file_chooser_button_new_with_dialog(MemorySegment dialog) {
        var mh$ = gtk_file_chooser_button_new_with_dialog$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.gtk_file_chooser_button_get_title$MH,"gtk_file_chooser_button_get_title");
    }
    /**
     * {@snippet :
     * const gchar* gtk_file_chooser_button_get_title(GtkFileChooserButton* button);
     * }
     */
    public static MemorySegment gtk_file_chooser_button_get_title(MemorySegment button) {
        var mh$ = gtk_file_chooser_button_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1581.gtk_file_chooser_button_set_title$MH,"gtk_file_chooser_button_set_title");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_button_set_title(GtkFileChooserButton* button, const gchar* title);
     * }
     */
    public static void gtk_file_chooser_button_set_title(MemorySegment button, MemorySegment title) {
        var mh$ = gtk_file_chooser_button_set_title$MH();
        try {
            mh$.invokeExact(button, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_get_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$1581.gtk_file_chooser_button_get_width_chars$MH,"gtk_file_chooser_button_get_width_chars");
    }
    /**
     * {@snippet :
     * gint gtk_file_chooser_button_get_width_chars(GtkFileChooserButton* button);
     * }
     */
    public static int gtk_file_chooser_button_get_width_chars(MemorySegment button) {
        var mh$ = gtk_file_chooser_button_get_width_chars$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_set_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$1581.gtk_file_chooser_button_set_width_chars$MH,"gtk_file_chooser_button_set_width_chars");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_button_set_width_chars(GtkFileChooserButton* button, gint n_chars);
     * }
     */
    public static void gtk_file_chooser_button_set_width_chars(MemorySegment button, int n_chars) {
        var mh$ = gtk_file_chooser_button_set_width_chars$MH();
        try {
            mh$.invokeExact(button, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_get_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1581.gtk_file_chooser_button_get_focus_on_click$MH,"gtk_file_chooser_button_get_focus_on_click");
    }
    /**
     * {@snippet :
     * gboolean gtk_file_chooser_button_get_focus_on_click(GtkFileChooserButton* button);
     * }
     */
    public static int gtk_file_chooser_button_get_focus_on_click(MemorySegment button) {
        var mh$ = gtk_file_chooser_button_get_focus_on_click$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_button_set_focus_on_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1581.gtk_file_chooser_button_set_focus_on_click$MH,"gtk_file_chooser_button_set_focus_on_click");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_button_set_focus_on_click(GtkFileChooserButton* button, gboolean focus_on_click);
     * }
     */
    public static void gtk_file_chooser_button_set_focus_on_click(MemorySegment button, int focus_on_click) {
        var mh$ = gtk_file_chooser_button_set_focus_on_click$MH();
        try {
            mh$.invokeExact(button, focus_on_click);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1581.gtk_file_chooser_dialog_get_type$MH,"gtk_file_chooser_dialog_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_file_chooser_dialog_get_type();
     * }
     */
    public static long gtk_file_chooser_dialog_get_type() {
        var mh$ = gtk_file_chooser_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1582.gtk_file_chooser_dialog_new$MH,"gtk_file_chooser_dialog_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_file_chooser_dialog_new(const gchar* title, GtkWindow* parent, GtkFileChooserAction action, const gchar* first_button_text,...);
     * }
     */
    public static MemorySegment gtk_file_chooser_dialog_new(MemorySegment title, MemorySegment parent, int action, MemorySegment first_button_text, Object... x4) {
        var mh$ = gtk_file_chooser_dialog_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(title, parent, action, first_button_text, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1582.gtk_native_dialog_get_type$MH,"gtk_native_dialog_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_native_dialog_get_type();
     * }
     */
    public static long gtk_native_dialog_get_type() {
        var mh$ = gtk_native_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkNativeDialog* GtkNativeDialog_autoptr;
     * }
     */
    public static final OfAddress GtkNativeDialog_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkNativeDialog_listautoptr;
     * }
     */
    public static final OfAddress GtkNativeDialog_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkNativeDialog_slistautoptr;
     * }
     */
    public static final OfAddress GtkNativeDialog_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkNativeDialog_queueautoptr;
     * }
     */
    public static final OfAddress GtkNativeDialog_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GtkNativeDialogClass* GtkNativeDialogClass_autoptr;
     * }
     */
    public static final OfAddress GtkNativeDialogClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkNativeDialogClass_listautoptr;
     * }
     */
    public static final OfAddress GtkNativeDialogClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkNativeDialogClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkNativeDialogClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkNativeDialogClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkNativeDialogClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_native_dialog_show$MH() {
        return RuntimeHelper.requireNonNull(constants$1582.gtk_native_dialog_show$MH,"gtk_native_dialog_show");
    }
    /**
     * {@snippet :
     * void gtk_native_dialog_show(GtkNativeDialog* self);
     * }
     */
    public static void gtk_native_dialog_show(MemorySegment self) {
        var mh$ = gtk_native_dialog_show$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_hide$MH() {
        return RuntimeHelper.requireNonNull(constants$1582.gtk_native_dialog_hide$MH,"gtk_native_dialog_hide");
    }
    /**
     * {@snippet :
     * void gtk_native_dialog_hide(GtkNativeDialog* self);
     * }
     */
    public static void gtk_native_dialog_hide(MemorySegment self) {
        var mh$ = gtk_native_dialog_hide$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1582.gtk_native_dialog_destroy$MH,"gtk_native_dialog_destroy");
    }
    /**
     * {@snippet :
     * void gtk_native_dialog_destroy(GtkNativeDialog* self);
     * }
     */
    public static void gtk_native_dialog_destroy(MemorySegment self) {
        var mh$ = gtk_native_dialog_destroy$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1582.gtk_native_dialog_get_visible$MH,"gtk_native_dialog_get_visible");
    }
    /**
     * {@snippet :
     * gboolean gtk_native_dialog_get_visible(GtkNativeDialog* self);
     * }
     */
    public static int gtk_native_dialog_get_visible(MemorySegment self) {
        var mh$ = gtk_native_dialog_get_visible$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_set_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.gtk_native_dialog_set_modal$MH,"gtk_native_dialog_set_modal");
    }
    /**
     * {@snippet :
     * void gtk_native_dialog_set_modal(GtkNativeDialog* self, gboolean modal);
     * }
     */
    public static void gtk_native_dialog_set_modal(MemorySegment self, int modal) {
        var mh$ = gtk_native_dialog_set_modal$MH();
        try {
            mh$.invokeExact(self, modal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.gtk_native_dialog_get_modal$MH,"gtk_native_dialog_get_modal");
    }
    /**
     * {@snippet :
     * gboolean gtk_native_dialog_get_modal(GtkNativeDialog* self);
     * }
     */
    public static int gtk_native_dialog_get_modal(MemorySegment self) {
        var mh$ = gtk_native_dialog_get_modal$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.gtk_native_dialog_set_title$MH,"gtk_native_dialog_set_title");
    }
    /**
     * {@snippet :
     * void gtk_native_dialog_set_title(GtkNativeDialog* self, char* title);
     * }
     */
    public static void gtk_native_dialog_set_title(MemorySegment self, MemorySegment title) {
        var mh$ = gtk_native_dialog_set_title$MH();
        try {
            mh$.invokeExact(self, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.gtk_native_dialog_get_title$MH,"gtk_native_dialog_get_title");
    }
    /**
     * {@snippet :
     * char* gtk_native_dialog_get_title(GtkNativeDialog* self);
     * }
     */
    public static MemorySegment gtk_native_dialog_get_title(MemorySegment self) {
        var mh$ = gtk_native_dialog_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_set_transient_for$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.gtk_native_dialog_set_transient_for$MH,"gtk_native_dialog_set_transient_for");
    }
    /**
     * {@snippet :
     * void gtk_native_dialog_set_transient_for(GtkNativeDialog* self, GtkWindow* parent);
     * }
     */
    public static void gtk_native_dialog_set_transient_for(MemorySegment self, MemorySegment parent) {
        var mh$ = gtk_native_dialog_set_transient_for$MH();
        try {
            mh$.invokeExact(self, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_transient_for$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.gtk_native_dialog_get_transient_for$MH,"gtk_native_dialog_get_transient_for");
    }
    /**
     * {@snippet :
     * GtkWindow* gtk_native_dialog_get_transient_for(GtkNativeDialog* self);
     * }
     */
    public static MemorySegment gtk_native_dialog_get_transient_for(MemorySegment self) {
        var mh$ = gtk_native_dialog_get_transient_for$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_run$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.gtk_native_dialog_run$MH,"gtk_native_dialog_run");
    }
    /**
     * {@snippet :
     * gint gtk_native_dialog_run(GtkNativeDialog* self);
     * }
     */
    public static int gtk_native_dialog_run(MemorySegment self) {
        var mh$ = gtk_native_dialog_run$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.gtk_file_chooser_native_get_type$MH,"gtk_file_chooser_native_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_file_chooser_native_get_type();
     * }
     */
    public static long gtk_file_chooser_native_get_type() {
        var mh$ = gtk_file_chooser_native_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkFileChooserNative* GtkFileChooserNative_autoptr;
     * }
     */
    public static final OfAddress GtkFileChooserNative_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkFileChooserNative_listautoptr;
     * }
     */
    public static final OfAddress GtkFileChooserNative_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkFileChooserNative_slistautoptr;
     * }
     */
    public static final OfAddress GtkFileChooserNative_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkFileChooserNative_queueautoptr;
     * }
     */
    public static final OfAddress GtkFileChooserNative_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * GtkFileChooserNativeClass_autoptr;
     * }
     */
    public static final OfAddress GtkFileChooserNativeClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GList* GtkFileChooserNativeClass_listautoptr;
     * }
     */
    public static final OfAddress GtkFileChooserNativeClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkFileChooserNativeClass_slistautoptr;
     * }
     */
    public static final OfAddress GtkFileChooserNativeClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkFileChooserNativeClass_queueautoptr;
     * }
     */
    public static final OfAddress GtkFileChooserNativeClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle gtk_file_chooser_native_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.gtk_file_chooser_native_new$MH,"gtk_file_chooser_native_new");
    }
    /**
     * {@snippet :
     * GtkFileChooserNative* gtk_file_chooser_native_new(const gchar* title, GtkWindow* parent, GtkFileChooserAction action, const gchar* accept_label, const gchar* cancel_label);
     * }
     */
    public static MemorySegment gtk_file_chooser_native_new(MemorySegment title, MemorySegment parent, int action, MemorySegment accept_label, MemorySegment cancel_label) {
        var mh$ = gtk_file_chooser_native_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(title, parent, action, accept_label, cancel_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_get_accept_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.gtk_file_chooser_native_get_accept_label$MH,"gtk_file_chooser_native_get_accept_label");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_native_get_accept_label(GtkFileChooserNative* self);
     * }
     */
    public static MemorySegment gtk_file_chooser_native_get_accept_label(MemorySegment self) {
        var mh$ = gtk_file_chooser_native_get_accept_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_set_accept_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.gtk_file_chooser_native_set_accept_label$MH,"gtk_file_chooser_native_set_accept_label");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_native_set_accept_label(GtkFileChooserNative* self, char* accept_label);
     * }
     */
    public static void gtk_file_chooser_native_set_accept_label(MemorySegment self, MemorySegment accept_label) {
        var mh$ = gtk_file_chooser_native_set_accept_label$MH();
        try {
            mh$.invokeExact(self, accept_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_get_cancel_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.gtk_file_chooser_native_get_cancel_label$MH,"gtk_file_chooser_native_get_cancel_label");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_native_get_cancel_label(GtkFileChooserNative* self);
     * }
     */
    public static MemorySegment gtk_file_chooser_native_get_cancel_label(MemorySegment self) {
        var mh$ = gtk_file_chooser_native_get_cancel_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_set_cancel_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.gtk_file_chooser_native_set_cancel_label$MH,"gtk_file_chooser_native_set_cancel_label");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_native_set_cancel_label(GtkFileChooserNative* self, char* cancel_label);
     * }
     */
    public static void gtk_file_chooser_native_set_cancel_label(MemorySegment self, MemorySegment cancel_label) {
        var mh$ = gtk_file_chooser_native_set_cancel_label$MH();
        try {
            mh$.invokeExact(self, cancel_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_widget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.gtk_file_chooser_widget_get_type$MH,"gtk_file_chooser_widget_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_file_chooser_widget_get_type();
     * }
     */
    public static long gtk_file_chooser_widget_get_type() {
        var mh$ = gtk_file_chooser_widget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_widget_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.gtk_file_chooser_widget_new$MH,"gtk_file_chooser_widget_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_file_chooser_widget_new(GtkFileChooserAction action);
     * }
     */
    public static MemorySegment gtk_file_chooser_widget_new(int action) {
        var mh$ = gtk_file_chooser_widget_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.gtk_flow_box_child_get_type$MH,"gtk_flow_box_child_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_flow_box_child_get_type();
     * }
     */
    public static long gtk_flow_box_child_get_type() {
        var mh$ = gtk_flow_box_child_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1586.gtk_flow_box_child_new$MH,"gtk_flow_box_child_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_flow_box_child_new();
     * }
     */
    public static MemorySegment gtk_flow_box_child_new() {
        var mh$ = gtk_flow_box_child_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_get_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1586.gtk_flow_box_child_get_index$MH,"gtk_flow_box_child_get_index");
    }
    /**
     * {@snippet :
     * gint gtk_flow_box_child_get_index(GtkFlowBoxChild* child);
     * }
     */
    public static int gtk_flow_box_child_get_index(MemorySegment child) {
        var mh$ = gtk_flow_box_child_get_index$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_is_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$1586.gtk_flow_box_child_is_selected$MH,"gtk_flow_box_child_is_selected");
    }
    /**
     * {@snippet :
     * gboolean gtk_flow_box_child_is_selected(GtkFlowBoxChild* child);
     * }
     */
    public static int gtk_flow_box_child_is_selected(MemorySegment child) {
        var mh$ = gtk_flow_box_child_is_selected$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$1586.gtk_flow_box_child_changed$MH,"gtk_flow_box_child_changed");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_child_changed(GtkFlowBoxChild* child);
     * }
     */
    public static void gtk_flow_box_child_changed(MemorySegment child) {
        var mh$ = gtk_flow_box_child_changed$MH();
        try {
            mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1586.gtk_flow_box_get_type$MH,"gtk_flow_box_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_flow_box_get_type();
     * }
     */
    public static long gtk_flow_box_get_type() {
        var mh$ = gtk_flow_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1586.gtk_flow_box_new$MH,"gtk_flow_box_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_flow_box_new();
     * }
     */
    public static MemorySegment gtk_flow_box_new() {
        var mh$ = gtk_flow_box_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_bind_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1587.gtk_flow_box_bind_model$MH,"gtk_flow_box_bind_model");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_bind_model(GtkFlowBox* box, GListModel* model, GtkFlowBoxCreateWidgetFunc create_widget_func, gpointer user_data, GDestroyNotify user_data_free_func);
     * }
     */
    public static void gtk_flow_box_bind_model(MemorySegment box, MemorySegment model, MemorySegment create_widget_func, MemorySegment user_data, MemorySegment user_data_free_func) {
        var mh$ = gtk_flow_box_bind_model$MH();
        try {
            mh$.invokeExact(box, model, create_widget_func, user_data, user_data_free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1587.gtk_flow_box_set_homogeneous$MH,"gtk_flow_box_set_homogeneous");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_homogeneous(GtkFlowBox* box, gboolean homogeneous);
     * }
     */
    public static void gtk_flow_box_set_homogeneous(MemorySegment box, int homogeneous) {
        var mh$ = gtk_flow_box_set_homogeneous$MH();
        try {
            mh$.invokeExact(box, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1587.gtk_flow_box_get_homogeneous$MH,"gtk_flow_box_get_homogeneous");
    }
    /**
     * {@snippet :
     * gboolean gtk_flow_box_get_homogeneous(GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_homogeneous(MemorySegment box) {
        var mh$ = gtk_flow_box_get_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1587.gtk_flow_box_set_row_spacing$MH,"gtk_flow_box_set_row_spacing");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_row_spacing(GtkFlowBox* box, guint spacing);
     * }
     */
    public static void gtk_flow_box_set_row_spacing(MemorySegment box, int spacing) {
        var mh$ = gtk_flow_box_set_row_spacing$MH();
        try {
            mh$.invokeExact(box, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1587.gtk_flow_box_get_row_spacing$MH,"gtk_flow_box_get_row_spacing");
    }
    /**
     * {@snippet :
     * guint gtk_flow_box_get_row_spacing(GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_row_spacing(MemorySegment box) {
        var mh$ = gtk_flow_box_get_row_spacing$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1587.gtk_flow_box_set_column_spacing$MH,"gtk_flow_box_set_column_spacing");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_column_spacing(GtkFlowBox* box, guint spacing);
     * }
     */
    public static void gtk_flow_box_set_column_spacing(MemorySegment box, int spacing) {
        var mh$ = gtk_flow_box_set_column_spacing$MH();
        try {
            mh$.invokeExact(box, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1588.gtk_flow_box_get_column_spacing$MH,"gtk_flow_box_get_column_spacing");
    }
    /**
     * {@snippet :
     * guint gtk_flow_box_get_column_spacing(GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_column_spacing(MemorySegment box) {
        var mh$ = gtk_flow_box_get_column_spacing$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_min_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1588.gtk_flow_box_set_min_children_per_line$MH,"gtk_flow_box_set_min_children_per_line");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_min_children_per_line(GtkFlowBox* box, guint n_children);
     * }
     */
    public static void gtk_flow_box_set_min_children_per_line(MemorySegment box, int n_children) {
        var mh$ = gtk_flow_box_set_min_children_per_line$MH();
        try {
            mh$.invokeExact(box, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_min_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1588.gtk_flow_box_get_min_children_per_line$MH,"gtk_flow_box_get_min_children_per_line");
    }
    /**
     * {@snippet :
     * guint gtk_flow_box_get_min_children_per_line(GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_min_children_per_line(MemorySegment box) {
        var mh$ = gtk_flow_box_get_min_children_per_line$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_max_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1588.gtk_flow_box_set_max_children_per_line$MH,"gtk_flow_box_set_max_children_per_line");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_max_children_per_line(GtkFlowBox* box, guint n_children);
     * }
     */
    public static void gtk_flow_box_set_max_children_per_line(MemorySegment box, int n_children) {
        var mh$ = gtk_flow_box_set_max_children_per_line$MH();
        try {
            mh$.invokeExact(box, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_max_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1588.gtk_flow_box_get_max_children_per_line$MH,"gtk_flow_box_get_max_children_per_line");
    }
    /**
     * {@snippet :
     * guint gtk_flow_box_get_max_children_per_line(GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_max_children_per_line(MemorySegment box) {
        var mh$ = gtk_flow_box_get_max_children_per_line$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1588.gtk_flow_box_set_activate_on_single_click$MH,"gtk_flow_box_set_activate_on_single_click");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_activate_on_single_click(GtkFlowBox* box, gboolean single);
     * }
     */
    public static void gtk_flow_box_set_activate_on_single_click(MemorySegment box, int single) {
        var mh$ = gtk_flow_box_set_activate_on_single_click$MH();
        try {
            mh$.invokeExact(box, single);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$1589.gtk_flow_box_get_activate_on_single_click$MH,"gtk_flow_box_get_activate_on_single_click");
    }
    /**
     * {@snippet :
     * gboolean gtk_flow_box_get_activate_on_single_click(GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_activate_on_single_click(MemorySegment box) {
        var mh$ = gtk_flow_box_get_activate_on_single_click$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$1589.gtk_flow_box_insert$MH,"gtk_flow_box_insert");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_insert(GtkFlowBox* box, GtkWidget* widget, gint position);
     * }
     */
    public static void gtk_flow_box_insert(MemorySegment box, MemorySegment widget, int position) {
        var mh$ = gtk_flow_box_insert$MH();
        try {
            mh$.invokeExact(box, widget, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_child_at_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1589.gtk_flow_box_get_child_at_index$MH,"gtk_flow_box_get_child_at_index");
    }
    /**
     * {@snippet :
     * GtkFlowBoxChild* gtk_flow_box_get_child_at_index(GtkFlowBox* box, gint idx);
     * }
     */
    public static MemorySegment gtk_flow_box_get_child_at_index(MemorySegment box, int idx) {
        var mh$ = gtk_flow_box_get_child_at_index$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_child_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$1589.gtk_flow_box_get_child_at_pos$MH,"gtk_flow_box_get_child_at_pos");
    }
    /**
     * {@snippet :
     * GtkFlowBoxChild* gtk_flow_box_get_child_at_pos(GtkFlowBox* box, gint x, gint y);
     * }
     */
    public static MemorySegment gtk_flow_box_get_child_at_pos(MemorySegment box, int x, int y) {
        var mh$ = gtk_flow_box_get_child_at_pos$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_selected_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$1590.gtk_flow_box_selected_foreach$MH,"gtk_flow_box_selected_foreach");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_selected_foreach(GtkFlowBox* box, GtkFlowBoxForeachFunc func, gpointer data);
     * }
     */
    public static void gtk_flow_box_selected_foreach(MemorySegment box, MemorySegment func, MemorySegment data) {
        var mh$ = gtk_flow_box_selected_foreach$MH();
        try {
            mh$.invokeExact(box, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_selected_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1590.gtk_flow_box_get_selected_children$MH,"gtk_flow_box_get_selected_children");
    }
    /**
     * {@snippet :
     * GList* gtk_flow_box_get_selected_children(GtkFlowBox* box);
     * }
     */
    public static MemorySegment gtk_flow_box_get_selected_children(MemorySegment box) {
        var mh$ = gtk_flow_box_get_selected_children$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_select_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1590.gtk_flow_box_select_child$MH,"gtk_flow_box_select_child");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_select_child(GtkFlowBox* box, GtkFlowBoxChild* child);
     * }
     */
    public static void gtk_flow_box_select_child(MemorySegment box, MemorySegment child) {
        var mh$ = gtk_flow_box_select_child$MH();
        try {
            mh$.invokeExact(box, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_unselect_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1590.gtk_flow_box_unselect_child$MH,"gtk_flow_box_unselect_child");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_unselect_child(GtkFlowBox* box, GtkFlowBoxChild* child);
     * }
     */
    public static void gtk_flow_box_unselect_child(MemorySegment box, MemorySegment child) {
        var mh$ = gtk_flow_box_unselect_child$MH();
        try {
            mh$.invokeExact(box, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_select_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1590.gtk_flow_box_select_all$MH,"gtk_flow_box_select_all");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_select_all(GtkFlowBox* box);
     * }
     */
    public static void gtk_flow_box_select_all(MemorySegment box) {
        var mh$ = gtk_flow_box_select_all$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_unselect_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1590.gtk_flow_box_unselect_all$MH,"gtk_flow_box_unselect_all");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_unselect_all(GtkFlowBox* box);
     * }
     */
    public static void gtk_flow_box_unselect_all(MemorySegment box) {
        var mh$ = gtk_flow_box_unselect_all$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1591.gtk_flow_box_set_selection_mode$MH,"gtk_flow_box_set_selection_mode");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_selection_mode(GtkFlowBox* box, GtkSelectionMode mode);
     * }
     */
    public static void gtk_flow_box_set_selection_mode(MemorySegment box, int mode) {
        var mh$ = gtk_flow_box_set_selection_mode$MH();
        try {
            mh$.invokeExact(box, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1591.gtk_flow_box_get_selection_mode$MH,"gtk_flow_box_get_selection_mode");
    }
    /**
     * {@snippet :
     * GtkSelectionMode gtk_flow_box_get_selection_mode(GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_selection_mode(MemorySegment box) {
        var mh$ = gtk_flow_box_get_selection_mode$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1591.gtk_flow_box_set_hadjustment$MH,"gtk_flow_box_set_hadjustment");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_hadjustment(GtkFlowBox* box, GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_flow_box_set_hadjustment(MemorySegment box, MemorySegment adjustment) {
        var mh$ = gtk_flow_box_set_hadjustment$MH();
        try {
            mh$.invokeExact(box, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$1591.gtk_flow_box_set_vadjustment$MH,"gtk_flow_box_set_vadjustment");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_vadjustment(GtkFlowBox* box, GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_flow_box_set_vadjustment(MemorySegment box, MemorySegment adjustment) {
        var mh$ = gtk_flow_box_set_vadjustment$MH();
        try {
            mh$.invokeExact(box, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_filter_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1592.gtk_flow_box_set_filter_func$MH,"gtk_flow_box_set_filter_func");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_filter_func(GtkFlowBox* box, GtkFlowBoxFilterFunc filter_func, gpointer user_data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_flow_box_set_filter_func(MemorySegment box, MemorySegment filter_func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_flow_box_set_filter_func$MH();
        try {
            mh$.invokeExact(box, filter_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_invalidate_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1592.gtk_flow_box_invalidate_filter$MH,"gtk_flow_box_invalidate_filter");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_invalidate_filter(GtkFlowBox* box);
     * }
     */
    public static void gtk_flow_box_invalidate_filter(MemorySegment box) {
        var mh$ = gtk_flow_box_invalidate_filter$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_sort_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1592.gtk_flow_box_set_sort_func$MH,"gtk_flow_box_set_sort_func");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_sort_func(GtkFlowBox* box, GtkFlowBoxSortFunc sort_func, gpointer user_data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_flow_box_set_sort_func(MemorySegment box, MemorySegment sort_func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_flow_box_set_sort_func$MH();
        try {
            mh$.invokeExact(box, sort_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_invalidate_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$1592.gtk_flow_box_invalidate_sort$MH,"gtk_flow_box_invalidate_sort");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_invalidate_sort(GtkFlowBox* box);
     * }
     */
    public static void gtk_flow_box_invalidate_sort(MemorySegment box) {
        var mh$ = gtk_flow_box_invalidate_sort$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.gtk_font_button_get_type$MH,"gtk_font_button_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_font_button_get_type();
     * }
     */
    public static long gtk_font_button_get_type() {
        var mh$ = gtk_font_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.gtk_font_button_new$MH,"gtk_font_button_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_font_button_new();
     * }
     */
    public static MemorySegment gtk_font_button_new() {
        var mh$ = gtk_font_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_new_with_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.gtk_font_button_new_with_font$MH,"gtk_font_button_new_with_font");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_font_button_new_with_font(const gchar* fontname);
     * }
     */
    public static MemorySegment gtk_font_button_new_with_font(MemorySegment fontname) {
        var mh$ = gtk_font_button_new_with_font$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.gtk_font_button_get_title$MH,"gtk_font_button_get_title");
    }
    /**
     * {@snippet :
     * const gchar* gtk_font_button_get_title(GtkFontButton* font_button);
     * }
     */
    public static MemorySegment gtk_font_button_get_title(MemorySegment font_button) {
        var mh$ = gtk_font_button_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.gtk_font_button_set_title$MH,"gtk_font_button_set_title");
    }
    /**
     * {@snippet :
     * void gtk_font_button_set_title(GtkFontButton* font_button, const gchar* title);
     * }
     */
    public static void gtk_font_button_set_title(MemorySegment font_button, MemorySegment title) {
        var mh$ = gtk_font_button_set_title$MH();
        try {
            mh$.invokeExact(font_button, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_use_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.gtk_font_button_get_use_font$MH,"gtk_font_button_get_use_font");
    }
    /**
     * {@snippet :
     * gboolean gtk_font_button_get_use_font(GtkFontButton* font_button);
     * }
     */
    public static int gtk_font_button_get_use_font(MemorySegment font_button) {
        var mh$ = gtk_font_button_get_use_font$MH();
        try {
            return (int)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_use_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.gtk_font_button_set_use_font$MH,"gtk_font_button_set_use_font");
    }
    /**
     * {@snippet :
     * void gtk_font_button_set_use_font(GtkFontButton* font_button, gboolean use_font);
     * }
     */
    public static void gtk_font_button_set_use_font(MemorySegment font_button, int use_font) {
        var mh$ = gtk_font_button_set_use_font$MH();
        try {
            mh$.invokeExact(font_button, use_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_use_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.gtk_font_button_get_use_size$MH,"gtk_font_button_get_use_size");
    }
    /**
     * {@snippet :
     * gboolean gtk_font_button_get_use_size(GtkFontButton* font_button);
     * }
     */
    public static int gtk_font_button_get_use_size(MemorySegment font_button) {
        var mh$ = gtk_font_button_get_use_size$MH();
        try {
            return (int)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_use_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.gtk_font_button_set_use_size$MH,"gtk_font_button_set_use_size");
    }
    /**
     * {@snippet :
     * void gtk_font_button_set_use_size(GtkFontButton* font_button, gboolean use_size);
     * }
     */
    public static void gtk_font_button_set_use_size(MemorySegment font_button, int use_size) {
        var mh$ = gtk_font_button_set_use_size$MH();
        try {
            mh$.invokeExact(font_button, use_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_font_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.gtk_font_button_get_font_name$MH,"gtk_font_button_get_font_name");
    }
    /**
     * {@snippet :
     * const gchar* gtk_font_button_get_font_name(GtkFontButton* font_button);
     * }
     */
    public static MemorySegment gtk_font_button_get_font_name(MemorySegment font_button) {
        var mh$ = gtk_font_button_get_font_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_font_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.gtk_font_button_set_font_name$MH,"gtk_font_button_set_font_name");
    }
    /**
     * {@snippet :
     * gboolean gtk_font_button_set_font_name(GtkFontButton* font_button, const gchar* fontname);
     * }
     */
    public static int gtk_font_button_set_font_name(MemorySegment font_button, MemorySegment fontname) {
        var mh$ = gtk_font_button_set_font_name$MH();
        try {
            return (int)mh$.invokeExact(font_button, fontname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_show_style$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.gtk_font_button_get_show_style$MH,"gtk_font_button_get_show_style");
    }
    /**
     * {@snippet :
     * gboolean gtk_font_button_get_show_style(GtkFontButton* font_button);
     * }
     */
    public static int gtk_font_button_get_show_style(MemorySegment font_button) {
        var mh$ = gtk_font_button_get_show_style$MH();
        try {
            return (int)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_show_style$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.gtk_font_button_set_show_style$MH,"gtk_font_button_set_show_style");
    }
    /**
     * {@snippet :
     * void gtk_font_button_set_show_style(GtkFontButton* font_button, gboolean show_style);
     * }
     */
    public static void gtk_font_button_set_show_style(MemorySegment font_button, int show_style) {
        var mh$ = gtk_font_button_set_show_style$MH();
        try {
            mh$.invokeExact(font_button, show_style);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_show_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.gtk_font_button_get_show_size$MH,"gtk_font_button_get_show_size");
    }
    /**
     * {@snippet :
     * gboolean gtk_font_button_get_show_size(GtkFontButton* font_button);
     * }
     */
    public static int gtk_font_button_get_show_size(MemorySegment font_button) {
        var mh$ = gtk_font_button_get_show_size$MH();
        try {
            return (int)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_show_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.gtk_font_button_set_show_size$MH,"gtk_font_button_set_show_size");
    }
    /**
     * {@snippet :
     * void gtk_font_button_set_show_size(GtkFontButton* font_button, gboolean show_size);
     * }
     */
    public static void gtk_font_button_set_show_size(MemorySegment font_button, int show_size) {
        var mh$ = gtk_font_button_set_show_size$MH();
        try {
            mh$.invokeExact(font_button, show_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .GTK_FONT_CHOOSER_LEVEL_FAMILY = 0;
     * }
     */
    public static int GTK_FONT_CHOOSER_LEVEL_FAMILY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .GTK_FONT_CHOOSER_LEVEL_STYLE = 1;
     * }
     */
    public static int GTK_FONT_CHOOSER_LEVEL_STYLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .GTK_FONT_CHOOSER_LEVEL_SIZE = 2;
     * }
     */
    public static int GTK_FONT_CHOOSER_LEVEL_SIZE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .GTK_FONT_CHOOSER_LEVEL_VARIATIONS = 4;
     * }
     */
    public static int GTK_FONT_CHOOSER_LEVEL_VARIATIONS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .GTK_FONT_CHOOSER_LEVEL_FEATURES = 8;
     * }
     */
    public static int GTK_FONT_CHOOSER_LEVEL_FEATURES() {
        return (int)8L;
    }
    public static MethodHandle gtk_font_chooser_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.gtk_font_chooser_get_type$MH,"gtk_font_chooser_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_font_chooser_get_type();
     * }
     */
    public static long gtk_font_chooser_get_type() {
        var mh$ = gtk_font_chooser_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_family$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.gtk_font_chooser_get_font_family$MH,"gtk_font_chooser_get_font_family");
    }
    /**
     * {@snippet :
     * PangoFontFamily* gtk_font_chooser_get_font_family(GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_font_family(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font_family$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_face$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.gtk_font_chooser_get_font_face$MH,"gtk_font_chooser_get_font_face");
    }
    /**
     * {@snippet :
     * PangoFontFace* gtk_font_chooser_get_font_face(GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_font_face(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font_face$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.gtk_font_chooser_get_font_size$MH,"gtk_font_chooser_get_font_size");
    }
    /**
     * {@snippet :
     * gint gtk_font_chooser_get_font_size(GtkFontChooser* fontchooser);
     * }
     */
    public static int gtk_font_chooser_get_font_size(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font_size$MH();
        try {
            return (int)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_desc$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.gtk_font_chooser_get_font_desc$MH,"gtk_font_chooser_get_font_desc");
    }
    /**
     * {@snippet :
     * PangoFontDescription* gtk_font_chooser_get_font_desc(GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_font_desc(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font_desc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_font_desc$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.gtk_font_chooser_set_font_desc$MH,"gtk_font_chooser_set_font_desc");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_font_desc(GtkFontChooser* fontchooser, const PangoFontDescription* font_desc);
     * }
     */
    public static void gtk_font_chooser_set_font_desc(MemorySegment fontchooser, MemorySegment font_desc) {
        var mh$ = gtk_font_chooser_set_font_desc$MH();
        try {
            mh$.invokeExact(fontchooser, font_desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.gtk_font_chooser_get_font$MH,"gtk_font_chooser_get_font");
    }
    /**
     * {@snippet :
     * gchar* gtk_font_chooser_get_font(GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_font(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.gtk_font_chooser_set_font$MH,"gtk_font_chooser_set_font");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_font(GtkFontChooser* fontchooser, const gchar* fontname);
     * }
     */
    public static void gtk_font_chooser_set_font(MemorySegment fontchooser, MemorySegment fontname) {
        var mh$ = gtk_font_chooser_set_font$MH();
        try {
            mh$.invokeExact(fontchooser, fontname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_preview_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.gtk_font_chooser_get_preview_text$MH,"gtk_font_chooser_get_preview_text");
    }
    /**
     * {@snippet :
     * gchar* gtk_font_chooser_get_preview_text(GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_preview_text(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_preview_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_preview_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.gtk_font_chooser_set_preview_text$MH,"gtk_font_chooser_set_preview_text");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_preview_text(GtkFontChooser* fontchooser, const gchar* text);
     * }
     */
    public static void gtk_font_chooser_set_preview_text(MemorySegment fontchooser, MemorySegment text) {
        var mh$ = gtk_font_chooser_set_preview_text$MH();
        try {
            mh$.invokeExact(fontchooser, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_show_preview_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.gtk_font_chooser_get_show_preview_entry$MH,"gtk_font_chooser_get_show_preview_entry");
    }
    /**
     * {@snippet :
     * gboolean gtk_font_chooser_get_show_preview_entry(GtkFontChooser* fontchooser);
     * }
     */
    public static int gtk_font_chooser_get_show_preview_entry(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_show_preview_entry$MH();
        try {
            return (int)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_show_preview_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.gtk_font_chooser_set_show_preview_entry$MH,"gtk_font_chooser_set_show_preview_entry");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_show_preview_entry(GtkFontChooser* fontchooser, gboolean show_preview_entry);
     * }
     */
    public static void gtk_font_chooser_set_show_preview_entry(MemorySegment fontchooser, int show_preview_entry) {
        var mh$ = gtk_font_chooser_set_show_preview_entry$MH();
        try {
            mh$.invokeExact(fontchooser, show_preview_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_filter_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.gtk_font_chooser_set_filter_func$MH,"gtk_font_chooser_set_filter_func");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_filter_func(GtkFontChooser* fontchooser, GtkFontFilterFunc filter, gpointer user_data, GDestroyNotify destroy);
     * }
     */
    public static void gtk_font_chooser_set_filter_func(MemorySegment fontchooser, MemorySegment filter, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_font_chooser_set_filter_func$MH();
        try {
            mh$.invokeExact(fontchooser, filter, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_font_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1598.gtk_font_chooser_set_font_map$MH,"gtk_font_chooser_set_font_map");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_font_map(GtkFontChooser* fontchooser, PangoFontMap* fontmap);
     * }
     */
    public static void gtk_font_chooser_set_font_map(MemorySegment fontchooser, MemorySegment fontmap) {
        var mh$ = gtk_font_chooser_set_font_map$MH();
        try {
            mh$.invokeExact(fontchooser, fontmap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1598.gtk_font_chooser_get_font_map$MH,"gtk_font_chooser_get_font_map");
    }
    /**
     * {@snippet :
     * PangoFontMap* gtk_font_chooser_get_font_map(GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_font_map(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font_map$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_level$MH() {
        return RuntimeHelper.requireNonNull(constants$1598.gtk_font_chooser_set_level$MH,"gtk_font_chooser_set_level");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_level(GtkFontChooser* fontchooser, GtkFontChooserLevel level);
     * }
     */
    public static void gtk_font_chooser_set_level(MemorySegment fontchooser, int level) {
        var mh$ = gtk_font_chooser_set_level$MH();
        try {
            mh$.invokeExact(fontchooser, level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_level$MH() {
        return RuntimeHelper.requireNonNull(constants$1598.gtk_font_chooser_get_level$MH,"gtk_font_chooser_get_level");
    }
    /**
     * {@snippet :
     * GtkFontChooserLevel gtk_font_chooser_get_level(GtkFontChooser* fontchooser);
     * }
     */
    public static int gtk_font_chooser_get_level(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_level$MH();
        try {
            return (int)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_features$MH() {
        return RuntimeHelper.requireNonNull(constants$1598.gtk_font_chooser_get_font_features$MH,"gtk_font_chooser_get_font_features");
    }
    /**
     * {@snippet :
     * char* gtk_font_chooser_get_font_features(GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_font_features(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font_features$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_language$MH() {
        return RuntimeHelper.requireNonNull(constants$1598.gtk_font_chooser_get_language$MH,"gtk_font_chooser_get_language");
    }
    /**
     * {@snippet :
     * char* gtk_font_chooser_get_language(GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_language(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_language$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_language$MH() {
        return RuntimeHelper.requireNonNull(constants$1599.gtk_font_chooser_set_language$MH,"gtk_font_chooser_set_language");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_language(GtkFontChooser* fontchooser, char* language);
     * }
     */
    public static void gtk_font_chooser_set_language(MemorySegment fontchooser, MemorySegment language) {
        var mh$ = gtk_font_chooser_set_language$MH();
        try {
            mh$.invokeExact(fontchooser, language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1599.gtk_font_chooser_dialog_get_type$MH,"gtk_font_chooser_dialog_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_font_chooser_dialog_get_type();
     * }
     */
    public static long gtk_font_chooser_dialog_get_type() {
        var mh$ = gtk_font_chooser_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1599.gtk_font_chooser_dialog_new$MH,"gtk_font_chooser_dialog_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_font_chooser_dialog_new(const gchar* title, GtkWindow* parent);
     * }
     */
    public static MemorySegment gtk_font_chooser_dialog_new(MemorySegment title, MemorySegment parent) {
        var mh$ = gtk_font_chooser_dialog_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(title, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_widget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1599.gtk_font_chooser_widget_get_type$MH,"gtk_font_chooser_widget_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_font_chooser_widget_get_type();
     * }
     */
    public static long gtk_font_chooser_widget_get_type() {
        var mh$ = gtk_font_chooser_widget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_widget_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1599.gtk_font_chooser_widget_new$MH,"gtk_font_chooser_widget_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_font_chooser_widget_new();
     * }
     */
    public static MemorySegment gtk_font_chooser_widget_new() {
        var mh$ = gtk_font_chooser_widget_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1599.gtk_gesture_get_type$MH,"gtk_gesture_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_get_type();
     * }
     */
    public static long gtk_gesture_get_type() {
        var mh$ = gtk_gesture_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.gtk_gesture_get_device$MH,"gtk_gesture_get_device");
    }
    /**
     * {@snippet :
     * GdkDevice* gtk_gesture_get_device(GtkGesture* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_get_device(MemorySegment gesture) {
        var mh$ = gtk_gesture_get_device$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_set_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.gtk_gesture_set_state$MH,"gtk_gesture_set_state");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_set_state(GtkGesture* gesture, GtkEventSequenceState state);
     * }
     */
    public static int gtk_gesture_set_state(MemorySegment gesture, int state) {
        var mh$ = gtk_gesture_set_state$MH();
        try {
            return (int)mh$.invokeExact(gesture, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_sequence_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.gtk_gesture_get_sequence_state$MH,"gtk_gesture_get_sequence_state");
    }
    /**
     * {@snippet :
     * GtkEventSequenceState gtk_gesture_get_sequence_state(GtkGesture* gesture, GdkEventSequence* sequence);
     * }
     */
    public static int gtk_gesture_get_sequence_state(MemorySegment gesture, MemorySegment sequence) {
        var mh$ = gtk_gesture_get_sequence_state$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_set_sequence_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.gtk_gesture_set_sequence_state$MH,"gtk_gesture_set_sequence_state");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_set_sequence_state(GtkGesture* gesture, GdkEventSequence* sequence, GtkEventSequenceState state);
     * }
     */
    public static int gtk_gesture_set_sequence_state(MemorySegment gesture, MemorySegment sequence, int state) {
        var mh$ = gtk_gesture_set_sequence_state$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_sequences$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.gtk_gesture_get_sequences$MH,"gtk_gesture_get_sequences");
    }
    /**
     * {@snippet :
     * GList* gtk_gesture_get_sequences(GtkGesture* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_get_sequences(MemorySegment gesture) {
        var mh$ = gtk_gesture_get_sequences$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_last_updated_sequence$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.gtk_gesture_get_last_updated_sequence$MH,"gtk_gesture_get_last_updated_sequence");
    }
    /**
     * {@snippet :
     * GdkEventSequence* gtk_gesture_get_last_updated_sequence(GtkGesture* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_get_last_updated_sequence(MemorySegment gesture) {
        var mh$ = gtk_gesture_get_last_updated_sequence$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_handles_sequence$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.gtk_gesture_handles_sequence$MH,"gtk_gesture_handles_sequence");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_handles_sequence(GtkGesture* gesture, GdkEventSequence* sequence);
     * }
     */
    public static int gtk_gesture_handles_sequence(MemorySegment gesture, MemorySegment sequence) {
        var mh$ = gtk_gesture_handles_sequence$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_last_event$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.gtk_gesture_get_last_event$MH,"gtk_gesture_get_last_event");
    }
    /**
     * {@snippet :
     * const GdkEvent* gtk_gesture_get_last_event(GtkGesture* gesture, GdkEventSequence* sequence);
     * }
     */
    public static MemorySegment gtk_gesture_get_last_event(MemorySegment gesture, MemorySegment sequence) {
        var mh$ = gtk_gesture_get_last_event$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture, sequence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.gtk_gesture_get_point$MH,"gtk_gesture_get_point");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_get_point(GtkGesture* gesture, GdkEventSequence* sequence, gdouble* x, gdouble* y);
     * }
     */
    public static int gtk_gesture_get_point(MemorySegment gesture, MemorySegment sequence, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_gesture_get_point$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_bounding_box$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.gtk_gesture_get_bounding_box$MH,"gtk_gesture_get_bounding_box");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_get_bounding_box(GtkGesture* gesture, GdkRectangle* rect);
     * }
     */
    public static int gtk_gesture_get_bounding_box(MemorySegment gesture, MemorySegment rect) {
        var mh$ = gtk_gesture_get_bounding_box$MH();
        try {
            return (int)mh$.invokeExact(gesture, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_bounding_box_center$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.gtk_gesture_get_bounding_box_center$MH,"gtk_gesture_get_bounding_box_center");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_get_bounding_box_center(GtkGesture* gesture, gdouble* x, gdouble* y);
     * }
     */
    public static int gtk_gesture_get_bounding_box_center(MemorySegment gesture, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_gesture_get_bounding_box_center$MH();
        try {
            return (int)mh$.invokeExact(gesture, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_is_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.gtk_gesture_is_active$MH,"gtk_gesture_is_active");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_is_active(GtkGesture* gesture);
     * }
     */
    public static int gtk_gesture_is_active(MemorySegment gesture) {
        var mh$ = gtk_gesture_is_active$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_is_recognized$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.gtk_gesture_is_recognized$MH,"gtk_gesture_is_recognized");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_is_recognized(GtkGesture* gesture);
     * }
     */
    public static int gtk_gesture_is_recognized(MemorySegment gesture) {
        var mh$ = gtk_gesture_is_recognized$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.gtk_gesture_get_window$MH,"gtk_gesture_get_window");
    }
    /**
     * {@snippet :
     * GdkWindow* gtk_gesture_get_window(GtkGesture* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_get_window(MemorySegment gesture) {
        var mh$ = gtk_gesture_get_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_set_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.gtk_gesture_set_window$MH,"gtk_gesture_set_window");
    }
    /**
     * {@snippet :
     * void gtk_gesture_set_window(GtkGesture* gesture, GdkWindow* window);
     * }
     */
    public static void gtk_gesture_set_window(MemorySegment gesture, MemorySegment window) {
        var mh$ = gtk_gesture_set_window$MH();
        try {
            mh$.invokeExact(gesture, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.gtk_gesture_group$MH,"gtk_gesture_group");
    }
    /**
     * {@snippet :
     * void gtk_gesture_group(GtkGesture* group_gesture, GtkGesture* gesture);
     * }
     */
    public static void gtk_gesture_group(MemorySegment group_gesture, MemorySegment gesture) {
        var mh$ = gtk_gesture_group$MH();
        try {
            mh$.invokeExact(group_gesture, gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_ungroup$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.gtk_gesture_ungroup$MH,"gtk_gesture_ungroup");
    }
    /**
     * {@snippet :
     * void gtk_gesture_ungroup(GtkGesture* gesture);
     * }
     */
    public static void gtk_gesture_ungroup(MemorySegment gesture) {
        var mh$ = gtk_gesture_ungroup$MH();
        try {
            mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.gtk_gesture_get_group$MH,"gtk_gesture_get_group");
    }
    /**
     * {@snippet :
     * GList* gtk_gesture_get_group(GtkGesture* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_get_group(MemorySegment gesture) {
        var mh$ = gtk_gesture_get_group$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_is_grouped_with$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.gtk_gesture_is_grouped_with$MH,"gtk_gesture_is_grouped_with");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_is_grouped_with(GtkGesture* gesture, GtkGesture* other);
     * }
     */
    public static int gtk_gesture_is_grouped_with(MemorySegment gesture, MemorySegment other) {
        var mh$ = gtk_gesture_is_grouped_with$MH();
        try {
            return (int)mh$.invokeExact(gesture, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.gtk_gesture_single_get_type$MH,"gtk_gesture_single_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_single_get_type();
     * }
     */
    public static long gtk_gesture_single_get_type() {
        var mh$ = gtk_gesture_single_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_touch_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.gtk_gesture_single_get_touch_only$MH,"gtk_gesture_single_get_touch_only");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_single_get_touch_only(GtkGestureSingle* gesture);
     * }
     */
    public static int gtk_gesture_single_get_touch_only(MemorySegment gesture) {
        var mh$ = gtk_gesture_single_get_touch_only$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_set_touch_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.gtk_gesture_single_set_touch_only$MH,"gtk_gesture_single_set_touch_only");
    }
    /**
     * {@snippet :
     * void gtk_gesture_single_set_touch_only(GtkGestureSingle* gesture, gboolean touch_only);
     * }
     */
    public static void gtk_gesture_single_set_touch_only(MemorySegment gesture, int touch_only) {
        var mh$ = gtk_gesture_single_set_touch_only$MH();
        try {
            mh$.invokeExact(gesture, touch_only);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_exclusive$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.gtk_gesture_single_get_exclusive$MH,"gtk_gesture_single_get_exclusive");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_single_get_exclusive(GtkGestureSingle* gesture);
     * }
     */
    public static int gtk_gesture_single_get_exclusive(MemorySegment gesture) {
        var mh$ = gtk_gesture_single_get_exclusive$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_set_exclusive$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.gtk_gesture_single_set_exclusive$MH,"gtk_gesture_single_set_exclusive");
    }
    /**
     * {@snippet :
     * void gtk_gesture_single_set_exclusive(GtkGestureSingle* gesture, gboolean exclusive);
     * }
     */
    public static void gtk_gesture_single_set_exclusive(MemorySegment gesture, int exclusive) {
        var mh$ = gtk_gesture_single_set_exclusive$MH();
        try {
            mh$.invokeExact(gesture, exclusive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1604.gtk_gesture_single_get_button$MH,"gtk_gesture_single_get_button");
    }
    /**
     * {@snippet :
     * guint gtk_gesture_single_get_button(GtkGestureSingle* gesture);
     * }
     */
    public static int gtk_gesture_single_get_button(MemorySegment gesture) {
        var mh$ = gtk_gesture_single_get_button$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_set_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1604.gtk_gesture_single_set_button$MH,"gtk_gesture_single_set_button");
    }
    /**
     * {@snippet :
     * void gtk_gesture_single_set_button(GtkGestureSingle* gesture, guint button);
     * }
     */
    public static void gtk_gesture_single_set_button(MemorySegment gesture, int button) {
        var mh$ = gtk_gesture_single_set_button$MH();
        try {
            mh$.invokeExact(gesture, button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_current_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1604.gtk_gesture_single_get_current_button$MH,"gtk_gesture_single_get_current_button");
    }
    /**
     * {@snippet :
     * guint gtk_gesture_single_get_current_button(GtkGestureSingle* gesture);
     * }
     */
    public static int gtk_gesture_single_get_current_button(MemorySegment gesture) {
        var mh$ = gtk_gesture_single_get_current_button$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_current_sequence$MH() {
        return RuntimeHelper.requireNonNull(constants$1604.gtk_gesture_single_get_current_sequence$MH,"gtk_gesture_single_get_current_sequence");
    }
    /**
     * {@snippet :
     * GdkEventSequence* gtk_gesture_single_get_current_sequence(GtkGestureSingle* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_single_get_current_sequence(MemorySegment gesture) {
        var mh$ = gtk_gesture_single_get_current_sequence$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1604.gtk_gesture_drag_get_type$MH,"gtk_gesture_drag_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_drag_get_type();
     * }
     */
    public static long gtk_gesture_drag_get_type() {
        var mh$ = gtk_gesture_drag_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1604.gtk_gesture_drag_new$MH,"gtk_gesture_drag_new");
    }
    /**
     * {@snippet :
     * GtkGesture* gtk_gesture_drag_new(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_gesture_drag_new(MemorySegment widget) {
        var mh$ = gtk_gesture_drag_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_get_start_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1605.gtk_gesture_drag_get_start_point$MH,"gtk_gesture_drag_get_start_point");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_drag_get_start_point(GtkGestureDrag* gesture, gdouble* x, gdouble* y);
     * }
     */
    public static int gtk_gesture_drag_get_start_point(MemorySegment gesture, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_gesture_drag_get_start_point$MH();
        try {
            return (int)mh$.invokeExact(gesture, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_get_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1605.gtk_gesture_drag_get_offset$MH,"gtk_gesture_drag_get_offset");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_drag_get_offset(GtkGestureDrag* gesture, gdouble* x, gdouble* y);
     * }
     */
    public static int gtk_gesture_drag_get_offset(MemorySegment gesture, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_gesture_drag_get_offset$MH();
        try {
            return (int)mh$.invokeExact(gesture, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_long_press_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1605.gtk_gesture_long_press_get_type$MH,"gtk_gesture_long_press_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_long_press_get_type();
     * }
     */
    public static long gtk_gesture_long_press_get_type() {
        var mh$ = gtk_gesture_long_press_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_long_press_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1605.gtk_gesture_long_press_new$MH,"gtk_gesture_long_press_new");
    }
    /**
     * {@snippet :
     * GtkGesture* gtk_gesture_long_press_new(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_gesture_long_press_new(MemorySegment widget) {
        var mh$ = gtk_gesture_long_press_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_multi_press_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1605.gtk_gesture_multi_press_get_type$MH,"gtk_gesture_multi_press_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_multi_press_get_type();
     * }
     */
    public static long gtk_gesture_multi_press_get_type() {
        var mh$ = gtk_gesture_multi_press_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_multi_press_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1605.gtk_gesture_multi_press_new$MH,"gtk_gesture_multi_press_new");
    }
    /**
     * {@snippet :
     * GtkGesture* gtk_gesture_multi_press_new(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_gesture_multi_press_new(MemorySegment widget) {
        var mh$ = gtk_gesture_multi_press_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_multi_press_set_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1606.gtk_gesture_multi_press_set_area$MH,"gtk_gesture_multi_press_set_area");
    }
    /**
     * {@snippet :
     * void gtk_gesture_multi_press_set_area(GtkGestureMultiPress* gesture, const GdkRectangle* rect);
     * }
     */
    public static void gtk_gesture_multi_press_set_area(MemorySegment gesture, MemorySegment rect) {
        var mh$ = gtk_gesture_multi_press_set_area$MH();
        try {
            mh$.invokeExact(gesture, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_multi_press_get_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1606.gtk_gesture_multi_press_get_area$MH,"gtk_gesture_multi_press_get_area");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_multi_press_get_area(GtkGestureMultiPress* gesture, GdkRectangle* rect);
     * }
     */
    public static int gtk_gesture_multi_press_get_area(MemorySegment gesture, MemorySegment rect) {
        var mh$ = gtk_gesture_multi_press_get_area$MH();
        try {
            return (int)mh$.invokeExact(gesture, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1606.gtk_gesture_pan_get_type$MH,"gtk_gesture_pan_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_pan_get_type();
     * }
     */
    public static long gtk_gesture_pan_get_type() {
        var mh$ = gtk_gesture_pan_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1606.gtk_gesture_pan_new$MH,"gtk_gesture_pan_new");
    }
    /**
     * {@snippet :
     * GtkGesture* gtk_gesture_pan_new(GtkWidget* widget, GtkOrientation orientation);
     * }
     */
    public static MemorySegment gtk_gesture_pan_new(MemorySegment widget, int orientation) {
        var mh$ = gtk_gesture_pan_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_get_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$1606.gtk_gesture_pan_get_orientation$MH,"gtk_gesture_pan_get_orientation");
    }
    /**
     * {@snippet :
     * GtkOrientation gtk_gesture_pan_get_orientation(GtkGesturePan* gesture);
     * }
     */
    public static int gtk_gesture_pan_get_orientation(MemorySegment gesture) {
        var mh$ = gtk_gesture_pan_get_orientation$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_set_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$1606.gtk_gesture_pan_set_orientation$MH,"gtk_gesture_pan_set_orientation");
    }
    /**
     * {@snippet :
     * void gtk_gesture_pan_set_orientation(GtkGesturePan* gesture, GtkOrientation orientation);
     * }
     */
    public static void gtk_gesture_pan_set_orientation(MemorySegment gesture, int orientation) {
        var mh$ = gtk_gesture_pan_set_orientation$MH();
        try {
            mh$.invokeExact(gesture, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_rotate_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1607.gtk_gesture_rotate_get_type$MH,"gtk_gesture_rotate_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_rotate_get_type();
     * }
     */
    public static long gtk_gesture_rotate_get_type() {
        var mh$ = gtk_gesture_rotate_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_rotate_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1607.gtk_gesture_rotate_new$MH,"gtk_gesture_rotate_new");
    }
    /**
     * {@snippet :
     * GtkGesture* gtk_gesture_rotate_new(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_gesture_rotate_new(MemorySegment widget) {
        var mh$ = gtk_gesture_rotate_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_rotate_get_angle_delta$MH() {
        return RuntimeHelper.requireNonNull(constants$1607.gtk_gesture_rotate_get_angle_delta$MH,"gtk_gesture_rotate_get_angle_delta");
    }
    /**
     * {@snippet :
     * gdouble gtk_gesture_rotate_get_angle_delta(GtkGestureRotate* gesture);
     * }
     */
    public static double gtk_gesture_rotate_get_angle_delta(MemorySegment gesture) {
        var mh$ = gtk_gesture_rotate_get_angle_delta$MH();
        try {
            return (double)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1607.gtk_gesture_stylus_get_type$MH,"gtk_gesture_stylus_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_stylus_get_type();
     * }
     */
    public static long gtk_gesture_stylus_get_type() {
        var mh$ = gtk_gesture_stylus_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1607.gtk_gesture_stylus_new$MH,"gtk_gesture_stylus_new");
    }
    /**
     * {@snippet :
     * GtkGesture* gtk_gesture_stylus_new(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_gesture_stylus_new(MemorySegment widget) {
        var mh$ = gtk_gesture_stylus_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_axis$MH() {
        return RuntimeHelper.requireNonNull(constants$1607.gtk_gesture_stylus_get_axis$MH,"gtk_gesture_stylus_get_axis");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_stylus_get_axis(GtkGestureStylus* gesture, GdkAxisUse axis, gdouble* value);
     * }
     */
    public static int gtk_gesture_stylus_get_axis(MemorySegment gesture, int axis, MemorySegment value) {
        var mh$ = gtk_gesture_stylus_get_axis$MH();
        try {
            return (int)mh$.invokeExact(gesture, axis, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_axes$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.gtk_gesture_stylus_get_axes$MH,"gtk_gesture_stylus_get_axes");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_stylus_get_axes(GtkGestureStylus* gesture, GdkAxisUse axes[], gdouble** values);
     * }
     */
    public static int gtk_gesture_stylus_get_axes(MemorySegment gesture, MemorySegment axes, MemorySegment values) {
        var mh$ = gtk_gesture_stylus_get_axes$MH();
        try {
            return (int)mh$.invokeExact(gesture, axes, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_device_tool$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.gtk_gesture_stylus_get_device_tool$MH,"gtk_gesture_stylus_get_device_tool");
    }
    /**
     * {@snippet :
     * GdkDeviceTool* gtk_gesture_stylus_get_device_tool(GtkGestureStylus* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_stylus_get_device_tool(MemorySegment gesture) {
        var mh$ = gtk_gesture_stylus_get_device_tool$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_swipe_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.gtk_gesture_swipe_get_type$MH,"gtk_gesture_swipe_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_swipe_get_type();
     * }
     */
    public static long gtk_gesture_swipe_get_type() {
        var mh$ = gtk_gesture_swipe_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_swipe_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.gtk_gesture_swipe_new$MH,"gtk_gesture_swipe_new");
    }
    /**
     * {@snippet :
     * GtkGesture* gtk_gesture_swipe_new(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_gesture_swipe_new(MemorySegment widget) {
        var mh$ = gtk_gesture_swipe_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_swipe_get_velocity$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.gtk_gesture_swipe_get_velocity$MH,"gtk_gesture_swipe_get_velocity");
    }
    /**
     * {@snippet :
     * gboolean gtk_gesture_swipe_get_velocity(GtkGestureSwipe* gesture, gdouble* velocity_x, gdouble* velocity_y);
     * }
     */
    public static int gtk_gesture_swipe_get_velocity(MemorySegment gesture, MemorySegment velocity_x, MemorySegment velocity_y) {
        var mh$ = gtk_gesture_swipe_get_velocity$MH();
        try {
            return (int)mh$.invokeExact(gesture, velocity_x, velocity_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_zoom_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.gtk_gesture_zoom_get_type$MH,"gtk_gesture_zoom_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gesture_zoom_get_type();
     * }
     */
    public static long gtk_gesture_zoom_get_type() {
        var mh$ = gtk_gesture_zoom_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_zoom_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.gtk_gesture_zoom_new$MH,"gtk_gesture_zoom_new");
    }
    /**
     * {@snippet :
     * GtkGesture* gtk_gesture_zoom_new(GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_gesture_zoom_new(MemorySegment widget) {
        var mh$ = gtk_gesture_zoom_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_zoom_get_scale_delta$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.gtk_gesture_zoom_get_scale_delta$MH,"gtk_gesture_zoom_get_scale_delta");
    }
    /**
     * {@snippet :
     * gdouble gtk_gesture_zoom_get_scale_delta(GtkGestureZoom* gesture);
     * }
     */
    public static double gtk_gesture_zoom_get_scale_delta(MemorySegment gesture) {
        var mh$ = gtk_gesture_zoom_get_scale_delta$MH();
        try {
            return (double)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.gtk_gl_area_get_type$MH,"gtk_gl_area_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_gl_area_get_type();
     * }
     */
    public static long gtk_gl_area_get_type() {
        var mh$ = gtk_gl_area_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.gtk_gl_area_new$MH,"gtk_gl_area_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_gl_area_new();
     * }
     */
    public static MemorySegment gtk_gl_area_new() {
        var mh$ = gtk_gl_area_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_use_es$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.gtk_gl_area_set_use_es$MH,"gtk_gl_area_set_use_es");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_use_es(GtkGLArea* area, gboolean use_es);
     * }
     */
    public static void gtk_gl_area_set_use_es(MemorySegment area, int use_es) {
        var mh$ = gtk_gl_area_set_use_es$MH();
        try {
            mh$.invokeExact(area, use_es);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_use_es$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.gtk_gl_area_get_use_es$MH,"gtk_gl_area_get_use_es");
    }
    /**
     * {@snippet :
     * gboolean gtk_gl_area_get_use_es(GtkGLArea* area);
     * }
     */
    public static int gtk_gl_area_get_use_es(MemorySegment area) {
        var mh$ = gtk_gl_area_get_use_es$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_required_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.gtk_gl_area_set_required_version$MH,"gtk_gl_area_set_required_version");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_required_version(GtkGLArea* area, gint major, gint minor);
     * }
     */
    public static void gtk_gl_area_set_required_version(MemorySegment area, int major, int minor) {
        var mh$ = gtk_gl_area_set_required_version$MH();
        try {
            mh$.invokeExact(area, major, minor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_required_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.gtk_gl_area_get_required_version$MH,"gtk_gl_area_get_required_version");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_get_required_version(GtkGLArea* area, gint* major, gint* minor);
     * }
     */
    public static void gtk_gl_area_get_required_version(MemorySegment area, MemorySegment major, MemorySegment minor) {
        var mh$ = gtk_gl_area_get_required_version$MH();
        try {
            mh$.invokeExact(area, major, minor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_has_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.gtk_gl_area_get_has_alpha$MH,"gtk_gl_area_get_has_alpha");
    }
    /**
     * {@snippet :
     * gboolean gtk_gl_area_get_has_alpha(GtkGLArea* area);
     * }
     */
    public static int gtk_gl_area_get_has_alpha(MemorySegment area) {
        var mh$ = gtk_gl_area_get_has_alpha$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_has_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.gtk_gl_area_set_has_alpha$MH,"gtk_gl_area_set_has_alpha");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_has_alpha(GtkGLArea* area, gboolean has_alpha);
     * }
     */
    public static void gtk_gl_area_set_has_alpha(MemorySegment area, int has_alpha) {
        var mh$ = gtk_gl_area_set_has_alpha$MH();
        try {
            mh$.invokeExact(area, has_alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_has_depth_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.gtk_gl_area_get_has_depth_buffer$MH,"gtk_gl_area_get_has_depth_buffer");
    }
    /**
     * {@snippet :
     * gboolean gtk_gl_area_get_has_depth_buffer(GtkGLArea* area);
     * }
     */
    public static int gtk_gl_area_get_has_depth_buffer(MemorySegment area) {
        var mh$ = gtk_gl_area_get_has_depth_buffer$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_has_depth_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.gtk_gl_area_set_has_depth_buffer$MH,"gtk_gl_area_set_has_depth_buffer");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_has_depth_buffer(GtkGLArea* area, gboolean has_depth_buffer);
     * }
     */
    public static void gtk_gl_area_set_has_depth_buffer(MemorySegment area, int has_depth_buffer) {
        var mh$ = gtk_gl_area_set_has_depth_buffer$MH();
        try {
            mh$.invokeExact(area, has_depth_buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_has_stencil_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.gtk_gl_area_get_has_stencil_buffer$MH,"gtk_gl_area_get_has_stencil_buffer");
    }
    /**
     * {@snippet :
     * gboolean gtk_gl_area_get_has_stencil_buffer(GtkGLArea* area);
     * }
     */
    public static int gtk_gl_area_get_has_stencil_buffer(MemorySegment area) {
        var mh$ = gtk_gl_area_get_has_stencil_buffer$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_has_stencil_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.gtk_gl_area_set_has_stencil_buffer$MH,"gtk_gl_area_set_has_stencil_buffer");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_has_stencil_buffer(GtkGLArea* area, gboolean has_stencil_buffer);
     * }
     */
    public static void gtk_gl_area_set_has_stencil_buffer(MemorySegment area, int has_stencil_buffer) {
        var mh$ = gtk_gl_area_set_has_stencil_buffer$MH();
        try {
            mh$.invokeExact(area, has_stencil_buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_auto_render$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.gtk_gl_area_get_auto_render$MH,"gtk_gl_area_get_auto_render");
    }
    /**
     * {@snippet :
     * gboolean gtk_gl_area_get_auto_render(GtkGLArea* area);
     * }
     */
    public static int gtk_gl_area_get_auto_render(MemorySegment area) {
        var mh$ = gtk_gl_area_get_auto_render$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_auto_render$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.gtk_gl_area_set_auto_render$MH,"gtk_gl_area_set_auto_render");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_auto_render(GtkGLArea* area, gboolean auto_render);
     * }
     */
    public static void gtk_gl_area_set_auto_render(MemorySegment area, int auto_render) {
        var mh$ = gtk_gl_area_set_auto_render$MH();
        try {
            mh$.invokeExact(area, auto_render);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_queue_render$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.gtk_gl_area_queue_render$MH,"gtk_gl_area_queue_render");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_queue_render(GtkGLArea* area);
     * }
     */
    public static void gtk_gl_area_queue_render(MemorySegment area) {
        var mh$ = gtk_gl_area_queue_render$MH();
        try {
            mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.gtk_gl_area_get_context$MH,"gtk_gl_area_get_context");
    }
    /**
     * {@snippet :
     * GdkGLContext* gtk_gl_area_get_context(GtkGLArea* area);
     * }
     */
    public static MemorySegment gtk_gl_area_get_context(MemorySegment area) {
        var mh$ = gtk_gl_area_get_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_make_current$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.gtk_gl_area_make_current$MH,"gtk_gl_area_make_current");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_make_current(GtkGLArea* area);
     * }
     */
    public static void gtk_gl_area_make_current(MemorySegment area) {
        var mh$ = gtk_gl_area_make_current$MH();
        try {
            mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_attach_buffers$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.gtk_gl_area_attach_buffers$MH,"gtk_gl_area_attach_buffers");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_attach_buffers(GtkGLArea* area);
     * }
     */
    public static void gtk_gl_area_attach_buffers(MemorySegment area) {
        var mh$ = gtk_gl_area_attach_buffers$MH();
        try {
            mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.gtk_gl_area_set_error$MH,"gtk_gl_area_set_error");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_error(GtkGLArea* area, const GError* error);
     * }
     */
    public static void gtk_gl_area_set_error(MemorySegment area, MemorySegment error) {
        var mh$ = gtk_gl_area_set_error$MH();
        try {
            mh$.invokeExact(area, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.gtk_gl_area_get_error$MH,"gtk_gl_area_get_error");
    }
    /**
     * {@snippet :
     * GError* gtk_gl_area_get_error(GtkGLArea* area);
     * }
     */
    public static MemorySegment gtk_gl_area_get_error(MemorySegment area) {
        var mh$ = gtk_gl_area_get_error$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.gtk_grid_get_type$MH,"gtk_grid_get_type");
    }
    /**
     * {@snippet :
     * GType gtk_grid_get_type();
     * }
     */
    public static long gtk_grid_get_type() {
        var mh$ = gtk_grid_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.gtk_grid_new$MH,"gtk_grid_new");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_grid_new();
     * }
     */
    public static MemorySegment gtk_grid_new() {
        var mh$ = gtk_grid_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_attach$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.gtk_grid_attach$MH,"gtk_grid_attach");
    }
    /**
     * {@snippet :
     * void gtk_grid_attach(GtkGrid* grid, GtkWidget* child, gint left, gint top, gint width, gint height);
     * }
     */
    public static void gtk_grid_attach(MemorySegment grid, MemorySegment child, int left, int top, int width, int height) {
        var mh$ = gtk_grid_attach$MH();
        try {
            mh$.invokeExact(grid, child, left, top, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_attach_next_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.gtk_grid_attach_next_to$MH,"gtk_grid_attach_next_to");
    }
    /**
     * {@snippet :
     * void gtk_grid_attach_next_to(GtkGrid* grid, GtkWidget* child, GtkWidget* sibling, GtkPositionType side, gint width, gint height);
     * }
     */
    public static void gtk_grid_attach_next_to(MemorySegment grid, MemorySegment child, MemorySegment sibling, int side, int width, int height) {
        var mh$ = gtk_grid_attach_next_to$MH();
        try {
            mh$.invokeExact(grid, child, sibling, side, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_child_at$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.gtk_grid_get_child_at$MH,"gtk_grid_get_child_at");
    }
    /**
     * {@snippet :
     * GtkWidget* gtk_grid_get_child_at(GtkGrid* grid, gint left, gint top);
     * }
     */
    public static MemorySegment gtk_grid_get_child_at(MemorySegment grid, int left, int top) {
        var mh$ = gtk_grid_get_child_at$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(grid, left, top);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_insert_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.gtk_grid_insert_row$MH,"gtk_grid_insert_row");
    }
    /**
     * {@snippet :
     * void gtk_grid_insert_row(GtkGrid* grid, gint position);
     * }
     */
    public static void gtk_grid_insert_row(MemorySegment grid, int position) {
        var mh$ = gtk_grid_insert_row$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_insert_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.gtk_grid_insert_column$MH,"gtk_grid_insert_column");
    }
    /**
     * {@snippet :
     * void gtk_grid_insert_column(GtkGrid* grid, gint position);
     * }
     */
    public static void gtk_grid_insert_column(MemorySegment grid, int position) {
        var mh$ = gtk_grid_insert_column$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_remove_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.gtk_grid_remove_row$MH,"gtk_grid_remove_row");
    }
    /**
     * {@snippet :
     * void gtk_grid_remove_row(GtkGrid* grid, gint position);
     * }
     */
    public static void gtk_grid_remove_row(MemorySegment grid, int position) {
        var mh$ = gtk_grid_remove_row$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_remove_column$MH() {
        return RuntimeHelper.requireNonNull(constants$1614.gtk_grid_remove_column$MH,"gtk_grid_remove_column");
    }
    /**
     * {@snippet :
     * void gtk_grid_remove_column(GtkGrid* grid, gint position);
     * }
     */
    public static void gtk_grid_remove_column(MemorySegment grid, int position) {
        var mh$ = gtk_grid_remove_column$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_insert_next_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1614.gtk_grid_insert_next_to$MH,"gtk_grid_insert_next_to");
    }
    /**
     * {@snippet :
     * void gtk_grid_insert_next_to(GtkGrid* grid, GtkWidget* sibling, GtkPositionType side);
     * }
     */
    public static void gtk_grid_insert_next_to(MemorySegment grid, MemorySegment sibling, int side) {
        var mh$ = gtk_grid_insert_next_to$MH();
        try {
            mh$.invokeExact(grid, sibling, side);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_row_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1614.gtk_grid_set_row_homogeneous$MH,"gtk_grid_set_row_homogeneous");
    }
    /**
     * {@snippet :
     * void gtk_grid_set_row_homogeneous(GtkGrid* grid, gboolean homogeneous);
     * }
     */
    public static void gtk_grid_set_row_homogeneous(MemorySegment grid, int homogeneous) {
        var mh$ = gtk_grid_set_row_homogeneous$MH();
        try {
            mh$.invokeExact(grid, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_row_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1614.gtk_grid_get_row_homogeneous$MH,"gtk_grid_get_row_homogeneous");
    }
    /**
     * {@snippet :
     * gboolean gtk_grid_get_row_homogeneous(GtkGrid* grid);
     * }
     */
    public static int gtk_grid_get_row_homogeneous(MemorySegment grid) {
        var mh$ = gtk_grid_get_row_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1614.gtk_grid_set_row_spacing$MH,"gtk_grid_set_row_spacing");
    }
    /**
     * {@snippet :
     * void gtk_grid_set_row_spacing(GtkGrid* grid, guint spacing);
     * }
     */
    public static void gtk_grid_set_row_spacing(MemorySegment grid, int spacing) {
        var mh$ = gtk_grid_set_row_spacing$MH();
        try {
            mh$.invokeExact(grid, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1614.gtk_grid_get_row_spacing$MH,"gtk_grid_get_row_spacing");
    }
    /**
     * {@snippet :
     * guint gtk_grid_get_row_spacing(GtkGrid* grid);
     * }
     */
    public static int gtk_grid_get_row_spacing(MemorySegment grid) {
        var mh$ = gtk_grid_get_row_spacing$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_column_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.gtk_grid_set_column_homogeneous$MH,"gtk_grid_set_column_homogeneous");
    }
    /**
     * {@snippet :
     * void gtk_grid_set_column_homogeneous(GtkGrid* grid, gboolean homogeneous);
     * }
     */
    public static void gtk_grid_set_column_homogeneous(MemorySegment grid, int homogeneous) {
        var mh$ = gtk_grid_set_column_homogeneous$MH();
        try {
            mh$.invokeExact(grid, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_column_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.gtk_grid_get_column_homogeneous$MH,"gtk_grid_get_column_homogeneous");
    }
    /**
     * {@snippet :
     * gboolean gtk_grid_get_column_homogeneous(GtkGrid* grid);
     * }
     */
    public static int gtk_grid_get_column_homogeneous(MemorySegment grid) {
        var mh$ = gtk_grid_get_column_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.gtk_grid_set_column_spacing$MH,"gtk_grid_set_column_spacing");
    }
    /**
     * {@snippet :
     * void gtk_grid_set_column_spacing(GtkGrid* grid, guint spacing);
     * }
     */
    public static void gtk_grid_set_column_spacing(MemorySegment grid, int spacing) {
        var mh$ = gtk_grid_set_column_spacing$MH();
        try {
            mh$.invokeExact(grid, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.gtk_grid_get_column_spacing$MH,"gtk_grid_get_column_spacing");
    }
    /**
     * {@snippet :
     * guint gtk_grid_get_column_spacing(GtkGrid* grid);
     * }
     */
    public static int gtk_grid_get_column_spacing(MemorySegment grid) {
        var mh$ = gtk_grid_get_column_spacing$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_row_baseline_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.gtk_grid_set_row_baseline_position$MH,"gtk_grid_set_row_baseline_position");
    }
    /**
     * {@snippet :
     * void gtk_grid_set_row_baseline_position(GtkGrid* grid, gint row, GtkBaselinePosition pos);
     * }
     */
    public static void gtk_grid_set_row_baseline_position(MemorySegment grid, int row, int pos) {
        var mh$ = gtk_grid_set_row_baseline_position$MH();
        try {
            mh$.invokeExact(grid, row, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_row_baseline_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.gtk_grid_get_row_baseline_position$MH,"gtk_grid_get_row_baseline_position");
    }
    /**
     * {@snippet :
     * GtkBaselinePosition gtk_grid_get_row_baseline_position(GtkGrid* grid, gint row);
     * }
     */
    public static int gtk_grid_get_row_baseline_position(MemorySegment grid, int row) {
        var mh$ = gtk_grid_get_row_baseline_position$MH();
        try {
            return (int)mh$.invokeExact(grid, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


