// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.VarHandle;
import java.lang.foreign.*;

/**
 * {@snippet :
 * struct _GDBusSubtreeVTable {
 *     GDBusSubtreeEnumerateFunc enumerate;
 *     GDBusSubtreeIntrospectFunc introspect;
 *     GDBusSubtreeDispatchFunc dispatch;
 *     gpointer padding[8];
 * };
 * }
 */
public class _GDBusSubtreeVTable {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("enumerate"),
        Constants$root.C_POINTER$LAYOUT.withName("introspect"),
        Constants$root.C_POINTER$LAYOUT.withName("dispatch"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_POINTER$LAYOUT).withName("padding")
    ).withName("_GDBusSubtreeVTable");
    public static MemoryLayout $LAYOUT() {
        return _GDBusSubtreeVTable.$struct$LAYOUT;
    }
    static final VarHandle enumerate$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("enumerate"));
    public static VarHandle enumerate$VH() {
        return _GDBusSubtreeVTable.enumerate$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * GDBusSubtreeEnumerateFunc enumerate;
     * }
     */
    public static MemorySegment enumerate$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GDBusSubtreeVTable.enumerate$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * GDBusSubtreeEnumerateFunc enumerate;
     * }
     */
    public static void enumerate$set(MemorySegment seg, MemorySegment x) {
        _GDBusSubtreeVTable.enumerate$VH.set(seg, x);
    }
    public static MemorySegment enumerate$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GDBusSubtreeVTable.enumerate$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void enumerate$set(MemorySegment seg, long index, MemorySegment x) {
        _GDBusSubtreeVTable.enumerate$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static GDBusSubtreeEnumerateFunc enumerate(MemorySegment segment, SegmentScope scope) {
        return GDBusSubtreeEnumerateFunc.ofAddress(enumerate$get(segment), scope);
    }
    static final VarHandle introspect$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("introspect"));
    public static VarHandle introspect$VH() {
        return _GDBusSubtreeVTable.introspect$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * GDBusSubtreeIntrospectFunc introspect;
     * }
     */
    public static MemorySegment introspect$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GDBusSubtreeVTable.introspect$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * GDBusSubtreeIntrospectFunc introspect;
     * }
     */
    public static void introspect$set(MemorySegment seg, MemorySegment x) {
        _GDBusSubtreeVTable.introspect$VH.set(seg, x);
    }
    public static MemorySegment introspect$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GDBusSubtreeVTable.introspect$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void introspect$set(MemorySegment seg, long index, MemorySegment x) {
        _GDBusSubtreeVTable.introspect$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static GDBusSubtreeIntrospectFunc introspect(MemorySegment segment, SegmentScope scope) {
        return GDBusSubtreeIntrospectFunc.ofAddress(introspect$get(segment), scope);
    }
    static final VarHandle dispatch$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dispatch"));
    public static VarHandle dispatch$VH() {
        return _GDBusSubtreeVTable.dispatch$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * GDBusSubtreeDispatchFunc dispatch;
     * }
     */
    public static MemorySegment dispatch$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GDBusSubtreeVTable.dispatch$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * GDBusSubtreeDispatchFunc dispatch;
     * }
     */
    public static void dispatch$set(MemorySegment seg, MemorySegment x) {
        _GDBusSubtreeVTable.dispatch$VH.set(seg, x);
    }
    public static MemorySegment dispatch$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GDBusSubtreeVTable.dispatch$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dispatch$set(MemorySegment seg, long index, MemorySegment x) {
        _GDBusSubtreeVTable.dispatch$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static GDBusSubtreeDispatchFunc dispatch(MemorySegment segment, SegmentScope scope) {
        return GDBusSubtreeDispatchFunc.ofAddress(dispatch$get(segment), scope);
    }
    public static MemorySegment padding$slice(MemorySegment seg) {
        return seg.asSlice(24, 64);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


