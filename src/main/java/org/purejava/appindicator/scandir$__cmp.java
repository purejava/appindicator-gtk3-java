// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.*;

/**
 * {@snippet :
 * int (*scandir$__cmp)(struct dirent**,struct dirent**);
 * }
 */
public interface scandir$__cmp {

    int apply(java.lang.foreign.MemorySegment filter_info, java.lang.foreign.MemorySegment user_data);
    static MemorySegment allocate(scandir$__cmp fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$122.scandir$__cmp_UP$MH, fi, constants$122.scandir$__cmp$FUNC, scope);
    }
    static scandir$__cmp ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _filter_info, java.lang.foreign.MemorySegment _user_data) -> {
            try {
                return (int)constants$122.scandir$__cmp_DOWN$MH.invokeExact(symbol, _filter_info, _user_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


