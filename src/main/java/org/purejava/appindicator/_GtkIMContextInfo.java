// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import java.lang.foreign.SegmentAllocator;
import java.lang.invoke.VarHandle;
/**
 * {@snippet :
 * struct _GtkIMContextInfo {
 *     char* context_id;
 *     char* context_name;
 *     char* domain;
 *     char* domain_dirname;
 *     char* default_locales;
 * };
 * }
 */
public class _GtkIMContextInfo {

    public static MemoryLayout $LAYOUT() {
        return constants$2822.const$3;
    }
    public static VarHandle context_id$VH() {
        return constants$2822.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* context_id;
     * }
     */
    public static MemorySegment context_id$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2822.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* context_id;
     * }
     */
    public static void context_id$set(MemorySegment seg, MemorySegment x) {
        constants$2822.const$4.set(seg, x);
    }
    public static MemorySegment context_id$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2822.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void context_id$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2822.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle context_name$VH() {
        return constants$2822.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* context_name;
     * }
     */
    public static MemorySegment context_name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2822.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* context_name;
     * }
     */
    public static void context_name$set(MemorySegment seg, MemorySegment x) {
        constants$2822.const$5.set(seg, x);
    }
    public static MemorySegment context_name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2822.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void context_name$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2822.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle domain$VH() {
        return constants$2823.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* domain;
     * }
     */
    public static MemorySegment domain$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2823.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* domain;
     * }
     */
    public static void domain$set(MemorySegment seg, MemorySegment x) {
        constants$2823.const$0.set(seg, x);
    }
    public static MemorySegment domain$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2823.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void domain$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2823.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle domain_dirname$VH() {
        return constants$2823.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* domain_dirname;
     * }
     */
    public static MemorySegment domain_dirname$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2823.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* domain_dirname;
     * }
     */
    public static void domain_dirname$set(MemorySegment seg, MemorySegment x) {
        constants$2823.const$1.set(seg, x);
    }
    public static MemorySegment domain_dirname$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2823.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void domain_dirname$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2823.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle default_locales$VH() {
        return constants$2823.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* default_locales;
     * }
     */
    public static MemorySegment default_locales$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2823.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* default_locales;
     * }
     */
    public static void default_locales$set(MemorySegment seg, MemorySegment x) {
        constants$2823.const$2.set(seg, x);
    }
    public static MemorySegment default_locales$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2823.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void default_locales$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2823.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


