// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;

final class constants$1310 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$1310() {}
    static final FunctionDescriptor gtk_window_get_modal$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_window_get_modal$MH = RuntimeHelper.downcallHandle(
        "gtk_window_get_modal",
        constants$1310.gtk_window_get_modal$FUNC
    );
    static final FunctionDescriptor gtk_window_list_toplevels$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle gtk_window_list_toplevels$MH = RuntimeHelper.downcallHandle(
        "gtk_window_list_toplevels",
        constants$1310.gtk_window_list_toplevels$FUNC
    );
    static final FunctionDescriptor gtk_window_set_has_user_ref_count$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle gtk_window_set_has_user_ref_count$MH = RuntimeHelper.downcallHandle(
        "gtk_window_set_has_user_ref_count",
        constants$1310.gtk_window_set_has_user_ref_count$FUNC
    );
    static final FunctionDescriptor gtk_window_add_mnemonic$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_window_add_mnemonic$MH = RuntimeHelper.downcallHandle(
        "gtk_window_add_mnemonic",
        constants$1310.gtk_window_add_mnemonic$FUNC
    );
    static final FunctionDescriptor gtk_window_remove_mnemonic$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_window_remove_mnemonic$MH = RuntimeHelper.downcallHandle(
        "gtk_window_remove_mnemonic",
        constants$1310.gtk_window_remove_mnemonic$FUNC
    );
    static final FunctionDescriptor gtk_window_mnemonic_activate$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle gtk_window_mnemonic_activate$MH = RuntimeHelper.downcallHandle(
        "gtk_window_mnemonic_activate",
        constants$1310.gtk_window_mnemonic_activate$FUNC
    );
}


