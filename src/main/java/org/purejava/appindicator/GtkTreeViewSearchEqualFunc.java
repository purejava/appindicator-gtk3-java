// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.*;

/**
 * {@snippet :
 * int (*GtkTreeViewSearchEqualFunc)(struct _GtkTreeModel* model,int column,char* key,struct _GtkTreeIter* iter,void* search_data);
 * }
 */
public interface GtkTreeViewSearchEqualFunc {

    int apply(java.lang.foreign.MemorySegment model, int column, java.lang.foreign.MemorySegment key, java.lang.foreign.MemorySegment iter, java.lang.foreign.MemorySegment search_data);
    static MemorySegment allocate(GtkTreeViewSearchEqualFunc fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$1463.GtkTreeViewSearchEqualFunc_UP$MH, fi, constants$1463.GtkTreeViewSearchEqualFunc$FUNC, scope);
    }
    static GtkTreeViewSearchEqualFunc ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _model, int _column, java.lang.foreign.MemorySegment _key, java.lang.foreign.MemorySegment _iter, java.lang.foreign.MemorySegment _search_data) -> {
            try {
                return (int)constants$1463.GtkTreeViewSearchEqualFunc_DOWN$MH.invokeExact(symbol, _model, _column, _key, _iter, _search_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


