// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;

final class constants$426 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$426() {}
    static final FunctionDescriptor g_thread_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle g_thread_get_type$MH = RuntimeHelper.downcallHandle(
        "g_thread_get_type",
        constants$426.g_thread_get_type$FUNC
    );
    static final FunctionDescriptor g_checksum_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle g_checksum_get_type$MH = RuntimeHelper.downcallHandle(
        "g_checksum_get_type",
        constants$426.g_checksum_get_type$FUNC
    );
    static final FunctionDescriptor g_markup_parse_context_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle g_markup_parse_context_get_type$MH = RuntimeHelper.downcallHandle(
        "g_markup_parse_context_get_type",
        constants$426.g_markup_parse_context_get_type$FUNC
    );
    static final FunctionDescriptor g_mapped_file_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle g_mapped_file_get_type$MH = RuntimeHelper.downcallHandle(
        "g_mapped_file_get_type",
        constants$426.g_mapped_file_get_type$FUNC
    );
    static final FunctionDescriptor g_option_group_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle g_option_group_get_type$MH = RuntimeHelper.downcallHandle(
        "g_option_group_get_type",
        constants$426.g_option_group_get_type$FUNC
    );
    static final FunctionDescriptor g_uri_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle g_uri_get_type$MH = RuntimeHelper.downcallHandle(
        "g_uri_get_type",
        constants$426.g_uri_get_type$FUNC
    );
}


