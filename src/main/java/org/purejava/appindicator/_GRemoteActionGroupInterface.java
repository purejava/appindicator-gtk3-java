// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.lang.foreign.*;

/**
 * {@snippet :
 * struct _GRemoteActionGroupInterface {
 *     GTypeInterface g_iface;
 *     void (*activate_action_full)(GRemoteActionGroup*,const gchar*,GVariant*,GVariant*);
 *     void (*change_action_state_full)(GRemoteActionGroup*,const gchar*,GVariant*,GVariant*);
 * };
 * }
 */
public class _GRemoteActionGroupInterface {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.structLayout(
            Constants$root.C_LONG_LONG$LAYOUT.withName("g_type"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("g_instance_type")
        ).withName("g_iface"),
        Constants$root.C_POINTER$LAYOUT.withName("activate_action_full"),
        Constants$root.C_POINTER$LAYOUT.withName("change_action_state_full")
    ).withName("_GRemoteActionGroupInterface");
    public static MemoryLayout $LAYOUT() {
        return _GRemoteActionGroupInterface.$struct$LAYOUT;
    }
    public static MemorySegment g_iface$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    static final FunctionDescriptor activate_action_full$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor activate_action_full_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle activate_action_full_UP$MH = RuntimeHelper.upcallHandle(activate_action_full.class, "apply", _GRemoteActionGroupInterface.activate_action_full_UP$FUNC);
    static final FunctionDescriptor activate_action_full_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle activate_action_full_DOWN$MH = RuntimeHelper.downcallHandle(
        _GRemoteActionGroupInterface.activate_action_full_DOWN$FUNC
    );
    /**
     * {@snippet :
 * void (*activate_action_full)(GRemoteActionGroup*,const gchar*,GVariant*,GVariant*);
     * }
     */
    public interface activate_action_full {

        void apply(java.lang.foreign.MemorySegment model, java.lang.foreign.MemorySegment path, java.lang.foreign.MemorySegment iter, java.lang.foreign.MemorySegment data);
        static MemorySegment allocate(activate_action_full fi, SegmentScope scope) {
            return RuntimeHelper.upcallStub(_GRemoteActionGroupInterface.activate_action_full_UP$MH, fi, _GRemoteActionGroupInterface.activate_action_full$FUNC, scope);
        }
        static activate_action_full ofAddress(MemorySegment addr, SegmentScope scope) {
            MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
            return (java.lang.foreign.MemorySegment _model, java.lang.foreign.MemorySegment _path, java.lang.foreign.MemorySegment _iter, java.lang.foreign.MemorySegment _data) -> {
                try {
                    _GRemoteActionGroupInterface.activate_action_full_DOWN$MH.invokeExact(symbol, _model, _path, _iter, _data);
                } catch (Throwable ex$) {
                    throw new AssertionError("should not reach here", ex$);
                }
            };
        }
    }

    static final VarHandle activate_action_full$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("activate_action_full"));
    public static VarHandle activate_action_full$VH() {
        return _GRemoteActionGroupInterface.activate_action_full$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void (*activate_action_full)(GRemoteActionGroup*,const gchar*,GVariant*,GVariant*);
     * }
     */
    public static MemorySegment activate_action_full$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GRemoteActionGroupInterface.activate_action_full$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void (*activate_action_full)(GRemoteActionGroup*,const gchar*,GVariant*,GVariant*);
     * }
     */
    public static void activate_action_full$set(MemorySegment seg, MemorySegment x) {
        _GRemoteActionGroupInterface.activate_action_full$VH.set(seg, x);
    }
    public static MemorySegment activate_action_full$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GRemoteActionGroupInterface.activate_action_full$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void activate_action_full$set(MemorySegment seg, long index, MemorySegment x) {
        _GRemoteActionGroupInterface.activate_action_full$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static activate_action_full activate_action_full(MemorySegment segment, SegmentScope scope) {
        return activate_action_full.ofAddress(activate_action_full$get(segment), scope);
    }
    static final FunctionDescriptor change_action_state_full$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor change_action_state_full_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle change_action_state_full_UP$MH = RuntimeHelper.upcallHandle(change_action_state_full.class, "apply", _GRemoteActionGroupInterface.change_action_state_full_UP$FUNC);
    static final FunctionDescriptor change_action_state_full_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle change_action_state_full_DOWN$MH = RuntimeHelper.downcallHandle(
        _GRemoteActionGroupInterface.change_action_state_full_DOWN$FUNC
    );
    /**
     * {@snippet :
 * void (*change_action_state_full)(GRemoteActionGroup*,const gchar*,GVariant*,GVariant*);
     * }
     */
    public interface change_action_state_full {

        void apply(java.lang.foreign.MemorySegment model, java.lang.foreign.MemorySegment path, java.lang.foreign.MemorySegment iter, java.lang.foreign.MemorySegment data);
        static MemorySegment allocate(change_action_state_full fi, SegmentScope scope) {
            return RuntimeHelper.upcallStub(_GRemoteActionGroupInterface.change_action_state_full_UP$MH, fi, _GRemoteActionGroupInterface.change_action_state_full$FUNC, scope);
        }
        static change_action_state_full ofAddress(MemorySegment addr, SegmentScope scope) {
            MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
            return (java.lang.foreign.MemorySegment _model, java.lang.foreign.MemorySegment _path, java.lang.foreign.MemorySegment _iter, java.lang.foreign.MemorySegment _data) -> {
                try {
                    _GRemoteActionGroupInterface.change_action_state_full_DOWN$MH.invokeExact(symbol, _model, _path, _iter, _data);
                } catch (Throwable ex$) {
                    throw new AssertionError("should not reach here", ex$);
                }
            };
        }
    }

    static final VarHandle change_action_state_full$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("change_action_state_full"));
    public static VarHandle change_action_state_full$VH() {
        return _GRemoteActionGroupInterface.change_action_state_full$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void (*change_action_state_full)(GRemoteActionGroup*,const gchar*,GVariant*,GVariant*);
     * }
     */
    public static MemorySegment change_action_state_full$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GRemoteActionGroupInterface.change_action_state_full$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void (*change_action_state_full)(GRemoteActionGroup*,const gchar*,GVariant*,GVariant*);
     * }
     */
    public static void change_action_state_full$set(MemorySegment seg, MemorySegment x) {
        _GRemoteActionGroupInterface.change_action_state_full$VH.set(seg, x);
    }
    public static MemorySegment change_action_state_full$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GRemoteActionGroupInterface.change_action_state_full$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void change_action_state_full$set(MemorySegment seg, long index, MemorySegment x) {
        _GRemoteActionGroupInterface.change_action_state_full$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static change_action_state_full change_action_state_full(MemorySegment segment, SegmentScope scope) {
        return change_action_state_full.ofAddress(change_action_state_full$get(segment), scope);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


