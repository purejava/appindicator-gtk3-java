// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import java.lang.foreign.SegmentAllocator;
/**
 * {@snippet :
 * struct _PangoLogAttr {
 *      *     unsigned int is_line_break;
 *     unsigned int is_mandatory_break;
 *     unsigned int is_char_break;
 *     unsigned int is_white;
 *     unsigned int is_cursor_position;
 *     unsigned int is_word_start;
 *     unsigned int is_word_end;
 *     unsigned int is_sentence_boundary;
 *     unsigned int is_sentence_start;
 *     unsigned int is_sentence_end;
 *     unsigned int backspace_deletes_character;
 *     unsigned int is_expandable_space;
 *     unsigned int is_word_boundary;
 *     unsigned int break_inserts_hyphen;
 *     unsigned int break_removes_preceding;
 *     unsigned int reserved;
 * };
 * }
 */
public class _PangoLogAttr {

    public static MemoryLayout $LAYOUT() {
        return constants$1584.const$4;
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


