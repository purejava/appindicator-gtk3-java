// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class app_indicator_h_8 extends app_indicator_h_7 {

    public static MethodHandle g_dbus_action_group_get$MH() {
        return RuntimeHelper.requireNonNull(constants$851.const$1,"g_dbus_action_group_get");
    }
    /**
     * {@snippet :
     * struct _GDBusActionGroup* g_dbus_action_group_get(struct _GDBusConnection* connection, char* bus_name, char* object_path);
     * }
     */
    public static MemorySegment g_dbus_action_group_get(MemorySegment connection, MemorySegment bus_name, MemorySegment object_path) {
        var mh$ = g_dbus_action_group_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, bus_name, object_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_address_escape_value$MH() {
        return RuntimeHelper.requireNonNull(constants$851.const$2,"g_dbus_address_escape_value");
    }
    /**
     * {@snippet :
     * char* g_dbus_address_escape_value(char* string);
     * }
     */
    public static MemorySegment g_dbus_address_escape_value(MemorySegment string) {
        var mh$ = g_dbus_address_escape_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_is_address$MH() {
        return RuntimeHelper.requireNonNull(constants$851.const$3,"g_dbus_is_address");
    }
    /**
     * {@snippet :
     * int g_dbus_is_address(char* string);
     * }
     */
    public static int g_dbus_is_address(MemorySegment string) {
        var mh$ = g_dbus_is_address$MH();
        try {
            return (int)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_is_supported_address$MH() {
        return RuntimeHelper.requireNonNull(constants$851.const$4,"g_dbus_is_supported_address");
    }
    /**
     * {@snippet :
     * int g_dbus_is_supported_address(char* string, struct _GError** error);
     * }
     */
    public static int g_dbus_is_supported_address(MemorySegment string, MemorySegment error) {
        var mh$ = g_dbus_is_supported_address$MH();
        try {
            return (int)mh$.invokeExact(string, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_address_get_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$852.const$0,"g_dbus_address_get_stream");
    }
    /**
     * {@snippet :
     * void g_dbus_address_get_stream(char* address, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_dbus_address_get_stream(MemorySegment address, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_address_get_stream$MH();
        try {
            mh$.invokeExact(address, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_address_get_stream_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$852.const$1,"g_dbus_address_get_stream_finish");
    }
    /**
     * {@snippet :
     * struct _GIOStream* g_dbus_address_get_stream_finish(struct _GAsyncResult* res, char** out_guid, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_address_get_stream_finish(MemorySegment res, MemorySegment out_guid, MemorySegment error) {
        var mh$ = g_dbus_address_get_stream_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(res, out_guid, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_address_get_stream_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$852.const$2,"g_dbus_address_get_stream_sync");
    }
    /**
     * {@snippet :
     * struct _GIOStream* g_dbus_address_get_stream_sync(char* address, char** out_guid, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_address_get_stream_sync(MemorySegment address, MemorySegment out_guid, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_address_get_stream_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(address, out_guid, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_address_get_for_bus_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$852.const$3,"g_dbus_address_get_for_bus_sync");
    }
    /**
     * {@snippet :
     * char* g_dbus_address_get_for_bus_sync(enum GBusType bus_type, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_address_get_for_bus_sync(int bus_type, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_address_get_for_bus_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bus_type, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_auth_observer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$852.const$4,"g_dbus_auth_observer_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_auth_observer_get_type();
     * }
     */
    public static long g_dbus_auth_observer_get_type() {
        var mh$ = g_dbus_auth_observer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_auth_observer_new$MH() {
        return RuntimeHelper.requireNonNull(constants$852.const$5,"g_dbus_auth_observer_new");
    }
    /**
     * {@snippet :
     * struct _GDBusAuthObserver* g_dbus_auth_observer_new();
     * }
     */
    public static MemorySegment g_dbus_auth_observer_new() {
        var mh$ = g_dbus_auth_observer_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_auth_observer_authorize_authenticated_peer$MH() {
        return RuntimeHelper.requireNonNull(constants$853.const$0,"g_dbus_auth_observer_authorize_authenticated_peer");
    }
    /**
     * {@snippet :
     * int g_dbus_auth_observer_authorize_authenticated_peer(struct _GDBusAuthObserver* observer, struct _GIOStream* stream, struct _GCredentials* credentials);
     * }
     */
    public static int g_dbus_auth_observer_authorize_authenticated_peer(MemorySegment observer, MemorySegment stream, MemorySegment credentials) {
        var mh$ = g_dbus_auth_observer_authorize_authenticated_peer$MH();
        try {
            return (int)mh$.invokeExact(observer, stream, credentials);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_auth_observer_allow_mechanism$MH() {
        return RuntimeHelper.requireNonNull(constants$853.const$1,"g_dbus_auth_observer_allow_mechanism");
    }
    /**
     * {@snippet :
     * int g_dbus_auth_observer_allow_mechanism(struct _GDBusAuthObserver* observer, char* mechanism);
     * }
     */
    public static int g_dbus_auth_observer_allow_mechanism(MemorySegment observer, MemorySegment mechanism) {
        var mh$ = g_dbus_auth_observer_allow_mechanism$MH();
        try {
            return (int)mh$.invokeExact(observer, mechanism);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$853.const$2,"g_dbus_connection_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_connection_get_type();
     * }
     */
    public static long g_dbus_connection_get_type() {
        var mh$ = g_dbus_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bus_get$MH() {
        return RuntimeHelper.requireNonNull(constants$853.const$5,"g_bus_get");
    }
    /**
     * {@snippet :
     * void g_bus_get(enum GBusType bus_type, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_bus_get(int bus_type, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_bus_get$MH();
        try {
            mh$.invokeExact(bus_type, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bus_get_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$854.const$0,"g_bus_get_finish");
    }
    /**
     * {@snippet :
     * struct _GDBusConnection* g_bus_get_finish(struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_bus_get_finish(MemorySegment res, MemorySegment error) {
        var mh$ = g_bus_get_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bus_get_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$854.const$1,"g_bus_get_sync");
    }
    /**
     * {@snippet :
     * struct _GDBusConnection* g_bus_get_sync(enum GBusType bus_type, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_bus_get_sync(int bus_type, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_bus_get_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bus_type, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_new$MH() {
        return RuntimeHelper.requireNonNull(constants$854.const$4,"g_dbus_connection_new");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_new(struct _GIOStream* stream, char* guid, enum GDBusConnectionFlags flags, struct _GDBusAuthObserver* observer, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_dbus_connection_new(MemorySegment stream, MemorySegment guid, int flags, MemorySegment observer, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_connection_new$MH();
        try {
            mh$.invokeExact(stream, guid, flags, observer, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_new_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$854.const$5,"g_dbus_connection_new_finish");
    }
    /**
     * {@snippet :
     * struct _GDBusConnection* g_dbus_connection_new_finish(struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_new_finish(MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_connection_new_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_new_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$855.const$1,"g_dbus_connection_new_sync");
    }
    /**
     * {@snippet :
     * struct _GDBusConnection* g_dbus_connection_new_sync(struct _GIOStream* stream, char* guid, enum GDBusConnectionFlags flags, struct _GDBusAuthObserver* observer, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_new_sync(MemorySegment stream, MemorySegment guid, int flags, MemorySegment observer, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_connection_new_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, guid, flags, observer, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_new_for_address$MH() {
        return RuntimeHelper.requireNonNull(constants$855.const$3,"g_dbus_connection_new_for_address");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_new_for_address(char* address, enum GDBusConnectionFlags flags, struct _GDBusAuthObserver* observer, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_dbus_connection_new_for_address(MemorySegment address, int flags, MemorySegment observer, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_connection_new_for_address$MH();
        try {
            mh$.invokeExact(address, flags, observer, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_new_for_address_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$855.const$4,"g_dbus_connection_new_for_address_finish");
    }
    /**
     * {@snippet :
     * struct _GDBusConnection* g_dbus_connection_new_for_address_finish(struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_new_for_address_finish(MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_connection_new_for_address_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_new_for_address_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$855.const$6,"g_dbus_connection_new_for_address_sync");
    }
    /**
     * {@snippet :
     * struct _GDBusConnection* g_dbus_connection_new_for_address_sync(char* address, enum GDBusConnectionFlags flags, struct _GDBusAuthObserver* observer, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_new_for_address_sync(MemorySegment address, int flags, MemorySegment observer, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_connection_new_for_address_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(address, flags, observer, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_start_message_processing$MH() {
        return RuntimeHelper.requireNonNull(constants$856.const$0,"g_dbus_connection_start_message_processing");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_start_message_processing(struct _GDBusConnection* connection);
     * }
     */
    public static void g_dbus_connection_start_message_processing(MemorySegment connection) {
        var mh$ = g_dbus_connection_start_message_processing$MH();
        try {
            mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_is_closed$MH() {
        return RuntimeHelper.requireNonNull(constants$856.const$1,"g_dbus_connection_is_closed");
    }
    /**
     * {@snippet :
     * int g_dbus_connection_is_closed(struct _GDBusConnection* connection);
     * }
     */
    public static int g_dbus_connection_is_closed(MemorySegment connection) {
        var mh$ = g_dbus_connection_is_closed$MH();
        try {
            return (int)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_get_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$856.const$2,"g_dbus_connection_get_stream");
    }
    /**
     * {@snippet :
     * struct _GIOStream* g_dbus_connection_get_stream(struct _GDBusConnection* connection);
     * }
     */
    public static MemorySegment g_dbus_connection_get_stream(MemorySegment connection) {
        var mh$ = g_dbus_connection_get_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_get_guid$MH() {
        return RuntimeHelper.requireNonNull(constants$856.const$3,"g_dbus_connection_get_guid");
    }
    /**
     * {@snippet :
     * char* g_dbus_connection_get_guid(struct _GDBusConnection* connection);
     * }
     */
    public static MemorySegment g_dbus_connection_get_guid(MemorySegment connection) {
        var mh$ = g_dbus_connection_get_guid$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_get_unique_name$MH() {
        return RuntimeHelper.requireNonNull(constants$856.const$4,"g_dbus_connection_get_unique_name");
    }
    /**
     * {@snippet :
     * char* g_dbus_connection_get_unique_name(struct _GDBusConnection* connection);
     * }
     */
    public static MemorySegment g_dbus_connection_get_unique_name(MemorySegment connection) {
        var mh$ = g_dbus_connection_get_unique_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_get_peer_credentials$MH() {
        return RuntimeHelper.requireNonNull(constants$856.const$5,"g_dbus_connection_get_peer_credentials");
    }
    /**
     * {@snippet :
     * struct _GCredentials* g_dbus_connection_get_peer_credentials(struct _GDBusConnection* connection);
     * }
     */
    public static MemorySegment g_dbus_connection_get_peer_credentials(MemorySegment connection) {
        var mh$ = g_dbus_connection_get_peer_credentials$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_get_last_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$857.const$0,"g_dbus_connection_get_last_serial");
    }
    /**
     * {@snippet :
     * unsigned int g_dbus_connection_get_last_serial(struct _GDBusConnection* connection);
     * }
     */
    public static int g_dbus_connection_get_last_serial(MemorySegment connection) {
        var mh$ = g_dbus_connection_get_last_serial$MH();
        try {
            return (int)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_get_exit_on_close$MH() {
        return RuntimeHelper.requireNonNull(constants$857.const$1,"g_dbus_connection_get_exit_on_close");
    }
    /**
     * {@snippet :
     * int g_dbus_connection_get_exit_on_close(struct _GDBusConnection* connection);
     * }
     */
    public static int g_dbus_connection_get_exit_on_close(MemorySegment connection) {
        var mh$ = g_dbus_connection_get_exit_on_close$MH();
        try {
            return (int)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_set_exit_on_close$MH() {
        return RuntimeHelper.requireNonNull(constants$857.const$2,"g_dbus_connection_set_exit_on_close");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_set_exit_on_close(struct _GDBusConnection* connection, int exit_on_close);
     * }
     */
    public static void g_dbus_connection_set_exit_on_close(MemorySegment connection, int exit_on_close) {
        var mh$ = g_dbus_connection_set_exit_on_close$MH();
        try {
            mh$.invokeExact(connection, exit_on_close);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_get_capabilities$MH() {
        return RuntimeHelper.requireNonNull(constants$857.const$3,"g_dbus_connection_get_capabilities");
    }
    /**
     * {@snippet :
     * enum GDBusCapabilityFlags g_dbus_connection_get_capabilities(struct _GDBusConnection* connection);
     * }
     */
    public static int g_dbus_connection_get_capabilities(MemorySegment connection) {
        var mh$ = g_dbus_connection_get_capabilities$MH();
        try {
            return (int)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$857.const$4,"g_dbus_connection_get_flags");
    }
    /**
     * {@snippet :
     * enum GDBusConnectionFlags g_dbus_connection_get_flags(struct _GDBusConnection* connection);
     * }
     */
    public static int g_dbus_connection_get_flags(MemorySegment connection) {
        var mh$ = g_dbus_connection_get_flags$MH();
        try {
            return (int)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_close$MH() {
        return RuntimeHelper.requireNonNull(constants$858.const$0,"g_dbus_connection_close");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_close(struct _GDBusConnection* connection, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_dbus_connection_close(MemorySegment connection, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_connection_close$MH();
        try {
            mh$.invokeExact(connection, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_close_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$858.const$1,"g_dbus_connection_close_finish");
    }
    /**
     * {@snippet :
     * int g_dbus_connection_close_finish(struct _GDBusConnection* connection, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static int g_dbus_connection_close_finish(MemorySegment connection, MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_connection_close_finish$MH();
        try {
            return (int)mh$.invokeExact(connection, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_close_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$858.const$2,"g_dbus_connection_close_sync");
    }
    /**
     * {@snippet :
     * int g_dbus_connection_close_sync(struct _GDBusConnection* connection, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_dbus_connection_close_sync(MemorySegment connection, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_connection_close_sync$MH();
        try {
            return (int)mh$.invokeExact(connection, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_flush$MH() {
        return RuntimeHelper.requireNonNull(constants$858.const$4,"g_dbus_connection_flush");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_flush(struct _GDBusConnection* connection, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_dbus_connection_flush(MemorySegment connection, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_connection_flush$MH();
        try {
            mh$.invokeExact(connection, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_flush_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$858.const$5,"g_dbus_connection_flush_finish");
    }
    /**
     * {@snippet :
     * int g_dbus_connection_flush_finish(struct _GDBusConnection* connection, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static int g_dbus_connection_flush_finish(MemorySegment connection, MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_connection_flush_finish$MH();
        try {
            return (int)mh$.invokeExact(connection, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_flush_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$859.const$0,"g_dbus_connection_flush_sync");
    }
    /**
     * {@snippet :
     * int g_dbus_connection_flush_sync(struct _GDBusConnection* connection, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_dbus_connection_flush_sync(MemorySegment connection, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_connection_flush_sync$MH();
        try {
            return (int)mh$.invokeExact(connection, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_send_message$MH() {
        return RuntimeHelper.requireNonNull(constants$859.const$2,"g_dbus_connection_send_message");
    }
    /**
     * {@snippet :
     * int g_dbus_connection_send_message(struct _GDBusConnection* connection, struct _GDBusMessage* message, enum GDBusSendMessageFlags flags, unsigned int* out_serial, struct _GError** error);
     * }
     */
    public static int g_dbus_connection_send_message(MemorySegment connection, MemorySegment message, int flags, MemorySegment out_serial, MemorySegment error) {
        var mh$ = g_dbus_connection_send_message$MH();
        try {
            return (int)mh$.invokeExact(connection, message, flags, out_serial, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_send_message_with_reply$MH() {
        return RuntimeHelper.requireNonNull(constants$859.const$5,"g_dbus_connection_send_message_with_reply");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_send_message_with_reply(struct _GDBusConnection* connection, struct _GDBusMessage* message, enum GDBusSendMessageFlags flags, int timeout_msec, unsigned int* out_serial, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_dbus_connection_send_message_with_reply(MemorySegment connection, MemorySegment message, int flags, int timeout_msec, MemorySegment out_serial, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_connection_send_message_with_reply$MH();
        try {
            mh$.invokeExact(connection, message, flags, timeout_msec, out_serial, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_send_message_with_reply_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$860.const$0,"g_dbus_connection_send_message_with_reply_finish");
    }
    /**
     * {@snippet :
     * struct _GDBusMessage* g_dbus_connection_send_message_with_reply_finish(struct _GDBusConnection* connection, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_send_message_with_reply_finish(MemorySegment connection, MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_connection_send_message_with_reply_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_send_message_with_reply_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$860.const$2,"g_dbus_connection_send_message_with_reply_sync");
    }
    /**
     * {@snippet :
     * struct _GDBusMessage* g_dbus_connection_send_message_with_reply_sync(struct _GDBusConnection* connection, struct _GDBusMessage* message, enum GDBusSendMessageFlags flags, int timeout_msec, unsigned int* out_serial, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_send_message_with_reply_sync(MemorySegment connection, MemorySegment message, int flags, int timeout_msec, MemorySegment out_serial, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_connection_send_message_with_reply_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, message, flags, timeout_msec, out_serial, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_emit_signal$MH() {
        return RuntimeHelper.requireNonNull(constants$860.const$3,"g_dbus_connection_emit_signal");
    }
    /**
     * {@snippet :
     * int g_dbus_connection_emit_signal(struct _GDBusConnection* connection, char* destination_bus_name, char* object_path, char* interface_name, char* signal_name, struct _GVariant* parameters, struct _GError** error);
     * }
     */
    public static int g_dbus_connection_emit_signal(MemorySegment connection, MemorySegment destination_bus_name, MemorySegment object_path, MemorySegment interface_name, MemorySegment signal_name, MemorySegment parameters, MemorySegment error) {
        var mh$ = g_dbus_connection_emit_signal$MH();
        try {
            return (int)mh$.invokeExact(connection, destination_bus_name, object_path, interface_name, signal_name, parameters, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_call$MH() {
        return RuntimeHelper.requireNonNull(constants$860.const$6,"g_dbus_connection_call");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_call(struct _GDBusConnection* connection, char* bus_name, char* object_path, char* interface_name, char* method_name, struct _GVariant* parameters, struct _GVariantType* reply_type, enum GDBusCallFlags flags, int timeout_msec, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_dbus_connection_call(MemorySegment connection, MemorySegment bus_name, MemorySegment object_path, MemorySegment interface_name, MemorySegment method_name, MemorySegment parameters, MemorySegment reply_type, int flags, int timeout_msec, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_connection_call$MH();
        try {
            mh$.invokeExact(connection, bus_name, object_path, interface_name, method_name, parameters, reply_type, flags, timeout_msec, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_call_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$861.const$0,"g_dbus_connection_call_finish");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_dbus_connection_call_finish(struct _GDBusConnection* connection, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_call_finish(MemorySegment connection, MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_connection_call_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_call_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$861.const$2,"g_dbus_connection_call_sync");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_dbus_connection_call_sync(struct _GDBusConnection* connection, char* bus_name, char* object_path, char* interface_name, char* method_name, struct _GVariant* parameters, struct _GVariantType* reply_type, enum GDBusCallFlags flags, int timeout_msec, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_call_sync(MemorySegment connection, MemorySegment bus_name, MemorySegment object_path, MemorySegment interface_name, MemorySegment method_name, MemorySegment parameters, MemorySegment reply_type, int flags, int timeout_msec, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_connection_call_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, bus_name, object_path, interface_name, method_name, parameters, reply_type, flags, timeout_msec, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_call_with_unix_fd_list$MH() {
        return RuntimeHelper.requireNonNull(constants$861.const$5,"g_dbus_connection_call_with_unix_fd_list");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_call_with_unix_fd_list(struct _GDBusConnection* connection, char* bus_name, char* object_path, char* interface_name, char* method_name, struct _GVariant* parameters, struct _GVariantType* reply_type, enum GDBusCallFlags flags, int timeout_msec, struct _GUnixFDList* fd_list, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_dbus_connection_call_with_unix_fd_list(MemorySegment connection, MemorySegment bus_name, MemorySegment object_path, MemorySegment interface_name, MemorySegment method_name, MemorySegment parameters, MemorySegment reply_type, int flags, int timeout_msec, MemorySegment fd_list, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_connection_call_with_unix_fd_list$MH();
        try {
            mh$.invokeExact(connection, bus_name, object_path, interface_name, method_name, parameters, reply_type, flags, timeout_msec, fd_list, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_call_with_unix_fd_list_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$862.const$0,"g_dbus_connection_call_with_unix_fd_list_finish");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_dbus_connection_call_with_unix_fd_list_finish(struct _GDBusConnection* connection, struct _GUnixFDList** out_fd_list, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_call_with_unix_fd_list_finish(MemorySegment connection, MemorySegment out_fd_list, MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_connection_call_with_unix_fd_list_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, out_fd_list, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_call_with_unix_fd_list_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$862.const$2,"g_dbus_connection_call_with_unix_fd_list_sync");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_dbus_connection_call_with_unix_fd_list_sync(struct _GDBusConnection* connection, char* bus_name, char* object_path, char* interface_name, char* method_name, struct _GVariant* parameters, struct _GVariantType* reply_type, enum GDBusCallFlags flags, int timeout_msec, struct _GUnixFDList* fd_list, struct _GUnixFDList** out_fd_list, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_connection_call_with_unix_fd_list_sync(MemorySegment connection, MemorySegment bus_name, MemorySegment object_path, MemorySegment interface_name, MemorySegment method_name, MemorySegment parameters, MemorySegment reply_type, int flags, int timeout_msec, MemorySegment fd_list, MemorySegment out_fd_list, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_connection_call_with_unix_fd_list_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, bus_name, object_path, interface_name, method_name, parameters, reply_type, flags, timeout_msec, fd_list, out_fd_list, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_register_object$MH() {
        return RuntimeHelper.requireNonNull(constants$865.const$1,"g_dbus_connection_register_object");
    }
    /**
     * {@snippet :
     * unsigned int g_dbus_connection_register_object(struct _GDBusConnection* connection, char* object_path, struct _GDBusInterfaceInfo* interface_info, struct _GDBusInterfaceVTable* vtable, void* user_data, void (*user_data_free_func)(void*), struct _GError** error);
     * }
     */
    public static int g_dbus_connection_register_object(MemorySegment connection, MemorySegment object_path, MemorySegment interface_info, MemorySegment vtable, MemorySegment user_data, MemorySegment user_data_free_func, MemorySegment error) {
        var mh$ = g_dbus_connection_register_object$MH();
        try {
            return (int)mh$.invokeExact(connection, object_path, interface_info, vtable, user_data, user_data_free_func, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_register_object_with_closures$MH() {
        return RuntimeHelper.requireNonNull(constants$865.const$2,"g_dbus_connection_register_object_with_closures");
    }
    /**
     * {@snippet :
     * unsigned int g_dbus_connection_register_object_with_closures(struct _GDBusConnection* connection, char* object_path, struct _GDBusInterfaceInfo* interface_info, struct _GClosure* method_call_closure, struct _GClosure* get_property_closure, struct _GClosure* set_property_closure, struct _GError** error);
     * }
     */
    public static int g_dbus_connection_register_object_with_closures(MemorySegment connection, MemorySegment object_path, MemorySegment interface_info, MemorySegment method_call_closure, MemorySegment get_property_closure, MemorySegment set_property_closure, MemorySegment error) {
        var mh$ = g_dbus_connection_register_object_with_closures$MH();
        try {
            return (int)mh$.invokeExact(connection, object_path, interface_info, method_call_closure, get_property_closure, set_property_closure, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_unregister_object$MH() {
        return RuntimeHelper.requireNonNull(constants$865.const$3,"g_dbus_connection_unregister_object");
    }
    /**
     * {@snippet :
     * int g_dbus_connection_unregister_object(struct _GDBusConnection* connection, unsigned int registration_id);
     * }
     */
    public static int g_dbus_connection_unregister_object(MemorySegment connection, int registration_id) {
        var mh$ = g_dbus_connection_unregister_object$MH();
        try {
            return (int)mh$.invokeExact(connection, registration_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_register_subtree$MH() {
        return RuntimeHelper.requireNonNull(constants$867.const$6,"g_dbus_connection_register_subtree");
    }
    /**
     * {@snippet :
     * unsigned int g_dbus_connection_register_subtree(struct _GDBusConnection* connection, char* object_path, struct _GDBusSubtreeVTable* vtable, enum GDBusSubtreeFlags flags, void* user_data, void (*user_data_free_func)(void*), struct _GError** error);
     * }
     */
    public static int g_dbus_connection_register_subtree(MemorySegment connection, MemorySegment object_path, MemorySegment vtable, int flags, MemorySegment user_data, MemorySegment user_data_free_func, MemorySegment error) {
        var mh$ = g_dbus_connection_register_subtree$MH();
        try {
            return (int)mh$.invokeExact(connection, object_path, vtable, flags, user_data, user_data_free_func, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_unregister_subtree$MH() {
        return RuntimeHelper.requireNonNull(constants$868.const$0,"g_dbus_connection_unregister_subtree");
    }
    /**
     * {@snippet :
     * int g_dbus_connection_unregister_subtree(struct _GDBusConnection* connection, unsigned int registration_id);
     * }
     */
    public static int g_dbus_connection_unregister_subtree(MemorySegment connection, int registration_id) {
        var mh$ = g_dbus_connection_unregister_subtree$MH();
        try {
            return (int)mh$.invokeExact(connection, registration_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_signal_subscribe$MH() {
        return RuntimeHelper.requireNonNull(constants$869.const$1,"g_dbus_connection_signal_subscribe");
    }
    /**
     * {@snippet :
     * unsigned int g_dbus_connection_signal_subscribe(struct _GDBusConnection* connection, char* sender, char* interface_name, char* member, char* object_path, char* arg0, enum GDBusSignalFlags flags, void (*callback)(struct _GDBusConnection*,char*,char*,char*,char*,struct _GVariant*,void*), void* user_data, void (*user_data_free_func)(void*));
     * }
     */
    public static int g_dbus_connection_signal_subscribe(MemorySegment connection, MemorySegment sender, MemorySegment interface_name, MemorySegment member, MemorySegment object_path, MemorySegment arg0, int flags, MemorySegment callback, MemorySegment user_data, MemorySegment user_data_free_func) {
        var mh$ = g_dbus_connection_signal_subscribe$MH();
        try {
            return (int)mh$.invokeExact(connection, sender, interface_name, member, object_path, arg0, flags, callback, user_data, user_data_free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_signal_unsubscribe$MH() {
        return RuntimeHelper.requireNonNull(constants$869.const$2,"g_dbus_connection_signal_unsubscribe");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_signal_unsubscribe(struct _GDBusConnection* connection, unsigned int subscription_id);
     * }
     */
    public static void g_dbus_connection_signal_unsubscribe(MemorySegment connection, int subscription_id) {
        var mh$ = g_dbus_connection_signal_unsubscribe$MH();
        try {
            mh$.invokeExact(connection, subscription_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_add_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$870.const$1,"g_dbus_connection_add_filter");
    }
    /**
     * {@snippet :
     * unsigned int g_dbus_connection_add_filter(struct _GDBusConnection* connection, struct _GDBusMessage* (*filter_function)(struct _GDBusConnection*,struct _GDBusMessage*,int,void*), void* user_data, void (*user_data_free_func)(void*));
     * }
     */
    public static int g_dbus_connection_add_filter(MemorySegment connection, MemorySegment filter_function, MemorySegment user_data, MemorySegment user_data_free_func) {
        var mh$ = g_dbus_connection_add_filter$MH();
        try {
            return (int)mh$.invokeExact(connection, filter_function, user_data, user_data_free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_remove_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$870.const$2,"g_dbus_connection_remove_filter");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_remove_filter(struct _GDBusConnection* connection, unsigned int filter_id);
     * }
     */
    public static void g_dbus_connection_remove_filter(MemorySegment connection, int filter_id) {
        var mh$ = g_dbus_connection_remove_filter$MH();
        try {
            mh$.invokeExact(connection, filter_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$870.const$3,"g_dbus_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int g_dbus_error_quark();
     * }
     */
    public static int g_dbus_error_quark() {
        var mh$ = g_dbus_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_is_remote_error$MH() {
        return RuntimeHelper.requireNonNull(constants$870.const$4,"g_dbus_error_is_remote_error");
    }
    /**
     * {@snippet :
     * int g_dbus_error_is_remote_error(struct _GError* error);
     * }
     */
    public static int g_dbus_error_is_remote_error(MemorySegment error) {
        var mh$ = g_dbus_error_is_remote_error$MH();
        try {
            return (int)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_get_remote_error$MH() {
        return RuntimeHelper.requireNonNull(constants$870.const$5,"g_dbus_error_get_remote_error");
    }
    /**
     * {@snippet :
     * char* g_dbus_error_get_remote_error(struct _GError* error);
     * }
     */
    public static MemorySegment g_dbus_error_get_remote_error(MemorySegment error) {
        var mh$ = g_dbus_error_get_remote_error$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_strip_remote_error$MH() {
        return RuntimeHelper.requireNonNull(constants$871.const$0,"g_dbus_error_strip_remote_error");
    }
    /**
     * {@snippet :
     * int g_dbus_error_strip_remote_error(struct _GError* error);
     * }
     */
    public static int g_dbus_error_strip_remote_error(MemorySegment error) {
        var mh$ = g_dbus_error_strip_remote_error$MH();
        try {
            return (int)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_register_error$MH() {
        return RuntimeHelper.requireNonNull(constants$871.const$4,"g_dbus_error_register_error");
    }
    /**
     * {@snippet :
     * int g_dbus_error_register_error(unsigned int error_domain, int error_code, char* dbus_error_name);
     * }
     */
    public static int g_dbus_error_register_error(int error_domain, int error_code, MemorySegment dbus_error_name) {
        var mh$ = g_dbus_error_register_error$MH();
        try {
            return (int)mh$.invokeExact(error_domain, error_code, dbus_error_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_unregister_error$MH() {
        return RuntimeHelper.requireNonNull(constants$871.const$5,"g_dbus_error_unregister_error");
    }
    /**
     * {@snippet :
     * int g_dbus_error_unregister_error(unsigned int error_domain, int error_code, char* dbus_error_name);
     * }
     */
    public static int g_dbus_error_unregister_error(int error_domain, int error_code, MemorySegment dbus_error_name) {
        var mh$ = g_dbus_error_unregister_error$MH();
        try {
            return (int)mh$.invokeExact(error_domain, error_code, dbus_error_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_register_error_domain$MH() {
        return RuntimeHelper.requireNonNull(constants$872.const$0,"g_dbus_error_register_error_domain");
    }
    /**
     * {@snippet :
     * void g_dbus_error_register_error_domain(char* error_domain_quark_name, unsigned long* quark_volatile, struct _GDBusErrorEntry* entries, unsigned int num_entries);
     * }
     */
    public static void g_dbus_error_register_error_domain(MemorySegment error_domain_quark_name, MemorySegment quark_volatile, MemorySegment entries, int num_entries) {
        var mh$ = g_dbus_error_register_error_domain$MH();
        try {
            mh$.invokeExact(error_domain_quark_name, quark_volatile, entries, num_entries);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_new_for_dbus_error$MH() {
        return RuntimeHelper.requireNonNull(constants$872.const$1,"g_dbus_error_new_for_dbus_error");
    }
    /**
     * {@snippet :
     * struct _GError* g_dbus_error_new_for_dbus_error(char* dbus_error_name, char* dbus_error_message);
     * }
     */
    public static MemorySegment g_dbus_error_new_for_dbus_error(MemorySegment dbus_error_name, MemorySegment dbus_error_message) {
        var mh$ = g_dbus_error_new_for_dbus_error$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(dbus_error_name, dbus_error_message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_set_dbus_error$MH() {
        return RuntimeHelper.requireNonNull(constants$872.const$2,"g_dbus_error_set_dbus_error");
    }
    /**
     * {@snippet :
     * void g_dbus_error_set_dbus_error(struct _GError** error, char* dbus_error_name, char* dbus_error_message, char* format,...);
     * }
     */
    public static void g_dbus_error_set_dbus_error(MemorySegment error, MemorySegment dbus_error_name, MemorySegment dbus_error_message, MemorySegment format, Object... x4) {
        var mh$ = g_dbus_error_set_dbus_error$MH();
        try {
            mh$.invokeExact(error, dbus_error_name, dbus_error_message, format, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_set_dbus_error_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$872.const$4,"g_dbus_error_set_dbus_error_valist");
    }
    /**
     * {@snippet :
     * void g_dbus_error_set_dbus_error_valist(struct _GError** error, char* dbus_error_name, char* dbus_error_message, char* format, struct __va_list var_args);
     * }
     */
    public static void g_dbus_error_set_dbus_error_valist(MemorySegment error, MemorySegment dbus_error_name, MemorySegment dbus_error_message, MemorySegment format, MemorySegment var_args) {
        var mh$ = g_dbus_error_set_dbus_error_valist$MH();
        try {
            mh$.invokeExact(error, dbus_error_name, dbus_error_message, format, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_encode_gerror$MH() {
        return RuntimeHelper.requireNonNull(constants$872.const$5,"g_dbus_error_encode_gerror");
    }
    /**
     * {@snippet :
     * char* g_dbus_error_encode_gerror(struct _GError* error);
     * }
     */
    public static MemorySegment g_dbus_error_encode_gerror(MemorySegment error) {
        var mh$ = g_dbus_error_encode_gerror$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$874.const$3,"g_dbus_interface_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_interface_get_type();
     * }
     */
    public static long g_dbus_interface_get_type() {
        var mh$ = g_dbus_interface_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_get_info$MH() {
        return RuntimeHelper.requireNonNull(constants$874.const$4,"g_dbus_interface_get_info");
    }
    /**
     * {@snippet :
     * struct _GDBusInterfaceInfo* g_dbus_interface_get_info(struct _GDBusInterface* interface_);
     * }
     */
    public static MemorySegment g_dbus_interface_get_info(MemorySegment interface_) {
        var mh$ = g_dbus_interface_get_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(interface_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_get_object$MH() {
        return RuntimeHelper.requireNonNull(constants$874.const$5,"g_dbus_interface_get_object");
    }
    /**
     * {@snippet :
     * struct _GDBusObject* g_dbus_interface_get_object(struct _GDBusInterface* interface_);
     * }
     */
    public static MemorySegment g_dbus_interface_get_object(MemorySegment interface_) {
        var mh$ = g_dbus_interface_get_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(interface_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_set_object$MH() {
        return RuntimeHelper.requireNonNull(constants$875.const$0,"g_dbus_interface_set_object");
    }
    /**
     * {@snippet :
     * void g_dbus_interface_set_object(struct _GDBusInterface* interface_, struct _GDBusObject* object);
     * }
     */
    public static void g_dbus_interface_set_object(MemorySegment interface_, MemorySegment object) {
        var mh$ = g_dbus_interface_set_object$MH();
        try {
            mh$.invokeExact(interface_, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_dup_object$MH() {
        return RuntimeHelper.requireNonNull(constants$875.const$1,"g_dbus_interface_dup_object");
    }
    /**
     * {@snippet :
     * struct _GDBusObject* g_dbus_interface_dup_object(struct _GDBusInterface* interface_);
     * }
     */
    public static MemorySegment g_dbus_interface_dup_object(MemorySegment interface_) {
        var mh$ = g_dbus_interface_dup_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(interface_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_skeleton_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$877.const$3,"g_dbus_interface_skeleton_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_interface_skeleton_get_type();
     * }
     */
    public static long g_dbus_interface_skeleton_get_type() {
        var mh$ = g_dbus_interface_skeleton_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_skeleton_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$877.const$4,"g_dbus_interface_skeleton_get_flags");
    }
    /**
     * {@snippet :
     * enum GDBusInterfaceSkeletonFlags g_dbus_interface_skeleton_get_flags(struct _GDBusInterfaceSkeleton* interface_);
     * }
     */
    public static int g_dbus_interface_skeleton_get_flags(MemorySegment interface_) {
        var mh$ = g_dbus_interface_skeleton_get_flags$MH();
        try {
            return (int)mh$.invokeExact(interface_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_skeleton_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$877.const$5,"g_dbus_interface_skeleton_set_flags");
    }
    /**
     * {@snippet :
     * void g_dbus_interface_skeleton_set_flags(struct _GDBusInterfaceSkeleton* interface_, enum GDBusInterfaceSkeletonFlags flags);
     * }
     */
    public static void g_dbus_interface_skeleton_set_flags(MemorySegment interface_, int flags) {
        var mh$ = g_dbus_interface_skeleton_set_flags$MH();
        try {
            mh$.invokeExact(interface_, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_skeleton_get_info$MH() {
        return RuntimeHelper.requireNonNull(constants$878.const$0,"g_dbus_interface_skeleton_get_info");
    }
    /**
     * {@snippet :
     * struct _GDBusInterfaceInfo* g_dbus_interface_skeleton_get_info(struct _GDBusInterfaceSkeleton* interface_);
     * }
     */
    public static MemorySegment g_dbus_interface_skeleton_get_info(MemorySegment interface_) {
        var mh$ = g_dbus_interface_skeleton_get_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(interface_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_skeleton_get_vtable$MH() {
        return RuntimeHelper.requireNonNull(constants$878.const$1,"g_dbus_interface_skeleton_get_vtable");
    }
    /**
     * {@snippet :
     * struct _GDBusInterfaceVTable* g_dbus_interface_skeleton_get_vtable(struct _GDBusInterfaceSkeleton* interface_);
     * }
     */
    public static MemorySegment g_dbus_interface_skeleton_get_vtable(MemorySegment interface_) {
        var mh$ = g_dbus_interface_skeleton_get_vtable$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(interface_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_skeleton_get_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$878.const$2,"g_dbus_interface_skeleton_get_properties");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_dbus_interface_skeleton_get_properties(struct _GDBusInterfaceSkeleton* interface_);
     * }
     */
    public static MemorySegment g_dbus_interface_skeleton_get_properties(MemorySegment interface_) {
        var mh$ = g_dbus_interface_skeleton_get_properties$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(interface_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_skeleton_flush$MH() {
        return RuntimeHelper.requireNonNull(constants$878.const$3,"g_dbus_interface_skeleton_flush");
    }
    /**
     * {@snippet :
     * void g_dbus_interface_skeleton_flush(struct _GDBusInterfaceSkeleton* interface_);
     * }
     */
    public static void g_dbus_interface_skeleton_flush(MemorySegment interface_) {
        var mh$ = g_dbus_interface_skeleton_flush$MH();
        try {
            mh$.invokeExact(interface_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_skeleton_export$MH() {
        return RuntimeHelper.requireNonNull(constants$878.const$4,"g_dbus_interface_skeleton_export");
    }
    /**
     * {@snippet :
     * int g_dbus_interface_skeleton_export(struct _GDBusInterfaceSkeleton* interface_, struct _GDBusConnection* connection, char* object_path, struct _GError** error);
     * }
     */
    public static int g_dbus_interface_skeleton_export(MemorySegment interface_, MemorySegment connection, MemorySegment object_path, MemorySegment error) {
        var mh$ = g_dbus_interface_skeleton_export$MH();
        try {
            return (int)mh$.invokeExact(interface_, connection, object_path, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_skeleton_unexport$MH() {
        return RuntimeHelper.requireNonNull(constants$878.const$5,"g_dbus_interface_skeleton_unexport");
    }
    /**
     * {@snippet :
     * void g_dbus_interface_skeleton_unexport(struct _GDBusInterfaceSkeleton* interface_);
     * }
     */
    public static void g_dbus_interface_skeleton_unexport(MemorySegment interface_) {
        var mh$ = g_dbus_interface_skeleton_unexport$MH();
        try {
            mh$.invokeExact(interface_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_skeleton_unexport_from_connection$MH() {
        return RuntimeHelper.requireNonNull(constants$879.const$0,"g_dbus_interface_skeleton_unexport_from_connection");
    }
    /**
     * {@snippet :
     * void g_dbus_interface_skeleton_unexport_from_connection(struct _GDBusInterfaceSkeleton* interface_, struct _GDBusConnection* connection);
     * }
     */
    public static void g_dbus_interface_skeleton_unexport_from_connection(MemorySegment interface_, MemorySegment connection) {
        var mh$ = g_dbus_interface_skeleton_unexport_from_connection$MH();
        try {
            mh$.invokeExact(interface_, connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_skeleton_get_connection$MH() {
        return RuntimeHelper.requireNonNull(constants$879.const$1,"g_dbus_interface_skeleton_get_connection");
    }
    /**
     * {@snippet :
     * struct _GDBusConnection* g_dbus_interface_skeleton_get_connection(struct _GDBusInterfaceSkeleton* interface_);
     * }
     */
    public static MemorySegment g_dbus_interface_skeleton_get_connection(MemorySegment interface_) {
        var mh$ = g_dbus_interface_skeleton_get_connection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(interface_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_skeleton_get_connections$MH() {
        return RuntimeHelper.requireNonNull(constants$879.const$2,"g_dbus_interface_skeleton_get_connections");
    }
    /**
     * {@snippet :
     * struct _GList* g_dbus_interface_skeleton_get_connections(struct _GDBusInterfaceSkeleton* interface_);
     * }
     */
    public static MemorySegment g_dbus_interface_skeleton_get_connections(MemorySegment interface_) {
        var mh$ = g_dbus_interface_skeleton_get_connections$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(interface_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_skeleton_has_connection$MH() {
        return RuntimeHelper.requireNonNull(constants$879.const$3,"g_dbus_interface_skeleton_has_connection");
    }
    /**
     * {@snippet :
     * int g_dbus_interface_skeleton_has_connection(struct _GDBusInterfaceSkeleton* interface_, struct _GDBusConnection* connection);
     * }
     */
    public static int g_dbus_interface_skeleton_has_connection(MemorySegment interface_, MemorySegment connection) {
        var mh$ = g_dbus_interface_skeleton_has_connection$MH();
        try {
            return (int)mh$.invokeExact(interface_, connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_skeleton_get_object_path$MH() {
        return RuntimeHelper.requireNonNull(constants$879.const$4,"g_dbus_interface_skeleton_get_object_path");
    }
    /**
     * {@snippet :
     * char* g_dbus_interface_skeleton_get_object_path(struct _GDBusInterfaceSkeleton* interface_);
     * }
     */
    public static MemorySegment g_dbus_interface_skeleton_get_object_path(MemorySegment interface_) {
        var mh$ = g_dbus_interface_skeleton_get_object_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(interface_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_annotation_info_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$886.const$3,"g_dbus_annotation_info_lookup");
    }
    /**
     * {@snippet :
     * char* g_dbus_annotation_info_lookup(struct _GDBusAnnotationInfo** annotations, char* name);
     * }
     */
    public static MemorySegment g_dbus_annotation_info_lookup(MemorySegment annotations, MemorySegment name) {
        var mh$ = g_dbus_annotation_info_lookup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(annotations, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_info_lookup_method$MH() {
        return RuntimeHelper.requireNonNull(constants$886.const$4,"g_dbus_interface_info_lookup_method");
    }
    /**
     * {@snippet :
     * struct _GDBusMethodInfo* g_dbus_interface_info_lookup_method(struct _GDBusInterfaceInfo* info, char* name);
     * }
     */
    public static MemorySegment g_dbus_interface_info_lookup_method(MemorySegment info, MemorySegment name) {
        var mh$ = g_dbus_interface_info_lookup_method$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_info_lookup_signal$MH() {
        return RuntimeHelper.requireNonNull(constants$886.const$5,"g_dbus_interface_info_lookup_signal");
    }
    /**
     * {@snippet :
     * struct _GDBusSignalInfo* g_dbus_interface_info_lookup_signal(struct _GDBusInterfaceInfo* info, char* name);
     * }
     */
    public static MemorySegment g_dbus_interface_info_lookup_signal(MemorySegment info, MemorySegment name) {
        var mh$ = g_dbus_interface_info_lookup_signal$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_info_lookup_property$MH() {
        return RuntimeHelper.requireNonNull(constants$887.const$0,"g_dbus_interface_info_lookup_property");
    }
    /**
     * {@snippet :
     * struct _GDBusPropertyInfo* g_dbus_interface_info_lookup_property(struct _GDBusInterfaceInfo* info, char* name);
     * }
     */
    public static MemorySegment g_dbus_interface_info_lookup_property(MemorySegment info, MemorySegment name) {
        var mh$ = g_dbus_interface_info_lookup_property$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_info_cache_build$MH() {
        return RuntimeHelper.requireNonNull(constants$887.const$1,"g_dbus_interface_info_cache_build");
    }
    /**
     * {@snippet :
     * void g_dbus_interface_info_cache_build(struct _GDBusInterfaceInfo* info);
     * }
     */
    public static void g_dbus_interface_info_cache_build(MemorySegment info) {
        var mh$ = g_dbus_interface_info_cache_build$MH();
        try {
            mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_info_cache_release$MH() {
        return RuntimeHelper.requireNonNull(constants$887.const$2,"g_dbus_interface_info_cache_release");
    }
    /**
     * {@snippet :
     * void g_dbus_interface_info_cache_release(struct _GDBusInterfaceInfo* info);
     * }
     */
    public static void g_dbus_interface_info_cache_release(MemorySegment info) {
        var mh$ = g_dbus_interface_info_cache_release$MH();
        try {
            mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_info_generate_xml$MH() {
        return RuntimeHelper.requireNonNull(constants$887.const$3,"g_dbus_interface_info_generate_xml");
    }
    /**
     * {@snippet :
     * void g_dbus_interface_info_generate_xml(struct _GDBusInterfaceInfo* info, unsigned int indent, struct _GString* string_builder);
     * }
     */
    public static void g_dbus_interface_info_generate_xml(MemorySegment info, int indent, MemorySegment string_builder) {
        var mh$ = g_dbus_interface_info_generate_xml$MH();
        try {
            mh$.invokeExact(info, indent, string_builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_node_info_new_for_xml$MH() {
        return RuntimeHelper.requireNonNull(constants$887.const$4,"g_dbus_node_info_new_for_xml");
    }
    /**
     * {@snippet :
     * struct _GDBusNodeInfo* g_dbus_node_info_new_for_xml(char* xml_data, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_node_info_new_for_xml(MemorySegment xml_data, MemorySegment error) {
        var mh$ = g_dbus_node_info_new_for_xml$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(xml_data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_node_info_lookup_interface$MH() {
        return RuntimeHelper.requireNonNull(constants$887.const$5,"g_dbus_node_info_lookup_interface");
    }
    /**
     * {@snippet :
     * struct _GDBusInterfaceInfo* g_dbus_node_info_lookup_interface(struct _GDBusNodeInfo* info, char* name);
     * }
     */
    public static MemorySegment g_dbus_node_info_lookup_interface(MemorySegment info, MemorySegment name) {
        var mh$ = g_dbus_node_info_lookup_interface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_node_info_generate_xml$MH() {
        return RuntimeHelper.requireNonNull(constants$888.const$0,"g_dbus_node_info_generate_xml");
    }
    /**
     * {@snippet :
     * void g_dbus_node_info_generate_xml(struct _GDBusNodeInfo* info, unsigned int indent, struct _GString* string_builder);
     * }
     */
    public static void g_dbus_node_info_generate_xml(MemorySegment info, int indent, MemorySegment string_builder) {
        var mh$ = g_dbus_node_info_generate_xml$MH();
        try {
            mh$.invokeExact(info, indent, string_builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_node_info_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$888.const$1,"g_dbus_node_info_ref");
    }
    /**
     * {@snippet :
     * struct _GDBusNodeInfo* g_dbus_node_info_ref(struct _GDBusNodeInfo* info);
     * }
     */
    public static MemorySegment g_dbus_node_info_ref(MemorySegment info) {
        var mh$ = g_dbus_node_info_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_info_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$888.const$2,"g_dbus_interface_info_ref");
    }
    /**
     * {@snippet :
     * struct _GDBusInterfaceInfo* g_dbus_interface_info_ref(struct _GDBusInterfaceInfo* info);
     * }
     */
    public static MemorySegment g_dbus_interface_info_ref(MemorySegment info) {
        var mh$ = g_dbus_interface_info_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_info_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$888.const$3,"g_dbus_method_info_ref");
    }
    /**
     * {@snippet :
     * struct _GDBusMethodInfo* g_dbus_method_info_ref(struct _GDBusMethodInfo* info);
     * }
     */
    public static MemorySegment g_dbus_method_info_ref(MemorySegment info) {
        var mh$ = g_dbus_method_info_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_signal_info_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$888.const$4,"g_dbus_signal_info_ref");
    }
    /**
     * {@snippet :
     * struct _GDBusSignalInfo* g_dbus_signal_info_ref(struct _GDBusSignalInfo* info);
     * }
     */
    public static MemorySegment g_dbus_signal_info_ref(MemorySegment info) {
        var mh$ = g_dbus_signal_info_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_property_info_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$888.const$5,"g_dbus_property_info_ref");
    }
    /**
     * {@snippet :
     * struct _GDBusPropertyInfo* g_dbus_property_info_ref(struct _GDBusPropertyInfo* info);
     * }
     */
    public static MemorySegment g_dbus_property_info_ref(MemorySegment info) {
        var mh$ = g_dbus_property_info_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_arg_info_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$889.const$0,"g_dbus_arg_info_ref");
    }
    /**
     * {@snippet :
     * struct _GDBusArgInfo* g_dbus_arg_info_ref(struct _GDBusArgInfo* info);
     * }
     */
    public static MemorySegment g_dbus_arg_info_ref(MemorySegment info) {
        var mh$ = g_dbus_arg_info_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_annotation_info_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$889.const$1,"g_dbus_annotation_info_ref");
    }
    /**
     * {@snippet :
     * struct _GDBusAnnotationInfo* g_dbus_annotation_info_ref(struct _GDBusAnnotationInfo* info);
     * }
     */
    public static MemorySegment g_dbus_annotation_info_ref(MemorySegment info) {
        var mh$ = g_dbus_annotation_info_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_node_info_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$889.const$2,"g_dbus_node_info_unref");
    }
    /**
     * {@snippet :
     * void g_dbus_node_info_unref(struct _GDBusNodeInfo* info);
     * }
     */
    public static void g_dbus_node_info_unref(MemorySegment info) {
        var mh$ = g_dbus_node_info_unref$MH();
        try {
            mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_info_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$889.const$3,"g_dbus_interface_info_unref");
    }
    /**
     * {@snippet :
     * void g_dbus_interface_info_unref(struct _GDBusInterfaceInfo* info);
     * }
     */
    public static void g_dbus_interface_info_unref(MemorySegment info) {
        var mh$ = g_dbus_interface_info_unref$MH();
        try {
            mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_info_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$889.const$4,"g_dbus_method_info_unref");
    }
    /**
     * {@snippet :
     * void g_dbus_method_info_unref(struct _GDBusMethodInfo* info);
     * }
     */
    public static void g_dbus_method_info_unref(MemorySegment info) {
        var mh$ = g_dbus_method_info_unref$MH();
        try {
            mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_signal_info_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$889.const$5,"g_dbus_signal_info_unref");
    }
    /**
     * {@snippet :
     * void g_dbus_signal_info_unref(struct _GDBusSignalInfo* info);
     * }
     */
    public static void g_dbus_signal_info_unref(MemorySegment info) {
        var mh$ = g_dbus_signal_info_unref$MH();
        try {
            mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_property_info_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$890.const$0,"g_dbus_property_info_unref");
    }
    /**
     * {@snippet :
     * void g_dbus_property_info_unref(struct _GDBusPropertyInfo* info);
     * }
     */
    public static void g_dbus_property_info_unref(MemorySegment info) {
        var mh$ = g_dbus_property_info_unref$MH();
        try {
            mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_arg_info_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$890.const$1,"g_dbus_arg_info_unref");
    }
    /**
     * {@snippet :
     * void g_dbus_arg_info_unref(struct _GDBusArgInfo* info);
     * }
     */
    public static void g_dbus_arg_info_unref(MemorySegment info) {
        var mh$ = g_dbus_arg_info_unref$MH();
        try {
            mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_annotation_info_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$890.const$2,"g_dbus_annotation_info_unref");
    }
    /**
     * {@snippet :
     * void g_dbus_annotation_info_unref(struct _GDBusAnnotationInfo* info);
     * }
     */
    public static void g_dbus_annotation_info_unref(MemorySegment info) {
        var mh$ = g_dbus_annotation_info_unref$MH();
        try {
            mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_node_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$890.const$3,"g_dbus_node_info_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_node_info_get_type();
     * }
     */
    public static long g_dbus_node_info_get_type() {
        var mh$ = g_dbus_node_info_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$890.const$4,"g_dbus_interface_info_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_interface_info_get_type();
     * }
     */
    public static long g_dbus_interface_info_get_type() {
        var mh$ = g_dbus_interface_info_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$890.const$5,"g_dbus_method_info_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_method_info_get_type();
     * }
     */
    public static long g_dbus_method_info_get_type() {
        var mh$ = g_dbus_method_info_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_signal_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$891.const$0,"g_dbus_signal_info_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_signal_info_get_type();
     * }
     */
    public static long g_dbus_signal_info_get_type() {
        var mh$ = g_dbus_signal_info_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_property_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$891.const$1,"g_dbus_property_info_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_property_info_get_type();
     * }
     */
    public static long g_dbus_property_info_get_type() {
        var mh$ = g_dbus_property_info_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_arg_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$891.const$2,"g_dbus_arg_info_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_arg_info_get_type();
     * }
     */
    public static long g_dbus_arg_info_get_type() {
        var mh$ = g_dbus_arg_info_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_annotation_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$891.const$3,"g_dbus_annotation_info_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_annotation_info_get_type();
     * }
     */
    public static long g_dbus_annotation_info_get_type() {
        var mh$ = g_dbus_annotation_info_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_menu_model_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$891.const$4,"g_dbus_menu_model_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_menu_model_get_type();
     * }
     */
    public static long g_dbus_menu_model_get_type() {
        var mh$ = g_dbus_menu_model_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_menu_model_get$MH() {
        return RuntimeHelper.requireNonNull(constants$891.const$5,"g_dbus_menu_model_get");
    }
    /**
     * {@snippet :
     * struct _GDBusMenuModel* g_dbus_menu_model_get(struct _GDBusConnection* connection, char* bus_name, char* object_path);
     * }
     */
    public static MemorySegment g_dbus_menu_model_get(MemorySegment connection, MemorySegment bus_name, MemorySegment object_path) {
        var mh$ = g_dbus_menu_model_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, bus_name, object_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$892.const$0,"g_dbus_message_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_message_get_type();
     * }
     */
    public static long g_dbus_message_get_type() {
        var mh$ = g_dbus_message_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_new$MH() {
        return RuntimeHelper.requireNonNull(constants$892.const$1,"g_dbus_message_new");
    }
    /**
     * {@snippet :
     * struct _GDBusMessage* g_dbus_message_new();
     * }
     */
    public static MemorySegment g_dbus_message_new() {
        var mh$ = g_dbus_message_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_new_signal$MH() {
        return RuntimeHelper.requireNonNull(constants$892.const$2,"g_dbus_message_new_signal");
    }
    /**
     * {@snippet :
     * struct _GDBusMessage* g_dbus_message_new_signal(char* path, char* interface_, char* signal);
     * }
     */
    public static MemorySegment g_dbus_message_new_signal(MemorySegment path, MemorySegment interface_, MemorySegment signal) {
        var mh$ = g_dbus_message_new_signal$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(path, interface_, signal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_new_method_call$MH() {
        return RuntimeHelper.requireNonNull(constants$892.const$3,"g_dbus_message_new_method_call");
    }
    /**
     * {@snippet :
     * struct _GDBusMessage* g_dbus_message_new_method_call(char* name, char* path, char* interface_, char* method);
     * }
     */
    public static MemorySegment g_dbus_message_new_method_call(MemorySegment name, MemorySegment path, MemorySegment interface_, MemorySegment method) {
        var mh$ = g_dbus_message_new_method_call$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, path, interface_, method);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_new_method_reply$MH() {
        return RuntimeHelper.requireNonNull(constants$892.const$4,"g_dbus_message_new_method_reply");
    }
    /**
     * {@snippet :
     * struct _GDBusMessage* g_dbus_message_new_method_reply(struct _GDBusMessage* method_call_message);
     * }
     */
    public static MemorySegment g_dbus_message_new_method_reply(MemorySegment method_call_message) {
        var mh$ = g_dbus_message_new_method_reply$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(method_call_message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_new_method_error$MH() {
        return RuntimeHelper.requireNonNull(constants$892.const$5,"g_dbus_message_new_method_error");
    }
    /**
     * {@snippet :
     * struct _GDBusMessage* g_dbus_message_new_method_error(struct _GDBusMessage* method_call_message, char* error_name, char* error_message_format,...);
     * }
     */
    public static MemorySegment g_dbus_message_new_method_error(MemorySegment method_call_message, MemorySegment error_name, MemorySegment error_message_format, Object... x3) {
        var mh$ = g_dbus_message_new_method_error$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(method_call_message, error_name, error_message_format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_new_method_error_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$893.const$1,"g_dbus_message_new_method_error_valist");
    }
    /**
     * {@snippet :
     * struct _GDBusMessage* g_dbus_message_new_method_error_valist(struct _GDBusMessage* method_call_message, char* error_name, char* error_message_format, struct __va_list var_args);
     * }
     */
    public static MemorySegment g_dbus_message_new_method_error_valist(MemorySegment method_call_message, MemorySegment error_name, MemorySegment error_message_format, MemorySegment var_args) {
        var mh$ = g_dbus_message_new_method_error_valist$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(method_call_message, error_name, error_message_format, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_new_method_error_literal$MH() {
        return RuntimeHelper.requireNonNull(constants$893.const$2,"g_dbus_message_new_method_error_literal");
    }
    /**
     * {@snippet :
     * struct _GDBusMessage* g_dbus_message_new_method_error_literal(struct _GDBusMessage* method_call_message, char* error_name, char* error_message);
     * }
     */
    public static MemorySegment g_dbus_message_new_method_error_literal(MemorySegment method_call_message, MemorySegment error_name, MemorySegment error_message) {
        var mh$ = g_dbus_message_new_method_error_literal$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(method_call_message, error_name, error_message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_print$MH() {
        return RuntimeHelper.requireNonNull(constants$893.const$3,"g_dbus_message_print");
    }
    /**
     * {@snippet :
     * char* g_dbus_message_print(struct _GDBusMessage* message, unsigned int indent);
     * }
     */
    public static MemorySegment g_dbus_message_print(MemorySegment message, int indent) {
        var mh$ = g_dbus_message_print$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(message, indent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_locked$MH() {
        return RuntimeHelper.requireNonNull(constants$893.const$4,"g_dbus_message_get_locked");
    }
    /**
     * {@snippet :
     * int g_dbus_message_get_locked(struct _GDBusMessage* message);
     * }
     */
    public static int g_dbus_message_get_locked(MemorySegment message) {
        var mh$ = g_dbus_message_get_locked$MH();
        try {
            return (int)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_lock$MH() {
        return RuntimeHelper.requireNonNull(constants$893.const$5,"g_dbus_message_lock");
    }
    /**
     * {@snippet :
     * void g_dbus_message_lock(struct _GDBusMessage* message);
     * }
     */
    public static void g_dbus_message_lock(MemorySegment message) {
        var mh$ = g_dbus_message_lock$MH();
        try {
            mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$894.const$0,"g_dbus_message_copy");
    }
    /**
     * {@snippet :
     * struct _GDBusMessage* g_dbus_message_copy(struct _GDBusMessage* message, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_message_copy(MemorySegment message, MemorySegment error) {
        var mh$ = g_dbus_message_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(message, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_byte_order$MH() {
        return RuntimeHelper.requireNonNull(constants$894.const$1,"g_dbus_message_get_byte_order");
    }
    /**
     * {@snippet :
     * enum GDBusMessageByteOrder g_dbus_message_get_byte_order(struct _GDBusMessage* message);
     * }
     */
    public static int g_dbus_message_get_byte_order(MemorySegment message) {
        var mh$ = g_dbus_message_get_byte_order$MH();
        try {
            return (int)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_set_byte_order$MH() {
        return RuntimeHelper.requireNonNull(constants$894.const$2,"g_dbus_message_set_byte_order");
    }
    /**
     * {@snippet :
     * void g_dbus_message_set_byte_order(struct _GDBusMessage* message, enum GDBusMessageByteOrder byte_order);
     * }
     */
    public static void g_dbus_message_set_byte_order(MemorySegment message, int byte_order) {
        var mh$ = g_dbus_message_set_byte_order$MH();
        try {
            mh$.invokeExact(message, byte_order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_message_type$MH() {
        return RuntimeHelper.requireNonNull(constants$894.const$3,"g_dbus_message_get_message_type");
    }
    /**
     * {@snippet :
     * enum GDBusMessageType g_dbus_message_get_message_type(struct _GDBusMessage* message);
     * }
     */
    public static int g_dbus_message_get_message_type(MemorySegment message) {
        var mh$ = g_dbus_message_get_message_type$MH();
        try {
            return (int)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_set_message_type$MH() {
        return RuntimeHelper.requireNonNull(constants$894.const$4,"g_dbus_message_set_message_type");
    }
    /**
     * {@snippet :
     * void g_dbus_message_set_message_type(struct _GDBusMessage* message, enum GDBusMessageType type);
     * }
     */
    public static void g_dbus_message_set_message_type(MemorySegment message, int type) {
        var mh$ = g_dbus_message_set_message_type$MH();
        try {
            mh$.invokeExact(message, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$894.const$5,"g_dbus_message_get_flags");
    }
    /**
     * {@snippet :
     * enum GDBusMessageFlags g_dbus_message_get_flags(struct _GDBusMessage* message);
     * }
     */
    public static int g_dbus_message_get_flags(MemorySegment message) {
        var mh$ = g_dbus_message_get_flags$MH();
        try {
            return (int)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$895.const$0,"g_dbus_message_set_flags");
    }
    /**
     * {@snippet :
     * void g_dbus_message_set_flags(struct _GDBusMessage* message, enum GDBusMessageFlags flags);
     * }
     */
    public static void g_dbus_message_set_flags(MemorySegment message, int flags) {
        var mh$ = g_dbus_message_set_flags$MH();
        try {
            mh$.invokeExact(message, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$895.const$1,"g_dbus_message_get_serial");
    }
    /**
     * {@snippet :
     * unsigned int g_dbus_message_get_serial(struct _GDBusMessage* message);
     * }
     */
    public static int g_dbus_message_get_serial(MemorySegment message) {
        var mh$ = g_dbus_message_get_serial$MH();
        try {
            return (int)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_set_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$895.const$2,"g_dbus_message_set_serial");
    }
    /**
     * {@snippet :
     * void g_dbus_message_set_serial(struct _GDBusMessage* message, unsigned int serial);
     * }
     */
    public static void g_dbus_message_set_serial(MemorySegment message, int serial) {
        var mh$ = g_dbus_message_set_serial$MH();
        try {
            mh$.invokeExact(message, serial);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_header$MH() {
        return RuntimeHelper.requireNonNull(constants$895.const$3,"g_dbus_message_get_header");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_dbus_message_get_header(struct _GDBusMessage* message, enum GDBusMessageHeaderField header_field);
     * }
     */
    public static MemorySegment g_dbus_message_get_header(MemorySegment message, int header_field) {
        var mh$ = g_dbus_message_get_header$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(message, header_field);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_set_header$MH() {
        return RuntimeHelper.requireNonNull(constants$895.const$4,"g_dbus_message_set_header");
    }
    /**
     * {@snippet :
     * void g_dbus_message_set_header(struct _GDBusMessage* message, enum GDBusMessageHeaderField header_field, struct _GVariant* value);
     * }
     */
    public static void g_dbus_message_set_header(MemorySegment message, int header_field, MemorySegment value) {
        var mh$ = g_dbus_message_set_header$MH();
        try {
            mh$.invokeExact(message, header_field, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_header_fields$MH() {
        return RuntimeHelper.requireNonNull(constants$895.const$5,"g_dbus_message_get_header_fields");
    }
    /**
     * {@snippet :
     * unsigned char* g_dbus_message_get_header_fields(struct _GDBusMessage* message);
     * }
     */
    public static MemorySegment g_dbus_message_get_header_fields(MemorySegment message) {
        var mh$ = g_dbus_message_get_header_fields$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_body$MH() {
        return RuntimeHelper.requireNonNull(constants$896.const$0,"g_dbus_message_get_body");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_dbus_message_get_body(struct _GDBusMessage* message);
     * }
     */
    public static MemorySegment g_dbus_message_get_body(MemorySegment message) {
        var mh$ = g_dbus_message_get_body$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_set_body$MH() {
        return RuntimeHelper.requireNonNull(constants$896.const$1,"g_dbus_message_set_body");
    }
    /**
     * {@snippet :
     * void g_dbus_message_set_body(struct _GDBusMessage* message, struct _GVariant* body);
     * }
     */
    public static void g_dbus_message_set_body(MemorySegment message, MemorySegment body) {
        var mh$ = g_dbus_message_set_body$MH();
        try {
            mh$.invokeExact(message, body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_unix_fd_list$MH() {
        return RuntimeHelper.requireNonNull(constants$896.const$2,"g_dbus_message_get_unix_fd_list");
    }
    /**
     * {@snippet :
     * struct _GUnixFDList* g_dbus_message_get_unix_fd_list(struct _GDBusMessage* message);
     * }
     */
    public static MemorySegment g_dbus_message_get_unix_fd_list(MemorySegment message) {
        var mh$ = g_dbus_message_get_unix_fd_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_set_unix_fd_list$MH() {
        return RuntimeHelper.requireNonNull(constants$896.const$3,"g_dbus_message_set_unix_fd_list");
    }
    /**
     * {@snippet :
     * void g_dbus_message_set_unix_fd_list(struct _GDBusMessage* message, struct _GUnixFDList* fd_list);
     * }
     */
    public static void g_dbus_message_set_unix_fd_list(MemorySegment message, MemorySegment fd_list) {
        var mh$ = g_dbus_message_set_unix_fd_list$MH();
        try {
            mh$.invokeExact(message, fd_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_reply_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$896.const$4,"g_dbus_message_get_reply_serial");
    }
    /**
     * {@snippet :
     * unsigned int g_dbus_message_get_reply_serial(struct _GDBusMessage* message);
     * }
     */
    public static int g_dbus_message_get_reply_serial(MemorySegment message) {
        var mh$ = g_dbus_message_get_reply_serial$MH();
        try {
            return (int)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_set_reply_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$896.const$5,"g_dbus_message_set_reply_serial");
    }
    /**
     * {@snippet :
     * void g_dbus_message_set_reply_serial(struct _GDBusMessage* message, unsigned int value);
     * }
     */
    public static void g_dbus_message_set_reply_serial(MemorySegment message, int value) {
        var mh$ = g_dbus_message_set_reply_serial$MH();
        try {
            mh$.invokeExact(message, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_interface$MH() {
        return RuntimeHelper.requireNonNull(constants$897.const$0,"g_dbus_message_get_interface");
    }
    /**
     * {@snippet :
     * char* g_dbus_message_get_interface(struct _GDBusMessage* message);
     * }
     */
    public static MemorySegment g_dbus_message_get_interface(MemorySegment message) {
        var mh$ = g_dbus_message_get_interface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_set_interface$MH() {
        return RuntimeHelper.requireNonNull(constants$897.const$1,"g_dbus_message_set_interface");
    }
    /**
     * {@snippet :
     * void g_dbus_message_set_interface(struct _GDBusMessage* message, char* value);
     * }
     */
    public static void g_dbus_message_set_interface(MemorySegment message, MemorySegment value) {
        var mh$ = g_dbus_message_set_interface$MH();
        try {
            mh$.invokeExact(message, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_member$MH() {
        return RuntimeHelper.requireNonNull(constants$897.const$2,"g_dbus_message_get_member");
    }
    /**
     * {@snippet :
     * char* g_dbus_message_get_member(struct _GDBusMessage* message);
     * }
     */
    public static MemorySegment g_dbus_message_get_member(MemorySegment message) {
        var mh$ = g_dbus_message_get_member$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_set_member$MH() {
        return RuntimeHelper.requireNonNull(constants$897.const$3,"g_dbus_message_set_member");
    }
    /**
     * {@snippet :
     * void g_dbus_message_set_member(struct _GDBusMessage* message, char* value);
     * }
     */
    public static void g_dbus_message_set_member(MemorySegment message, MemorySegment value) {
        var mh$ = g_dbus_message_set_member$MH();
        try {
            mh$.invokeExact(message, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_path$MH() {
        return RuntimeHelper.requireNonNull(constants$897.const$4,"g_dbus_message_get_path");
    }
    /**
     * {@snippet :
     * char* g_dbus_message_get_path(struct _GDBusMessage* message);
     * }
     */
    public static MemorySegment g_dbus_message_get_path(MemorySegment message) {
        var mh$ = g_dbus_message_get_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_set_path$MH() {
        return RuntimeHelper.requireNonNull(constants$897.const$5,"g_dbus_message_set_path");
    }
    /**
     * {@snippet :
     * void g_dbus_message_set_path(struct _GDBusMessage* message, char* value);
     * }
     */
    public static void g_dbus_message_set_path(MemorySegment message, MemorySegment value) {
        var mh$ = g_dbus_message_set_path$MH();
        try {
            mh$.invokeExact(message, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_sender$MH() {
        return RuntimeHelper.requireNonNull(constants$898.const$0,"g_dbus_message_get_sender");
    }
    /**
     * {@snippet :
     * char* g_dbus_message_get_sender(struct _GDBusMessage* message);
     * }
     */
    public static MemorySegment g_dbus_message_get_sender(MemorySegment message) {
        var mh$ = g_dbus_message_get_sender$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_set_sender$MH() {
        return RuntimeHelper.requireNonNull(constants$898.const$1,"g_dbus_message_set_sender");
    }
    /**
     * {@snippet :
     * void g_dbus_message_set_sender(struct _GDBusMessage* message, char* value);
     * }
     */
    public static void g_dbus_message_set_sender(MemorySegment message, MemorySegment value) {
        var mh$ = g_dbus_message_set_sender$MH();
        try {
            mh$.invokeExact(message, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_destination$MH() {
        return RuntimeHelper.requireNonNull(constants$898.const$2,"g_dbus_message_get_destination");
    }
    /**
     * {@snippet :
     * char* g_dbus_message_get_destination(struct _GDBusMessage* message);
     * }
     */
    public static MemorySegment g_dbus_message_get_destination(MemorySegment message) {
        var mh$ = g_dbus_message_get_destination$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_set_destination$MH() {
        return RuntimeHelper.requireNonNull(constants$898.const$3,"g_dbus_message_set_destination");
    }
    /**
     * {@snippet :
     * void g_dbus_message_set_destination(struct _GDBusMessage* message, char* value);
     * }
     */
    public static void g_dbus_message_set_destination(MemorySegment message, MemorySegment value) {
        var mh$ = g_dbus_message_set_destination$MH();
        try {
            mh$.invokeExact(message, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_error_name$MH() {
        return RuntimeHelper.requireNonNull(constants$898.const$4,"g_dbus_message_get_error_name");
    }
    /**
     * {@snippet :
     * char* g_dbus_message_get_error_name(struct _GDBusMessage* message);
     * }
     */
    public static MemorySegment g_dbus_message_get_error_name(MemorySegment message) {
        var mh$ = g_dbus_message_get_error_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_set_error_name$MH() {
        return RuntimeHelper.requireNonNull(constants$898.const$5,"g_dbus_message_set_error_name");
    }
    /**
     * {@snippet :
     * void g_dbus_message_set_error_name(struct _GDBusMessage* message, char* value);
     * }
     */
    public static void g_dbus_message_set_error_name(MemorySegment message, MemorySegment value) {
        var mh$ = g_dbus_message_set_error_name$MH();
        try {
            mh$.invokeExact(message, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_signature$MH() {
        return RuntimeHelper.requireNonNull(constants$899.const$0,"g_dbus_message_get_signature");
    }
    /**
     * {@snippet :
     * char* g_dbus_message_get_signature(struct _GDBusMessage* message);
     * }
     */
    public static MemorySegment g_dbus_message_get_signature(MemorySegment message) {
        var mh$ = g_dbus_message_get_signature$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_set_signature$MH() {
        return RuntimeHelper.requireNonNull(constants$899.const$1,"g_dbus_message_set_signature");
    }
    /**
     * {@snippet :
     * void g_dbus_message_set_signature(struct _GDBusMessage* message, char* value);
     * }
     */
    public static void g_dbus_message_set_signature(MemorySegment message, MemorySegment value) {
        var mh$ = g_dbus_message_set_signature$MH();
        try {
            mh$.invokeExact(message, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_num_unix_fds$MH() {
        return RuntimeHelper.requireNonNull(constants$899.const$2,"g_dbus_message_get_num_unix_fds");
    }
    /**
     * {@snippet :
     * unsigned int g_dbus_message_get_num_unix_fds(struct _GDBusMessage* message);
     * }
     */
    public static int g_dbus_message_get_num_unix_fds(MemorySegment message) {
        var mh$ = g_dbus_message_get_num_unix_fds$MH();
        try {
            return (int)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_set_num_unix_fds$MH() {
        return RuntimeHelper.requireNonNull(constants$899.const$3,"g_dbus_message_set_num_unix_fds");
    }
    /**
     * {@snippet :
     * void g_dbus_message_set_num_unix_fds(struct _GDBusMessage* message, unsigned int value);
     * }
     */
    public static void g_dbus_message_set_num_unix_fds(MemorySegment message, int value) {
        var mh$ = g_dbus_message_set_num_unix_fds$MH();
        try {
            mh$.invokeExact(message, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_get_arg0$MH() {
        return RuntimeHelper.requireNonNull(constants$899.const$4,"g_dbus_message_get_arg0");
    }
    /**
     * {@snippet :
     * char* g_dbus_message_get_arg0(struct _GDBusMessage* message);
     * }
     */
    public static MemorySegment g_dbus_message_get_arg0(MemorySegment message) {
        var mh$ = g_dbus_message_get_arg0$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_new_from_blob$MH() {
        return RuntimeHelper.requireNonNull(constants$899.const$6,"g_dbus_message_new_from_blob");
    }
    /**
     * {@snippet :
     * struct _GDBusMessage* g_dbus_message_new_from_blob(unsigned char* blob, unsigned long blob_len, enum GDBusCapabilityFlags capabilities, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_message_new_from_blob(MemorySegment blob, long blob_len, int capabilities, MemorySegment error) {
        var mh$ = g_dbus_message_new_from_blob$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(blob, blob_len, capabilities, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_bytes_needed$MH() {
        return RuntimeHelper.requireNonNull(constants$900.const$1,"g_dbus_message_bytes_needed");
    }
    /**
     * {@snippet :
     * long g_dbus_message_bytes_needed(unsigned char* blob, unsigned long blob_len, struct _GError** error);
     * }
     */
    public static long g_dbus_message_bytes_needed(MemorySegment blob, long blob_len, MemorySegment error) {
        var mh$ = g_dbus_message_bytes_needed$MH();
        try {
            return (long)mh$.invokeExact(blob, blob_len, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_to_blob$MH() {
        return RuntimeHelper.requireNonNull(constants$900.const$2,"g_dbus_message_to_blob");
    }
    /**
     * {@snippet :
     * unsigned char* g_dbus_message_to_blob(struct _GDBusMessage* message, unsigned long* out_size, enum GDBusCapabilityFlags capabilities, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_message_to_blob(MemorySegment message, MemorySegment out_size, int capabilities, MemorySegment error) {
        var mh$ = g_dbus_message_to_blob$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(message, out_size, capabilities, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_to_gerror$MH() {
        return RuntimeHelper.requireNonNull(constants$900.const$3,"g_dbus_message_to_gerror");
    }
    /**
     * {@snippet :
     * int g_dbus_message_to_gerror(struct _GDBusMessage* message, struct _GError** error);
     * }
     */
    public static int g_dbus_message_to_gerror(MemorySegment message, MemorySegment error) {
        var mh$ = g_dbus_message_to_gerror$MH();
        try {
            return (int)mh$.invokeExact(message, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_invocation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$900.const$4,"g_dbus_method_invocation_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_method_invocation_get_type();
     * }
     */
    public static long g_dbus_method_invocation_get_type() {
        var mh$ = g_dbus_method_invocation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_invocation_get_sender$MH() {
        return RuntimeHelper.requireNonNull(constants$900.const$5,"g_dbus_method_invocation_get_sender");
    }
    /**
     * {@snippet :
     * char* g_dbus_method_invocation_get_sender(struct _GDBusMethodInvocation* invocation);
     * }
     */
    public static MemorySegment g_dbus_method_invocation_get_sender(MemorySegment invocation) {
        var mh$ = g_dbus_method_invocation_get_sender$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(invocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_invocation_get_object_path$MH() {
        return RuntimeHelper.requireNonNull(constants$901.const$0,"g_dbus_method_invocation_get_object_path");
    }
    /**
     * {@snippet :
     * char* g_dbus_method_invocation_get_object_path(struct _GDBusMethodInvocation* invocation);
     * }
     */
    public static MemorySegment g_dbus_method_invocation_get_object_path(MemorySegment invocation) {
        var mh$ = g_dbus_method_invocation_get_object_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(invocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_invocation_get_interface_name$MH() {
        return RuntimeHelper.requireNonNull(constants$901.const$1,"g_dbus_method_invocation_get_interface_name");
    }
    /**
     * {@snippet :
     * char* g_dbus_method_invocation_get_interface_name(struct _GDBusMethodInvocation* invocation);
     * }
     */
    public static MemorySegment g_dbus_method_invocation_get_interface_name(MemorySegment invocation) {
        var mh$ = g_dbus_method_invocation_get_interface_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(invocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_invocation_get_method_name$MH() {
        return RuntimeHelper.requireNonNull(constants$901.const$2,"g_dbus_method_invocation_get_method_name");
    }
    /**
     * {@snippet :
     * char* g_dbus_method_invocation_get_method_name(struct _GDBusMethodInvocation* invocation);
     * }
     */
    public static MemorySegment g_dbus_method_invocation_get_method_name(MemorySegment invocation) {
        var mh$ = g_dbus_method_invocation_get_method_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(invocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_invocation_get_method_info$MH() {
        return RuntimeHelper.requireNonNull(constants$901.const$3,"g_dbus_method_invocation_get_method_info");
    }
    /**
     * {@snippet :
     * struct _GDBusMethodInfo* g_dbus_method_invocation_get_method_info(struct _GDBusMethodInvocation* invocation);
     * }
     */
    public static MemorySegment g_dbus_method_invocation_get_method_info(MemorySegment invocation) {
        var mh$ = g_dbus_method_invocation_get_method_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(invocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_invocation_get_property_info$MH() {
        return RuntimeHelper.requireNonNull(constants$901.const$4,"g_dbus_method_invocation_get_property_info");
    }
    /**
     * {@snippet :
     * struct _GDBusPropertyInfo* g_dbus_method_invocation_get_property_info(struct _GDBusMethodInvocation* invocation);
     * }
     */
    public static MemorySegment g_dbus_method_invocation_get_property_info(MemorySegment invocation) {
        var mh$ = g_dbus_method_invocation_get_property_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(invocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_invocation_get_connection$MH() {
        return RuntimeHelper.requireNonNull(constants$901.const$5,"g_dbus_method_invocation_get_connection");
    }
    /**
     * {@snippet :
     * struct _GDBusConnection* g_dbus_method_invocation_get_connection(struct _GDBusMethodInvocation* invocation);
     * }
     */
    public static MemorySegment g_dbus_method_invocation_get_connection(MemorySegment invocation) {
        var mh$ = g_dbus_method_invocation_get_connection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(invocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_invocation_get_message$MH() {
        return RuntimeHelper.requireNonNull(constants$902.const$0,"g_dbus_method_invocation_get_message");
    }
    /**
     * {@snippet :
     * struct _GDBusMessage* g_dbus_method_invocation_get_message(struct _GDBusMethodInvocation* invocation);
     * }
     */
    public static MemorySegment g_dbus_method_invocation_get_message(MemorySegment invocation) {
        var mh$ = g_dbus_method_invocation_get_message$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(invocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_invocation_get_parameters$MH() {
        return RuntimeHelper.requireNonNull(constants$902.const$1,"g_dbus_method_invocation_get_parameters");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_dbus_method_invocation_get_parameters(struct _GDBusMethodInvocation* invocation);
     * }
     */
    public static MemorySegment g_dbus_method_invocation_get_parameters(MemorySegment invocation) {
        var mh$ = g_dbus_method_invocation_get_parameters$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(invocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_invocation_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$902.const$2,"g_dbus_method_invocation_get_user_data");
    }
    /**
     * {@snippet :
     * void* g_dbus_method_invocation_get_user_data(struct _GDBusMethodInvocation* invocation);
     * }
     */
    public static MemorySegment g_dbus_method_invocation_get_user_data(MemorySegment invocation) {
        var mh$ = g_dbus_method_invocation_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(invocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_invocation_return_value$MH() {
        return RuntimeHelper.requireNonNull(constants$902.const$3,"g_dbus_method_invocation_return_value");
    }
    /**
     * {@snippet :
     * void g_dbus_method_invocation_return_value(struct _GDBusMethodInvocation* invocation, struct _GVariant* parameters);
     * }
     */
    public static void g_dbus_method_invocation_return_value(MemorySegment invocation, MemorySegment parameters) {
        var mh$ = g_dbus_method_invocation_return_value$MH();
        try {
            mh$.invokeExact(invocation, parameters);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_invocation_return_value_with_unix_fd_list$MH() {
        return RuntimeHelper.requireNonNull(constants$902.const$4,"g_dbus_method_invocation_return_value_with_unix_fd_list");
    }
    /**
     * {@snippet :
     * void g_dbus_method_invocation_return_value_with_unix_fd_list(struct _GDBusMethodInvocation* invocation, struct _GVariant* parameters, struct _GUnixFDList* fd_list);
     * }
     */
    public static void g_dbus_method_invocation_return_value_with_unix_fd_list(MemorySegment invocation, MemorySegment parameters, MemorySegment fd_list) {
        var mh$ = g_dbus_method_invocation_return_value_with_unix_fd_list$MH();
        try {
            mh$.invokeExact(invocation, parameters, fd_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_invocation_return_error$MH() {
        return RuntimeHelper.requireNonNull(constants$902.const$5,"g_dbus_method_invocation_return_error");
    }
    /**
     * {@snippet :
     * void g_dbus_method_invocation_return_error(struct _GDBusMethodInvocation* invocation, unsigned int domain, int code, char* format,...);
     * }
     */
    public static void g_dbus_method_invocation_return_error(MemorySegment invocation, int domain, int code, MemorySegment format, Object... x4) {
        var mh$ = g_dbus_method_invocation_return_error$MH();
        try {
            mh$.invokeExact(invocation, domain, code, format, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_invocation_return_error_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$903.const$1,"g_dbus_method_invocation_return_error_valist");
    }
    /**
     * {@snippet :
     * void g_dbus_method_invocation_return_error_valist(struct _GDBusMethodInvocation* invocation, unsigned int domain, int code, char* format, struct __va_list var_args);
     * }
     */
    public static void g_dbus_method_invocation_return_error_valist(MemorySegment invocation, int domain, int code, MemorySegment format, MemorySegment var_args) {
        var mh$ = g_dbus_method_invocation_return_error_valist$MH();
        try {
            mh$.invokeExact(invocation, domain, code, format, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_invocation_return_error_literal$MH() {
        return RuntimeHelper.requireNonNull(constants$903.const$2,"g_dbus_method_invocation_return_error_literal");
    }
    /**
     * {@snippet :
     * void g_dbus_method_invocation_return_error_literal(struct _GDBusMethodInvocation* invocation, unsigned int domain, int code, char* message);
     * }
     */
    public static void g_dbus_method_invocation_return_error_literal(MemorySegment invocation, int domain, int code, MemorySegment message) {
        var mh$ = g_dbus_method_invocation_return_error_literal$MH();
        try {
            mh$.invokeExact(invocation, domain, code, message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_invocation_return_gerror$MH() {
        return RuntimeHelper.requireNonNull(constants$903.const$3,"g_dbus_method_invocation_return_gerror");
    }
    /**
     * {@snippet :
     * void g_dbus_method_invocation_return_gerror(struct _GDBusMethodInvocation* invocation, struct _GError* error);
     * }
     */
    public static void g_dbus_method_invocation_return_gerror(MemorySegment invocation, MemorySegment error) {
        var mh$ = g_dbus_method_invocation_return_gerror$MH();
        try {
            mh$.invokeExact(invocation, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_invocation_take_error$MH() {
        return RuntimeHelper.requireNonNull(constants$903.const$4,"g_dbus_method_invocation_take_error");
    }
    /**
     * {@snippet :
     * void g_dbus_method_invocation_take_error(struct _GDBusMethodInvocation* invocation, struct _GError* error);
     * }
     */
    public static void g_dbus_method_invocation_take_error(MemorySegment invocation, MemorySegment error) {
        var mh$ = g_dbus_method_invocation_take_error$MH();
        try {
            mh$.invokeExact(invocation, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_method_invocation_return_dbus_error$MH() {
        return RuntimeHelper.requireNonNull(constants$903.const$5,"g_dbus_method_invocation_return_dbus_error");
    }
    /**
     * {@snippet :
     * void g_dbus_method_invocation_return_dbus_error(struct _GDBusMethodInvocation* invocation, char* error_name, char* error_message);
     * }
     */
    public static void g_dbus_method_invocation_return_dbus_error(MemorySegment invocation, MemorySegment error_name, MemorySegment error_message) {
        var mh$ = g_dbus_method_invocation_return_dbus_error$MH();
        try {
            mh$.invokeExact(invocation, error_name, error_message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bus_own_name$MH() {
        return RuntimeHelper.requireNonNull(constants$905.const$2,"g_bus_own_name");
    }
    /**
     * {@snippet :
     * unsigned int g_bus_own_name(enum GBusType bus_type, char* name, enum GBusNameOwnerFlags flags, void (*bus_acquired_handler)(struct _GDBusConnection*,char*,void*), void (*name_acquired_handler)(struct _GDBusConnection*,char*,void*), void (*name_lost_handler)(struct _GDBusConnection*,char*,void*), void* user_data, void (*user_data_free_func)(void*));
     * }
     */
    public static int g_bus_own_name(int bus_type, MemorySegment name, int flags, MemorySegment bus_acquired_handler, MemorySegment name_acquired_handler, MemorySegment name_lost_handler, MemorySegment user_data, MemorySegment user_data_free_func) {
        var mh$ = g_bus_own_name$MH();
        try {
            return (int)mh$.invokeExact(bus_type, name, flags, bus_acquired_handler, name_acquired_handler, name_lost_handler, user_data, user_data_free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bus_own_name_on_connection$MH() {
        return RuntimeHelper.requireNonNull(constants$906.const$1,"g_bus_own_name_on_connection");
    }
    /**
     * {@snippet :
     * unsigned int g_bus_own_name_on_connection(struct _GDBusConnection* connection, char* name, enum GBusNameOwnerFlags flags, void (*name_acquired_handler)(struct _GDBusConnection*,char*,void*), void (*name_lost_handler)(struct _GDBusConnection*,char*,void*), void* user_data, void (*user_data_free_func)(void*));
     * }
     */
    public static int g_bus_own_name_on_connection(MemorySegment connection, MemorySegment name, int flags, MemorySegment name_acquired_handler, MemorySegment name_lost_handler, MemorySegment user_data, MemorySegment user_data_free_func) {
        var mh$ = g_bus_own_name_on_connection$MH();
        try {
            return (int)mh$.invokeExact(connection, name, flags, name_acquired_handler, name_lost_handler, user_data, user_data_free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bus_own_name_with_closures$MH() {
        return RuntimeHelper.requireNonNull(constants$906.const$3,"g_bus_own_name_with_closures");
    }
    /**
     * {@snippet :
     * unsigned int g_bus_own_name_with_closures(enum GBusType bus_type, char* name, enum GBusNameOwnerFlags flags, struct _GClosure* bus_acquired_closure, struct _GClosure* name_acquired_closure, struct _GClosure* name_lost_closure);
     * }
     */
    public static int g_bus_own_name_with_closures(int bus_type, MemorySegment name, int flags, MemorySegment bus_acquired_closure, MemorySegment name_acquired_closure, MemorySegment name_lost_closure) {
        var mh$ = g_bus_own_name_with_closures$MH();
        try {
            return (int)mh$.invokeExact(bus_type, name, flags, bus_acquired_closure, name_acquired_closure, name_lost_closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bus_own_name_on_connection_with_closures$MH() {
        return RuntimeHelper.requireNonNull(constants$906.const$4,"g_bus_own_name_on_connection_with_closures");
    }
    /**
     * {@snippet :
     * unsigned int g_bus_own_name_on_connection_with_closures(struct _GDBusConnection* connection, char* name, enum GBusNameOwnerFlags flags, struct _GClosure* name_acquired_closure, struct _GClosure* name_lost_closure);
     * }
     */
    public static int g_bus_own_name_on_connection_with_closures(MemorySegment connection, MemorySegment name, int flags, MemorySegment name_acquired_closure, MemorySegment name_lost_closure) {
        var mh$ = g_bus_own_name_on_connection_with_closures$MH();
        try {
            return (int)mh$.invokeExact(connection, name, flags, name_acquired_closure, name_lost_closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bus_unown_name$MH() {
        return RuntimeHelper.requireNonNull(constants$906.const$5,"g_bus_unown_name");
    }
    /**
     * {@snippet :
     * void g_bus_unown_name(unsigned int owner_id);
     * }
     */
    public static void g_bus_unown_name(int owner_id) {
        var mh$ = g_bus_unown_name$MH();
        try {
            mh$.invokeExact(owner_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bus_watch_name$MH() {
        return RuntimeHelper.requireNonNull(constants$907.const$6,"g_bus_watch_name");
    }
    /**
     * {@snippet :
     * unsigned int g_bus_watch_name(enum GBusType bus_type, char* name, enum GBusNameWatcherFlags flags, void (*name_appeared_handler)(struct _GDBusConnection*,char*,char*,void*), void (*name_vanished_handler)(struct _GDBusConnection*,char*,void*), void* user_data, void (*user_data_free_func)(void*));
     * }
     */
    public static int g_bus_watch_name(int bus_type, MemorySegment name, int flags, MemorySegment name_appeared_handler, MemorySegment name_vanished_handler, MemorySegment user_data, MemorySegment user_data_free_func) {
        var mh$ = g_bus_watch_name$MH();
        try {
            return (int)mh$.invokeExact(bus_type, name, flags, name_appeared_handler, name_vanished_handler, user_data, user_data_free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bus_watch_name_on_connection$MH() {
        return RuntimeHelper.requireNonNull(constants$908.const$3,"g_bus_watch_name_on_connection");
    }
    /**
     * {@snippet :
     * unsigned int g_bus_watch_name_on_connection(struct _GDBusConnection* connection, char* name, enum GBusNameWatcherFlags flags, void (*name_appeared_handler)(struct _GDBusConnection*,char*,char*,void*), void (*name_vanished_handler)(struct _GDBusConnection*,char*,void*), void* user_data, void (*user_data_free_func)(void*));
     * }
     */
    public static int g_bus_watch_name_on_connection(MemorySegment connection, MemorySegment name, int flags, MemorySegment name_appeared_handler, MemorySegment name_vanished_handler, MemorySegment user_data, MemorySegment user_data_free_func) {
        var mh$ = g_bus_watch_name_on_connection$MH();
        try {
            return (int)mh$.invokeExact(connection, name, flags, name_appeared_handler, name_vanished_handler, user_data, user_data_free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bus_watch_name_with_closures$MH() {
        return RuntimeHelper.requireNonNull(constants$908.const$5,"g_bus_watch_name_with_closures");
    }
    /**
     * {@snippet :
     * unsigned int g_bus_watch_name_with_closures(enum GBusType bus_type, char* name, enum GBusNameWatcherFlags flags, struct _GClosure* name_appeared_closure, struct _GClosure* name_vanished_closure);
     * }
     */
    public static int g_bus_watch_name_with_closures(int bus_type, MemorySegment name, int flags, MemorySegment name_appeared_closure, MemorySegment name_vanished_closure) {
        var mh$ = g_bus_watch_name_with_closures$MH();
        try {
            return (int)mh$.invokeExact(bus_type, name, flags, name_appeared_closure, name_vanished_closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bus_watch_name_on_connection_with_closures$MH() {
        return RuntimeHelper.requireNonNull(constants$909.const$0,"g_bus_watch_name_on_connection_with_closures");
    }
    /**
     * {@snippet :
     * unsigned int g_bus_watch_name_on_connection_with_closures(struct _GDBusConnection* connection, char* name, enum GBusNameWatcherFlags flags, struct _GClosure* name_appeared_closure, struct _GClosure* name_vanished_closure);
     * }
     */
    public static int g_bus_watch_name_on_connection_with_closures(MemorySegment connection, MemorySegment name, int flags, MemorySegment name_appeared_closure, MemorySegment name_vanished_closure) {
        var mh$ = g_bus_watch_name_on_connection_with_closures$MH();
        try {
            return (int)mh$.invokeExact(connection, name, flags, name_appeared_closure, name_vanished_closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bus_unwatch_name$MH() {
        return RuntimeHelper.requireNonNull(constants$909.const$1,"g_bus_unwatch_name");
    }
    /**
     * {@snippet :
     * void g_bus_unwatch_name(unsigned int watcher_id);
     * }
     */
    public static void g_bus_unwatch_name(int watcher_id) {
        var mh$ = g_bus_unwatch_name$MH();
        try {
            mh$.invokeExact(watcher_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$911.const$1,"g_dbus_object_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_object_get_type();
     * }
     */
    public static long g_dbus_object_get_type() {
        var mh$ = g_dbus_object_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_get_object_path$MH() {
        return RuntimeHelper.requireNonNull(constants$911.const$2,"g_dbus_object_get_object_path");
    }
    /**
     * {@snippet :
     * char* g_dbus_object_get_object_path(struct _GDBusObject* object);
     * }
     */
    public static MemorySegment g_dbus_object_get_object_path(MemorySegment object) {
        var mh$ = g_dbus_object_get_object_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_get_interfaces$MH() {
        return RuntimeHelper.requireNonNull(constants$911.const$3,"g_dbus_object_get_interfaces");
    }
    /**
     * {@snippet :
     * struct _GList* g_dbus_object_get_interfaces(struct _GDBusObject* object);
     * }
     */
    public static MemorySegment g_dbus_object_get_interfaces(MemorySegment object) {
        var mh$ = g_dbus_object_get_interfaces$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_get_interface$MH() {
        return RuntimeHelper.requireNonNull(constants$911.const$4,"g_dbus_object_get_interface");
    }
    /**
     * {@snippet :
     * struct _GDBusInterface* g_dbus_object_get_interface(struct _GDBusObject* object, char* interface_name);
     * }
     */
    public static MemorySegment g_dbus_object_get_interface(MemorySegment object, MemorySegment interface_name) {
        var mh$ = g_dbus_object_get_interface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object, interface_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$914.const$4,"g_dbus_object_manager_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_object_manager_get_type();
     * }
     */
    public static long g_dbus_object_manager_get_type() {
        var mh$ = g_dbus_object_manager_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_get_object_path$MH() {
        return RuntimeHelper.requireNonNull(constants$914.const$5,"g_dbus_object_manager_get_object_path");
    }
    /**
     * {@snippet :
     * char* g_dbus_object_manager_get_object_path(struct _GDBusObjectManager* manager);
     * }
     */
    public static MemorySegment g_dbus_object_manager_get_object_path(MemorySegment manager) {
        var mh$ = g_dbus_object_manager_get_object_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_get_objects$MH() {
        return RuntimeHelper.requireNonNull(constants$915.const$0,"g_dbus_object_manager_get_objects");
    }
    /**
     * {@snippet :
     * struct _GList* g_dbus_object_manager_get_objects(struct _GDBusObjectManager* manager);
     * }
     */
    public static MemorySegment g_dbus_object_manager_get_objects(MemorySegment manager) {
        var mh$ = g_dbus_object_manager_get_objects$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_get_object$MH() {
        return RuntimeHelper.requireNonNull(constants$915.const$1,"g_dbus_object_manager_get_object");
    }
    /**
     * {@snippet :
     * struct _GDBusObject* g_dbus_object_manager_get_object(struct _GDBusObjectManager* manager, char* object_path);
     * }
     */
    public static MemorySegment g_dbus_object_manager_get_object(MemorySegment manager, MemorySegment object_path) {
        var mh$ = g_dbus_object_manager_get_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(manager, object_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_get_interface$MH() {
        return RuntimeHelper.requireNonNull(constants$915.const$2,"g_dbus_object_manager_get_interface");
    }
    /**
     * {@snippet :
     * struct _GDBusInterface* g_dbus_object_manager_get_interface(struct _GDBusObjectManager* manager, char* object_path, char* interface_name);
     * }
     */
    public static MemorySegment g_dbus_object_manager_get_interface(MemorySegment manager, MemorySegment object_path, MemorySegment interface_name) {
        var mh$ = g_dbus_object_manager_get_interface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(manager, object_path, interface_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_client_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$916.const$5,"g_dbus_object_manager_client_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_object_manager_client_get_type();
     * }
     */
    public static long g_dbus_object_manager_client_get_type() {
        var mh$ = g_dbus_object_manager_client_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_client_new$MH() {
        return RuntimeHelper.requireNonNull(constants$917.const$4,"g_dbus_object_manager_client_new");
    }
    /**
     * {@snippet :
     * void g_dbus_object_manager_client_new(struct _GDBusConnection* connection, enum GDBusObjectManagerClientFlags flags, char* name, char* object_path, unsigned long (*get_proxy_type_func)(struct _GDBusObjectManagerClient*,char*,char*,void*), void* get_proxy_type_user_data, void (*get_proxy_type_destroy_notify)(void*), struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_dbus_object_manager_client_new(MemorySegment connection, int flags, MemorySegment name, MemorySegment object_path, MemorySegment get_proxy_type_func, MemorySegment get_proxy_type_user_data, MemorySegment get_proxy_type_destroy_notify, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_object_manager_client_new$MH();
        try {
            mh$.invokeExact(connection, flags, name, object_path, get_proxy_type_func, get_proxy_type_user_data, get_proxy_type_destroy_notify, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_client_new_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$917.const$5,"g_dbus_object_manager_client_new_finish");
    }
    /**
     * {@snippet :
     * struct _GDBusObjectManager* g_dbus_object_manager_client_new_finish(struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_object_manager_client_new_finish(MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_object_manager_client_new_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_client_new_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$918.const$3,"g_dbus_object_manager_client_new_sync");
    }
    /**
     * {@snippet :
     * struct _GDBusObjectManager* g_dbus_object_manager_client_new_sync(struct _GDBusConnection* connection, enum GDBusObjectManagerClientFlags flags, char* name, char* object_path, unsigned long (*get_proxy_type_func)(struct _GDBusObjectManagerClient*,char*,char*,void*), void* get_proxy_type_user_data, void (*get_proxy_type_destroy_notify)(void*), struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_object_manager_client_new_sync(MemorySegment connection, int flags, MemorySegment name, MemorySegment object_path, MemorySegment get_proxy_type_func, MemorySegment get_proxy_type_user_data, MemorySegment get_proxy_type_destroy_notify, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_object_manager_client_new_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, flags, name, object_path, get_proxy_type_func, get_proxy_type_user_data, get_proxy_type_destroy_notify, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_client_new_for_bus$MH() {
        return RuntimeHelper.requireNonNull(constants$919.const$2,"g_dbus_object_manager_client_new_for_bus");
    }
    /**
     * {@snippet :
     * void g_dbus_object_manager_client_new_for_bus(enum GBusType bus_type, enum GDBusObjectManagerClientFlags flags, char* name, char* object_path, unsigned long (*get_proxy_type_func)(struct _GDBusObjectManagerClient*,char*,char*,void*), void* get_proxy_type_user_data, void (*get_proxy_type_destroy_notify)(void*), struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_dbus_object_manager_client_new_for_bus(int bus_type, int flags, MemorySegment name, MemorySegment object_path, MemorySegment get_proxy_type_func, MemorySegment get_proxy_type_user_data, MemorySegment get_proxy_type_destroy_notify, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_object_manager_client_new_for_bus$MH();
        try {
            mh$.invokeExact(bus_type, flags, name, object_path, get_proxy_type_func, get_proxy_type_user_data, get_proxy_type_destroy_notify, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_client_new_for_bus_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$919.const$3,"g_dbus_object_manager_client_new_for_bus_finish");
    }
    /**
     * {@snippet :
     * struct _GDBusObjectManager* g_dbus_object_manager_client_new_for_bus_finish(struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_object_manager_client_new_for_bus_finish(MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_object_manager_client_new_for_bus_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_client_new_for_bus_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$920.const$1,"g_dbus_object_manager_client_new_for_bus_sync");
    }
    /**
     * {@snippet :
     * struct _GDBusObjectManager* g_dbus_object_manager_client_new_for_bus_sync(enum GBusType bus_type, enum GDBusObjectManagerClientFlags flags, char* name, char* object_path, unsigned long (*get_proxy_type_func)(struct _GDBusObjectManagerClient*,char*,char*,void*), void* get_proxy_type_user_data, void (*get_proxy_type_destroy_notify)(void*), struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_object_manager_client_new_for_bus_sync(int bus_type, int flags, MemorySegment name, MemorySegment object_path, MemorySegment get_proxy_type_func, MemorySegment get_proxy_type_user_data, MemorySegment get_proxy_type_destroy_notify, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_object_manager_client_new_for_bus_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bus_type, flags, name, object_path, get_proxy_type_func, get_proxy_type_user_data, get_proxy_type_destroy_notify, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_client_get_connection$MH() {
        return RuntimeHelper.requireNonNull(constants$920.const$2,"g_dbus_object_manager_client_get_connection");
    }
    /**
     * {@snippet :
     * struct _GDBusConnection* g_dbus_object_manager_client_get_connection(struct _GDBusObjectManagerClient* manager);
     * }
     */
    public static MemorySegment g_dbus_object_manager_client_get_connection(MemorySegment manager) {
        var mh$ = g_dbus_object_manager_client_get_connection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_client_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$920.const$3,"g_dbus_object_manager_client_get_flags");
    }
    /**
     * {@snippet :
     * enum GDBusObjectManagerClientFlags g_dbus_object_manager_client_get_flags(struct _GDBusObjectManagerClient* manager);
     * }
     */
    public static int g_dbus_object_manager_client_get_flags(MemorySegment manager) {
        var mh$ = g_dbus_object_manager_client_get_flags$MH();
        try {
            return (int)mh$.invokeExact(manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_client_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$920.const$4,"g_dbus_object_manager_client_get_name");
    }
    /**
     * {@snippet :
     * char* g_dbus_object_manager_client_get_name(struct _GDBusObjectManagerClient* manager);
     * }
     */
    public static MemorySegment g_dbus_object_manager_client_get_name(MemorySegment manager) {
        var mh$ = g_dbus_object_manager_client_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_client_get_name_owner$MH() {
        return RuntimeHelper.requireNonNull(constants$920.const$5,"g_dbus_object_manager_client_get_name_owner");
    }
    /**
     * {@snippet :
     * char* g_dbus_object_manager_client_get_name_owner(struct _GDBusObjectManagerClient* manager);
     * }
     */
    public static MemorySegment g_dbus_object_manager_client_get_name_owner(MemorySegment manager) {
        var mh$ = g_dbus_object_manager_client_get_name_owner$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_server_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$921.const$3,"g_dbus_object_manager_server_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_object_manager_server_get_type();
     * }
     */
    public static long g_dbus_object_manager_server_get_type() {
        var mh$ = g_dbus_object_manager_server_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_server_new$MH() {
        return RuntimeHelper.requireNonNull(constants$921.const$4,"g_dbus_object_manager_server_new");
    }
    /**
     * {@snippet :
     * struct _GDBusObjectManagerServer* g_dbus_object_manager_server_new(char* object_path);
     * }
     */
    public static MemorySegment g_dbus_object_manager_server_new(MemorySegment object_path) {
        var mh$ = g_dbus_object_manager_server_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_server_get_connection$MH() {
        return RuntimeHelper.requireNonNull(constants$921.const$5,"g_dbus_object_manager_server_get_connection");
    }
    /**
     * {@snippet :
     * struct _GDBusConnection* g_dbus_object_manager_server_get_connection(struct _GDBusObjectManagerServer* manager);
     * }
     */
    public static MemorySegment g_dbus_object_manager_server_get_connection(MemorySegment manager) {
        var mh$ = g_dbus_object_manager_server_get_connection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_server_set_connection$MH() {
        return RuntimeHelper.requireNonNull(constants$922.const$0,"g_dbus_object_manager_server_set_connection");
    }
    /**
     * {@snippet :
     * void g_dbus_object_manager_server_set_connection(struct _GDBusObjectManagerServer* manager, struct _GDBusConnection* connection);
     * }
     */
    public static void g_dbus_object_manager_server_set_connection(MemorySegment manager, MemorySegment connection) {
        var mh$ = g_dbus_object_manager_server_set_connection$MH();
        try {
            mh$.invokeExact(manager, connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_server_export$MH() {
        return RuntimeHelper.requireNonNull(constants$922.const$1,"g_dbus_object_manager_server_export");
    }
    /**
     * {@snippet :
     * void g_dbus_object_manager_server_export(struct _GDBusObjectManagerServer* manager, struct _GDBusObjectSkeleton* object);
     * }
     */
    public static void g_dbus_object_manager_server_export(MemorySegment manager, MemorySegment object) {
        var mh$ = g_dbus_object_manager_server_export$MH();
        try {
            mh$.invokeExact(manager, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_server_export_uniquely$MH() {
        return RuntimeHelper.requireNonNull(constants$922.const$2,"g_dbus_object_manager_server_export_uniquely");
    }
    /**
     * {@snippet :
     * void g_dbus_object_manager_server_export_uniquely(struct _GDBusObjectManagerServer* manager, struct _GDBusObjectSkeleton* object);
     * }
     */
    public static void g_dbus_object_manager_server_export_uniquely(MemorySegment manager, MemorySegment object) {
        var mh$ = g_dbus_object_manager_server_export_uniquely$MH();
        try {
            mh$.invokeExact(manager, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_server_is_exported$MH() {
        return RuntimeHelper.requireNonNull(constants$922.const$3,"g_dbus_object_manager_server_is_exported");
    }
    /**
     * {@snippet :
     * int g_dbus_object_manager_server_is_exported(struct _GDBusObjectManagerServer* manager, struct _GDBusObjectSkeleton* object);
     * }
     */
    public static int g_dbus_object_manager_server_is_exported(MemorySegment manager, MemorySegment object) {
        var mh$ = g_dbus_object_manager_server_is_exported$MH();
        try {
            return (int)mh$.invokeExact(manager, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_server_unexport$MH() {
        return RuntimeHelper.requireNonNull(constants$922.const$4,"g_dbus_object_manager_server_unexport");
    }
    /**
     * {@snippet :
     * int g_dbus_object_manager_server_unexport(struct _GDBusObjectManagerServer* manager, char* object_path);
     * }
     */
    public static int g_dbus_object_manager_server_unexport(MemorySegment manager, MemorySegment object_path) {
        var mh$ = g_dbus_object_manager_server_unexport$MH();
        try {
            return (int)mh$.invokeExact(manager, object_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_proxy_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$923.const$2,"g_dbus_object_proxy_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_object_proxy_get_type();
     * }
     */
    public static long g_dbus_object_proxy_get_type() {
        var mh$ = g_dbus_object_proxy_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_proxy_new$MH() {
        return RuntimeHelper.requireNonNull(constants$923.const$3,"g_dbus_object_proxy_new");
    }
    /**
     * {@snippet :
     * struct _GDBusObjectProxy* g_dbus_object_proxy_new(struct _GDBusConnection* connection, char* object_path);
     * }
     */
    public static MemorySegment g_dbus_object_proxy_new(MemorySegment connection, MemorySegment object_path) {
        var mh$ = g_dbus_object_proxy_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, object_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_proxy_get_connection$MH() {
        return RuntimeHelper.requireNonNull(constants$923.const$4,"g_dbus_object_proxy_get_connection");
    }
    /**
     * {@snippet :
     * struct _GDBusConnection* g_dbus_object_proxy_get_connection(struct _GDBusObjectProxy* proxy);
     * }
     */
    public static MemorySegment g_dbus_object_proxy_get_connection(MemorySegment proxy) {
        var mh$ = g_dbus_object_proxy_get_connection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_skeleton_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$924.const$4,"g_dbus_object_skeleton_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_object_skeleton_get_type();
     * }
     */
    public static long g_dbus_object_skeleton_get_type() {
        var mh$ = g_dbus_object_skeleton_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_skeleton_new$MH() {
        return RuntimeHelper.requireNonNull(constants$924.const$5,"g_dbus_object_skeleton_new");
    }
    /**
     * {@snippet :
     * struct _GDBusObjectSkeleton* g_dbus_object_skeleton_new(char* object_path);
     * }
     */
    public static MemorySegment g_dbus_object_skeleton_new(MemorySegment object_path) {
        var mh$ = g_dbus_object_skeleton_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_skeleton_flush$MH() {
        return RuntimeHelper.requireNonNull(constants$925.const$0,"g_dbus_object_skeleton_flush");
    }
    /**
     * {@snippet :
     * void g_dbus_object_skeleton_flush(struct _GDBusObjectSkeleton* object);
     * }
     */
    public static void g_dbus_object_skeleton_flush(MemorySegment object) {
        var mh$ = g_dbus_object_skeleton_flush$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_skeleton_add_interface$MH() {
        return RuntimeHelper.requireNonNull(constants$925.const$1,"g_dbus_object_skeleton_add_interface");
    }
    /**
     * {@snippet :
     * void g_dbus_object_skeleton_add_interface(struct _GDBusObjectSkeleton* object, struct _GDBusInterfaceSkeleton* interface_);
     * }
     */
    public static void g_dbus_object_skeleton_add_interface(MemorySegment object, MemorySegment interface_) {
        var mh$ = g_dbus_object_skeleton_add_interface$MH();
        try {
            mh$.invokeExact(object, interface_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_skeleton_remove_interface$MH() {
        return RuntimeHelper.requireNonNull(constants$925.const$2,"g_dbus_object_skeleton_remove_interface");
    }
    /**
     * {@snippet :
     * void g_dbus_object_skeleton_remove_interface(struct _GDBusObjectSkeleton* object, struct _GDBusInterfaceSkeleton* interface_);
     * }
     */
    public static void g_dbus_object_skeleton_remove_interface(MemorySegment object, MemorySegment interface_) {
        var mh$ = g_dbus_object_skeleton_remove_interface$MH();
        try {
            mh$.invokeExact(object, interface_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_skeleton_remove_interface_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$925.const$3,"g_dbus_object_skeleton_remove_interface_by_name");
    }
    /**
     * {@snippet :
     * void g_dbus_object_skeleton_remove_interface_by_name(struct _GDBusObjectSkeleton* object, char* interface_name);
     * }
     */
    public static void g_dbus_object_skeleton_remove_interface_by_name(MemorySegment object, MemorySegment interface_name) {
        var mh$ = g_dbus_object_skeleton_remove_interface_by_name$MH();
        try {
            mh$.invokeExact(object, interface_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_skeleton_set_object_path$MH() {
        return RuntimeHelper.requireNonNull(constants$925.const$4,"g_dbus_object_skeleton_set_object_path");
    }
    /**
     * {@snippet :
     * void g_dbus_object_skeleton_set_object_path(struct _GDBusObjectSkeleton* object, char* object_path);
     * }
     */
    public static void g_dbus_object_skeleton_set_object_path(MemorySegment object, MemorySegment object_path) {
        var mh$ = g_dbus_object_skeleton_set_object_path$MH();
        try {
            mh$.invokeExact(object, object_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$927.const$0,"g_dbus_proxy_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_proxy_get_type();
     * }
     */
    public static long g_dbus_proxy_get_type() {
        var mh$ = g_dbus_proxy_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_new$MH() {
        return RuntimeHelper.requireNonNull(constants$927.const$3,"g_dbus_proxy_new");
    }
    /**
     * {@snippet :
     * void g_dbus_proxy_new(struct _GDBusConnection* connection, enum GDBusProxyFlags flags, struct _GDBusInterfaceInfo* info, char* name, char* object_path, char* interface_name, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_dbus_proxy_new(MemorySegment connection, int flags, MemorySegment info, MemorySegment name, MemorySegment object_path, MemorySegment interface_name, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_proxy_new$MH();
        try {
            mh$.invokeExact(connection, flags, info, name, object_path, interface_name, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_new_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$927.const$4,"g_dbus_proxy_new_finish");
    }
    /**
     * {@snippet :
     * struct _GDBusProxy* g_dbus_proxy_new_finish(struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_proxy_new_finish(MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_proxy_new_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_new_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$927.const$6,"g_dbus_proxy_new_sync");
    }
    /**
     * {@snippet :
     * struct _GDBusProxy* g_dbus_proxy_new_sync(struct _GDBusConnection* connection, enum GDBusProxyFlags flags, struct _GDBusInterfaceInfo* info, char* name, char* object_path, char* interface_name, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_proxy_new_sync(MemorySegment connection, int flags, MemorySegment info, MemorySegment name, MemorySegment object_path, MemorySegment interface_name, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_proxy_new_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, flags, info, name, object_path, interface_name, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_new_for_bus$MH() {
        return RuntimeHelper.requireNonNull(constants$928.const$2,"g_dbus_proxy_new_for_bus");
    }
    /**
     * {@snippet :
     * void g_dbus_proxy_new_for_bus(enum GBusType bus_type, enum GDBusProxyFlags flags, struct _GDBusInterfaceInfo* info, char* name, char* object_path, char* interface_name, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_dbus_proxy_new_for_bus(int bus_type, int flags, MemorySegment info, MemorySegment name, MemorySegment object_path, MemorySegment interface_name, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_proxy_new_for_bus$MH();
        try {
            mh$.invokeExact(bus_type, flags, info, name, object_path, interface_name, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_new_for_bus_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$928.const$3,"g_dbus_proxy_new_for_bus_finish");
    }
    /**
     * {@snippet :
     * struct _GDBusProxy* g_dbus_proxy_new_for_bus_finish(struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_proxy_new_for_bus_finish(MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_proxy_new_for_bus_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_new_for_bus_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$928.const$5,"g_dbus_proxy_new_for_bus_sync");
    }
    /**
     * {@snippet :
     * struct _GDBusProxy* g_dbus_proxy_new_for_bus_sync(enum GBusType bus_type, enum GDBusProxyFlags flags, struct _GDBusInterfaceInfo* info, char* name, char* object_path, char* interface_name, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_proxy_new_for_bus_sync(int bus_type, int flags, MemorySegment info, MemorySegment name, MemorySegment object_path, MemorySegment interface_name, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_proxy_new_for_bus_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bus_type, flags, info, name, object_path, interface_name, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_get_connection$MH() {
        return RuntimeHelper.requireNonNull(constants$929.const$0,"g_dbus_proxy_get_connection");
    }
    /**
     * {@snippet :
     * struct _GDBusConnection* g_dbus_proxy_get_connection(struct _GDBusProxy* proxy);
     * }
     */
    public static MemorySegment g_dbus_proxy_get_connection(MemorySegment proxy) {
        var mh$ = g_dbus_proxy_get_connection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$929.const$1,"g_dbus_proxy_get_flags");
    }
    /**
     * {@snippet :
     * enum GDBusProxyFlags g_dbus_proxy_get_flags(struct _GDBusProxy* proxy);
     * }
     */
    public static int g_dbus_proxy_get_flags(MemorySegment proxy) {
        var mh$ = g_dbus_proxy_get_flags$MH();
        try {
            return (int)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$929.const$2,"g_dbus_proxy_get_name");
    }
    /**
     * {@snippet :
     * char* g_dbus_proxy_get_name(struct _GDBusProxy* proxy);
     * }
     */
    public static MemorySegment g_dbus_proxy_get_name(MemorySegment proxy) {
        var mh$ = g_dbus_proxy_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_get_name_owner$MH() {
        return RuntimeHelper.requireNonNull(constants$929.const$3,"g_dbus_proxy_get_name_owner");
    }
    /**
     * {@snippet :
     * char* g_dbus_proxy_get_name_owner(struct _GDBusProxy* proxy);
     * }
     */
    public static MemorySegment g_dbus_proxy_get_name_owner(MemorySegment proxy) {
        var mh$ = g_dbus_proxy_get_name_owner$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_get_object_path$MH() {
        return RuntimeHelper.requireNonNull(constants$929.const$4,"g_dbus_proxy_get_object_path");
    }
    /**
     * {@snippet :
     * char* g_dbus_proxy_get_object_path(struct _GDBusProxy* proxy);
     * }
     */
    public static MemorySegment g_dbus_proxy_get_object_path(MemorySegment proxy) {
        var mh$ = g_dbus_proxy_get_object_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_get_interface_name$MH() {
        return RuntimeHelper.requireNonNull(constants$929.const$5,"g_dbus_proxy_get_interface_name");
    }
    /**
     * {@snippet :
     * char* g_dbus_proxy_get_interface_name(struct _GDBusProxy* proxy);
     * }
     */
    public static MemorySegment g_dbus_proxy_get_interface_name(MemorySegment proxy) {
        var mh$ = g_dbus_proxy_get_interface_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_get_default_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$930.const$0,"g_dbus_proxy_get_default_timeout");
    }
    /**
     * {@snippet :
     * int g_dbus_proxy_get_default_timeout(struct _GDBusProxy* proxy);
     * }
     */
    public static int g_dbus_proxy_get_default_timeout(MemorySegment proxy) {
        var mh$ = g_dbus_proxy_get_default_timeout$MH();
        try {
            return (int)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_set_default_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$930.const$1,"g_dbus_proxy_set_default_timeout");
    }
    /**
     * {@snippet :
     * void g_dbus_proxy_set_default_timeout(struct _GDBusProxy* proxy, int timeout_msec);
     * }
     */
    public static void g_dbus_proxy_set_default_timeout(MemorySegment proxy, int timeout_msec) {
        var mh$ = g_dbus_proxy_set_default_timeout$MH();
        try {
            mh$.invokeExact(proxy, timeout_msec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_get_interface_info$MH() {
        return RuntimeHelper.requireNonNull(constants$930.const$2,"g_dbus_proxy_get_interface_info");
    }
    /**
     * {@snippet :
     * struct _GDBusInterfaceInfo* g_dbus_proxy_get_interface_info(struct _GDBusProxy* proxy);
     * }
     */
    public static MemorySegment g_dbus_proxy_get_interface_info(MemorySegment proxy) {
        var mh$ = g_dbus_proxy_get_interface_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_set_interface_info$MH() {
        return RuntimeHelper.requireNonNull(constants$930.const$3,"g_dbus_proxy_set_interface_info");
    }
    /**
     * {@snippet :
     * void g_dbus_proxy_set_interface_info(struct _GDBusProxy* proxy, struct _GDBusInterfaceInfo* info);
     * }
     */
    public static void g_dbus_proxy_set_interface_info(MemorySegment proxy, MemorySegment info) {
        var mh$ = g_dbus_proxy_set_interface_info$MH();
        try {
            mh$.invokeExact(proxy, info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_get_cached_property$MH() {
        return RuntimeHelper.requireNonNull(constants$930.const$4,"g_dbus_proxy_get_cached_property");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_dbus_proxy_get_cached_property(struct _GDBusProxy* proxy, char* property_name);
     * }
     */
    public static MemorySegment g_dbus_proxy_get_cached_property(MemorySegment proxy, MemorySegment property_name) {
        var mh$ = g_dbus_proxy_get_cached_property$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_set_cached_property$MH() {
        return RuntimeHelper.requireNonNull(constants$930.const$5,"g_dbus_proxy_set_cached_property");
    }
    /**
     * {@snippet :
     * void g_dbus_proxy_set_cached_property(struct _GDBusProxy* proxy, char* property_name, struct _GVariant* value);
     * }
     */
    public static void g_dbus_proxy_set_cached_property(MemorySegment proxy, MemorySegment property_name, MemorySegment value) {
        var mh$ = g_dbus_proxy_set_cached_property$MH();
        try {
            mh$.invokeExact(proxy, property_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_get_cached_property_names$MH() {
        return RuntimeHelper.requireNonNull(constants$931.const$0,"g_dbus_proxy_get_cached_property_names");
    }
    /**
     * {@snippet :
     * char** g_dbus_proxy_get_cached_property_names(struct _GDBusProxy* proxy);
     * }
     */
    public static MemorySegment g_dbus_proxy_get_cached_property_names(MemorySegment proxy) {
        var mh$ = g_dbus_proxy_get_cached_property_names$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_call$MH() {
        return RuntimeHelper.requireNonNull(constants$931.const$3,"g_dbus_proxy_call");
    }
    /**
     * {@snippet :
     * void g_dbus_proxy_call(struct _GDBusProxy* proxy, char* method_name, struct _GVariant* parameters, enum GDBusCallFlags flags, int timeout_msec, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_dbus_proxy_call(MemorySegment proxy, MemorySegment method_name, MemorySegment parameters, int flags, int timeout_msec, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_proxy_call$MH();
        try {
            mh$.invokeExact(proxy, method_name, parameters, flags, timeout_msec, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_call_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$931.const$4,"g_dbus_proxy_call_finish");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_dbus_proxy_call_finish(struct _GDBusProxy* proxy, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_proxy_call_finish(MemorySegment proxy, MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_proxy_call_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_call_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$931.const$6,"g_dbus_proxy_call_sync");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_dbus_proxy_call_sync(struct _GDBusProxy* proxy, char* method_name, struct _GVariant* parameters, enum GDBusCallFlags flags, int timeout_msec, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_proxy_call_sync(MemorySegment proxy, MemorySegment method_name, MemorySegment parameters, int flags, int timeout_msec, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_proxy_call_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy, method_name, parameters, flags, timeout_msec, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_call_with_unix_fd_list$MH() {
        return RuntimeHelper.requireNonNull(constants$932.const$2,"g_dbus_proxy_call_with_unix_fd_list");
    }
    /**
     * {@snippet :
     * void g_dbus_proxy_call_with_unix_fd_list(struct _GDBusProxy* proxy, char* method_name, struct _GVariant* parameters, enum GDBusCallFlags flags, int timeout_msec, struct _GUnixFDList* fd_list, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_dbus_proxy_call_with_unix_fd_list(MemorySegment proxy, MemorySegment method_name, MemorySegment parameters, int flags, int timeout_msec, MemorySegment fd_list, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dbus_proxy_call_with_unix_fd_list$MH();
        try {
            mh$.invokeExact(proxy, method_name, parameters, flags, timeout_msec, fd_list, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_call_with_unix_fd_list_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$932.const$3,"g_dbus_proxy_call_with_unix_fd_list_finish");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_dbus_proxy_call_with_unix_fd_list_finish(struct _GDBusProxy* proxy, struct _GUnixFDList** out_fd_list, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_proxy_call_with_unix_fd_list_finish(MemorySegment proxy, MemorySegment out_fd_list, MemorySegment res, MemorySegment error) {
        var mh$ = g_dbus_proxy_call_with_unix_fd_list_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy, out_fd_list, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_call_with_unix_fd_list_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$932.const$5,"g_dbus_proxy_call_with_unix_fd_list_sync");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_dbus_proxy_call_with_unix_fd_list_sync(struct _GDBusProxy* proxy, char* method_name, struct _GVariant* parameters, enum GDBusCallFlags flags, int timeout_msec, struct _GUnixFDList* fd_list, struct _GUnixFDList** out_fd_list, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_proxy_call_with_unix_fd_list_sync(MemorySegment proxy, MemorySegment method_name, MemorySegment parameters, int flags, int timeout_msec, MemorySegment fd_list, MemorySegment out_fd_list, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_proxy_call_with_unix_fd_list_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy, method_name, parameters, flags, timeout_msec, fd_list, out_fd_list, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_server_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$933.const$0,"g_dbus_server_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_server_get_type();
     * }
     */
    public static long g_dbus_server_get_type() {
        var mh$ = g_dbus_server_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_server_new_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$933.const$2,"g_dbus_server_new_sync");
    }
    /**
     * {@snippet :
     * struct _GDBusServer* g_dbus_server_new_sync(char* address, enum GDBusServerFlags flags, char* guid, struct _GDBusAuthObserver* observer, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_dbus_server_new_sync(MemorySegment address, int flags, MemorySegment guid, MemorySegment observer, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dbus_server_new_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(address, flags, guid, observer, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_server_get_client_address$MH() {
        return RuntimeHelper.requireNonNull(constants$933.const$3,"g_dbus_server_get_client_address");
    }
    /**
     * {@snippet :
     * char* g_dbus_server_get_client_address(struct _GDBusServer* server);
     * }
     */
    public static MemorySegment g_dbus_server_get_client_address(MemorySegment server) {
        var mh$ = g_dbus_server_get_client_address$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(server);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_server_get_guid$MH() {
        return RuntimeHelper.requireNonNull(constants$933.const$4,"g_dbus_server_get_guid");
    }
    /**
     * {@snippet :
     * char* g_dbus_server_get_guid(struct _GDBusServer* server);
     * }
     */
    public static MemorySegment g_dbus_server_get_guid(MemorySegment server) {
        var mh$ = g_dbus_server_get_guid$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(server);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_server_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$933.const$5,"g_dbus_server_get_flags");
    }
    /**
     * {@snippet :
     * enum GDBusServerFlags g_dbus_server_get_flags(struct _GDBusServer* server);
     * }
     */
    public static int g_dbus_server_get_flags(MemorySegment server) {
        var mh$ = g_dbus_server_get_flags$MH();
        try {
            return (int)mh$.invokeExact(server);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_server_start$MH() {
        return RuntimeHelper.requireNonNull(constants$934.const$0,"g_dbus_server_start");
    }
    /**
     * {@snippet :
     * void g_dbus_server_start(struct _GDBusServer* server);
     * }
     */
    public static void g_dbus_server_start(MemorySegment server) {
        var mh$ = g_dbus_server_start$MH();
        try {
            mh$.invokeExact(server);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_server_stop$MH() {
        return RuntimeHelper.requireNonNull(constants$934.const$1,"g_dbus_server_stop");
    }
    /**
     * {@snippet :
     * void g_dbus_server_stop(struct _GDBusServer* server);
     * }
     */
    public static void g_dbus_server_stop(MemorySegment server) {
        var mh$ = g_dbus_server_stop$MH();
        try {
            mh$.invokeExact(server);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_server_is_active$MH() {
        return RuntimeHelper.requireNonNull(constants$934.const$2,"g_dbus_server_is_active");
    }
    /**
     * {@snippet :
     * int g_dbus_server_is_active(struct _GDBusServer* server);
     * }
     */
    public static int g_dbus_server_is_active(MemorySegment server) {
        var mh$ = g_dbus_server_is_active$MH();
        try {
            return (int)mh$.invokeExact(server);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_is_guid$MH() {
        return RuntimeHelper.requireNonNull(constants$934.const$3,"g_dbus_is_guid");
    }
    /**
     * {@snippet :
     * int g_dbus_is_guid(char* string);
     * }
     */
    public static int g_dbus_is_guid(MemorySegment string) {
        var mh$ = g_dbus_is_guid$MH();
        try {
            return (int)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_generate_guid$MH() {
        return RuntimeHelper.requireNonNull(constants$934.const$4,"g_dbus_generate_guid");
    }
    /**
     * {@snippet :
     * char* g_dbus_generate_guid();
     * }
     */
    public static MemorySegment g_dbus_generate_guid() {
        var mh$ = g_dbus_generate_guid$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_is_name$MH() {
        return RuntimeHelper.requireNonNull(constants$934.const$5,"g_dbus_is_name");
    }
    /**
     * {@snippet :
     * int g_dbus_is_name(char* string);
     * }
     */
    public static int g_dbus_is_name(MemorySegment string) {
        var mh$ = g_dbus_is_name$MH();
        try {
            return (int)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_is_unique_name$MH() {
        return RuntimeHelper.requireNonNull(constants$935.const$0,"g_dbus_is_unique_name");
    }
    /**
     * {@snippet :
     * int g_dbus_is_unique_name(char* string);
     * }
     */
    public static int g_dbus_is_unique_name(MemorySegment string) {
        var mh$ = g_dbus_is_unique_name$MH();
        try {
            return (int)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_is_member_name$MH() {
        return RuntimeHelper.requireNonNull(constants$935.const$1,"g_dbus_is_member_name");
    }
    /**
     * {@snippet :
     * int g_dbus_is_member_name(char* string);
     * }
     */
    public static int g_dbus_is_member_name(MemorySegment string) {
        var mh$ = g_dbus_is_member_name$MH();
        try {
            return (int)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_is_interface_name$MH() {
        return RuntimeHelper.requireNonNull(constants$935.const$2,"g_dbus_is_interface_name");
    }
    /**
     * {@snippet :
     * int g_dbus_is_interface_name(char* string);
     * }
     */
    public static int g_dbus_is_interface_name(MemorySegment string) {
        var mh$ = g_dbus_is_interface_name$MH();
        try {
            return (int)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_is_error_name$MH() {
        return RuntimeHelper.requireNonNull(constants$935.const$3,"g_dbus_is_error_name");
    }
    /**
     * {@snippet :
     * int g_dbus_is_error_name(char* string);
     * }
     */
    public static int g_dbus_is_error_name(MemorySegment string) {
        var mh$ = g_dbus_is_error_name$MH();
        try {
            return (int)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_gvariant_to_gvalue$MH() {
        return RuntimeHelper.requireNonNull(constants$935.const$4,"g_dbus_gvariant_to_gvalue");
    }
    /**
     * {@snippet :
     * void g_dbus_gvariant_to_gvalue(struct _GVariant* value, struct _GValue* out_gvalue);
     * }
     */
    public static void g_dbus_gvariant_to_gvalue(MemorySegment value, MemorySegment out_gvalue) {
        var mh$ = g_dbus_gvariant_to_gvalue$MH();
        try {
            mh$.invokeExact(value, out_gvalue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_gvalue_to_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$935.const$5,"g_dbus_gvalue_to_gvariant");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_dbus_gvalue_to_gvariant(struct _GValue* gvalue, struct _GVariantType* type);
     * }
     */
    public static MemorySegment g_dbus_gvalue_to_gvariant(MemorySegment gvalue, MemorySegment type) {
        var mh$ = g_dbus_gvalue_to_gvariant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gvalue, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_escape_object_path_bytestring$MH() {
        return RuntimeHelper.requireNonNull(constants$936.const$0,"g_dbus_escape_object_path_bytestring");
    }
    /**
     * {@snippet :
     * char* g_dbus_escape_object_path_bytestring(unsigned char* bytes);
     * }
     */
    public static MemorySegment g_dbus_escape_object_path_bytestring(MemorySegment bytes) {
        var mh$ = g_dbus_escape_object_path_bytestring$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_escape_object_path$MH() {
        return RuntimeHelper.requireNonNull(constants$936.const$1,"g_dbus_escape_object_path");
    }
    /**
     * {@snippet :
     * char* g_dbus_escape_object_path(char* s);
     * }
     */
    public static MemorySegment g_dbus_escape_object_path(MemorySegment s) {
        var mh$ = g_dbus_escape_object_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_unescape_object_path$MH() {
        return RuntimeHelper.requireNonNull(constants$936.const$2,"g_dbus_unescape_object_path");
    }
    /**
     * {@snippet :
     * unsigned char* g_dbus_unescape_object_path(char* s);
     * }
     */
    public static MemorySegment g_dbus_unescape_object_path(MemorySegment s) {
        var mh$ = g_dbus_unescape_object_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_debug_controller_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$936.const$3,"g_debug_controller_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_debug_controller_get_type();
     * }
     */
    public static long g_debug_controller_get_type() {
        var mh$ = g_debug_controller_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GDebugController* GDebugController_autoptr;
     * }
     */
    public static final AddressLayout GDebugController_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDebugController_listautoptr;
     * }
     */
    public static final AddressLayout GDebugController_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDebugController_slistautoptr;
     * }
     */
    public static final AddressLayout GDebugController_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDebugController_queueautoptr;
     * }
     */
    public static final AddressLayout GDebugController_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle g_debug_controller_get_debug_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$936.const$5,"g_debug_controller_get_debug_enabled");
    }
    /**
     * {@snippet :
     * int g_debug_controller_get_debug_enabled(struct _GDebugController* self);
     * }
     */
    public static int g_debug_controller_get_debug_enabled(MemorySegment self) {
        var mh$ = g_debug_controller_get_debug_enabled$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_debug_controller_set_debug_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$937.const$0,"g_debug_controller_set_debug_enabled");
    }
    /**
     * {@snippet :
     * void g_debug_controller_set_debug_enabled(struct _GDebugController* self, int debug_enabled);
     * }
     */
    public static void g_debug_controller_set_debug_enabled(MemorySegment self, int debug_enabled) {
        var mh$ = g_debug_controller_set_debug_enabled$MH();
        try {
            mh$.invokeExact(self, debug_enabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_debug_controller_dbus_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$937.const$1,"g_debug_controller_dbus_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_debug_controller_dbus_get_type();
     * }
     */
    public static long g_debug_controller_dbus_get_type() {
        var mh$ = g_debug_controller_dbus_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GDebugControllerDBus* GDebugControllerDBus_autoptr;
     * }
     */
    public static final AddressLayout GDebugControllerDBus_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDebugControllerDBus_listautoptr;
     * }
     */
    public static final AddressLayout GDebugControllerDBus_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDebugControllerDBus_slistautoptr;
     * }
     */
    public static final AddressLayout GDebugControllerDBus_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDebugControllerDBus_queueautoptr;
     * }
     */
    public static final AddressLayout GDebugControllerDBus_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDebugControllerDBusClass* GDebugControllerDBusClass_autoptr;
     * }
     */
    public static final AddressLayout GDebugControllerDBusClass_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDebugControllerDBusClass_listautoptr;
     * }
     */
    public static final AddressLayout GDebugControllerDBusClass_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDebugControllerDBusClass_slistautoptr;
     * }
     */
    public static final AddressLayout GDebugControllerDBusClass_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDebugControllerDBusClass_queueautoptr;
     * }
     */
    public static final AddressLayout GDebugControllerDBusClass_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle g_debug_controller_dbus_new$MH() {
        return RuntimeHelper.requireNonNull(constants$938.const$0,"g_debug_controller_dbus_new");
    }
    /**
     * {@snippet :
     * struct _GDebugControllerDBus* g_debug_controller_dbus_new(struct _GDBusConnection* connection, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_debug_controller_dbus_new(MemorySegment connection, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_debug_controller_dbus_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_debug_controller_dbus_stop$MH() {
        return RuntimeHelper.requireNonNull(constants$938.const$1,"g_debug_controller_dbus_stop");
    }
    /**
     * {@snippet :
     * void g_debug_controller_dbus_stop(struct _GDebugControllerDBus* self);
     * }
     */
    public static void g_debug_controller_dbus_stop(MemorySegment self) {
        var mh$ = g_debug_controller_dbus_stop$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$949.const$2,"g_drive_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_drive_get_type();
     * }
     */
    public static long g_drive_get_type() {
        var mh$ = g_drive_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$949.const$3,"g_drive_get_name");
    }
    /**
     * {@snippet :
     * char* g_drive_get_name(struct _GDrive* drive);
     * }
     */
    public static MemorySegment g_drive_get_name(MemorySegment drive) {
        var mh$ = g_drive_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(drive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_get_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$949.const$4,"g_drive_get_icon");
    }
    /**
     * {@snippet :
     * struct _GIcon* g_drive_get_icon(struct _GDrive* drive);
     * }
     */
    public static MemorySegment g_drive_get_icon(MemorySegment drive) {
        var mh$ = g_drive_get_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(drive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_get_symbolic_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$949.const$5,"g_drive_get_symbolic_icon");
    }
    /**
     * {@snippet :
     * struct _GIcon* g_drive_get_symbolic_icon(struct _GDrive* drive);
     * }
     */
    public static MemorySegment g_drive_get_symbolic_icon(MemorySegment drive) {
        var mh$ = g_drive_get_symbolic_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(drive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_has_volumes$MH() {
        return RuntimeHelper.requireNonNull(constants$950.const$0,"g_drive_has_volumes");
    }
    /**
     * {@snippet :
     * int g_drive_has_volumes(struct _GDrive* drive);
     * }
     */
    public static int g_drive_has_volumes(MemorySegment drive) {
        var mh$ = g_drive_has_volumes$MH();
        try {
            return (int)mh$.invokeExact(drive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_get_volumes$MH() {
        return RuntimeHelper.requireNonNull(constants$950.const$1,"g_drive_get_volumes");
    }
    /**
     * {@snippet :
     * struct _GList* g_drive_get_volumes(struct _GDrive* drive);
     * }
     */
    public static MemorySegment g_drive_get_volumes(MemorySegment drive) {
        var mh$ = g_drive_get_volumes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(drive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_is_removable$MH() {
        return RuntimeHelper.requireNonNull(constants$950.const$2,"g_drive_is_removable");
    }
    /**
     * {@snippet :
     * int g_drive_is_removable(struct _GDrive* drive);
     * }
     */
    public static int g_drive_is_removable(MemorySegment drive) {
        var mh$ = g_drive_is_removable$MH();
        try {
            return (int)mh$.invokeExact(drive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_is_media_removable$MH() {
        return RuntimeHelper.requireNonNull(constants$950.const$3,"g_drive_is_media_removable");
    }
    /**
     * {@snippet :
     * int g_drive_is_media_removable(struct _GDrive* drive);
     * }
     */
    public static int g_drive_is_media_removable(MemorySegment drive) {
        var mh$ = g_drive_is_media_removable$MH();
        try {
            return (int)mh$.invokeExact(drive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_has_media$MH() {
        return RuntimeHelper.requireNonNull(constants$950.const$4,"g_drive_has_media");
    }
    /**
     * {@snippet :
     * int g_drive_has_media(struct _GDrive* drive);
     * }
     */
    public static int g_drive_has_media(MemorySegment drive) {
        var mh$ = g_drive_has_media$MH();
        try {
            return (int)mh$.invokeExact(drive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_is_media_check_automatic$MH() {
        return RuntimeHelper.requireNonNull(constants$950.const$5,"g_drive_is_media_check_automatic");
    }
    /**
     * {@snippet :
     * int g_drive_is_media_check_automatic(struct _GDrive* drive);
     * }
     */
    public static int g_drive_is_media_check_automatic(MemorySegment drive) {
        var mh$ = g_drive_is_media_check_automatic$MH();
        try {
            return (int)mh$.invokeExact(drive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_can_poll_for_media$MH() {
        return RuntimeHelper.requireNonNull(constants$951.const$0,"g_drive_can_poll_for_media");
    }
    /**
     * {@snippet :
     * int g_drive_can_poll_for_media(struct _GDrive* drive);
     * }
     */
    public static int g_drive_can_poll_for_media(MemorySegment drive) {
        var mh$ = g_drive_can_poll_for_media$MH();
        try {
            return (int)mh$.invokeExact(drive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_can_eject$MH() {
        return RuntimeHelper.requireNonNull(constants$951.const$1,"g_drive_can_eject");
    }
    /**
     * {@snippet :
     * int g_drive_can_eject(struct _GDrive* drive);
     * }
     */
    public static int g_drive_can_eject(MemorySegment drive) {
        var mh$ = g_drive_can_eject$MH();
        try {
            return (int)mh$.invokeExact(drive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_eject$MH() {
        return RuntimeHelper.requireNonNull(constants$951.const$3,"g_drive_eject");
    }
    /**
     * {@snippet :
     * void g_drive_eject(struct _GDrive* drive, enum GMountUnmountFlags flags, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_drive_eject(MemorySegment drive, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_drive_eject$MH();
        try {
            mh$.invokeExact(drive, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_eject_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$951.const$4,"g_drive_eject_finish");
    }
    /**
     * {@snippet :
     * int g_drive_eject_finish(struct _GDrive* drive, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_drive_eject_finish(MemorySegment drive, MemorySegment result, MemorySegment error) {
        var mh$ = g_drive_eject_finish$MH();
        try {
            return (int)mh$.invokeExact(drive, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_poll_for_media$MH() {
        return RuntimeHelper.requireNonNull(constants$952.const$0,"g_drive_poll_for_media");
    }
    /**
     * {@snippet :
     * void g_drive_poll_for_media(struct _GDrive* drive, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_drive_poll_for_media(MemorySegment drive, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_drive_poll_for_media$MH();
        try {
            mh$.invokeExact(drive, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_poll_for_media_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$952.const$1,"g_drive_poll_for_media_finish");
    }
    /**
     * {@snippet :
     * int g_drive_poll_for_media_finish(struct _GDrive* drive, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_drive_poll_for_media_finish(MemorySegment drive, MemorySegment result, MemorySegment error) {
        var mh$ = g_drive_poll_for_media_finish$MH();
        try {
            return (int)mh$.invokeExact(drive, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_get_identifier$MH() {
        return RuntimeHelper.requireNonNull(constants$952.const$2,"g_drive_get_identifier");
    }
    /**
     * {@snippet :
     * char* g_drive_get_identifier(struct _GDrive* drive, char* kind);
     * }
     */
    public static MemorySegment g_drive_get_identifier(MemorySegment drive, MemorySegment kind) {
        var mh$ = g_drive_get_identifier$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(drive, kind);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_enumerate_identifiers$MH() {
        return RuntimeHelper.requireNonNull(constants$952.const$3,"g_drive_enumerate_identifiers");
    }
    /**
     * {@snippet :
     * char** g_drive_enumerate_identifiers(struct _GDrive* drive);
     * }
     */
    public static MemorySegment g_drive_enumerate_identifiers(MemorySegment drive) {
        var mh$ = g_drive_enumerate_identifiers$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(drive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_get_start_stop_type$MH() {
        return RuntimeHelper.requireNonNull(constants$952.const$4,"g_drive_get_start_stop_type");
    }
    /**
     * {@snippet :
     * enum GDriveStartStopType g_drive_get_start_stop_type(struct _GDrive* drive);
     * }
     */
    public static int g_drive_get_start_stop_type(MemorySegment drive) {
        var mh$ = g_drive_get_start_stop_type$MH();
        try {
            return (int)mh$.invokeExact(drive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_can_start$MH() {
        return RuntimeHelper.requireNonNull(constants$952.const$5,"g_drive_can_start");
    }
    /**
     * {@snippet :
     * int g_drive_can_start(struct _GDrive* drive);
     * }
     */
    public static int g_drive_can_start(MemorySegment drive) {
        var mh$ = g_drive_can_start$MH();
        try {
            return (int)mh$.invokeExact(drive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_can_start_degraded$MH() {
        return RuntimeHelper.requireNonNull(constants$953.const$0,"g_drive_can_start_degraded");
    }
    /**
     * {@snippet :
     * int g_drive_can_start_degraded(struct _GDrive* drive);
     * }
     */
    public static int g_drive_can_start_degraded(MemorySegment drive) {
        var mh$ = g_drive_can_start_degraded$MH();
        try {
            return (int)mh$.invokeExact(drive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_start$MH() {
        return RuntimeHelper.requireNonNull(constants$953.const$2,"g_drive_start");
    }
    /**
     * {@snippet :
     * void g_drive_start(struct _GDrive* drive, enum GDriveStartFlags flags, struct _GMountOperation* mount_operation, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_drive_start(MemorySegment drive, int flags, MemorySegment mount_operation, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_drive_start$MH();
        try {
            mh$.invokeExact(drive, flags, mount_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_start_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$953.const$3,"g_drive_start_finish");
    }
    /**
     * {@snippet :
     * int g_drive_start_finish(struct _GDrive* drive, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_drive_start_finish(MemorySegment drive, MemorySegment result, MemorySegment error) {
        var mh$ = g_drive_start_finish$MH();
        try {
            return (int)mh$.invokeExact(drive, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_can_stop$MH() {
        return RuntimeHelper.requireNonNull(constants$953.const$4,"g_drive_can_stop");
    }
    /**
     * {@snippet :
     * int g_drive_can_stop(struct _GDrive* drive);
     * }
     */
    public static int g_drive_can_stop(MemorySegment drive) {
        var mh$ = g_drive_can_stop$MH();
        try {
            return (int)mh$.invokeExact(drive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_stop$MH() {
        return RuntimeHelper.requireNonNull(constants$954.const$0,"g_drive_stop");
    }
    /**
     * {@snippet :
     * void g_drive_stop(struct _GDrive* drive, enum GMountUnmountFlags flags, struct _GMountOperation* mount_operation, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_drive_stop(MemorySegment drive, int flags, MemorySegment mount_operation, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_drive_stop$MH();
        try {
            mh$.invokeExact(drive, flags, mount_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_stop_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$954.const$1,"g_drive_stop_finish");
    }
    /**
     * {@snippet :
     * int g_drive_stop_finish(struct _GDrive* drive, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_drive_stop_finish(MemorySegment drive, MemorySegment result, MemorySegment error) {
        var mh$ = g_drive_stop_finish$MH();
        try {
            return (int)mh$.invokeExact(drive, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_eject_with_operation$MH() {
        return RuntimeHelper.requireNonNull(constants$954.const$3,"g_drive_eject_with_operation");
    }
    /**
     * {@snippet :
     * void g_drive_eject_with_operation(struct _GDrive* drive, enum GMountUnmountFlags flags, struct _GMountOperation* mount_operation, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_drive_eject_with_operation(MemorySegment drive, int flags, MemorySegment mount_operation, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_drive_eject_with_operation$MH();
        try {
            mh$.invokeExact(drive, flags, mount_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_eject_with_operation_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$954.const$4,"g_drive_eject_with_operation_finish");
    }
    /**
     * {@snippet :
     * int g_drive_eject_with_operation_finish(struct _GDrive* drive, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_drive_eject_with_operation_finish(MemorySegment drive, MemorySegment result, MemorySegment error) {
        var mh$ = g_drive_eject_with_operation_finish$MH();
        try {
            return (int)mh$.invokeExact(drive, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_get_sort_key$MH() {
        return RuntimeHelper.requireNonNull(constants$954.const$5,"g_drive_get_sort_key");
    }
    /**
     * {@snippet :
     * char* g_drive_get_sort_key(struct _GDrive* drive);
     * }
     */
    public static MemorySegment g_drive_get_sort_key(MemorySegment drive) {
        var mh$ = g_drive_get_sort_key$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(drive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$959.const$2,"g_dtls_connection_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dtls_connection_get_type();
     * }
     */
    public static long g_dtls_connection_get_type() {
        var mh$ = g_dtls_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_set_database$MH() {
        return RuntimeHelper.requireNonNull(constants$959.const$3,"g_dtls_connection_set_database");
    }
    /**
     * {@snippet :
     * void g_dtls_connection_set_database(struct _GDtlsConnection* conn, struct _GTlsDatabase* database);
     * }
     */
    public static void g_dtls_connection_set_database(MemorySegment conn, MemorySegment database) {
        var mh$ = g_dtls_connection_set_database$MH();
        try {
            mh$.invokeExact(conn, database);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_get_database$MH() {
        return RuntimeHelper.requireNonNull(constants$959.const$4,"g_dtls_connection_get_database");
    }
    /**
     * {@snippet :
     * struct _GTlsDatabase* g_dtls_connection_get_database(struct _GDtlsConnection* conn);
     * }
     */
    public static MemorySegment g_dtls_connection_get_database(MemorySegment conn) {
        var mh$ = g_dtls_connection_get_database$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_set_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$959.const$5,"g_dtls_connection_set_certificate");
    }
    /**
     * {@snippet :
     * void g_dtls_connection_set_certificate(struct _GDtlsConnection* conn, struct _GTlsCertificate* certificate);
     * }
     */
    public static void g_dtls_connection_set_certificate(MemorySegment conn, MemorySegment certificate) {
        var mh$ = g_dtls_connection_set_certificate$MH();
        try {
            mh$.invokeExact(conn, certificate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_get_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$960.const$0,"g_dtls_connection_get_certificate");
    }
    /**
     * {@snippet :
     * struct _GTlsCertificate* g_dtls_connection_get_certificate(struct _GDtlsConnection* conn);
     * }
     */
    public static MemorySegment g_dtls_connection_get_certificate(MemorySegment conn) {
        var mh$ = g_dtls_connection_get_certificate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_set_interaction$MH() {
        return RuntimeHelper.requireNonNull(constants$960.const$1,"g_dtls_connection_set_interaction");
    }
    /**
     * {@snippet :
     * void g_dtls_connection_set_interaction(struct _GDtlsConnection* conn, struct _GTlsInteraction* interaction);
     * }
     */
    public static void g_dtls_connection_set_interaction(MemorySegment conn, MemorySegment interaction) {
        var mh$ = g_dtls_connection_set_interaction$MH();
        try {
            mh$.invokeExact(conn, interaction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_get_interaction$MH() {
        return RuntimeHelper.requireNonNull(constants$960.const$2,"g_dtls_connection_get_interaction");
    }
    /**
     * {@snippet :
     * struct _GTlsInteraction* g_dtls_connection_get_interaction(struct _GDtlsConnection* conn);
     * }
     */
    public static MemorySegment g_dtls_connection_get_interaction(MemorySegment conn) {
        var mh$ = g_dtls_connection_get_interaction$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_get_peer_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$960.const$3,"g_dtls_connection_get_peer_certificate");
    }
    /**
     * {@snippet :
     * struct _GTlsCertificate* g_dtls_connection_get_peer_certificate(struct _GDtlsConnection* conn);
     * }
     */
    public static MemorySegment g_dtls_connection_get_peer_certificate(MemorySegment conn) {
        var mh$ = g_dtls_connection_get_peer_certificate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_get_peer_certificate_errors$MH() {
        return RuntimeHelper.requireNonNull(constants$960.const$4,"g_dtls_connection_get_peer_certificate_errors");
    }
    /**
     * {@snippet :
     * enum GTlsCertificateFlags g_dtls_connection_get_peer_certificate_errors(struct _GDtlsConnection* conn);
     * }
     */
    public static int g_dtls_connection_get_peer_certificate_errors(MemorySegment conn) {
        var mh$ = g_dtls_connection_get_peer_certificate_errors$MH();
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_set_require_close_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$960.const$5,"g_dtls_connection_set_require_close_notify");
    }
    /**
     * {@snippet :
     * void g_dtls_connection_set_require_close_notify(struct _GDtlsConnection* conn, int require_close_notify);
     * }
     */
    public static void g_dtls_connection_set_require_close_notify(MemorySegment conn, int require_close_notify) {
        var mh$ = g_dtls_connection_set_require_close_notify$MH();
        try {
            mh$.invokeExact(conn, require_close_notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_get_require_close_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$961.const$0,"g_dtls_connection_get_require_close_notify");
    }
    /**
     * {@snippet :
     * int g_dtls_connection_get_require_close_notify(struct _GDtlsConnection* conn);
     * }
     */
    public static int g_dtls_connection_get_require_close_notify(MemorySegment conn) {
        var mh$ = g_dtls_connection_get_require_close_notify$MH();
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_set_rehandshake_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$961.const$1,"g_dtls_connection_set_rehandshake_mode");
    }
    /**
     * {@snippet :
     * void g_dtls_connection_set_rehandshake_mode(struct _GDtlsConnection* conn, enum GTlsRehandshakeMode mode);
     * }
     */
    public static void g_dtls_connection_set_rehandshake_mode(MemorySegment conn, int mode) {
        var mh$ = g_dtls_connection_set_rehandshake_mode$MH();
        try {
            mh$.invokeExact(conn, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_get_rehandshake_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$961.const$2,"g_dtls_connection_get_rehandshake_mode");
    }
    /**
     * {@snippet :
     * enum GTlsRehandshakeMode g_dtls_connection_get_rehandshake_mode(struct _GDtlsConnection* conn);
     * }
     */
    public static int g_dtls_connection_get_rehandshake_mode(MemorySegment conn) {
        var mh$ = g_dtls_connection_get_rehandshake_mode$MH();
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_handshake$MH() {
        return RuntimeHelper.requireNonNull(constants$961.const$3,"g_dtls_connection_handshake");
    }
    /**
     * {@snippet :
     * int g_dtls_connection_handshake(struct _GDtlsConnection* conn, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_dtls_connection_handshake(MemorySegment conn, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dtls_connection_handshake$MH();
        try {
            return (int)mh$.invokeExact(conn, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_handshake_async$MH() {
        return RuntimeHelper.requireNonNull(constants$961.const$5,"g_dtls_connection_handshake_async");
    }
    /**
     * {@snippet :
     * void g_dtls_connection_handshake_async(struct _GDtlsConnection* conn, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_dtls_connection_handshake_async(MemorySegment conn, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dtls_connection_handshake_async$MH();
        try {
            mh$.invokeExact(conn, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_handshake_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$962.const$0,"g_dtls_connection_handshake_finish");
    }
    /**
     * {@snippet :
     * int g_dtls_connection_handshake_finish(struct _GDtlsConnection* conn, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_dtls_connection_handshake_finish(MemorySegment conn, MemorySegment result, MemorySegment error) {
        var mh$ = g_dtls_connection_handshake_finish$MH();
        try {
            return (int)mh$.invokeExact(conn, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_shutdown$MH() {
        return RuntimeHelper.requireNonNull(constants$962.const$1,"g_dtls_connection_shutdown");
    }
    /**
     * {@snippet :
     * int g_dtls_connection_shutdown(struct _GDtlsConnection* conn, int shutdown_read, int shutdown_write, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_dtls_connection_shutdown(MemorySegment conn, int shutdown_read, int shutdown_write, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dtls_connection_shutdown$MH();
        try {
            return (int)mh$.invokeExact(conn, shutdown_read, shutdown_write, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_shutdown_async$MH() {
        return RuntimeHelper.requireNonNull(constants$962.const$3,"g_dtls_connection_shutdown_async");
    }
    /**
     * {@snippet :
     * void g_dtls_connection_shutdown_async(struct _GDtlsConnection* conn, int shutdown_read, int shutdown_write, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_dtls_connection_shutdown_async(MemorySegment conn, int shutdown_read, int shutdown_write, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dtls_connection_shutdown_async$MH();
        try {
            mh$.invokeExact(conn, shutdown_read, shutdown_write, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_shutdown_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$962.const$4,"g_dtls_connection_shutdown_finish");
    }
    /**
     * {@snippet :
     * int g_dtls_connection_shutdown_finish(struct _GDtlsConnection* conn, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_dtls_connection_shutdown_finish(MemorySegment conn, MemorySegment result, MemorySegment error) {
        var mh$ = g_dtls_connection_shutdown_finish$MH();
        try {
            return (int)mh$.invokeExact(conn, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_close$MH() {
        return RuntimeHelper.requireNonNull(constants$962.const$5,"g_dtls_connection_close");
    }
    /**
     * {@snippet :
     * int g_dtls_connection_close(struct _GDtlsConnection* conn, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_dtls_connection_close(MemorySegment conn, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_dtls_connection_close$MH();
        try {
            return (int)mh$.invokeExact(conn, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_close_async$MH() {
        return RuntimeHelper.requireNonNull(constants$963.const$1,"g_dtls_connection_close_async");
    }
    /**
     * {@snippet :
     * void g_dtls_connection_close_async(struct _GDtlsConnection* conn, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_dtls_connection_close_async(MemorySegment conn, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_dtls_connection_close_async$MH();
        try {
            mh$.invokeExact(conn, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_close_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$963.const$2,"g_dtls_connection_close_finish");
    }
    /**
     * {@snippet :
     * int g_dtls_connection_close_finish(struct _GDtlsConnection* conn, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_dtls_connection_close_finish(MemorySegment conn, MemorySegment result, MemorySegment error) {
        var mh$ = g_dtls_connection_close_finish$MH();
        try {
            return (int)mh$.invokeExact(conn, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_emit_accept_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$963.const$3,"g_dtls_connection_emit_accept_certificate");
    }
    /**
     * {@snippet :
     * int g_dtls_connection_emit_accept_certificate(struct _GDtlsConnection* conn, struct _GTlsCertificate* peer_cert, enum GTlsCertificateFlags errors);
     * }
     */
    public static int g_dtls_connection_emit_accept_certificate(MemorySegment conn, MemorySegment peer_cert, int errors) {
        var mh$ = g_dtls_connection_emit_accept_certificate$MH();
        try {
            return (int)mh$.invokeExact(conn, peer_cert, errors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_set_advertised_protocols$MH() {
        return RuntimeHelper.requireNonNull(constants$963.const$4,"g_dtls_connection_set_advertised_protocols");
    }
    /**
     * {@snippet :
     * void g_dtls_connection_set_advertised_protocols(struct _GDtlsConnection* conn, char** protocols);
     * }
     */
    public static void g_dtls_connection_set_advertised_protocols(MemorySegment conn, MemorySegment protocols) {
        var mh$ = g_dtls_connection_set_advertised_protocols$MH();
        try {
            mh$.invokeExact(conn, protocols);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_get_negotiated_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$963.const$5,"g_dtls_connection_get_negotiated_protocol");
    }
    /**
     * {@snippet :
     * char* g_dtls_connection_get_negotiated_protocol(struct _GDtlsConnection* conn);
     * }
     */
    public static MemorySegment g_dtls_connection_get_negotiated_protocol(MemorySegment conn) {
        var mh$ = g_dtls_connection_get_negotiated_protocol$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_get_channel_binding_data$MH() {
        return RuntimeHelper.requireNonNull(constants$964.const$0,"g_dtls_connection_get_channel_binding_data");
    }
    /**
     * {@snippet :
     * int g_dtls_connection_get_channel_binding_data(struct _GDtlsConnection* conn, enum GTlsChannelBindingType type, struct _GByteArray* data, struct _GError** error);
     * }
     */
    public static int g_dtls_connection_get_channel_binding_data(MemorySegment conn, int type, MemorySegment data, MemorySegment error) {
        var mh$ = g_dtls_connection_get_channel_binding_data$MH();
        try {
            return (int)mh$.invokeExact(conn, type, data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_get_protocol_version$MH() {
        return RuntimeHelper.requireNonNull(constants$964.const$1,"g_dtls_connection_get_protocol_version");
    }
    /**
     * {@snippet :
     * enum GTlsProtocolVersion g_dtls_connection_get_protocol_version(struct _GDtlsConnection* conn);
     * }
     */
    public static int g_dtls_connection_get_protocol_version(MemorySegment conn) {
        var mh$ = g_dtls_connection_get_protocol_version$MH();
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_connection_get_ciphersuite_name$MH() {
        return RuntimeHelper.requireNonNull(constants$964.const$2,"g_dtls_connection_get_ciphersuite_name");
    }
    /**
     * {@snippet :
     * char* g_dtls_connection_get_ciphersuite_name(struct _GDtlsConnection* conn);
     * }
     */
    public static MemorySegment g_dtls_connection_get_ciphersuite_name(MemorySegment conn) {
        var mh$ = g_dtls_connection_get_ciphersuite_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_client_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$964.const$4,"g_dtls_client_connection_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dtls_client_connection_get_type();
     * }
     */
    public static long g_dtls_client_connection_get_type() {
        var mh$ = g_dtls_client_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_client_connection_new$MH() {
        return RuntimeHelper.requireNonNull(constants$964.const$5,"g_dtls_client_connection_new");
    }
    /**
     * {@snippet :
     * struct _GDatagramBased* g_dtls_client_connection_new(struct _GDatagramBased* base_socket, struct _GSocketConnectable* server_identity, struct _GError** error);
     * }
     */
    public static MemorySegment g_dtls_client_connection_new(MemorySegment base_socket, MemorySegment server_identity, MemorySegment error) {
        var mh$ = g_dtls_client_connection_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(base_socket, server_identity, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_client_connection_get_validation_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$965.const$0,"g_dtls_client_connection_get_validation_flags");
    }
    /**
     * {@snippet :
     * enum GTlsCertificateFlags g_dtls_client_connection_get_validation_flags(struct _GDtlsClientConnection* conn);
     * }
     */
    public static int g_dtls_client_connection_get_validation_flags(MemorySegment conn) {
        var mh$ = g_dtls_client_connection_get_validation_flags$MH();
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_client_connection_set_validation_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$965.const$1,"g_dtls_client_connection_set_validation_flags");
    }
    /**
     * {@snippet :
     * void g_dtls_client_connection_set_validation_flags(struct _GDtlsClientConnection* conn, enum GTlsCertificateFlags flags);
     * }
     */
    public static void g_dtls_client_connection_set_validation_flags(MemorySegment conn, int flags) {
        var mh$ = g_dtls_client_connection_set_validation_flags$MH();
        try {
            mh$.invokeExact(conn, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_client_connection_get_server_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$965.const$2,"g_dtls_client_connection_get_server_identity");
    }
    /**
     * {@snippet :
     * struct _GSocketConnectable* g_dtls_client_connection_get_server_identity(struct _GDtlsClientConnection* conn);
     * }
     */
    public static MemorySegment g_dtls_client_connection_get_server_identity(MemorySegment conn) {
        var mh$ = g_dtls_client_connection_get_server_identity$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_client_connection_set_server_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$965.const$3,"g_dtls_client_connection_set_server_identity");
    }
    /**
     * {@snippet :
     * void g_dtls_client_connection_set_server_identity(struct _GDtlsClientConnection* conn, struct _GSocketConnectable* identity);
     * }
     */
    public static void g_dtls_client_connection_set_server_identity(MemorySegment conn, MemorySegment identity) {
        var mh$ = g_dtls_client_connection_set_server_identity$MH();
        try {
            mh$.invokeExact(conn, identity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_client_connection_get_accepted_cas$MH() {
        return RuntimeHelper.requireNonNull(constants$965.const$4,"g_dtls_client_connection_get_accepted_cas");
    }
    /**
     * {@snippet :
     * struct _GList* g_dtls_client_connection_get_accepted_cas(struct _GDtlsClientConnection* conn);
     * }
     */
    public static MemorySegment g_dtls_client_connection_get_accepted_cas(MemorySegment conn) {
        var mh$ = g_dtls_client_connection_get_accepted_cas$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_server_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$966.const$0,"g_dtls_server_connection_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dtls_server_connection_get_type();
     * }
     */
    public static long g_dtls_server_connection_get_type() {
        var mh$ = g_dtls_server_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dtls_server_connection_new$MH() {
        return RuntimeHelper.requireNonNull(constants$966.const$1,"g_dtls_server_connection_new");
    }
    /**
     * {@snippet :
     * struct _GDatagramBased* g_dtls_server_connection_new(struct _GDatagramBased* base_socket, struct _GTlsCertificate* certificate, struct _GError** error);
     * }
     */
    public static MemorySegment g_dtls_server_connection_new(MemorySegment base_socket, MemorySegment certificate, MemorySegment error) {
        var mh$ = g_dtls_server_connection_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(base_socket, certificate, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_icon_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$968.const$2,"g_icon_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_icon_get_type();
     * }
     */
    public static long g_icon_get_type() {
        var mh$ = g_icon_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_icon_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$968.const$3,"g_icon_hash");
    }
    /**
     * {@snippet :
     * unsigned int g_icon_hash(void* icon);
     * }
     */
    public static int g_icon_hash(MemorySegment icon) {
        var mh$ = g_icon_hash$MH();
        try {
            return (int)mh$.invokeExact(icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_icon_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$968.const$4,"g_icon_equal");
    }
    /**
     * {@snippet :
     * int g_icon_equal(struct _GIcon* icon1, struct _GIcon* icon2);
     * }
     */
    public static int g_icon_equal(MemorySegment icon1, MemorySegment icon2) {
        var mh$ = g_icon_equal$MH();
        try {
            return (int)mh$.invokeExact(icon1, icon2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_icon_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$968.const$5,"g_icon_to_string");
    }
    /**
     * {@snippet :
     * char* g_icon_to_string(struct _GIcon* icon);
     * }
     */
    public static MemorySegment g_icon_to_string(MemorySegment icon) {
        var mh$ = g_icon_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_icon_new_for_string$MH() {
        return RuntimeHelper.requireNonNull(constants$969.const$0,"g_icon_new_for_string");
    }
    /**
     * {@snippet :
     * struct _GIcon* g_icon_new_for_string(char* str, struct _GError** error);
     * }
     */
    public static MemorySegment g_icon_new_for_string(MemorySegment str, MemorySegment error) {
        var mh$ = g_icon_new_for_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_icon_serialize$MH() {
        return RuntimeHelper.requireNonNull(constants$969.const$1,"g_icon_serialize");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_icon_serialize(struct _GIcon* icon);
     * }
     */
    public static MemorySegment g_icon_serialize(MemorySegment icon) {
        var mh$ = g_icon_serialize$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_icon_deserialize$MH() {
        return RuntimeHelper.requireNonNull(constants$969.const$2,"g_icon_deserialize");
    }
    /**
     * {@snippet :
     * struct _GIcon* g_icon_deserialize(struct _GVariant* value);
     * }
     */
    public static MemorySegment g_icon_deserialize(MemorySegment value) {
        var mh$ = g_icon_deserialize$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_emblem_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$969.const$3,"g_emblem_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_emblem_get_type();
     * }
     */
    public static long g_emblem_get_type() {
        var mh$ = g_emblem_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_emblem_new$MH() {
        return RuntimeHelper.requireNonNull(constants$969.const$4,"g_emblem_new");
    }
    /**
     * {@snippet :
     * struct _GEmblem* g_emblem_new(struct _GIcon* icon);
     * }
     */
    public static MemorySegment g_emblem_new(MemorySegment icon) {
        var mh$ = g_emblem_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_emblem_new_with_origin$MH() {
        return RuntimeHelper.requireNonNull(constants$969.const$5,"g_emblem_new_with_origin");
    }
    /**
     * {@snippet :
     * struct _GEmblem* g_emblem_new_with_origin(struct _GIcon* icon, enum GEmblemOrigin origin);
     * }
     */
    public static MemorySegment g_emblem_new_with_origin(MemorySegment icon, int origin) {
        var mh$ = g_emblem_new_with_origin$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon, origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_emblem_get_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$970.const$0,"g_emblem_get_icon");
    }
    /**
     * {@snippet :
     * struct _GIcon* g_emblem_get_icon(struct _GEmblem* emblem);
     * }
     */
    public static MemorySegment g_emblem_get_icon(MemorySegment emblem) {
        var mh$ = g_emblem_get_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(emblem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_emblem_get_origin$MH() {
        return RuntimeHelper.requireNonNull(constants$970.const$1,"g_emblem_get_origin");
    }
    /**
     * {@snippet :
     * enum GEmblemOrigin g_emblem_get_origin(struct _GEmblem* emblem);
     * }
     */
    public static int g_emblem_get_origin(MemorySegment emblem) {
        var mh$ = g_emblem_get_origin$MH();
        try {
            return (int)mh$.invokeExact(emblem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_emblemed_icon_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$970.const$5,"g_emblemed_icon_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_emblemed_icon_get_type();
     * }
     */
    public static long g_emblemed_icon_get_type() {
        var mh$ = g_emblemed_icon_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_emblemed_icon_new$MH() {
        return RuntimeHelper.requireNonNull(constants$971.const$0,"g_emblemed_icon_new");
    }
    /**
     * {@snippet :
     * struct _GIcon* g_emblemed_icon_new(struct _GIcon* icon, struct _GEmblem* emblem);
     * }
     */
    public static MemorySegment g_emblemed_icon_new(MemorySegment icon, MemorySegment emblem) {
        var mh$ = g_emblemed_icon_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon, emblem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_emblemed_icon_get_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$971.const$1,"g_emblemed_icon_get_icon");
    }
    /**
     * {@snippet :
     * struct _GIcon* g_emblemed_icon_get_icon(struct _GEmblemedIcon* emblemed);
     * }
     */
    public static MemorySegment g_emblemed_icon_get_icon(MemorySegment emblemed) {
        var mh$ = g_emblemed_icon_get_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(emblemed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_emblemed_icon_get_emblems$MH() {
        return RuntimeHelper.requireNonNull(constants$971.const$2,"g_emblemed_icon_get_emblems");
    }
    /**
     * {@snippet :
     * struct _GList* g_emblemed_icon_get_emblems(struct _GEmblemedIcon* emblemed);
     * }
     */
    public static MemorySegment g_emblemed_icon_get_emblems(MemorySegment emblemed) {
        var mh$ = g_emblemed_icon_get_emblems$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(emblemed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_emblemed_icon_add_emblem$MH() {
        return RuntimeHelper.requireNonNull(constants$971.const$3,"g_emblemed_icon_add_emblem");
    }
    /**
     * {@snippet :
     * void g_emblemed_icon_add_emblem(struct _GEmblemedIcon* emblemed, struct _GEmblem* emblem);
     * }
     */
    public static void g_emblemed_icon_add_emblem(MemorySegment emblemed, MemorySegment emblem) {
        var mh$ = g_emblemed_icon_add_emblem$MH();
        try {
            mh$.invokeExact(emblemed, emblem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_emblemed_icon_clear_emblems$MH() {
        return RuntimeHelper.requireNonNull(constants$971.const$4,"g_emblemed_icon_clear_emblems");
    }
    /**
     * {@snippet :
     * void g_emblemed_icon_clear_emblems(struct _GEmblemedIcon* emblemed);
     * }
     */
    public static void g_emblemed_icon_clear_emblems(MemorySegment emblemed) {
        var mh$ = g_emblemed_icon_clear_emblems$MH();
        try {
            mh$.invokeExact(emblemed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.const$3,"g_file_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_get_type();
     * }
     */
    public static long g_file_get_type() {
        var mh$ = g_file_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_new_for_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.const$4,"g_file_new_for_path");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_new_for_path(char* path);
     * }
     */
    public static MemorySegment g_file_new_for_path(MemorySegment path) {
        var mh$ = g_file_new_for_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_new_for_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.const$5,"g_file_new_for_uri");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_new_for_uri(char* uri);
     * }
     */
    public static MemorySegment g_file_new_for_uri(MemorySegment uri) {
        var mh$ = g_file_new_for_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_new_for_commandline_arg$MH() {
        return RuntimeHelper.requireNonNull(constants$1010.const$0,"g_file_new_for_commandline_arg");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_new_for_commandline_arg(char* arg);
     * }
     */
    public static MemorySegment g_file_new_for_commandline_arg(MemorySegment arg) {
        var mh$ = g_file_new_for_commandline_arg$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_new_for_commandline_arg_and_cwd$MH() {
        return RuntimeHelper.requireNonNull(constants$1010.const$1,"g_file_new_for_commandline_arg_and_cwd");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_new_for_commandline_arg_and_cwd(char* arg, char* cwd);
     * }
     */
    public static MemorySegment g_file_new_for_commandline_arg_and_cwd(MemorySegment arg, MemorySegment cwd) {
        var mh$ = g_file_new_for_commandline_arg_and_cwd$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(arg, cwd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_new_tmp$MH() {
        return RuntimeHelper.requireNonNull(constants$1010.const$2,"g_file_new_tmp");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_new_tmp(char* tmpl, struct _GFileIOStream** iostream, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_new_tmp(MemorySegment tmpl, MemorySegment iostream, MemorySegment error) {
        var mh$ = g_file_new_tmp$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tmpl, iostream, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_new_tmp_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1010.const$4,"g_file_new_tmp_async");
    }
    /**
     * {@snippet :
     * void g_file_new_tmp_async(char* tmpl, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_new_tmp_async(MemorySegment tmpl, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_new_tmp_async$MH();
        try {
            mh$.invokeExact(tmpl, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_new_tmp_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1010.const$5,"g_file_new_tmp_finish");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_new_tmp_finish(struct _GAsyncResult* result, struct _GFileIOStream** iostream, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_new_tmp_finish(MemorySegment result, MemorySegment iostream, MemorySegment error) {
        var mh$ = g_file_new_tmp_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(result, iostream, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_new_tmp_dir_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1011.const$1,"g_file_new_tmp_dir_async");
    }
    /**
     * {@snippet :
     * void g_file_new_tmp_dir_async(char* tmpl, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_new_tmp_dir_async(MemorySegment tmpl, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_new_tmp_dir_async$MH();
        try {
            mh$.invokeExact(tmpl, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_new_tmp_dir_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1011.const$2,"g_file_new_tmp_dir_finish");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_new_tmp_dir_finish(struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_new_tmp_dir_finish(MemorySegment result, MemorySegment error) {
        var mh$ = g_file_new_tmp_dir_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_parse_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1011.const$3,"g_file_parse_name");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_parse_name(char* parse_name);
     * }
     */
    public static MemorySegment g_file_parse_name(MemorySegment parse_name) {
        var mh$ = g_file_parse_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parse_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_new_build_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$1011.const$4,"g_file_new_build_filename");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_new_build_filename(char* first_element,...);
     * }
     */
    public static MemorySegment g_file_new_build_filename(MemorySegment first_element, Object... x1) {
        var mh$ = g_file_new_build_filename$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(first_element, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$1011.const$5,"g_file_dup");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_dup(struct _GFile* file);
     * }
     */
    public static MemorySegment g_file_dup(MemorySegment file) {
        var mh$ = g_file_dup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$1012.const$0,"g_file_hash");
    }
    /**
     * {@snippet :
     * unsigned int g_file_hash(void* file);
     * }
     */
    public static int g_file_hash(MemorySegment file) {
        var mh$ = g_file_hash$MH();
        try {
            return (int)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1012.const$1,"g_file_equal");
    }
    /**
     * {@snippet :
     * int g_file_equal(struct _GFile* file1, struct _GFile* file2);
     * }
     */
    public static int g_file_equal(MemorySegment file1, MemorySegment file2) {
        var mh$ = g_file_equal$MH();
        try {
            return (int)mh$.invokeExact(file1, file2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_get_basename$MH() {
        return RuntimeHelper.requireNonNull(constants$1012.const$2,"g_file_get_basename");
    }
    /**
     * {@snippet :
     * char* g_file_get_basename(struct _GFile* file);
     * }
     */
    public static MemorySegment g_file_get_basename(MemorySegment file) {
        var mh$ = g_file_get_basename$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_get_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1012.const$3,"g_file_get_path");
    }
    /**
     * {@snippet :
     * char* g_file_get_path(struct _GFile* file);
     * }
     */
    public static MemorySegment g_file_get_path(MemorySegment file) {
        var mh$ = g_file_get_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_peek_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1012.const$4,"g_file_peek_path");
    }
    /**
     * {@snippet :
     * char* g_file_peek_path(struct _GFile* file);
     * }
     */
    public static MemorySegment g_file_peek_path(MemorySegment file) {
        var mh$ = g_file_peek_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_get_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1012.const$5,"g_file_get_uri");
    }
    /**
     * {@snippet :
     * char* g_file_get_uri(struct _GFile* file);
     * }
     */
    public static MemorySegment g_file_get_uri(MemorySegment file) {
        var mh$ = g_file_get_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_get_parse_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1013.const$0,"g_file_get_parse_name");
    }
    /**
     * {@snippet :
     * char* g_file_get_parse_name(struct _GFile* file);
     * }
     */
    public static MemorySegment g_file_get_parse_name(MemorySegment file) {
        var mh$ = g_file_get_parse_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_get_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1013.const$1,"g_file_get_parent");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_get_parent(struct _GFile* file);
     * }
     */
    public static MemorySegment g_file_get_parent(MemorySegment file) {
        var mh$ = g_file_get_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_has_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1013.const$2,"g_file_has_parent");
    }
    /**
     * {@snippet :
     * int g_file_has_parent(struct _GFile* file, struct _GFile* parent);
     * }
     */
    public static int g_file_has_parent(MemorySegment file, MemorySegment parent) {
        var mh$ = g_file_has_parent$MH();
        try {
            return (int)mh$.invokeExact(file, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1013.const$3,"g_file_get_child");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_get_child(struct _GFile* file, char* name);
     * }
     */
    public static MemorySegment g_file_get_child(MemorySegment file, MemorySegment name) {
        var mh$ = g_file_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_get_child_for_display_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1013.const$4,"g_file_get_child_for_display_name");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_get_child_for_display_name(struct _GFile* file, char* display_name, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_get_child_for_display_name(MemorySegment file, MemorySegment display_name, MemorySegment error) {
        var mh$ = g_file_get_child_for_display_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, display_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_has_prefix$MH() {
        return RuntimeHelper.requireNonNull(constants$1013.const$5,"g_file_has_prefix");
    }
    /**
     * {@snippet :
     * int g_file_has_prefix(struct _GFile* file, struct _GFile* prefix);
     * }
     */
    public static int g_file_has_prefix(MemorySegment file, MemorySegment prefix) {
        var mh$ = g_file_has_prefix$MH();
        try {
            return (int)mh$.invokeExact(file, prefix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_get_relative_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1014.const$0,"g_file_get_relative_path");
    }
    /**
     * {@snippet :
     * char* g_file_get_relative_path(struct _GFile* parent, struct _GFile* descendant);
     * }
     */
    public static MemorySegment g_file_get_relative_path(MemorySegment parent, MemorySegment descendant) {
        var mh$ = g_file_get_relative_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parent, descendant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_resolve_relative_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1014.const$1,"g_file_resolve_relative_path");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_resolve_relative_path(struct _GFile* file, char* relative_path);
     * }
     */
    public static MemorySegment g_file_resolve_relative_path(MemorySegment file, MemorySegment relative_path) {
        var mh$ = g_file_resolve_relative_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, relative_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_is_native$MH() {
        return RuntimeHelper.requireNonNull(constants$1014.const$2,"g_file_is_native");
    }
    /**
     * {@snippet :
     * int g_file_is_native(struct _GFile* file);
     * }
     */
    public static int g_file_is_native(MemorySegment file) {
        var mh$ = g_file_is_native$MH();
        try {
            return (int)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_has_uri_scheme$MH() {
        return RuntimeHelper.requireNonNull(constants$1014.const$3,"g_file_has_uri_scheme");
    }
    /**
     * {@snippet :
     * int g_file_has_uri_scheme(struct _GFile* file, char* uri_scheme);
     * }
     */
    public static int g_file_has_uri_scheme(MemorySegment file, MemorySegment uri_scheme) {
        var mh$ = g_file_has_uri_scheme$MH();
        try {
            return (int)mh$.invokeExact(file, uri_scheme);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_get_uri_scheme$MH() {
        return RuntimeHelper.requireNonNull(constants$1014.const$4,"g_file_get_uri_scheme");
    }
    /**
     * {@snippet :
     * char* g_file_get_uri_scheme(struct _GFile* file);
     * }
     */
    public static MemorySegment g_file_get_uri_scheme(MemorySegment file) {
        var mh$ = g_file_get_uri_scheme$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_read$MH() {
        return RuntimeHelper.requireNonNull(constants$1014.const$5,"g_file_read");
    }
    /**
     * {@snippet :
     * struct _GFileInputStream* g_file_read(struct _GFile* file, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_read(MemorySegment file, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_read$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_read_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1015.const$1,"g_file_read_async");
    }
    /**
     * {@snippet :
     * void g_file_read_async(struct _GFile* file, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_read_async(MemorySegment file, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_read_async$MH();
        try {
            mh$.invokeExact(file, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_read_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1015.const$2,"g_file_read_finish");
    }
    /**
     * {@snippet :
     * struct _GFileInputStream* g_file_read_finish(struct _GFile* file, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_read_finish(MemorySegment file, MemorySegment res, MemorySegment error) {
        var mh$ = g_file_read_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_append_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1015.const$3,"g_file_append_to");
    }
    /**
     * {@snippet :
     * struct _GFileOutputStream* g_file_append_to(struct _GFile* file, enum GFileCreateFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_append_to(MemorySegment file, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_append_to$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1015.const$4,"g_file_create");
    }
    /**
     * {@snippet :
     * struct _GFileOutputStream* g_file_create(struct _GFile* file, enum GFileCreateFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_create(MemorySegment file, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_replace$MH() {
        return RuntimeHelper.requireNonNull(constants$1015.const$5,"g_file_replace");
    }
    /**
     * {@snippet :
     * struct _GFileOutputStream* g_file_replace(struct _GFile* file, char* etag, int make_backup, enum GFileCreateFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_replace(MemorySegment file, MemorySegment etag, int make_backup, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_replace$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, etag, make_backup, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_append_to_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1016.const$1,"g_file_append_to_async");
    }
    /**
     * {@snippet :
     * void g_file_append_to_async(struct _GFile* file, enum GFileCreateFlags flags, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_append_to_async(MemorySegment file, int flags, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_append_to_async$MH();
        try {
            mh$.invokeExact(file, flags, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_append_to_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1016.const$2,"g_file_append_to_finish");
    }
    /**
     * {@snippet :
     * struct _GFileOutputStream* g_file_append_to_finish(struct _GFile* file, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_append_to_finish(MemorySegment file, MemorySegment res, MemorySegment error) {
        var mh$ = g_file_append_to_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_create_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1016.const$4,"g_file_create_async");
    }
    /**
     * {@snippet :
     * void g_file_create_async(struct _GFile* file, enum GFileCreateFlags flags, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_create_async(MemorySegment file, int flags, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_create_async$MH();
        try {
            mh$.invokeExact(file, flags, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_create_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1016.const$5,"g_file_create_finish");
    }
    /**
     * {@snippet :
     * struct _GFileOutputStream* g_file_create_finish(struct _GFile* file, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_create_finish(MemorySegment file, MemorySegment res, MemorySegment error) {
        var mh$ = g_file_create_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_replace_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1017.const$1,"g_file_replace_async");
    }
    /**
     * {@snippet :
     * void g_file_replace_async(struct _GFile* file, char* etag, int make_backup, enum GFileCreateFlags flags, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_replace_async(MemorySegment file, MemorySegment etag, int make_backup, int flags, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_replace_async$MH();
        try {
            mh$.invokeExact(file, etag, make_backup, flags, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_replace_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1017.const$2,"g_file_replace_finish");
    }
    /**
     * {@snippet :
     * struct _GFileOutputStream* g_file_replace_finish(struct _GFile* file, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_replace_finish(MemorySegment file, MemorySegment res, MemorySegment error) {
        var mh$ = g_file_replace_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_open_readwrite$MH() {
        return RuntimeHelper.requireNonNull(constants$1017.const$3,"g_file_open_readwrite");
    }
    /**
     * {@snippet :
     * struct _GFileIOStream* g_file_open_readwrite(struct _GFile* file, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_open_readwrite(MemorySegment file, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_open_readwrite$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_open_readwrite_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1017.const$5,"g_file_open_readwrite_async");
    }
    /**
     * {@snippet :
     * void g_file_open_readwrite_async(struct _GFile* file, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_open_readwrite_async(MemorySegment file, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_open_readwrite_async$MH();
        try {
            mh$.invokeExact(file, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_open_readwrite_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1018.const$0,"g_file_open_readwrite_finish");
    }
    /**
     * {@snippet :
     * struct _GFileIOStream* g_file_open_readwrite_finish(struct _GFile* file, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_open_readwrite_finish(MemorySegment file, MemorySegment res, MemorySegment error) {
        var mh$ = g_file_open_readwrite_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_create_readwrite$MH() {
        return RuntimeHelper.requireNonNull(constants$1018.const$1,"g_file_create_readwrite");
    }
    /**
     * {@snippet :
     * struct _GFileIOStream* g_file_create_readwrite(struct _GFile* file, enum GFileCreateFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_create_readwrite(MemorySegment file, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_create_readwrite$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_create_readwrite_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1018.const$3,"g_file_create_readwrite_async");
    }
    /**
     * {@snippet :
     * void g_file_create_readwrite_async(struct _GFile* file, enum GFileCreateFlags flags, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_create_readwrite_async(MemorySegment file, int flags, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_create_readwrite_async$MH();
        try {
            mh$.invokeExact(file, flags, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_create_readwrite_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1018.const$4,"g_file_create_readwrite_finish");
    }
    /**
     * {@snippet :
     * struct _GFileIOStream* g_file_create_readwrite_finish(struct _GFile* file, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_create_readwrite_finish(MemorySegment file, MemorySegment res, MemorySegment error) {
        var mh$ = g_file_create_readwrite_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_replace_readwrite$MH() {
        return RuntimeHelper.requireNonNull(constants$1018.const$5,"g_file_replace_readwrite");
    }
    /**
     * {@snippet :
     * struct _GFileIOStream* g_file_replace_readwrite(struct _GFile* file, char* etag, int make_backup, enum GFileCreateFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_replace_readwrite(MemorySegment file, MemorySegment etag, int make_backup, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_replace_readwrite$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, etag, make_backup, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_replace_readwrite_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1019.const$1,"g_file_replace_readwrite_async");
    }
    /**
     * {@snippet :
     * void g_file_replace_readwrite_async(struct _GFile* file, char* etag, int make_backup, enum GFileCreateFlags flags, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_replace_readwrite_async(MemorySegment file, MemorySegment etag, int make_backup, int flags, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_replace_readwrite_async$MH();
        try {
            mh$.invokeExact(file, etag, make_backup, flags, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_replace_readwrite_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1019.const$2,"g_file_replace_readwrite_finish");
    }
    /**
     * {@snippet :
     * struct _GFileIOStream* g_file_replace_readwrite_finish(struct _GFile* file, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_replace_readwrite_finish(MemorySegment file, MemorySegment res, MemorySegment error) {
        var mh$ = g_file_replace_readwrite_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_query_exists$MH() {
        return RuntimeHelper.requireNonNull(constants$1019.const$3,"g_file_query_exists");
    }
    /**
     * {@snippet :
     * int g_file_query_exists(struct _GFile* file, struct _GCancellable* cancellable);
     * }
     */
    public static int g_file_query_exists(MemorySegment file, MemorySegment cancellable) {
        var mh$ = g_file_query_exists$MH();
        try {
            return (int)mh$.invokeExact(file, cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_query_file_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1019.const$4,"g_file_query_file_type");
    }
    /**
     * {@snippet :
     * enum GFileType g_file_query_file_type(struct _GFile* file, enum GFileQueryInfoFlags flags, struct _GCancellable* cancellable);
     * }
     */
    public static int g_file_query_file_type(MemorySegment file, int flags, MemorySegment cancellable) {
        var mh$ = g_file_query_file_type$MH();
        try {
            return (int)mh$.invokeExact(file, flags, cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_query_info$MH() {
        return RuntimeHelper.requireNonNull(constants$1019.const$5,"g_file_query_info");
    }
    /**
     * {@snippet :
     * struct _GFileInfo* g_file_query_info(struct _GFile* file, char* attributes, enum GFileQueryInfoFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_query_info(MemorySegment file, MemorySegment attributes, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_query_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, attributes, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_query_info_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1020.const$1,"g_file_query_info_async");
    }
    /**
     * {@snippet :
     * void g_file_query_info_async(struct _GFile* file, char* attributes, enum GFileQueryInfoFlags flags, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_query_info_async(MemorySegment file, MemorySegment attributes, int flags, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_query_info_async$MH();
        try {
            mh$.invokeExact(file, attributes, flags, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_query_info_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1020.const$2,"g_file_query_info_finish");
    }
    /**
     * {@snippet :
     * struct _GFileInfo* g_file_query_info_finish(struct _GFile* file, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_query_info_finish(MemorySegment file, MemorySegment res, MemorySegment error) {
        var mh$ = g_file_query_info_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_query_filesystem_info$MH() {
        return RuntimeHelper.requireNonNull(constants$1020.const$3,"g_file_query_filesystem_info");
    }
    /**
     * {@snippet :
     * struct _GFileInfo* g_file_query_filesystem_info(struct _GFile* file, char* attributes, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_query_filesystem_info(MemorySegment file, MemorySegment attributes, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_query_filesystem_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, attributes, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_query_filesystem_info_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1020.const$5,"g_file_query_filesystem_info_async");
    }
    /**
     * {@snippet :
     * void g_file_query_filesystem_info_async(struct _GFile* file, char* attributes, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_query_filesystem_info_async(MemorySegment file, MemorySegment attributes, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_query_filesystem_info_async$MH();
        try {
            mh$.invokeExact(file, attributes, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_query_filesystem_info_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1021.const$0,"g_file_query_filesystem_info_finish");
    }
    /**
     * {@snippet :
     * struct _GFileInfo* g_file_query_filesystem_info_finish(struct _GFile* file, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_query_filesystem_info_finish(MemorySegment file, MemorySegment res, MemorySegment error) {
        var mh$ = g_file_query_filesystem_info_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_find_enclosing_mount$MH() {
        return RuntimeHelper.requireNonNull(constants$1021.const$1,"g_file_find_enclosing_mount");
    }
    /**
     * {@snippet :
     * struct _GMount* g_file_find_enclosing_mount(struct _GFile* file, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_find_enclosing_mount(MemorySegment file, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_find_enclosing_mount$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_find_enclosing_mount_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1021.const$3,"g_file_find_enclosing_mount_async");
    }
    /**
     * {@snippet :
     * void g_file_find_enclosing_mount_async(struct _GFile* file, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_find_enclosing_mount_async(MemorySegment file, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_find_enclosing_mount_async$MH();
        try {
            mh$.invokeExact(file, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_find_enclosing_mount_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1021.const$4,"g_file_find_enclosing_mount_finish");
    }
    /**
     * {@snippet :
     * struct _GMount* g_file_find_enclosing_mount_finish(struct _GFile* file, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_find_enclosing_mount_finish(MemorySegment file, MemorySegment res, MemorySegment error) {
        var mh$ = g_file_find_enclosing_mount_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_enumerate_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1021.const$5,"g_file_enumerate_children");
    }
    /**
     * {@snippet :
     * struct _GFileEnumerator* g_file_enumerate_children(struct _GFile* file, char* attributes, enum GFileQueryInfoFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_enumerate_children(MemorySegment file, MemorySegment attributes, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_enumerate_children$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, attributes, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_enumerate_children_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1022.const$1,"g_file_enumerate_children_async");
    }
    /**
     * {@snippet :
     * void g_file_enumerate_children_async(struct _GFile* file, char* attributes, enum GFileQueryInfoFlags flags, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_enumerate_children_async(MemorySegment file, MemorySegment attributes, int flags, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_enumerate_children_async$MH();
        try {
            mh$.invokeExact(file, attributes, flags, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_enumerate_children_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1022.const$2,"g_file_enumerate_children_finish");
    }
    /**
     * {@snippet :
     * struct _GFileEnumerator* g_file_enumerate_children_finish(struct _GFile* file, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_enumerate_children_finish(MemorySegment file, MemorySegment res, MemorySegment error) {
        var mh$ = g_file_enumerate_children_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_set_display_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1022.const$3,"g_file_set_display_name");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_set_display_name(struct _GFile* file, char* display_name, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_set_display_name(MemorySegment file, MemorySegment display_name, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_set_display_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, display_name, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_set_display_name_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1022.const$5,"g_file_set_display_name_async");
    }
    /**
     * {@snippet :
     * void g_file_set_display_name_async(struct _GFile* file, char* display_name, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_set_display_name_async(MemorySegment file, MemorySegment display_name, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_set_display_name_async$MH();
        try {
            mh$.invokeExact(file, display_name, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_set_display_name_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1023.const$0,"g_file_set_display_name_finish");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_set_display_name_finish(struct _GFile* file, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_set_display_name_finish(MemorySegment file, MemorySegment res, MemorySegment error) {
        var mh$ = g_file_set_display_name_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$1023.const$1,"g_file_delete");
    }
    /**
     * {@snippet :
     * int g_file_delete(struct _GFile* file, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_file_delete(MemorySegment file, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_delete$MH();
        try {
            return (int)mh$.invokeExact(file, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_delete_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1023.const$3,"g_file_delete_async");
    }
    /**
     * {@snippet :
     * void g_file_delete_async(struct _GFile* file, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_delete_async(MemorySegment file, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_delete_async$MH();
        try {
            mh$.invokeExact(file, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_delete_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1023.const$4,"g_file_delete_finish");
    }
    /**
     * {@snippet :
     * int g_file_delete_finish(struct _GFile* file, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_file_delete_finish(MemorySegment file, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_delete_finish$MH();
        try {
            return (int)mh$.invokeExact(file, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_trash$MH() {
        return RuntimeHelper.requireNonNull(constants$1023.const$5,"g_file_trash");
    }
    /**
     * {@snippet :
     * int g_file_trash(struct _GFile* file, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_file_trash(MemorySegment file, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_trash$MH();
        try {
            return (int)mh$.invokeExact(file, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_trash_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1024.const$1,"g_file_trash_async");
    }
    /**
     * {@snippet :
     * void g_file_trash_async(struct _GFile* file, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_trash_async(MemorySegment file, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_trash_async$MH();
        try {
            mh$.invokeExact(file, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_trash_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1024.const$2,"g_file_trash_finish");
    }
    /**
     * {@snippet :
     * int g_file_trash_finish(struct _GFile* file, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_file_trash_finish(MemorySegment file, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_trash_finish$MH();
        try {
            return (int)mh$.invokeExact(file, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1024.const$4,"g_file_copy");
    }
    /**
     * {@snippet :
     * int g_file_copy(struct _GFile* source, struct _GFile* destination, enum GFileCopyFlags flags, struct _GCancellable* cancellable, void (*progress_callback)(long,long,void*), void* progress_callback_data, struct _GError** error);
     * }
     */
    public static int g_file_copy(MemorySegment source, MemorySegment destination, int flags, MemorySegment cancellable, MemorySegment progress_callback, MemorySegment progress_callback_data, MemorySegment error) {
        var mh$ = g_file_copy$MH();
        try {
            return (int)mh$.invokeExact(source, destination, flags, cancellable, progress_callback, progress_callback_data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_copy_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1025.const$1,"g_file_copy_async");
    }
    /**
     * {@snippet :
     * void g_file_copy_async(struct _GFile* source, struct _GFile* destination, enum GFileCopyFlags flags, int io_priority, struct _GCancellable* cancellable, void (*progress_callback)(long,long,void*), void* progress_callback_data, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_copy_async(MemorySegment source, MemorySegment destination, int flags, int io_priority, MemorySegment cancellable, MemorySegment progress_callback, MemorySegment progress_callback_data, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_copy_async$MH();
        try {
            mh$.invokeExact(source, destination, flags, io_priority, cancellable, progress_callback, progress_callback_data, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_copy_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1025.const$2,"g_file_copy_finish");
    }
    /**
     * {@snippet :
     * int g_file_copy_finish(struct _GFile* file, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static int g_file_copy_finish(MemorySegment file, MemorySegment res, MemorySegment error) {
        var mh$ = g_file_copy_finish$MH();
        try {
            return (int)mh$.invokeExact(file, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_move$MH() {
        return RuntimeHelper.requireNonNull(constants$1025.const$4,"g_file_move");
    }
    /**
     * {@snippet :
     * int g_file_move(struct _GFile* source, struct _GFile* destination, enum GFileCopyFlags flags, struct _GCancellable* cancellable, void (*progress_callback)(long,long,void*), void* progress_callback_data, struct _GError** error);
     * }
     */
    public static int g_file_move(MemorySegment source, MemorySegment destination, int flags, MemorySegment cancellable, MemorySegment progress_callback, MemorySegment progress_callback_data, MemorySegment error) {
        var mh$ = g_file_move$MH();
        try {
            return (int)mh$.invokeExact(source, destination, flags, cancellable, progress_callback, progress_callback_data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_move_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1026.const$1,"g_file_move_async");
    }
    /**
     * {@snippet :
     * void g_file_move_async(struct _GFile* source, struct _GFile* destination, enum GFileCopyFlags flags, int io_priority, struct _GCancellable* cancellable, void (*progress_callback)(long,long,void*), void* progress_callback_data, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_move_async(MemorySegment source, MemorySegment destination, int flags, int io_priority, MemorySegment cancellable, MemorySegment progress_callback, MemorySegment progress_callback_data, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_move_async$MH();
        try {
            mh$.invokeExact(source, destination, flags, io_priority, cancellable, progress_callback, progress_callback_data, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_move_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1026.const$2,"g_file_move_finish");
    }
    /**
     * {@snippet :
     * int g_file_move_finish(struct _GFile* file, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_file_move_finish(MemorySegment file, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_move_finish$MH();
        try {
            return (int)mh$.invokeExact(file, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_make_directory$MH() {
        return RuntimeHelper.requireNonNull(constants$1026.const$3,"g_file_make_directory");
    }
    /**
     * {@snippet :
     * int g_file_make_directory(struct _GFile* file, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_file_make_directory(MemorySegment file, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_make_directory$MH();
        try {
            return (int)mh$.invokeExact(file, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_make_directory_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1026.const$5,"g_file_make_directory_async");
    }
    /**
     * {@snippet :
     * void g_file_make_directory_async(struct _GFile* file, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_make_directory_async(MemorySegment file, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_make_directory_async$MH();
        try {
            mh$.invokeExact(file, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_make_directory_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1027.const$0,"g_file_make_directory_finish");
    }
    /**
     * {@snippet :
     * int g_file_make_directory_finish(struct _GFile* file, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_file_make_directory_finish(MemorySegment file, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_make_directory_finish$MH();
        try {
            return (int)mh$.invokeExact(file, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_make_directory_with_parents$MH() {
        return RuntimeHelper.requireNonNull(constants$1027.const$1,"g_file_make_directory_with_parents");
    }
    /**
     * {@snippet :
     * int g_file_make_directory_with_parents(struct _GFile* file, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_file_make_directory_with_parents(MemorySegment file, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_make_directory_with_parents$MH();
        try {
            return (int)mh$.invokeExact(file, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_make_symbolic_link$MH() {
        return RuntimeHelper.requireNonNull(constants$1027.const$2,"g_file_make_symbolic_link");
    }
    /**
     * {@snippet :
     * int g_file_make_symbolic_link(struct _GFile* file, char* symlink_value, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_file_make_symbolic_link(MemorySegment file, MemorySegment symlink_value, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_make_symbolic_link$MH();
        try {
            return (int)mh$.invokeExact(file, symlink_value, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_make_symbolic_link_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1027.const$4,"g_file_make_symbolic_link_async");
    }
    /**
     * {@snippet :
     * void g_file_make_symbolic_link_async(struct _GFile* file, char* symlink_value, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_make_symbolic_link_async(MemorySegment file, MemorySegment symlink_value, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_make_symbolic_link_async$MH();
        try {
            mh$.invokeExact(file, symlink_value, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_make_symbolic_link_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1027.const$5,"g_file_make_symbolic_link_finish");
    }
    /**
     * {@snippet :
     * int g_file_make_symbolic_link_finish(struct _GFile* file, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_file_make_symbolic_link_finish(MemorySegment file, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_make_symbolic_link_finish$MH();
        try {
            return (int)mh$.invokeExact(file, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_query_settable_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1028.const$0,"g_file_query_settable_attributes");
    }
    /**
     * {@snippet :
     * struct _GFileAttributeInfoList* g_file_query_settable_attributes(struct _GFile* file, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_query_settable_attributes(MemorySegment file, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_query_settable_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_query_writable_namespaces$MH() {
        return RuntimeHelper.requireNonNull(constants$1028.const$1,"g_file_query_writable_namespaces");
    }
    /**
     * {@snippet :
     * struct _GFileAttributeInfoList* g_file_query_writable_namespaces(struct _GFile* file, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_query_writable_namespaces(MemorySegment file, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_query_writable_namespaces$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_set_attribute$MH() {
        return RuntimeHelper.requireNonNull(constants$1028.const$2,"g_file_set_attribute");
    }
    /**
     * {@snippet :
     * int g_file_set_attribute(struct _GFile* file, char* attribute, enum GFileAttributeType type, void* value_p, enum GFileQueryInfoFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_file_set_attribute(MemorySegment file, MemorySegment attribute, int type, MemorySegment value_p, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_set_attribute$MH();
        try {
            return (int)mh$.invokeExact(file, attribute, type, value_p, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_set_attributes_from_info$MH() {
        return RuntimeHelper.requireNonNull(constants$1028.const$3,"g_file_set_attributes_from_info");
    }
    /**
     * {@snippet :
     * int g_file_set_attributes_from_info(struct _GFile* file, struct _GFileInfo* info, enum GFileQueryInfoFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_file_set_attributes_from_info(MemorySegment file, MemorySegment info, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_set_attributes_from_info$MH();
        try {
            return (int)mh$.invokeExact(file, info, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_set_attributes_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1028.const$5,"g_file_set_attributes_async");
    }
    /**
     * {@snippet :
     * void g_file_set_attributes_async(struct _GFile* file, struct _GFileInfo* info, enum GFileQueryInfoFlags flags, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_set_attributes_async(MemorySegment file, MemorySegment info, int flags, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_set_attributes_async$MH();
        try {
            mh$.invokeExact(file, info, flags, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_set_attributes_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1029.const$0,"g_file_set_attributes_finish");
    }
    /**
     * {@snippet :
     * int g_file_set_attributes_finish(struct _GFile* file, struct _GAsyncResult* result, struct _GFileInfo** info, struct _GError** error);
     * }
     */
    public static int g_file_set_attributes_finish(MemorySegment file, MemorySegment result, MemorySegment info, MemorySegment error) {
        var mh$ = g_file_set_attributes_finish$MH();
        try {
            return (int)mh$.invokeExact(file, result, info, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_set_attribute_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1029.const$2,"g_file_set_attribute_string");
    }
    /**
     * {@snippet :
     * int g_file_set_attribute_string(struct _GFile* file, char* attribute, char* value, enum GFileQueryInfoFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_file_set_attribute_string(MemorySegment file, MemorySegment attribute, MemorySegment value, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_set_attribute_string$MH();
        try {
            return (int)mh$.invokeExact(file, attribute, value, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_set_attribute_byte_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1029.const$3,"g_file_set_attribute_byte_string");
    }
    /**
     * {@snippet :
     * int g_file_set_attribute_byte_string(struct _GFile* file, char* attribute, char* value, enum GFileQueryInfoFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_file_set_attribute_byte_string(MemorySegment file, MemorySegment attribute, MemorySegment value, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_set_attribute_byte_string$MH();
        try {
            return (int)mh$.invokeExact(file, attribute, value, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_set_attribute_uint32$MH() {
        return RuntimeHelper.requireNonNull(constants$1029.const$5,"g_file_set_attribute_uint32");
    }
    /**
     * {@snippet :
     * int g_file_set_attribute_uint32(struct _GFile* file, char* attribute, unsigned int value, enum GFileQueryInfoFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_file_set_attribute_uint32(MemorySegment file, MemorySegment attribute, int value, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_set_attribute_uint32$MH();
        try {
            return (int)mh$.invokeExact(file, attribute, value, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_set_attribute_int32$MH() {
        return RuntimeHelper.requireNonNull(constants$1030.const$0,"g_file_set_attribute_int32");
    }
    /**
     * {@snippet :
     * int g_file_set_attribute_int32(struct _GFile* file, char* attribute, int value, enum GFileQueryInfoFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_file_set_attribute_int32(MemorySegment file, MemorySegment attribute, int value, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_set_attribute_int32$MH();
        try {
            return (int)mh$.invokeExact(file, attribute, value, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_set_attribute_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$1030.const$2,"g_file_set_attribute_uint64");
    }
    /**
     * {@snippet :
     * int g_file_set_attribute_uint64(struct _GFile* file, char* attribute, unsigned long value, enum GFileQueryInfoFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_file_set_attribute_uint64(MemorySegment file, MemorySegment attribute, long value, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_set_attribute_uint64$MH();
        try {
            return (int)mh$.invokeExact(file, attribute, value, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_set_attribute_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$1030.const$3,"g_file_set_attribute_int64");
    }
    /**
     * {@snippet :
     * int g_file_set_attribute_int64(struct _GFile* file, char* attribute, long value, enum GFileQueryInfoFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_file_set_attribute_int64(MemorySegment file, MemorySegment attribute, long value, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_set_attribute_int64$MH();
        try {
            return (int)mh$.invokeExact(file, attribute, value, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_mount_enclosing_volume$MH() {
        return RuntimeHelper.requireNonNull(constants$1030.const$5,"g_file_mount_enclosing_volume");
    }
    /**
     * {@snippet :
     * void g_file_mount_enclosing_volume(struct _GFile* location, enum GMountMountFlags flags, struct _GMountOperation* mount_operation, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_mount_enclosing_volume(MemorySegment location, int flags, MemorySegment mount_operation, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_mount_enclosing_volume$MH();
        try {
            mh$.invokeExact(location, flags, mount_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_mount_enclosing_volume_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1031.const$0,"g_file_mount_enclosing_volume_finish");
    }
    /**
     * {@snippet :
     * int g_file_mount_enclosing_volume_finish(struct _GFile* location, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_file_mount_enclosing_volume_finish(MemorySegment location, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_mount_enclosing_volume_finish$MH();
        try {
            return (int)mh$.invokeExact(location, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_mount_mountable$MH() {
        return RuntimeHelper.requireNonNull(constants$1031.const$2,"g_file_mount_mountable");
    }
    /**
     * {@snippet :
     * void g_file_mount_mountable(struct _GFile* file, enum GMountMountFlags flags, struct _GMountOperation* mount_operation, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_mount_mountable(MemorySegment file, int flags, MemorySegment mount_operation, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_mount_mountable$MH();
        try {
            mh$.invokeExact(file, flags, mount_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_mount_mountable_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1031.const$3,"g_file_mount_mountable_finish");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_mount_mountable_finish(struct _GFile* file, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_mount_mountable_finish(MemorySegment file, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_mount_mountable_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_unmount_mountable$MH() {
        return RuntimeHelper.requireNonNull(constants$1031.const$5,"g_file_unmount_mountable");
    }
    /**
     * {@snippet :
     * void g_file_unmount_mountable(struct _GFile* file, enum GMountUnmountFlags flags, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_unmount_mountable(MemorySegment file, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_unmount_mountable$MH();
        try {
            mh$.invokeExact(file, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_unmount_mountable_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1032.const$0,"g_file_unmount_mountable_finish");
    }
    /**
     * {@snippet :
     * int g_file_unmount_mountable_finish(struct _GFile* file, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_file_unmount_mountable_finish(MemorySegment file, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_unmount_mountable_finish$MH();
        try {
            return (int)mh$.invokeExact(file, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_unmount_mountable_with_operation$MH() {
        return RuntimeHelper.requireNonNull(constants$1032.const$2,"g_file_unmount_mountable_with_operation");
    }
    /**
     * {@snippet :
     * void g_file_unmount_mountable_with_operation(struct _GFile* file, enum GMountUnmountFlags flags, struct _GMountOperation* mount_operation, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_unmount_mountable_with_operation(MemorySegment file, int flags, MemorySegment mount_operation, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_unmount_mountable_with_operation$MH();
        try {
            mh$.invokeExact(file, flags, mount_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_unmount_mountable_with_operation_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1032.const$3,"g_file_unmount_mountable_with_operation_finish");
    }
    /**
     * {@snippet :
     * int g_file_unmount_mountable_with_operation_finish(struct _GFile* file, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_file_unmount_mountable_with_operation_finish(MemorySegment file, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_unmount_mountable_with_operation_finish$MH();
        try {
            return (int)mh$.invokeExact(file, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_eject_mountable$MH() {
        return RuntimeHelper.requireNonNull(constants$1032.const$5,"g_file_eject_mountable");
    }
    /**
     * {@snippet :
     * void g_file_eject_mountable(struct _GFile* file, enum GMountUnmountFlags flags, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_eject_mountable(MemorySegment file, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_eject_mountable$MH();
        try {
            mh$.invokeExact(file, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_eject_mountable_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1033.const$0,"g_file_eject_mountable_finish");
    }
    /**
     * {@snippet :
     * int g_file_eject_mountable_finish(struct _GFile* file, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_file_eject_mountable_finish(MemorySegment file, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_eject_mountable_finish$MH();
        try {
            return (int)mh$.invokeExact(file, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_eject_mountable_with_operation$MH() {
        return RuntimeHelper.requireNonNull(constants$1033.const$2,"g_file_eject_mountable_with_operation");
    }
    /**
     * {@snippet :
     * void g_file_eject_mountable_with_operation(struct _GFile* file, enum GMountUnmountFlags flags, struct _GMountOperation* mount_operation, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_eject_mountable_with_operation(MemorySegment file, int flags, MemorySegment mount_operation, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_eject_mountable_with_operation$MH();
        try {
            mh$.invokeExact(file, flags, mount_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_eject_mountable_with_operation_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1033.const$3,"g_file_eject_mountable_with_operation_finish");
    }
    /**
     * {@snippet :
     * int g_file_eject_mountable_with_operation_finish(struct _GFile* file, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_file_eject_mountable_with_operation_finish(MemorySegment file, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_eject_mountable_with_operation_finish$MH();
        try {
            return (int)mh$.invokeExact(file, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_build_attribute_list_for_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1033.const$4,"g_file_build_attribute_list_for_copy");
    }
    /**
     * {@snippet :
     * char* g_file_build_attribute_list_for_copy(struct _GFile* file, enum GFileCopyFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_build_attribute_list_for_copy(MemorySegment file, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_build_attribute_list_for_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_copy_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1033.const$5,"g_file_copy_attributes");
    }
    /**
     * {@snippet :
     * int g_file_copy_attributes(struct _GFile* source, struct _GFile* destination, enum GFileCopyFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_file_copy_attributes(MemorySegment source, MemorySegment destination, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_copy_attributes$MH();
        try {
            return (int)mh$.invokeExact(source, destination, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_monitor_directory$MH() {
        return RuntimeHelper.requireNonNull(constants$1034.const$0,"g_file_monitor_directory");
    }
    /**
     * {@snippet :
     * struct _GFileMonitor* g_file_monitor_directory(struct _GFile* file, enum GFileMonitorFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_monitor_directory(MemorySegment file, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_monitor_directory$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_monitor_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1034.const$1,"g_file_monitor_file");
    }
    /**
     * {@snippet :
     * struct _GFileMonitor* g_file_monitor_file(struct _GFile* file, enum GFileMonitorFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_monitor_file(MemorySegment file, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_monitor_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_monitor$MH() {
        return RuntimeHelper.requireNonNull(constants$1034.const$2,"g_file_monitor");
    }
    /**
     * {@snippet :
     * struct _GFileMonitor* g_file_monitor(struct _GFile* file, enum GFileMonitorFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_monitor(MemorySegment file, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_monitor$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_measure_disk_usage$MH() {
        return RuntimeHelper.requireNonNull(constants$1034.const$4,"g_file_measure_disk_usage");
    }
    /**
     * {@snippet :
     * int g_file_measure_disk_usage(struct _GFile* file, enum GFileMeasureFlags flags, struct _GCancellable* cancellable, void (*progress_callback)(int,unsigned long,unsigned long,unsigned long,void*), void* progress_data, unsigned long* disk_usage, unsigned long* num_dirs, unsigned long* num_files, struct _GError** error);
     * }
     */
    public static int g_file_measure_disk_usage(MemorySegment file, int flags, MemorySegment cancellable, MemorySegment progress_callback, MemorySegment progress_data, MemorySegment disk_usage, MemorySegment num_dirs, MemorySegment num_files, MemorySegment error) {
        var mh$ = g_file_measure_disk_usage$MH();
        try {
            return (int)mh$.invokeExact(file, flags, cancellable, progress_callback, progress_data, disk_usage, num_dirs, num_files, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_measure_disk_usage_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1035.const$1,"g_file_measure_disk_usage_async");
    }
    /**
     * {@snippet :
     * void g_file_measure_disk_usage_async(struct _GFile* file, enum GFileMeasureFlags flags, int io_priority, struct _GCancellable* cancellable, void (*progress_callback)(int,unsigned long,unsigned long,unsigned long,void*), void* progress_data, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_measure_disk_usage_async(MemorySegment file, int flags, int io_priority, MemorySegment cancellable, MemorySegment progress_callback, MemorySegment progress_data, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_measure_disk_usage_async$MH();
        try {
            mh$.invokeExact(file, flags, io_priority, cancellable, progress_callback, progress_data, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_measure_disk_usage_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1035.const$2,"g_file_measure_disk_usage_finish");
    }
    /**
     * {@snippet :
     * int g_file_measure_disk_usage_finish(struct _GFile* file, struct _GAsyncResult* result, unsigned long* disk_usage, unsigned long* num_dirs, unsigned long* num_files, struct _GError** error);
     * }
     */
    public static int g_file_measure_disk_usage_finish(MemorySegment file, MemorySegment result, MemorySegment disk_usage, MemorySegment num_dirs, MemorySegment num_files, MemorySegment error) {
        var mh$ = g_file_measure_disk_usage_finish$MH();
        try {
            return (int)mh$.invokeExact(file, result, disk_usage, num_dirs, num_files, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_start_mountable$MH() {
        return RuntimeHelper.requireNonNull(constants$1035.const$4,"g_file_start_mountable");
    }
    /**
     * {@snippet :
     * void g_file_start_mountable(struct _GFile* file, enum GDriveStartFlags flags, struct _GMountOperation* start_operation, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_start_mountable(MemorySegment file, int flags, MemorySegment start_operation, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_start_mountable$MH();
        try {
            mh$.invokeExact(file, flags, start_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_start_mountable_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1035.const$5,"g_file_start_mountable_finish");
    }
    /**
     * {@snippet :
     * int g_file_start_mountable_finish(struct _GFile* file, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_file_start_mountable_finish(MemorySegment file, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_start_mountable_finish$MH();
        try {
            return (int)mh$.invokeExact(file, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_stop_mountable$MH() {
        return RuntimeHelper.requireNonNull(constants$1036.const$1,"g_file_stop_mountable");
    }
    /**
     * {@snippet :
     * void g_file_stop_mountable(struct _GFile* file, enum GMountUnmountFlags flags, struct _GMountOperation* mount_operation, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_stop_mountable(MemorySegment file, int flags, MemorySegment mount_operation, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_stop_mountable$MH();
        try {
            mh$.invokeExact(file, flags, mount_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_stop_mountable_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1036.const$2,"g_file_stop_mountable_finish");
    }
    /**
     * {@snippet :
     * int g_file_stop_mountable_finish(struct _GFile* file, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_file_stop_mountable_finish(MemorySegment file, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_stop_mountable_finish$MH();
        try {
            return (int)mh$.invokeExact(file, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_poll_mountable$MH() {
        return RuntimeHelper.requireNonNull(constants$1036.const$4,"g_file_poll_mountable");
    }
    /**
     * {@snippet :
     * void g_file_poll_mountable(struct _GFile* file, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_poll_mountable(MemorySegment file, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_poll_mountable$MH();
        try {
            mh$.invokeExact(file, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_poll_mountable_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1036.const$5,"g_file_poll_mountable_finish");
    }
    /**
     * {@snippet :
     * int g_file_poll_mountable_finish(struct _GFile* file, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_file_poll_mountable_finish(MemorySegment file, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_poll_mountable_finish$MH();
        try {
            return (int)mh$.invokeExact(file, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_query_default_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$1037.const$0,"g_file_query_default_handler");
    }
    /**
     * {@snippet :
     * struct _GAppInfo* g_file_query_default_handler(struct _GFile* file, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_query_default_handler(MemorySegment file, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_query_default_handler$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_query_default_handler_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1037.const$2,"g_file_query_default_handler_async");
    }
    /**
     * {@snippet :
     * void g_file_query_default_handler_async(struct _GFile* file, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_query_default_handler_async(MemorySegment file, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_query_default_handler_async$MH();
        try {
            mh$.invokeExact(file, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_query_default_handler_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1037.const$3,"g_file_query_default_handler_finish");
    }
    /**
     * {@snippet :
     * struct _GAppInfo* g_file_query_default_handler_finish(struct _GFile* file, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_query_default_handler_finish(MemorySegment file, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_query_default_handler_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_load_contents$MH() {
        return RuntimeHelper.requireNonNull(constants$1037.const$4,"g_file_load_contents");
    }
    /**
     * {@snippet :
     * int g_file_load_contents(struct _GFile* file, struct _GCancellable* cancellable, char** contents, unsigned long* length, char** etag_out, struct _GError** error);
     * }
     */
    public static int g_file_load_contents(MemorySegment file, MemorySegment cancellable, MemorySegment contents, MemorySegment length, MemorySegment etag_out, MemorySegment error) {
        var mh$ = g_file_load_contents$MH();
        try {
            return (int)mh$.invokeExact(file, cancellable, contents, length, etag_out, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_load_contents_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1038.const$0,"g_file_load_contents_async");
    }
    /**
     * {@snippet :
     * void g_file_load_contents_async(struct _GFile* file, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_load_contents_async(MemorySegment file, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_load_contents_async$MH();
        try {
            mh$.invokeExact(file, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_load_contents_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1038.const$1,"g_file_load_contents_finish");
    }
    /**
     * {@snippet :
     * int g_file_load_contents_finish(struct _GFile* file, struct _GAsyncResult* res, char** contents, unsigned long* length, char** etag_out, struct _GError** error);
     * }
     */
    public static int g_file_load_contents_finish(MemorySegment file, MemorySegment res, MemorySegment contents, MemorySegment length, MemorySegment etag_out, MemorySegment error) {
        var mh$ = g_file_load_contents_finish$MH();
        try {
            return (int)mh$.invokeExact(file, res, contents, length, etag_out, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_load_partial_contents_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1038.const$4,"g_file_load_partial_contents_async");
    }
    /**
     * {@snippet :
     * void g_file_load_partial_contents_async(struct _GFile* file, struct _GCancellable* cancellable, int (*read_more_callback)(char*,long,void*), void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_load_partial_contents_async(MemorySegment file, MemorySegment cancellable, MemorySegment read_more_callback, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_load_partial_contents_async$MH();
        try {
            mh$.invokeExact(file, cancellable, read_more_callback, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_load_partial_contents_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1038.const$5,"g_file_load_partial_contents_finish");
    }
    /**
     * {@snippet :
     * int g_file_load_partial_contents_finish(struct _GFile* file, struct _GAsyncResult* res, char** contents, unsigned long* length, char** etag_out, struct _GError** error);
     * }
     */
    public static int g_file_load_partial_contents_finish(MemorySegment file, MemorySegment res, MemorySegment contents, MemorySegment length, MemorySegment etag_out, MemorySegment error) {
        var mh$ = g_file_load_partial_contents_finish$MH();
        try {
            return (int)mh$.invokeExact(file, res, contents, length, etag_out, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_replace_contents$MH() {
        return RuntimeHelper.requireNonNull(constants$1039.const$1,"g_file_replace_contents");
    }
    /**
     * {@snippet :
     * int g_file_replace_contents(struct _GFile* file, char* contents, unsigned long length, char* etag, int make_backup, enum GFileCreateFlags flags, char** new_etag, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_file_replace_contents(MemorySegment file, MemorySegment contents, long length, MemorySegment etag, int make_backup, int flags, MemorySegment new_etag, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_replace_contents$MH();
        try {
            return (int)mh$.invokeExact(file, contents, length, etag, make_backup, flags, new_etag, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_replace_contents_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1039.const$4,"g_file_replace_contents_async");
    }
    /**
     * {@snippet :
     * void g_file_replace_contents_async(struct _GFile* file, char* contents, unsigned long length, char* etag, int make_backup, enum GFileCreateFlags flags, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_replace_contents_async(MemorySegment file, MemorySegment contents, long length, MemorySegment etag, int make_backup, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_replace_contents_async$MH();
        try {
            mh$.invokeExact(file, contents, length, etag, make_backup, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_replace_contents_bytes_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1040.const$0,"g_file_replace_contents_bytes_async");
    }
    /**
     * {@snippet :
     * void g_file_replace_contents_bytes_async(struct _GFile* file, struct _GBytes* contents, char* etag, int make_backup, enum GFileCreateFlags flags, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_replace_contents_bytes_async(MemorySegment file, MemorySegment contents, MemorySegment etag, int make_backup, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_replace_contents_bytes_async$MH();
        try {
            mh$.invokeExact(file, contents, etag, make_backup, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_replace_contents_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1040.const$1,"g_file_replace_contents_finish");
    }
    /**
     * {@snippet :
     * int g_file_replace_contents_finish(struct _GFile* file, struct _GAsyncResult* res, char** new_etag, struct _GError** error);
     * }
     */
    public static int g_file_replace_contents_finish(MemorySegment file, MemorySegment res, MemorySegment new_etag, MemorySegment error) {
        var mh$ = g_file_replace_contents_finish$MH();
        try {
            return (int)mh$.invokeExact(file, res, new_etag, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_supports_thread_contexts$MH() {
        return RuntimeHelper.requireNonNull(constants$1040.const$2,"g_file_supports_thread_contexts");
    }
    /**
     * {@snippet :
     * int g_file_supports_thread_contexts(struct _GFile* file);
     * }
     */
    public static int g_file_supports_thread_contexts(MemorySegment file) {
        var mh$ = g_file_supports_thread_contexts$MH();
        try {
            return (int)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_load_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1040.const$3,"g_file_load_bytes");
    }
    /**
     * {@snippet :
     * struct _GBytes* g_file_load_bytes(struct _GFile* file, struct _GCancellable* cancellable, char** etag_out, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_load_bytes(MemorySegment file, MemorySegment cancellable, MemorySegment etag_out, MemorySegment error) {
        var mh$ = g_file_load_bytes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, cancellable, etag_out, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_load_bytes_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1040.const$5,"g_file_load_bytes_async");
    }
    /**
     * {@snippet :
     * void g_file_load_bytes_async(struct _GFile* file, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_load_bytes_async(MemorySegment file, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_load_bytes_async$MH();
        try {
            mh$.invokeExact(file, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_load_bytes_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1041.const$0,"g_file_load_bytes_finish");
    }
    /**
     * {@snippet :
     * struct _GBytes* g_file_load_bytes_finish(struct _GFile* file, struct _GAsyncResult* result, char** etag_out, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_load_bytes_finish(MemorySegment file, MemorySegment result, MemorySegment etag_out, MemorySegment error) {
        var mh$ = g_file_load_bytes_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, result, etag_out, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_info_list_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1042.const$2,"g_file_attribute_info_list_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_attribute_info_list_get_type();
     * }
     */
    public static long g_file_attribute_info_list_get_type() {
        var mh$ = g_file_attribute_info_list_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_info_list_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1042.const$3,"g_file_attribute_info_list_new");
    }
    /**
     * {@snippet :
     * struct _GFileAttributeInfoList* g_file_attribute_info_list_new();
     * }
     */
    public static MemorySegment g_file_attribute_info_list_new() {
        var mh$ = g_file_attribute_info_list_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_info_list_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1042.const$4,"g_file_attribute_info_list_ref");
    }
    /**
     * {@snippet :
     * struct _GFileAttributeInfoList* g_file_attribute_info_list_ref(struct _GFileAttributeInfoList* list);
     * }
     */
    public static MemorySegment g_file_attribute_info_list_ref(MemorySegment list) {
        var mh$ = g_file_attribute_info_list_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_info_list_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1042.const$5,"g_file_attribute_info_list_unref");
    }
    /**
     * {@snippet :
     * void g_file_attribute_info_list_unref(struct _GFileAttributeInfoList* list);
     * }
     */
    public static void g_file_attribute_info_list_unref(MemorySegment list) {
        var mh$ = g_file_attribute_info_list_unref$MH();
        try {
            mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_info_list_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$1043.const$0,"g_file_attribute_info_list_dup");
    }
    /**
     * {@snippet :
     * struct _GFileAttributeInfoList* g_file_attribute_info_list_dup(struct _GFileAttributeInfoList* list);
     * }
     */
    public static MemorySegment g_file_attribute_info_list_dup(MemorySegment list) {
        var mh$ = g_file_attribute_info_list_dup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_info_list_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$1043.const$1,"g_file_attribute_info_list_lookup");
    }
    /**
     * {@snippet :
     * struct _GFileAttributeInfo* g_file_attribute_info_list_lookup(struct _GFileAttributeInfoList* list, char* name);
     * }
     */
    public static MemorySegment g_file_attribute_info_list_lookup(MemorySegment list, MemorySegment name) {
        var mh$ = g_file_attribute_info_list_lookup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_info_list_add$MH() {
        return RuntimeHelper.requireNonNull(constants$1043.const$3,"g_file_attribute_info_list_add");
    }
    /**
     * {@snippet :
     * void g_file_attribute_info_list_add(struct _GFileAttributeInfoList* list, char* name, enum GFileAttributeType type, enum GFileAttributeInfoFlags flags);
     * }
     */
    public static void g_file_attribute_info_list_add(MemorySegment list, MemorySegment name, int type, int flags) {
        var mh$ = g_file_attribute_info_list_add$MH();
        try {
            mh$.invokeExact(list, name, type, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_enumerator_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1048.const$3,"g_file_enumerator_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_enumerator_get_type();
     * }
     */
    public static long g_file_enumerator_get_type() {
        var mh$ = g_file_enumerator_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_enumerator_next_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1048.const$4,"g_file_enumerator_next_file");
    }
    /**
     * {@snippet :
     * struct _GFileInfo* g_file_enumerator_next_file(struct _GFileEnumerator* enumerator, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_enumerator_next_file(MemorySegment enumerator, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_enumerator_next_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(enumerator, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_enumerator_close$MH() {
        return RuntimeHelper.requireNonNull(constants$1048.const$5,"g_file_enumerator_close");
    }
    /**
     * {@snippet :
     * int g_file_enumerator_close(struct _GFileEnumerator* enumerator, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_file_enumerator_close(MemorySegment enumerator, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_enumerator_close$MH();
        try {
            return (int)mh$.invokeExact(enumerator, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_enumerator_next_files_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1049.const$1,"g_file_enumerator_next_files_async");
    }
    /**
     * {@snippet :
     * void g_file_enumerator_next_files_async(struct _GFileEnumerator* enumerator, int num_files, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_enumerator_next_files_async(MemorySegment enumerator, int num_files, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_enumerator_next_files_async$MH();
        try {
            mh$.invokeExact(enumerator, num_files, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_enumerator_next_files_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1049.const$2,"g_file_enumerator_next_files_finish");
    }
    /**
     * {@snippet :
     * struct _GList* g_file_enumerator_next_files_finish(struct _GFileEnumerator* enumerator, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_enumerator_next_files_finish(MemorySegment enumerator, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_enumerator_next_files_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(enumerator, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_enumerator_close_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1049.const$4,"g_file_enumerator_close_async");
    }
    /**
     * {@snippet :
     * void g_file_enumerator_close_async(struct _GFileEnumerator* enumerator, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_enumerator_close_async(MemorySegment enumerator, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_enumerator_close_async$MH();
        try {
            mh$.invokeExact(enumerator, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_enumerator_close_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1049.const$5,"g_file_enumerator_close_finish");
    }
    /**
     * {@snippet :
     * int g_file_enumerator_close_finish(struct _GFileEnumerator* enumerator, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_file_enumerator_close_finish(MemorySegment enumerator, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_enumerator_close_finish$MH();
        try {
            return (int)mh$.invokeExact(enumerator, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_enumerator_is_closed$MH() {
        return RuntimeHelper.requireNonNull(constants$1050.const$0,"g_file_enumerator_is_closed");
    }
    /**
     * {@snippet :
     * int g_file_enumerator_is_closed(struct _GFileEnumerator* enumerator);
     * }
     */
    public static int g_file_enumerator_is_closed(MemorySegment enumerator) {
        var mh$ = g_file_enumerator_is_closed$MH();
        try {
            return (int)mh$.invokeExact(enumerator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_enumerator_has_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$1050.const$1,"g_file_enumerator_has_pending");
    }
    /**
     * {@snippet :
     * int g_file_enumerator_has_pending(struct _GFileEnumerator* enumerator);
     * }
     */
    public static int g_file_enumerator_has_pending(MemorySegment enumerator) {
        var mh$ = g_file_enumerator_has_pending$MH();
        try {
            return (int)mh$.invokeExact(enumerator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_enumerator_set_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$1050.const$2,"g_file_enumerator_set_pending");
    }
    /**
     * {@snippet :
     * void g_file_enumerator_set_pending(struct _GFileEnumerator* enumerator, int pending);
     * }
     */
    public static void g_file_enumerator_set_pending(MemorySegment enumerator, int pending) {
        var mh$ = g_file_enumerator_set_pending$MH();
        try {
            mh$.invokeExact(enumerator, pending);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_enumerator_get_container$MH() {
        return RuntimeHelper.requireNonNull(constants$1050.const$3,"g_file_enumerator_get_container");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_enumerator_get_container(struct _GFileEnumerator* enumerator);
     * }
     */
    public static MemorySegment g_file_enumerator_get_container(MemorySegment enumerator) {
        var mh$ = g_file_enumerator_get_container$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(enumerator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_enumerator_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1050.const$4,"g_file_enumerator_get_child");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_enumerator_get_child(struct _GFileEnumerator* enumerator, struct _GFileInfo* info);
     * }
     */
    public static MemorySegment g_file_enumerator_get_child(MemorySegment enumerator, MemorySegment info) {
        var mh$ = g_file_enumerator_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(enumerator, info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_enumerator_iterate$MH() {
        return RuntimeHelper.requireNonNull(constants$1050.const$5,"g_file_enumerator_iterate");
    }
    /**
     * {@snippet :
     * int g_file_enumerator_iterate(struct _GFileEnumerator* direnum, struct _GFileInfo** out_info, struct _GFile** out_child, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_file_enumerator_iterate(MemorySegment direnum, MemorySegment out_info, MemorySegment out_child, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_enumerator_iterate$MH();
        try {
            return (int)mh$.invokeExact(direnum, out_info, out_child, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_icon_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1051.const$0,"g_file_icon_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_icon_get_type();
     * }
     */
    public static long g_file_icon_get_type() {
        var mh$ = g_file_icon_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_icon_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1051.const$1,"g_file_icon_new");
    }
    /**
     * {@snippet :
     * struct _GIcon* g_file_icon_new(struct _GFile* file);
     * }
     */
    public static MemorySegment g_file_icon_new(MemorySegment file) {
        var mh$ = g_file_icon_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_icon_get_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1051.const$2,"g_file_icon_get_file");
    }
    /**
     * {@snippet :
     * struct _GFile* g_file_icon_get_file(struct _GFileIcon* icon);
     * }
     */
    public static MemorySegment g_file_icon_get_file(MemorySegment icon) {
        var mh$ = g_file_icon_get_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1051.const$3,"g_file_info_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_info_get_type();
     * }
     */
    public static long g_file_info_get_type() {
        var mh$ = g_file_info_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1051.const$4,"g_file_info_new");
    }
    /**
     * {@snippet :
     * struct _GFileInfo* g_file_info_new();
     * }
     */
    public static MemorySegment g_file_info_new() {
        var mh$ = g_file_info_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$1051.const$5,"g_file_info_dup");
    }
    /**
     * {@snippet :
     * struct _GFileInfo* g_file_info_dup(struct _GFileInfo* other);
     * }
     */
    public static MemorySegment g_file_info_dup(MemorySegment other) {
        var mh$ = g_file_info_dup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_copy_into$MH() {
        return RuntimeHelper.requireNonNull(constants$1052.const$0,"g_file_info_copy_into");
    }
    /**
     * {@snippet :
     * void g_file_info_copy_into(struct _GFileInfo* src_info, struct _GFileInfo* dest_info);
     * }
     */
    public static void g_file_info_copy_into(MemorySegment src_info, MemorySegment dest_info) {
        var mh$ = g_file_info_copy_into$MH();
        try {
            mh$.invokeExact(src_info, dest_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_has_attribute$MH() {
        return RuntimeHelper.requireNonNull(constants$1052.const$1,"g_file_info_has_attribute");
    }
    /**
     * {@snippet :
     * int g_file_info_has_attribute(struct _GFileInfo* info, char* attribute);
     * }
     */
    public static int g_file_info_has_attribute(MemorySegment info, MemorySegment attribute) {
        var mh$ = g_file_info_has_attribute$MH();
        try {
            return (int)mh$.invokeExact(info, attribute);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_has_namespace$MH() {
        return RuntimeHelper.requireNonNull(constants$1052.const$2,"g_file_info_has_namespace");
    }
    /**
     * {@snippet :
     * int g_file_info_has_namespace(struct _GFileInfo* info, char* name_space);
     * }
     */
    public static int g_file_info_has_namespace(MemorySegment info, MemorySegment name_space) {
        var mh$ = g_file_info_has_namespace$MH();
        try {
            return (int)mh$.invokeExact(info, name_space);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_list_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1052.const$3,"g_file_info_list_attributes");
    }
    /**
     * {@snippet :
     * char** g_file_info_list_attributes(struct _GFileInfo* info, char* name_space);
     * }
     */
    public static MemorySegment g_file_info_list_attributes(MemorySegment info, MemorySegment name_space) {
        var mh$ = g_file_info_list_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info, name_space);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_attribute_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1052.const$4,"g_file_info_get_attribute_data");
    }
    /**
     * {@snippet :
     * int g_file_info_get_attribute_data(struct _GFileInfo* info, char* attribute, enum GFileAttributeType* type, void** value_pp, enum GFileAttributeStatus* status);
     * }
     */
    public static int g_file_info_get_attribute_data(MemorySegment info, MemorySegment attribute, MemorySegment type, MemorySegment value_pp, MemorySegment status) {
        var mh$ = g_file_info_get_attribute_data$MH();
        try {
            return (int)mh$.invokeExact(info, attribute, type, value_pp, status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_attribute_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1052.const$5,"g_file_info_get_attribute_type");
    }
    /**
     * {@snippet :
     * enum GFileAttributeType g_file_info_get_attribute_type(struct _GFileInfo* info, char* attribute);
     * }
     */
    public static int g_file_info_get_attribute_type(MemorySegment info, MemorySegment attribute) {
        var mh$ = g_file_info_get_attribute_type$MH();
        try {
            return (int)mh$.invokeExact(info, attribute);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_remove_attribute$MH() {
        return RuntimeHelper.requireNonNull(constants$1053.const$0,"g_file_info_remove_attribute");
    }
    /**
     * {@snippet :
     * void g_file_info_remove_attribute(struct _GFileInfo* info, char* attribute);
     * }
     */
    public static void g_file_info_remove_attribute(MemorySegment info, MemorySegment attribute) {
        var mh$ = g_file_info_remove_attribute$MH();
        try {
            mh$.invokeExact(info, attribute);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_attribute_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1053.const$1,"g_file_info_get_attribute_status");
    }
    /**
     * {@snippet :
     * enum GFileAttributeStatus g_file_info_get_attribute_status(struct _GFileInfo* info, char* attribute);
     * }
     */
    public static int g_file_info_get_attribute_status(MemorySegment info, MemorySegment attribute) {
        var mh$ = g_file_info_get_attribute_status$MH();
        try {
            return (int)mh$.invokeExact(info, attribute);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_attribute_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1053.const$2,"g_file_info_set_attribute_status");
    }
    /**
     * {@snippet :
     * int g_file_info_set_attribute_status(struct _GFileInfo* info, char* attribute, enum GFileAttributeStatus status);
     * }
     */
    public static int g_file_info_set_attribute_status(MemorySegment info, MemorySegment attribute, int status) {
        var mh$ = g_file_info_set_attribute_status$MH();
        try {
            return (int)mh$.invokeExact(info, attribute, status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_attribute_as_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1053.const$3,"g_file_info_get_attribute_as_string");
    }
    /**
     * {@snippet :
     * char* g_file_info_get_attribute_as_string(struct _GFileInfo* info, char* attribute);
     * }
     */
    public static MemorySegment g_file_info_get_attribute_as_string(MemorySegment info, MemorySegment attribute) {
        var mh$ = g_file_info_get_attribute_as_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info, attribute);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_attribute_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1053.const$4,"g_file_info_get_attribute_string");
    }
    /**
     * {@snippet :
     * char* g_file_info_get_attribute_string(struct _GFileInfo* info, char* attribute);
     * }
     */
    public static MemorySegment g_file_info_get_attribute_string(MemorySegment info, MemorySegment attribute) {
        var mh$ = g_file_info_get_attribute_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info, attribute);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_attribute_byte_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1053.const$5,"g_file_info_get_attribute_byte_string");
    }
    /**
     * {@snippet :
     * char* g_file_info_get_attribute_byte_string(struct _GFileInfo* info, char* attribute);
     * }
     */
    public static MemorySegment g_file_info_get_attribute_byte_string(MemorySegment info, MemorySegment attribute) {
        var mh$ = g_file_info_get_attribute_byte_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info, attribute);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_attribute_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$1054.const$0,"g_file_info_get_attribute_boolean");
    }
    /**
     * {@snippet :
     * int g_file_info_get_attribute_boolean(struct _GFileInfo* info, char* attribute);
     * }
     */
    public static int g_file_info_get_attribute_boolean(MemorySegment info, MemorySegment attribute) {
        var mh$ = g_file_info_get_attribute_boolean$MH();
        try {
            return (int)mh$.invokeExact(info, attribute);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_attribute_uint32$MH() {
        return RuntimeHelper.requireNonNull(constants$1054.const$1,"g_file_info_get_attribute_uint32");
    }
    /**
     * {@snippet :
     * unsigned int g_file_info_get_attribute_uint32(struct _GFileInfo* info, char* attribute);
     * }
     */
    public static int g_file_info_get_attribute_uint32(MemorySegment info, MemorySegment attribute) {
        var mh$ = g_file_info_get_attribute_uint32$MH();
        try {
            return (int)mh$.invokeExact(info, attribute);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_attribute_int32$MH() {
        return RuntimeHelper.requireNonNull(constants$1054.const$2,"g_file_info_get_attribute_int32");
    }
    /**
     * {@snippet :
     * int g_file_info_get_attribute_int32(struct _GFileInfo* info, char* attribute);
     * }
     */
    public static int g_file_info_get_attribute_int32(MemorySegment info, MemorySegment attribute) {
        var mh$ = g_file_info_get_attribute_int32$MH();
        try {
            return (int)mh$.invokeExact(info, attribute);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_attribute_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$1054.const$3,"g_file_info_get_attribute_uint64");
    }
    /**
     * {@snippet :
     * unsigned long g_file_info_get_attribute_uint64(struct _GFileInfo* info, char* attribute);
     * }
     */
    public static long g_file_info_get_attribute_uint64(MemorySegment info, MemorySegment attribute) {
        var mh$ = g_file_info_get_attribute_uint64$MH();
        try {
            return (long)mh$.invokeExact(info, attribute);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_attribute_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$1054.const$4,"g_file_info_get_attribute_int64");
    }
    /**
     * {@snippet :
     * long g_file_info_get_attribute_int64(struct _GFileInfo* info, char* attribute);
     * }
     */
    public static long g_file_info_get_attribute_int64(MemorySegment info, MemorySegment attribute) {
        var mh$ = g_file_info_get_attribute_int64$MH();
        try {
            return (long)mh$.invokeExact(info, attribute);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_attribute_object$MH() {
        return RuntimeHelper.requireNonNull(constants$1054.const$5,"g_file_info_get_attribute_object");
    }
    /**
     * {@snippet :
     * struct _GObject* g_file_info_get_attribute_object(struct _GFileInfo* info, char* attribute);
     * }
     */
    public static MemorySegment g_file_info_get_attribute_object(MemorySegment info, MemorySegment attribute) {
        var mh$ = g_file_info_get_attribute_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info, attribute);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_attribute_stringv$MH() {
        return RuntimeHelper.requireNonNull(constants$1055.const$0,"g_file_info_get_attribute_stringv");
    }
    /**
     * {@snippet :
     * char** g_file_info_get_attribute_stringv(struct _GFileInfo* info, char* attribute);
     * }
     */
    public static MemorySegment g_file_info_get_attribute_stringv(MemorySegment info, MemorySegment attribute) {
        var mh$ = g_file_info_get_attribute_stringv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info, attribute);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_attribute$MH() {
        return RuntimeHelper.requireNonNull(constants$1055.const$1,"g_file_info_set_attribute");
    }
    /**
     * {@snippet :
     * void g_file_info_set_attribute(struct _GFileInfo* info, char* attribute, enum GFileAttributeType type, void* value_p);
     * }
     */
    public static void g_file_info_set_attribute(MemorySegment info, MemorySegment attribute, int type, MemorySegment value_p) {
        var mh$ = g_file_info_set_attribute$MH();
        try {
            mh$.invokeExact(info, attribute, type, value_p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_attribute_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1055.const$2,"g_file_info_set_attribute_string");
    }
    /**
     * {@snippet :
     * void g_file_info_set_attribute_string(struct _GFileInfo* info, char* attribute, char* attr_value);
     * }
     */
    public static void g_file_info_set_attribute_string(MemorySegment info, MemorySegment attribute, MemorySegment attr_value) {
        var mh$ = g_file_info_set_attribute_string$MH();
        try {
            mh$.invokeExact(info, attribute, attr_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_attribute_byte_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1055.const$3,"g_file_info_set_attribute_byte_string");
    }
    /**
     * {@snippet :
     * void g_file_info_set_attribute_byte_string(struct _GFileInfo* info, char* attribute, char* attr_value);
     * }
     */
    public static void g_file_info_set_attribute_byte_string(MemorySegment info, MemorySegment attribute, MemorySegment attr_value) {
        var mh$ = g_file_info_set_attribute_byte_string$MH();
        try {
            mh$.invokeExact(info, attribute, attr_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_attribute_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$1055.const$4,"g_file_info_set_attribute_boolean");
    }
    /**
     * {@snippet :
     * void g_file_info_set_attribute_boolean(struct _GFileInfo* info, char* attribute, int attr_value);
     * }
     */
    public static void g_file_info_set_attribute_boolean(MemorySegment info, MemorySegment attribute, int attr_value) {
        var mh$ = g_file_info_set_attribute_boolean$MH();
        try {
            mh$.invokeExact(info, attribute, attr_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_attribute_uint32$MH() {
        return RuntimeHelper.requireNonNull(constants$1055.const$5,"g_file_info_set_attribute_uint32");
    }
    /**
     * {@snippet :
     * void g_file_info_set_attribute_uint32(struct _GFileInfo* info, char* attribute, unsigned int attr_value);
     * }
     */
    public static void g_file_info_set_attribute_uint32(MemorySegment info, MemorySegment attribute, int attr_value) {
        var mh$ = g_file_info_set_attribute_uint32$MH();
        try {
            mh$.invokeExact(info, attribute, attr_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_attribute_int32$MH() {
        return RuntimeHelper.requireNonNull(constants$1056.const$0,"g_file_info_set_attribute_int32");
    }
    /**
     * {@snippet :
     * void g_file_info_set_attribute_int32(struct _GFileInfo* info, char* attribute, int attr_value);
     * }
     */
    public static void g_file_info_set_attribute_int32(MemorySegment info, MemorySegment attribute, int attr_value) {
        var mh$ = g_file_info_set_attribute_int32$MH();
        try {
            mh$.invokeExact(info, attribute, attr_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_attribute_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$1056.const$1,"g_file_info_set_attribute_uint64");
    }
    /**
     * {@snippet :
     * void g_file_info_set_attribute_uint64(struct _GFileInfo* info, char* attribute, unsigned long attr_value);
     * }
     */
    public static void g_file_info_set_attribute_uint64(MemorySegment info, MemorySegment attribute, long attr_value) {
        var mh$ = g_file_info_set_attribute_uint64$MH();
        try {
            mh$.invokeExact(info, attribute, attr_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_attribute_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$1056.const$2,"g_file_info_set_attribute_int64");
    }
    /**
     * {@snippet :
     * void g_file_info_set_attribute_int64(struct _GFileInfo* info, char* attribute, long attr_value);
     * }
     */
    public static void g_file_info_set_attribute_int64(MemorySegment info, MemorySegment attribute, long attr_value) {
        var mh$ = g_file_info_set_attribute_int64$MH();
        try {
            mh$.invokeExact(info, attribute, attr_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_attribute_object$MH() {
        return RuntimeHelper.requireNonNull(constants$1056.const$3,"g_file_info_set_attribute_object");
    }
    /**
     * {@snippet :
     * void g_file_info_set_attribute_object(struct _GFileInfo* info, char* attribute, struct _GObject* attr_value);
     * }
     */
    public static void g_file_info_set_attribute_object(MemorySegment info, MemorySegment attribute, MemorySegment attr_value) {
        var mh$ = g_file_info_set_attribute_object$MH();
        try {
            mh$.invokeExact(info, attribute, attr_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_attribute_stringv$MH() {
        return RuntimeHelper.requireNonNull(constants$1056.const$4,"g_file_info_set_attribute_stringv");
    }
    /**
     * {@snippet :
     * void g_file_info_set_attribute_stringv(struct _GFileInfo* info, char* attribute, char** attr_value);
     * }
     */
    public static void g_file_info_set_attribute_stringv(MemorySegment info, MemorySegment attribute, MemorySegment attr_value) {
        var mh$ = g_file_info_set_attribute_stringv$MH();
        try {
            mh$.invokeExact(info, attribute, attr_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_clear_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1056.const$5,"g_file_info_clear_status");
    }
    /**
     * {@snippet :
     * void g_file_info_clear_status(struct _GFileInfo* info);
     * }
     */
    public static void g_file_info_clear_status(MemorySegment info) {
        var mh$ = g_file_info_clear_status$MH();
        try {
            mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_deletion_date$MH() {
        return RuntimeHelper.requireNonNull(constants$1057.const$0,"g_file_info_get_deletion_date");
    }
    /**
     * {@snippet :
     * struct _GDateTime* g_file_info_get_deletion_date(struct _GFileInfo* info);
     * }
     */
    public static MemorySegment g_file_info_get_deletion_date(MemorySegment info) {
        var mh$ = g_file_info_get_deletion_date$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_file_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1057.const$1,"g_file_info_get_file_type");
    }
    /**
     * {@snippet :
     * enum GFileType g_file_info_get_file_type(struct _GFileInfo* info);
     * }
     */
    public static int g_file_info_get_file_type(MemorySegment info) {
        var mh$ = g_file_info_get_file_type$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_is_hidden$MH() {
        return RuntimeHelper.requireNonNull(constants$1057.const$2,"g_file_info_get_is_hidden");
    }
    /**
     * {@snippet :
     * int g_file_info_get_is_hidden(struct _GFileInfo* info);
     * }
     */
    public static int g_file_info_get_is_hidden(MemorySegment info) {
        var mh$ = g_file_info_get_is_hidden$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_is_backup$MH() {
        return RuntimeHelper.requireNonNull(constants$1057.const$3,"g_file_info_get_is_backup");
    }
    /**
     * {@snippet :
     * int g_file_info_get_is_backup(struct _GFileInfo* info);
     * }
     */
    public static int g_file_info_get_is_backup(MemorySegment info) {
        var mh$ = g_file_info_get_is_backup$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_is_symlink$MH() {
        return RuntimeHelper.requireNonNull(constants$1057.const$4,"g_file_info_get_is_symlink");
    }
    /**
     * {@snippet :
     * int g_file_info_get_is_symlink(struct _GFileInfo* info);
     * }
     */
    public static int g_file_info_get_is_symlink(MemorySegment info) {
        var mh$ = g_file_info_get_is_symlink$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1057.const$5,"g_file_info_get_name");
    }
    /**
     * {@snippet :
     * char* g_file_info_get_name(struct _GFileInfo* info);
     * }
     */
    public static MemorySegment g_file_info_get_name(MemorySegment info) {
        var mh$ = g_file_info_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_display_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1058.const$0,"g_file_info_get_display_name");
    }
    /**
     * {@snippet :
     * char* g_file_info_get_display_name(struct _GFileInfo* info);
     * }
     */
    public static MemorySegment g_file_info_get_display_name(MemorySegment info) {
        var mh$ = g_file_info_get_display_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_edit_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1058.const$1,"g_file_info_get_edit_name");
    }
    /**
     * {@snippet :
     * char* g_file_info_get_edit_name(struct _GFileInfo* info);
     * }
     */
    public static MemorySegment g_file_info_get_edit_name(MemorySegment info) {
        var mh$ = g_file_info_get_edit_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1058.const$2,"g_file_info_get_icon");
    }
    /**
     * {@snippet :
     * struct _GIcon* g_file_info_get_icon(struct _GFileInfo* info);
     * }
     */
    public static MemorySegment g_file_info_get_icon(MemorySegment info) {
        var mh$ = g_file_info_get_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_symbolic_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1058.const$3,"g_file_info_get_symbolic_icon");
    }
    /**
     * {@snippet :
     * struct _GIcon* g_file_info_get_symbolic_icon(struct _GFileInfo* info);
     * }
     */
    public static MemorySegment g_file_info_get_symbolic_icon(MemorySegment info) {
        var mh$ = g_file_info_get_symbolic_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_content_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1058.const$4,"g_file_info_get_content_type");
    }
    /**
     * {@snippet :
     * char* g_file_info_get_content_type(struct _GFileInfo* info);
     * }
     */
    public static MemorySegment g_file_info_get_content_type(MemorySegment info) {
        var mh$ = g_file_info_get_content_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1058.const$5,"g_file_info_get_size");
    }
    /**
     * {@snippet :
     * long g_file_info_get_size(struct _GFileInfo* info);
     * }
     */
    public static long g_file_info_get_size(MemorySegment info) {
        var mh$ = g_file_info_get_size$MH();
        try {
            return (long)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_modification_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1059.const$0,"g_file_info_get_modification_time");
    }
    /**
     * {@snippet :
     * void g_file_info_get_modification_time(struct _GFileInfo* info, struct _GTimeVal* result);
     * }
     */
    public static void g_file_info_get_modification_time(MemorySegment info, MemorySegment result) {
        var mh$ = g_file_info_get_modification_time$MH();
        try {
            mh$.invokeExact(info, result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_modification_date_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1059.const$1,"g_file_info_get_modification_date_time");
    }
    /**
     * {@snippet :
     * struct _GDateTime* g_file_info_get_modification_date_time(struct _GFileInfo* info);
     * }
     */
    public static MemorySegment g_file_info_get_modification_date_time(MemorySegment info) {
        var mh$ = g_file_info_get_modification_date_time$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_access_date_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1059.const$2,"g_file_info_get_access_date_time");
    }
    /**
     * {@snippet :
     * struct _GDateTime* g_file_info_get_access_date_time(struct _GFileInfo* info);
     * }
     */
    public static MemorySegment g_file_info_get_access_date_time(MemorySegment info) {
        var mh$ = g_file_info_get_access_date_time$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_creation_date_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1059.const$3,"g_file_info_get_creation_date_time");
    }
    /**
     * {@snippet :
     * struct _GDateTime* g_file_info_get_creation_date_time(struct _GFileInfo* info);
     * }
     */
    public static MemorySegment g_file_info_get_creation_date_time(MemorySegment info) {
        var mh$ = g_file_info_get_creation_date_time$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_symlink_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1059.const$4,"g_file_info_get_symlink_target");
    }
    /**
     * {@snippet :
     * char* g_file_info_get_symlink_target(struct _GFileInfo* info);
     * }
     */
    public static MemorySegment g_file_info_get_symlink_target(MemorySegment info) {
        var mh$ = g_file_info_get_symlink_target$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_etag$MH() {
        return RuntimeHelper.requireNonNull(constants$1059.const$5,"g_file_info_get_etag");
    }
    /**
     * {@snippet :
     * char* g_file_info_get_etag(struct _GFileInfo* info);
     * }
     */
    public static MemorySegment g_file_info_get_etag(MemorySegment info) {
        var mh$ = g_file_info_get_etag$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_get_sort_order$MH() {
        return RuntimeHelper.requireNonNull(constants$1060.const$0,"g_file_info_get_sort_order");
    }
    /**
     * {@snippet :
     * int g_file_info_get_sort_order(struct _GFileInfo* info);
     * }
     */
    public static int g_file_info_get_sort_order(MemorySegment info) {
        var mh$ = g_file_info_get_sort_order$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_attribute_mask$MH() {
        return RuntimeHelper.requireNonNull(constants$1060.const$1,"g_file_info_set_attribute_mask");
    }
    /**
     * {@snippet :
     * void g_file_info_set_attribute_mask(struct _GFileInfo* info, struct _GFileAttributeMatcher* mask);
     * }
     */
    public static void g_file_info_set_attribute_mask(MemorySegment info, MemorySegment mask) {
        var mh$ = g_file_info_set_attribute_mask$MH();
        try {
            mh$.invokeExact(info, mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_unset_attribute_mask$MH() {
        return RuntimeHelper.requireNonNull(constants$1060.const$2,"g_file_info_unset_attribute_mask");
    }
    /**
     * {@snippet :
     * void g_file_info_unset_attribute_mask(struct _GFileInfo* info);
     * }
     */
    public static void g_file_info_unset_attribute_mask(MemorySegment info) {
        var mh$ = g_file_info_unset_attribute_mask$MH();
        try {
            mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_file_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1060.const$3,"g_file_info_set_file_type");
    }
    /**
     * {@snippet :
     * void g_file_info_set_file_type(struct _GFileInfo* info, enum GFileType type);
     * }
     */
    public static void g_file_info_set_file_type(MemorySegment info, int type) {
        var mh$ = g_file_info_set_file_type$MH();
        try {
            mh$.invokeExact(info, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_is_hidden$MH() {
        return RuntimeHelper.requireNonNull(constants$1060.const$4,"g_file_info_set_is_hidden");
    }
    /**
     * {@snippet :
     * void g_file_info_set_is_hidden(struct _GFileInfo* info, int is_hidden);
     * }
     */
    public static void g_file_info_set_is_hidden(MemorySegment info, int is_hidden) {
        var mh$ = g_file_info_set_is_hidden$MH();
        try {
            mh$.invokeExact(info, is_hidden);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_is_symlink$MH() {
        return RuntimeHelper.requireNonNull(constants$1060.const$5,"g_file_info_set_is_symlink");
    }
    /**
     * {@snippet :
     * void g_file_info_set_is_symlink(struct _GFileInfo* info, int is_symlink);
     * }
     */
    public static void g_file_info_set_is_symlink(MemorySegment info, int is_symlink) {
        var mh$ = g_file_info_set_is_symlink$MH();
        try {
            mh$.invokeExact(info, is_symlink);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1061.const$0,"g_file_info_set_name");
    }
    /**
     * {@snippet :
     * void g_file_info_set_name(struct _GFileInfo* info, char* name);
     * }
     */
    public static void g_file_info_set_name(MemorySegment info, MemorySegment name) {
        var mh$ = g_file_info_set_name$MH();
        try {
            mh$.invokeExact(info, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_display_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1061.const$1,"g_file_info_set_display_name");
    }
    /**
     * {@snippet :
     * void g_file_info_set_display_name(struct _GFileInfo* info, char* display_name);
     * }
     */
    public static void g_file_info_set_display_name(MemorySegment info, MemorySegment display_name) {
        var mh$ = g_file_info_set_display_name$MH();
        try {
            mh$.invokeExact(info, display_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_edit_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1061.const$2,"g_file_info_set_edit_name");
    }
    /**
     * {@snippet :
     * void g_file_info_set_edit_name(struct _GFileInfo* info, char* edit_name);
     * }
     */
    public static void g_file_info_set_edit_name(MemorySegment info, MemorySegment edit_name) {
        var mh$ = g_file_info_set_edit_name$MH();
        try {
            mh$.invokeExact(info, edit_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1061.const$3,"g_file_info_set_icon");
    }
    /**
     * {@snippet :
     * void g_file_info_set_icon(struct _GFileInfo* info, struct _GIcon* icon);
     * }
     */
    public static void g_file_info_set_icon(MemorySegment info, MemorySegment icon) {
        var mh$ = g_file_info_set_icon$MH();
        try {
            mh$.invokeExact(info, icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_symbolic_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1061.const$4,"g_file_info_set_symbolic_icon");
    }
    /**
     * {@snippet :
     * void g_file_info_set_symbolic_icon(struct _GFileInfo* info, struct _GIcon* icon);
     * }
     */
    public static void g_file_info_set_symbolic_icon(MemorySegment info, MemorySegment icon) {
        var mh$ = g_file_info_set_symbolic_icon$MH();
        try {
            mh$.invokeExact(info, icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_content_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1061.const$5,"g_file_info_set_content_type");
    }
    /**
     * {@snippet :
     * void g_file_info_set_content_type(struct _GFileInfo* info, char* content_type);
     * }
     */
    public static void g_file_info_set_content_type(MemorySegment info, MemorySegment content_type) {
        var mh$ = g_file_info_set_content_type$MH();
        try {
            mh$.invokeExact(info, content_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1062.const$0,"g_file_info_set_size");
    }
    /**
     * {@snippet :
     * void g_file_info_set_size(struct _GFileInfo* info, long size);
     * }
     */
    public static void g_file_info_set_size(MemorySegment info, long size) {
        var mh$ = g_file_info_set_size$MH();
        try {
            mh$.invokeExact(info, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_modification_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1062.const$1,"g_file_info_set_modification_time");
    }
    /**
     * {@snippet :
     * void g_file_info_set_modification_time(struct _GFileInfo* info, struct _GTimeVal* mtime);
     * }
     */
    public static void g_file_info_set_modification_time(MemorySegment info, MemorySegment mtime) {
        var mh$ = g_file_info_set_modification_time$MH();
        try {
            mh$.invokeExact(info, mtime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_modification_date_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1062.const$2,"g_file_info_set_modification_date_time");
    }
    /**
     * {@snippet :
     * void g_file_info_set_modification_date_time(struct _GFileInfo* info, struct _GDateTime* mtime);
     * }
     */
    public static void g_file_info_set_modification_date_time(MemorySegment info, MemorySegment mtime) {
        var mh$ = g_file_info_set_modification_date_time$MH();
        try {
            mh$.invokeExact(info, mtime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_access_date_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1062.const$3,"g_file_info_set_access_date_time");
    }
    /**
     * {@snippet :
     * void g_file_info_set_access_date_time(struct _GFileInfo* info, struct _GDateTime* atime);
     * }
     */
    public static void g_file_info_set_access_date_time(MemorySegment info, MemorySegment atime) {
        var mh$ = g_file_info_set_access_date_time$MH();
        try {
            mh$.invokeExact(info, atime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_creation_date_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1062.const$4,"g_file_info_set_creation_date_time");
    }
    /**
     * {@snippet :
     * void g_file_info_set_creation_date_time(struct _GFileInfo* info, struct _GDateTime* creation_time);
     * }
     */
    public static void g_file_info_set_creation_date_time(MemorySegment info, MemorySegment creation_time) {
        var mh$ = g_file_info_set_creation_date_time$MH();
        try {
            mh$.invokeExact(info, creation_time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_symlink_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1062.const$5,"g_file_info_set_symlink_target");
    }
    /**
     * {@snippet :
     * void g_file_info_set_symlink_target(struct _GFileInfo* info, char* symlink_target);
     * }
     */
    public static void g_file_info_set_symlink_target(MemorySegment info, MemorySegment symlink_target) {
        var mh$ = g_file_info_set_symlink_target$MH();
        try {
            mh$.invokeExact(info, symlink_target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_info_set_sort_order$MH() {
        return RuntimeHelper.requireNonNull(constants$1063.const$0,"g_file_info_set_sort_order");
    }
    /**
     * {@snippet :
     * void g_file_info_set_sort_order(struct _GFileInfo* info, int sort_order);
     * }
     */
    public static void g_file_info_set_sort_order(MemorySegment info, int sort_order) {
        var mh$ = g_file_info_set_sort_order$MH();
        try {
            mh$.invokeExact(info, sort_order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_matcher_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1063.const$1,"g_file_attribute_matcher_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_attribute_matcher_get_type();
     * }
     */
    public static long g_file_attribute_matcher_get_type() {
        var mh$ = g_file_attribute_matcher_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_matcher_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1063.const$2,"g_file_attribute_matcher_new");
    }
    /**
     * {@snippet :
     * struct _GFileAttributeMatcher* g_file_attribute_matcher_new(char* attributes);
     * }
     */
    public static MemorySegment g_file_attribute_matcher_new(MemorySegment attributes) {
        var mh$ = g_file_attribute_matcher_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(attributes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_matcher_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1063.const$3,"g_file_attribute_matcher_ref");
    }
    /**
     * {@snippet :
     * struct _GFileAttributeMatcher* g_file_attribute_matcher_ref(struct _GFileAttributeMatcher* matcher);
     * }
     */
    public static MemorySegment g_file_attribute_matcher_ref(MemorySegment matcher) {
        var mh$ = g_file_attribute_matcher_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(matcher);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_matcher_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1063.const$4,"g_file_attribute_matcher_unref");
    }
    /**
     * {@snippet :
     * void g_file_attribute_matcher_unref(struct _GFileAttributeMatcher* matcher);
     * }
     */
    public static void g_file_attribute_matcher_unref(MemorySegment matcher) {
        var mh$ = g_file_attribute_matcher_unref$MH();
        try {
            mh$.invokeExact(matcher);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_matcher_subtract$MH() {
        return RuntimeHelper.requireNonNull(constants$1063.const$5,"g_file_attribute_matcher_subtract");
    }
    /**
     * {@snippet :
     * struct _GFileAttributeMatcher* g_file_attribute_matcher_subtract(struct _GFileAttributeMatcher* matcher, struct _GFileAttributeMatcher* subtract);
     * }
     */
    public static MemorySegment g_file_attribute_matcher_subtract(MemorySegment matcher, MemorySegment subtract) {
        var mh$ = g_file_attribute_matcher_subtract$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(matcher, subtract);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_matcher_matches$MH() {
        return RuntimeHelper.requireNonNull(constants$1064.const$0,"g_file_attribute_matcher_matches");
    }
    /**
     * {@snippet :
     * int g_file_attribute_matcher_matches(struct _GFileAttributeMatcher* matcher, char* attribute);
     * }
     */
    public static int g_file_attribute_matcher_matches(MemorySegment matcher, MemorySegment attribute) {
        var mh$ = g_file_attribute_matcher_matches$MH();
        try {
            return (int)mh$.invokeExact(matcher, attribute);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_matcher_matches_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1064.const$1,"g_file_attribute_matcher_matches_only");
    }
    /**
     * {@snippet :
     * int g_file_attribute_matcher_matches_only(struct _GFileAttributeMatcher* matcher, char* attribute);
     * }
     */
    public static int g_file_attribute_matcher_matches_only(MemorySegment matcher, MemorySegment attribute) {
        var mh$ = g_file_attribute_matcher_matches_only$MH();
        try {
            return (int)mh$.invokeExact(matcher, attribute);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_matcher_enumerate_namespace$MH() {
        return RuntimeHelper.requireNonNull(constants$1064.const$2,"g_file_attribute_matcher_enumerate_namespace");
    }
    /**
     * {@snippet :
     * int g_file_attribute_matcher_enumerate_namespace(struct _GFileAttributeMatcher* matcher, char* ns);
     * }
     */
    public static int g_file_attribute_matcher_enumerate_namespace(MemorySegment matcher, MemorySegment ns) {
        var mh$ = g_file_attribute_matcher_enumerate_namespace$MH();
        try {
            return (int)mh$.invokeExact(matcher, ns);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_matcher_enumerate_next$MH() {
        return RuntimeHelper.requireNonNull(constants$1064.const$3,"g_file_attribute_matcher_enumerate_next");
    }
    /**
     * {@snippet :
     * char* g_file_attribute_matcher_enumerate_next(struct _GFileAttributeMatcher* matcher);
     * }
     */
    public static MemorySegment g_file_attribute_matcher_enumerate_next(MemorySegment matcher) {
        var mh$ = g_file_attribute_matcher_enumerate_next$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(matcher);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_matcher_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1064.const$4,"g_file_attribute_matcher_to_string");
    }
    /**
     * {@snippet :
     * char* g_file_attribute_matcher_to_string(struct _GFileAttributeMatcher* matcher);
     * }
     */
    public static MemorySegment g_file_attribute_matcher_to_string(MemorySegment matcher) {
        var mh$ = g_file_attribute_matcher_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(matcher);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_input_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1069.const$3,"g_file_input_stream_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_input_stream_get_type();
     * }
     */
    public static long g_file_input_stream_get_type() {
        var mh$ = g_file_input_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_input_stream_query_info$MH() {
        return RuntimeHelper.requireNonNull(constants$1069.const$4,"g_file_input_stream_query_info");
    }
    /**
     * {@snippet :
     * struct _GFileInfo* g_file_input_stream_query_info(struct _GFileInputStream* stream, char* attributes, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_input_stream_query_info(MemorySegment stream, MemorySegment attributes, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_input_stream_query_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, attributes, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_input_stream_query_info_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1070.const$0,"g_file_input_stream_query_info_async");
    }
    /**
     * {@snippet :
     * void g_file_input_stream_query_info_async(struct _GFileInputStream* stream, char* attributes, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_input_stream_query_info_async(MemorySegment stream, MemorySegment attributes, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_input_stream_query_info_async$MH();
        try {
            mh$.invokeExact(stream, attributes, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_input_stream_query_info_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1070.const$1,"g_file_input_stream_query_info_finish");
    }
    /**
     * {@snippet :
     * struct _GFileInfo* g_file_input_stream_query_info_finish(struct _GFileInputStream* stream, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_input_stream_query_info_finish(MemorySegment stream, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_input_stream_query_info_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1070.const$2,"g_io_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int g_io_error_quark();
     * }
     */
    public static int g_io_error_quark() {
        var mh$ = g_io_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_error_from_errno$MH() {
        return RuntimeHelper.requireNonNull(constants$1070.const$3,"g_io_error_from_errno");
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum g_io_error_from_errno(int err_no);
     * }
     */
    public static int g_io_error_from_errno(int err_no) {
        var mh$ = g_io_error_from_errno$MH();
        try {
            return (int)mh$.invokeExact(err_no);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_error_from_file_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1070.const$4,"g_io_error_from_file_error");
    }
    /**
     * {@snippet :
     * enum GIOErrorEnum g_io_error_from_file_error(enum GFileError file_error);
     * }
     */
    public static int g_io_error_from_file_error(int file_error) {
        var mh$ = g_io_error_from_file_error$MH();
        try {
            return (int)mh$.invokeExact(file_error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1076.const$2,"g_io_stream_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_io_stream_get_type();
     * }
     */
    public static long g_io_stream_get_type() {
        var mh$ = g_io_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_stream_get_input_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1076.const$3,"g_io_stream_get_input_stream");
    }
    /**
     * {@snippet :
     * struct _GInputStream* g_io_stream_get_input_stream(struct _GIOStream* stream);
     * }
     */
    public static MemorySegment g_io_stream_get_input_stream(MemorySegment stream) {
        var mh$ = g_io_stream_get_input_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_stream_get_output_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1076.const$4,"g_io_stream_get_output_stream");
    }
    /**
     * {@snippet :
     * struct _GOutputStream* g_io_stream_get_output_stream(struct _GIOStream* stream);
     * }
     */
    public static MemorySegment g_io_stream_get_output_stream(MemorySegment stream) {
        var mh$ = g_io_stream_get_output_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_stream_splice_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1077.const$0,"g_io_stream_splice_async");
    }
    /**
     * {@snippet :
     * void g_io_stream_splice_async(struct _GIOStream* stream1, struct _GIOStream* stream2, enum GIOStreamSpliceFlags flags, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_io_stream_splice_async(MemorySegment stream1, MemorySegment stream2, int flags, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_io_stream_splice_async$MH();
        try {
            mh$.invokeExact(stream1, stream2, flags, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_stream_splice_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1077.const$1,"g_io_stream_splice_finish");
    }
    /**
     * {@snippet :
     * int g_io_stream_splice_finish(struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_io_stream_splice_finish(MemorySegment result, MemorySegment error) {
        var mh$ = g_io_stream_splice_finish$MH();
        try {
            return (int)mh$.invokeExact(result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_stream_close$MH() {
        return RuntimeHelper.requireNonNull(constants$1077.const$2,"g_io_stream_close");
    }
    /**
     * {@snippet :
     * int g_io_stream_close(struct _GIOStream* stream, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_io_stream_close(MemorySegment stream, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_io_stream_close$MH();
        try {
            return (int)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_stream_close_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1077.const$4,"g_io_stream_close_async");
    }
    /**
     * {@snippet :
     * void g_io_stream_close_async(struct _GIOStream* stream, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_io_stream_close_async(MemorySegment stream, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_io_stream_close_async$MH();
        try {
            mh$.invokeExact(stream, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_stream_close_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1077.const$5,"g_io_stream_close_finish");
    }
    /**
     * {@snippet :
     * int g_io_stream_close_finish(struct _GIOStream* stream, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_io_stream_close_finish(MemorySegment stream, MemorySegment result, MemorySegment error) {
        var mh$ = g_io_stream_close_finish$MH();
        try {
            return (int)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_stream_is_closed$MH() {
        return RuntimeHelper.requireNonNull(constants$1078.const$0,"g_io_stream_is_closed");
    }
    /**
     * {@snippet :
     * int g_io_stream_is_closed(struct _GIOStream* stream);
     * }
     */
    public static int g_io_stream_is_closed(MemorySegment stream) {
        var mh$ = g_io_stream_is_closed$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_stream_has_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$1078.const$1,"g_io_stream_has_pending");
    }
    /**
     * {@snippet :
     * int g_io_stream_has_pending(struct _GIOStream* stream);
     * }
     */
    public static int g_io_stream_has_pending(MemorySegment stream) {
        var mh$ = g_io_stream_has_pending$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_stream_set_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$1078.const$2,"g_io_stream_set_pending");
    }
    /**
     * {@snippet :
     * int g_io_stream_set_pending(struct _GIOStream* stream, struct _GError** error);
     * }
     */
    public static int g_io_stream_set_pending(MemorySegment stream, MemorySegment error) {
        var mh$ = g_io_stream_set_pending$MH();
        try {
            return (int)mh$.invokeExact(stream, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_stream_clear_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$1078.const$3,"g_io_stream_clear_pending");
    }
    /**
     * {@snippet :
     * void g_io_stream_clear_pending(struct _GIOStream* stream);
     * }
     */
    public static void g_io_stream_clear_pending(MemorySegment stream) {
        var mh$ = g_io_stream_clear_pending$MH();
        try {
            mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_io_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1084.const$0,"g_file_io_stream_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_io_stream_get_type();
     * }
     */
    public static long g_file_io_stream_get_type() {
        var mh$ = g_file_io_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_io_stream_query_info$MH() {
        return RuntimeHelper.requireNonNull(constants$1084.const$1,"g_file_io_stream_query_info");
    }
    /**
     * {@snippet :
     * struct _GFileInfo* g_file_io_stream_query_info(struct _GFileIOStream* stream, char* attributes, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_io_stream_query_info(MemorySegment stream, MemorySegment attributes, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_io_stream_query_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, attributes, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_io_stream_query_info_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1084.const$3,"g_file_io_stream_query_info_async");
    }
    /**
     * {@snippet :
     * void g_file_io_stream_query_info_async(struct _GFileIOStream* stream, char* attributes, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_io_stream_query_info_async(MemorySegment stream, MemorySegment attributes, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_io_stream_query_info_async$MH();
        try {
            mh$.invokeExact(stream, attributes, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_io_stream_query_info_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1084.const$4,"g_file_io_stream_query_info_finish");
    }
    /**
     * {@snippet :
     * struct _GFileInfo* g_file_io_stream_query_info_finish(struct _GFileIOStream* stream, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_io_stream_query_info_finish(MemorySegment stream, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_io_stream_query_info_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_io_stream_get_etag$MH() {
        return RuntimeHelper.requireNonNull(constants$1084.const$5,"g_file_io_stream_get_etag");
    }
    /**
     * {@snippet :
     * char* g_file_io_stream_get_etag(struct _GFileIOStream* stream);
     * }
     */
    public static MemorySegment g_file_io_stream_get_etag(MemorySegment stream) {
        var mh$ = g_file_io_stream_get_etag$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_monitor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1088.const$0,"g_file_monitor_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_monitor_get_type();
     * }
     */
    public static long g_file_monitor_get_type() {
        var mh$ = g_file_monitor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_monitor_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$1088.const$1,"g_file_monitor_cancel");
    }
    /**
     * {@snippet :
     * int g_file_monitor_cancel(struct _GFileMonitor* monitor);
     * }
     */
    public static int g_file_monitor_cancel(MemorySegment monitor) {
        var mh$ = g_file_monitor_cancel$MH();
        try {
            return (int)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_monitor_is_cancelled$MH() {
        return RuntimeHelper.requireNonNull(constants$1088.const$2,"g_file_monitor_is_cancelled");
    }
    /**
     * {@snippet :
     * int g_file_monitor_is_cancelled(struct _GFileMonitor* monitor);
     * }
     */
    public static int g_file_monitor_is_cancelled(MemorySegment monitor) {
        var mh$ = g_file_monitor_is_cancelled$MH();
        try {
            return (int)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_monitor_set_rate_limit$MH() {
        return RuntimeHelper.requireNonNull(constants$1088.const$3,"g_file_monitor_set_rate_limit");
    }
    /**
     * {@snippet :
     * void g_file_monitor_set_rate_limit(struct _GFileMonitor* monitor, int limit_msecs);
     * }
     */
    public static void g_file_monitor_set_rate_limit(MemorySegment monitor, int limit_msecs) {
        var mh$ = g_file_monitor_set_rate_limit$MH();
        try {
            mh$.invokeExact(monitor, limit_msecs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_monitor_emit_event$MH() {
        return RuntimeHelper.requireNonNull(constants$1088.const$4,"g_file_monitor_emit_event");
    }
    /**
     * {@snippet :
     * void g_file_monitor_emit_event(struct _GFileMonitor* monitor, struct _GFile* child, struct _GFile* other_file, enum GFileMonitorEvent event_type);
     * }
     */
    public static void g_file_monitor_emit_event(MemorySegment monitor, MemorySegment child, MemorySegment other_file, int event_type) {
        var mh$ = g_file_monitor_emit_event$MH();
        try {
            mh$.invokeExact(monitor, child, other_file, event_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filename_completer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1090.const$2,"g_filename_completer_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_filename_completer_get_type();
     * }
     */
    public static long g_filename_completer_get_type() {
        var mh$ = g_filename_completer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filename_completer_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1090.const$3,"g_filename_completer_new");
    }
    /**
     * {@snippet :
     * struct _GFilenameCompleter* g_filename_completer_new();
     * }
     */
    public static MemorySegment g_filename_completer_new() {
        var mh$ = g_filename_completer_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filename_completer_get_completion_suffix$MH() {
        return RuntimeHelper.requireNonNull(constants$1090.const$4,"g_filename_completer_get_completion_suffix");
    }
    /**
     * {@snippet :
     * char* g_filename_completer_get_completion_suffix(struct _GFilenameCompleter* completer, char* initial_text);
     * }
     */
    public static MemorySegment g_filename_completer_get_completion_suffix(MemorySegment completer, MemorySegment initial_text) {
        var mh$ = g_filename_completer_get_completion_suffix$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(completer, initial_text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filename_completer_get_completions$MH() {
        return RuntimeHelper.requireNonNull(constants$1090.const$5,"g_filename_completer_get_completions");
    }
    /**
     * {@snippet :
     * char** g_filename_completer_get_completions(struct _GFilenameCompleter* completer, char* initial_text);
     * }
     */
    public static MemorySegment g_filename_completer_get_completions(MemorySegment completer, MemorySegment initial_text) {
        var mh$ = g_filename_completer_get_completions$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(completer, initial_text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filename_completer_set_dirs_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1091.const$0,"g_filename_completer_set_dirs_only");
    }
    /**
     * {@snippet :
     * void g_filename_completer_set_dirs_only(struct _GFilenameCompleter* completer, int dirs_only);
     * }
     */
    public static void g_filename_completer_set_dirs_only(MemorySegment completer, int dirs_only) {
        var mh$ = g_filename_completer_set_dirs_only$MH();
        try {
            mh$.invokeExact(completer, dirs_only);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_output_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1096.const$2,"g_file_output_stream_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_output_stream_get_type();
     * }
     */
    public static long g_file_output_stream_get_type() {
        var mh$ = g_file_output_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_output_stream_query_info$MH() {
        return RuntimeHelper.requireNonNull(constants$1096.const$3,"g_file_output_stream_query_info");
    }
    /**
     * {@snippet :
     * struct _GFileInfo* g_file_output_stream_query_info(struct _GFileOutputStream* stream, char* attributes, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_output_stream_query_info(MemorySegment stream, MemorySegment attributes, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_file_output_stream_query_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, attributes, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_output_stream_query_info_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1096.const$5,"g_file_output_stream_query_info_async");
    }
    /**
     * {@snippet :
     * void g_file_output_stream_query_info_async(struct _GFileOutputStream* stream, char* attributes, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_file_output_stream_query_info_async(MemorySegment stream, MemorySegment attributes, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_file_output_stream_query_info_async$MH();
        try {
            mh$.invokeExact(stream, attributes, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_output_stream_query_info_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1097.const$0,"g_file_output_stream_query_info_finish");
    }
    /**
     * {@snippet :
     * struct _GFileInfo* g_file_output_stream_query_info_finish(struct _GFileOutputStream* stream, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_file_output_stream_query_info_finish(MemorySegment stream, MemorySegment result, MemorySegment error) {
        var mh$ = g_file_output_stream_query_info_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_output_stream_get_etag$MH() {
        return RuntimeHelper.requireNonNull(constants$1097.const$1,"g_file_output_stream_get_etag");
    }
    /**
     * {@snippet :
     * char* g_file_output_stream_get_etag(struct _GFileOutputStream* stream);
     * }
     */
    public static MemorySegment g_file_output_stream_get_etag(MemorySegment stream) {
        var mh$ = g_file_output_stream_get_etag$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1098.const$3,"g_inet_address_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_inet_address_get_type();
     * }
     */
    public static long g_inet_address_get_type() {
        var mh$ = g_inet_address_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_new_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1098.const$4,"g_inet_address_new_from_string");
    }
    /**
     * {@snippet :
     * struct _GInetAddress* g_inet_address_new_from_string(char* string);
     * }
     */
    public static MemorySegment g_inet_address_new_from_string(MemorySegment string) {
        var mh$ = g_inet_address_new_from_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_new_from_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1098.const$5,"g_inet_address_new_from_bytes");
    }
    /**
     * {@snippet :
     * struct _GInetAddress* g_inet_address_new_from_bytes(unsigned char* bytes, enum GSocketFamily family);
     * }
     */
    public static MemorySegment g_inet_address_new_from_bytes(MemorySegment bytes, int family) {
        var mh$ = g_inet_address_new_from_bytes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bytes, family);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_new_loopback$MH() {
        return RuntimeHelper.requireNonNull(constants$1099.const$0,"g_inet_address_new_loopback");
    }
    /**
     * {@snippet :
     * struct _GInetAddress* g_inet_address_new_loopback(enum GSocketFamily family);
     * }
     */
    public static MemorySegment g_inet_address_new_loopback(int family) {
        var mh$ = g_inet_address_new_loopback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(family);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_new_any$MH() {
        return RuntimeHelper.requireNonNull(constants$1099.const$1,"g_inet_address_new_any");
    }
    /**
     * {@snippet :
     * struct _GInetAddress* g_inet_address_new_any(enum GSocketFamily family);
     * }
     */
    public static MemorySegment g_inet_address_new_any(int family) {
        var mh$ = g_inet_address_new_any$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(family);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1099.const$2,"g_inet_address_equal");
    }
    /**
     * {@snippet :
     * int g_inet_address_equal(struct _GInetAddress* address, struct _GInetAddress* other_address);
     * }
     */
    public static int g_inet_address_equal(MemorySegment address, MemorySegment other_address) {
        var mh$ = g_inet_address_equal$MH();
        try {
            return (int)mh$.invokeExact(address, other_address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1099.const$3,"g_inet_address_to_string");
    }
    /**
     * {@snippet :
     * char* g_inet_address_to_string(struct _GInetAddress* address);
     * }
     */
    public static MemorySegment g_inet_address_to_string(MemorySegment address) {
        var mh$ = g_inet_address_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_to_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1099.const$4,"g_inet_address_to_bytes");
    }
    /**
     * {@snippet :
     * unsigned char* g_inet_address_to_bytes(struct _GInetAddress* address);
     * }
     */
    public static MemorySegment g_inet_address_to_bytes(MemorySegment address) {
        var mh$ = g_inet_address_to_bytes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_get_native_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1099.const$5,"g_inet_address_get_native_size");
    }
    /**
     * {@snippet :
     * unsigned long g_inet_address_get_native_size(struct _GInetAddress* address);
     * }
     */
    public static long g_inet_address_get_native_size(MemorySegment address) {
        var mh$ = g_inet_address_get_native_size$MH();
        try {
            return (long)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_get_family$MH() {
        return RuntimeHelper.requireNonNull(constants$1100.const$0,"g_inet_address_get_family");
    }
    /**
     * {@snippet :
     * enum GSocketFamily g_inet_address_get_family(struct _GInetAddress* address);
     * }
     */
    public static int g_inet_address_get_family(MemorySegment address) {
        var mh$ = g_inet_address_get_family$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_get_is_any$MH() {
        return RuntimeHelper.requireNonNull(constants$1100.const$1,"g_inet_address_get_is_any");
    }
    /**
     * {@snippet :
     * int g_inet_address_get_is_any(struct _GInetAddress* address);
     * }
     */
    public static int g_inet_address_get_is_any(MemorySegment address) {
        var mh$ = g_inet_address_get_is_any$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_get_is_loopback$MH() {
        return RuntimeHelper.requireNonNull(constants$1100.const$2,"g_inet_address_get_is_loopback");
    }
    /**
     * {@snippet :
     * int g_inet_address_get_is_loopback(struct _GInetAddress* address);
     * }
     */
    public static int g_inet_address_get_is_loopback(MemorySegment address) {
        var mh$ = g_inet_address_get_is_loopback$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_get_is_link_local$MH() {
        return RuntimeHelper.requireNonNull(constants$1100.const$3,"g_inet_address_get_is_link_local");
    }
    /**
     * {@snippet :
     * int g_inet_address_get_is_link_local(struct _GInetAddress* address);
     * }
     */
    public static int g_inet_address_get_is_link_local(MemorySegment address) {
        var mh$ = g_inet_address_get_is_link_local$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_get_is_site_local$MH() {
        return RuntimeHelper.requireNonNull(constants$1100.const$4,"g_inet_address_get_is_site_local");
    }
    /**
     * {@snippet :
     * int g_inet_address_get_is_site_local(struct _GInetAddress* address);
     * }
     */
    public static int g_inet_address_get_is_site_local(MemorySegment address) {
        var mh$ = g_inet_address_get_is_site_local$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_get_is_multicast$MH() {
        return RuntimeHelper.requireNonNull(constants$1100.const$5,"g_inet_address_get_is_multicast");
    }
    /**
     * {@snippet :
     * int g_inet_address_get_is_multicast(struct _GInetAddress* address);
     * }
     */
    public static int g_inet_address_get_is_multicast(MemorySegment address) {
        var mh$ = g_inet_address_get_is_multicast$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_get_is_mc_global$MH() {
        return RuntimeHelper.requireNonNull(constants$1101.const$0,"g_inet_address_get_is_mc_global");
    }
    /**
     * {@snippet :
     * int g_inet_address_get_is_mc_global(struct _GInetAddress* address);
     * }
     */
    public static int g_inet_address_get_is_mc_global(MemorySegment address) {
        var mh$ = g_inet_address_get_is_mc_global$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_get_is_mc_link_local$MH() {
        return RuntimeHelper.requireNonNull(constants$1101.const$1,"g_inet_address_get_is_mc_link_local");
    }
    /**
     * {@snippet :
     * int g_inet_address_get_is_mc_link_local(struct _GInetAddress* address);
     * }
     */
    public static int g_inet_address_get_is_mc_link_local(MemorySegment address) {
        var mh$ = g_inet_address_get_is_mc_link_local$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_get_is_mc_node_local$MH() {
        return RuntimeHelper.requireNonNull(constants$1101.const$2,"g_inet_address_get_is_mc_node_local");
    }
    /**
     * {@snippet :
     * int g_inet_address_get_is_mc_node_local(struct _GInetAddress* address);
     * }
     */
    public static int g_inet_address_get_is_mc_node_local(MemorySegment address) {
        var mh$ = g_inet_address_get_is_mc_node_local$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_get_is_mc_org_local$MH() {
        return RuntimeHelper.requireNonNull(constants$1101.const$3,"g_inet_address_get_is_mc_org_local");
    }
    /**
     * {@snippet :
     * int g_inet_address_get_is_mc_org_local(struct _GInetAddress* address);
     * }
     */
    public static int g_inet_address_get_is_mc_org_local(MemorySegment address) {
        var mh$ = g_inet_address_get_is_mc_org_local$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_get_is_mc_site_local$MH() {
        return RuntimeHelper.requireNonNull(constants$1101.const$4,"g_inet_address_get_is_mc_site_local");
    }
    /**
     * {@snippet :
     * int g_inet_address_get_is_mc_site_local(struct _GInetAddress* address);
     * }
     */
    public static int g_inet_address_get_is_mc_site_local(MemorySegment address) {
        var mh$ = g_inet_address_get_is_mc_site_local$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_mask_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1102.const$2,"g_inet_address_mask_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_inet_address_mask_get_type();
     * }
     */
    public static long g_inet_address_mask_get_type() {
        var mh$ = g_inet_address_mask_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_mask_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1102.const$3,"g_inet_address_mask_new");
    }
    /**
     * {@snippet :
     * struct _GInetAddressMask* g_inet_address_mask_new(struct _GInetAddress* addr, unsigned int length, struct _GError** error);
     * }
     */
    public static MemorySegment g_inet_address_mask_new(MemorySegment addr, int length, MemorySegment error) {
        var mh$ = g_inet_address_mask_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(addr, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_mask_new_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1102.const$4,"g_inet_address_mask_new_from_string");
    }
    /**
     * {@snippet :
     * struct _GInetAddressMask* g_inet_address_mask_new_from_string(char* mask_string, struct _GError** error);
     * }
     */
    public static MemorySegment g_inet_address_mask_new_from_string(MemorySegment mask_string, MemorySegment error) {
        var mh$ = g_inet_address_mask_new_from_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mask_string, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_mask_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1102.const$5,"g_inet_address_mask_to_string");
    }
    /**
     * {@snippet :
     * char* g_inet_address_mask_to_string(struct _GInetAddressMask* mask);
     * }
     */
    public static MemorySegment g_inet_address_mask_to_string(MemorySegment mask) {
        var mh$ = g_inet_address_mask_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_mask_get_family$MH() {
        return RuntimeHelper.requireNonNull(constants$1103.const$0,"g_inet_address_mask_get_family");
    }
    /**
     * {@snippet :
     * enum GSocketFamily g_inet_address_mask_get_family(struct _GInetAddressMask* mask);
     * }
     */
    public static int g_inet_address_mask_get_family(MemorySegment mask) {
        var mh$ = g_inet_address_mask_get_family$MH();
        try {
            return (int)mh$.invokeExact(mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_mask_get_address$MH() {
        return RuntimeHelper.requireNonNull(constants$1103.const$1,"g_inet_address_mask_get_address");
    }
    /**
     * {@snippet :
     * struct _GInetAddress* g_inet_address_mask_get_address(struct _GInetAddressMask* mask);
     * }
     */
    public static MemorySegment g_inet_address_mask_get_address(MemorySegment mask) {
        var mh$ = g_inet_address_mask_get_address$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_mask_get_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1103.const$2,"g_inet_address_mask_get_length");
    }
    /**
     * {@snippet :
     * unsigned int g_inet_address_mask_get_length(struct _GInetAddressMask* mask);
     * }
     */
    public static int g_inet_address_mask_get_length(MemorySegment mask) {
        var mh$ = g_inet_address_mask_get_length$MH();
        try {
            return (int)mh$.invokeExact(mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_mask_matches$MH() {
        return RuntimeHelper.requireNonNull(constants$1103.const$3,"g_inet_address_mask_matches");
    }
    /**
     * {@snippet :
     * int g_inet_address_mask_matches(struct _GInetAddressMask* mask, struct _GInetAddress* address);
     * }
     */
    public static int g_inet_address_mask_matches(MemorySegment mask, MemorySegment address) {
        var mh$ = g_inet_address_mask_matches$MH();
        try {
            return (int)mh$.invokeExact(mask, address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_address_mask_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1103.const$4,"g_inet_address_mask_equal");
    }
    /**
     * {@snippet :
     * int g_inet_address_mask_equal(struct _GInetAddressMask* mask, struct _GInetAddressMask* mask2);
     * }
     */
    public static int g_inet_address_mask_equal(MemorySegment mask, MemorySegment mask2) {
        var mh$ = g_inet_address_mask_equal$MH();
        try {
            return (int)mh$.invokeExact(mask, mask2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_address_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1105.const$2,"g_socket_address_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_socket_address_get_type();
     * }
     */
    public static long g_socket_address_get_type() {
        var mh$ = g_socket_address_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_address_get_family$MH() {
        return RuntimeHelper.requireNonNull(constants$1105.const$3,"g_socket_address_get_family");
    }
    /**
     * {@snippet :
     * enum GSocketFamily g_socket_address_get_family(struct _GSocketAddress* address);
     * }
     */
    public static int g_socket_address_get_family(MemorySegment address) {
        var mh$ = g_socket_address_get_family$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_address_new_from_native$MH() {
        return RuntimeHelper.requireNonNull(constants$1105.const$4,"g_socket_address_new_from_native");
    }
    /**
     * {@snippet :
     * struct _GSocketAddress* g_socket_address_new_from_native(void* native, unsigned long len);
     * }
     */
    public static MemorySegment g_socket_address_new_from_native(MemorySegment native_, long len) {
        var mh$ = g_socket_address_new_from_native$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(native_, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_address_to_native$MH() {
        return RuntimeHelper.requireNonNull(constants$1105.const$5,"g_socket_address_to_native");
    }
    /**
     * {@snippet :
     * int g_socket_address_to_native(struct _GSocketAddress* address, void* dest, unsigned long destlen, struct _GError** error);
     * }
     */
    public static int g_socket_address_to_native(MemorySegment address, MemorySegment dest, long destlen, MemorySegment error) {
        var mh$ = g_socket_address_to_native$MH();
        try {
            return (int)mh$.invokeExact(address, dest, destlen, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_address_get_native_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1106.const$0,"g_socket_address_get_native_size");
    }
    /**
     * {@snippet :
     * long g_socket_address_get_native_size(struct _GSocketAddress* address);
     * }
     */
    public static long g_socket_address_get_native_size(MemorySegment address) {
        var mh$ = g_socket_address_get_native_size$MH();
        try {
            return (long)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_socket_address_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1106.const$4,"g_inet_socket_address_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_inet_socket_address_get_type();
     * }
     */
    public static long g_inet_socket_address_get_type() {
        var mh$ = g_inet_socket_address_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_socket_address_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1106.const$6,"g_inet_socket_address_new");
    }
    /**
     * {@snippet :
     * struct _GSocketAddress* g_inet_socket_address_new(struct _GInetAddress* address, unsigned short port);
     * }
     */
    public static MemorySegment g_inet_socket_address_new(MemorySegment address, short port) {
        var mh$ = g_inet_socket_address_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(address, port);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_socket_address_new_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1107.const$0,"g_inet_socket_address_new_from_string");
    }
    /**
     * {@snippet :
     * struct _GSocketAddress* g_inet_socket_address_new_from_string(char* address, unsigned int port);
     * }
     */
    public static MemorySegment g_inet_socket_address_new_from_string(MemorySegment address, int port) {
        var mh$ = g_inet_socket_address_new_from_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(address, port);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_socket_address_get_address$MH() {
        return RuntimeHelper.requireNonNull(constants$1107.const$1,"g_inet_socket_address_get_address");
    }
    /**
     * {@snippet :
     * struct _GInetAddress* g_inet_socket_address_get_address(struct _GInetSocketAddress* address);
     * }
     */
    public static MemorySegment g_inet_socket_address_get_address(MemorySegment address) {
        var mh$ = g_inet_socket_address_get_address$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_socket_address_get_port$MH() {
        return RuntimeHelper.requireNonNull(constants$1107.const$2,"g_inet_socket_address_get_port");
    }
    /**
     * {@snippet :
     * unsigned short g_inet_socket_address_get_port(struct _GInetSocketAddress* address);
     * }
     */
    public static short g_inet_socket_address_get_port(MemorySegment address) {
        var mh$ = g_inet_socket_address_get_port$MH();
        try {
            return (short)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_socket_address_get_flowinfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1107.const$3,"g_inet_socket_address_get_flowinfo");
    }
    /**
     * {@snippet :
     * unsigned int g_inet_socket_address_get_flowinfo(struct _GInetSocketAddress* address);
     * }
     */
    public static int g_inet_socket_address_get_flowinfo(MemorySegment address) {
        var mh$ = g_inet_socket_address_get_flowinfo$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_inet_socket_address_get_scope_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1107.const$4,"g_inet_socket_address_get_scope_id");
    }
    /**
     * {@snippet :
     * unsigned int g_inet_socket_address_get_scope_id(struct _GInetSocketAddress* address);
     * }
     */
    public static int g_inet_socket_address_get_scope_id(MemorySegment address) {
        var mh$ = g_inet_socket_address_get_scope_id$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_app_info_create_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1107.const$5,"g_app_info_create_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_app_info_create_flags_get_type();
     * }
     */
    public static long g_app_info_create_flags_get_type() {
        var mh$ = g_app_info_create_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1108.const$0,"g_converter_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_converter_flags_get_type();
     * }
     */
    public static long g_converter_flags_get_type() {
        var mh$ = g_converter_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_converter_result_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1108.const$1,"g_converter_result_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_converter_result_get_type();
     * }
     */
    public static long g_converter_result_get_type() {
        var mh$ = g_converter_result_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_stream_byte_order_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1108.const$2,"g_data_stream_byte_order_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_data_stream_byte_order_get_type();
     * }
     */
    public static long g_data_stream_byte_order_get_type() {
        var mh$ = g_data_stream_byte_order_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_data_stream_newline_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1108.const$3,"g_data_stream_newline_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_data_stream_newline_type_get_type();
     * }
     */
    public static long g_data_stream_newline_type_get_type() {
        var mh$ = g_data_stream_newline_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1108.const$4,"g_file_attribute_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_attribute_type_get_type();
     * }
     */
    public static long g_file_attribute_type_get_type() {
        var mh$ = g_file_attribute_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_info_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1108.const$5,"g_file_attribute_info_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_attribute_info_flags_get_type();
     * }
     */
    public static long g_file_attribute_info_flags_get_type() {
        var mh$ = g_file_attribute_info_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_attribute_status_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1109.const$0,"g_file_attribute_status_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_attribute_status_get_type();
     * }
     */
    public static long g_file_attribute_status_get_type() {
        var mh$ = g_file_attribute_status_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_query_info_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1109.const$1,"g_file_query_info_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_query_info_flags_get_type();
     * }
     */
    public static long g_file_query_info_flags_get_type() {
        var mh$ = g_file_query_info_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_create_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1109.const$2,"g_file_create_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_create_flags_get_type();
     * }
     */
    public static long g_file_create_flags_get_type() {
        var mh$ = g_file_create_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_measure_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1109.const$3,"g_file_measure_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_measure_flags_get_type();
     * }
     */
    public static long g_file_measure_flags_get_type() {
        var mh$ = g_file_measure_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_mount_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1109.const$4,"g_mount_mount_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_mount_mount_flags_get_type();
     * }
     */
    public static long g_mount_mount_flags_get_type() {
        var mh$ = g_mount_mount_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_unmount_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1109.const$5,"g_mount_unmount_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_mount_unmount_flags_get_type();
     * }
     */
    public static long g_mount_unmount_flags_get_type() {
        var mh$ = g_mount_unmount_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_start_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1110.const$0,"g_drive_start_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_drive_start_flags_get_type();
     * }
     */
    public static long g_drive_start_flags_get_type() {
        var mh$ = g_drive_start_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_drive_start_stop_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1110.const$1,"g_drive_start_stop_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_drive_start_stop_type_get_type();
     * }
     */
    public static long g_drive_start_stop_type_get_type() {
        var mh$ = g_drive_start_stop_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_copy_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1110.const$2,"g_file_copy_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_copy_flags_get_type();
     * }
     */
    public static long g_file_copy_flags_get_type() {
        var mh$ = g_file_copy_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_monitor_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1110.const$3,"g_file_monitor_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_monitor_flags_get_type();
     * }
     */
    public static long g_file_monitor_flags_get_type() {
        var mh$ = g_file_monitor_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1110.const$4,"g_file_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_type_get_type();
     * }
     */
    public static long g_file_type_get_type() {
        var mh$ = g_file_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filesystem_preview_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1110.const$5,"g_filesystem_preview_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_filesystem_preview_type_get_type();
     * }
     */
    public static long g_filesystem_preview_type_get_type() {
        var mh$ = g_filesystem_preview_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_monitor_event_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1111.const$0,"g_file_monitor_event_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_file_monitor_event_get_type();
     * }
     */
    public static long g_file_monitor_event_get_type() {
        var mh$ = g_file_monitor_event_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_error_enum_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1111.const$1,"g_io_error_enum_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_io_error_enum_get_type();
     * }
     */
    public static long g_io_error_enum_get_type() {
        var mh$ = g_io_error_enum_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ask_password_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1111.const$2,"g_ask_password_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_ask_password_flags_get_type();
     * }
     */
    public static long g_ask_password_flags_get_type() {
        var mh$ = g_ask_password_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_password_save_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1111.const$3,"g_password_save_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_password_save_get_type();
     * }
     */
    public static long g_password_save_get_type() {
        var mh$ = g_password_save_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_result_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1111.const$4,"g_mount_operation_result_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_mount_operation_result_get_type();
     * }
     */
    public static long g_mount_operation_result_get_type() {
        var mh$ = g_mount_operation_result_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_output_stream_splice_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1111.const$5,"g_output_stream_splice_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_output_stream_splice_flags_get_type();
     * }
     */
    public static long g_output_stream_splice_flags_get_type() {
        var mh$ = g_output_stream_splice_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_stream_splice_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1112.const$0,"g_io_stream_splice_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_io_stream_splice_flags_get_type();
     * }
     */
    public static long g_io_stream_splice_flags_get_type() {
        var mh$ = g_io_stream_splice_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_emblem_origin_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1112.const$1,"g_emblem_origin_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_emblem_origin_get_type();
     * }
     */
    public static long g_emblem_origin_get_type() {
        var mh$ = g_emblem_origin_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1112.const$2,"g_resolver_error_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_resolver_error_get_type();
     * }
     */
    public static long g_resolver_error_get_type() {
        var mh$ = g_resolver_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_record_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1112.const$3,"g_resolver_record_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_resolver_record_type_get_type();
     * }
     */
    public static long g_resolver_record_type_get_type() {
        var mh$ = g_resolver_record_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1112.const$4,"g_resource_error_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_resource_error_get_type();
     * }
     */
    public static long g_resource_error_get_type() {
        var mh$ = g_resource_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1112.const$5,"g_resource_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_resource_flags_get_type();
     * }
     */
    public static long g_resource_flags_get_type() {
        var mh$ = g_resource_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_lookup_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1113.const$0,"g_resource_lookup_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_resource_lookup_flags_get_type();
     * }
     */
    public static long g_resource_lookup_flags_get_type() {
        var mh$ = g_resource_lookup_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_family_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1113.const$1,"g_socket_family_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_socket_family_get_type();
     * }
     */
    public static long g_socket_family_get_type() {
        var mh$ = g_socket_family_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1113.const$2,"g_socket_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_socket_type_get_type();
     * }
     */
    public static long g_socket_type_get_type() {
        var mh$ = g_socket_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_msg_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1113.const$3,"g_socket_msg_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_socket_msg_flags_get_type();
     * }
     */
    public static long g_socket_msg_flags_get_type() {
        var mh$ = g_socket_msg_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_protocol_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1113.const$4,"g_socket_protocol_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_socket_protocol_get_type();
     * }
     */
    public static long g_socket_protocol_get_type() {
        var mh$ = g_socket_protocol_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_compressor_format_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1113.const$5,"g_zlib_compressor_format_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_zlib_compressor_format_get_type();
     * }
     */
    public static long g_zlib_compressor_format_get_type() {
        var mh$ = g_zlib_compressor_format_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1114.const$0,"g_unix_socket_address_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_unix_socket_address_type_get_type();
     * }
     */
    public static long g_unix_socket_address_type_get_type() {
        var mh$ = g_unix_socket_address_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bus_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1114.const$1,"g_bus_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_bus_type_get_type();
     * }
     */
    public static long g_bus_type_get_type() {
        var mh$ = g_bus_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bus_name_owner_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1114.const$2,"g_bus_name_owner_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_bus_name_owner_flags_get_type();
     * }
     */
    public static long g_bus_name_owner_flags_get_type() {
        var mh$ = g_bus_name_owner_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bus_name_watcher_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1114.const$3,"g_bus_name_watcher_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_bus_name_watcher_flags_get_type();
     * }
     */
    public static long g_bus_name_watcher_flags_get_type() {
        var mh$ = g_bus_name_watcher_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_proxy_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1114.const$4,"g_dbus_proxy_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_proxy_flags_get_type();
     * }
     */
    public static long g_dbus_proxy_flags_get_type() {
        var mh$ = g_dbus_proxy_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1114.const$5,"g_dbus_error_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_error_get_type();
     * }
     */
    public static long g_dbus_error_get_type() {
        var mh$ = g_dbus_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1115.const$0,"g_dbus_connection_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_connection_flags_get_type();
     * }
     */
    public static long g_dbus_connection_flags_get_type() {
        var mh$ = g_dbus_connection_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_capability_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1115.const$1,"g_dbus_capability_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_capability_flags_get_type();
     * }
     */
    public static long g_dbus_capability_flags_get_type() {
        var mh$ = g_dbus_capability_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_call_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1115.const$2,"g_dbus_call_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_call_flags_get_type();
     * }
     */
    public static long g_dbus_call_flags_get_type() {
        var mh$ = g_dbus_call_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1115.const$3,"g_dbus_message_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_message_type_get_type();
     * }
     */
    public static long g_dbus_message_type_get_type() {
        var mh$ = g_dbus_message_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1115.const$4,"g_dbus_message_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_message_flags_get_type();
     * }
     */
    public static long g_dbus_message_flags_get_type() {
        var mh$ = g_dbus_message_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_header_field_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1115.const$5,"g_dbus_message_header_field_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_message_header_field_get_type();
     * }
     */
    public static long g_dbus_message_header_field_get_type() {
        var mh$ = g_dbus_message_header_field_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_property_info_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1116.const$0,"g_dbus_property_info_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_property_info_flags_get_type();
     * }
     */
    public static long g_dbus_property_info_flags_get_type() {
        var mh$ = g_dbus_property_info_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_subtree_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1116.const$1,"g_dbus_subtree_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_subtree_flags_get_type();
     * }
     */
    public static long g_dbus_subtree_flags_get_type() {
        var mh$ = g_dbus_subtree_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_server_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1116.const$2,"g_dbus_server_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_server_flags_get_type();
     * }
     */
    public static long g_dbus_server_flags_get_type() {
        var mh$ = g_dbus_server_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_signal_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1116.const$3,"g_dbus_signal_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_signal_flags_get_type();
     * }
     */
    public static long g_dbus_signal_flags_get_type() {
        var mh$ = g_dbus_signal_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_send_message_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1116.const$4,"g_dbus_send_message_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_send_message_flags_get_type();
     * }
     */
    public static long g_dbus_send_message_flags_get_type() {
        var mh$ = g_dbus_send_message_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_credentials_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1116.const$5,"g_credentials_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_credentials_type_get_type();
     * }
     */
    public static long g_credentials_type_get_type() {
        var mh$ = g_credentials_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_message_byte_order_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1117.const$0,"g_dbus_message_byte_order_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_message_byte_order_get_type();
     * }
     */
    public static long g_dbus_message_byte_order_get_type() {
        var mh$ = g_dbus_message_byte_order_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_application_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1117.const$1,"g_application_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_application_flags_get_type();
     * }
     */
    public static long g_application_flags_get_type() {
        var mh$ = g_application_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1117.const$2,"g_tls_error_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_error_get_type();
     * }
     */
    public static long g_tls_error_get_type() {
        var mh$ = g_tls_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1117.const$3,"g_tls_certificate_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_certificate_flags_get_type();
     * }
     */
    public static long g_tls_certificate_flags_get_type() {
        var mh$ = g_tls_certificate_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_authentication_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1117.const$4,"g_tls_authentication_mode_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_authentication_mode_get_type();
     * }
     */
    public static long g_tls_authentication_mode_get_type() {
        var mh$ = g_tls_authentication_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_channel_binding_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1117.const$5,"g_tls_channel_binding_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_channel_binding_type_get_type();
     * }
     */
    public static long g_tls_channel_binding_type_get_type() {
        var mh$ = g_tls_channel_binding_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_channel_binding_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1118.const$0,"g_tls_channel_binding_error_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_channel_binding_error_get_type();
     * }
     */
    public static long g_tls_channel_binding_error_get_type() {
        var mh$ = g_tls_channel_binding_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_rehandshake_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1118.const$1,"g_tls_rehandshake_mode_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_rehandshake_mode_get_type();
     * }
     */
    public static long g_tls_rehandshake_mode_get_type() {
        var mh$ = g_tls_rehandshake_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1118.const$2,"g_tls_password_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_password_flags_get_type();
     * }
     */
    public static long g_tls_password_flags_get_type() {
        var mh$ = g_tls_password_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_result_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1118.const$3,"g_tls_interaction_result_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_interaction_result_get_type();
     * }
     */
    public static long g_tls_interaction_result_get_type() {
        var mh$ = g_tls_interaction_result_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_interface_skeleton_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1118.const$4,"g_dbus_interface_skeleton_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_interface_skeleton_flags_get_type();
     * }
     */
    public static long g_dbus_interface_skeleton_flags_get_type() {
        var mh$ = g_dbus_interface_skeleton_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_object_manager_client_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1118.const$5,"g_dbus_object_manager_client_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_dbus_object_manager_client_flags_get_type();
     * }
     */
    public static long g_dbus_object_manager_client_flags_get_type() {
        var mh$ = g_dbus_object_manager_client_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_verify_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1119.const$0,"g_tls_database_verify_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_database_verify_flags_get_type();
     * }
     */
    public static long g_tls_database_verify_flags_get_type() {
        var mh$ = g_tls_database_verify_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1119.const$1,"g_tls_database_lookup_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_database_lookup_flags_get_type();
     * }
     */
    public static long g_tls_database_lookup_flags_get_type() {
        var mh$ = g_tls_database_lookup_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_request_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1119.const$2,"g_tls_certificate_request_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_certificate_request_flags_get_type();
     * }
     */
    public static long g_tls_certificate_request_flags_get_type() {
        var mh$ = g_tls_certificate_request_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_protocol_version_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1119.const$3,"g_tls_protocol_version_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_protocol_version_get_type();
     * }
     */
    public static long g_tls_protocol_version_get_type() {
        var mh$ = g_tls_protocol_version_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_module_scope_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1119.const$4,"g_io_module_scope_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_io_module_scope_flags_get_type();
     * }
     */
    public static long g_io_module_scope_flags_get_type() {
        var mh$ = g_io_module_scope_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_event_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1119.const$5,"g_socket_client_event_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_socket_client_event_get_type();
     * }
     */
    public static long g_socket_client_event_get_type() {
        var mh$ = g_socket_client_event_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_event_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1120.const$0,"g_socket_listener_event_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_socket_listener_event_get_type();
     * }
     */
    public static long g_socket_listener_event_get_type() {
        var mh$ = g_socket_listener_event_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1120.const$1,"g_test_dbus_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_test_dbus_flags_get_type();
     * }
     */
    public static long g_test_dbus_flags_get_type() {
        var mh$ = g_test_dbus_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1120.const$2,"g_subprocess_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_subprocess_flags_get_type();
     * }
     */
    public static long g_subprocess_flags_get_type() {
        var mh$ = g_subprocess_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_notification_priority_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1120.const$3,"g_notification_priority_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_notification_priority_get_type();
     * }
     */
    public static long g_notification_priority_get_type() {
        var mh$ = g_notification_priority_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_connectivity_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1120.const$4,"g_network_connectivity_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_network_connectivity_get_type();
     * }
     */
    public static long g_network_connectivity_get_type() {
        var mh$ = g_network_connectivity_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollable_return_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1120.const$5,"g_pollable_return_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_pollable_return_get_type();
     * }
     */
    public static long g_pollable_return_get_type() {
        var mh$ = g_pollable_return_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_memory_monitor_warning_level_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1121.const$0,"g_memory_monitor_warning_level_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_memory_monitor_warning_level_get_type();
     * }
     */
    public static long g_memory_monitor_warning_level_get_type() {
        var mh$ = g_memory_monitor_warning_level_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_name_lookup_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1121.const$1,"g_resolver_name_lookup_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_resolver_name_lookup_flags_get_type();
     * }
     */
    public static long g_resolver_name_lookup_flags_get_type() {
        var mh$ = g_resolver_name_lookup_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_bind_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1121.const$2,"g_settings_bind_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_settings_bind_flags_get_type();
     * }
     */
    public static long g_settings_bind_flags_get_type() {
        var mh$ = g_settings_bind_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GModuleFlags.G_MODULE_BIND_LAZY = 1;
     * }
     */
    public static int G_MODULE_BIND_LAZY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GModuleFlags.G_MODULE_BIND_LOCAL = 2;
     * }
     */
    public static int G_MODULE_BIND_LOCAL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GModuleFlags.G_MODULE_BIND_MASK = 3;
     * }
     */
    public static int G_MODULE_BIND_MASK() {
        return (int)3L;
    }
    public static MethodHandle g_module_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1121.const$5,"g_module_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int g_module_error_quark();
     * }
     */
    public static int g_module_error_quark() {
        var mh$ = g_module_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GModuleError.G_MODULE_ERROR_FAILED = 0;
     * }
     */
    public static int G_MODULE_ERROR_FAILED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GModuleError.G_MODULE_ERROR_CHECK_FAILED = 1;
     * }
     */
    public static int G_MODULE_ERROR_CHECK_FAILED() {
        return (int)1L;
    }
    public static MethodHandle g_module_supported$MH() {
        return RuntimeHelper.requireNonNull(constants$1122.const$0,"g_module_supported");
    }
    /**
     * {@snippet :
     * int g_module_supported();
     * }
     */
    public static int g_module_supported() {
        var mh$ = g_module_supported$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_module_open$MH() {
        return RuntimeHelper.requireNonNull(constants$1122.const$1,"g_module_open");
    }
    /**
     * {@snippet :
     * struct _GModule* g_module_open(char* file_name, enum GModuleFlags flags);
     * }
     */
    public static MemorySegment g_module_open(MemorySegment file_name, int flags) {
        var mh$ = g_module_open$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file_name, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_module_open_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1122.const$2,"g_module_open_full");
    }
    /**
     * {@snippet :
     * struct _GModule* g_module_open_full(char* file_name, enum GModuleFlags flags, struct _GError** error);
     * }
     */
    public static MemorySegment g_module_open_full(MemorySegment file_name, int flags, MemorySegment error) {
        var mh$ = g_module_open_full$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file_name, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_module_close$MH() {
        return RuntimeHelper.requireNonNull(constants$1122.const$3,"g_module_close");
    }
    /**
     * {@snippet :
     * int g_module_close(struct _GModule* module);
     * }
     */
    public static int g_module_close(MemorySegment module) {
        var mh$ = g_module_close$MH();
        try {
            return (int)mh$.invokeExact(module);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_module_make_resident$MH() {
        return RuntimeHelper.requireNonNull(constants$1122.const$4,"g_module_make_resident");
    }
    /**
     * {@snippet :
     * void g_module_make_resident(struct _GModule* module);
     * }
     */
    public static void g_module_make_resident(MemorySegment module) {
        var mh$ = g_module_make_resident$MH();
        try {
            mh$.invokeExact(module);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_module_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1122.const$5,"g_module_error");
    }
    /**
     * {@snippet :
     * char* g_module_error();
     * }
     */
    public static MemorySegment g_module_error() {
        var mh$ = g_module_error$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_module_symbol$MH() {
        return RuntimeHelper.requireNonNull(constants$1123.const$0,"g_module_symbol");
    }
    /**
     * {@snippet :
     * int g_module_symbol(struct _GModule* module, char* symbol_name, void** symbol);
     * }
     */
    public static int g_module_symbol(MemorySegment module, MemorySegment symbol_name, MemorySegment symbol) {
        var mh$ = g_module_symbol$MH();
        try {
            return (int)mh$.invokeExact(module, symbol_name, symbol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_module_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1123.const$1,"g_module_name");
    }
    /**
     * {@snippet :
     * char* g_module_name(struct _GModule* module);
     * }
     */
    public static MemorySegment g_module_name(MemorySegment module) {
        var mh$ = g_module_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(module);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_module_build_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1123.const$2,"g_module_build_path");
    }
    /**
     * {@snippet :
     * char* g_module_build_path(char* directory, char* module_name);
     * }
     */
    public static MemorySegment g_module_build_path(MemorySegment directory, MemorySegment module_name) {
        var mh$ = g_module_build_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(directory, module_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_module_scope_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1123.const$3,"g_io_module_scope_new");
    }
    /**
     * {@snippet :
     * struct _GIOModuleScope* g_io_module_scope_new(enum GIOModuleScopeFlags flags);
     * }
     */
    public static MemorySegment g_io_module_scope_new(int flags) {
        var mh$ = g_io_module_scope_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_module_scope_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1123.const$4,"g_io_module_scope_free");
    }
    /**
     * {@snippet :
     * void g_io_module_scope_free(struct _GIOModuleScope* scope);
     * }
     */
    public static void g_io_module_scope_free(MemorySegment scope) {
        var mh$ = g_io_module_scope_free$MH();
        try {
            mh$.invokeExact(scope);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_module_scope_block$MH() {
        return RuntimeHelper.requireNonNull(constants$1123.const$5,"g_io_module_scope_block");
    }
    /**
     * {@snippet :
     * void g_io_module_scope_block(struct _GIOModuleScope* scope, char* basename);
     * }
     */
    public static void g_io_module_scope_block(MemorySegment scope, MemorySegment basename) {
        var mh$ = g_io_module_scope_block$MH();
        try {
            mh$.invokeExact(scope, basename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_module_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1124.const$0,"g_io_module_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_io_module_get_type();
     * }
     */
    public static long g_io_module_get_type() {
        var mh$ = g_io_module_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_module_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1124.const$1,"g_io_module_new");
    }
    /**
     * {@snippet :
     * struct _GIOModule* g_io_module_new(char* filename);
     * }
     */
    public static MemorySegment g_io_module_new(MemorySegment filename) {
        var mh$ = g_io_module_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_modules_scan_all_in_directory$MH() {
        return RuntimeHelper.requireNonNull(constants$1124.const$2,"g_io_modules_scan_all_in_directory");
    }
    /**
     * {@snippet :
     * void g_io_modules_scan_all_in_directory(char* dirname);
     * }
     */
    public static void g_io_modules_scan_all_in_directory(MemorySegment dirname) {
        var mh$ = g_io_modules_scan_all_in_directory$MH();
        try {
            mh$.invokeExact(dirname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_modules_load_all_in_directory$MH() {
        return RuntimeHelper.requireNonNull(constants$1124.const$3,"g_io_modules_load_all_in_directory");
    }
    /**
     * {@snippet :
     * struct _GList* g_io_modules_load_all_in_directory(char* dirname);
     * }
     */
    public static MemorySegment g_io_modules_load_all_in_directory(MemorySegment dirname) {
        var mh$ = g_io_modules_load_all_in_directory$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(dirname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_modules_scan_all_in_directory_with_scope$MH() {
        return RuntimeHelper.requireNonNull(constants$1124.const$4,"g_io_modules_scan_all_in_directory_with_scope");
    }
    /**
     * {@snippet :
     * void g_io_modules_scan_all_in_directory_with_scope(char* dirname, struct _GIOModuleScope* scope);
     * }
     */
    public static void g_io_modules_scan_all_in_directory_with_scope(MemorySegment dirname, MemorySegment scope) {
        var mh$ = g_io_modules_scan_all_in_directory_with_scope$MH();
        try {
            mh$.invokeExact(dirname, scope);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_modules_load_all_in_directory_with_scope$MH() {
        return RuntimeHelper.requireNonNull(constants$1124.const$5,"g_io_modules_load_all_in_directory_with_scope");
    }
    /**
     * {@snippet :
     * struct _GList* g_io_modules_load_all_in_directory_with_scope(char* dirname, struct _GIOModuleScope* scope);
     * }
     */
    public static MemorySegment g_io_modules_load_all_in_directory_with_scope(MemorySegment dirname, MemorySegment scope) {
        var mh$ = g_io_modules_load_all_in_directory_with_scope$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(dirname, scope);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_extension_point_register$MH() {
        return RuntimeHelper.requireNonNull(constants$1125.const$0,"g_io_extension_point_register");
    }
    /**
     * {@snippet :
     * struct _GIOExtensionPoint* g_io_extension_point_register(char* name);
     * }
     */
    public static MemorySegment g_io_extension_point_register(MemorySegment name) {
        var mh$ = g_io_extension_point_register$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_extension_point_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$1125.const$1,"g_io_extension_point_lookup");
    }
    /**
     * {@snippet :
     * struct _GIOExtensionPoint* g_io_extension_point_lookup(char* name);
     * }
     */
    public static MemorySegment g_io_extension_point_lookup(MemorySegment name) {
        var mh$ = g_io_extension_point_lookup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_extension_point_set_required_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1125.const$2,"g_io_extension_point_set_required_type");
    }
    /**
     * {@snippet :
     * void g_io_extension_point_set_required_type(struct _GIOExtensionPoint* extension_point, unsigned long type);
     * }
     */
    public static void g_io_extension_point_set_required_type(MemorySegment extension_point, long type) {
        var mh$ = g_io_extension_point_set_required_type$MH();
        try {
            mh$.invokeExact(extension_point, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_extension_point_get_required_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1125.const$3,"g_io_extension_point_get_required_type");
    }
    /**
     * {@snippet :
     * unsigned long g_io_extension_point_get_required_type(struct _GIOExtensionPoint* extension_point);
     * }
     */
    public static long g_io_extension_point_get_required_type(MemorySegment extension_point) {
        var mh$ = g_io_extension_point_get_required_type$MH();
        try {
            return (long)mh$.invokeExact(extension_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_extension_point_get_extensions$MH() {
        return RuntimeHelper.requireNonNull(constants$1125.const$4,"g_io_extension_point_get_extensions");
    }
    /**
     * {@snippet :
     * struct _GList* g_io_extension_point_get_extensions(struct _GIOExtensionPoint* extension_point);
     * }
     */
    public static MemorySegment g_io_extension_point_get_extensions(MemorySegment extension_point) {
        var mh$ = g_io_extension_point_get_extensions$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(extension_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_extension_point_get_extension_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1125.const$5,"g_io_extension_point_get_extension_by_name");
    }
    /**
     * {@snippet :
     * struct _GIOExtension* g_io_extension_point_get_extension_by_name(struct _GIOExtensionPoint* extension_point, char* name);
     * }
     */
    public static MemorySegment g_io_extension_point_get_extension_by_name(MemorySegment extension_point, MemorySegment name) {
        var mh$ = g_io_extension_point_get_extension_by_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(extension_point, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_extension_point_implement$MH() {
        return RuntimeHelper.requireNonNull(constants$1126.const$1,"g_io_extension_point_implement");
    }
    /**
     * {@snippet :
     * struct _GIOExtension* g_io_extension_point_implement(char* extension_point_name, unsigned long type, char* extension_name, int priority);
     * }
     */
    public static MemorySegment g_io_extension_point_implement(MemorySegment extension_point_name, long type, MemorySegment extension_name, int priority) {
        var mh$ = g_io_extension_point_implement$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(extension_point_name, type, extension_name, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_extension_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1126.const$2,"g_io_extension_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_io_extension_get_type(struct _GIOExtension* extension);
     * }
     */
    public static long g_io_extension_get_type(MemorySegment extension) {
        var mh$ = g_io_extension_get_type$MH();
        try {
            return (long)mh$.invokeExact(extension);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_extension_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1126.const$3,"g_io_extension_get_name");
    }
    /**
     * {@snippet :
     * char* g_io_extension_get_name(struct _GIOExtension* extension);
     * }
     */
    public static MemorySegment g_io_extension_get_name(MemorySegment extension) {
        var mh$ = g_io_extension_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(extension);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_extension_get_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$1126.const$4,"g_io_extension_get_priority");
    }
    /**
     * {@snippet :
     * int g_io_extension_get_priority(struct _GIOExtension* extension);
     * }
     */
    public static int g_io_extension_get_priority(MemorySegment extension) {
        var mh$ = g_io_extension_get_priority$MH();
        try {
            return (int)mh$.invokeExact(extension);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_extension_ref_class$MH() {
        return RuntimeHelper.requireNonNull(constants$1126.const$5,"g_io_extension_ref_class");
    }
    /**
     * {@snippet :
     * struct _GTypeClass* g_io_extension_ref_class(struct _GIOExtension* extension);
     * }
     */
    public static MemorySegment g_io_extension_ref_class(MemorySegment extension) {
        var mh$ = g_io_extension_ref_class$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(extension);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_module_load$MH() {
        return RuntimeHelper.requireNonNull(constants$1127.const$0,"g_io_module_load");
    }
    /**
     * {@snippet :
     * void g_io_module_load(struct _GIOModule* module);
     * }
     */
    public static void g_io_module_load(MemorySegment module) {
        var mh$ = g_io_module_load$MH();
        try {
            mh$.invokeExact(module);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_module_unload$MH() {
        return RuntimeHelper.requireNonNull(constants$1127.const$1,"g_io_module_unload");
    }
    /**
     * {@snippet :
     * void g_io_module_unload(struct _GIOModule* module);
     * }
     */
    public static void g_io_module_unload(MemorySegment module) {
        var mh$ = g_io_module_unload$MH();
        try {
            mh$.invokeExact(module);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_module_query$MH() {
        return RuntimeHelper.requireNonNull(constants$1127.const$2,"g_io_module_query");
    }
    /**
     * {@snippet :
     * char** g_io_module_query();
     * }
     */
    public static MemorySegment g_io_module_query() {
        var mh$ = g_io_module_query$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_scheduler_push_job$MH() {
        return RuntimeHelper.requireNonNull(constants$1127.const$6,"g_io_scheduler_push_job");
    }
    /**
     * {@snippet :
     * void g_io_scheduler_push_job(int (*job_func)(struct _GIOSchedulerJob*,struct _GCancellable*,void*), void* user_data, void (*notify)(void*), int io_priority, struct _GCancellable* cancellable);
     * }
     */
    public static void g_io_scheduler_push_job(MemorySegment job_func, MemorySegment user_data, MemorySegment notify, int io_priority, MemorySegment cancellable) {
        var mh$ = g_io_scheduler_push_job$MH();
        try {
            mh$.invokeExact(job_func, user_data, notify, io_priority, cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_scheduler_cancel_all_jobs$MH() {
        return RuntimeHelper.requireNonNull(constants$1128.const$0,"g_io_scheduler_cancel_all_jobs");
    }
    /**
     * {@snippet :
     * void g_io_scheduler_cancel_all_jobs();
     * }
     */
    public static void g_io_scheduler_cancel_all_jobs() {
        var mh$ = g_io_scheduler_cancel_all_jobs$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_scheduler_job_send_to_mainloop$MH() {
        return RuntimeHelper.requireNonNull(constants$1128.const$3,"g_io_scheduler_job_send_to_mainloop");
    }
    /**
     * {@snippet :
     * int g_io_scheduler_job_send_to_mainloop(struct _GIOSchedulerJob* job, int (*func)(void*), void* user_data, void (*notify)(void*));
     * }
     */
    public static int g_io_scheduler_job_send_to_mainloop(MemorySegment job, MemorySegment func, MemorySegment user_data, MemorySegment notify) {
        var mh$ = g_io_scheduler_job_send_to_mainloop$MH();
        try {
            return (int)mh$.invokeExact(job, func, user_data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_scheduler_job_send_to_mainloop_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1129.const$0,"g_io_scheduler_job_send_to_mainloop_async");
    }
    /**
     * {@snippet :
     * void g_io_scheduler_job_send_to_mainloop_async(struct _GIOSchedulerJob* job, int (*func)(void*), void* user_data, void (*notify)(void*));
     * }
     */
    public static void g_io_scheduler_job_send_to_mainloop_async(MemorySegment job, MemorySegment func, MemorySegment user_data, MemorySegment notify) {
        var mh$ = g_io_scheduler_job_send_to_mainloop_async$MH();
        try {
            mh$.invokeExact(job, func, user_data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_model_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1129.const$1,"g_list_model_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_list_model_get_type();
     * }
     */
    public static long g_list_model_get_type() {
        var mh$ = g_list_model_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GListModel* GListModel_autoptr;
     * }
     */
    public static final AddressLayout GListModel_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GListModel_listautoptr;
     * }
     */
    public static final AddressLayout GListModel_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GListModel_slistautoptr;
     * }
     */
    public static final AddressLayout GListModel_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GListModel_queueautoptr;
     * }
     */
    public static final AddressLayout GListModel_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle g_list_model_get_item_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1130.const$3,"g_list_model_get_item_type");
    }
    /**
     * {@snippet :
     * unsigned long g_list_model_get_item_type(struct _GListModel* list);
     * }
     */
    public static long g_list_model_get_item_type(MemorySegment list) {
        var mh$ = g_list_model_get_item_type$MH();
        try {
            return (long)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_model_get_n_items$MH() {
        return RuntimeHelper.requireNonNull(constants$1130.const$4,"g_list_model_get_n_items");
    }
    /**
     * {@snippet :
     * unsigned int g_list_model_get_n_items(struct _GListModel* list);
     * }
     */
    public static int g_list_model_get_n_items(MemorySegment list) {
        var mh$ = g_list_model_get_n_items$MH();
        try {
            return (int)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_model_get_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1130.const$5,"g_list_model_get_item");
    }
    /**
     * {@snippet :
     * void* g_list_model_get_item(struct _GListModel* list, unsigned int position);
     * }
     */
    public static MemorySegment g_list_model_get_item(MemorySegment list, int position) {
        var mh$ = g_list_model_get_item$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_model_get_object$MH() {
        return RuntimeHelper.requireNonNull(constants$1131.const$0,"g_list_model_get_object");
    }
    /**
     * {@snippet :
     * struct _GObject* g_list_model_get_object(struct _GListModel* list, unsigned int position);
     * }
     */
    public static MemorySegment g_list_model_get_object(MemorySegment list, int position) {
        var mh$ = g_list_model_get_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_model_items_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$1131.const$2,"g_list_model_items_changed");
    }
    /**
     * {@snippet :
     * void g_list_model_items_changed(struct _GListModel* list, unsigned int position, unsigned int removed, unsigned int added);
     * }
     */
    public static void g_list_model_items_changed(MemorySegment list, int position, int removed, int added) {
        var mh$ = g_list_model_items_changed$MH();
        try {
            mh$.invokeExact(list, position, removed, added);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_store_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1131.const$3,"g_list_store_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_list_store_get_type();
     * }
     */
    public static long g_list_store_get_type() {
        var mh$ = g_list_store_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GListStore* GListStore_autoptr;
     * }
     */
    public static final AddressLayout GListStore_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GListStore_listautoptr;
     * }
     */
    public static final AddressLayout GListStore_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GListStore_slistautoptr;
     * }
     */
    public static final AddressLayout GListStore_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GListStore_queueautoptr;
     * }
     */
    public static final AddressLayout GListStore_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct GListStoreClass* GListStoreClass_autoptr;
     * }
     */
    public static final AddressLayout GListStoreClass_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GListStoreClass_listautoptr;
     * }
     */
    public static final AddressLayout GListStoreClass_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GListStoreClass_slistautoptr;
     * }
     */
    public static final AddressLayout GListStoreClass_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GListStoreClass_queueautoptr;
     * }
     */
    public static final AddressLayout GListStoreClass_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle g_list_store_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1131.const$5,"g_list_store_new");
    }
    /**
     * {@snippet :
     * struct _GListStore* g_list_store_new(unsigned long item_type);
     * }
     */
    public static MemorySegment g_list_store_new(long item_type) {
        var mh$ = g_list_store_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(item_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_store_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$1132.const$0,"g_list_store_insert");
    }
    /**
     * {@snippet :
     * void g_list_store_insert(struct _GListStore* store, unsigned int position, void* item);
     * }
     */
    public static void g_list_store_insert(MemorySegment store, int position, MemorySegment item) {
        var mh$ = g_list_store_insert$MH();
        try {
            mh$.invokeExact(store, position, item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_store_insert_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$1132.const$2,"g_list_store_insert_sorted");
    }
    /**
     * {@snippet :
     * unsigned int g_list_store_insert_sorted(struct _GListStore* store, void* item, int (*compare_func)(void*,void*,void*), void* user_data);
     * }
     */
    public static int g_list_store_insert_sorted(MemorySegment store, MemorySegment item, MemorySegment compare_func, MemorySegment user_data) {
        var mh$ = g_list_store_insert_sorted$MH();
        try {
            return (int)mh$.invokeExact(store, item, compare_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_store_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$1132.const$4,"g_list_store_sort");
    }
    /**
     * {@snippet :
     * void g_list_store_sort(struct _GListStore* store, int (*compare_func)(void*,void*,void*), void* user_data);
     * }
     */
    public static void g_list_store_sort(MemorySegment store, MemorySegment compare_func, MemorySegment user_data) {
        var mh$ = g_list_store_sort$MH();
        try {
            mh$.invokeExact(store, compare_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_store_append$MH() {
        return RuntimeHelper.requireNonNull(constants$1132.const$5,"g_list_store_append");
    }
    /**
     * {@snippet :
     * void g_list_store_append(struct _GListStore* store, void* item);
     * }
     */
    public static void g_list_store_append(MemorySegment store, MemorySegment item) {
        var mh$ = g_list_store_append$MH();
        try {
            mh$.invokeExact(store, item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_store_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1133.const$0,"g_list_store_remove");
    }
    /**
     * {@snippet :
     * void g_list_store_remove(struct _GListStore* store, unsigned int position);
     * }
     */
    public static void g_list_store_remove(MemorySegment store, int position) {
        var mh$ = g_list_store_remove$MH();
        try {
            mh$.invokeExact(store, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_store_remove_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1133.const$1,"g_list_store_remove_all");
    }
    /**
     * {@snippet :
     * void g_list_store_remove_all(struct _GListStore* store);
     * }
     */
    public static void g_list_store_remove_all(MemorySegment store) {
        var mh$ = g_list_store_remove_all$MH();
        try {
            mh$.invokeExact(store);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_store_splice$MH() {
        return RuntimeHelper.requireNonNull(constants$1133.const$3,"g_list_store_splice");
    }
    /**
     * {@snippet :
     * void g_list_store_splice(struct _GListStore* store, unsigned int position, unsigned int n_removals, void** additions, unsigned int n_additions);
     * }
     */
    public static void g_list_store_splice(MemorySegment store, int position, int n_removals, MemorySegment additions, int n_additions) {
        var mh$ = g_list_store_splice$MH();
        try {
            mh$.invokeExact(store, position, n_removals, additions, n_additions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_store_find$MH() {
        return RuntimeHelper.requireNonNull(constants$1133.const$4,"g_list_store_find");
    }
    /**
     * {@snippet :
     * int g_list_store_find(struct _GListStore* store, void* item, unsigned int* position);
     * }
     */
    public static int g_list_store_find(MemorySegment store, MemorySegment item, MemorySegment position) {
        var mh$ = g_list_store_find$MH();
        try {
            return (int)mh$.invokeExact(store, item, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_store_find_with_equal_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1134.const$0,"g_list_store_find_with_equal_func");
    }
    /**
     * {@snippet :
     * int g_list_store_find_with_equal_func(struct _GListStore* store, void* item, int (*equal_func)(void*,void*), unsigned int* position);
     * }
     */
    public static int g_list_store_find_with_equal_func(MemorySegment store, MemorySegment item, MemorySegment equal_func, MemorySegment position) {
        var mh$ = g_list_store_find_with_equal_func$MH();
        try {
            return (int)mh$.invokeExact(store, item, equal_func, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_store_find_with_equal_func_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1134.const$2,"g_list_store_find_with_equal_func_full");
    }
    /**
     * {@snippet :
     * int g_list_store_find_with_equal_func_full(struct _GListStore* store, void* item, int (*equal_func)(void*,void*,void*), void* user_data, unsigned int* position);
     * }
     */
    public static int g_list_store_find_with_equal_func_full(MemorySegment store, MemorySegment item, MemorySegment equal_func, MemorySegment user_data, MemorySegment position) {
        var mh$ = g_list_store_find_with_equal_func_full$MH();
        try {
            return (int)mh$.invokeExact(store, item, equal_func, user_data, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_loadable_icon_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1135.const$5,"g_loadable_icon_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_loadable_icon_get_type();
     * }
     */
    public static long g_loadable_icon_get_type() {
        var mh$ = g_loadable_icon_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_loadable_icon_load$MH() {
        return RuntimeHelper.requireNonNull(constants$1136.const$0,"g_loadable_icon_load");
    }
    /**
     * {@snippet :
     * struct _GInputStream* g_loadable_icon_load(struct _GLoadableIcon* icon, int size, char** type, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_loadable_icon_load(MemorySegment icon, int size, MemorySegment type, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_loadable_icon_load$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon, size, type, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_loadable_icon_load_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1136.const$2,"g_loadable_icon_load_async");
    }
    /**
     * {@snippet :
     * void g_loadable_icon_load_async(struct _GLoadableIcon* icon, int size, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_loadable_icon_load_async(MemorySegment icon, int size, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_loadable_icon_load_async$MH();
        try {
            mh$.invokeExact(icon, size, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_loadable_icon_load_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1136.const$3,"g_loadable_icon_load_finish");
    }
    /**
     * {@snippet :
     * struct _GInputStream* g_loadable_icon_load_finish(struct _GLoadableIcon* icon, struct _GAsyncResult* res, char** type, struct _GError** error);
     * }
     */
    public static MemorySegment g_loadable_icon_load_finish(MemorySegment icon, MemorySegment res, MemorySegment type, MemorySegment error) {
        var mh$ = g_loadable_icon_load_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon, res, type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_memory_input_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1138.const$5,"g_memory_input_stream_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_memory_input_stream_get_type();
     * }
     */
    public static long g_memory_input_stream_get_type() {
        var mh$ = g_memory_input_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_memory_input_stream_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1139.const$0,"g_memory_input_stream_new");
    }
    /**
     * {@snippet :
     * struct _GInputStream* g_memory_input_stream_new();
     * }
     */
    public static MemorySegment g_memory_input_stream_new() {
        var mh$ = g_memory_input_stream_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_memory_input_stream_new_from_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1139.const$2,"g_memory_input_stream_new_from_data");
    }
    /**
     * {@snippet :
     * struct _GInputStream* g_memory_input_stream_new_from_data(void* data, long len, void (*destroy)(void*));
     * }
     */
    public static MemorySegment g_memory_input_stream_new_from_data(MemorySegment data, long len, MemorySegment destroy) {
        var mh$ = g_memory_input_stream_new_from_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(data, len, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_memory_input_stream_new_from_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1139.const$3,"g_memory_input_stream_new_from_bytes");
    }
    /**
     * {@snippet :
     * struct _GInputStream* g_memory_input_stream_new_from_bytes(struct _GBytes* bytes);
     * }
     */
    public static MemorySegment g_memory_input_stream_new_from_bytes(MemorySegment bytes) {
        var mh$ = g_memory_input_stream_new_from_bytes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_memory_input_stream_add_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1139.const$6,"g_memory_input_stream_add_data");
    }
    /**
     * {@snippet :
     * void g_memory_input_stream_add_data(struct _GMemoryInputStream* stream, void* data, long len, void (*destroy)(void*));
     * }
     */
    public static void g_memory_input_stream_add_data(MemorySegment stream, MemorySegment data, long len, MemorySegment destroy) {
        var mh$ = g_memory_input_stream_add_data$MH();
        try {
            mh$.invokeExact(stream, data, len, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_memory_input_stream_add_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1140.const$0,"g_memory_input_stream_add_bytes");
    }
    /**
     * {@snippet :
     * void g_memory_input_stream_add_bytes(struct _GMemoryInputStream* stream, struct _GBytes* bytes);
     * }
     */
    public static void g_memory_input_stream_add_bytes(MemorySegment stream, MemorySegment bytes) {
        var mh$ = g_memory_input_stream_add_bytes$MH();
        try {
            mh$.invokeExact(stream, bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_memory_monitor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1140.const$1,"g_memory_monitor_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_memory_monitor_get_type();
     * }
     */
    public static long g_memory_monitor_get_type() {
        var mh$ = g_memory_monitor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GMemoryMonitor* GMemoryMonitor_autoptr;
     * }
     */
    public static final AddressLayout GMemoryMonitor_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMemoryMonitor_listautoptr;
     * }
     */
    public static final AddressLayout GMemoryMonitor_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMemoryMonitor_slistautoptr;
     * }
     */
    public static final AddressLayout GMemoryMonitor_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMemoryMonitor_queueautoptr;
     * }
     */
    public static final AddressLayout GMemoryMonitor_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle g_memory_monitor_dup_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1140.const$5,"g_memory_monitor_dup_default");
    }
    /**
     * {@snippet :
     * struct _GMemoryMonitor* g_memory_monitor_dup_default();
     * }
     */
    public static MemorySegment g_memory_monitor_dup_default() {
        var mh$ = g_memory_monitor_dup_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_memory_output_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1143.const$2,"g_memory_output_stream_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_memory_output_stream_get_type();
     * }
     */
    public static long g_memory_output_stream_get_type() {
        var mh$ = g_memory_output_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_memory_output_stream_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1143.const$5,"g_memory_output_stream_new");
    }
    /**
     * {@snippet :
     * struct _GOutputStream* g_memory_output_stream_new(void* data, unsigned long size, void* (*realloc_function)(void*,unsigned long), void (*destroy_function)(void*));
     * }
     */
    public static MemorySegment g_memory_output_stream_new(MemorySegment data, long size, MemorySegment realloc_function, MemorySegment destroy_function) {
        var mh$ = g_memory_output_stream_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(data, size, realloc_function, destroy_function);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_memory_output_stream_new_resizable$MH() {
        return RuntimeHelper.requireNonNull(constants$1144.const$0,"g_memory_output_stream_new_resizable");
    }
    /**
     * {@snippet :
     * struct _GOutputStream* g_memory_output_stream_new_resizable();
     * }
     */
    public static MemorySegment g_memory_output_stream_new_resizable() {
        var mh$ = g_memory_output_stream_new_resizable$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_memory_output_stream_get_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1144.const$1,"g_memory_output_stream_get_data");
    }
    /**
     * {@snippet :
     * void* g_memory_output_stream_get_data(struct _GMemoryOutputStream* ostream);
     * }
     */
    public static MemorySegment g_memory_output_stream_get_data(MemorySegment ostream) {
        var mh$ = g_memory_output_stream_get_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(ostream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_memory_output_stream_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1144.const$2,"g_memory_output_stream_get_size");
    }
    /**
     * {@snippet :
     * unsigned long g_memory_output_stream_get_size(struct _GMemoryOutputStream* ostream);
     * }
     */
    public static long g_memory_output_stream_get_size(MemorySegment ostream) {
        var mh$ = g_memory_output_stream_get_size$MH();
        try {
            return (long)mh$.invokeExact(ostream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_memory_output_stream_get_data_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1144.const$3,"g_memory_output_stream_get_data_size");
    }
    /**
     * {@snippet :
     * unsigned long g_memory_output_stream_get_data_size(struct _GMemoryOutputStream* ostream);
     * }
     */
    public static long g_memory_output_stream_get_data_size(MemorySegment ostream) {
        var mh$ = g_memory_output_stream_get_data_size$MH();
        try {
            return (long)mh$.invokeExact(ostream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_memory_output_stream_steal_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1144.const$4,"g_memory_output_stream_steal_data");
    }
    /**
     * {@snippet :
     * void* g_memory_output_stream_steal_data(struct _GMemoryOutputStream* ostream);
     * }
     */
    public static MemorySegment g_memory_output_stream_steal_data(MemorySegment ostream) {
        var mh$ = g_memory_output_stream_steal_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(ostream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_memory_output_stream_steal_as_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1144.const$5,"g_memory_output_stream_steal_as_bytes");
    }
    /**
     * {@snippet :
     * struct _GBytes* g_memory_output_stream_steal_as_bytes(struct _GMemoryOutputStream* ostream);
     * }
     */
    public static MemorySegment g_memory_output_stream_steal_as_bytes(MemorySegment ostream) {
        var mh$ = g_memory_output_stream_steal_as_bytes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(ostream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_model_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1148.const$1,"g_menu_model_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_menu_model_get_type();
     * }
     */
    public static long g_menu_model_get_type() {
        var mh$ = g_menu_model_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_model_is_mutable$MH() {
        return RuntimeHelper.requireNonNull(constants$1148.const$2,"g_menu_model_is_mutable");
    }
    /**
     * {@snippet :
     * int g_menu_model_is_mutable(struct _GMenuModel* model);
     * }
     */
    public static int g_menu_model_is_mutable(MemorySegment model) {
        var mh$ = g_menu_model_is_mutable$MH();
        try {
            return (int)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_model_get_n_items$MH() {
        return RuntimeHelper.requireNonNull(constants$1148.const$3,"g_menu_model_get_n_items");
    }
    /**
     * {@snippet :
     * int g_menu_model_get_n_items(struct _GMenuModel* model);
     * }
     */
    public static int g_menu_model_get_n_items(MemorySegment model) {
        var mh$ = g_menu_model_get_n_items$MH();
        try {
            return (int)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_model_iterate_item_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$1148.const$4,"g_menu_model_iterate_item_attributes");
    }
    /**
     * {@snippet :
     * struct _GMenuAttributeIter* g_menu_model_iterate_item_attributes(struct _GMenuModel* model, int item_index);
     * }
     */
    public static MemorySegment g_menu_model_iterate_item_attributes(MemorySegment model, int item_index) {
        var mh$ = g_menu_model_iterate_item_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model, item_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_model_get_item_attribute_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1148.const$5,"g_menu_model_get_item_attribute_value");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_menu_model_get_item_attribute_value(struct _GMenuModel* model, int item_index, char* attribute, struct _GVariantType* expected_type);
     * }
     */
    public static MemorySegment g_menu_model_get_item_attribute_value(MemorySegment model, int item_index, MemorySegment attribute, MemorySegment expected_type) {
        var mh$ = g_menu_model_get_item_attribute_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model, item_index, attribute, expected_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_model_get_item_attribute$MH() {
        return RuntimeHelper.requireNonNull(constants$1149.const$0,"g_menu_model_get_item_attribute");
    }
    /**
     * {@snippet :
     * int g_menu_model_get_item_attribute(struct _GMenuModel* model, int item_index, char* attribute, char* format_string,...);
     * }
     */
    public static int g_menu_model_get_item_attribute(MemorySegment model, int item_index, MemorySegment attribute, MemorySegment format_string, Object... x4) {
        var mh$ = g_menu_model_get_item_attribute$MH();
        try {
            return (int)mh$.invokeExact(model, item_index, attribute, format_string, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_model_iterate_item_links$MH() {
        return RuntimeHelper.requireNonNull(constants$1149.const$1,"g_menu_model_iterate_item_links");
    }
    /**
     * {@snippet :
     * struct _GMenuLinkIter* g_menu_model_iterate_item_links(struct _GMenuModel* model, int item_index);
     * }
     */
    public static MemorySegment g_menu_model_iterate_item_links(MemorySegment model, int item_index) {
        var mh$ = g_menu_model_iterate_item_links$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model, item_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_model_get_item_link$MH() {
        return RuntimeHelper.requireNonNull(constants$1149.const$2,"g_menu_model_get_item_link");
    }
    /**
     * {@snippet :
     * struct _GMenuModel* g_menu_model_get_item_link(struct _GMenuModel* model, int item_index, char* link);
     * }
     */
    public static MemorySegment g_menu_model_get_item_link(MemorySegment model, int item_index, MemorySegment link) {
        var mh$ = g_menu_model_get_item_link$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model, item_index, link);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_model_items_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$1149.const$3,"g_menu_model_items_changed");
    }
    /**
     * {@snippet :
     * void g_menu_model_items_changed(struct _GMenuModel* model, int position, int removed, int added);
     * }
     */
    public static void g_menu_model_items_changed(MemorySegment model, int position, int removed, int added) {
        var mh$ = g_menu_model_items_changed$MH();
        try {
            mh$.invokeExact(model, position, removed, added);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_attribute_iter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1150.const$3,"g_menu_attribute_iter_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_menu_attribute_iter_get_type();
     * }
     */
    public static long g_menu_attribute_iter_get_type() {
        var mh$ = g_menu_attribute_iter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_attribute_iter_get_next$MH() {
        return RuntimeHelper.requireNonNull(constants$1150.const$4,"g_menu_attribute_iter_get_next");
    }
    /**
     * {@snippet :
     * int g_menu_attribute_iter_get_next(struct _GMenuAttributeIter* iter, char** out_name, struct _GVariant** value);
     * }
     */
    public static int g_menu_attribute_iter_get_next(MemorySegment iter, MemorySegment out_name, MemorySegment value) {
        var mh$ = g_menu_attribute_iter_get_next$MH();
        try {
            return (int)mh$.invokeExact(iter, out_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_attribute_iter_next$MH() {
        return RuntimeHelper.requireNonNull(constants$1150.const$5,"g_menu_attribute_iter_next");
    }
    /**
     * {@snippet :
     * int g_menu_attribute_iter_next(struct _GMenuAttributeIter* iter);
     * }
     */
    public static int g_menu_attribute_iter_next(MemorySegment iter) {
        var mh$ = g_menu_attribute_iter_next$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_attribute_iter_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1151.const$0,"g_menu_attribute_iter_get_name");
    }
    /**
     * {@snippet :
     * char* g_menu_attribute_iter_get_name(struct _GMenuAttributeIter* iter);
     * }
     */
    public static MemorySegment g_menu_attribute_iter_get_name(MemorySegment iter) {
        var mh$ = g_menu_attribute_iter_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_attribute_iter_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1151.const$1,"g_menu_attribute_iter_get_value");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_menu_attribute_iter_get_value(struct _GMenuAttributeIter* iter);
     * }
     */
    public static MemorySegment g_menu_attribute_iter_get_value(MemorySegment iter) {
        var mh$ = g_menu_attribute_iter_get_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_link_iter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1152.const$1,"g_menu_link_iter_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_menu_link_iter_get_type();
     * }
     */
    public static long g_menu_link_iter_get_type() {
        var mh$ = g_menu_link_iter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_link_iter_get_next$MH() {
        return RuntimeHelper.requireNonNull(constants$1152.const$2,"g_menu_link_iter_get_next");
    }
    /**
     * {@snippet :
     * int g_menu_link_iter_get_next(struct _GMenuLinkIter* iter, char** out_link, struct _GMenuModel** value);
     * }
     */
    public static int g_menu_link_iter_get_next(MemorySegment iter, MemorySegment out_link, MemorySegment value) {
        var mh$ = g_menu_link_iter_get_next$MH();
        try {
            return (int)mh$.invokeExact(iter, out_link, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_link_iter_next$MH() {
        return RuntimeHelper.requireNonNull(constants$1152.const$3,"g_menu_link_iter_next");
    }
    /**
     * {@snippet :
     * int g_menu_link_iter_next(struct _GMenuLinkIter* iter);
     * }
     */
    public static int g_menu_link_iter_next(MemorySegment iter) {
        var mh$ = g_menu_link_iter_next$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_link_iter_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1152.const$4,"g_menu_link_iter_get_name");
    }
    /**
     * {@snippet :
     * char* g_menu_link_iter_get_name(struct _GMenuLinkIter* iter);
     * }
     */
    public static MemorySegment g_menu_link_iter_get_name(MemorySegment iter) {
        var mh$ = g_menu_link_iter_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_link_iter_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1152.const$5,"g_menu_link_iter_get_value");
    }
    /**
     * {@snippet :
     * struct _GMenuModel* g_menu_link_iter_get_value(struct _GMenuLinkIter* iter);
     * }
     */
    public static MemorySegment g_menu_link_iter_get_value(MemorySegment iter) {
        var mh$ = g_menu_link_iter_get_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1153.const$0,"g_menu_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_menu_get_type();
     * }
     */
    public static long g_menu_get_type() {
        var mh$ = g_menu_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1153.const$1,"g_menu_new");
    }
    /**
     * {@snippet :
     * struct _GMenu* g_menu_new();
     * }
     */
    public static MemorySegment g_menu_new() {
        var mh$ = g_menu_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_freeze$MH() {
        return RuntimeHelper.requireNonNull(constants$1153.const$2,"g_menu_freeze");
    }
    /**
     * {@snippet :
     * void g_menu_freeze(struct _GMenu* menu);
     * }
     */
    public static void g_menu_freeze(MemorySegment menu) {
        var mh$ = g_menu_freeze$MH();
        try {
            mh$.invokeExact(menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_insert_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1153.const$3,"g_menu_insert_item");
    }
    /**
     * {@snippet :
     * void g_menu_insert_item(struct _GMenu* menu, int position, struct _GMenuItem* item);
     * }
     */
    public static void g_menu_insert_item(MemorySegment menu, int position, MemorySegment item) {
        var mh$ = g_menu_insert_item$MH();
        try {
            mh$.invokeExact(menu, position, item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_prepend_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1153.const$4,"g_menu_prepend_item");
    }
    /**
     * {@snippet :
     * void g_menu_prepend_item(struct _GMenu* menu, struct _GMenuItem* item);
     * }
     */
    public static void g_menu_prepend_item(MemorySegment menu, MemorySegment item) {
        var mh$ = g_menu_prepend_item$MH();
        try {
            mh$.invokeExact(menu, item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_append_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1153.const$5,"g_menu_append_item");
    }
    /**
     * {@snippet :
     * void g_menu_append_item(struct _GMenu* menu, struct _GMenuItem* item);
     * }
     */
    public static void g_menu_append_item(MemorySegment menu, MemorySegment item) {
        var mh$ = g_menu_append_item$MH();
        try {
            mh$.invokeExact(menu, item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1154.const$0,"g_menu_remove");
    }
    /**
     * {@snippet :
     * void g_menu_remove(struct _GMenu* menu, int position);
     * }
     */
    public static void g_menu_remove(MemorySegment menu, int position) {
        var mh$ = g_menu_remove$MH();
        try {
            mh$.invokeExact(menu, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_remove_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1154.const$1,"g_menu_remove_all");
    }
    /**
     * {@snippet :
     * void g_menu_remove_all(struct _GMenu* menu);
     * }
     */
    public static void g_menu_remove_all(MemorySegment menu) {
        var mh$ = g_menu_remove_all$MH();
        try {
            mh$.invokeExact(menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$1154.const$2,"g_menu_insert");
    }
    /**
     * {@snippet :
     * void g_menu_insert(struct _GMenu* menu, int position, char* label, char* detailed_action);
     * }
     */
    public static void g_menu_insert(MemorySegment menu, int position, MemorySegment label, MemorySegment detailed_action) {
        var mh$ = g_menu_insert$MH();
        try {
            mh$.invokeExact(menu, position, label, detailed_action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$1154.const$3,"g_menu_prepend");
    }
    /**
     * {@snippet :
     * void g_menu_prepend(struct _GMenu* menu, char* label, char* detailed_action);
     * }
     */
    public static void g_menu_prepend(MemorySegment menu, MemorySegment label, MemorySegment detailed_action) {
        var mh$ = g_menu_prepend$MH();
        try {
            mh$.invokeExact(menu, label, detailed_action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_append$MH() {
        return RuntimeHelper.requireNonNull(constants$1154.const$4,"g_menu_append");
    }
    /**
     * {@snippet :
     * void g_menu_append(struct _GMenu* menu, char* label, char* detailed_action);
     * }
     */
    public static void g_menu_append(MemorySegment menu, MemorySegment label, MemorySegment detailed_action) {
        var mh$ = g_menu_append$MH();
        try {
            mh$.invokeExact(menu, label, detailed_action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_insert_section$MH() {
        return RuntimeHelper.requireNonNull(constants$1154.const$5,"g_menu_insert_section");
    }
    /**
     * {@snippet :
     * void g_menu_insert_section(struct _GMenu* menu, int position, char* label, struct _GMenuModel* section);
     * }
     */
    public static void g_menu_insert_section(MemorySegment menu, int position, MemorySegment label, MemorySegment section) {
        var mh$ = g_menu_insert_section$MH();
        try {
            mh$.invokeExact(menu, position, label, section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_prepend_section$MH() {
        return RuntimeHelper.requireNonNull(constants$1155.const$0,"g_menu_prepend_section");
    }
    /**
     * {@snippet :
     * void g_menu_prepend_section(struct _GMenu* menu, char* label, struct _GMenuModel* section);
     * }
     */
    public static void g_menu_prepend_section(MemorySegment menu, MemorySegment label, MemorySegment section) {
        var mh$ = g_menu_prepend_section$MH();
        try {
            mh$.invokeExact(menu, label, section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_append_section$MH() {
        return RuntimeHelper.requireNonNull(constants$1155.const$1,"g_menu_append_section");
    }
    /**
     * {@snippet :
     * void g_menu_append_section(struct _GMenu* menu, char* label, struct _GMenuModel* section);
     * }
     */
    public static void g_menu_append_section(MemorySegment menu, MemorySegment label, MemorySegment section) {
        var mh$ = g_menu_append_section$MH();
        try {
            mh$.invokeExact(menu, label, section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_insert_submenu$MH() {
        return RuntimeHelper.requireNonNull(constants$1155.const$2,"g_menu_insert_submenu");
    }
    /**
     * {@snippet :
     * void g_menu_insert_submenu(struct _GMenu* menu, int position, char* label, struct _GMenuModel* submenu);
     * }
     */
    public static void g_menu_insert_submenu(MemorySegment menu, int position, MemorySegment label, MemorySegment submenu) {
        var mh$ = g_menu_insert_submenu$MH();
        try {
            mh$.invokeExact(menu, position, label, submenu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_prepend_submenu$MH() {
        return RuntimeHelper.requireNonNull(constants$1155.const$3,"g_menu_prepend_submenu");
    }
    /**
     * {@snippet :
     * void g_menu_prepend_submenu(struct _GMenu* menu, char* label, struct _GMenuModel* submenu);
     * }
     */
    public static void g_menu_prepend_submenu(MemorySegment menu, MemorySegment label, MemorySegment submenu) {
        var mh$ = g_menu_prepend_submenu$MH();
        try {
            mh$.invokeExact(menu, label, submenu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_append_submenu$MH() {
        return RuntimeHelper.requireNonNull(constants$1155.const$4,"g_menu_append_submenu");
    }
    /**
     * {@snippet :
     * void g_menu_append_submenu(struct _GMenu* menu, char* label, struct _GMenuModel* submenu);
     * }
     */
    public static void g_menu_append_submenu(MemorySegment menu, MemorySegment label, MemorySegment submenu) {
        var mh$ = g_menu_append_submenu$MH();
        try {
            mh$.invokeExact(menu, label, submenu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_item_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1155.const$5,"g_menu_item_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_menu_item_get_type();
     * }
     */
    public static long g_menu_item_get_type() {
        var mh$ = g_menu_item_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_item_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1156.const$0,"g_menu_item_new");
    }
    /**
     * {@snippet :
     * struct _GMenuItem* g_menu_item_new(char* label, char* detailed_action);
     * }
     */
    public static MemorySegment g_menu_item_new(MemorySegment label, MemorySegment detailed_action) {
        var mh$ = g_menu_item_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label, detailed_action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_item_new_from_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1156.const$1,"g_menu_item_new_from_model");
    }
    /**
     * {@snippet :
     * struct _GMenuItem* g_menu_item_new_from_model(struct _GMenuModel* model, int item_index);
     * }
     */
    public static MemorySegment g_menu_item_new_from_model(MemorySegment model, int item_index) {
        var mh$ = g_menu_item_new_from_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model, item_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_item_new_submenu$MH() {
        return RuntimeHelper.requireNonNull(constants$1156.const$2,"g_menu_item_new_submenu");
    }
    /**
     * {@snippet :
     * struct _GMenuItem* g_menu_item_new_submenu(char* label, struct _GMenuModel* submenu);
     * }
     */
    public static MemorySegment g_menu_item_new_submenu(MemorySegment label, MemorySegment submenu) {
        var mh$ = g_menu_item_new_submenu$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label, submenu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_item_new_section$MH() {
        return RuntimeHelper.requireNonNull(constants$1156.const$3,"g_menu_item_new_section");
    }
    /**
     * {@snippet :
     * struct _GMenuItem* g_menu_item_new_section(char* label, struct _GMenuModel* section);
     * }
     */
    public static MemorySegment g_menu_item_new_section(MemorySegment label, MemorySegment section) {
        var mh$ = g_menu_item_new_section$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label, section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_item_get_attribute_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1156.const$4,"g_menu_item_get_attribute_value");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_menu_item_get_attribute_value(struct _GMenuItem* menu_item, char* attribute, struct _GVariantType* expected_type);
     * }
     */
    public static MemorySegment g_menu_item_get_attribute_value(MemorySegment menu_item, MemorySegment attribute, MemorySegment expected_type) {
        var mh$ = g_menu_item_get_attribute_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu_item, attribute, expected_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_item_get_attribute$MH() {
        return RuntimeHelper.requireNonNull(constants$1156.const$5,"g_menu_item_get_attribute");
    }
    /**
     * {@snippet :
     * int g_menu_item_get_attribute(struct _GMenuItem* menu_item, char* attribute, char* format_string,...);
     * }
     */
    public static int g_menu_item_get_attribute(MemorySegment menu_item, MemorySegment attribute, MemorySegment format_string, Object... x3) {
        var mh$ = g_menu_item_get_attribute$MH();
        try {
            return (int)mh$.invokeExact(menu_item, attribute, format_string, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_item_get_link$MH() {
        return RuntimeHelper.requireNonNull(constants$1157.const$0,"g_menu_item_get_link");
    }
    /**
     * {@snippet :
     * struct _GMenuModel* g_menu_item_get_link(struct _GMenuItem* menu_item, char* link);
     * }
     */
    public static MemorySegment g_menu_item_get_link(MemorySegment menu_item, MemorySegment link) {
        var mh$ = g_menu_item_get_link$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu_item, link);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_item_set_attribute_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1157.const$1,"g_menu_item_set_attribute_value");
    }
    /**
     * {@snippet :
     * void g_menu_item_set_attribute_value(struct _GMenuItem* menu_item, char* attribute, struct _GVariant* value);
     * }
     */
    public static void g_menu_item_set_attribute_value(MemorySegment menu_item, MemorySegment attribute, MemorySegment value) {
        var mh$ = g_menu_item_set_attribute_value$MH();
        try {
            mh$.invokeExact(menu_item, attribute, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_item_set_attribute$MH() {
        return RuntimeHelper.requireNonNull(constants$1157.const$2,"g_menu_item_set_attribute");
    }
    /**
     * {@snippet :
     * void g_menu_item_set_attribute(struct _GMenuItem* menu_item, char* attribute, char* format_string,...);
     * }
     */
    public static void g_menu_item_set_attribute(MemorySegment menu_item, MemorySegment attribute, MemorySegment format_string, Object... x3) {
        var mh$ = g_menu_item_set_attribute$MH();
        try {
            mh$.invokeExact(menu_item, attribute, format_string, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_item_set_link$MH() {
        return RuntimeHelper.requireNonNull(constants$1157.const$3,"g_menu_item_set_link");
    }
    /**
     * {@snippet :
     * void g_menu_item_set_link(struct _GMenuItem* menu_item, char* link, struct _GMenuModel* model);
     * }
     */
    public static void g_menu_item_set_link(MemorySegment menu_item, MemorySegment link, MemorySegment model) {
        var mh$ = g_menu_item_set_link$MH();
        try {
            mh$.invokeExact(menu_item, link, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_item_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1157.const$4,"g_menu_item_set_label");
    }
    /**
     * {@snippet :
     * void g_menu_item_set_label(struct _GMenuItem* menu_item, char* label);
     * }
     */
    public static void g_menu_item_set_label(MemorySegment menu_item, MemorySegment label) {
        var mh$ = g_menu_item_set_label$MH();
        try {
            mh$.invokeExact(menu_item, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_item_set_submenu$MH() {
        return RuntimeHelper.requireNonNull(constants$1157.const$5,"g_menu_item_set_submenu");
    }
    /**
     * {@snippet :
     * void g_menu_item_set_submenu(struct _GMenuItem* menu_item, struct _GMenuModel* submenu);
     * }
     */
    public static void g_menu_item_set_submenu(MemorySegment menu_item, MemorySegment submenu) {
        var mh$ = g_menu_item_set_submenu$MH();
        try {
            mh$.invokeExact(menu_item, submenu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_item_set_section$MH() {
        return RuntimeHelper.requireNonNull(constants$1158.const$0,"g_menu_item_set_section");
    }
    /**
     * {@snippet :
     * void g_menu_item_set_section(struct _GMenuItem* menu_item, struct _GMenuModel* section);
     * }
     */
    public static void g_menu_item_set_section(MemorySegment menu_item, MemorySegment section) {
        var mh$ = g_menu_item_set_section$MH();
        try {
            mh$.invokeExact(menu_item, section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_item_set_action_and_target_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1158.const$1,"g_menu_item_set_action_and_target_value");
    }
    /**
     * {@snippet :
     * void g_menu_item_set_action_and_target_value(struct _GMenuItem* menu_item, char* action, struct _GVariant* target_value);
     * }
     */
    public static void g_menu_item_set_action_and_target_value(MemorySegment menu_item, MemorySegment action, MemorySegment target_value) {
        var mh$ = g_menu_item_set_action_and_target_value$MH();
        try {
            mh$.invokeExact(menu_item, action, target_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_item_set_action_and_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1158.const$2,"g_menu_item_set_action_and_target");
    }
    /**
     * {@snippet :
     * void g_menu_item_set_action_and_target(struct _GMenuItem* menu_item, char* action, char* format_string,...);
     * }
     */
    public static void g_menu_item_set_action_and_target(MemorySegment menu_item, MemorySegment action, MemorySegment format_string, Object... x3) {
        var mh$ = g_menu_item_set_action_and_target$MH();
        try {
            mh$.invokeExact(menu_item, action, format_string, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_item_set_detailed_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1158.const$3,"g_menu_item_set_detailed_action");
    }
    /**
     * {@snippet :
     * void g_menu_item_set_detailed_action(struct _GMenuItem* menu_item, char* detailed_action);
     * }
     */
    public static void g_menu_item_set_detailed_action(MemorySegment menu_item, MemorySegment detailed_action) {
        var mh$ = g_menu_item_set_detailed_action$MH();
        try {
            mh$.invokeExact(menu_item, detailed_action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_menu_item_set_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1158.const$4,"g_menu_item_set_icon");
    }
    /**
     * {@snippet :
     * void g_menu_item_set_icon(struct _GMenuItem* menu_item, struct _GIcon* icon);
     * }
     */
    public static void g_menu_item_set_icon(MemorySegment menu_item, MemorySegment icon) {
        var mh$ = g_menu_item_set_icon$MH();
        try {
            mh$.invokeExact(menu_item, icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_export_menu_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1158.const$5,"g_dbus_connection_export_menu_model");
    }
    /**
     * {@snippet :
     * unsigned int g_dbus_connection_export_menu_model(struct _GDBusConnection* connection, char* object_path, struct _GMenuModel* menu, struct _GError** error);
     * }
     */
    public static int g_dbus_connection_export_menu_model(MemorySegment connection, MemorySegment object_path, MemorySegment menu, MemorySegment error) {
        var mh$ = g_dbus_connection_export_menu_model$MH();
        try {
            return (int)mh$.invokeExact(connection, object_path, menu, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dbus_connection_unexport_menu_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1159.const$0,"g_dbus_connection_unexport_menu_model");
    }
    /**
     * {@snippet :
     * void g_dbus_connection_unexport_menu_model(struct _GDBusConnection* connection, unsigned int export_id);
     * }
     */
    public static void g_dbus_connection_unexport_menu_model(MemorySegment connection, int export_id) {
        var mh$ = g_dbus_connection_unexport_menu_model$MH();
        try {
            mh$.invokeExact(connection, export_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1168.const$2,"g_mount_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_mount_get_type();
     * }
     */
    public static long g_mount_get_type() {
        var mh$ = g_mount_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_get_root$MH() {
        return RuntimeHelper.requireNonNull(constants$1168.const$3,"g_mount_get_root");
    }
    /**
     * {@snippet :
     * struct _GFile* g_mount_get_root(struct _GMount* mount);
     * }
     */
    public static MemorySegment g_mount_get_root(MemorySegment mount) {
        var mh$ = g_mount_get_root$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_get_default_location$MH() {
        return RuntimeHelper.requireNonNull(constants$1168.const$4,"g_mount_get_default_location");
    }
    /**
     * {@snippet :
     * struct _GFile* g_mount_get_default_location(struct _GMount* mount);
     * }
     */
    public static MemorySegment g_mount_get_default_location(MemorySegment mount) {
        var mh$ = g_mount_get_default_location$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1168.const$5,"g_mount_get_name");
    }
    /**
     * {@snippet :
     * char* g_mount_get_name(struct _GMount* mount);
     * }
     */
    public static MemorySegment g_mount_get_name(MemorySegment mount) {
        var mh$ = g_mount_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_get_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1169.const$0,"g_mount_get_icon");
    }
    /**
     * {@snippet :
     * struct _GIcon* g_mount_get_icon(struct _GMount* mount);
     * }
     */
    public static MemorySegment g_mount_get_icon(MemorySegment mount) {
        var mh$ = g_mount_get_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_get_symbolic_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1169.const$1,"g_mount_get_symbolic_icon");
    }
    /**
     * {@snippet :
     * struct _GIcon* g_mount_get_symbolic_icon(struct _GMount* mount);
     * }
     */
    public static MemorySegment g_mount_get_symbolic_icon(MemorySegment mount) {
        var mh$ = g_mount_get_symbolic_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_get_uuid$MH() {
        return RuntimeHelper.requireNonNull(constants$1169.const$2,"g_mount_get_uuid");
    }
    /**
     * {@snippet :
     * char* g_mount_get_uuid(struct _GMount* mount);
     * }
     */
    public static MemorySegment g_mount_get_uuid(MemorySegment mount) {
        var mh$ = g_mount_get_uuid$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_get_volume$MH() {
        return RuntimeHelper.requireNonNull(constants$1169.const$3,"g_mount_get_volume");
    }
    /**
     * {@snippet :
     * struct _GVolume* g_mount_get_volume(struct _GMount* mount);
     * }
     */
    public static MemorySegment g_mount_get_volume(MemorySegment mount) {
        var mh$ = g_mount_get_volume$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_get_drive$MH() {
        return RuntimeHelper.requireNonNull(constants$1169.const$4,"g_mount_get_drive");
    }
    /**
     * {@snippet :
     * struct _GDrive* g_mount_get_drive(struct _GMount* mount);
     * }
     */
    public static MemorySegment g_mount_get_drive(MemorySegment mount) {
        var mh$ = g_mount_get_drive$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_can_unmount$MH() {
        return RuntimeHelper.requireNonNull(constants$1169.const$5,"g_mount_can_unmount");
    }
    /**
     * {@snippet :
     * int g_mount_can_unmount(struct _GMount* mount);
     * }
     */
    public static int g_mount_can_unmount(MemorySegment mount) {
        var mh$ = g_mount_can_unmount$MH();
        try {
            return (int)mh$.invokeExact(mount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_can_eject$MH() {
        return RuntimeHelper.requireNonNull(constants$1170.const$0,"g_mount_can_eject");
    }
    /**
     * {@snippet :
     * int g_mount_can_eject(struct _GMount* mount);
     * }
     */
    public static int g_mount_can_eject(MemorySegment mount) {
        var mh$ = g_mount_can_eject$MH();
        try {
            return (int)mh$.invokeExact(mount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_unmount$MH() {
        return RuntimeHelper.requireNonNull(constants$1170.const$2,"g_mount_unmount");
    }
    /**
     * {@snippet :
     * void g_mount_unmount(struct _GMount* mount, enum GMountUnmountFlags flags, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_mount_unmount(MemorySegment mount, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_mount_unmount$MH();
        try {
            mh$.invokeExact(mount, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_unmount_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1170.const$3,"g_mount_unmount_finish");
    }
    /**
     * {@snippet :
     * int g_mount_unmount_finish(struct _GMount* mount, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_mount_unmount_finish(MemorySegment mount, MemorySegment result, MemorySegment error) {
        var mh$ = g_mount_unmount_finish$MH();
        try {
            return (int)mh$.invokeExact(mount, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_eject$MH() {
        return RuntimeHelper.requireNonNull(constants$1170.const$5,"g_mount_eject");
    }
    /**
     * {@snippet :
     * void g_mount_eject(struct _GMount* mount, enum GMountUnmountFlags flags, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_mount_eject(MemorySegment mount, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_mount_eject$MH();
        try {
            mh$.invokeExact(mount, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_eject_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1171.const$0,"g_mount_eject_finish");
    }
    /**
     * {@snippet :
     * int g_mount_eject_finish(struct _GMount* mount, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_mount_eject_finish(MemorySegment mount, MemorySegment result, MemorySegment error) {
        var mh$ = g_mount_eject_finish$MH();
        try {
            return (int)mh$.invokeExact(mount, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_remount$MH() {
        return RuntimeHelper.requireNonNull(constants$1171.const$2,"g_mount_remount");
    }
    /**
     * {@snippet :
     * void g_mount_remount(struct _GMount* mount, enum GMountMountFlags flags, struct _GMountOperation* mount_operation, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_mount_remount(MemorySegment mount, int flags, MemorySegment mount_operation, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_mount_remount$MH();
        try {
            mh$.invokeExact(mount, flags, mount_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_remount_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1171.const$3,"g_mount_remount_finish");
    }
    /**
     * {@snippet :
     * int g_mount_remount_finish(struct _GMount* mount, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_mount_remount_finish(MemorySegment mount, MemorySegment result, MemorySegment error) {
        var mh$ = g_mount_remount_finish$MH();
        try {
            return (int)mh$.invokeExact(mount, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_guess_content_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1171.const$5,"g_mount_guess_content_type");
    }
    /**
     * {@snippet :
     * void g_mount_guess_content_type(struct _GMount* mount, int force_rescan, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_mount_guess_content_type(MemorySegment mount, int force_rescan, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_mount_guess_content_type$MH();
        try {
            mh$.invokeExact(mount, force_rescan, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_guess_content_type_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1172.const$0,"g_mount_guess_content_type_finish");
    }
    /**
     * {@snippet :
     * char** g_mount_guess_content_type_finish(struct _GMount* mount, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_mount_guess_content_type_finish(MemorySegment mount, MemorySegment result, MemorySegment error) {
        var mh$ = g_mount_guess_content_type_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mount, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_guess_content_type_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$1172.const$1,"g_mount_guess_content_type_sync");
    }
    /**
     * {@snippet :
     * char** g_mount_guess_content_type_sync(struct _GMount* mount, int force_rescan, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_mount_guess_content_type_sync(MemorySegment mount, int force_rescan, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_mount_guess_content_type_sync$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mount, force_rescan, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_is_shadowed$MH() {
        return RuntimeHelper.requireNonNull(constants$1172.const$2,"g_mount_is_shadowed");
    }
    /**
     * {@snippet :
     * int g_mount_is_shadowed(struct _GMount* mount);
     * }
     */
    public static int g_mount_is_shadowed(MemorySegment mount) {
        var mh$ = g_mount_is_shadowed$MH();
        try {
            return (int)mh$.invokeExact(mount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_shadow$MH() {
        return RuntimeHelper.requireNonNull(constants$1172.const$3,"g_mount_shadow");
    }
    /**
     * {@snippet :
     * void g_mount_shadow(struct _GMount* mount);
     * }
     */
    public static void g_mount_shadow(MemorySegment mount) {
        var mh$ = g_mount_shadow$MH();
        try {
            mh$.invokeExact(mount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_unshadow$MH() {
        return RuntimeHelper.requireNonNull(constants$1172.const$4,"g_mount_unshadow");
    }
    /**
     * {@snippet :
     * void g_mount_unshadow(struct _GMount* mount);
     * }
     */
    public static void g_mount_unshadow(MemorySegment mount) {
        var mh$ = g_mount_unshadow$MH();
        try {
            mh$.invokeExact(mount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_unmount_with_operation$MH() {
        return RuntimeHelper.requireNonNull(constants$1173.const$0,"g_mount_unmount_with_operation");
    }
    /**
     * {@snippet :
     * void g_mount_unmount_with_operation(struct _GMount* mount, enum GMountUnmountFlags flags, struct _GMountOperation* mount_operation, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_mount_unmount_with_operation(MemorySegment mount, int flags, MemorySegment mount_operation, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_mount_unmount_with_operation$MH();
        try {
            mh$.invokeExact(mount, flags, mount_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_unmount_with_operation_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1173.const$1,"g_mount_unmount_with_operation_finish");
    }
    /**
     * {@snippet :
     * int g_mount_unmount_with_operation_finish(struct _GMount* mount, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_mount_unmount_with_operation_finish(MemorySegment mount, MemorySegment result, MemorySegment error) {
        var mh$ = g_mount_unmount_with_operation_finish$MH();
        try {
            return (int)mh$.invokeExact(mount, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_eject_with_operation$MH() {
        return RuntimeHelper.requireNonNull(constants$1173.const$3,"g_mount_eject_with_operation");
    }
    /**
     * {@snippet :
     * void g_mount_eject_with_operation(struct _GMount* mount, enum GMountUnmountFlags flags, struct _GMountOperation* mount_operation, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_mount_eject_with_operation(MemorySegment mount, int flags, MemorySegment mount_operation, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_mount_eject_with_operation$MH();
        try {
            mh$.invokeExact(mount, flags, mount_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_eject_with_operation_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1173.const$4,"g_mount_eject_with_operation_finish");
    }
    /**
     * {@snippet :
     * int g_mount_eject_with_operation_finish(struct _GMount* mount, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_mount_eject_with_operation_finish(MemorySegment mount, MemorySegment result, MemorySegment error) {
        var mh$ = g_mount_eject_with_operation_finish$MH();
        try {
            return (int)mh$.invokeExact(mount, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_get_sort_key$MH() {
        return RuntimeHelper.requireNonNull(constants$1173.const$5,"g_mount_get_sort_key");
    }
    /**
     * {@snippet :
     * char* g_mount_get_sort_key(struct _GMount* mount);
     * }
     */
    public static MemorySegment g_mount_get_sort_key(MemorySegment mount) {
        var mh$ = g_mount_get_sort_key$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1180.const$0,"g_mount_operation_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_mount_operation_get_type();
     * }
     */
    public static long g_mount_operation_get_type() {
        var mh$ = g_mount_operation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1180.const$1,"g_mount_operation_new");
    }
    /**
     * {@snippet :
     * struct _GMountOperation* g_mount_operation_new();
     * }
     */
    public static MemorySegment g_mount_operation_new() {
        var mh$ = g_mount_operation_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_get_username$MH() {
        return RuntimeHelper.requireNonNull(constants$1180.const$2,"g_mount_operation_get_username");
    }
    /**
     * {@snippet :
     * char* g_mount_operation_get_username(struct _GMountOperation* op);
     * }
     */
    public static MemorySegment g_mount_operation_get_username(MemorySegment op) {
        var mh$ = g_mount_operation_get_username$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_set_username$MH() {
        return RuntimeHelper.requireNonNull(constants$1180.const$3,"g_mount_operation_set_username");
    }
    /**
     * {@snippet :
     * void g_mount_operation_set_username(struct _GMountOperation* op, char* username);
     * }
     */
    public static void g_mount_operation_set_username(MemorySegment op, MemorySegment username) {
        var mh$ = g_mount_operation_set_username$MH();
        try {
            mh$.invokeExact(op, username);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_get_password$MH() {
        return RuntimeHelper.requireNonNull(constants$1180.const$4,"g_mount_operation_get_password");
    }
    /**
     * {@snippet :
     * char* g_mount_operation_get_password(struct _GMountOperation* op);
     * }
     */
    public static MemorySegment g_mount_operation_get_password(MemorySegment op) {
        var mh$ = g_mount_operation_get_password$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_set_password$MH() {
        return RuntimeHelper.requireNonNull(constants$1180.const$5,"g_mount_operation_set_password");
    }
    /**
     * {@snippet :
     * void g_mount_operation_set_password(struct _GMountOperation* op, char* password);
     * }
     */
    public static void g_mount_operation_set_password(MemorySegment op, MemorySegment password) {
        var mh$ = g_mount_operation_set_password$MH();
        try {
            mh$.invokeExact(op, password);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_get_anonymous$MH() {
        return RuntimeHelper.requireNonNull(constants$1181.const$0,"g_mount_operation_get_anonymous");
    }
    /**
     * {@snippet :
     * int g_mount_operation_get_anonymous(struct _GMountOperation* op);
     * }
     */
    public static int g_mount_operation_get_anonymous(MemorySegment op) {
        var mh$ = g_mount_operation_get_anonymous$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_set_anonymous$MH() {
        return RuntimeHelper.requireNonNull(constants$1181.const$1,"g_mount_operation_set_anonymous");
    }
    /**
     * {@snippet :
     * void g_mount_operation_set_anonymous(struct _GMountOperation* op, int anonymous);
     * }
     */
    public static void g_mount_operation_set_anonymous(MemorySegment op, int anonymous) {
        var mh$ = g_mount_operation_set_anonymous$MH();
        try {
            mh$.invokeExact(op, anonymous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_get_domain$MH() {
        return RuntimeHelper.requireNonNull(constants$1181.const$2,"g_mount_operation_get_domain");
    }
    /**
     * {@snippet :
     * char* g_mount_operation_get_domain(struct _GMountOperation* op);
     * }
     */
    public static MemorySegment g_mount_operation_get_domain(MemorySegment op) {
        var mh$ = g_mount_operation_get_domain$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_set_domain$MH() {
        return RuntimeHelper.requireNonNull(constants$1181.const$3,"g_mount_operation_set_domain");
    }
    /**
     * {@snippet :
     * void g_mount_operation_set_domain(struct _GMountOperation* op, char* domain);
     * }
     */
    public static void g_mount_operation_set_domain(MemorySegment op, MemorySegment domain) {
        var mh$ = g_mount_operation_set_domain$MH();
        try {
            mh$.invokeExact(op, domain);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_get_password_save$MH() {
        return RuntimeHelper.requireNonNull(constants$1181.const$4,"g_mount_operation_get_password_save");
    }
    /**
     * {@snippet :
     * enum GPasswordSave g_mount_operation_get_password_save(struct _GMountOperation* op);
     * }
     */
    public static int g_mount_operation_get_password_save(MemorySegment op) {
        var mh$ = g_mount_operation_get_password_save$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_set_password_save$MH() {
        return RuntimeHelper.requireNonNull(constants$1181.const$5,"g_mount_operation_set_password_save");
    }
    /**
     * {@snippet :
     * void g_mount_operation_set_password_save(struct _GMountOperation* op, enum GPasswordSave save);
     * }
     */
    public static void g_mount_operation_set_password_save(MemorySegment op, int save) {
        var mh$ = g_mount_operation_set_password_save$MH();
        try {
            mh$.invokeExact(op, save);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_get_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$1182.const$0,"g_mount_operation_get_choice");
    }
    /**
     * {@snippet :
     * int g_mount_operation_get_choice(struct _GMountOperation* op);
     * }
     */
    public static int g_mount_operation_get_choice(MemorySegment op) {
        var mh$ = g_mount_operation_get_choice$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_set_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$1182.const$1,"g_mount_operation_set_choice");
    }
    /**
     * {@snippet :
     * void g_mount_operation_set_choice(struct _GMountOperation* op, int choice);
     * }
     */
    public static void g_mount_operation_set_choice(MemorySegment op, int choice) {
        var mh$ = g_mount_operation_set_choice$MH();
        try {
            mh$.invokeExact(op, choice);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_reply$MH() {
        return RuntimeHelper.requireNonNull(constants$1182.const$2,"g_mount_operation_reply");
    }
    /**
     * {@snippet :
     * void g_mount_operation_reply(struct _GMountOperation* op, enum GMountOperationResult result);
     * }
     */
    public static void g_mount_operation_reply(MemorySegment op, int result) {
        var mh$ = g_mount_operation_reply$MH();
        try {
            mh$.invokeExact(op, result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_get_is_tcrypt_hidden_volume$MH() {
        return RuntimeHelper.requireNonNull(constants$1182.const$3,"g_mount_operation_get_is_tcrypt_hidden_volume");
    }
    /**
     * {@snippet :
     * int g_mount_operation_get_is_tcrypt_hidden_volume(struct _GMountOperation* op);
     * }
     */
    public static int g_mount_operation_get_is_tcrypt_hidden_volume(MemorySegment op) {
        var mh$ = g_mount_operation_get_is_tcrypt_hidden_volume$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_set_is_tcrypt_hidden_volume$MH() {
        return RuntimeHelper.requireNonNull(constants$1182.const$4,"g_mount_operation_set_is_tcrypt_hidden_volume");
    }
    /**
     * {@snippet :
     * void g_mount_operation_set_is_tcrypt_hidden_volume(struct _GMountOperation* op, int hidden_volume);
     * }
     */
    public static void g_mount_operation_set_is_tcrypt_hidden_volume(MemorySegment op, int hidden_volume) {
        var mh$ = g_mount_operation_set_is_tcrypt_hidden_volume$MH();
        try {
            mh$.invokeExact(op, hidden_volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_get_is_tcrypt_system_volume$MH() {
        return RuntimeHelper.requireNonNull(constants$1182.const$5,"g_mount_operation_get_is_tcrypt_system_volume");
    }
    /**
     * {@snippet :
     * int g_mount_operation_get_is_tcrypt_system_volume(struct _GMountOperation* op);
     * }
     */
    public static int g_mount_operation_get_is_tcrypt_system_volume(MemorySegment op) {
        var mh$ = g_mount_operation_get_is_tcrypt_system_volume$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_set_is_tcrypt_system_volume$MH() {
        return RuntimeHelper.requireNonNull(constants$1183.const$0,"g_mount_operation_set_is_tcrypt_system_volume");
    }
    /**
     * {@snippet :
     * void g_mount_operation_set_is_tcrypt_system_volume(struct _GMountOperation* op, int system_volume);
     * }
     */
    public static void g_mount_operation_set_is_tcrypt_system_volume(MemorySegment op, int system_volume) {
        var mh$ = g_mount_operation_set_is_tcrypt_system_volume$MH();
        try {
            mh$.invokeExact(op, system_volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_get_pim$MH() {
        return RuntimeHelper.requireNonNull(constants$1183.const$1,"g_mount_operation_get_pim");
    }
    /**
     * {@snippet :
     * unsigned int g_mount_operation_get_pim(struct _GMountOperation* op);
     * }
     */
    public static int g_mount_operation_get_pim(MemorySegment op) {
        var mh$ = g_mount_operation_get_pim$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mount_operation_set_pim$MH() {
        return RuntimeHelper.requireNonNull(constants$1183.const$2,"g_mount_operation_set_pim");
    }
    /**
     * {@snippet :
     * void g_mount_operation_set_pim(struct _GMountOperation* op, unsigned int pim);
     * }
     */
    public static void g_mount_operation_set_pim(MemorySegment op, int pim) {
        var mh$ = g_mount_operation_set_pim$MH();
        try {
            mh$.invokeExact(op, pim);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_native_socket_address_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1184.const$0,"g_native_socket_address_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_native_socket_address_get_type();
     * }
     */
    public static long g_native_socket_address_get_type() {
        var mh$ = g_native_socket_address_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_native_socket_address_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1184.const$1,"g_native_socket_address_new");
    }
    /**
     * {@snippet :
     * struct _GSocketAddress* g_native_socket_address_new(void* native, unsigned long len);
     * }
     */
    public static MemorySegment g_native_socket_address_new(MemorySegment native_, long len) {
        var mh$ = g_native_socket_address_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(native_, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_monitor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1193.const$2,"g_volume_monitor_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_volume_monitor_get_type();
     * }
     */
    public static long g_volume_monitor_get_type() {
        var mh$ = g_volume_monitor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_monitor_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1193.const$3,"g_volume_monitor_get");
    }
    /**
     * {@snippet :
     * struct _GVolumeMonitor* g_volume_monitor_get();
     * }
     */
    public static MemorySegment g_volume_monitor_get() {
        var mh$ = g_volume_monitor_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_monitor_get_connected_drives$MH() {
        return RuntimeHelper.requireNonNull(constants$1193.const$4,"g_volume_monitor_get_connected_drives");
    }
    /**
     * {@snippet :
     * struct _GList* g_volume_monitor_get_connected_drives(struct _GVolumeMonitor* volume_monitor);
     * }
     */
    public static MemorySegment g_volume_monitor_get_connected_drives(MemorySegment volume_monitor) {
        var mh$ = g_volume_monitor_get_connected_drives$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume_monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_monitor_get_volumes$MH() {
        return RuntimeHelper.requireNonNull(constants$1193.const$5,"g_volume_monitor_get_volumes");
    }
    /**
     * {@snippet :
     * struct _GList* g_volume_monitor_get_volumes(struct _GVolumeMonitor* volume_monitor);
     * }
     */
    public static MemorySegment g_volume_monitor_get_volumes(MemorySegment volume_monitor) {
        var mh$ = g_volume_monitor_get_volumes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume_monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


