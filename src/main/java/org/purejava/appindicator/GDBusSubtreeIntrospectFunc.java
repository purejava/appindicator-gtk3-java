// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.*;

/**
 * {@snippet :
 * struct _GDBusInterfaceInfo** (*GDBusSubtreeIntrospectFunc)(struct _GDBusConnection* connection,char* sender,char* object_path,char* node,void* user_data);
 * }
 */
public interface GDBusSubtreeIntrospectFunc {

    java.lang.foreign.MemorySegment apply(java.lang.foreign.MemorySegment connection, java.lang.foreign.MemorySegment sender, java.lang.foreign.MemorySegment object_path, java.lang.foreign.MemorySegment node, java.lang.foreign.MemorySegment user_data);
    static MemorySegment allocate(GDBusSubtreeIntrospectFunc fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$557.GDBusSubtreeIntrospectFunc_UP$MH, fi, constants$557.GDBusSubtreeIntrospectFunc$FUNC, scope);
    }
    static GDBusSubtreeIntrospectFunc ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _connection, java.lang.foreign.MemorySegment _sender, java.lang.foreign.MemorySegment _object_path, java.lang.foreign.MemorySegment _node, java.lang.foreign.MemorySegment _user_data) -> {
            try {
                return (java.lang.foreign.MemorySegment)constants$557.GDBusSubtreeIntrospectFunc_DOWN$MH.invokeExact(symbol, _connection, _sender, _object_path, _node, _user_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


