// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;

final class constants$794 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$794() {}
    static final FunctionDescriptor g_task_get_name$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_task_get_name$MH = RuntimeHelper.downcallHandle(
        "g_task_get_name",
        constants$794.g_task_get_name$FUNC
    );
    static final FunctionDescriptor g_task_is_valid$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_task_is_valid$MH = RuntimeHelper.downcallHandle(
        "g_task_is_valid",
        constants$794.g_task_is_valid$FUNC
    );
    static final FunctionDescriptor GTaskThreadFunc$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor GTaskThreadFunc_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GTaskThreadFunc_UP$MH = RuntimeHelper.upcallHandle(GTaskThreadFunc.class, "apply", constants$794.GTaskThreadFunc_UP$FUNC);
    static final FunctionDescriptor GTaskThreadFunc_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GTaskThreadFunc_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$794.GTaskThreadFunc_DOWN$FUNC
    );
    static final FunctionDescriptor g_task_run_in_thread$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_task_run_in_thread$MH = RuntimeHelper.downcallHandle(
        "g_task_run_in_thread",
        constants$794.g_task_run_in_thread$FUNC
    );
    static final FunctionDescriptor g_task_run_in_thread_sync$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_task_run_in_thread_sync$MH = RuntimeHelper.downcallHandle(
        "g_task_run_in_thread_sync",
        constants$794.g_task_run_in_thread_sync$FUNC
    );
}


