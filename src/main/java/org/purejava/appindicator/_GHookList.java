// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.VarHandle;
import java.lang.foreign.*;

/**
 * {@snippet :
 * struct _GHookList {
 *     gulong seq_id;
 *      *     guint hook_size;
 *     guint is_setup;
 *     GHook* hooks;
 *     gpointer dummy3;
 *     GHookFinalizeFunc finalize_hook;
 *     gpointer dummy[2];
 * };
 * }
 */
public class _GHookList {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG_LONG$LAYOUT.withName("seq_id"),
        MemoryLayout.paddingLayout(64),
        Constants$root.C_POINTER$LAYOUT.withName("hooks"),
        Constants$root.C_POINTER$LAYOUT.withName("dummy3"),
        Constants$root.C_POINTER$LAYOUT.withName("finalize_hook"),
        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName("dummy")
    ).withName("_GHookList");
    public static MemoryLayout $LAYOUT() {
        return _GHookList.$struct$LAYOUT;
    }
    static final VarHandle seq_id$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("seq_id"));
    public static VarHandle seq_id$VH() {
        return _GHookList.seq_id$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * gulong seq_id;
     * }
     */
    public static long seq_id$get(MemorySegment seg) {
        return (long)_GHookList.seq_id$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * gulong seq_id;
     * }
     */
    public static void seq_id$set(MemorySegment seg, long x) {
        _GHookList.seq_id$VH.set(seg, x);
    }
    public static long seq_id$get(MemorySegment seg, long index) {
        return (long)_GHookList.seq_id$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void seq_id$set(MemorySegment seg, long index, long x) {
        _GHookList.seq_id$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hooks$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hooks"));
    public static VarHandle hooks$VH() {
        return _GHookList.hooks$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * GHook* hooks;
     * }
     */
    public static MemorySegment hooks$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GHookList.hooks$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * GHook* hooks;
     * }
     */
    public static void hooks$set(MemorySegment seg, MemorySegment x) {
        _GHookList.hooks$VH.set(seg, x);
    }
    public static MemorySegment hooks$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GHookList.hooks$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hooks$set(MemorySegment seg, long index, MemorySegment x) {
        _GHookList.hooks$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dummy3$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dummy3"));
    public static VarHandle dummy3$VH() {
        return _GHookList.dummy3$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * gpointer dummy3;
     * }
     */
    public static MemorySegment dummy3$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GHookList.dummy3$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * gpointer dummy3;
     * }
     */
    public static void dummy3$set(MemorySegment seg, MemorySegment x) {
        _GHookList.dummy3$VH.set(seg, x);
    }
    public static MemorySegment dummy3$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GHookList.dummy3$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dummy3$set(MemorySegment seg, long index, MemorySegment x) {
        _GHookList.dummy3$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle finalize_hook$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("finalize_hook"));
    public static VarHandle finalize_hook$VH() {
        return _GHookList.finalize_hook$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * GHookFinalizeFunc finalize_hook;
     * }
     */
    public static MemorySegment finalize_hook$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GHookList.finalize_hook$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * GHookFinalizeFunc finalize_hook;
     * }
     */
    public static void finalize_hook$set(MemorySegment seg, MemorySegment x) {
        _GHookList.finalize_hook$VH.set(seg, x);
    }
    public static MemorySegment finalize_hook$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GHookList.finalize_hook$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void finalize_hook$set(MemorySegment seg, long index, MemorySegment x) {
        _GHookList.finalize_hook$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static GHookFinalizeFunc finalize_hook(MemorySegment segment, SegmentScope scope) {
        return GHookFinalizeFunc.ofAddress(finalize_hook$get(segment), scope);
    }
    public static MemorySegment dummy$slice(MemorySegment seg) {
        return seg.asSlice(40, 16);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


