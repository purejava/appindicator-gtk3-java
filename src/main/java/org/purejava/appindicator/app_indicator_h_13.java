// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class app_indicator_h_13 extends app_indicator_h_12 {

    public static MethodHandle gdk_window_set_device_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1839.const$4,"gdk_window_set_device_cursor");
    }
    /**
     * {@snippet :
     * void gdk_window_set_device_cursor(struct _GdkWindow* window, struct _GdkDevice* device, struct _GdkCursor* cursor);
     * }
     */
    public static void gdk_window_set_device_cursor(MemorySegment window, MemorySegment device, MemorySegment cursor) {
        var mh$ = gdk_window_set_device_cursor$MH();
        try {
            mh$.invokeExact(window, device, cursor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_device_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1839.const$5,"gdk_window_get_device_cursor");
    }
    /**
     * {@snippet :
     * struct _GdkCursor* gdk_window_get_device_cursor(struct _GdkWindow* window, struct _GdkDevice* device);
     * }
     */
    public static MemorySegment gdk_window_get_device_cursor(MemorySegment window, MemorySegment device) {
        var mh$ = gdk_window_get_device_cursor$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1840.const$0,"gdk_window_get_user_data");
    }
    /**
     * {@snippet :
     * void gdk_window_get_user_data(struct _GdkWindow* window, void** data);
     * }
     */
    public static void gdk_window_get_user_data(MemorySegment window, MemorySegment data) {
        var mh$ = gdk_window_get_user_data$MH();
        try {
            mh$.invokeExact(window, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_geometry$MH() {
        return RuntimeHelper.requireNonNull(constants$1840.const$1,"gdk_window_get_geometry");
    }
    /**
     * {@snippet :
     * void gdk_window_get_geometry(struct _GdkWindow* window, int* x, int* y, int* width, int* height);
     * }
     */
    public static void gdk_window_get_geometry(MemorySegment window, MemorySegment x, MemorySegment y, MemorySegment width, MemorySegment height) {
        var mh$ = gdk_window_get_geometry$MH();
        try {
            mh$.invokeExact(window, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1840.const$2,"gdk_window_get_width");
    }
    /**
     * {@snippet :
     * int gdk_window_get_width(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_get_width(MemorySegment window) {
        var mh$ = gdk_window_get_width$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1840.const$3,"gdk_window_get_height");
    }
    /**
     * {@snippet :
     * int gdk_window_get_height(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_get_height(MemorySegment window) {
        var mh$ = gdk_window_get_height$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1840.const$4,"gdk_window_get_position");
    }
    /**
     * {@snippet :
     * void gdk_window_get_position(struct _GdkWindow* window, int* x, int* y);
     * }
     */
    public static void gdk_window_get_position(MemorySegment window, MemorySegment x, MemorySegment y) {
        var mh$ = gdk_window_get_position$MH();
        try {
            mh$.invokeExact(window, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_origin$MH() {
        return RuntimeHelper.requireNonNull(constants$1840.const$5,"gdk_window_get_origin");
    }
    /**
     * {@snippet :
     * int gdk_window_get_origin(struct _GdkWindow* window, int* x, int* y);
     * }
     */
    public static int gdk_window_get_origin(MemorySegment window, MemorySegment x, MemorySegment y) {
        var mh$ = gdk_window_get_origin$MH();
        try {
            return (int)mh$.invokeExact(window, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_root_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$1841.const$0,"gdk_window_get_root_coords");
    }
    /**
     * {@snippet :
     * void gdk_window_get_root_coords(struct _GdkWindow* window, int x, int y, int* root_x, int* root_y);
     * }
     */
    public static void gdk_window_get_root_coords(MemorySegment window, int x, int y, MemorySegment root_x, MemorySegment root_y) {
        var mh$ = gdk_window_get_root_coords$MH();
        try {
            mh$.invokeExact(window, x, y, root_x, root_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_coords_to_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1841.const$1,"gdk_window_coords_to_parent");
    }
    /**
     * {@snippet :
     * void gdk_window_coords_to_parent(struct _GdkWindow* window, double x, double y, double* parent_x, double* parent_y);
     * }
     */
    public static void gdk_window_coords_to_parent(MemorySegment window, double x, double y, MemorySegment parent_x, MemorySegment parent_y) {
        var mh$ = gdk_window_coords_to_parent$MH();
        try {
            mh$.invokeExact(window, x, y, parent_x, parent_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_coords_from_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1841.const$2,"gdk_window_coords_from_parent");
    }
    /**
     * {@snippet :
     * void gdk_window_coords_from_parent(struct _GdkWindow* window, double parent_x, double parent_y, double* x, double* y);
     * }
     */
    public static void gdk_window_coords_from_parent(MemorySegment window, double parent_x, double parent_y, MemorySegment x, MemorySegment y) {
        var mh$ = gdk_window_coords_from_parent$MH();
        try {
            mh$.invokeExact(window, parent_x, parent_y, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_root_origin$MH() {
        return RuntimeHelper.requireNonNull(constants$1841.const$3,"gdk_window_get_root_origin");
    }
    /**
     * {@snippet :
     * void gdk_window_get_root_origin(struct _GdkWindow* window, int* x, int* y);
     * }
     */
    public static void gdk_window_get_root_origin(MemorySegment window, MemorySegment x, MemorySegment y) {
        var mh$ = gdk_window_get_root_origin$MH();
        try {
            mh$.invokeExact(window, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_frame_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1841.const$4,"gdk_window_get_frame_extents");
    }
    /**
     * {@snippet :
     * void gdk_window_get_frame_extents(struct _GdkWindow* window, struct _cairo_rectangle_int* rect);
     * }
     */
    public static void gdk_window_get_frame_extents(MemorySegment window, MemorySegment rect) {
        var mh$ = gdk_window_get_frame_extents$MH();
        try {
            mh$.invokeExact(window, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_scale_factor$MH() {
        return RuntimeHelper.requireNonNull(constants$1841.const$5,"gdk_window_get_scale_factor");
    }
    /**
     * {@snippet :
     * int gdk_window_get_scale_factor(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_get_scale_factor(MemorySegment window) {
        var mh$ = gdk_window_get_scale_factor$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1842.const$0,"gdk_window_get_pointer");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_window_get_pointer(struct _GdkWindow* window, int* x, int* y, enum GdkModifierType* mask);
     * }
     */
    public static MemorySegment gdk_window_get_pointer(MemorySegment window, MemorySegment x, MemorySegment y, MemorySegment mask) {
        var mh$ = gdk_window_get_pointer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, x, y, mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_device_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1842.const$1,"gdk_window_get_device_position");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_window_get_device_position(struct _GdkWindow* window, struct _GdkDevice* device, int* x, int* y, enum GdkModifierType* mask);
     * }
     */
    public static MemorySegment gdk_window_get_device_position(MemorySegment window, MemorySegment device, MemorySegment x, MemorySegment y, MemorySegment mask) {
        var mh$ = gdk_window_get_device_position$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, device, x, y, mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_device_position_double$MH() {
        return RuntimeHelper.requireNonNull(constants$1842.const$2,"gdk_window_get_device_position_double");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_window_get_device_position_double(struct _GdkWindow* window, struct _GdkDevice* device, double* x, double* y, enum GdkModifierType* mask);
     * }
     */
    public static MemorySegment gdk_window_get_device_position_double(MemorySegment window, MemorySegment device, MemorySegment x, MemorySegment y, MemorySegment mask) {
        var mh$ = gdk_window_get_device_position_double$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, device, x, y, mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1842.const$3,"gdk_window_get_parent");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_window_get_parent(struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_window_get_parent(MemorySegment window) {
        var mh$ = gdk_window_get_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_toplevel$MH() {
        return RuntimeHelper.requireNonNull(constants$1842.const$4,"gdk_window_get_toplevel");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_window_get_toplevel(struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_window_get_toplevel(MemorySegment window) {
        var mh$ = gdk_window_get_toplevel$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_effective_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1842.const$5,"gdk_window_get_effective_parent");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_window_get_effective_parent(struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_window_get_effective_parent(MemorySegment window) {
        var mh$ = gdk_window_get_effective_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_effective_toplevel$MH() {
        return RuntimeHelper.requireNonNull(constants$1843.const$0,"gdk_window_get_effective_toplevel");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_window_get_effective_toplevel(struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_window_get_effective_toplevel(MemorySegment window) {
        var mh$ = gdk_window_get_effective_toplevel$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1843.const$1,"gdk_window_get_children");
    }
    /**
     * {@snippet :
     * struct _GList* gdk_window_get_children(struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_window_get_children(MemorySegment window) {
        var mh$ = gdk_window_get_children$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_peek_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1843.const$2,"gdk_window_peek_children");
    }
    /**
     * {@snippet :
     * struct _GList* gdk_window_peek_children(struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_window_peek_children(MemorySegment window) {
        var mh$ = gdk_window_peek_children$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_children_with_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1843.const$3,"gdk_window_get_children_with_user_data");
    }
    /**
     * {@snippet :
     * struct _GList* gdk_window_get_children_with_user_data(struct _GdkWindow* window, void* user_data);
     * }
     */
    public static MemorySegment gdk_window_get_children_with_user_data(MemorySegment window, MemorySegment user_data) {
        var mh$ = gdk_window_get_children_with_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1843.const$4,"gdk_window_get_events");
    }
    /**
     * {@snippet :
     * enum GdkEventMask gdk_window_get_events(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_get_events(MemorySegment window) {
        var mh$ = gdk_window_get_events$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1843.const$5,"gdk_window_set_events");
    }
    /**
     * {@snippet :
     * void gdk_window_set_events(struct _GdkWindow* window, enum GdkEventMask event_mask);
     * }
     */
    public static void gdk_window_set_events(MemorySegment window, int event_mask) {
        var mh$ = gdk_window_set_events$MH();
        try {
            mh$.invokeExact(window, event_mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_device_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1844.const$0,"gdk_window_set_device_events");
    }
    /**
     * {@snippet :
     * void gdk_window_set_device_events(struct _GdkWindow* window, struct _GdkDevice* device, enum GdkEventMask event_mask);
     * }
     */
    public static void gdk_window_set_device_events(MemorySegment window, MemorySegment device, int event_mask) {
        var mh$ = gdk_window_set_device_events$MH();
        try {
            mh$.invokeExact(window, device, event_mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_device_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1844.const$1,"gdk_window_get_device_events");
    }
    /**
     * {@snippet :
     * enum GdkEventMask gdk_window_get_device_events(struct _GdkWindow* window, struct _GdkDevice* device);
     * }
     */
    public static int gdk_window_get_device_events(MemorySegment window, MemorySegment device) {
        var mh$ = gdk_window_get_device_events$MH();
        try {
            return (int)mh$.invokeExact(window, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_source_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1844.const$2,"gdk_window_set_source_events");
    }
    /**
     * {@snippet :
     * void gdk_window_set_source_events(struct _GdkWindow* window, enum GdkInputSource source, enum GdkEventMask event_mask);
     * }
     */
    public static void gdk_window_set_source_events(MemorySegment window, int source, int event_mask) {
        var mh$ = gdk_window_set_source_events$MH();
        try {
            mh$.invokeExact(window, source, event_mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_source_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1844.const$3,"gdk_window_get_source_events");
    }
    /**
     * {@snippet :
     * enum GdkEventMask gdk_window_get_source_events(struct _GdkWindow* window, enum GdkInputSource source);
     * }
     */
    public static int gdk_window_get_source_events(MemorySegment window, int source) {
        var mh$ = gdk_window_get_source_events$MH();
        try {
            return (int)mh$.invokeExact(window, source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_icon_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1844.const$4,"gdk_window_set_icon_list");
    }
    /**
     * {@snippet :
     * void gdk_window_set_icon_list(struct _GdkWindow* window, struct _GList* pixbufs);
     * }
     */
    public static void gdk_window_set_icon_list(MemorySegment window, MemorySegment pixbufs) {
        var mh$ = gdk_window_set_icon_list$MH();
        try {
            mh$.invokeExact(window, pixbufs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1844.const$5,"gdk_window_set_icon_name");
    }
    /**
     * {@snippet :
     * void gdk_window_set_icon_name(struct _GdkWindow* window, char* name);
     * }
     */
    public static void gdk_window_set_icon_name(MemorySegment window, MemorySegment name) {
        var mh$ = gdk_window_set_icon_name$MH();
        try {
            mh$.invokeExact(window, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1845.const$0,"gdk_window_set_group");
    }
    /**
     * {@snippet :
     * void gdk_window_set_group(struct _GdkWindow* window, struct _GdkWindow* leader);
     * }
     */
    public static void gdk_window_set_group(MemorySegment window, MemorySegment leader) {
        var mh$ = gdk_window_set_group$MH();
        try {
            mh$.invokeExact(window, leader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1845.const$1,"gdk_window_get_group");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_window_get_group(struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_window_get_group(MemorySegment window) {
        var mh$ = gdk_window_get_group$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_decorations$MH() {
        return RuntimeHelper.requireNonNull(constants$1845.const$2,"gdk_window_set_decorations");
    }
    /**
     * {@snippet :
     * void gdk_window_set_decorations(struct _GdkWindow* window, enum GdkWMDecoration decorations);
     * }
     */
    public static void gdk_window_set_decorations(MemorySegment window, int decorations) {
        var mh$ = gdk_window_set_decorations$MH();
        try {
            mh$.invokeExact(window, decorations);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_decorations$MH() {
        return RuntimeHelper.requireNonNull(constants$1845.const$3,"gdk_window_get_decorations");
    }
    /**
     * {@snippet :
     * int gdk_window_get_decorations(struct _GdkWindow* window, enum GdkWMDecoration* decorations);
     * }
     */
    public static int gdk_window_get_decorations(MemorySegment window, MemorySegment decorations) {
        var mh$ = gdk_window_get_decorations$MH();
        try {
            return (int)mh$.invokeExact(window, decorations);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_functions$MH() {
        return RuntimeHelper.requireNonNull(constants$1845.const$4,"gdk_window_set_functions");
    }
    /**
     * {@snippet :
     * void gdk_window_set_functions(struct _GdkWindow* window, enum GdkWMFunction functions);
     * }
     */
    public static void gdk_window_set_functions(MemorySegment window, int functions) {
        var mh$ = gdk_window_set_functions$MH();
        try {
            mh$.invokeExact(window, functions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_create_similar_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1845.const$5,"gdk_window_create_similar_surface");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* gdk_window_create_similar_surface(struct _GdkWindow* window, enum _cairo_content content, int width, int height);
     * }
     */
    public static MemorySegment gdk_window_create_similar_surface(MemorySegment window, int content, int width, int height) {
        var mh$ = gdk_window_create_similar_surface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, content, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_create_similar_image_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1846.const$0,"gdk_window_create_similar_image_surface");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* gdk_window_create_similar_image_surface(struct _GdkWindow* window, enum _cairo_format format, int width, int height, int scale);
     * }
     */
    public static MemorySegment gdk_window_create_similar_image_surface(MemorySegment window, int format, int width, int height, int scale) {
        var mh$ = gdk_window_create_similar_image_surface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, format, width, height, scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_beep$MH() {
        return RuntimeHelper.requireNonNull(constants$1846.const$1,"gdk_window_beep");
    }
    /**
     * {@snippet :
     * void gdk_window_beep(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_beep(MemorySegment window) {
        var mh$ = gdk_window_beep$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_iconify$MH() {
        return RuntimeHelper.requireNonNull(constants$1846.const$2,"gdk_window_iconify");
    }
    /**
     * {@snippet :
     * void gdk_window_iconify(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_iconify(MemorySegment window) {
        var mh$ = gdk_window_iconify$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_deiconify$MH() {
        return RuntimeHelper.requireNonNull(constants$1846.const$3,"gdk_window_deiconify");
    }
    /**
     * {@snippet :
     * void gdk_window_deiconify(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_deiconify(MemorySegment window) {
        var mh$ = gdk_window_deiconify$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_stick$MH() {
        return RuntimeHelper.requireNonNull(constants$1846.const$4,"gdk_window_stick");
    }
    /**
     * {@snippet :
     * void gdk_window_stick(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_stick(MemorySegment window) {
        var mh$ = gdk_window_stick$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_unstick$MH() {
        return RuntimeHelper.requireNonNull(constants$1846.const$5,"gdk_window_unstick");
    }
    /**
     * {@snippet :
     * void gdk_window_unstick(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_unstick(MemorySegment window) {
        var mh$ = gdk_window_unstick$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_maximize$MH() {
        return RuntimeHelper.requireNonNull(constants$1847.const$0,"gdk_window_maximize");
    }
    /**
     * {@snippet :
     * void gdk_window_maximize(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_maximize(MemorySegment window) {
        var mh$ = gdk_window_maximize$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_unmaximize$MH() {
        return RuntimeHelper.requireNonNull(constants$1847.const$1,"gdk_window_unmaximize");
    }
    /**
     * {@snippet :
     * void gdk_window_unmaximize(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_unmaximize(MemorySegment window) {
        var mh$ = gdk_window_unmaximize$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_fullscreen$MH() {
        return RuntimeHelper.requireNonNull(constants$1847.const$2,"gdk_window_fullscreen");
    }
    /**
     * {@snippet :
     * void gdk_window_fullscreen(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_fullscreen(MemorySegment window) {
        var mh$ = gdk_window_fullscreen$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_fullscreen_on_monitor$MH() {
        return RuntimeHelper.requireNonNull(constants$1847.const$3,"gdk_window_fullscreen_on_monitor");
    }
    /**
     * {@snippet :
     * void gdk_window_fullscreen_on_monitor(struct _GdkWindow* window, int monitor);
     * }
     */
    public static void gdk_window_fullscreen_on_monitor(MemorySegment window, int monitor) {
        var mh$ = gdk_window_fullscreen_on_monitor$MH();
        try {
            mh$.invokeExact(window, monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_fullscreen_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1847.const$4,"gdk_window_set_fullscreen_mode");
    }
    /**
     * {@snippet :
     * void gdk_window_set_fullscreen_mode(struct _GdkWindow* window, enum GdkFullscreenMode mode);
     * }
     */
    public static void gdk_window_set_fullscreen_mode(MemorySegment window, int mode) {
        var mh$ = gdk_window_set_fullscreen_mode$MH();
        try {
            mh$.invokeExact(window, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_fullscreen_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1847.const$5,"gdk_window_get_fullscreen_mode");
    }
    /**
     * {@snippet :
     * enum GdkFullscreenMode gdk_window_get_fullscreen_mode(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_get_fullscreen_mode(MemorySegment window) {
        var mh$ = gdk_window_get_fullscreen_mode$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_unfullscreen$MH() {
        return RuntimeHelper.requireNonNull(constants$1848.const$0,"gdk_window_unfullscreen");
    }
    /**
     * {@snippet :
     * void gdk_window_unfullscreen(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_unfullscreen(MemorySegment window) {
        var mh$ = gdk_window_unfullscreen$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_keep_above$MH() {
        return RuntimeHelper.requireNonNull(constants$1848.const$1,"gdk_window_set_keep_above");
    }
    /**
     * {@snippet :
     * void gdk_window_set_keep_above(struct _GdkWindow* window, int setting);
     * }
     */
    public static void gdk_window_set_keep_above(MemorySegment window, int setting) {
        var mh$ = gdk_window_set_keep_above$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_keep_below$MH() {
        return RuntimeHelper.requireNonNull(constants$1848.const$2,"gdk_window_set_keep_below");
    }
    /**
     * {@snippet :
     * void gdk_window_set_keep_below(struct _GdkWindow* window, int setting);
     * }
     */
    public static void gdk_window_set_keep_below(MemorySegment window, int setting) {
        var mh$ = gdk_window_set_keep_below$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_opacity$MH() {
        return RuntimeHelper.requireNonNull(constants$1848.const$3,"gdk_window_set_opacity");
    }
    /**
     * {@snippet :
     * void gdk_window_set_opacity(struct _GdkWindow* window, double opacity);
     * }
     */
    public static void gdk_window_set_opacity(MemorySegment window, double opacity) {
        var mh$ = gdk_window_set_opacity$MH();
        try {
            mh$.invokeExact(window, opacity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_register_dnd$MH() {
        return RuntimeHelper.requireNonNull(constants$1848.const$4,"gdk_window_register_dnd");
    }
    /**
     * {@snippet :
     * void gdk_window_register_dnd(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_register_dnd(MemorySegment window) {
        var mh$ = gdk_window_register_dnd$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_drag_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$1848.const$5,"gdk_window_get_drag_protocol");
    }
    /**
     * {@snippet :
     * enum GdkDragProtocol gdk_window_get_drag_protocol(struct _GdkWindow* window, struct _GdkWindow** target);
     * }
     */
    public static int gdk_window_get_drag_protocol(MemorySegment window, MemorySegment target) {
        var mh$ = gdk_window_get_drag_protocol$MH();
        try {
            return (int)mh$.invokeExact(window, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_begin_resize_drag$MH() {
        return RuntimeHelper.requireNonNull(constants$1849.const$0,"gdk_window_begin_resize_drag");
    }
    /**
     * {@snippet :
     * void gdk_window_begin_resize_drag(struct _GdkWindow* window, enum GdkWindowEdge edge, int button, int root_x, int root_y, unsigned int timestamp);
     * }
     */
    public static void gdk_window_begin_resize_drag(MemorySegment window, int edge, int button, int root_x, int root_y, int timestamp) {
        var mh$ = gdk_window_begin_resize_drag$MH();
        try {
            mh$.invokeExact(window, edge, button, root_x, root_y, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_begin_resize_drag_for_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1849.const$2,"gdk_window_begin_resize_drag_for_device");
    }
    /**
     * {@snippet :
     * void gdk_window_begin_resize_drag_for_device(struct _GdkWindow* window, enum GdkWindowEdge edge, struct _GdkDevice* device, int button, int root_x, int root_y, unsigned int timestamp);
     * }
     */
    public static void gdk_window_begin_resize_drag_for_device(MemorySegment window, int edge, MemorySegment device, int button, int root_x, int root_y, int timestamp) {
        var mh$ = gdk_window_begin_resize_drag_for_device$MH();
        try {
            mh$.invokeExact(window, edge, device, button, root_x, root_y, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_begin_move_drag$MH() {
        return RuntimeHelper.requireNonNull(constants$1849.const$3,"gdk_window_begin_move_drag");
    }
    /**
     * {@snippet :
     * void gdk_window_begin_move_drag(struct _GdkWindow* window, int button, int root_x, int root_y, unsigned int timestamp);
     * }
     */
    public static void gdk_window_begin_move_drag(MemorySegment window, int button, int root_x, int root_y, int timestamp) {
        var mh$ = gdk_window_begin_move_drag$MH();
        try {
            mh$.invokeExact(window, button, root_x, root_y, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_begin_move_drag_for_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1849.const$5,"gdk_window_begin_move_drag_for_device");
    }
    /**
     * {@snippet :
     * void gdk_window_begin_move_drag_for_device(struct _GdkWindow* window, struct _GdkDevice* device, int button, int root_x, int root_y, unsigned int timestamp);
     * }
     */
    public static void gdk_window_begin_move_drag_for_device(MemorySegment window, MemorySegment device, int button, int root_x, int root_y, int timestamp) {
        var mh$ = gdk_window_begin_move_drag_for_device$MH();
        try {
            mh$.invokeExact(window, device, button, root_x, root_y, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_invalidate_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1850.const$0,"gdk_window_invalidate_rect");
    }
    /**
     * {@snippet :
     * void gdk_window_invalidate_rect(struct _GdkWindow* window, struct _cairo_rectangle_int* rect, int invalidate_children);
     * }
     */
    public static void gdk_window_invalidate_rect(MemorySegment window, MemorySegment rect, int invalidate_children) {
        var mh$ = gdk_window_invalidate_rect$MH();
        try {
            mh$.invokeExact(window, rect, invalidate_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_invalidate_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1850.const$1,"gdk_window_invalidate_region");
    }
    /**
     * {@snippet :
     * void gdk_window_invalidate_region(struct _GdkWindow* window, struct _cairo_region* region, int invalidate_children);
     * }
     */
    public static void gdk_window_invalidate_region(MemorySegment window, MemorySegment region, int invalidate_children) {
        var mh$ = gdk_window_invalidate_region$MH();
        try {
            mh$.invokeExact(window, region, invalidate_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_invalidate_maybe_recurse$MH() {
        return RuntimeHelper.requireNonNull(constants$1850.const$4,"gdk_window_invalidate_maybe_recurse");
    }
    /**
     * {@snippet :
     * void gdk_window_invalidate_maybe_recurse(struct _GdkWindow* window, struct _cairo_region* region, int (*child_func)(struct _GdkWindow*,void*), void* user_data);
     * }
     */
    public static void gdk_window_invalidate_maybe_recurse(MemorySegment window, MemorySegment region, MemorySegment child_func, MemorySegment user_data) {
        var mh$ = gdk_window_invalidate_maybe_recurse$MH();
        try {
            mh$.invokeExact(window, region, child_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_update_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1850.const$5,"gdk_window_get_update_area");
    }
    /**
     * {@snippet :
     * struct _cairo_region* gdk_window_get_update_area(struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_window_get_update_area(MemorySegment window) {
        var mh$ = gdk_window_get_update_area$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_freeze_updates$MH() {
        return RuntimeHelper.requireNonNull(constants$1851.const$0,"gdk_window_freeze_updates");
    }
    /**
     * {@snippet :
     * void gdk_window_freeze_updates(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_freeze_updates(MemorySegment window) {
        var mh$ = gdk_window_freeze_updates$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_thaw_updates$MH() {
        return RuntimeHelper.requireNonNull(constants$1851.const$1,"gdk_window_thaw_updates");
    }
    /**
     * {@snippet :
     * void gdk_window_thaw_updates(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_thaw_updates(MemorySegment window) {
        var mh$ = gdk_window_thaw_updates$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_freeze_toplevel_updates_libgtk_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1851.const$2,"gdk_window_freeze_toplevel_updates_libgtk_only");
    }
    /**
     * {@snippet :
     * void gdk_window_freeze_toplevel_updates_libgtk_only(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_freeze_toplevel_updates_libgtk_only(MemorySegment window) {
        var mh$ = gdk_window_freeze_toplevel_updates_libgtk_only$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_thaw_toplevel_updates_libgtk_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1851.const$3,"gdk_window_thaw_toplevel_updates_libgtk_only");
    }
    /**
     * {@snippet :
     * void gdk_window_thaw_toplevel_updates_libgtk_only(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_thaw_toplevel_updates_libgtk_only(MemorySegment window) {
        var mh$ = gdk_window_thaw_toplevel_updates_libgtk_only$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_process_all_updates$MH() {
        return RuntimeHelper.requireNonNull(constants$1851.const$4,"gdk_window_process_all_updates");
    }
    /**
     * {@snippet :
     * void gdk_window_process_all_updates();
     * }
     */
    public static void gdk_window_process_all_updates() {
        var mh$ = gdk_window_process_all_updates$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_process_updates$MH() {
        return RuntimeHelper.requireNonNull(constants$1851.const$5,"gdk_window_process_updates");
    }
    /**
     * {@snippet :
     * void gdk_window_process_updates(struct _GdkWindow* window, int update_children);
     * }
     */
    public static void gdk_window_process_updates(MemorySegment window, int update_children) {
        var mh$ = gdk_window_process_updates$MH();
        try {
            mh$.invokeExact(window, update_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_debug_updates$MH() {
        return RuntimeHelper.requireNonNull(constants$1852.const$0,"gdk_window_set_debug_updates");
    }
    /**
     * {@snippet :
     * void gdk_window_set_debug_updates(int setting);
     * }
     */
    public static void gdk_window_set_debug_updates(int setting) {
        var mh$ = gdk_window_set_debug_updates$MH();
        try {
            mh$.invokeExact(setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_constrain_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1852.const$1,"gdk_window_constrain_size");
    }
    /**
     * {@snippet :
     * void gdk_window_constrain_size(struct _GdkGeometry* geometry, enum GdkWindowHints flags, int width, int height, int* new_width, int* new_height);
     * }
     */
    public static void gdk_window_constrain_size(MemorySegment geometry, int flags, int width, int height, MemorySegment new_width, MemorySegment new_height) {
        var mh$ = gdk_window_constrain_size$MH();
        try {
            mh$.invokeExact(geometry, flags, width, height, new_width, new_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_enable_synchronized_configure$MH() {
        return RuntimeHelper.requireNonNull(constants$1852.const$2,"gdk_window_enable_synchronized_configure");
    }
    /**
     * {@snippet :
     * void gdk_window_enable_synchronized_configure(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_enable_synchronized_configure(MemorySegment window) {
        var mh$ = gdk_window_enable_synchronized_configure$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_configure_finished$MH() {
        return RuntimeHelper.requireNonNull(constants$1852.const$3,"gdk_window_configure_finished");
    }
    /**
     * {@snippet :
     * void gdk_window_configure_finished(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_configure_finished(MemorySegment window) {
        var mh$ = gdk_window_configure_finished$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_get_default_root_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1852.const$4,"gdk_get_default_root_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_get_default_root_window();
     * }
     */
    public static MemorySegment gdk_get_default_root_window() {
        var mh$ = gdk_get_default_root_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_offscreen_window_get_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1852.const$5,"gdk_offscreen_window_get_surface");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* gdk_offscreen_window_get_surface(struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_offscreen_window_get_surface(MemorySegment window) {
        var mh$ = gdk_offscreen_window_get_surface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_offscreen_window_set_embedder$MH() {
        return RuntimeHelper.requireNonNull(constants$1853.const$0,"gdk_offscreen_window_set_embedder");
    }
    /**
     * {@snippet :
     * void gdk_offscreen_window_set_embedder(struct _GdkWindow* window, struct _GdkWindow* embedder);
     * }
     */
    public static void gdk_offscreen_window_set_embedder(MemorySegment window, MemorySegment embedder) {
        var mh$ = gdk_offscreen_window_set_embedder$MH();
        try {
            mh$.invokeExact(window, embedder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_offscreen_window_get_embedder$MH() {
        return RuntimeHelper.requireNonNull(constants$1853.const$1,"gdk_offscreen_window_get_embedder");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_offscreen_window_get_embedder(struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_offscreen_window_get_embedder(MemorySegment window) {
        var mh$ = gdk_offscreen_window_get_embedder$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_geometry_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$1853.const$2,"gdk_window_geometry_changed");
    }
    /**
     * {@snippet :
     * void gdk_window_geometry_changed(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_geometry_changed(MemorySegment window) {
        var mh$ = gdk_window_geometry_changed$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_support_multidevice$MH() {
        return RuntimeHelper.requireNonNull(constants$1853.const$3,"gdk_window_set_support_multidevice");
    }
    /**
     * {@snippet :
     * void gdk_window_set_support_multidevice(struct _GdkWindow* window, int support_multidevice);
     * }
     */
    public static void gdk_window_set_support_multidevice(MemorySegment window, int support_multidevice) {
        var mh$ = gdk_window_set_support_multidevice$MH();
        try {
            mh$.invokeExact(window, support_multidevice);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_support_multidevice$MH() {
        return RuntimeHelper.requireNonNull(constants$1853.const$4,"gdk_window_get_support_multidevice");
    }
    /**
     * {@snippet :
     * int gdk_window_get_support_multidevice(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_get_support_multidevice(MemorySegment window) {
        var mh$ = gdk_window_get_support_multidevice$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_frame_clock$MH() {
        return RuntimeHelper.requireNonNull(constants$1853.const$5,"gdk_window_get_frame_clock");
    }
    /**
     * {@snippet :
     * struct _GdkFrameClock* gdk_window_get_frame_clock(struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_window_get_frame_clock(MemorySegment window) {
        var mh$ = gdk_window_get_frame_clock$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_opaque_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1854.const$0,"gdk_window_set_opaque_region");
    }
    /**
     * {@snippet :
     * void gdk_window_set_opaque_region(struct _GdkWindow* window, struct _cairo_region* region);
     * }
     */
    public static void gdk_window_set_opaque_region(MemorySegment window, MemorySegment region) {
        var mh$ = gdk_window_set_opaque_region$MH();
        try {
            mh$.invokeExact(window, region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_event_compression$MH() {
        return RuntimeHelper.requireNonNull(constants$1854.const$1,"gdk_window_set_event_compression");
    }
    /**
     * {@snippet :
     * void gdk_window_set_event_compression(struct _GdkWindow* window, int event_compression);
     * }
     */
    public static void gdk_window_set_event_compression(MemorySegment window, int event_compression) {
        var mh$ = gdk_window_set_event_compression$MH();
        try {
            mh$.invokeExact(window, event_compression);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_event_compression$MH() {
        return RuntimeHelper.requireNonNull(constants$1854.const$2,"gdk_window_get_event_compression");
    }
    /**
     * {@snippet :
     * int gdk_window_get_event_compression(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_get_event_compression(MemorySegment window) {
        var mh$ = gdk_window_get_event_compression$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_shadow_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1854.const$3,"gdk_window_set_shadow_width");
    }
    /**
     * {@snippet :
     * void gdk_window_set_shadow_width(struct _GdkWindow* window, int left, int right, int top, int bottom);
     * }
     */
    public static void gdk_window_set_shadow_width(MemorySegment window, int left, int right, int top, int bottom) {
        var mh$ = gdk_window_set_shadow_width$MH();
        try {
            mh$.invokeExact(window, left, right, top, bottom);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_show_window_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$1854.const$4,"gdk_window_show_window_menu");
    }
    /**
     * {@snippet :
     * int gdk_window_show_window_menu(struct _GdkWindow* window, union _GdkEvent* event);
     * }
     */
    public static int gdk_window_show_window_menu(MemorySegment window, MemorySegment event) {
        var mh$ = gdk_window_show_window_menu$MH();
        try {
            return (int)mh$.invokeExact(window, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_create_gl_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1854.const$5,"gdk_window_create_gl_context");
    }
    /**
     * {@snippet :
     * struct _GdkGLContext* gdk_window_create_gl_context(struct _GdkWindow* window, struct _GError** error);
     * }
     */
    public static MemorySegment gdk_window_create_gl_context(MemorySegment window, MemorySegment error) {
        var mh$ = gdk_window_create_gl_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GdkSeatCapabilities.GDK_SEAT_CAPABILITY_NONE = 0;
     * }
     */
    public static int GDK_SEAT_CAPABILITY_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkSeatCapabilities.GDK_SEAT_CAPABILITY_POINTER = 1;
     * }
     */
    public static int GDK_SEAT_CAPABILITY_POINTER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkSeatCapabilities.GDK_SEAT_CAPABILITY_TOUCH = 2;
     * }
     */
    public static int GDK_SEAT_CAPABILITY_TOUCH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkSeatCapabilities.GDK_SEAT_CAPABILITY_TABLET_STYLUS = 4;
     * }
     */
    public static int GDK_SEAT_CAPABILITY_TABLET_STYLUS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkSeatCapabilities.GDK_SEAT_CAPABILITY_KEYBOARD = 8;
     * }
     */
    public static int GDK_SEAT_CAPABILITY_KEYBOARD() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GdkSeatCapabilities.GDK_SEAT_CAPABILITY_ALL_POINTING = 7;
     * }
     */
    public static int GDK_SEAT_CAPABILITY_ALL_POINTING() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GdkSeatCapabilities.GDK_SEAT_CAPABILITY_ALL = 15;
     * }
     */
    public static int GDK_SEAT_CAPABILITY_ALL() {
        return (int)15L;
    }
    public static MethodHandle gdk_seat_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1855.const$2,"gdk_seat_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_seat_get_type();
     * }
     */
    public static long gdk_seat_get_type() {
        var mh$ = gdk_seat_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_seat_grab$MH() {
        return RuntimeHelper.requireNonNull(constants$1855.const$5,"gdk_seat_grab");
    }
    /**
     * {@snippet :
     * enum GdkGrabStatus gdk_seat_grab(struct _GdkSeat* seat, struct _GdkWindow* window, enum GdkSeatCapabilities capabilities, int owner_events, struct _GdkCursor* cursor, union _GdkEvent* event, void (*prepare_func)(struct _GdkSeat*,struct _GdkWindow*,void*), void* prepare_func_data);
     * }
     */
    public static int gdk_seat_grab(MemorySegment seat, MemorySegment window, int capabilities, int owner_events, MemorySegment cursor, MemorySegment event, MemorySegment prepare_func, MemorySegment prepare_func_data) {
        var mh$ = gdk_seat_grab$MH();
        try {
            return (int)mh$.invokeExact(seat, window, capabilities, owner_events, cursor, event, prepare_func, prepare_func_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_seat_ungrab$MH() {
        return RuntimeHelper.requireNonNull(constants$1856.const$0,"gdk_seat_ungrab");
    }
    /**
     * {@snippet :
     * void gdk_seat_ungrab(struct _GdkSeat* seat);
     * }
     */
    public static void gdk_seat_ungrab(MemorySegment seat) {
        var mh$ = gdk_seat_ungrab$MH();
        try {
            mh$.invokeExact(seat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_seat_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1856.const$1,"gdk_seat_get_display");
    }
    /**
     * {@snippet :
     * struct _GdkDisplay* gdk_seat_get_display(struct _GdkSeat* seat);
     * }
     */
    public static MemorySegment gdk_seat_get_display(MemorySegment seat) {
        var mh$ = gdk_seat_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(seat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_seat_get_capabilities$MH() {
        return RuntimeHelper.requireNonNull(constants$1856.const$2,"gdk_seat_get_capabilities");
    }
    /**
     * {@snippet :
     * enum GdkSeatCapabilities gdk_seat_get_capabilities(struct _GdkSeat* seat);
     * }
     */
    public static int gdk_seat_get_capabilities(MemorySegment seat) {
        var mh$ = gdk_seat_get_capabilities$MH();
        try {
            return (int)mh$.invokeExact(seat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_seat_get_slaves$MH() {
        return RuntimeHelper.requireNonNull(constants$1856.const$3,"gdk_seat_get_slaves");
    }
    /**
     * {@snippet :
     * struct _GList* gdk_seat_get_slaves(struct _GdkSeat* seat, enum GdkSeatCapabilities capabilities);
     * }
     */
    public static MemorySegment gdk_seat_get_slaves(MemorySegment seat, int capabilities) {
        var mh$ = gdk_seat_get_slaves$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(seat, capabilities);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_seat_get_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1856.const$4,"gdk_seat_get_pointer");
    }
    /**
     * {@snippet :
     * struct _GdkDevice* gdk_seat_get_pointer(struct _GdkSeat* seat);
     * }
     */
    public static MemorySegment gdk_seat_get_pointer(MemorySegment seat) {
        var mh$ = gdk_seat_get_pointer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(seat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_seat_get_keyboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1856.const$5,"gdk_seat_get_keyboard");
    }
    /**
     * {@snippet :
     * struct _GdkDevice* gdk_seat_get_keyboard(struct _GdkSeat* seat);
     * }
     */
    public static MemorySegment gdk_seat_get_keyboard(MemorySegment seat) {
        var mh$ = gdk_seat_get_keyboard$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(seat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rectangle_intersect$MH() {
        return RuntimeHelper.requireNonNull(constants$1857.const$0,"gdk_rectangle_intersect");
    }
    /**
     * {@snippet :
     * int gdk_rectangle_intersect(struct _cairo_rectangle_int* src1, struct _cairo_rectangle_int* src2, struct _cairo_rectangle_int* dest);
     * }
     */
    public static int gdk_rectangle_intersect(MemorySegment src1, MemorySegment src2, MemorySegment dest) {
        var mh$ = gdk_rectangle_intersect$MH();
        try {
            return (int)mh$.invokeExact(src1, src2, dest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rectangle_union$MH() {
        return RuntimeHelper.requireNonNull(constants$1857.const$1,"gdk_rectangle_union");
    }
    /**
     * {@snippet :
     * void gdk_rectangle_union(struct _cairo_rectangle_int* src1, struct _cairo_rectangle_int* src2, struct _cairo_rectangle_int* dest);
     * }
     */
    public static void gdk_rectangle_union(MemorySegment src1, MemorySegment src2, MemorySegment dest) {
        var mh$ = gdk_rectangle_union$MH();
        try {
            mh$.invokeExact(src1, src2, dest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rectangle_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1857.const$2,"gdk_rectangle_equal");
    }
    /**
     * {@snippet :
     * int gdk_rectangle_equal(struct _cairo_rectangle_int* rect1, struct _cairo_rectangle_int* rect2);
     * }
     */
    public static int gdk_rectangle_equal(MemorySegment rect1, MemorySegment rect2) {
        var mh$ = gdk_rectangle_equal$MH();
        try {
            return (int)mh$.invokeExact(rect1, rect2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rectangle_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1857.const$3,"gdk_rectangle_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_rectangle_get_type();
     * }
     */
    public static long gdk_rectangle_get_type() {
        var mh$ = gdk_rectangle_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GdkSubpixelLayout.GDK_SUBPIXEL_LAYOUT_UNKNOWN = 0;
     * }
     */
    public static int GDK_SUBPIXEL_LAYOUT_UNKNOWN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkSubpixelLayout.GDK_SUBPIXEL_LAYOUT_NONE = 1;
     * }
     */
    public static int GDK_SUBPIXEL_LAYOUT_NONE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkSubpixelLayout.GDK_SUBPIXEL_LAYOUT_HORIZONTAL_RGB = 2;
     * }
     */
    public static int GDK_SUBPIXEL_LAYOUT_HORIZONTAL_RGB() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkSubpixelLayout.GDK_SUBPIXEL_LAYOUT_HORIZONTAL_BGR = 3;
     * }
     */
    public static int GDK_SUBPIXEL_LAYOUT_HORIZONTAL_BGR() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkSubpixelLayout.GDK_SUBPIXEL_LAYOUT_VERTICAL_RGB = 4;
     * }
     */
    public static int GDK_SUBPIXEL_LAYOUT_VERTICAL_RGB() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkSubpixelLayout.GDK_SUBPIXEL_LAYOUT_VERTICAL_BGR = 5;
     * }
     */
    public static int GDK_SUBPIXEL_LAYOUT_VERTICAL_BGR() {
        return (int)5L;
    }
    public static MethodHandle gdk_monitor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1857.const$4,"gdk_monitor_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_monitor_get_type();
     * }
     */
    public static long gdk_monitor_get_type() {
        var mh$ = gdk_monitor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1857.const$5,"gdk_monitor_get_display");
    }
    /**
     * {@snippet :
     * struct _GdkDisplay* gdk_monitor_get_display(struct _GdkMonitor* monitor);
     * }
     */
    public static MemorySegment gdk_monitor_get_display(MemorySegment monitor) {
        var mh$ = gdk_monitor_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_geometry$MH() {
        return RuntimeHelper.requireNonNull(constants$1858.const$0,"gdk_monitor_get_geometry");
    }
    /**
     * {@snippet :
     * void gdk_monitor_get_geometry(struct _GdkMonitor* monitor, struct _cairo_rectangle_int* geometry);
     * }
     */
    public static void gdk_monitor_get_geometry(MemorySegment monitor, MemorySegment geometry) {
        var mh$ = gdk_monitor_get_geometry$MH();
        try {
            mh$.invokeExact(monitor, geometry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_workarea$MH() {
        return RuntimeHelper.requireNonNull(constants$1858.const$1,"gdk_monitor_get_workarea");
    }
    /**
     * {@snippet :
     * void gdk_monitor_get_workarea(struct _GdkMonitor* monitor, struct _cairo_rectangle_int* workarea);
     * }
     */
    public static void gdk_monitor_get_workarea(MemorySegment monitor, MemorySegment workarea) {
        var mh$ = gdk_monitor_get_workarea$MH();
        try {
            mh$.invokeExact(monitor, workarea);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_width_mm$MH() {
        return RuntimeHelper.requireNonNull(constants$1858.const$2,"gdk_monitor_get_width_mm");
    }
    /**
     * {@snippet :
     * int gdk_monitor_get_width_mm(struct _GdkMonitor* monitor);
     * }
     */
    public static int gdk_monitor_get_width_mm(MemorySegment monitor) {
        var mh$ = gdk_monitor_get_width_mm$MH();
        try {
            return (int)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_height_mm$MH() {
        return RuntimeHelper.requireNonNull(constants$1858.const$3,"gdk_monitor_get_height_mm");
    }
    /**
     * {@snippet :
     * int gdk_monitor_get_height_mm(struct _GdkMonitor* monitor);
     * }
     */
    public static int gdk_monitor_get_height_mm(MemorySegment monitor) {
        var mh$ = gdk_monitor_get_height_mm$MH();
        try {
            return (int)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_manufacturer$MH() {
        return RuntimeHelper.requireNonNull(constants$1858.const$4,"gdk_monitor_get_manufacturer");
    }
    /**
     * {@snippet :
     * char* gdk_monitor_get_manufacturer(struct _GdkMonitor* monitor);
     * }
     */
    public static MemorySegment gdk_monitor_get_manufacturer(MemorySegment monitor) {
        var mh$ = gdk_monitor_get_manufacturer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$1858.const$5,"gdk_monitor_get_model");
    }
    /**
     * {@snippet :
     * char* gdk_monitor_get_model(struct _GdkMonitor* monitor);
     * }
     */
    public static MemorySegment gdk_monitor_get_model(MemorySegment monitor) {
        var mh$ = gdk_monitor_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_scale_factor$MH() {
        return RuntimeHelper.requireNonNull(constants$1859.const$0,"gdk_monitor_get_scale_factor");
    }
    /**
     * {@snippet :
     * int gdk_monitor_get_scale_factor(struct _GdkMonitor* monitor);
     * }
     */
    public static int gdk_monitor_get_scale_factor(MemorySegment monitor) {
        var mh$ = gdk_monitor_get_scale_factor$MH();
        try {
            return (int)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_refresh_rate$MH() {
        return RuntimeHelper.requireNonNull(constants$1859.const$1,"gdk_monitor_get_refresh_rate");
    }
    /**
     * {@snippet :
     * int gdk_monitor_get_refresh_rate(struct _GdkMonitor* monitor);
     * }
     */
    public static int gdk_monitor_get_refresh_rate(MemorySegment monitor) {
        var mh$ = gdk_monitor_get_refresh_rate$MH();
        try {
            return (int)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_get_subpixel_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1859.const$2,"gdk_monitor_get_subpixel_layout");
    }
    /**
     * {@snippet :
     * enum GdkSubpixelLayout gdk_monitor_get_subpixel_layout(struct _GdkMonitor* monitor);
     * }
     */
    public static int gdk_monitor_get_subpixel_layout(MemorySegment monitor) {
        var mh$ = gdk_monitor_get_subpixel_layout$MH();
        try {
            return (int)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_monitor_is_primary$MH() {
        return RuntimeHelper.requireNonNull(constants$1859.const$3,"gdk_monitor_is_primary");
    }
    /**
     * {@snippet :
     * int gdk_monitor_is_primary(struct _GdkMonitor* monitor);
     * }
     */
    public static int gdk_monitor_is_primary(MemorySegment monitor) {
        var mh$ = gdk_monitor_is_primary$MH();
        try {
            return (int)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1859.const$4,"gdk_display_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_display_get_type();
     * }
     */
    public static long gdk_display_get_type() {
        var mh$ = gdk_display_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_open$MH() {
        return RuntimeHelper.requireNonNull(constants$1859.const$5,"gdk_display_open");
    }
    /**
     * {@snippet :
     * struct _GdkDisplay* gdk_display_open(char* display_name);
     * }
     */
    public static MemorySegment gdk_display_open(MemorySegment display_name) {
        var mh$ = gdk_display_open$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1860.const$0,"gdk_display_get_name");
    }
    /**
     * {@snippet :
     * char* gdk_display_get_name(struct _GdkDisplay* display);
     * }
     */
    public static MemorySegment gdk_display_get_name(MemorySegment display) {
        var mh$ = gdk_display_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_n_screens$MH() {
        return RuntimeHelper.requireNonNull(constants$1860.const$1,"gdk_display_get_n_screens");
    }
    /**
     * {@snippet :
     * int gdk_display_get_n_screens(struct _GdkDisplay* display);
     * }
     */
    public static int gdk_display_get_n_screens(MemorySegment display) {
        var mh$ = gdk_display_get_n_screens$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1860.const$2,"gdk_display_get_screen");
    }
    /**
     * {@snippet :
     * struct _GdkScreen* gdk_display_get_screen(struct _GdkDisplay* display, int screen_num);
     * }
     */
    public static MemorySegment gdk_display_get_screen(MemorySegment display, int screen_num) {
        var mh$ = gdk_display_get_screen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display, screen_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_default_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1860.const$3,"gdk_display_get_default_screen");
    }
    /**
     * {@snippet :
     * struct _GdkScreen* gdk_display_get_default_screen(struct _GdkDisplay* display);
     * }
     */
    public static MemorySegment gdk_display_get_default_screen(MemorySegment display) {
        var mh$ = gdk_display_get_default_screen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_pointer_ungrab$MH() {
        return RuntimeHelper.requireNonNull(constants$1860.const$4,"gdk_display_pointer_ungrab");
    }
    /**
     * {@snippet :
     * void gdk_display_pointer_ungrab(struct _GdkDisplay* display, unsigned int time_);
     * }
     */
    public static void gdk_display_pointer_ungrab(MemorySegment display, int time_) {
        var mh$ = gdk_display_pointer_ungrab$MH();
        try {
            mh$.invokeExact(display, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_keyboard_ungrab$MH() {
        return RuntimeHelper.requireNonNull(constants$1860.const$5,"gdk_display_keyboard_ungrab");
    }
    /**
     * {@snippet :
     * void gdk_display_keyboard_ungrab(struct _GdkDisplay* display, unsigned int time_);
     * }
     */
    public static void gdk_display_keyboard_ungrab(MemorySegment display, int time_) {
        var mh$ = gdk_display_keyboard_ungrab$MH();
        try {
            mh$.invokeExact(display, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_pointer_is_grabbed$MH() {
        return RuntimeHelper.requireNonNull(constants$1861.const$0,"gdk_display_pointer_is_grabbed");
    }
    /**
     * {@snippet :
     * int gdk_display_pointer_is_grabbed(struct _GdkDisplay* display);
     * }
     */
    public static int gdk_display_pointer_is_grabbed(MemorySegment display) {
        var mh$ = gdk_display_pointer_is_grabbed$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_device_is_grabbed$MH() {
        return RuntimeHelper.requireNonNull(constants$1861.const$1,"gdk_display_device_is_grabbed");
    }
    /**
     * {@snippet :
     * int gdk_display_device_is_grabbed(struct _GdkDisplay* display, struct _GdkDevice* device);
     * }
     */
    public static int gdk_display_device_is_grabbed(MemorySegment display, MemorySegment device) {
        var mh$ = gdk_display_device_is_grabbed$MH();
        try {
            return (int)mh$.invokeExact(display, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_beep$MH() {
        return RuntimeHelper.requireNonNull(constants$1861.const$2,"gdk_display_beep");
    }
    /**
     * {@snippet :
     * void gdk_display_beep(struct _GdkDisplay* display);
     * }
     */
    public static void gdk_display_beep(MemorySegment display) {
        var mh$ = gdk_display_beep$MH();
        try {
            mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$1861.const$3,"gdk_display_sync");
    }
    /**
     * {@snippet :
     * void gdk_display_sync(struct _GdkDisplay* display);
     * }
     */
    public static void gdk_display_sync(MemorySegment display) {
        var mh$ = gdk_display_sync$MH();
        try {
            mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_flush$MH() {
        return RuntimeHelper.requireNonNull(constants$1861.const$4,"gdk_display_flush");
    }
    /**
     * {@snippet :
     * void gdk_display_flush(struct _GdkDisplay* display);
     * }
     */
    public static void gdk_display_flush(MemorySegment display) {
        var mh$ = gdk_display_flush$MH();
        try {
            mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_close$MH() {
        return RuntimeHelper.requireNonNull(constants$1861.const$5,"gdk_display_close");
    }
    /**
     * {@snippet :
     * void gdk_display_close(struct _GdkDisplay* display);
     * }
     */
    public static void gdk_display_close(MemorySegment display) {
        var mh$ = gdk_display_close$MH();
        try {
            mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_is_closed$MH() {
        return RuntimeHelper.requireNonNull(constants$1862.const$0,"gdk_display_is_closed");
    }
    /**
     * {@snippet :
     * int gdk_display_is_closed(struct _GdkDisplay* display);
     * }
     */
    public static int gdk_display_is_closed(MemorySegment display) {
        var mh$ = gdk_display_is_closed$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_list_devices$MH() {
        return RuntimeHelper.requireNonNull(constants$1862.const$1,"gdk_display_list_devices");
    }
    /**
     * {@snippet :
     * struct _GList* gdk_display_list_devices(struct _GdkDisplay* display);
     * }
     */
    public static MemorySegment gdk_display_list_devices(MemorySegment display) {
        var mh$ = gdk_display_list_devices$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_event$MH() {
        return RuntimeHelper.requireNonNull(constants$1862.const$2,"gdk_display_get_event");
    }
    /**
     * {@snippet :
     * union _GdkEvent* gdk_display_get_event(struct _GdkDisplay* display);
     * }
     */
    public static MemorySegment gdk_display_get_event(MemorySegment display) {
        var mh$ = gdk_display_get_event$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_peek_event$MH() {
        return RuntimeHelper.requireNonNull(constants$1862.const$3,"gdk_display_peek_event");
    }
    /**
     * {@snippet :
     * union _GdkEvent* gdk_display_peek_event(struct _GdkDisplay* display);
     * }
     */
    public static MemorySegment gdk_display_peek_event(MemorySegment display) {
        var mh$ = gdk_display_peek_event$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_put_event$MH() {
        return RuntimeHelper.requireNonNull(constants$1862.const$4,"gdk_display_put_event");
    }
    /**
     * {@snippet :
     * void gdk_display_put_event(struct _GdkDisplay* display, union _GdkEvent* event);
     * }
     */
    public static void gdk_display_put_event(MemorySegment display, MemorySegment event) {
        var mh$ = gdk_display_put_event$MH();
        try {
            mh$.invokeExact(display, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_has_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$1862.const$5,"gdk_display_has_pending");
    }
    /**
     * {@snippet :
     * int gdk_display_has_pending(struct _GdkDisplay* display);
     * }
     */
    public static int gdk_display_has_pending(MemorySegment display) {
        var mh$ = gdk_display_has_pending$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_set_double_click_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1863.const$0,"gdk_display_set_double_click_time");
    }
    /**
     * {@snippet :
     * void gdk_display_set_double_click_time(struct _GdkDisplay* display, unsigned int msec);
     * }
     */
    public static void gdk_display_set_double_click_time(MemorySegment display, int msec) {
        var mh$ = gdk_display_set_double_click_time$MH();
        try {
            mh$.invokeExact(display, msec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_set_double_click_distance$MH() {
        return RuntimeHelper.requireNonNull(constants$1863.const$1,"gdk_display_set_double_click_distance");
    }
    /**
     * {@snippet :
     * void gdk_display_set_double_click_distance(struct _GdkDisplay* display, unsigned int distance);
     * }
     */
    public static void gdk_display_set_double_click_distance(MemorySegment display, int distance) {
        var mh$ = gdk_display_set_double_click_distance$MH();
        try {
            mh$.invokeExact(display, distance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1863.const$2,"gdk_display_get_default");
    }
    /**
     * {@snippet :
     * struct _GdkDisplay* gdk_display_get_default();
     * }
     */
    public static MemorySegment gdk_display_get_default() {
        var mh$ = gdk_display_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1863.const$3,"gdk_display_get_pointer");
    }
    /**
     * {@snippet :
     * void gdk_display_get_pointer(struct _GdkDisplay* display, struct _GdkScreen** screen, int* x, int* y, enum GdkModifierType* mask);
     * }
     */
    public static void gdk_display_get_pointer(MemorySegment display, MemorySegment screen, MemorySegment x, MemorySegment y, MemorySegment mask) {
        var mh$ = gdk_display_get_pointer$MH();
        try {
            mh$.invokeExact(display, screen, x, y, mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_window_at_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1863.const$4,"gdk_display_get_window_at_pointer");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_display_get_window_at_pointer(struct _GdkDisplay* display, int* win_x, int* win_y);
     * }
     */
    public static MemorySegment gdk_display_get_window_at_pointer(MemorySegment display, MemorySegment win_x, MemorySegment win_y) {
        var mh$ = gdk_display_get_window_at_pointer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display, win_x, win_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_warp_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1863.const$5,"gdk_display_warp_pointer");
    }
    /**
     * {@snippet :
     * void gdk_display_warp_pointer(struct _GdkDisplay* display, struct _GdkScreen* screen, int x, int y);
     * }
     */
    public static void gdk_display_warp_pointer(MemorySegment display, MemorySegment screen, int x, int y) {
        var mh$ = gdk_display_warp_pointer$MH();
        try {
            mh$.invokeExact(display, screen, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_open_default_libgtk_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1864.const$0,"gdk_display_open_default_libgtk_only");
    }
    /**
     * {@snippet :
     * struct _GdkDisplay* gdk_display_open_default_libgtk_only();
     * }
     */
    public static MemorySegment gdk_display_open_default_libgtk_only() {
        var mh$ = gdk_display_open_default_libgtk_only$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_supports_cursor_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1864.const$1,"gdk_display_supports_cursor_alpha");
    }
    /**
     * {@snippet :
     * int gdk_display_supports_cursor_alpha(struct _GdkDisplay* display);
     * }
     */
    public static int gdk_display_supports_cursor_alpha(MemorySegment display) {
        var mh$ = gdk_display_supports_cursor_alpha$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_supports_cursor_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1864.const$2,"gdk_display_supports_cursor_color");
    }
    /**
     * {@snippet :
     * int gdk_display_supports_cursor_color(struct _GdkDisplay* display);
     * }
     */
    public static int gdk_display_supports_cursor_color(MemorySegment display) {
        var mh$ = gdk_display_supports_cursor_color$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_default_cursor_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1864.const$3,"gdk_display_get_default_cursor_size");
    }
    /**
     * {@snippet :
     * unsigned int gdk_display_get_default_cursor_size(struct _GdkDisplay* display);
     * }
     */
    public static int gdk_display_get_default_cursor_size(MemorySegment display) {
        var mh$ = gdk_display_get_default_cursor_size$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_maximal_cursor_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1864.const$4,"gdk_display_get_maximal_cursor_size");
    }
    /**
     * {@snippet :
     * void gdk_display_get_maximal_cursor_size(struct _GdkDisplay* display, unsigned int* width, unsigned int* height);
     * }
     */
    public static void gdk_display_get_maximal_cursor_size(MemorySegment display, MemorySegment width, MemorySegment height) {
        var mh$ = gdk_display_get_maximal_cursor_size$MH();
        try {
            mh$.invokeExact(display, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_default_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1864.const$5,"gdk_display_get_default_group");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_display_get_default_group(struct _GdkDisplay* display);
     * }
     */
    public static MemorySegment gdk_display_get_default_group(MemorySegment display) {
        var mh$ = gdk_display_get_default_group$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_supports_selection_notification$MH() {
        return RuntimeHelper.requireNonNull(constants$1865.const$0,"gdk_display_supports_selection_notification");
    }
    /**
     * {@snippet :
     * int gdk_display_supports_selection_notification(struct _GdkDisplay* display);
     * }
     */
    public static int gdk_display_supports_selection_notification(MemorySegment display) {
        var mh$ = gdk_display_supports_selection_notification$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_request_selection_notification$MH() {
        return RuntimeHelper.requireNonNull(constants$1865.const$1,"gdk_display_request_selection_notification");
    }
    /**
     * {@snippet :
     * int gdk_display_request_selection_notification(struct _GdkDisplay* display, struct _GdkAtom* selection);
     * }
     */
    public static int gdk_display_request_selection_notification(MemorySegment display, MemorySegment selection) {
        var mh$ = gdk_display_request_selection_notification$MH();
        try {
            return (int)mh$.invokeExact(display, selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_supports_clipboard_persistence$MH() {
        return RuntimeHelper.requireNonNull(constants$1865.const$2,"gdk_display_supports_clipboard_persistence");
    }
    /**
     * {@snippet :
     * int gdk_display_supports_clipboard_persistence(struct _GdkDisplay* display);
     * }
     */
    public static int gdk_display_supports_clipboard_persistence(MemorySegment display) {
        var mh$ = gdk_display_supports_clipboard_persistence$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_store_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1865.const$4,"gdk_display_store_clipboard");
    }
    /**
     * {@snippet :
     * void gdk_display_store_clipboard(struct _GdkDisplay* display, struct _GdkWindow* clipboard_window, unsigned int time_, struct _GdkAtom** targets, int n_targets);
     * }
     */
    public static void gdk_display_store_clipboard(MemorySegment display, MemorySegment clipboard_window, int time_, MemorySegment targets, int n_targets) {
        var mh$ = gdk_display_store_clipboard$MH();
        try {
            mh$.invokeExact(display, clipboard_window, time_, targets, n_targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_supports_shapes$MH() {
        return RuntimeHelper.requireNonNull(constants$1865.const$5,"gdk_display_supports_shapes");
    }
    /**
     * {@snippet :
     * int gdk_display_supports_shapes(struct _GdkDisplay* display);
     * }
     */
    public static int gdk_display_supports_shapes(MemorySegment display) {
        var mh$ = gdk_display_supports_shapes$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_supports_input_shapes$MH() {
        return RuntimeHelper.requireNonNull(constants$1866.const$0,"gdk_display_supports_input_shapes");
    }
    /**
     * {@snippet :
     * int gdk_display_supports_input_shapes(struct _GdkDisplay* display);
     * }
     */
    public static int gdk_display_supports_input_shapes(MemorySegment display) {
        var mh$ = gdk_display_supports_input_shapes$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_supports_composite$MH() {
        return RuntimeHelper.requireNonNull(constants$1866.const$1,"gdk_display_supports_composite");
    }
    /**
     * {@snippet :
     * int gdk_display_supports_composite(struct _GdkDisplay* display);
     * }
     */
    public static int gdk_display_supports_composite(MemorySegment display) {
        var mh$ = gdk_display_supports_composite$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_notify_startup_complete$MH() {
        return RuntimeHelper.requireNonNull(constants$1866.const$2,"gdk_display_notify_startup_complete");
    }
    /**
     * {@snippet :
     * void gdk_display_notify_startup_complete(struct _GdkDisplay* display, char* startup_id);
     * }
     */
    public static void gdk_display_notify_startup_complete(MemorySegment display, MemorySegment startup_id) {
        var mh$ = gdk_display_notify_startup_complete$MH();
        try {
            mh$.invokeExact(display, startup_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_device_manager$MH() {
        return RuntimeHelper.requireNonNull(constants$1866.const$3,"gdk_display_get_device_manager");
    }
    /**
     * {@snippet :
     * struct _GdkDeviceManager* gdk_display_get_device_manager(struct _GdkDisplay* display);
     * }
     */
    public static MemorySegment gdk_display_get_device_manager(MemorySegment display) {
        var mh$ = gdk_display_get_device_manager$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_app_launch_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1866.const$4,"gdk_display_get_app_launch_context");
    }
    /**
     * {@snippet :
     * struct _GdkAppLaunchContext* gdk_display_get_app_launch_context(struct _GdkDisplay* display);
     * }
     */
    public static MemorySegment gdk_display_get_app_launch_context(MemorySegment display) {
        var mh$ = gdk_display_get_app_launch_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_default_seat$MH() {
        return RuntimeHelper.requireNonNull(constants$1866.const$5,"gdk_display_get_default_seat");
    }
    /**
     * {@snippet :
     * struct _GdkSeat* gdk_display_get_default_seat(struct _GdkDisplay* display);
     * }
     */
    public static MemorySegment gdk_display_get_default_seat(MemorySegment display) {
        var mh$ = gdk_display_get_default_seat$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_list_seats$MH() {
        return RuntimeHelper.requireNonNull(constants$1867.const$0,"gdk_display_list_seats");
    }
    /**
     * {@snippet :
     * struct _GList* gdk_display_list_seats(struct _GdkDisplay* display);
     * }
     */
    public static MemorySegment gdk_display_list_seats(MemorySegment display) {
        var mh$ = gdk_display_list_seats$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_n_monitors$MH() {
        return RuntimeHelper.requireNonNull(constants$1867.const$1,"gdk_display_get_n_monitors");
    }
    /**
     * {@snippet :
     * int gdk_display_get_n_monitors(struct _GdkDisplay* display);
     * }
     */
    public static int gdk_display_get_n_monitors(MemorySegment display) {
        var mh$ = gdk_display_get_n_monitors$MH();
        try {
            return (int)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_monitor$MH() {
        return RuntimeHelper.requireNonNull(constants$1867.const$2,"gdk_display_get_monitor");
    }
    /**
     * {@snippet :
     * struct _GdkMonitor* gdk_display_get_monitor(struct _GdkDisplay* display, int monitor_num);
     * }
     */
    public static MemorySegment gdk_display_get_monitor(MemorySegment display, int monitor_num) {
        var mh$ = gdk_display_get_monitor$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display, monitor_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_primary_monitor$MH() {
        return RuntimeHelper.requireNonNull(constants$1867.const$3,"gdk_display_get_primary_monitor");
    }
    /**
     * {@snippet :
     * struct _GdkMonitor* gdk_display_get_primary_monitor(struct _GdkDisplay* display);
     * }
     */
    public static MemorySegment gdk_display_get_primary_monitor(MemorySegment display) {
        var mh$ = gdk_display_get_primary_monitor$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_monitor_at_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1867.const$4,"gdk_display_get_monitor_at_point");
    }
    /**
     * {@snippet :
     * struct _GdkMonitor* gdk_display_get_monitor_at_point(struct _GdkDisplay* display, int x, int y);
     * }
     */
    public static MemorySegment gdk_display_get_monitor_at_point(MemorySegment display, int x, int y) {
        var mh$ = gdk_display_get_monitor_at_point$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_get_monitor_at_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1867.const$5,"gdk_display_get_monitor_at_window");
    }
    /**
     * {@snippet :
     * struct _GdkMonitor* gdk_display_get_monitor_at_window(struct _GdkDisplay* display, struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_display_get_monitor_at_window(MemorySegment display, MemorySegment window) {
        var mh$ = gdk_display_get_monitor_at_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1868.const$0,"gdk_screen_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_screen_get_type();
     * }
     */
    public static long gdk_screen_get_type() {
        var mh$ = gdk_screen_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_system_visual$MH() {
        return RuntimeHelper.requireNonNull(constants$1868.const$1,"gdk_screen_get_system_visual");
    }
    /**
     * {@snippet :
     * struct _GdkVisual* gdk_screen_get_system_visual(struct _GdkScreen* screen);
     * }
     */
    public static MemorySegment gdk_screen_get_system_visual(MemorySegment screen) {
        var mh$ = gdk_screen_get_system_visual$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_rgba_visual$MH() {
        return RuntimeHelper.requireNonNull(constants$1868.const$2,"gdk_screen_get_rgba_visual");
    }
    /**
     * {@snippet :
     * struct _GdkVisual* gdk_screen_get_rgba_visual(struct _GdkScreen* screen);
     * }
     */
    public static MemorySegment gdk_screen_get_rgba_visual(MemorySegment screen) {
        var mh$ = gdk_screen_get_rgba_visual$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_is_composited$MH() {
        return RuntimeHelper.requireNonNull(constants$1868.const$3,"gdk_screen_is_composited");
    }
    /**
     * {@snippet :
     * int gdk_screen_is_composited(struct _GdkScreen* screen);
     * }
     */
    public static int gdk_screen_is_composited(MemorySegment screen) {
        var mh$ = gdk_screen_is_composited$MH();
        try {
            return (int)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_root_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1868.const$4,"gdk_screen_get_root_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_screen_get_root_window(struct _GdkScreen* screen);
     * }
     */
    public static MemorySegment gdk_screen_get_root_window(MemorySegment screen) {
        var mh$ = gdk_screen_get_root_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1868.const$5,"gdk_screen_get_display");
    }
    /**
     * {@snippet :
     * struct _GdkDisplay* gdk_screen_get_display(struct _GdkScreen* screen);
     * }
     */
    public static MemorySegment gdk_screen_get_display(MemorySegment screen) {
        var mh$ = gdk_screen_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_number$MH() {
        return RuntimeHelper.requireNonNull(constants$1869.const$0,"gdk_screen_get_number");
    }
    /**
     * {@snippet :
     * int gdk_screen_get_number(struct _GdkScreen* screen);
     * }
     */
    public static int gdk_screen_get_number(MemorySegment screen) {
        var mh$ = gdk_screen_get_number$MH();
        try {
            return (int)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1869.const$1,"gdk_screen_get_width");
    }
    /**
     * {@snippet :
     * int gdk_screen_get_width(struct _GdkScreen* screen);
     * }
     */
    public static int gdk_screen_get_width(MemorySegment screen) {
        var mh$ = gdk_screen_get_width$MH();
        try {
            return (int)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1869.const$2,"gdk_screen_get_height");
    }
    /**
     * {@snippet :
     * int gdk_screen_get_height(struct _GdkScreen* screen);
     * }
     */
    public static int gdk_screen_get_height(MemorySegment screen) {
        var mh$ = gdk_screen_get_height$MH();
        try {
            return (int)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_width_mm$MH() {
        return RuntimeHelper.requireNonNull(constants$1869.const$3,"gdk_screen_get_width_mm");
    }
    /**
     * {@snippet :
     * int gdk_screen_get_width_mm(struct _GdkScreen* screen);
     * }
     */
    public static int gdk_screen_get_width_mm(MemorySegment screen) {
        var mh$ = gdk_screen_get_width_mm$MH();
        try {
            return (int)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_height_mm$MH() {
        return RuntimeHelper.requireNonNull(constants$1869.const$4,"gdk_screen_get_height_mm");
    }
    /**
     * {@snippet :
     * int gdk_screen_get_height_mm(struct _GdkScreen* screen);
     * }
     */
    public static int gdk_screen_get_height_mm(MemorySegment screen) {
        var mh$ = gdk_screen_get_height_mm$MH();
        try {
            return (int)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_list_visuals$MH() {
        return RuntimeHelper.requireNonNull(constants$1869.const$5,"gdk_screen_list_visuals");
    }
    /**
     * {@snippet :
     * struct _GList* gdk_screen_list_visuals(struct _GdkScreen* screen);
     * }
     */
    public static MemorySegment gdk_screen_list_visuals(MemorySegment screen) {
        var mh$ = gdk_screen_list_visuals$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_toplevel_windows$MH() {
        return RuntimeHelper.requireNonNull(constants$1870.const$0,"gdk_screen_get_toplevel_windows");
    }
    /**
     * {@snippet :
     * struct _GList* gdk_screen_get_toplevel_windows(struct _GdkScreen* screen);
     * }
     */
    public static MemorySegment gdk_screen_get_toplevel_windows(MemorySegment screen) {
        var mh$ = gdk_screen_get_toplevel_windows$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_make_display_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1870.const$1,"gdk_screen_make_display_name");
    }
    /**
     * {@snippet :
     * char* gdk_screen_make_display_name(struct _GdkScreen* screen);
     * }
     */
    public static MemorySegment gdk_screen_make_display_name(MemorySegment screen) {
        var mh$ = gdk_screen_make_display_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_n_monitors$MH() {
        return RuntimeHelper.requireNonNull(constants$1870.const$2,"gdk_screen_get_n_monitors");
    }
    /**
     * {@snippet :
     * int gdk_screen_get_n_monitors(struct _GdkScreen* screen);
     * }
     */
    public static int gdk_screen_get_n_monitors(MemorySegment screen) {
        var mh$ = gdk_screen_get_n_monitors$MH();
        try {
            return (int)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_primary_monitor$MH() {
        return RuntimeHelper.requireNonNull(constants$1870.const$3,"gdk_screen_get_primary_monitor");
    }
    /**
     * {@snippet :
     * int gdk_screen_get_primary_monitor(struct _GdkScreen* screen);
     * }
     */
    public static int gdk_screen_get_primary_monitor(MemorySegment screen) {
        var mh$ = gdk_screen_get_primary_monitor$MH();
        try {
            return (int)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_monitor_geometry$MH() {
        return RuntimeHelper.requireNonNull(constants$1870.const$4,"gdk_screen_get_monitor_geometry");
    }
    /**
     * {@snippet :
     * void gdk_screen_get_monitor_geometry(struct _GdkScreen* screen, int monitor_num, struct _cairo_rectangle_int* dest);
     * }
     */
    public static void gdk_screen_get_monitor_geometry(MemorySegment screen, int monitor_num, MemorySegment dest) {
        var mh$ = gdk_screen_get_monitor_geometry$MH();
        try {
            mh$.invokeExact(screen, monitor_num, dest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_monitor_workarea$MH() {
        return RuntimeHelper.requireNonNull(constants$1870.const$5,"gdk_screen_get_monitor_workarea");
    }
    /**
     * {@snippet :
     * void gdk_screen_get_monitor_workarea(struct _GdkScreen* screen, int monitor_num, struct _cairo_rectangle_int* dest);
     * }
     */
    public static void gdk_screen_get_monitor_workarea(MemorySegment screen, int monitor_num, MemorySegment dest) {
        var mh$ = gdk_screen_get_monitor_workarea$MH();
        try {
            mh$.invokeExact(screen, monitor_num, dest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_monitor_at_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1871.const$0,"gdk_screen_get_monitor_at_point");
    }
    /**
     * {@snippet :
     * int gdk_screen_get_monitor_at_point(struct _GdkScreen* screen, int x, int y);
     * }
     */
    public static int gdk_screen_get_monitor_at_point(MemorySegment screen, int x, int y) {
        var mh$ = gdk_screen_get_monitor_at_point$MH();
        try {
            return (int)mh$.invokeExact(screen, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_monitor_at_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1871.const$1,"gdk_screen_get_monitor_at_window");
    }
    /**
     * {@snippet :
     * int gdk_screen_get_monitor_at_window(struct _GdkScreen* screen, struct _GdkWindow* window);
     * }
     */
    public static int gdk_screen_get_monitor_at_window(MemorySegment screen, MemorySegment window) {
        var mh$ = gdk_screen_get_monitor_at_window$MH();
        try {
            return (int)mh$.invokeExact(screen, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_monitor_width_mm$MH() {
        return RuntimeHelper.requireNonNull(constants$1871.const$2,"gdk_screen_get_monitor_width_mm");
    }
    /**
     * {@snippet :
     * int gdk_screen_get_monitor_width_mm(struct _GdkScreen* screen, int monitor_num);
     * }
     */
    public static int gdk_screen_get_monitor_width_mm(MemorySegment screen, int monitor_num) {
        var mh$ = gdk_screen_get_monitor_width_mm$MH();
        try {
            return (int)mh$.invokeExact(screen, monitor_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_monitor_height_mm$MH() {
        return RuntimeHelper.requireNonNull(constants$1871.const$3,"gdk_screen_get_monitor_height_mm");
    }
    /**
     * {@snippet :
     * int gdk_screen_get_monitor_height_mm(struct _GdkScreen* screen, int monitor_num);
     * }
     */
    public static int gdk_screen_get_monitor_height_mm(MemorySegment screen, int monitor_num) {
        var mh$ = gdk_screen_get_monitor_height_mm$MH();
        try {
            return (int)mh$.invokeExact(screen, monitor_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_monitor_plug_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1871.const$4,"gdk_screen_get_monitor_plug_name");
    }
    /**
     * {@snippet :
     * char* gdk_screen_get_monitor_plug_name(struct _GdkScreen* screen, int monitor_num);
     * }
     */
    public static MemorySegment gdk_screen_get_monitor_plug_name(MemorySegment screen, int monitor_num) {
        var mh$ = gdk_screen_get_monitor_plug_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(screen, monitor_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_monitor_scale_factor$MH() {
        return RuntimeHelper.requireNonNull(constants$1871.const$5,"gdk_screen_get_monitor_scale_factor");
    }
    /**
     * {@snippet :
     * int gdk_screen_get_monitor_scale_factor(struct _GdkScreen* screen, int monitor_num);
     * }
     */
    public static int gdk_screen_get_monitor_scale_factor(MemorySegment screen, int monitor_num) {
        var mh$ = gdk_screen_get_monitor_scale_factor$MH();
        try {
            return (int)mh$.invokeExact(screen, monitor_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1872.const$0,"gdk_screen_get_default");
    }
    /**
     * {@snippet :
     * struct _GdkScreen* gdk_screen_get_default();
     * }
     */
    public static MemorySegment gdk_screen_get_default() {
        var mh$ = gdk_screen_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_setting$MH() {
        return RuntimeHelper.requireNonNull(constants$1872.const$1,"gdk_screen_get_setting");
    }
    /**
     * {@snippet :
     * int gdk_screen_get_setting(struct _GdkScreen* screen, char* name, struct _GValue* value);
     * }
     */
    public static int gdk_screen_get_setting(MemorySegment screen, MemorySegment name, MemorySegment value) {
        var mh$ = gdk_screen_get_setting$MH();
        try {
            return (int)mh$.invokeExact(screen, name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_set_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1872.const$2,"gdk_screen_set_font_options");
    }
    /**
     * {@snippet :
     * void gdk_screen_set_font_options(struct _GdkScreen* screen, struct _cairo_font_options* options);
     * }
     */
    public static void gdk_screen_set_font_options(MemorySegment screen, MemorySegment options) {
        var mh$ = gdk_screen_set_font_options$MH();
        try {
            mh$.invokeExact(screen, options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1872.const$3,"gdk_screen_get_font_options");
    }
    /**
     * {@snippet :
     * struct _cairo_font_options* gdk_screen_get_font_options(struct _GdkScreen* screen);
     * }
     */
    public static MemorySegment gdk_screen_get_font_options(MemorySegment screen) {
        var mh$ = gdk_screen_get_font_options$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_set_resolution$MH() {
        return RuntimeHelper.requireNonNull(constants$1872.const$4,"gdk_screen_set_resolution");
    }
    /**
     * {@snippet :
     * void gdk_screen_set_resolution(struct _GdkScreen* screen, double dpi);
     * }
     */
    public static void gdk_screen_set_resolution(MemorySegment screen, double dpi) {
        var mh$ = gdk_screen_set_resolution$MH();
        try {
            mh$.invokeExact(screen, dpi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_resolution$MH() {
        return RuntimeHelper.requireNonNull(constants$1872.const$5,"gdk_screen_get_resolution");
    }
    /**
     * {@snippet :
     * double gdk_screen_get_resolution(struct _GdkScreen* screen);
     * }
     */
    public static double gdk_screen_get_resolution(MemorySegment screen) {
        var mh$ = gdk_screen_get_resolution$MH();
        try {
            return (double)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_active_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1873.const$0,"gdk_screen_get_active_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_screen_get_active_window(struct _GdkScreen* screen);
     * }
     */
    public static MemorySegment gdk_screen_get_active_window(MemorySegment screen) {
        var mh$ = gdk_screen_get_active_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_get_window_stack$MH() {
        return RuntimeHelper.requireNonNull(constants$1873.const$1,"gdk_screen_get_window_stack");
    }
    /**
     * {@snippet :
     * struct _GList* gdk_screen_get_window_stack(struct _GdkScreen* screen);
     * }
     */
    public static MemorySegment gdk_screen_get_window_stack(MemorySegment screen) {
        var mh$ = gdk_screen_get_window_stack$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_app_launch_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1873.const$2,"gdk_app_launch_context_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_app_launch_context_get_type();
     * }
     */
    public static long gdk_app_launch_context_get_type() {
        var mh$ = gdk_app_launch_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_app_launch_context_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1873.const$3,"gdk_app_launch_context_new");
    }
    /**
     * {@snippet :
     * struct _GdkAppLaunchContext* gdk_app_launch_context_new();
     * }
     */
    public static MemorySegment gdk_app_launch_context_new() {
        var mh$ = gdk_app_launch_context_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_app_launch_context_set_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1873.const$4,"gdk_app_launch_context_set_display");
    }
    /**
     * {@snippet :
     * void gdk_app_launch_context_set_display(struct _GdkAppLaunchContext* context, struct _GdkDisplay* display);
     * }
     */
    public static void gdk_app_launch_context_set_display(MemorySegment context, MemorySegment display) {
        var mh$ = gdk_app_launch_context_set_display$MH();
        try {
            mh$.invokeExact(context, display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_app_launch_context_set_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1873.const$5,"gdk_app_launch_context_set_screen");
    }
    /**
     * {@snippet :
     * void gdk_app_launch_context_set_screen(struct _GdkAppLaunchContext* context, struct _GdkScreen* screen);
     * }
     */
    public static void gdk_app_launch_context_set_screen(MemorySegment context, MemorySegment screen) {
        var mh$ = gdk_app_launch_context_set_screen$MH();
        try {
            mh$.invokeExact(context, screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_app_launch_context_set_desktop$MH() {
        return RuntimeHelper.requireNonNull(constants$1874.const$0,"gdk_app_launch_context_set_desktop");
    }
    /**
     * {@snippet :
     * void gdk_app_launch_context_set_desktop(struct _GdkAppLaunchContext* context, int desktop);
     * }
     */
    public static void gdk_app_launch_context_set_desktop(MemorySegment context, int desktop) {
        var mh$ = gdk_app_launch_context_set_desktop$MH();
        try {
            mh$.invokeExact(context, desktop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_app_launch_context_set_timestamp$MH() {
        return RuntimeHelper.requireNonNull(constants$1874.const$1,"gdk_app_launch_context_set_timestamp");
    }
    /**
     * {@snippet :
     * void gdk_app_launch_context_set_timestamp(struct _GdkAppLaunchContext* context, unsigned int timestamp);
     * }
     */
    public static void gdk_app_launch_context_set_timestamp(MemorySegment context, int timestamp) {
        var mh$ = gdk_app_launch_context_set_timestamp$MH();
        try {
            mh$.invokeExact(context, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_app_launch_context_set_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1874.const$2,"gdk_app_launch_context_set_icon");
    }
    /**
     * {@snippet :
     * void gdk_app_launch_context_set_icon(struct _GdkAppLaunchContext* context, struct _GIcon* icon);
     * }
     */
    public static void gdk_app_launch_context_set_icon(MemorySegment context, MemorySegment icon) {
        var mh$ = gdk_app_launch_context_set_icon$MH();
        try {
            mh$.invokeExact(context, icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_app_launch_context_set_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1874.const$3,"gdk_app_launch_context_set_icon_name");
    }
    /**
     * {@snippet :
     * void gdk_app_launch_context_set_icon_name(struct _GdkAppLaunchContext* context, char* icon_name);
     * }
     */
    public static void gdk_app_launch_context_set_icon_name(MemorySegment context, MemorySegment icon_name) {
        var mh$ = gdk_app_launch_context_set_icon_name$MH();
        try {
            mh$.invokeExact(context, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_color_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1875.const$3,"gdk_color_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_color_get_type();
     * }
     */
    public static long gdk_color_get_type() {
        var mh$ = gdk_color_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_color_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1875.const$4,"gdk_color_copy");
    }
    /**
     * {@snippet :
     * struct _GdkColor* gdk_color_copy(struct _GdkColor* color);
     * }
     */
    public static MemorySegment gdk_color_copy(MemorySegment color) {
        var mh$ = gdk_color_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_color_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1875.const$5,"gdk_color_free");
    }
    /**
     * {@snippet :
     * void gdk_color_free(struct _GdkColor* color);
     * }
     */
    public static void gdk_color_free(MemorySegment color) {
        var mh$ = gdk_color_free$MH();
        try {
            mh$.invokeExact(color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_color_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$1876.const$0,"gdk_color_hash");
    }
    /**
     * {@snippet :
     * unsigned int gdk_color_hash(struct _GdkColor* color);
     * }
     */
    public static int gdk_color_hash(MemorySegment color) {
        var mh$ = gdk_color_hash$MH();
        try {
            return (int)mh$.invokeExact(color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_color_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1876.const$1,"gdk_color_equal");
    }
    /**
     * {@snippet :
     * int gdk_color_equal(struct _GdkColor* colora, struct _GdkColor* colorb);
     * }
     */
    public static int gdk_color_equal(MemorySegment colora, MemorySegment colorb) {
        var mh$ = gdk_color_equal$MH();
        try {
            return (int)mh$.invokeExact(colora, colorb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_color_parse$MH() {
        return RuntimeHelper.requireNonNull(constants$1876.const$2,"gdk_color_parse");
    }
    /**
     * {@snippet :
     * int gdk_color_parse(char* spec, struct _GdkColor* color);
     * }
     */
    public static int gdk_color_parse(MemorySegment spec, MemorySegment color) {
        var mh$ = gdk_color_parse$MH();
        try {
            return (int)mh$.invokeExact(spec, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_color_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1876.const$3,"gdk_color_to_string");
    }
    /**
     * {@snippet :
     * char* gdk_color_to_string(struct _GdkColor* color);
     * }
     */
    public static MemorySegment gdk_color_to_string(MemorySegment color) {
        var mh$ = gdk_color_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rgba_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1877.const$3,"gdk_rgba_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_rgba_get_type();
     * }
     */
    public static long gdk_rgba_get_type() {
        var mh$ = gdk_rgba_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rgba_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1877.const$4,"gdk_rgba_copy");
    }
    /**
     * {@snippet :
     * struct _GdkRGBA* gdk_rgba_copy(struct _GdkRGBA* rgba);
     * }
     */
    public static MemorySegment gdk_rgba_copy(MemorySegment rgba) {
        var mh$ = gdk_rgba_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rgba_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1877.const$5,"gdk_rgba_free");
    }
    /**
     * {@snippet :
     * void gdk_rgba_free(struct _GdkRGBA* rgba);
     * }
     */
    public static void gdk_rgba_free(MemorySegment rgba) {
        var mh$ = gdk_rgba_free$MH();
        try {
            mh$.invokeExact(rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rgba_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$1878.const$0,"gdk_rgba_hash");
    }
    /**
     * {@snippet :
     * unsigned int gdk_rgba_hash(void* p);
     * }
     */
    public static int gdk_rgba_hash(MemorySegment p) {
        var mh$ = gdk_rgba_hash$MH();
        try {
            return (int)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rgba_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1878.const$1,"gdk_rgba_equal");
    }
    /**
     * {@snippet :
     * int gdk_rgba_equal(void* p1, void* p2);
     * }
     */
    public static int gdk_rgba_equal(MemorySegment p1, MemorySegment p2) {
        var mh$ = gdk_rgba_equal$MH();
        try {
            return (int)mh$.invokeExact(p1, p2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rgba_parse$MH() {
        return RuntimeHelper.requireNonNull(constants$1878.const$2,"gdk_rgba_parse");
    }
    /**
     * {@snippet :
     * int gdk_rgba_parse(struct _GdkRGBA* rgba, char* spec);
     * }
     */
    public static int gdk_rgba_parse(MemorySegment rgba, MemorySegment spec) {
        var mh$ = gdk_rgba_parse$MH();
        try {
            return (int)mh$.invokeExact(rgba, spec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_rgba_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1878.const$3,"gdk_rgba_to_string");
    }
    /**
     * {@snippet :
     * char* gdk_rgba_to_string(struct _GdkRGBA* rgba);
     * }
     */
    public static MemorySegment gdk_rgba_to_string(MemorySegment rgba) {
        var mh$ = gdk_rgba_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout gdk_pixbuf_major_version$LAYOUT() {
        return JAVA_INT;
    }
    public static VarHandle gdk_pixbuf_major_version$VH() {
        return constants$7.const$0;
    }
    public static MemorySegment gdk_pixbuf_major_version$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1878.const$4,"gdk_pixbuf_major_version");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * unsigned int gdk_pixbuf_major_version;
     * }
     */
    public static int gdk_pixbuf_major_version$get() {
        return (int) constants$7.const$0.get(RuntimeHelper.requireNonNull(constants$1878.const$4, "gdk_pixbuf_major_version"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * unsigned int gdk_pixbuf_major_version;
     * }
     */
    public static void gdk_pixbuf_major_version$set(int x) {
        constants$7.const$0.set(RuntimeHelper.requireNonNull(constants$1878.const$4, "gdk_pixbuf_major_version"), x);
    }
    public static MemoryLayout gdk_pixbuf_minor_version$LAYOUT() {
        return JAVA_INT;
    }
    public static VarHandle gdk_pixbuf_minor_version$VH() {
        return constants$7.const$0;
    }
    public static MemorySegment gdk_pixbuf_minor_version$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1878.const$5,"gdk_pixbuf_minor_version");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * unsigned int gdk_pixbuf_minor_version;
     * }
     */
    public static int gdk_pixbuf_minor_version$get() {
        return (int) constants$7.const$0.get(RuntimeHelper.requireNonNull(constants$1878.const$5, "gdk_pixbuf_minor_version"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * unsigned int gdk_pixbuf_minor_version;
     * }
     */
    public static void gdk_pixbuf_minor_version$set(int x) {
        constants$7.const$0.set(RuntimeHelper.requireNonNull(constants$1878.const$5, "gdk_pixbuf_minor_version"), x);
    }
    public static MemoryLayout gdk_pixbuf_micro_version$LAYOUT() {
        return JAVA_INT;
    }
    public static VarHandle gdk_pixbuf_micro_version$VH() {
        return constants$7.const$0;
    }
    public static MemorySegment gdk_pixbuf_micro_version$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1879.const$0,"gdk_pixbuf_micro_version");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * unsigned int gdk_pixbuf_micro_version;
     * }
     */
    public static int gdk_pixbuf_micro_version$get() {
        return (int) constants$7.const$0.get(RuntimeHelper.requireNonNull(constants$1879.const$0, "gdk_pixbuf_micro_version"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * unsigned int gdk_pixbuf_micro_version;
     * }
     */
    public static void gdk_pixbuf_micro_version$set(int x) {
        constants$7.const$0.set(RuntimeHelper.requireNonNull(constants$1879.const$0, "gdk_pixbuf_micro_version"), x);
    }
    public static MemoryLayout gdk_pixbuf_version$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle gdk_pixbuf_version$VH() {
        return constants$211.const$1;
    }
    public static MemorySegment gdk_pixbuf_version$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1879.const$1,"gdk_pixbuf_version");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * char* gdk_pixbuf_version;
     * }
     */
    public static MemorySegment gdk_pixbuf_version$get() {
        return (java.lang.foreign.MemorySegment) constants$211.const$1.get(RuntimeHelper.requireNonNull(constants$1879.const$1, "gdk_pixbuf_version"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * char* gdk_pixbuf_version;
     * }
     */
    public static void gdk_pixbuf_version$set(MemorySegment x) {
        constants$211.const$1.set(RuntimeHelper.requireNonNull(constants$1879.const$1, "gdk_pixbuf_version"), x);
    }
    /**
     * {@snippet :
     * enum GdkPixbufAlphaMode.GDK_PIXBUF_ALPHA_BILEVEL = 0;
     * }
     */
    public static int GDK_PIXBUF_ALPHA_BILEVEL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkPixbufAlphaMode.GDK_PIXBUF_ALPHA_FULL = 1;
     * }
     */
    public static int GDK_PIXBUF_ALPHA_FULL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkColorspace.GDK_COLORSPACE_RGB = 0;
     * }
     */
    public static int GDK_COLORSPACE_RGB() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkPixbufError.GDK_PIXBUF_ERROR_CORRUPT_IMAGE = 0;
     * }
     */
    public static int GDK_PIXBUF_ERROR_CORRUPT_IMAGE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkPixbufError.GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY = 1;
     * }
     */
    public static int GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkPixbufError.GDK_PIXBUF_ERROR_BAD_OPTION = 2;
     * }
     */
    public static int GDK_PIXBUF_ERROR_BAD_OPTION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkPixbufError.GDK_PIXBUF_ERROR_UNKNOWN_TYPE = 3;
     * }
     */
    public static int GDK_PIXBUF_ERROR_UNKNOWN_TYPE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkPixbufError.GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION = 4;
     * }
     */
    public static int GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkPixbufError.GDK_PIXBUF_ERROR_FAILED = 5;
     * }
     */
    public static int GDK_PIXBUF_ERROR_FAILED() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GdkPixbufError.GDK_PIXBUF_ERROR_INCOMPLETE_ANIMATION = 6;
     * }
     */
    public static int GDK_PIXBUF_ERROR_INCOMPLETE_ANIMATION() {
        return (int)6L;
    }
    public static MethodHandle gdk_pixbuf_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1879.const$3,"gdk_pixbuf_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int gdk_pixbuf_error_quark();
     * }
     */
    public static int gdk_pixbuf_error_quark() {
        var mh$ = gdk_pixbuf_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1879.const$4,"gdk_pixbuf_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_pixbuf_get_type();
     * }
     */
    public static long gdk_pixbuf_get_type() {
        var mh$ = gdk_pixbuf_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1879.const$5,"gdk_pixbuf_ref");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_ref(struct _GdkPixbuf* pixbuf);
     * }
     */
    public static MemorySegment gdk_pixbuf_ref(MemorySegment pixbuf) {
        var mh$ = gdk_pixbuf_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1880.const$0,"gdk_pixbuf_unref");
    }
    /**
     * {@snippet :
     * void gdk_pixbuf_unref(struct _GdkPixbuf* pixbuf);
     * }
     */
    public static void gdk_pixbuf_unref(MemorySegment pixbuf) {
        var mh$ = gdk_pixbuf_unref$MH();
        try {
            mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_colorspace$MH() {
        return RuntimeHelper.requireNonNull(constants$1880.const$1,"gdk_pixbuf_get_colorspace");
    }
    /**
     * {@snippet :
     * enum GdkColorspace gdk_pixbuf_get_colorspace(struct _GdkPixbuf* pixbuf);
     * }
     */
    public static int gdk_pixbuf_get_colorspace(MemorySegment pixbuf) {
        var mh$ = gdk_pixbuf_get_colorspace$MH();
        try {
            return (int)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_n_channels$MH() {
        return RuntimeHelper.requireNonNull(constants$1880.const$2,"gdk_pixbuf_get_n_channels");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_get_n_channels(struct _GdkPixbuf* pixbuf);
     * }
     */
    public static int gdk_pixbuf_get_n_channels(MemorySegment pixbuf) {
        var mh$ = gdk_pixbuf_get_n_channels$MH();
        try {
            return (int)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_has_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1880.const$3,"gdk_pixbuf_get_has_alpha");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_get_has_alpha(struct _GdkPixbuf* pixbuf);
     * }
     */
    public static int gdk_pixbuf_get_has_alpha(MemorySegment pixbuf) {
        var mh$ = gdk_pixbuf_get_has_alpha$MH();
        try {
            return (int)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_bits_per_sample$MH() {
        return RuntimeHelper.requireNonNull(constants$1880.const$4,"gdk_pixbuf_get_bits_per_sample");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_get_bits_per_sample(struct _GdkPixbuf* pixbuf);
     * }
     */
    public static int gdk_pixbuf_get_bits_per_sample(MemorySegment pixbuf) {
        var mh$ = gdk_pixbuf_get_bits_per_sample$MH();
        try {
            return (int)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_pixels$MH() {
        return RuntimeHelper.requireNonNull(constants$1880.const$5,"gdk_pixbuf_get_pixels");
    }
    /**
     * {@snippet :
     * unsigned char* gdk_pixbuf_get_pixels(struct _GdkPixbuf* pixbuf);
     * }
     */
    public static MemorySegment gdk_pixbuf_get_pixels(MemorySegment pixbuf) {
        var mh$ = gdk_pixbuf_get_pixels$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1881.const$0,"gdk_pixbuf_get_width");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_get_width(struct _GdkPixbuf* pixbuf);
     * }
     */
    public static int gdk_pixbuf_get_width(MemorySegment pixbuf) {
        var mh$ = gdk_pixbuf_get_width$MH();
        try {
            return (int)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1881.const$1,"gdk_pixbuf_get_height");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_get_height(struct _GdkPixbuf* pixbuf);
     * }
     */
    public static int gdk_pixbuf_get_height(MemorySegment pixbuf) {
        var mh$ = gdk_pixbuf_get_height$MH();
        try {
            return (int)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_rowstride$MH() {
        return RuntimeHelper.requireNonNull(constants$1881.const$2,"gdk_pixbuf_get_rowstride");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_get_rowstride(struct _GdkPixbuf* pixbuf);
     * }
     */
    public static int gdk_pixbuf_get_rowstride(MemorySegment pixbuf) {
        var mh$ = gdk_pixbuf_get_rowstride$MH();
        try {
            return (int)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_byte_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1881.const$3,"gdk_pixbuf_get_byte_length");
    }
    /**
     * {@snippet :
     * unsigned long gdk_pixbuf_get_byte_length(struct _GdkPixbuf* pixbuf);
     * }
     */
    public static long gdk_pixbuf_get_byte_length(MemorySegment pixbuf) {
        var mh$ = gdk_pixbuf_get_byte_length$MH();
        try {
            return (long)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_pixels_with_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1881.const$4,"gdk_pixbuf_get_pixels_with_length");
    }
    /**
     * {@snippet :
     * unsigned char* gdk_pixbuf_get_pixels_with_length(struct _GdkPixbuf* pixbuf, unsigned int* length);
     * }
     */
    public static MemorySegment gdk_pixbuf_get_pixels_with_length(MemorySegment pixbuf, MemorySegment length) {
        var mh$ = gdk_pixbuf_get_pixels_with_length$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pixbuf, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_read_pixels$MH() {
        return RuntimeHelper.requireNonNull(constants$1881.const$5,"gdk_pixbuf_read_pixels");
    }
    /**
     * {@snippet :
     * unsigned char* gdk_pixbuf_read_pixels(struct _GdkPixbuf* pixbuf);
     * }
     */
    public static MemorySegment gdk_pixbuf_read_pixels(MemorySegment pixbuf) {
        var mh$ = gdk_pixbuf_read_pixels$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_read_pixel_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1882.const$0,"gdk_pixbuf_read_pixel_bytes");
    }
    /**
     * {@snippet :
     * struct _GBytes* gdk_pixbuf_read_pixel_bytes(struct _GdkPixbuf* pixbuf);
     * }
     */
    public static MemorySegment gdk_pixbuf_read_pixel_bytes(MemorySegment pixbuf) {
        var mh$ = gdk_pixbuf_read_pixel_bytes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1882.const$2,"gdk_pixbuf_new");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_new(enum GdkColorspace colorspace, int has_alpha, int bits_per_sample, int width, int height);
     * }
     */
    public static MemorySegment gdk_pixbuf_new(int colorspace, int has_alpha, int bits_per_sample, int width, int height) {
        var mh$ = gdk_pixbuf_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(colorspace, has_alpha, bits_per_sample, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_calculate_rowstride$MH() {
        return RuntimeHelper.requireNonNull(constants$1882.const$4,"gdk_pixbuf_calculate_rowstride");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_calculate_rowstride(enum GdkColorspace colorspace, int has_alpha, int bits_per_sample, int width, int height);
     * }
     */
    public static int gdk_pixbuf_calculate_rowstride(int colorspace, int has_alpha, int bits_per_sample, int width, int height) {
        var mh$ = gdk_pixbuf_calculate_rowstride$MH();
        try {
            return (int)mh$.invokeExact(colorspace, has_alpha, bits_per_sample, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1882.const$5,"gdk_pixbuf_copy");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_copy(struct _GdkPixbuf* pixbuf);
     * }
     */
    public static MemorySegment gdk_pixbuf_copy(MemorySegment pixbuf) {
        var mh$ = gdk_pixbuf_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_subpixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1883.const$0,"gdk_pixbuf_new_subpixbuf");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_new_subpixbuf(struct _GdkPixbuf* src_pixbuf, int src_x, int src_y, int width, int height);
     * }
     */
    public static MemorySegment gdk_pixbuf_new_subpixbuf(MemorySegment src_pixbuf, int src_x, int src_y, int width, int height) {
        var mh$ = gdk_pixbuf_new_subpixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(src_pixbuf, src_x, src_y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1883.const$1,"gdk_pixbuf_new_from_file");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_new_from_file(char* filename, struct _GError** error);
     * }
     */
    public static MemorySegment gdk_pixbuf_new_from_file(MemorySegment filename, MemorySegment error) {
        var mh$ = gdk_pixbuf_new_from_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filename, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_file_at_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1883.const$2,"gdk_pixbuf_new_from_file_at_size");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_new_from_file_at_size(char* filename, int width, int height, struct _GError** error);
     * }
     */
    public static MemorySegment gdk_pixbuf_new_from_file_at_size(MemorySegment filename, int width, int height, MemorySegment error) {
        var mh$ = gdk_pixbuf_new_from_file_at_size$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filename, width, height, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_file_at_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1883.const$4,"gdk_pixbuf_new_from_file_at_scale");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_new_from_file_at_scale(char* filename, int width, int height, int preserve_aspect_ratio, struct _GError** error);
     * }
     */
    public static MemorySegment gdk_pixbuf_new_from_file_at_scale(MemorySegment filename, int width, int height, int preserve_aspect_ratio, MemorySegment error) {
        var mh$ = gdk_pixbuf_new_from_file_at_scale$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filename, width, height, preserve_aspect_ratio, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1883.const$5,"gdk_pixbuf_new_from_resource");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_new_from_resource(char* resource_path, struct _GError** error);
     * }
     */
    public static MemorySegment gdk_pixbuf_new_from_resource(MemorySegment resource_path, MemorySegment error) {
        var mh$ = gdk_pixbuf_new_from_resource$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resource_path, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_resource_at_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1884.const$0,"gdk_pixbuf_new_from_resource_at_scale");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_new_from_resource_at_scale(char* resource_path, int width, int height, int preserve_aspect_ratio, struct _GError** error);
     * }
     */
    public static MemorySegment gdk_pixbuf_new_from_resource_at_scale(MemorySegment resource_path, int width, int height, int preserve_aspect_ratio, MemorySegment error) {
        var mh$ = gdk_pixbuf_new_from_resource_at_scale$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resource_path, width, height, preserve_aspect_ratio, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1884.const$3,"gdk_pixbuf_new_from_data");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_new_from_data(unsigned char* data, enum GdkColorspace colorspace, int has_alpha, int bits_per_sample, int width, int height, int rowstride, void (*destroy_fn)(unsigned char*,void*), void* destroy_fn_data);
     * }
     */
    public static MemorySegment gdk_pixbuf_new_from_data(MemorySegment data, int colorspace, int has_alpha, int bits_per_sample, int width, int height, int rowstride, MemorySegment destroy_fn, MemorySegment destroy_fn_data) {
        var mh$ = gdk_pixbuf_new_from_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(data, colorspace, has_alpha, bits_per_sample, width, height, rowstride, destroy_fn, destroy_fn_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1884.const$5,"gdk_pixbuf_new_from_bytes");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_new_from_bytes(struct _GBytes* data, enum GdkColorspace colorspace, int has_alpha, int bits_per_sample, int width, int height, int rowstride);
     * }
     */
    public static MemorySegment gdk_pixbuf_new_from_bytes(MemorySegment data, int colorspace, int has_alpha, int bits_per_sample, int width, int height, int rowstride) {
        var mh$ = gdk_pixbuf_new_from_bytes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(data, colorspace, has_alpha, bits_per_sample, width, height, rowstride);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_xpm_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1885.const$0,"gdk_pixbuf_new_from_xpm_data");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_new_from_xpm_data(char** data);
     * }
     */
    public static MemorySegment gdk_pixbuf_new_from_xpm_data(MemorySegment data) {
        var mh$ = gdk_pixbuf_new_from_xpm_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_inline$MH() {
        return RuntimeHelper.requireNonNull(constants$1885.const$2,"gdk_pixbuf_new_from_inline");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_new_from_inline(int data_length, unsigned char* data, int copy_pixels, struct _GError** error);
     * }
     */
    public static MemorySegment gdk_pixbuf_new_from_inline(int data_length, MemorySegment data, int copy_pixels, MemorySegment error) {
        var mh$ = gdk_pixbuf_new_from_inline$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(data_length, data, copy_pixels, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_fill$MH() {
        return RuntimeHelper.requireNonNull(constants$1885.const$3,"gdk_pixbuf_fill");
    }
    /**
     * {@snippet :
     * void gdk_pixbuf_fill(struct _GdkPixbuf* pixbuf, unsigned int pixel);
     * }
     */
    public static void gdk_pixbuf_fill(MemorySegment pixbuf, int pixel) {
        var mh$ = gdk_pixbuf_fill$MH();
        try {
            mh$.invokeExact(pixbuf, pixel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save$MH() {
        return RuntimeHelper.requireNonNull(constants$1885.const$4,"gdk_pixbuf_save");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_save(struct _GdkPixbuf* pixbuf, char* filename, char* type, struct _GError** error,...);
     * }
     */
    public static int gdk_pixbuf_save(MemorySegment pixbuf, MemorySegment filename, MemorySegment type, MemorySegment error, Object... x4) {
        var mh$ = gdk_pixbuf_save$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, filename, type, error, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_savev$MH() {
        return RuntimeHelper.requireNonNull(constants$1885.const$5,"gdk_pixbuf_savev");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_savev(struct _GdkPixbuf* pixbuf, char* filename, char* type, char** option_keys, char** option_values, struct _GError** error);
     * }
     */
    public static int gdk_pixbuf_savev(MemorySegment pixbuf, MemorySegment filename, MemorySegment type, MemorySegment option_keys, MemorySegment option_values, MemorySegment error) {
        var mh$ = gdk_pixbuf_savev$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, filename, type, option_keys, option_values, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save_to_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1886.const$2,"gdk_pixbuf_save_to_callback");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_save_to_callback(struct _GdkPixbuf* pixbuf, int (*save_func)(char*,unsigned long,struct _GError**,void*), void* user_data, char* type, struct _GError** error,...);
     * }
     */
    public static int gdk_pixbuf_save_to_callback(MemorySegment pixbuf, MemorySegment save_func, MemorySegment user_data, MemorySegment type, MemorySegment error, Object... x5) {
        var mh$ = gdk_pixbuf_save_to_callback$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, save_func, user_data, type, error, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save_to_callbackv$MH() {
        return RuntimeHelper.requireNonNull(constants$1886.const$4,"gdk_pixbuf_save_to_callbackv");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_save_to_callbackv(struct _GdkPixbuf* pixbuf, int (*save_func)(char*,unsigned long,struct _GError**,void*), void* user_data, char* type, char** option_keys, char** option_values, struct _GError** error);
     * }
     */
    public static int gdk_pixbuf_save_to_callbackv(MemorySegment pixbuf, MemorySegment save_func, MemorySegment user_data, MemorySegment type, MemorySegment option_keys, MemorySegment option_values, MemorySegment error) {
        var mh$ = gdk_pixbuf_save_to_callbackv$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, save_func, user_data, type, option_keys, option_values, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save_to_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1886.const$5,"gdk_pixbuf_save_to_buffer");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_save_to_buffer(struct _GdkPixbuf* pixbuf, char** buffer, unsigned long* buffer_size, char* type, struct _GError** error,...);
     * }
     */
    public static int gdk_pixbuf_save_to_buffer(MemorySegment pixbuf, MemorySegment buffer, MemorySegment buffer_size, MemorySegment type, MemorySegment error, Object... x5) {
        var mh$ = gdk_pixbuf_save_to_buffer$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, buffer, buffer_size, type, error, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save_to_bufferv$MH() {
        return RuntimeHelper.requireNonNull(constants$1887.const$0,"gdk_pixbuf_save_to_bufferv");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_save_to_bufferv(struct _GdkPixbuf* pixbuf, char** buffer, unsigned long* buffer_size, char* type, char** option_keys, char** option_values, struct _GError** error);
     * }
     */
    public static int gdk_pixbuf_save_to_bufferv(MemorySegment pixbuf, MemorySegment buffer, MemorySegment buffer_size, MemorySegment type, MemorySegment option_keys, MemorySegment option_values, MemorySegment error) {
        var mh$ = gdk_pixbuf_save_to_bufferv$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, buffer, buffer_size, type, option_keys, option_values, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1887.const$1,"gdk_pixbuf_new_from_stream");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_new_from_stream(struct _GInputStream* stream, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment gdk_pixbuf_new_from_stream(MemorySegment stream, MemorySegment cancellable, MemorySegment error) {
        var mh$ = gdk_pixbuf_new_from_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_stream_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1887.const$3,"gdk_pixbuf_new_from_stream_async");
    }
    /**
     * {@snippet :
     * void gdk_pixbuf_new_from_stream_async(struct _GInputStream* stream, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void gdk_pixbuf_new_from_stream_async(MemorySegment stream, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gdk_pixbuf_new_from_stream_async$MH();
        try {
            mh$.invokeExact(stream, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_stream_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1887.const$4,"gdk_pixbuf_new_from_stream_finish");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_new_from_stream_finish(struct _GAsyncResult* async_result, struct _GError** error);
     * }
     */
    public static MemorySegment gdk_pixbuf_new_from_stream_finish(MemorySegment async_result, MemorySegment error) {
        var mh$ = gdk_pixbuf_new_from_stream_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(async_result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_stream_at_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1887.const$6,"gdk_pixbuf_new_from_stream_at_scale");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_new_from_stream_at_scale(struct _GInputStream* stream, int width, int height, int preserve_aspect_ratio, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment gdk_pixbuf_new_from_stream_at_scale(MemorySegment stream, int width, int height, int preserve_aspect_ratio, MemorySegment cancellable, MemorySegment error) {
        var mh$ = gdk_pixbuf_new_from_stream_at_scale$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, width, height, preserve_aspect_ratio, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_new_from_stream_at_scale_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1888.const$1,"gdk_pixbuf_new_from_stream_at_scale_async");
    }
    /**
     * {@snippet :
     * void gdk_pixbuf_new_from_stream_at_scale_async(struct _GInputStream* stream, int width, int height, int preserve_aspect_ratio, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void gdk_pixbuf_new_from_stream_at_scale_async(MemorySegment stream, int width, int height, int preserve_aspect_ratio, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gdk_pixbuf_new_from_stream_at_scale_async$MH();
        try {
            mh$.invokeExact(stream, width, height, preserve_aspect_ratio, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save_to_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1888.const$2,"gdk_pixbuf_save_to_stream");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_save_to_stream(struct _GdkPixbuf* pixbuf, struct _GOutputStream* stream, char* type, struct _GCancellable* cancellable, struct _GError** error,...);
     * }
     */
    public static int gdk_pixbuf_save_to_stream(MemorySegment pixbuf, MemorySegment stream, MemorySegment type, MemorySegment cancellable, MemorySegment error, Object... x5) {
        var mh$ = gdk_pixbuf_save_to_stream$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, stream, type, cancellable, error, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save_to_stream_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1888.const$4,"gdk_pixbuf_save_to_stream_async");
    }
    /**
     * {@snippet :
     * void gdk_pixbuf_save_to_stream_async(struct _GdkPixbuf* pixbuf, struct _GOutputStream* stream, char* type, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data,...);
     * }
     */
    public static void gdk_pixbuf_save_to_stream_async(MemorySegment pixbuf, MemorySegment stream, MemorySegment type, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data, Object... x6) {
        var mh$ = gdk_pixbuf_save_to_stream_async$MH();
        try {
            mh$.invokeExact(pixbuf, stream, type, cancellable, callback, user_data, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save_to_stream_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1888.const$5,"gdk_pixbuf_save_to_stream_finish");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_save_to_stream_finish(struct _GAsyncResult* async_result, struct _GError** error);
     * }
     */
    public static int gdk_pixbuf_save_to_stream_finish(MemorySegment async_result, MemorySegment error) {
        var mh$ = gdk_pixbuf_save_to_stream_finish$MH();
        try {
            return (int)mh$.invokeExact(async_result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save_to_streamv_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1889.const$1,"gdk_pixbuf_save_to_streamv_async");
    }
    /**
     * {@snippet :
     * void gdk_pixbuf_save_to_streamv_async(struct _GdkPixbuf* pixbuf, struct _GOutputStream* stream, char* type, char** option_keys, char** option_values, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void gdk_pixbuf_save_to_streamv_async(MemorySegment pixbuf, MemorySegment stream, MemorySegment type, MemorySegment option_keys, MemorySegment option_values, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gdk_pixbuf_save_to_streamv_async$MH();
        try {
            mh$.invokeExact(pixbuf, stream, type, option_keys, option_values, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_save_to_streamv$MH() {
        return RuntimeHelper.requireNonNull(constants$1889.const$2,"gdk_pixbuf_save_to_streamv");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_save_to_streamv(struct _GdkPixbuf* pixbuf, struct _GOutputStream* stream, char* type, char** option_keys, char** option_values, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int gdk_pixbuf_save_to_streamv(MemorySegment pixbuf, MemorySegment stream, MemorySegment type, MemorySegment option_keys, MemorySegment option_values, MemorySegment cancellable, MemorySegment error) {
        var mh$ = gdk_pixbuf_save_to_streamv$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, stream, type, option_keys, option_values, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_add_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1889.const$4,"gdk_pixbuf_add_alpha");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_add_alpha(struct _GdkPixbuf* pixbuf, int substitute_color, unsigned char r, unsigned char g, unsigned char b);
     * }
     */
    public static MemorySegment gdk_pixbuf_add_alpha(MemorySegment pixbuf, int substitute_color, byte r, byte g, byte b) {
        var mh$ = gdk_pixbuf_add_alpha$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pixbuf, substitute_color, r, g, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_copy_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1889.const$6,"gdk_pixbuf_copy_area");
    }
    /**
     * {@snippet :
     * void gdk_pixbuf_copy_area(struct _GdkPixbuf* src_pixbuf, int src_x, int src_y, int width, int height, struct _GdkPixbuf* dest_pixbuf, int dest_x, int dest_y);
     * }
     */
    public static void gdk_pixbuf_copy_area(MemorySegment src_pixbuf, int src_x, int src_y, int width, int height, MemorySegment dest_pixbuf, int dest_x, int dest_y) {
        var mh$ = gdk_pixbuf_copy_area$MH();
        try {
            mh$.invokeExact(src_pixbuf, src_x, src_y, width, height, dest_pixbuf, dest_x, dest_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_saturate_and_pixelate$MH() {
        return RuntimeHelper.requireNonNull(constants$1890.const$1,"gdk_pixbuf_saturate_and_pixelate");
    }
    /**
     * {@snippet :
     * void gdk_pixbuf_saturate_and_pixelate(struct _GdkPixbuf* src, struct _GdkPixbuf* dest, float saturation, int pixelate);
     * }
     */
    public static void gdk_pixbuf_saturate_and_pixelate(MemorySegment src, MemorySegment dest, float saturation, int pixelate) {
        var mh$ = gdk_pixbuf_saturate_and_pixelate$MH();
        try {
            mh$.invokeExact(src, dest, saturation, pixelate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_apply_embedded_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$1890.const$2,"gdk_pixbuf_apply_embedded_orientation");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_apply_embedded_orientation(struct _GdkPixbuf* src);
     * }
     */
    public static MemorySegment gdk_pixbuf_apply_embedded_orientation(MemorySegment src) {
        var mh$ = gdk_pixbuf_apply_embedded_orientation$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_set_option$MH() {
        return RuntimeHelper.requireNonNull(constants$1890.const$3,"gdk_pixbuf_set_option");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_set_option(struct _GdkPixbuf* pixbuf, char* key, char* value);
     * }
     */
    public static int gdk_pixbuf_set_option(MemorySegment pixbuf, MemorySegment key, MemorySegment value) {
        var mh$ = gdk_pixbuf_set_option$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_option$MH() {
        return RuntimeHelper.requireNonNull(constants$1890.const$4,"gdk_pixbuf_get_option");
    }
    /**
     * {@snippet :
     * char* gdk_pixbuf_get_option(struct _GdkPixbuf* pixbuf, char* key);
     * }
     */
    public static MemorySegment gdk_pixbuf_get_option(MemorySegment pixbuf, MemorySegment key) {
        var mh$ = gdk_pixbuf_get_option$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pixbuf, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_remove_option$MH() {
        return RuntimeHelper.requireNonNull(constants$1890.const$5,"gdk_pixbuf_remove_option");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_remove_option(struct _GdkPixbuf* pixbuf, char* key);
     * }
     */
    public static int gdk_pixbuf_remove_option(MemorySegment pixbuf, MemorySegment key) {
        var mh$ = gdk_pixbuf_remove_option$MH();
        try {
            return (int)mh$.invokeExact(pixbuf, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1891.const$0,"gdk_pixbuf_get_options");
    }
    /**
     * {@snippet :
     * struct _GHashTable* gdk_pixbuf_get_options(struct _GdkPixbuf* pixbuf);
     * }
     */
    public static MemorySegment gdk_pixbuf_get_options(MemorySegment pixbuf) {
        var mh$ = gdk_pixbuf_get_options$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_copy_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1891.const$1,"gdk_pixbuf_copy_options");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_copy_options(struct _GdkPixbuf* src_pixbuf, struct _GdkPixbuf* dest_pixbuf);
     * }
     */
    public static int gdk_pixbuf_copy_options(MemorySegment src_pixbuf, MemorySegment dest_pixbuf) {
        var mh$ = gdk_pixbuf_copy_options$MH();
        try {
            return (int)mh$.invokeExact(src_pixbuf, dest_pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GdkInterpType.GDK_INTERP_NEAREST = 0;
     * }
     */
    public static int GDK_INTERP_NEAREST() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkInterpType.GDK_INTERP_TILES = 1;
     * }
     */
    public static int GDK_INTERP_TILES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkInterpType.GDK_INTERP_BILINEAR = 2;
     * }
     */
    public static int GDK_INTERP_BILINEAR() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkInterpType.GDK_INTERP_HYPER = 3;
     * }
     */
    public static int GDK_INTERP_HYPER() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkPixbufRotation.GDK_PIXBUF_ROTATE_NONE = 0;
     * }
     */
    public static int GDK_PIXBUF_ROTATE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkPixbufRotation.GDK_PIXBUF_ROTATE_COUNTERCLOCKWISE = 90;
     * }
     */
    public static int GDK_PIXBUF_ROTATE_COUNTERCLOCKWISE() {
        return (int)90L;
    }
    /**
     * {@snippet :
     * enum GdkPixbufRotation.GDK_PIXBUF_ROTATE_UPSIDEDOWN = 180;
     * }
     */
    public static int GDK_PIXBUF_ROTATE_UPSIDEDOWN() {
        return (int)180L;
    }
    /**
     * {@snippet :
     * enum GdkPixbufRotation.GDK_PIXBUF_ROTATE_CLOCKWISE = 270;
     * }
     */
    public static int GDK_PIXBUF_ROTATE_CLOCKWISE() {
        return (int)270L;
    }
    public static MethodHandle gdk_pixbuf_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1891.const$3,"gdk_pixbuf_scale");
    }
    /**
     * {@snippet :
     * void gdk_pixbuf_scale(struct _GdkPixbuf* src, struct _GdkPixbuf* dest, int dest_x, int dest_y, int dest_width, int dest_height, double offset_x, double offset_y, double scale_x, double scale_y, enum GdkInterpType interp_type);
     * }
     */
    public static void gdk_pixbuf_scale(MemorySegment src, MemorySegment dest, int dest_x, int dest_y, int dest_width, int dest_height, double offset_x, double offset_y, double scale_x, double scale_y, int interp_type) {
        var mh$ = gdk_pixbuf_scale$MH();
        try {
            mh$.invokeExact(src, dest, dest_x, dest_y, dest_width, dest_height, offset_x, offset_y, scale_x, scale_y, interp_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_composite$MH() {
        return RuntimeHelper.requireNonNull(constants$1891.const$5,"gdk_pixbuf_composite");
    }
    /**
     * {@snippet :
     * void gdk_pixbuf_composite(struct _GdkPixbuf* src, struct _GdkPixbuf* dest, int dest_x, int dest_y, int dest_width, int dest_height, double offset_x, double offset_y, double scale_x, double scale_y, enum GdkInterpType interp_type, int overall_alpha);
     * }
     */
    public static void gdk_pixbuf_composite(MemorySegment src, MemorySegment dest, int dest_x, int dest_y, int dest_width, int dest_height, double offset_x, double offset_y, double scale_x, double scale_y, int interp_type, int overall_alpha) {
        var mh$ = gdk_pixbuf_composite$MH();
        try {
            mh$.invokeExact(src, dest, dest_x, dest_y, dest_width, dest_height, offset_x, offset_y, scale_x, scale_y, interp_type, overall_alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_composite_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1892.const$1,"gdk_pixbuf_composite_color");
    }
    /**
     * {@snippet :
     * void gdk_pixbuf_composite_color(struct _GdkPixbuf* src, struct _GdkPixbuf* dest, int dest_x, int dest_y, int dest_width, int dest_height, double offset_x, double offset_y, double scale_x, double scale_y, enum GdkInterpType interp_type, int overall_alpha, int check_x, int check_y, int check_size, unsigned int color1, unsigned int color2);
     * }
     */
    public static void gdk_pixbuf_composite_color(MemorySegment src, MemorySegment dest, int dest_x, int dest_y, int dest_width, int dest_height, double offset_x, double offset_y, double scale_x, double scale_y, int interp_type, int overall_alpha, int check_x, int check_y, int check_size, int color1, int color2) {
        var mh$ = gdk_pixbuf_composite_color$MH();
        try {
            mh$.invokeExact(src, dest, dest_x, dest_y, dest_width, dest_height, offset_x, offset_y, scale_x, scale_y, interp_type, overall_alpha, check_x, check_y, check_size, color1, color2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_scale_simple$MH() {
        return RuntimeHelper.requireNonNull(constants$1892.const$2,"gdk_pixbuf_scale_simple");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_scale_simple(struct _GdkPixbuf* src, int dest_width, int dest_height, enum GdkInterpType interp_type);
     * }
     */
    public static MemorySegment gdk_pixbuf_scale_simple(MemorySegment src, int dest_width, int dest_height, int interp_type) {
        var mh$ = gdk_pixbuf_scale_simple$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(src, dest_width, dest_height, interp_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_composite_color_simple$MH() {
        return RuntimeHelper.requireNonNull(constants$1892.const$4,"gdk_pixbuf_composite_color_simple");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_composite_color_simple(struct _GdkPixbuf* src, int dest_width, int dest_height, enum GdkInterpType interp_type, int overall_alpha, int check_size, unsigned int color1, unsigned int color2);
     * }
     */
    public static MemorySegment gdk_pixbuf_composite_color_simple(MemorySegment src, int dest_width, int dest_height, int interp_type, int overall_alpha, int check_size, int color1, int color2) {
        var mh$ = gdk_pixbuf_composite_color_simple$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(src, dest_width, dest_height, interp_type, overall_alpha, check_size, color1, color2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_rotate_simple$MH() {
        return RuntimeHelper.requireNonNull(constants$1892.const$5,"gdk_pixbuf_rotate_simple");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_rotate_simple(struct _GdkPixbuf* src, enum GdkPixbufRotation angle);
     * }
     */
    public static MemorySegment gdk_pixbuf_rotate_simple(MemorySegment src, int angle) {
        var mh$ = gdk_pixbuf_rotate_simple$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(src, angle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_flip$MH() {
        return RuntimeHelper.requireNonNull(constants$1893.const$0,"gdk_pixbuf_flip");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_flip(struct _GdkPixbuf* src, int horizontal);
     * }
     */
    public static MemorySegment gdk_pixbuf_flip(MemorySegment src, int horizontal) {
        var mh$ = gdk_pixbuf_flip$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(src, horizontal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1893.const$1,"gdk_pixbuf_animation_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_pixbuf_animation_get_type();
     * }
     */
    public static long gdk_pixbuf_animation_get_type() {
        var mh$ = gdk_pixbuf_animation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1893.const$2,"gdk_pixbuf_animation_new_from_file");
    }
    /**
     * {@snippet :
     * struct _GdkPixbufAnimation* gdk_pixbuf_animation_new_from_file(char* filename, struct _GError** error);
     * }
     */
    public static MemorySegment gdk_pixbuf_animation_new_from_file(MemorySegment filename, MemorySegment error) {
        var mh$ = gdk_pixbuf_animation_new_from_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filename, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_new_from_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1893.const$3,"gdk_pixbuf_animation_new_from_stream");
    }
    /**
     * {@snippet :
     * struct _GdkPixbufAnimation* gdk_pixbuf_animation_new_from_stream(struct _GInputStream* stream, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment gdk_pixbuf_animation_new_from_stream(MemorySegment stream, MemorySegment cancellable, MemorySegment error) {
        var mh$ = gdk_pixbuf_animation_new_from_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_new_from_stream_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1893.const$5,"gdk_pixbuf_animation_new_from_stream_async");
    }
    /**
     * {@snippet :
     * void gdk_pixbuf_animation_new_from_stream_async(struct _GInputStream* stream, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void gdk_pixbuf_animation_new_from_stream_async(MemorySegment stream, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gdk_pixbuf_animation_new_from_stream_async$MH();
        try {
            mh$.invokeExact(stream, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_new_from_stream_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1894.const$0,"gdk_pixbuf_animation_new_from_stream_finish");
    }
    /**
     * {@snippet :
     * struct _GdkPixbufAnimation* gdk_pixbuf_animation_new_from_stream_finish(struct _GAsyncResult* async_result, struct _GError** error);
     * }
     */
    public static MemorySegment gdk_pixbuf_animation_new_from_stream_finish(MemorySegment async_result, MemorySegment error) {
        var mh$ = gdk_pixbuf_animation_new_from_stream_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(async_result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_new_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1894.const$1,"gdk_pixbuf_animation_new_from_resource");
    }
    /**
     * {@snippet :
     * struct _GdkPixbufAnimation* gdk_pixbuf_animation_new_from_resource(char* resource_path, struct _GError** error);
     * }
     */
    public static MemorySegment gdk_pixbuf_animation_new_from_resource(MemorySegment resource_path, MemorySegment error) {
        var mh$ = gdk_pixbuf_animation_new_from_resource$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resource_path, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1894.const$2,"gdk_pixbuf_animation_ref");
    }
    /**
     * {@snippet :
     * struct _GdkPixbufAnimation* gdk_pixbuf_animation_ref(struct _GdkPixbufAnimation* animation);
     * }
     */
    public static MemorySegment gdk_pixbuf_animation_ref(MemorySegment animation) {
        var mh$ = gdk_pixbuf_animation_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(animation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1894.const$3,"gdk_pixbuf_animation_unref");
    }
    /**
     * {@snippet :
     * void gdk_pixbuf_animation_unref(struct _GdkPixbufAnimation* animation);
     * }
     */
    public static void gdk_pixbuf_animation_unref(MemorySegment animation) {
        var mh$ = gdk_pixbuf_animation_unref$MH();
        try {
            mh$.invokeExact(animation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1894.const$4,"gdk_pixbuf_animation_get_width");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_animation_get_width(struct _GdkPixbufAnimation* animation);
     * }
     */
    public static int gdk_pixbuf_animation_get_width(MemorySegment animation) {
        var mh$ = gdk_pixbuf_animation_get_width$MH();
        try {
            return (int)mh$.invokeExact(animation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1894.const$5,"gdk_pixbuf_animation_get_height");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_animation_get_height(struct _GdkPixbufAnimation* animation);
     * }
     */
    public static int gdk_pixbuf_animation_get_height(MemorySegment animation) {
        var mh$ = gdk_pixbuf_animation_get_height$MH();
        try {
            return (int)mh$.invokeExact(animation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_is_static_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1895.const$0,"gdk_pixbuf_animation_is_static_image");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_animation_is_static_image(struct _GdkPixbufAnimation* animation);
     * }
     */
    public static int gdk_pixbuf_animation_is_static_image(MemorySegment animation) {
        var mh$ = gdk_pixbuf_animation_is_static_image$MH();
        try {
            return (int)mh$.invokeExact(animation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_get_static_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1895.const$1,"gdk_pixbuf_animation_get_static_image");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_animation_get_static_image(struct _GdkPixbufAnimation* animation);
     * }
     */
    public static MemorySegment gdk_pixbuf_animation_get_static_image(MemorySegment animation) {
        var mh$ = gdk_pixbuf_animation_get_static_image$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(animation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_get_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$1895.const$2,"gdk_pixbuf_animation_get_iter");
    }
    /**
     * {@snippet :
     * struct _GdkPixbufAnimationIter* gdk_pixbuf_animation_get_iter(struct _GdkPixbufAnimation* animation, struct _GTimeVal* start_time);
     * }
     */
    public static MemorySegment gdk_pixbuf_animation_get_iter(MemorySegment animation, MemorySegment start_time) {
        var mh$ = gdk_pixbuf_animation_get_iter$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(animation, start_time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_iter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1895.const$3,"gdk_pixbuf_animation_iter_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_pixbuf_animation_iter_get_type();
     * }
     */
    public static long gdk_pixbuf_animation_iter_get_type() {
        var mh$ = gdk_pixbuf_animation_iter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_iter_get_delay_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1895.const$4,"gdk_pixbuf_animation_iter_get_delay_time");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_animation_iter_get_delay_time(struct _GdkPixbufAnimationIter* iter);
     * }
     */
    public static int gdk_pixbuf_animation_iter_get_delay_time(MemorySegment iter) {
        var mh$ = gdk_pixbuf_animation_iter_get_delay_time$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_iter_get_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1895.const$5,"gdk_pixbuf_animation_iter_get_pixbuf");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_animation_iter_get_pixbuf(struct _GdkPixbufAnimationIter* iter);
     * }
     */
    public static MemorySegment gdk_pixbuf_animation_iter_get_pixbuf(MemorySegment iter) {
        var mh$ = gdk_pixbuf_animation_iter_get_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_iter_on_currently_loading_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$1896.const$0,"gdk_pixbuf_animation_iter_on_currently_loading_frame");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_animation_iter_on_currently_loading_frame(struct _GdkPixbufAnimationIter* iter);
     * }
     */
    public static int gdk_pixbuf_animation_iter_on_currently_loading_frame(MemorySegment iter) {
        var mh$ = gdk_pixbuf_animation_iter_on_currently_loading_frame$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_animation_iter_advance$MH() {
        return RuntimeHelper.requireNonNull(constants$1896.const$1,"gdk_pixbuf_animation_iter_advance");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_animation_iter_advance(struct _GdkPixbufAnimationIter* iter, struct _GTimeVal* current_time);
     * }
     */
    public static int gdk_pixbuf_animation_iter_advance(MemorySegment iter, MemorySegment current_time) {
        var mh$ = gdk_pixbuf_animation_iter_advance$MH();
        try {
            return (int)mh$.invokeExact(iter, current_time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_simple_anim_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1896.const$2,"gdk_pixbuf_simple_anim_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_pixbuf_simple_anim_get_type();
     * }
     */
    public static long gdk_pixbuf_simple_anim_get_type() {
        var mh$ = gdk_pixbuf_simple_anim_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_simple_anim_iter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1896.const$3,"gdk_pixbuf_simple_anim_iter_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_pixbuf_simple_anim_iter_get_type();
     * }
     */
    public static long gdk_pixbuf_simple_anim_iter_get_type() {
        var mh$ = gdk_pixbuf_simple_anim_iter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_simple_anim_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1896.const$5,"gdk_pixbuf_simple_anim_new");
    }
    /**
     * {@snippet :
     * struct _GdkPixbufSimpleAnim* gdk_pixbuf_simple_anim_new(int width, int height, float rate);
     * }
     */
    public static MemorySegment gdk_pixbuf_simple_anim_new(int width, int height, float rate) {
        var mh$ = gdk_pixbuf_simple_anim_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(width, height, rate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_simple_anim_add_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$1897.const$0,"gdk_pixbuf_simple_anim_add_frame");
    }
    /**
     * {@snippet :
     * void gdk_pixbuf_simple_anim_add_frame(struct _GdkPixbufSimpleAnim* animation, struct _GdkPixbuf* pixbuf);
     * }
     */
    public static void gdk_pixbuf_simple_anim_add_frame(MemorySegment animation, MemorySegment pixbuf) {
        var mh$ = gdk_pixbuf_simple_anim_add_frame$MH();
        try {
            mh$.invokeExact(animation, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_simple_anim_set_loop$MH() {
        return RuntimeHelper.requireNonNull(constants$1897.const$1,"gdk_pixbuf_simple_anim_set_loop");
    }
    /**
     * {@snippet :
     * void gdk_pixbuf_simple_anim_set_loop(struct _GdkPixbufSimpleAnim* animation, int loop);
     * }
     */
    public static void gdk_pixbuf_simple_anim_set_loop(MemorySegment animation, int loop) {
        var mh$ = gdk_pixbuf_simple_anim_set_loop$MH();
        try {
            mh$.invokeExact(animation, loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_simple_anim_get_loop$MH() {
        return RuntimeHelper.requireNonNull(constants$1897.const$2,"gdk_pixbuf_simple_anim_get_loop");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_simple_anim_get_loop(struct _GdkPixbufSimpleAnim* animation);
     * }
     */
    public static int gdk_pixbuf_simple_anim_get_loop(MemorySegment animation) {
        var mh$ = gdk_pixbuf_simple_anim_get_loop$MH();
        try {
            return (int)mh$.invokeExact(animation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_init_modules$MH() {
        return RuntimeHelper.requireNonNull(constants$1897.const$3,"gdk_pixbuf_init_modules");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_init_modules(char* path, struct _GError** error);
     * }
     */
    public static int gdk_pixbuf_init_modules(MemorySegment path, MemorySegment error) {
        var mh$ = gdk_pixbuf_init_modules$MH();
        try {
            return (int)mh$.invokeExact(path, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1897.const$4,"gdk_pixbuf_format_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_pixbuf_format_get_type();
     * }
     */
    public static long gdk_pixbuf_format_get_type() {
        var mh$ = gdk_pixbuf_format_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_formats$MH() {
        return RuntimeHelper.requireNonNull(constants$1897.const$5,"gdk_pixbuf_get_formats");
    }
    /**
     * {@snippet :
     * struct _GSList* gdk_pixbuf_get_formats();
     * }
     */
    public static MemorySegment gdk_pixbuf_get_formats() {
        var mh$ = gdk_pixbuf_get_formats$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1898.const$0,"gdk_pixbuf_format_get_name");
    }
    /**
     * {@snippet :
     * char* gdk_pixbuf_format_get_name(struct _GdkPixbufFormat* format);
     * }
     */
    public static MemorySegment gdk_pixbuf_format_get_name(MemorySegment format) {
        var mh$ = gdk_pixbuf_format_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1898.const$1,"gdk_pixbuf_format_get_description");
    }
    /**
     * {@snippet :
     * char* gdk_pixbuf_format_get_description(struct _GdkPixbufFormat* format);
     * }
     */
    public static MemorySegment gdk_pixbuf_format_get_description(MemorySegment format) {
        var mh$ = gdk_pixbuf_format_get_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_get_mime_types$MH() {
        return RuntimeHelper.requireNonNull(constants$1898.const$2,"gdk_pixbuf_format_get_mime_types");
    }
    /**
     * {@snippet :
     * char** gdk_pixbuf_format_get_mime_types(struct _GdkPixbufFormat* format);
     * }
     */
    public static MemorySegment gdk_pixbuf_format_get_mime_types(MemorySegment format) {
        var mh$ = gdk_pixbuf_format_get_mime_types$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_get_extensions$MH() {
        return RuntimeHelper.requireNonNull(constants$1898.const$3,"gdk_pixbuf_format_get_extensions");
    }
    /**
     * {@snippet :
     * char** gdk_pixbuf_format_get_extensions(struct _GdkPixbufFormat* format);
     * }
     */
    public static MemorySegment gdk_pixbuf_format_get_extensions(MemorySegment format) {
        var mh$ = gdk_pixbuf_format_get_extensions$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_is_save_option_supported$MH() {
        return RuntimeHelper.requireNonNull(constants$1898.const$4,"gdk_pixbuf_format_is_save_option_supported");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_format_is_save_option_supported(struct _GdkPixbufFormat* format, char* option_key);
     * }
     */
    public static int gdk_pixbuf_format_is_save_option_supported(MemorySegment format, MemorySegment option_key) {
        var mh$ = gdk_pixbuf_format_is_save_option_supported$MH();
        try {
            return (int)mh$.invokeExact(format, option_key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_is_writable$MH() {
        return RuntimeHelper.requireNonNull(constants$1898.const$5,"gdk_pixbuf_format_is_writable");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_format_is_writable(struct _GdkPixbufFormat* format);
     * }
     */
    public static int gdk_pixbuf_format_is_writable(MemorySegment format) {
        var mh$ = gdk_pixbuf_format_is_writable$MH();
        try {
            return (int)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_is_scalable$MH() {
        return RuntimeHelper.requireNonNull(constants$1899.const$0,"gdk_pixbuf_format_is_scalable");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_format_is_scalable(struct _GdkPixbufFormat* format);
     * }
     */
    public static int gdk_pixbuf_format_is_scalable(MemorySegment format) {
        var mh$ = gdk_pixbuf_format_is_scalable$MH();
        try {
            return (int)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_is_disabled$MH() {
        return RuntimeHelper.requireNonNull(constants$1899.const$1,"gdk_pixbuf_format_is_disabled");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_format_is_disabled(struct _GdkPixbufFormat* format);
     * }
     */
    public static int gdk_pixbuf_format_is_disabled(MemorySegment format) {
        var mh$ = gdk_pixbuf_format_is_disabled$MH();
        try {
            return (int)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_set_disabled$MH() {
        return RuntimeHelper.requireNonNull(constants$1899.const$2,"gdk_pixbuf_format_set_disabled");
    }
    /**
     * {@snippet :
     * void gdk_pixbuf_format_set_disabled(struct _GdkPixbufFormat* format, int disabled);
     * }
     */
    public static void gdk_pixbuf_format_set_disabled(MemorySegment format, int disabled) {
        var mh$ = gdk_pixbuf_format_set_disabled$MH();
        try {
            mh$.invokeExact(format, disabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_get_license$MH() {
        return RuntimeHelper.requireNonNull(constants$1899.const$3,"gdk_pixbuf_format_get_license");
    }
    /**
     * {@snippet :
     * char* gdk_pixbuf_format_get_license(struct _GdkPixbufFormat* format);
     * }
     */
    public static MemorySegment gdk_pixbuf_format_get_license(MemorySegment format) {
        var mh$ = gdk_pixbuf_format_get_license$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_file_info$MH() {
        return RuntimeHelper.requireNonNull(constants$1899.const$4,"gdk_pixbuf_get_file_info");
    }
    /**
     * {@snippet :
     * struct _GdkPixbufFormat* gdk_pixbuf_get_file_info(char* filename, int* width, int* height);
     * }
     */
    public static MemorySegment gdk_pixbuf_get_file_info(MemorySegment filename, MemorySegment width, MemorySegment height) {
        var mh$ = gdk_pixbuf_get_file_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filename, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_file_info_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1900.const$0,"gdk_pixbuf_get_file_info_async");
    }
    /**
     * {@snippet :
     * void gdk_pixbuf_get_file_info_async(char* filename, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void gdk_pixbuf_get_file_info_async(MemorySegment filename, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gdk_pixbuf_get_file_info_async$MH();
        try {
            mh$.invokeExact(filename, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_file_info_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1900.const$1,"gdk_pixbuf_get_file_info_finish");
    }
    /**
     * {@snippet :
     * struct _GdkPixbufFormat* gdk_pixbuf_get_file_info_finish(struct _GAsyncResult* async_result, int* width, int* height, struct _GError** error);
     * }
     */
    public static MemorySegment gdk_pixbuf_get_file_info_finish(MemorySegment async_result, MemorySegment width, MemorySegment height, MemorySegment error) {
        var mh$ = gdk_pixbuf_get_file_info_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(async_result, width, height, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1900.const$2,"gdk_pixbuf_format_copy");
    }
    /**
     * {@snippet :
     * struct _GdkPixbufFormat* gdk_pixbuf_format_copy(struct _GdkPixbufFormat* format);
     * }
     */
    public static MemorySegment gdk_pixbuf_format_copy(MemorySegment format) {
        var mh$ = gdk_pixbuf_format_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_format_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1900.const$3,"gdk_pixbuf_format_free");
    }
    /**
     * {@snippet :
     * void gdk_pixbuf_format_free(struct _GdkPixbufFormat* format);
     * }
     */
    public static void gdk_pixbuf_format_free(MemorySegment format) {
        var mh$ = gdk_pixbuf_format_free$MH();
        try {
            mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1902.const$4,"gdk_pixbuf_loader_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_pixbuf_loader_get_type();
     * }
     */
    public static long gdk_pixbuf_loader_get_type() {
        var mh$ = gdk_pixbuf_loader_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1902.const$5,"gdk_pixbuf_loader_new");
    }
    /**
     * {@snippet :
     * struct _GdkPixbufLoader* gdk_pixbuf_loader_new();
     * }
     */
    public static MemorySegment gdk_pixbuf_loader_new() {
        var mh$ = gdk_pixbuf_loader_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_new_with_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1903.const$0,"gdk_pixbuf_loader_new_with_type");
    }
    /**
     * {@snippet :
     * struct _GdkPixbufLoader* gdk_pixbuf_loader_new_with_type(char* image_type, struct _GError** error);
     * }
     */
    public static MemorySegment gdk_pixbuf_loader_new_with_type(MemorySegment image_type, MemorySegment error) {
        var mh$ = gdk_pixbuf_loader_new_with_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(image_type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_new_with_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1903.const$1,"gdk_pixbuf_loader_new_with_mime_type");
    }
    /**
     * {@snippet :
     * struct _GdkPixbufLoader* gdk_pixbuf_loader_new_with_mime_type(char* mime_type, struct _GError** error);
     * }
     */
    public static MemorySegment gdk_pixbuf_loader_new_with_mime_type(MemorySegment mime_type, MemorySegment error) {
        var mh$ = gdk_pixbuf_loader_new_with_mime_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mime_type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_set_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1903.const$2,"gdk_pixbuf_loader_set_size");
    }
    /**
     * {@snippet :
     * void gdk_pixbuf_loader_set_size(struct _GdkPixbufLoader* loader, int width, int height);
     * }
     */
    public static void gdk_pixbuf_loader_set_size(MemorySegment loader, int width, int height) {
        var mh$ = gdk_pixbuf_loader_set_size$MH();
        try {
            mh$.invokeExact(loader, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_write$MH() {
        return RuntimeHelper.requireNonNull(constants$1903.const$3,"gdk_pixbuf_loader_write");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_loader_write(struct _GdkPixbufLoader* loader, unsigned char* buf, unsigned long count, struct _GError** error);
     * }
     */
    public static int gdk_pixbuf_loader_write(MemorySegment loader, MemorySegment buf, long count, MemorySegment error) {
        var mh$ = gdk_pixbuf_loader_write$MH();
        try {
            return (int)mh$.invokeExact(loader, buf, count, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_write_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1903.const$4,"gdk_pixbuf_loader_write_bytes");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_loader_write_bytes(struct _GdkPixbufLoader* loader, struct _GBytes* buffer, struct _GError** error);
     * }
     */
    public static int gdk_pixbuf_loader_write_bytes(MemorySegment loader, MemorySegment buffer, MemorySegment error) {
        var mh$ = gdk_pixbuf_loader_write_bytes$MH();
        try {
            return (int)mh$.invokeExact(loader, buffer, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_get_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1903.const$5,"gdk_pixbuf_loader_get_pixbuf");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_loader_get_pixbuf(struct _GdkPixbufLoader* loader);
     * }
     */
    public static MemorySegment gdk_pixbuf_loader_get_pixbuf(MemorySegment loader) {
        var mh$ = gdk_pixbuf_loader_get_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(loader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_get_animation$MH() {
        return RuntimeHelper.requireNonNull(constants$1904.const$0,"gdk_pixbuf_loader_get_animation");
    }
    /**
     * {@snippet :
     * struct _GdkPixbufAnimation* gdk_pixbuf_loader_get_animation(struct _GdkPixbufLoader* loader);
     * }
     */
    public static MemorySegment gdk_pixbuf_loader_get_animation(MemorySegment loader) {
        var mh$ = gdk_pixbuf_loader_get_animation$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(loader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_close$MH() {
        return RuntimeHelper.requireNonNull(constants$1904.const$1,"gdk_pixbuf_loader_close");
    }
    /**
     * {@snippet :
     * int gdk_pixbuf_loader_close(struct _GdkPixbufLoader* loader, struct _GError** error);
     * }
     */
    public static int gdk_pixbuf_loader_close(MemorySegment loader, MemorySegment error) {
        var mh$ = gdk_pixbuf_loader_close$MH();
        try {
            return (int)mh$.invokeExact(loader, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_loader_get_format$MH() {
        return RuntimeHelper.requireNonNull(constants$1904.const$2,"gdk_pixbuf_loader_get_format");
    }
    /**
     * {@snippet :
     * struct _GdkPixbufFormat* gdk_pixbuf_loader_get_format(struct _GdkPixbufLoader* loader);
     * }
     */
    public static MemorySegment gdk_pixbuf_loader_get_format(MemorySegment loader) {
        var mh$ = gdk_pixbuf_loader_get_format$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(loader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_alpha_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1904.const$3,"gdk_pixbuf_alpha_mode_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_pixbuf_alpha_mode_get_type();
     * }
     */
    public static long gdk_pixbuf_alpha_mode_get_type() {
        var mh$ = gdk_pixbuf_alpha_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_colorspace_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1904.const$4,"gdk_colorspace_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_colorspace_get_type();
     * }
     */
    public static long gdk_colorspace_get_type() {
        var mh$ = gdk_colorspace_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1904.const$5,"gdk_pixbuf_error_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_pixbuf_error_get_type();
     * }
     */
    public static long gdk_pixbuf_error_get_type() {
        var mh$ = gdk_pixbuf_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_interp_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1905.const$0,"gdk_interp_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_interp_type_get_type();
     * }
     */
    public static long gdk_interp_type_get_type() {
        var mh$ = gdk_interp_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_rotation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1905.const$1,"gdk_pixbuf_rotation_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_pixbuf_rotation_get_type();
     * }
     */
    public static long gdk_pixbuf_rotation_get_type() {
        var mh$ = gdk_pixbuf_rotation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GdkPixbuf* GdkPixbuf_autoptr;
     * }
     */
    public static final AddressLayout GdkPixbuf_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkPixbuf_listautoptr;
     * }
     */
    public static final AddressLayout GdkPixbuf_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkPixbuf_slistautoptr;
     * }
     */
    public static final AddressLayout GdkPixbuf_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkPixbuf_queueautoptr;
     * }
     */
    public static final AddressLayout GdkPixbuf_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GdkPixbufAnimation* GdkPixbufAnimation_autoptr;
     * }
     */
    public static final AddressLayout GdkPixbufAnimation_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkPixbufAnimation_listautoptr;
     * }
     */
    public static final AddressLayout GdkPixbufAnimation_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkPixbufAnimation_slistautoptr;
     * }
     */
    public static final AddressLayout GdkPixbufAnimation_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkPixbufAnimation_queueautoptr;
     * }
     */
    public static final AddressLayout GdkPixbufAnimation_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GdkPixbufAnimationIter* GdkPixbufAnimationIter_autoptr;
     * }
     */
    public static final AddressLayout GdkPixbufAnimationIter_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkPixbufAnimationIter_listautoptr;
     * }
     */
    public static final AddressLayout GdkPixbufAnimationIter_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkPixbufAnimationIter_slistautoptr;
     * }
     */
    public static final AddressLayout GdkPixbufAnimationIter_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkPixbufAnimationIter_queueautoptr;
     * }
     */
    public static final AddressLayout GdkPixbufAnimationIter_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GdkPixbufLoader* GdkPixbufLoader_autoptr;
     * }
     */
    public static final AddressLayout GdkPixbufLoader_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkPixbufLoader_listautoptr;
     * }
     */
    public static final AddressLayout GdkPixbufLoader_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkPixbufLoader_slistautoptr;
     * }
     */
    public static final AddressLayout GdkPixbufLoader_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkPixbufLoader_queueautoptr;
     * }
     */
    public static final AddressLayout GdkPixbufLoader_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GdkPixbufSimpleAnim* GdkPixbufSimpleAnim_autoptr;
     * }
     */
    public static final AddressLayout GdkPixbufSimpleAnim_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkPixbufSimpleAnim_listautoptr;
     * }
     */
    public static final AddressLayout GdkPixbufSimpleAnim_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkPixbufSimpleAnim_slistautoptr;
     * }
     */
    public static final AddressLayout GdkPixbufSimpleAnim_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkPixbufSimpleAnim_queueautoptr;
     * }
     */
    public static final AddressLayout GdkPixbufSimpleAnim_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle gdk_pixbuf_get_from_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1905.const$2,"gdk_pixbuf_get_from_window");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_get_from_window(struct _GdkWindow* window, int src_x, int src_y, int width, int height);
     * }
     */
    public static MemorySegment gdk_pixbuf_get_from_window(MemorySegment window, int src_x, int src_y, int width, int height) {
        var mh$ = gdk_pixbuf_get_from_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, src_x, src_y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pixbuf_get_from_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1905.const$3,"gdk_pixbuf_get_from_surface");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_pixbuf_get_from_surface(struct _cairo_surface* surface, int src_x, int src_y, int width, int height);
     * }
     */
    public static MemorySegment gdk_pixbuf_get_from_surface(MemorySegment surface, int src_x, int src_y, int width, int height) {
        var mh$ = gdk_pixbuf_get_from_surface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(surface, src_x, src_y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_font_map_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1905.const$5,"pango_cairo_font_map_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_cairo_font_map_get_type();
     * }
     */
    public static long pango_cairo_font_map_get_type() {
        var mh$ = pango_cairo_font_map_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_font_map_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1906.const$0,"pango_cairo_font_map_new");
    }
    /**
     * {@snippet :
     * struct _PangoFontMap* pango_cairo_font_map_new();
     * }
     */
    public static MemorySegment pango_cairo_font_map_new() {
        var mh$ = pango_cairo_font_map_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_font_map_new_for_font_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1906.const$1,"pango_cairo_font_map_new_for_font_type");
    }
    /**
     * {@snippet :
     * struct _PangoFontMap* pango_cairo_font_map_new_for_font_type(enum _cairo_font_type fonttype);
     * }
     */
    public static MemorySegment pango_cairo_font_map_new_for_font_type(int fonttype) {
        var mh$ = pango_cairo_font_map_new_for_font_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fonttype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_font_map_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1906.const$2,"pango_cairo_font_map_get_default");
    }
    /**
     * {@snippet :
     * struct _PangoFontMap* pango_cairo_font_map_get_default();
     * }
     */
    public static MemorySegment pango_cairo_font_map_get_default() {
        var mh$ = pango_cairo_font_map_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_font_map_set_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1906.const$3,"pango_cairo_font_map_set_default");
    }
    /**
     * {@snippet :
     * void pango_cairo_font_map_set_default(struct _PangoCairoFontMap* fontmap);
     * }
     */
    public static void pango_cairo_font_map_set_default(MemorySegment fontmap) {
        var mh$ = pango_cairo_font_map_set_default$MH();
        try {
            mh$.invokeExact(fontmap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_font_map_get_font_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1906.const$4,"pango_cairo_font_map_get_font_type");
    }
    /**
     * {@snippet :
     * enum _cairo_font_type pango_cairo_font_map_get_font_type(struct _PangoCairoFontMap* fontmap);
     * }
     */
    public static int pango_cairo_font_map_get_font_type(MemorySegment fontmap) {
        var mh$ = pango_cairo_font_map_get_font_type$MH();
        try {
            return (int)mh$.invokeExact(fontmap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_font_map_set_resolution$MH() {
        return RuntimeHelper.requireNonNull(constants$1906.const$5,"pango_cairo_font_map_set_resolution");
    }
    /**
     * {@snippet :
     * void pango_cairo_font_map_set_resolution(struct _PangoCairoFontMap* fontmap, double dpi);
     * }
     */
    public static void pango_cairo_font_map_set_resolution(MemorySegment fontmap, double dpi) {
        var mh$ = pango_cairo_font_map_set_resolution$MH();
        try {
            mh$.invokeExact(fontmap, dpi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_font_map_get_resolution$MH() {
        return RuntimeHelper.requireNonNull(constants$1907.const$0,"pango_cairo_font_map_get_resolution");
    }
    /**
     * {@snippet :
     * double pango_cairo_font_map_get_resolution(struct _PangoCairoFontMap* fontmap);
     * }
     */
    public static double pango_cairo_font_map_get_resolution(MemorySegment fontmap) {
        var mh$ = pango_cairo_font_map_get_resolution$MH();
        try {
            return (double)mh$.invokeExact(fontmap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_font_map_create_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1907.const$1,"pango_cairo_font_map_create_context");
    }
    /**
     * {@snippet :
     * struct _PangoContext* pango_cairo_font_map_create_context(struct _PangoCairoFontMap* fontmap);
     * }
     */
    public static MemorySegment pango_cairo_font_map_create_context(MemorySegment fontmap) {
        var mh$ = pango_cairo_font_map_create_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontmap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_font_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1907.const$2,"pango_cairo_font_get_type");
    }
    /**
     * {@snippet :
     * unsigned long pango_cairo_font_get_type();
     * }
     */
    public static long pango_cairo_font_get_type() {
        var mh$ = pango_cairo_font_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_font_get_scaled_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1907.const$3,"pango_cairo_font_get_scaled_font");
    }
    /**
     * {@snippet :
     * struct _cairo_scaled_font* pango_cairo_font_get_scaled_font(struct _PangoCairoFont* font);
     * }
     */
    public static MemorySegment pango_cairo_font_get_scaled_font(MemorySegment font) {
        var mh$ = pango_cairo_font_get_scaled_font$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_update_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1907.const$4,"pango_cairo_update_context");
    }
    /**
     * {@snippet :
     * void pango_cairo_update_context(struct _cairo* cr, struct _PangoContext* context);
     * }
     */
    public static void pango_cairo_update_context(MemorySegment cr, MemorySegment context) {
        var mh$ = pango_cairo_update_context$MH();
        try {
            mh$.invokeExact(cr, context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_context_set_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1907.const$5,"pango_cairo_context_set_font_options");
    }
    /**
     * {@snippet :
     * void pango_cairo_context_set_font_options(struct _PangoContext* context, struct _cairo_font_options* options);
     * }
     */
    public static void pango_cairo_context_set_font_options(MemorySegment context, MemorySegment options) {
        var mh$ = pango_cairo_context_set_font_options$MH();
        try {
            mh$.invokeExact(context, options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_context_get_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1908.const$0,"pango_cairo_context_get_font_options");
    }
    /**
     * {@snippet :
     * struct _cairo_font_options* pango_cairo_context_get_font_options(struct _PangoContext* context);
     * }
     */
    public static MemorySegment pango_cairo_context_get_font_options(MemorySegment context) {
        var mh$ = pango_cairo_context_get_font_options$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_context_set_resolution$MH() {
        return RuntimeHelper.requireNonNull(constants$1908.const$1,"pango_cairo_context_set_resolution");
    }
    /**
     * {@snippet :
     * void pango_cairo_context_set_resolution(struct _PangoContext* context, double dpi);
     * }
     */
    public static void pango_cairo_context_set_resolution(MemorySegment context, double dpi) {
        var mh$ = pango_cairo_context_set_resolution$MH();
        try {
            mh$.invokeExact(context, dpi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_context_get_resolution$MH() {
        return RuntimeHelper.requireNonNull(constants$1908.const$2,"pango_cairo_context_get_resolution");
    }
    /**
     * {@snippet :
     * double pango_cairo_context_get_resolution(struct _PangoContext* context);
     * }
     */
    public static double pango_cairo_context_get_resolution(MemorySegment context) {
        var mh$ = pango_cairo_context_get_resolution$MH();
        try {
            return (double)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_context_set_shape_renderer$MH() {
        return RuntimeHelper.requireNonNull(constants$1908.const$5,"pango_cairo_context_set_shape_renderer");
    }
    /**
     * {@snippet :
     * void pango_cairo_context_set_shape_renderer(struct _PangoContext* context, void (*func)(struct _cairo*,struct _PangoAttrShape*,int,void*), void* data, void (*dnotify)(void*));
     * }
     */
    public static void pango_cairo_context_set_shape_renderer(MemorySegment context, MemorySegment func, MemorySegment data, MemorySegment dnotify) {
        var mh$ = pango_cairo_context_set_shape_renderer$MH();
        try {
            mh$.invokeExact(context, func, data, dnotify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_context_get_shape_renderer$MH() {
        return RuntimeHelper.requireNonNull(constants$1909.const$1,"pango_cairo_context_get_shape_renderer");
    }
    /**
     * {@snippet :
     * void (*pango_cairo_context_get_shape_renderer(struct _PangoContext* context, void** data))(struct _cairo*,struct _PangoAttrShape*,int,void*);
     * }
     */
    public static MemorySegment pango_cairo_context_get_shape_renderer(MemorySegment context, MemorySegment data) {
        var mh$ = pango_cairo_context_get_shape_renderer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_create_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1909.const$2,"pango_cairo_create_context");
    }
    /**
     * {@snippet :
     * struct _PangoContext* pango_cairo_create_context(struct _cairo* cr);
     * }
     */
    public static MemorySegment pango_cairo_create_context(MemorySegment cr) {
        var mh$ = pango_cairo_create_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_create_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1909.const$3,"pango_cairo_create_layout");
    }
    /**
     * {@snippet :
     * struct _PangoLayout* pango_cairo_create_layout(struct _cairo* cr);
     * }
     */
    public static MemorySegment pango_cairo_create_layout(MemorySegment cr) {
        var mh$ = pango_cairo_create_layout$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_update_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1909.const$4,"pango_cairo_update_layout");
    }
    /**
     * {@snippet :
     * void pango_cairo_update_layout(struct _cairo* cr, struct _PangoLayout* layout);
     * }
     */
    public static void pango_cairo_update_layout(MemorySegment cr, MemorySegment layout) {
        var mh$ = pango_cairo_update_layout$MH();
        try {
            mh$.invokeExact(cr, layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_show_glyph_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1909.const$5,"pango_cairo_show_glyph_string");
    }
    /**
     * {@snippet :
     * void pango_cairo_show_glyph_string(struct _cairo* cr, struct _PangoFont* font, struct _PangoGlyphString* glyphs);
     * }
     */
    public static void pango_cairo_show_glyph_string(MemorySegment cr, MemorySegment font, MemorySegment glyphs) {
        var mh$ = pango_cairo_show_glyph_string$MH();
        try {
            mh$.invokeExact(cr, font, glyphs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_show_glyph_item$MH() {
        return RuntimeHelper.requireNonNull(constants$1910.const$0,"pango_cairo_show_glyph_item");
    }
    /**
     * {@snippet :
     * void pango_cairo_show_glyph_item(struct _cairo* cr, char* text, struct _PangoGlyphItem* glyph_item);
     * }
     */
    public static void pango_cairo_show_glyph_item(MemorySegment cr, MemorySegment text, MemorySegment glyph_item) {
        var mh$ = pango_cairo_show_glyph_item$MH();
        try {
            mh$.invokeExact(cr, text, glyph_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_show_layout_line$MH() {
        return RuntimeHelper.requireNonNull(constants$1910.const$1,"pango_cairo_show_layout_line");
    }
    /**
     * {@snippet :
     * void pango_cairo_show_layout_line(struct _cairo* cr, struct _PangoLayoutLine* line);
     * }
     */
    public static void pango_cairo_show_layout_line(MemorySegment cr, MemorySegment line) {
        var mh$ = pango_cairo_show_layout_line$MH();
        try {
            mh$.invokeExact(cr, line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_show_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$1910.const$2,"pango_cairo_show_layout");
    }
    /**
     * {@snippet :
     * void pango_cairo_show_layout(struct _cairo* cr, struct _PangoLayout* layout);
     * }
     */
    public static void pango_cairo_show_layout(MemorySegment cr, MemorySegment layout) {
        var mh$ = pango_cairo_show_layout$MH();
        try {
            mh$.invokeExact(cr, layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_show_error_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$1910.const$3,"pango_cairo_show_error_underline");
    }
    /**
     * {@snippet :
     * void pango_cairo_show_error_underline(struct _cairo* cr, double x, double y, double width, double height);
     * }
     */
    public static void pango_cairo_show_error_underline(MemorySegment cr, double x, double y, double width, double height) {
        var mh$ = pango_cairo_show_error_underline$MH();
        try {
            mh$.invokeExact(cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_glyph_string_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1910.const$4,"pango_cairo_glyph_string_path");
    }
    /**
     * {@snippet :
     * void pango_cairo_glyph_string_path(struct _cairo* cr, struct _PangoFont* font, struct _PangoGlyphString* glyphs);
     * }
     */
    public static void pango_cairo_glyph_string_path(MemorySegment cr, MemorySegment font, MemorySegment glyphs) {
        var mh$ = pango_cairo_glyph_string_path$MH();
        try {
            mh$.invokeExact(cr, font, glyphs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_layout_line_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1910.const$5,"pango_cairo_layout_line_path");
    }
    /**
     * {@snippet :
     * void pango_cairo_layout_line_path(struct _cairo* cr, struct _PangoLayoutLine* line);
     * }
     */
    public static void pango_cairo_layout_line_path(MemorySegment cr, MemorySegment line) {
        var mh$ = pango_cairo_layout_line_path$MH();
        try {
            mh$.invokeExact(cr, line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_layout_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1911.const$0,"pango_cairo_layout_path");
    }
    /**
     * {@snippet :
     * void pango_cairo_layout_path(struct _cairo* cr, struct _PangoLayout* layout);
     * }
     */
    public static void pango_cairo_layout_path(MemorySegment cr, MemorySegment layout) {
        var mh$ = pango_cairo_layout_path$MH();
        try {
            mh$.invokeExact(cr, layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pango_cairo_error_underline_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1911.const$1,"pango_cairo_error_underline_path");
    }
    /**
     * {@snippet :
     * void pango_cairo_error_underline_path(struct _cairo* cr, double x, double y, double width, double height);
     * }
     */
    public static void pango_cairo_error_underline_path(MemorySegment cr, double x, double y, double width, double height) {
        var mh$ = pango_cairo_error_underline_path$MH();
        try {
            mh$.invokeExact(cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cairo_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1911.const$2,"gdk_cairo_create");
    }
    /**
     * {@snippet :
     * struct _cairo* gdk_cairo_create(struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_cairo_create(MemorySegment window) {
        var mh$ = gdk_cairo_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cairo_get_clip_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1911.const$3,"gdk_cairo_get_clip_rectangle");
    }
    /**
     * {@snippet :
     * int gdk_cairo_get_clip_rectangle(struct _cairo* cr, struct _cairo_rectangle_int* rect);
     * }
     */
    public static int gdk_cairo_get_clip_rectangle(MemorySegment cr, MemorySegment rect) {
        var mh$ = gdk_cairo_get_clip_rectangle$MH();
        try {
            return (int)mh$.invokeExact(cr, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cairo_set_source_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1911.const$4,"gdk_cairo_set_source_rgba");
    }
    /**
     * {@snippet :
     * void gdk_cairo_set_source_rgba(struct _cairo* cr, struct _GdkRGBA* rgba);
     * }
     */
    public static void gdk_cairo_set_source_rgba(MemorySegment cr, MemorySegment rgba) {
        var mh$ = gdk_cairo_set_source_rgba$MH();
        try {
            mh$.invokeExact(cr, rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cairo_set_source_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1911.const$5,"gdk_cairo_set_source_pixbuf");
    }
    /**
     * {@snippet :
     * void gdk_cairo_set_source_pixbuf(struct _cairo* cr, struct _GdkPixbuf* pixbuf, double pixbuf_x, double pixbuf_y);
     * }
     */
    public static void gdk_cairo_set_source_pixbuf(MemorySegment cr, MemorySegment pixbuf, double pixbuf_x, double pixbuf_y) {
        var mh$ = gdk_cairo_set_source_pixbuf$MH();
        try {
            mh$.invokeExact(cr, pixbuf, pixbuf_x, pixbuf_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cairo_set_source_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1912.const$0,"gdk_cairo_set_source_window");
    }
    /**
     * {@snippet :
     * void gdk_cairo_set_source_window(struct _cairo* cr, struct _GdkWindow* window, double x, double y);
     * }
     */
    public static void gdk_cairo_set_source_window(MemorySegment cr, MemorySegment window, double x, double y) {
        var mh$ = gdk_cairo_set_source_window$MH();
        try {
            mh$.invokeExact(cr, window, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cairo_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1912.const$1,"gdk_cairo_rectangle");
    }
    /**
     * {@snippet :
     * void gdk_cairo_rectangle(struct _cairo* cr, struct _cairo_rectangle_int* rectangle);
     * }
     */
    public static void gdk_cairo_rectangle(MemorySegment cr, MemorySegment rectangle) {
        var mh$ = gdk_cairo_rectangle$MH();
        try {
            mh$.invokeExact(cr, rectangle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cairo_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1912.const$2,"gdk_cairo_region");
    }
    /**
     * {@snippet :
     * void gdk_cairo_region(struct _cairo* cr, struct _cairo_region* region);
     * }
     */
    public static void gdk_cairo_region(MemorySegment cr, MemorySegment region) {
        var mh$ = gdk_cairo_region$MH();
        try {
            mh$.invokeExact(cr, region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cairo_region_create_from_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1912.const$3,"gdk_cairo_region_create_from_surface");
    }
    /**
     * {@snippet :
     * struct _cairo_region* gdk_cairo_region_create_from_surface(struct _cairo_surface* surface);
     * }
     */
    public static MemorySegment gdk_cairo_region_create_from_surface(MemorySegment surface) {
        var mh$ = gdk_cairo_region_create_from_surface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cairo_set_source_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1912.const$4,"gdk_cairo_set_source_color");
    }
    /**
     * {@snippet :
     * void gdk_cairo_set_source_color(struct _cairo* cr, struct _GdkColor* color);
     * }
     */
    public static void gdk_cairo_set_source_color(MemorySegment cr, MemorySegment color) {
        var mh$ = gdk_cairo_set_source_color$MH();
        try {
            mh$.invokeExact(cr, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cairo_surface_create_from_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1912.const$5,"gdk_cairo_surface_create_from_pixbuf");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* gdk_cairo_surface_create_from_pixbuf(struct _GdkPixbuf* pixbuf, int scale, struct _GdkWindow* for_window);
     * }
     */
    public static MemorySegment gdk_cairo_surface_create_from_pixbuf(MemorySegment pixbuf, int scale, MemorySegment for_window) {
        var mh$ = gdk_cairo_surface_create_from_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pixbuf, scale, for_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cairo_draw_from_gl$MH() {
        return RuntimeHelper.requireNonNull(constants$1913.const$1,"gdk_cairo_draw_from_gl");
    }
    /**
     * {@snippet :
     * void gdk_cairo_draw_from_gl(struct _cairo* cr, struct _GdkWindow* window, int source, int source_type, int buffer_scale, int x, int y, int width, int height);
     * }
     */
    public static void gdk_cairo_draw_from_gl(MemorySegment cr, MemorySegment window, int source, int source_type, int buffer_scale, int x, int y, int width, int height) {
        var mh$ = gdk_cairo_draw_from_gl$MH();
        try {
            mh$.invokeExact(cr, window, source, source_type, buffer_scale, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cairo_get_drawing_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1913.const$2,"gdk_cairo_get_drawing_context");
    }
    /**
     * {@snippet :
     * struct _GdkDrawingContext* gdk_cairo_get_drawing_context(struct _cairo* cr);
     * }
     */
    public static MemorySegment gdk_cairo_get_drawing_context(MemorySegment cr) {
        var mh$ = gdk_cairo_get_drawing_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_X_CURSOR = 0;
     * }
     */
    public static int GDK_X_CURSOR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_ARROW = 2;
     * }
     */
    public static int GDK_ARROW() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_BASED_ARROW_DOWN = 4;
     * }
     */
    public static int GDK_BASED_ARROW_DOWN() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_BASED_ARROW_UP = 6;
     * }
     */
    public static int GDK_BASED_ARROW_UP() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_BOAT = 8;
     * }
     */
    public static int GDK_BOAT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_BOGOSITY = 10;
     * }
     */
    public static int GDK_BOGOSITY() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_BOTTOM_LEFT_CORNER = 12;
     * }
     */
    public static int GDK_BOTTOM_LEFT_CORNER() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_BOTTOM_RIGHT_CORNER = 14;
     * }
     */
    public static int GDK_BOTTOM_RIGHT_CORNER() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_BOTTOM_SIDE = 16;
     * }
     */
    public static int GDK_BOTTOM_SIDE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_BOTTOM_TEE = 18;
     * }
     */
    public static int GDK_BOTTOM_TEE() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_BOX_SPIRAL = 20;
     * }
     */
    public static int GDK_BOX_SPIRAL() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_CENTER_PTR = 22;
     * }
     */
    public static int GDK_CENTER_PTR() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_CIRCLE = 24;
     * }
     */
    public static int GDK_CIRCLE() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_CLOCK = 26;
     * }
     */
    public static int GDK_CLOCK() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_COFFEE_MUG = 28;
     * }
     */
    public static int GDK_COFFEE_MUG() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_CROSS = 30;
     * }
     */
    public static int GDK_CROSS() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_CROSS_REVERSE = 32;
     * }
     */
    public static int GDK_CROSS_REVERSE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_CROSSHAIR = 34;
     * }
     */
    public static int GDK_CROSSHAIR() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_DIAMOND_CROSS = 36;
     * }
     */
    public static int GDK_DIAMOND_CROSS() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_DOT = 38;
     * }
     */
    public static int GDK_DOT() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_DOTBOX = 40;
     * }
     */
    public static int GDK_DOTBOX() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_DOUBLE_ARROW = 42;
     * }
     */
    public static int GDK_DOUBLE_ARROW() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_DRAFT_LARGE = 44;
     * }
     */
    public static int GDK_DRAFT_LARGE() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_DRAFT_SMALL = 46;
     * }
     */
    public static int GDK_DRAFT_SMALL() {
        return (int)46L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_DRAPED_BOX = 48;
     * }
     */
    public static int GDK_DRAPED_BOX() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_EXCHANGE = 50;
     * }
     */
    public static int GDK_EXCHANGE() {
        return (int)50L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_FLEUR = 52;
     * }
     */
    public static int GDK_FLEUR() {
        return (int)52L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_GOBBLER = 54;
     * }
     */
    public static int GDK_GOBBLER() {
        return (int)54L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_GUMBY = 56;
     * }
     */
    public static int GDK_GUMBY() {
        return (int)56L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_HAND1 = 58;
     * }
     */
    public static int GDK_HAND1() {
        return (int)58L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_HAND2 = 60;
     * }
     */
    public static int GDK_HAND2() {
        return (int)60L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_HEART = 62;
     * }
     */
    public static int GDK_HEART() {
        return (int)62L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_ICON = 64;
     * }
     */
    public static int GDK_ICON() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_IRON_CROSS = 66;
     * }
     */
    public static int GDK_IRON_CROSS() {
        return (int)66L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_LEFT_PTR = 68;
     * }
     */
    public static int GDK_LEFT_PTR() {
        return (int)68L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_LEFT_SIDE = 70;
     * }
     */
    public static int GDK_LEFT_SIDE() {
        return (int)70L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_LEFT_TEE = 72;
     * }
     */
    public static int GDK_LEFT_TEE() {
        return (int)72L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_LEFTBUTTON = 74;
     * }
     */
    public static int GDK_LEFTBUTTON() {
        return (int)74L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_LL_ANGLE = 76;
     * }
     */
    public static int GDK_LL_ANGLE() {
        return (int)76L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_LR_ANGLE = 78;
     * }
     */
    public static int GDK_LR_ANGLE() {
        return (int)78L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_MAN = 80;
     * }
     */
    public static int GDK_MAN() {
        return (int)80L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_MIDDLEBUTTON = 82;
     * }
     */
    public static int GDK_MIDDLEBUTTON() {
        return (int)82L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_MOUSE = 84;
     * }
     */
    public static int GDK_MOUSE() {
        return (int)84L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_PENCIL = 86;
     * }
     */
    public static int GDK_PENCIL() {
        return (int)86L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_PIRATE = 88;
     * }
     */
    public static int GDK_PIRATE() {
        return (int)88L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_PLUS = 90;
     * }
     */
    public static int GDK_PLUS() {
        return (int)90L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_QUESTION_ARROW = 92;
     * }
     */
    public static int GDK_QUESTION_ARROW() {
        return (int)92L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_RIGHT_PTR = 94;
     * }
     */
    public static int GDK_RIGHT_PTR() {
        return (int)94L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_RIGHT_SIDE = 96;
     * }
     */
    public static int GDK_RIGHT_SIDE() {
        return (int)96L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_RIGHT_TEE = 98;
     * }
     */
    public static int GDK_RIGHT_TEE() {
        return (int)98L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_RIGHTBUTTON = 100;
     * }
     */
    public static int GDK_RIGHTBUTTON() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_RTL_LOGO = 102;
     * }
     */
    public static int GDK_RTL_LOGO() {
        return (int)102L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_SAILBOAT = 104;
     * }
     */
    public static int GDK_SAILBOAT() {
        return (int)104L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_SB_DOWN_ARROW = 106;
     * }
     */
    public static int GDK_SB_DOWN_ARROW() {
        return (int)106L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_SB_H_DOUBLE_ARROW = 108;
     * }
     */
    public static int GDK_SB_H_DOUBLE_ARROW() {
        return (int)108L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_SB_LEFT_ARROW = 110;
     * }
     */
    public static int GDK_SB_LEFT_ARROW() {
        return (int)110L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_SB_RIGHT_ARROW = 112;
     * }
     */
    public static int GDK_SB_RIGHT_ARROW() {
        return (int)112L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_SB_UP_ARROW = 114;
     * }
     */
    public static int GDK_SB_UP_ARROW() {
        return (int)114L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_SB_V_DOUBLE_ARROW = 116;
     * }
     */
    public static int GDK_SB_V_DOUBLE_ARROW() {
        return (int)116L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_SHUTTLE = 118;
     * }
     */
    public static int GDK_SHUTTLE() {
        return (int)118L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_SIZING = 120;
     * }
     */
    public static int GDK_SIZING() {
        return (int)120L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_SPIDER = 122;
     * }
     */
    public static int GDK_SPIDER() {
        return (int)122L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_SPRAYCAN = 124;
     * }
     */
    public static int GDK_SPRAYCAN() {
        return (int)124L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_STAR = 126;
     * }
     */
    public static int GDK_STAR() {
        return (int)126L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_TARGET = 128;
     * }
     */
    public static int GDK_TARGET() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_TCROSS = 130;
     * }
     */
    public static int GDK_TCROSS() {
        return (int)130L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_TOP_LEFT_ARROW = 132;
     * }
     */
    public static int GDK_TOP_LEFT_ARROW() {
        return (int)132L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_TOP_LEFT_CORNER = 134;
     * }
     */
    public static int GDK_TOP_LEFT_CORNER() {
        return (int)134L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_TOP_RIGHT_CORNER = 136;
     * }
     */
    public static int GDK_TOP_RIGHT_CORNER() {
        return (int)136L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_TOP_SIDE = 138;
     * }
     */
    public static int GDK_TOP_SIDE() {
        return (int)138L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_TOP_TEE = 140;
     * }
     */
    public static int GDK_TOP_TEE() {
        return (int)140L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_TREK = 142;
     * }
     */
    public static int GDK_TREK() {
        return (int)142L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_UL_ANGLE = 144;
     * }
     */
    public static int GDK_UL_ANGLE() {
        return (int)144L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_UMBRELLA = 146;
     * }
     */
    public static int GDK_UMBRELLA() {
        return (int)146L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_UR_ANGLE = 148;
     * }
     */
    public static int GDK_UR_ANGLE() {
        return (int)148L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_WATCH = 150;
     * }
     */
    public static int GDK_WATCH() {
        return (int)150L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_XTERM = 152;
     * }
     */
    public static int GDK_XTERM() {
        return (int)152L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_LAST_CURSOR = 153;
     * }
     */
    public static int GDK_LAST_CURSOR() {
        return (int)153L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_BLANK_CURSOR = -2;
     * }
     */
    public static int GDK_BLANK_CURSOR() {
        return (int)-2L;
    }
    /**
     * {@snippet :
     * enum GdkCursorType.GDK_CURSOR_IS_PIXMAP = -1;
     * }
     */
    public static int GDK_CURSOR_IS_PIXMAP() {
        return (int)-1L;
    }
    public static MethodHandle gdk_cursor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1913.const$3,"gdk_cursor_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_cursor_get_type();
     * }
     */
    public static long gdk_cursor_get_type() {
        var mh$ = gdk_cursor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cursor_new_for_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1913.const$4,"gdk_cursor_new_for_display");
    }
    /**
     * {@snippet :
     * struct _GdkCursor* gdk_cursor_new_for_display(struct _GdkDisplay* display, enum GdkCursorType cursor_type);
     * }
     */
    public static MemorySegment gdk_cursor_new_for_display(MemorySegment display, int cursor_type) {
        var mh$ = gdk_cursor_new_for_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display, cursor_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cursor_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1913.const$5,"gdk_cursor_new");
    }
    /**
     * {@snippet :
     * struct _GdkCursor* gdk_cursor_new(enum GdkCursorType cursor_type);
     * }
     */
    public static MemorySegment gdk_cursor_new(int cursor_type) {
        var mh$ = gdk_cursor_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cursor_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cursor_new_from_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1914.const$0,"gdk_cursor_new_from_pixbuf");
    }
    /**
     * {@snippet :
     * struct _GdkCursor* gdk_cursor_new_from_pixbuf(struct _GdkDisplay* display, struct _GdkPixbuf* pixbuf, int x, int y);
     * }
     */
    public static MemorySegment gdk_cursor_new_from_pixbuf(MemorySegment display, MemorySegment pixbuf, int x, int y) {
        var mh$ = gdk_cursor_new_from_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display, pixbuf, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cursor_new_from_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1914.const$2,"gdk_cursor_new_from_surface");
    }
    /**
     * {@snippet :
     * struct _GdkCursor* gdk_cursor_new_from_surface(struct _GdkDisplay* display, struct _cairo_surface* surface, double x, double y);
     * }
     */
    public static MemorySegment gdk_cursor_new_from_surface(MemorySegment display, MemorySegment surface, double x, double y) {
        var mh$ = gdk_cursor_new_from_surface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display, surface, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cursor_new_from_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1914.const$3,"gdk_cursor_new_from_name");
    }
    /**
     * {@snippet :
     * struct _GdkCursor* gdk_cursor_new_from_name(struct _GdkDisplay* display, char* name);
     * }
     */
    public static MemorySegment gdk_cursor_new_from_name(MemorySegment display, MemorySegment name) {
        var mh$ = gdk_cursor_new_from_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cursor_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1914.const$4,"gdk_cursor_get_display");
    }
    /**
     * {@snippet :
     * struct _GdkDisplay* gdk_cursor_get_display(struct _GdkCursor* cursor);
     * }
     */
    public static MemorySegment gdk_cursor_get_display(MemorySegment cursor) {
        var mh$ = gdk_cursor_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cursor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cursor_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1914.const$5,"gdk_cursor_ref");
    }
    /**
     * {@snippet :
     * struct _GdkCursor* gdk_cursor_ref(struct _GdkCursor* cursor);
     * }
     */
    public static MemorySegment gdk_cursor_ref(MemorySegment cursor) {
        var mh$ = gdk_cursor_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cursor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cursor_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1915.const$0,"gdk_cursor_unref");
    }
    /**
     * {@snippet :
     * void gdk_cursor_unref(struct _GdkCursor* cursor);
     * }
     */
    public static void gdk_cursor_unref(MemorySegment cursor) {
        var mh$ = gdk_cursor_unref$MH();
        try {
            mh$.invokeExact(cursor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cursor_get_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1915.const$1,"gdk_cursor_get_image");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gdk_cursor_get_image(struct _GdkCursor* cursor);
     * }
     */
    public static MemorySegment gdk_cursor_get_image(MemorySegment cursor) {
        var mh$ = gdk_cursor_get_image$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cursor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cursor_get_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1915.const$2,"gdk_cursor_get_surface");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* gdk_cursor_get_surface(struct _GdkCursor* cursor, double* x_hot, double* y_hot);
     * }
     */
    public static MemorySegment gdk_cursor_get_surface(MemorySegment cursor, MemorySegment x_hot, MemorySegment y_hot) {
        var mh$ = gdk_cursor_get_surface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cursor, x_hot, y_hot);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cursor_get_cursor_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1915.const$3,"gdk_cursor_get_cursor_type");
    }
    /**
     * {@snippet :
     * enum GdkCursorType gdk_cursor_get_cursor_type(struct _GdkCursor* cursor);
     * }
     */
    public static int gdk_cursor_get_cursor_type(MemorySegment cursor) {
        var mh$ = gdk_cursor_get_cursor_type$MH();
        try {
            return (int)mh$.invokeExact(cursor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GdkDevicePadFeature.GDK_DEVICE_PAD_FEATURE_BUTTON = 0;
     * }
     */
    public static int GDK_DEVICE_PAD_FEATURE_BUTTON() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkDevicePadFeature.GDK_DEVICE_PAD_FEATURE_RING = 1;
     * }
     */
    public static int GDK_DEVICE_PAD_FEATURE_RING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkDevicePadFeature.GDK_DEVICE_PAD_FEATURE_STRIP = 2;
     * }
     */
    public static int GDK_DEVICE_PAD_FEATURE_STRIP() {
        return (int)2L;
    }
    public static MethodHandle gdk_device_pad_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1915.const$4,"gdk_device_pad_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_device_pad_get_type();
     * }
     */
    public static long gdk_device_pad_get_type() {
        var mh$ = gdk_device_pad_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_pad_get_n_groups$MH() {
        return RuntimeHelper.requireNonNull(constants$1915.const$5,"gdk_device_pad_get_n_groups");
    }
    /**
     * {@snippet :
     * int gdk_device_pad_get_n_groups(struct _GdkDevicePad* pad);
     * }
     */
    public static int gdk_device_pad_get_n_groups(MemorySegment pad) {
        var mh$ = gdk_device_pad_get_n_groups$MH();
        try {
            return (int)mh$.invokeExact(pad);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_pad_get_group_n_modes$MH() {
        return RuntimeHelper.requireNonNull(constants$1916.const$0,"gdk_device_pad_get_group_n_modes");
    }
    /**
     * {@snippet :
     * int gdk_device_pad_get_group_n_modes(struct _GdkDevicePad* pad, int group_idx);
     * }
     */
    public static int gdk_device_pad_get_group_n_modes(MemorySegment pad, int group_idx) {
        var mh$ = gdk_device_pad_get_group_n_modes$MH();
        try {
            return (int)mh$.invokeExact(pad, group_idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_pad_get_n_features$MH() {
        return RuntimeHelper.requireNonNull(constants$1916.const$1,"gdk_device_pad_get_n_features");
    }
    /**
     * {@snippet :
     * int gdk_device_pad_get_n_features(struct _GdkDevicePad* pad, enum GdkDevicePadFeature feature);
     * }
     */
    public static int gdk_device_pad_get_n_features(MemorySegment pad, int feature) {
        var mh$ = gdk_device_pad_get_n_features$MH();
        try {
            return (int)mh$.invokeExact(pad, feature);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_pad_get_feature_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1916.const$2,"gdk_device_pad_get_feature_group");
    }
    /**
     * {@snippet :
     * int gdk_device_pad_get_feature_group(struct _GdkDevicePad* pad, enum GdkDevicePadFeature feature, int feature_idx);
     * }
     */
    public static int gdk_device_pad_get_feature_group(MemorySegment pad, int feature, int feature_idx) {
        var mh$ = gdk_device_pad_get_feature_group$MH();
        try {
            return (int)mh$.invokeExact(pad, feature, feature_idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_manager_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1916.const$3,"gdk_display_manager_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_display_manager_get_type();
     * }
     */
    public static long gdk_display_manager_get_type() {
        var mh$ = gdk_display_manager_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_manager_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1916.const$4,"gdk_display_manager_get");
    }
    /**
     * {@snippet :
     * struct _GdkDisplayManager* gdk_display_manager_get();
     * }
     */
    public static MemorySegment gdk_display_manager_get() {
        var mh$ = gdk_display_manager_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_manager_get_default_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1916.const$5,"gdk_display_manager_get_default_display");
    }
    /**
     * {@snippet :
     * struct _GdkDisplay* gdk_display_manager_get_default_display(struct _GdkDisplayManager* manager);
     * }
     */
    public static MemorySegment gdk_display_manager_get_default_display(MemorySegment manager) {
        var mh$ = gdk_display_manager_get_default_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_manager_set_default_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1917.const$0,"gdk_display_manager_set_default_display");
    }
    /**
     * {@snippet :
     * void gdk_display_manager_set_default_display(struct _GdkDisplayManager* manager, struct _GdkDisplay* display);
     * }
     */
    public static void gdk_display_manager_set_default_display(MemorySegment manager, MemorySegment display) {
        var mh$ = gdk_display_manager_set_default_display$MH();
        try {
            mh$.invokeExact(manager, display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_manager_list_displays$MH() {
        return RuntimeHelper.requireNonNull(constants$1917.const$1,"gdk_display_manager_list_displays");
    }
    /**
     * {@snippet :
     * struct _GSList* gdk_display_manager_list_displays(struct _GdkDisplayManager* manager);
     * }
     */
    public static MemorySegment gdk_display_manager_list_displays(MemorySegment manager) {
        var mh$ = gdk_display_manager_list_displays$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_display_manager_open_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1917.const$2,"gdk_display_manager_open_display");
    }
    /**
     * {@snippet :
     * struct _GdkDisplay* gdk_display_manager_open_display(struct _GdkDisplayManager* manager, char* name);
     * }
     */
    public static MemorySegment gdk_display_manager_open_display(MemorySegment manager, MemorySegment name) {
        var mh$ = gdk_display_manager_open_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(manager, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_cursor_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1917.const$3,"gdk_cursor_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_cursor_type_get_type();
     * }
     */
    public static long gdk_cursor_type_get_type() {
        var mh$ = gdk_cursor_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_input_source_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1917.const$4,"gdk_input_source_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_input_source_get_type();
     * }
     */
    public static long gdk_input_source_get_type() {
        var mh$ = gdk_input_source_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_input_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1917.const$5,"gdk_input_mode_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_input_mode_get_type();
     * }
     */
    public static long gdk_input_mode_get_type() {
        var mh$ = gdk_input_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1918.const$0,"gdk_device_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_device_type_get_type();
     * }
     */
    public static long gdk_device_type_get_type() {
        var mh$ = gdk_device_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_pad_feature_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1918.const$1,"gdk_device_pad_feature_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_device_pad_feature_get_type();
     * }
     */
    public static long gdk_device_pad_feature_get_type() {
        var mh$ = gdk_device_pad_feature_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_tool_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1918.const$2,"gdk_device_tool_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_device_tool_type_get_type();
     * }
     */
    public static long gdk_device_tool_type_get_type() {
        var mh$ = gdk_device_tool_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1918.const$3,"gdk_drag_action_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_drag_action_get_type();
     * }
     */
    public static long gdk_drag_action_get_type() {
        var mh$ = gdk_drag_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_cancel_reason_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1918.const$4,"gdk_drag_cancel_reason_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_drag_cancel_reason_get_type();
     * }
     */
    public static long gdk_drag_cancel_reason_get_type() {
        var mh$ = gdk_drag_cancel_reason_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_protocol_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1918.const$5,"gdk_drag_protocol_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_drag_protocol_get_type();
     * }
     */
    public static long gdk_drag_protocol_get_type() {
        var mh$ = gdk_drag_protocol_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_filter_return_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1919.const$0,"gdk_filter_return_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_filter_return_get_type();
     * }
     */
    public static long gdk_filter_return_get_type() {
        var mh$ = gdk_filter_return_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1919.const$1,"gdk_event_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_event_type_get_type();
     * }
     */
    public static long gdk_event_type_get_type() {
        var mh$ = gdk_event_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visibility_state_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1919.const$2,"gdk_visibility_state_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_visibility_state_get_type();
     * }
     */
    public static long gdk_visibility_state_get_type() {
        var mh$ = gdk_visibility_state_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_touchpad_gesture_phase_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1919.const$3,"gdk_touchpad_gesture_phase_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_touchpad_gesture_phase_get_type();
     * }
     */
    public static long gdk_touchpad_gesture_phase_get_type() {
        var mh$ = gdk_touchpad_gesture_phase_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_scroll_direction_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1919.const$4,"gdk_scroll_direction_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_scroll_direction_get_type();
     * }
     */
    public static long gdk_scroll_direction_get_type() {
        var mh$ = gdk_scroll_direction_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_notify_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1919.const$5,"gdk_notify_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_notify_type_get_type();
     * }
     */
    public static long gdk_notify_type_get_type() {
        var mh$ = gdk_notify_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_crossing_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1920.const$0,"gdk_crossing_mode_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_crossing_mode_get_type();
     * }
     */
    public static long gdk_crossing_mode_get_type() {
        var mh$ = gdk_crossing_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_property_state_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1920.const$1,"gdk_property_state_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_property_state_get_type();
     * }
     */
    public static long gdk_property_state_get_type() {
        var mh$ = gdk_property_state_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_state_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1920.const$2,"gdk_window_state_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_window_state_get_type();
     * }
     */
    public static long gdk_window_state_get_type() {
        var mh$ = gdk_window_state_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_setting_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1920.const$3,"gdk_setting_action_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_setting_action_get_type();
     * }
     */
    public static long gdk_setting_action_get_type() {
        var mh$ = gdk_setting_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_owner_change_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1920.const$4,"gdk_owner_change_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_owner_change_get_type();
     * }
     */
    public static long gdk_owner_change_get_type() {
        var mh$ = gdk_owner_change_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_clock_phase_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1920.const$5,"gdk_frame_clock_phase_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_frame_clock_phase_get_type();
     * }
     */
    public static long gdk_frame_clock_phase_get_type() {
        var mh$ = gdk_frame_clock_phase_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_subpixel_layout_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1921.const$0,"gdk_subpixel_layout_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_subpixel_layout_get_type();
     * }
     */
    public static long gdk_subpixel_layout_get_type() {
        var mh$ = gdk_subpixel_layout_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_prop_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1921.const$1,"gdk_prop_mode_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_prop_mode_get_type();
     * }
     */
    public static long gdk_prop_mode_get_type() {
        var mh$ = gdk_prop_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_seat_capabilities_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1921.const$2,"gdk_seat_capabilities_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_seat_capabilities_get_type();
     * }
     */
    public static long gdk_seat_capabilities_get_type() {
        var mh$ = gdk_seat_capabilities_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_byte_order_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1921.const$3,"gdk_byte_order_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_byte_order_get_type();
     * }
     */
    public static long gdk_byte_order_get_type() {
        var mh$ = gdk_byte_order_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_modifier_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1921.const$4,"gdk_modifier_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_modifier_type_get_type();
     * }
     */
    public static long gdk_modifier_type_get_type() {
        var mh$ = gdk_modifier_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_modifier_intent_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1921.const$5,"gdk_modifier_intent_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_modifier_intent_get_type();
     * }
     */
    public static long gdk_modifier_intent_get_type() {
        var mh$ = gdk_modifier_intent_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_status_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1922.const$0,"gdk_status_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_status_get_type();
     * }
     */
    public static long gdk_status_get_type() {
        var mh$ = gdk_status_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_grab_status_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1922.const$1,"gdk_grab_status_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_grab_status_get_type();
     * }
     */
    public static long gdk_grab_status_get_type() {
        var mh$ = gdk_grab_status_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_grab_ownership_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1922.const$2,"gdk_grab_ownership_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_grab_ownership_get_type();
     * }
     */
    public static long gdk_grab_ownership_get_type() {
        var mh$ = gdk_grab_ownership_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_mask_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1922.const$3,"gdk_event_mask_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_event_mask_get_type();
     * }
     */
    public static long gdk_event_mask_get_type() {
        var mh$ = gdk_event_mask_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1922.const$4,"gdk_gl_error_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_gl_error_get_type();
     * }
     */
    public static long gdk_gl_error_get_type() {
        var mh$ = gdk_gl_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_type_hint_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1922.const$5,"gdk_window_type_hint_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_window_type_hint_get_type();
     * }
     */
    public static long gdk_window_type_hint_get_type() {
        var mh$ = gdk_window_type_hint_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_axis_use_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1923.const$0,"gdk_axis_use_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_axis_use_get_type();
     * }
     */
    public static long gdk_axis_use_get_type() {
        var mh$ = gdk_axis_use_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_axis_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1923.const$1,"gdk_axis_flags_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_axis_flags_get_type();
     * }
     */
    public static long gdk_axis_flags_get_type() {
        var mh$ = gdk_axis_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1923.const$2,"gdk_visual_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_visual_type_get_type();
     * }
     */
    public static long gdk_visual_type_get_type() {
        var mh$ = gdk_visual_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_window_class_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1923.const$3,"gdk_window_window_class_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_window_window_class_get_type();
     * }
     */
    public static long gdk_window_window_class_get_type() {
        var mh$ = gdk_window_window_class_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1923.const$4,"gdk_window_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_window_type_get_type();
     * }
     */
    public static long gdk_window_type_get_type() {
        var mh$ = gdk_window_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_attributes_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1923.const$5,"gdk_window_attributes_type_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_window_attributes_type_get_type();
     * }
     */
    public static long gdk_window_attributes_type_get_type() {
        var mh$ = gdk_window_attributes_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_hints_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1924.const$0,"gdk_window_hints_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_window_hints_get_type();
     * }
     */
    public static long gdk_window_hints_get_type() {
        var mh$ = gdk_window_hints_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_wm_decoration_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1924.const$1,"gdk_wm_decoration_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_wm_decoration_get_type();
     * }
     */
    public static long gdk_wm_decoration_get_type() {
        var mh$ = gdk_wm_decoration_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_wm_function_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1924.const$2,"gdk_wm_function_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_wm_function_get_type();
     * }
     */
    public static long gdk_wm_function_get_type() {
        var mh$ = gdk_wm_function_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gravity_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1924.const$3,"gdk_gravity_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_gravity_get_type();
     * }
     */
    public static long gdk_gravity_get_type() {
        var mh$ = gdk_gravity_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_anchor_hints_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1924.const$4,"gdk_anchor_hints_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_anchor_hints_get_type();
     * }
     */
    public static long gdk_anchor_hints_get_type() {
        var mh$ = gdk_anchor_hints_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_edge_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1924.const$5,"gdk_window_edge_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_window_edge_get_type();
     * }
     */
    public static long gdk_window_edge_get_type() {
        var mh$ = gdk_window_edge_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_fullscreen_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1925.const$0,"gdk_fullscreen_mode_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_fullscreen_mode_get_type();
     * }
     */
    public static long gdk_fullscreen_mode_get_type() {
        var mh$ = gdk_fullscreen_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1925.const$1,"gdk_gl_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int gdk_gl_error_quark();
     * }
     */
    public static int gdk_gl_error_quark() {
        var mh$ = gdk_gl_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1925.const$2,"gdk_gl_context_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_gl_context_get_type();
     * }
     */
    public static long gdk_gl_context_get_type() {
        var mh$ = gdk_gl_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_context_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1925.const$3,"gdk_gl_context_get_display");
    }
    /**
     * {@snippet :
     * struct _GdkDisplay* gdk_gl_context_get_display(struct _GdkGLContext* context);
     * }
     */
    public static MemorySegment gdk_gl_context_get_display(MemorySegment context) {
        var mh$ = gdk_gl_context_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_context_get_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1925.const$4,"gdk_gl_context_get_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_gl_context_get_window(struct _GdkGLContext* context);
     * }
     */
    public static MemorySegment gdk_gl_context_get_window(MemorySegment context) {
        var mh$ = gdk_gl_context_get_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_context_get_shared_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1925.const$5,"gdk_gl_context_get_shared_context");
    }
    /**
     * {@snippet :
     * struct _GdkGLContext* gdk_gl_context_get_shared_context(struct _GdkGLContext* context);
     * }
     */
    public static MemorySegment gdk_gl_context_get_shared_context(MemorySegment context) {
        var mh$ = gdk_gl_context_get_shared_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_context_get_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1926.const$0,"gdk_gl_context_get_version");
    }
    /**
     * {@snippet :
     * void gdk_gl_context_get_version(struct _GdkGLContext* context, int* major, int* minor);
     * }
     */
    public static void gdk_gl_context_get_version(MemorySegment context, MemorySegment major, MemorySegment minor) {
        var mh$ = gdk_gl_context_get_version$MH();
        try {
            mh$.invokeExact(context, major, minor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_context_is_legacy$MH() {
        return RuntimeHelper.requireNonNull(constants$1926.const$1,"gdk_gl_context_is_legacy");
    }
    /**
     * {@snippet :
     * int gdk_gl_context_is_legacy(struct _GdkGLContext* context);
     * }
     */
    public static int gdk_gl_context_is_legacy(MemorySegment context) {
        var mh$ = gdk_gl_context_is_legacy$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_context_set_required_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1926.const$2,"gdk_gl_context_set_required_version");
    }
    /**
     * {@snippet :
     * void gdk_gl_context_set_required_version(struct _GdkGLContext* context, int major, int minor);
     * }
     */
    public static void gdk_gl_context_set_required_version(MemorySegment context, int major, int minor) {
        var mh$ = gdk_gl_context_set_required_version$MH();
        try {
            mh$.invokeExact(context, major, minor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_context_get_required_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1926.const$3,"gdk_gl_context_get_required_version");
    }
    /**
     * {@snippet :
     * void gdk_gl_context_get_required_version(struct _GdkGLContext* context, int* major, int* minor);
     * }
     */
    public static void gdk_gl_context_get_required_version(MemorySegment context, MemorySegment major, MemorySegment minor) {
        var mh$ = gdk_gl_context_get_required_version$MH();
        try {
            mh$.invokeExact(context, major, minor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_context_set_debug_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$1926.const$4,"gdk_gl_context_set_debug_enabled");
    }
    /**
     * {@snippet :
     * void gdk_gl_context_set_debug_enabled(struct _GdkGLContext* context, int enabled);
     * }
     */
    public static void gdk_gl_context_set_debug_enabled(MemorySegment context, int enabled) {
        var mh$ = gdk_gl_context_set_debug_enabled$MH();
        try {
            mh$.invokeExact(context, enabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_context_get_debug_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$1926.const$5,"gdk_gl_context_get_debug_enabled");
    }
    /**
     * {@snippet :
     * int gdk_gl_context_get_debug_enabled(struct _GdkGLContext* context);
     * }
     */
    public static int gdk_gl_context_get_debug_enabled(MemorySegment context) {
        var mh$ = gdk_gl_context_get_debug_enabled$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_context_set_forward_compatible$MH() {
        return RuntimeHelper.requireNonNull(constants$1927.const$0,"gdk_gl_context_set_forward_compatible");
    }
    /**
     * {@snippet :
     * void gdk_gl_context_set_forward_compatible(struct _GdkGLContext* context, int compatible);
     * }
     */
    public static void gdk_gl_context_set_forward_compatible(MemorySegment context, int compatible) {
        var mh$ = gdk_gl_context_set_forward_compatible$MH();
        try {
            mh$.invokeExact(context, compatible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_context_get_forward_compatible$MH() {
        return RuntimeHelper.requireNonNull(constants$1927.const$1,"gdk_gl_context_get_forward_compatible");
    }
    /**
     * {@snippet :
     * int gdk_gl_context_get_forward_compatible(struct _GdkGLContext* context);
     * }
     */
    public static int gdk_gl_context_get_forward_compatible(MemorySegment context) {
        var mh$ = gdk_gl_context_get_forward_compatible$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_context_set_use_es$MH() {
        return RuntimeHelper.requireNonNull(constants$1927.const$2,"gdk_gl_context_set_use_es");
    }
    /**
     * {@snippet :
     * void gdk_gl_context_set_use_es(struct _GdkGLContext* context, int use_es);
     * }
     */
    public static void gdk_gl_context_set_use_es(MemorySegment context, int use_es) {
        var mh$ = gdk_gl_context_set_use_es$MH();
        try {
            mh$.invokeExact(context, use_es);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_context_get_use_es$MH() {
        return RuntimeHelper.requireNonNull(constants$1927.const$3,"gdk_gl_context_get_use_es");
    }
    /**
     * {@snippet :
     * int gdk_gl_context_get_use_es(struct _GdkGLContext* context);
     * }
     */
    public static int gdk_gl_context_get_use_es(MemorySegment context) {
        var mh$ = gdk_gl_context_get_use_es$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_context_realize$MH() {
        return RuntimeHelper.requireNonNull(constants$1927.const$4,"gdk_gl_context_realize");
    }
    /**
     * {@snippet :
     * int gdk_gl_context_realize(struct _GdkGLContext* context, struct _GError** error);
     * }
     */
    public static int gdk_gl_context_realize(MemorySegment context, MemorySegment error) {
        var mh$ = gdk_gl_context_realize$MH();
        try {
            return (int)mh$.invokeExact(context, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_context_make_current$MH() {
        return RuntimeHelper.requireNonNull(constants$1927.const$5,"gdk_gl_context_make_current");
    }
    /**
     * {@snippet :
     * void gdk_gl_context_make_current(struct _GdkGLContext* context);
     * }
     */
    public static void gdk_gl_context_make_current(MemorySegment context) {
        var mh$ = gdk_gl_context_make_current$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_context_get_current$MH() {
        return RuntimeHelper.requireNonNull(constants$1928.const$0,"gdk_gl_context_get_current");
    }
    /**
     * {@snippet :
     * struct _GdkGLContext* gdk_gl_context_get_current();
     * }
     */
    public static MemorySegment gdk_gl_context_get_current() {
        var mh$ = gdk_gl_context_get_current$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_gl_context_clear_current$MH() {
        return RuntimeHelper.requireNonNull(constants$1928.const$1,"gdk_gl_context_clear_current");
    }
    /**
     * {@snippet :
     * void gdk_gl_context_clear_current();
     * }
     */
    public static void gdk_gl_context_clear_current() {
        var mh$ = gdk_gl_context_clear_current$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keymap_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1929.const$0,"gdk_keymap_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_keymap_get_type();
     * }
     */
    public static long gdk_keymap_get_type() {
        var mh$ = gdk_keymap_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keymap_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1929.const$1,"gdk_keymap_get_default");
    }
    /**
     * {@snippet :
     * struct _GdkKeymap* gdk_keymap_get_default();
     * }
     */
    public static MemorySegment gdk_keymap_get_default() {
        var mh$ = gdk_keymap_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keymap_get_for_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1929.const$2,"gdk_keymap_get_for_display");
    }
    /**
     * {@snippet :
     * struct _GdkKeymap* gdk_keymap_get_for_display(struct _GdkDisplay* display);
     * }
     */
    public static MemorySegment gdk_keymap_get_for_display(MemorySegment display) {
        var mh$ = gdk_keymap_get_for_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keymap_lookup_key$MH() {
        return RuntimeHelper.requireNonNull(constants$1929.const$3,"gdk_keymap_lookup_key");
    }
    /**
     * {@snippet :
     * unsigned int gdk_keymap_lookup_key(struct _GdkKeymap* keymap, struct _GdkKeymapKey* key);
     * }
     */
    public static int gdk_keymap_lookup_key(MemorySegment keymap, MemorySegment key) {
        var mh$ = gdk_keymap_lookup_key$MH();
        try {
            return (int)mh$.invokeExact(keymap, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keymap_translate_keyboard_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1929.const$5,"gdk_keymap_translate_keyboard_state");
    }
    /**
     * {@snippet :
     * int gdk_keymap_translate_keyboard_state(struct _GdkKeymap* keymap, unsigned int hardware_keycode, enum GdkModifierType state, int group, unsigned int* keyval, int* effective_group, int* level, enum GdkModifierType* consumed_modifiers);
     * }
     */
    public static int gdk_keymap_translate_keyboard_state(MemorySegment keymap, int hardware_keycode, int state, int group, MemorySegment keyval, MemorySegment effective_group, MemorySegment level, MemorySegment consumed_modifiers) {
        var mh$ = gdk_keymap_translate_keyboard_state$MH();
        try {
            return (int)mh$.invokeExact(keymap, hardware_keycode, state, group, keyval, effective_group, level, consumed_modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keymap_get_entries_for_keyval$MH() {
        return RuntimeHelper.requireNonNull(constants$1930.const$0,"gdk_keymap_get_entries_for_keyval");
    }
    /**
     * {@snippet :
     * int gdk_keymap_get_entries_for_keyval(struct _GdkKeymap* keymap, unsigned int keyval, struct _GdkKeymapKey** keys, int* n_keys);
     * }
     */
    public static int gdk_keymap_get_entries_for_keyval(MemorySegment keymap, int keyval, MemorySegment keys, MemorySegment n_keys) {
        var mh$ = gdk_keymap_get_entries_for_keyval$MH();
        try {
            return (int)mh$.invokeExact(keymap, keyval, keys, n_keys);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keymap_get_entries_for_keycode$MH() {
        return RuntimeHelper.requireNonNull(constants$1930.const$1,"gdk_keymap_get_entries_for_keycode");
    }
    /**
     * {@snippet :
     * int gdk_keymap_get_entries_for_keycode(struct _GdkKeymap* keymap, unsigned int hardware_keycode, struct _GdkKeymapKey** keys, unsigned int** keyvals, int* n_entries);
     * }
     */
    public static int gdk_keymap_get_entries_for_keycode(MemorySegment keymap, int hardware_keycode, MemorySegment keys, MemorySegment keyvals, MemorySegment n_entries) {
        var mh$ = gdk_keymap_get_entries_for_keycode$MH();
        try {
            return (int)mh$.invokeExact(keymap, hardware_keycode, keys, keyvals, n_entries);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keymap_get_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1930.const$2,"gdk_keymap_get_direction");
    }
    /**
     * {@snippet :
     * enum PangoDirection gdk_keymap_get_direction(struct _GdkKeymap* keymap);
     * }
     */
    public static int gdk_keymap_get_direction(MemorySegment keymap) {
        var mh$ = gdk_keymap_get_direction$MH();
        try {
            return (int)mh$.invokeExact(keymap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keymap_have_bidi_layouts$MH() {
        return RuntimeHelper.requireNonNull(constants$1930.const$3,"gdk_keymap_have_bidi_layouts");
    }
    /**
     * {@snippet :
     * int gdk_keymap_have_bidi_layouts(struct _GdkKeymap* keymap);
     * }
     */
    public static int gdk_keymap_have_bidi_layouts(MemorySegment keymap) {
        var mh$ = gdk_keymap_have_bidi_layouts$MH();
        try {
            return (int)mh$.invokeExact(keymap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keymap_get_caps_lock_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1930.const$4,"gdk_keymap_get_caps_lock_state");
    }
    /**
     * {@snippet :
     * int gdk_keymap_get_caps_lock_state(struct _GdkKeymap* keymap);
     * }
     */
    public static int gdk_keymap_get_caps_lock_state(MemorySegment keymap) {
        var mh$ = gdk_keymap_get_caps_lock_state$MH();
        try {
            return (int)mh$.invokeExact(keymap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keymap_get_num_lock_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1930.const$5,"gdk_keymap_get_num_lock_state");
    }
    /**
     * {@snippet :
     * int gdk_keymap_get_num_lock_state(struct _GdkKeymap* keymap);
     * }
     */
    public static int gdk_keymap_get_num_lock_state(MemorySegment keymap) {
        var mh$ = gdk_keymap_get_num_lock_state$MH();
        try {
            return (int)mh$.invokeExact(keymap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keymap_get_scroll_lock_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1931.const$0,"gdk_keymap_get_scroll_lock_state");
    }
    /**
     * {@snippet :
     * int gdk_keymap_get_scroll_lock_state(struct _GdkKeymap* keymap);
     * }
     */
    public static int gdk_keymap_get_scroll_lock_state(MemorySegment keymap) {
        var mh$ = gdk_keymap_get_scroll_lock_state$MH();
        try {
            return (int)mh$.invokeExact(keymap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keymap_get_modifier_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1931.const$1,"gdk_keymap_get_modifier_state");
    }
    /**
     * {@snippet :
     * unsigned int gdk_keymap_get_modifier_state(struct _GdkKeymap* keymap);
     * }
     */
    public static int gdk_keymap_get_modifier_state(MemorySegment keymap) {
        var mh$ = gdk_keymap_get_modifier_state$MH();
        try {
            return (int)mh$.invokeExact(keymap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keymap_add_virtual_modifiers$MH() {
        return RuntimeHelper.requireNonNull(constants$1931.const$2,"gdk_keymap_add_virtual_modifiers");
    }
    /**
     * {@snippet :
     * void gdk_keymap_add_virtual_modifiers(struct _GdkKeymap* keymap, enum GdkModifierType* state);
     * }
     */
    public static void gdk_keymap_add_virtual_modifiers(MemorySegment keymap, MemorySegment state) {
        var mh$ = gdk_keymap_add_virtual_modifiers$MH();
        try {
            mh$.invokeExact(keymap, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keymap_map_virtual_modifiers$MH() {
        return RuntimeHelper.requireNonNull(constants$1931.const$3,"gdk_keymap_map_virtual_modifiers");
    }
    /**
     * {@snippet :
     * int gdk_keymap_map_virtual_modifiers(struct _GdkKeymap* keymap, enum GdkModifierType* state);
     * }
     */
    public static int gdk_keymap_map_virtual_modifiers(MemorySegment keymap, MemorySegment state) {
        var mh$ = gdk_keymap_map_virtual_modifiers$MH();
        try {
            return (int)mh$.invokeExact(keymap, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keymap_get_modifier_mask$MH() {
        return RuntimeHelper.requireNonNull(constants$1931.const$4,"gdk_keymap_get_modifier_mask");
    }
    /**
     * {@snippet :
     * enum GdkModifierType gdk_keymap_get_modifier_mask(struct _GdkKeymap* keymap, enum GdkModifierIntent intent);
     * }
     */
    public static int gdk_keymap_get_modifier_mask(MemorySegment keymap, int intent) {
        var mh$ = gdk_keymap_get_modifier_mask$MH();
        try {
            return (int)mh$.invokeExact(keymap, intent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keyval_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1931.const$5,"gdk_keyval_name");
    }
    /**
     * {@snippet :
     * char* gdk_keyval_name(unsigned int keyval);
     * }
     */
    public static MemorySegment gdk_keyval_name(int keyval) {
        var mh$ = gdk_keyval_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(keyval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keyval_from_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1932.const$0,"gdk_keyval_from_name");
    }
    /**
     * {@snippet :
     * unsigned int gdk_keyval_from_name(char* keyval_name);
     * }
     */
    public static int gdk_keyval_from_name(MemorySegment keyval_name) {
        var mh$ = gdk_keyval_from_name$MH();
        try {
            return (int)mh$.invokeExact(keyval_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keyval_convert_case$MH() {
        return RuntimeHelper.requireNonNull(constants$1932.const$1,"gdk_keyval_convert_case");
    }
    /**
     * {@snippet :
     * void gdk_keyval_convert_case(unsigned int symbol, unsigned int* lower, unsigned int* upper);
     * }
     */
    public static void gdk_keyval_convert_case(int symbol, MemorySegment lower, MemorySegment upper) {
        var mh$ = gdk_keyval_convert_case$MH();
        try {
            mh$.invokeExact(symbol, lower, upper);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keyval_to_upper$MH() {
        return RuntimeHelper.requireNonNull(constants$1932.const$2,"gdk_keyval_to_upper");
    }
    /**
     * {@snippet :
     * unsigned int gdk_keyval_to_upper(unsigned int keyval);
     * }
     */
    public static int gdk_keyval_to_upper(int keyval) {
        var mh$ = gdk_keyval_to_upper$MH();
        try {
            return (int)mh$.invokeExact(keyval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keyval_to_lower$MH() {
        return RuntimeHelper.requireNonNull(constants$1932.const$3,"gdk_keyval_to_lower");
    }
    /**
     * {@snippet :
     * unsigned int gdk_keyval_to_lower(unsigned int keyval);
     * }
     */
    public static int gdk_keyval_to_lower(int keyval) {
        var mh$ = gdk_keyval_to_lower$MH();
        try {
            return (int)mh$.invokeExact(keyval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keyval_is_upper$MH() {
        return RuntimeHelper.requireNonNull(constants$1932.const$4,"gdk_keyval_is_upper");
    }
    /**
     * {@snippet :
     * int gdk_keyval_is_upper(unsigned int keyval);
     * }
     */
    public static int gdk_keyval_is_upper(int keyval) {
        var mh$ = gdk_keyval_is_upper$MH();
        try {
            return (int)mh$.invokeExact(keyval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keyval_is_lower$MH() {
        return RuntimeHelper.requireNonNull(constants$1932.const$5,"gdk_keyval_is_lower");
    }
    /**
     * {@snippet :
     * int gdk_keyval_is_lower(unsigned int keyval);
     * }
     */
    public static int gdk_keyval_is_lower(int keyval) {
        var mh$ = gdk_keyval_is_lower$MH();
        try {
            return (int)mh$.invokeExact(keyval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keyval_to_unicode$MH() {
        return RuntimeHelper.requireNonNull(constants$1933.const$0,"gdk_keyval_to_unicode");
    }
    /**
     * {@snippet :
     * unsigned int gdk_keyval_to_unicode(unsigned int keyval);
     * }
     */
    public static int gdk_keyval_to_unicode(int keyval) {
        var mh$ = gdk_keyval_to_unicode$MH();
        try {
            return (int)mh$.invokeExact(keyval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_unicode_to_keyval$MH() {
        return RuntimeHelper.requireNonNull(constants$1933.const$1,"gdk_unicode_to_keyval");
    }
    /**
     * {@snippet :
     * unsigned int gdk_unicode_to_keyval(unsigned int wc);
     * }
     */
    public static int gdk_unicode_to_keyval(int wc) {
        var mh$ = gdk_unicode_to_keyval$MH();
        try {
            return (int)mh$.invokeExact(wc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_parse_args$MH() {
        return RuntimeHelper.requireNonNull(constants$1933.const$2,"gdk_parse_args");
    }
    /**
     * {@snippet :
     * void gdk_parse_args(int* argc, char*** argv);
     * }
     */
    public static void gdk_parse_args(MemorySegment argc, MemorySegment argv) {
        var mh$ = gdk_parse_args$MH();
        try {
            mh$.invokeExact(argc, argv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1933.const$3,"gdk_init");
    }
    /**
     * {@snippet :
     * void gdk_init(int* argc, char*** argv);
     * }
     */
    public static void gdk_init(MemorySegment argc, MemorySegment argv) {
        var mh$ = gdk_init$MH();
        try {
            mh$.invokeExact(argc, argv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_init_check$MH() {
        return RuntimeHelper.requireNonNull(constants$1933.const$4,"gdk_init_check");
    }
    /**
     * {@snippet :
     * int gdk_init_check(int* argc, char*** argv);
     * }
     */
    public static int gdk_init_check(MemorySegment argc, MemorySegment argv) {
        var mh$ = gdk_init_check$MH();
        try {
            return (int)mh$.invokeExact(argc, argv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_add_option_entries_libgtk_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1933.const$5,"gdk_add_option_entries_libgtk_only");
    }
    /**
     * {@snippet :
     * void gdk_add_option_entries_libgtk_only(struct _GOptionGroup* group);
     * }
     */
    public static void gdk_add_option_entries_libgtk_only(MemorySegment group) {
        var mh$ = gdk_add_option_entries_libgtk_only$MH();
        try {
            mh$.invokeExact(group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pre_parse_libgtk_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1934.const$0,"gdk_pre_parse_libgtk_only");
    }
    /**
     * {@snippet :
     * void gdk_pre_parse_libgtk_only();
     * }
     */
    public static void gdk_pre_parse_libgtk_only() {
        var mh$ = gdk_pre_parse_libgtk_only$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_get_program_class$MH() {
        return RuntimeHelper.requireNonNull(constants$1934.const$1,"gdk_get_program_class");
    }
    /**
     * {@snippet :
     * char* gdk_get_program_class();
     * }
     */
    public static MemorySegment gdk_get_program_class() {
        var mh$ = gdk_get_program_class$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_set_program_class$MH() {
        return RuntimeHelper.requireNonNull(constants$1934.const$2,"gdk_set_program_class");
    }
    /**
     * {@snippet :
     * void gdk_set_program_class(char* program_class);
     * }
     */
    public static void gdk_set_program_class(MemorySegment program_class) {
        var mh$ = gdk_set_program_class$MH();
        try {
            mh$.invokeExact(program_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_notify_startup_complete$MH() {
        return RuntimeHelper.requireNonNull(constants$1934.const$3,"gdk_notify_startup_complete");
    }
    /**
     * {@snippet :
     * void gdk_notify_startup_complete();
     * }
     */
    public static void gdk_notify_startup_complete() {
        var mh$ = gdk_notify_startup_complete$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_notify_startup_complete_with_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1934.const$4,"gdk_notify_startup_complete_with_id");
    }
    /**
     * {@snippet :
     * void gdk_notify_startup_complete_with_id(char* startup_id);
     * }
     */
    public static void gdk_notify_startup_complete_with_id(MemorySegment startup_id) {
        var mh$ = gdk_notify_startup_complete_with_id$MH();
        try {
            mh$.invokeExact(startup_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_error_trap_push$MH() {
        return RuntimeHelper.requireNonNull(constants$1934.const$5,"gdk_error_trap_push");
    }
    /**
     * {@snippet :
     * void gdk_error_trap_push();
     * }
     */
    public static void gdk_error_trap_push() {
        var mh$ = gdk_error_trap_push$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_error_trap_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$1935.const$0,"gdk_error_trap_pop");
    }
    /**
     * {@snippet :
     * int gdk_error_trap_pop();
     * }
     */
    public static int gdk_error_trap_pop() {
        var mh$ = gdk_error_trap_pop$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_error_trap_pop_ignored$MH() {
        return RuntimeHelper.requireNonNull(constants$1935.const$1,"gdk_error_trap_pop_ignored");
    }
    /**
     * {@snippet :
     * void gdk_error_trap_pop_ignored();
     * }
     */
    public static void gdk_error_trap_pop_ignored() {
        var mh$ = gdk_error_trap_pop_ignored$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_get_display_arg_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1935.const$2,"gdk_get_display_arg_name");
    }
    /**
     * {@snippet :
     * char* gdk_get_display_arg_name();
     * }
     */
    public static MemorySegment gdk_get_display_arg_name() {
        var mh$ = gdk_get_display_arg_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1935.const$3,"gdk_get_display");
    }
    /**
     * {@snippet :
     * char* gdk_get_display();
     * }
     */
    public static MemorySegment gdk_get_display() {
        var mh$ = gdk_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pointer_grab$MH() {
        return RuntimeHelper.requireNonNull(constants$1935.const$5,"gdk_pointer_grab");
    }
    /**
     * {@snippet :
     * enum GdkGrabStatus gdk_pointer_grab(struct _GdkWindow* window, int owner_events, enum GdkEventMask event_mask, struct _GdkWindow* confine_to, struct _GdkCursor* cursor, unsigned int time_);
     * }
     */
    public static int gdk_pointer_grab(MemorySegment window, int owner_events, int event_mask, MemorySegment confine_to, MemorySegment cursor, int time_) {
        var mh$ = gdk_pointer_grab$MH();
        try {
            return (int)mh$.invokeExact(window, owner_events, event_mask, confine_to, cursor, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keyboard_grab$MH() {
        return RuntimeHelper.requireNonNull(constants$1936.const$0,"gdk_keyboard_grab");
    }
    /**
     * {@snippet :
     * enum GdkGrabStatus gdk_keyboard_grab(struct _GdkWindow* window, int owner_events, unsigned int time_);
     * }
     */
    public static int gdk_keyboard_grab(MemorySegment window, int owner_events, int time_) {
        var mh$ = gdk_keyboard_grab$MH();
        try {
            return (int)mh$.invokeExact(window, owner_events, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pointer_ungrab$MH() {
        return RuntimeHelper.requireNonNull(constants$1936.const$1,"gdk_pointer_ungrab");
    }
    /**
     * {@snippet :
     * void gdk_pointer_ungrab(unsigned int time_);
     * }
     */
    public static void gdk_pointer_ungrab(int time_) {
        var mh$ = gdk_pointer_ungrab$MH();
        try {
            mh$.invokeExact(time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_keyboard_ungrab$MH() {
        return RuntimeHelper.requireNonNull(constants$1936.const$2,"gdk_keyboard_ungrab");
    }
    /**
     * {@snippet :
     * void gdk_keyboard_ungrab(unsigned int time_);
     * }
     */
    public static void gdk_keyboard_ungrab(int time_) {
        var mh$ = gdk_keyboard_ungrab$MH();
        try {
            mh$.invokeExact(time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pointer_is_grabbed$MH() {
        return RuntimeHelper.requireNonNull(constants$1936.const$3,"gdk_pointer_is_grabbed");
    }
    /**
     * {@snippet :
     * int gdk_pointer_is_grabbed();
     * }
     */
    public static int gdk_pointer_is_grabbed() {
        var mh$ = gdk_pointer_is_grabbed$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1936.const$4,"gdk_screen_width");
    }
    /**
     * {@snippet :
     * int gdk_screen_width();
     * }
     */
    public static int gdk_screen_width() {
        var mh$ = gdk_screen_width$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1936.const$5,"gdk_screen_height");
    }
    /**
     * {@snippet :
     * int gdk_screen_height();
     * }
     */
    public static int gdk_screen_height() {
        var mh$ = gdk_screen_height$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_width_mm$MH() {
        return RuntimeHelper.requireNonNull(constants$1937.const$0,"gdk_screen_width_mm");
    }
    /**
     * {@snippet :
     * int gdk_screen_width_mm();
     * }
     */
    public static int gdk_screen_width_mm() {
        var mh$ = gdk_screen_width_mm$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_screen_height_mm$MH() {
        return RuntimeHelper.requireNonNull(constants$1937.const$1,"gdk_screen_height_mm");
    }
    /**
     * {@snippet :
     * int gdk_screen_height_mm();
     * }
     */
    public static int gdk_screen_height_mm() {
        var mh$ = gdk_screen_height_mm$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_set_double_click_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1937.const$2,"gdk_set_double_click_time");
    }
    /**
     * {@snippet :
     * void gdk_set_double_click_time(unsigned int msec);
     * }
     */
    public static void gdk_set_double_click_time(int msec) {
        var mh$ = gdk_set_double_click_time$MH();
        try {
            mh$.invokeExact(msec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_beep$MH() {
        return RuntimeHelper.requireNonNull(constants$1937.const$3,"gdk_beep");
    }
    /**
     * {@snippet :
     * void gdk_beep();
     * }
     */
    public static void gdk_beep() {
        var mh$ = gdk_beep$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_flush$MH() {
        return RuntimeHelper.requireNonNull(constants$1937.const$4,"gdk_flush");
    }
    /**
     * {@snippet :
     * void gdk_flush();
     * }
     */
    public static void gdk_flush() {
        var mh$ = gdk_flush$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_disable_multidevice$MH() {
        return RuntimeHelper.requireNonNull(constants$1937.const$5,"gdk_disable_multidevice");
    }
    /**
     * {@snippet :
     * void gdk_disable_multidevice();
     * }
     */
    public static void gdk_disable_multidevice() {
        var mh$ = gdk_disable_multidevice$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_set_allowed_backends$MH() {
        return RuntimeHelper.requireNonNull(constants$1938.const$0,"gdk_set_allowed_backends");
    }
    /**
     * {@snippet :
     * void gdk_set_allowed_backends(char* backends);
     * }
     */
    public static void gdk_set_allowed_backends(MemorySegment backends) {
        var mh$ = gdk_set_allowed_backends$MH();
        try {
            mh$.invokeExact(backends);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pango_context_get_for_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1938.const$1,"gdk_pango_context_get_for_screen");
    }
    /**
     * {@snippet :
     * struct _PangoContext* gdk_pango_context_get_for_screen(struct _GdkScreen* screen);
     * }
     */
    public static MemorySegment gdk_pango_context_get_for_screen(MemorySegment screen) {
        var mh$ = gdk_pango_context_get_for_screen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pango_context_get_for_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1938.const$2,"gdk_pango_context_get_for_display");
    }
    /**
     * {@snippet :
     * struct _PangoContext* gdk_pango_context_get_for_display(struct _GdkDisplay* display);
     * }
     */
    public static MemorySegment gdk_pango_context_get_for_display(MemorySegment display) {
        var mh$ = gdk_pango_context_get_for_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pango_context_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1938.const$3,"gdk_pango_context_get");
    }
    /**
     * {@snippet :
     * struct _PangoContext* gdk_pango_context_get();
     * }
     */
    public static MemorySegment gdk_pango_context_get() {
        var mh$ = gdk_pango_context_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pango_layout_line_get_clip_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1938.const$5,"gdk_pango_layout_line_get_clip_region");
    }
    /**
     * {@snippet :
     * struct _cairo_region* gdk_pango_layout_line_get_clip_region(struct _PangoLayoutLine* line, int x_origin, int y_origin, int* index_ranges, int n_ranges);
     * }
     */
    public static MemorySegment gdk_pango_layout_line_get_clip_region(MemorySegment line, int x_origin, int y_origin, MemorySegment index_ranges, int n_ranges) {
        var mh$ = gdk_pango_layout_line_get_clip_region$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(line, x_origin, y_origin, index_ranges, n_ranges);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_pango_layout_get_clip_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1939.const$0,"gdk_pango_layout_get_clip_region");
    }
    /**
     * {@snippet :
     * struct _cairo_region* gdk_pango_layout_get_clip_region(struct _PangoLayout* layout, int x_origin, int y_origin, int* index_ranges, int n_ranges);
     * }
     */
    public static MemorySegment gdk_pango_layout_get_clip_region(MemorySegment layout, int x_origin, int y_origin, MemorySegment index_ranges, int n_ranges) {
        var mh$ = gdk_pango_layout_get_clip_region$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout, x_origin, y_origin, index_ranges, n_ranges);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GdkPropMode.GDK_PROP_MODE_REPLACE = 0;
     * }
     */
    public static int GDK_PROP_MODE_REPLACE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkPropMode.GDK_PROP_MODE_PREPEND = 1;
     * }
     */
    public static int GDK_PROP_MODE_PREPEND() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkPropMode.GDK_PROP_MODE_APPEND = 2;
     * }
     */
    public static int GDK_PROP_MODE_APPEND() {
        return (int)2L;
    }
    public static MethodHandle gdk_atom_intern$MH() {
        return RuntimeHelper.requireNonNull(constants$1939.const$1,"gdk_atom_intern");
    }
    /**
     * {@snippet :
     * struct _GdkAtom* gdk_atom_intern(char* atom_name, int only_if_exists);
     * }
     */
    public static MemorySegment gdk_atom_intern(MemorySegment atom_name, int only_if_exists) {
        var mh$ = gdk_atom_intern$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(atom_name, only_if_exists);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_atom_intern_static_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1939.const$2,"gdk_atom_intern_static_string");
    }
    /**
     * {@snippet :
     * struct _GdkAtom* gdk_atom_intern_static_string(char* atom_name);
     * }
     */
    public static MemorySegment gdk_atom_intern_static_string(MemorySegment atom_name) {
        var mh$ = gdk_atom_intern_static_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(atom_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_atom_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1939.const$3,"gdk_atom_name");
    }
    /**
     * {@snippet :
     * char* gdk_atom_name(struct _GdkAtom* atom);
     * }
     */
    public static MemorySegment gdk_atom_name(MemorySegment atom) {
        var mh$ = gdk_atom_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(atom);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_property_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1939.const$5,"gdk_property_get");
    }
    /**
     * {@snippet :
     * int gdk_property_get(struct _GdkWindow* window, struct _GdkAtom* property, struct _GdkAtom* type, unsigned long offset, unsigned long length, int pdelete, struct _GdkAtom** actual_property_type, int* actual_format, int* actual_length, unsigned char** data);
     * }
     */
    public static int gdk_property_get(MemorySegment window, MemorySegment property, MemorySegment type, long offset, long length, int pdelete, MemorySegment actual_property_type, MemorySegment actual_format, MemorySegment actual_length, MemorySegment data) {
        var mh$ = gdk_property_get$MH();
        try {
            return (int)mh$.invokeExact(window, property, type, offset, length, pdelete, actual_property_type, actual_format, actual_length, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_property_change$MH() {
        return RuntimeHelper.requireNonNull(constants$1940.const$1,"gdk_property_change");
    }
    /**
     * {@snippet :
     * void gdk_property_change(struct _GdkWindow* window, struct _GdkAtom* property, struct _GdkAtom* type, int format, enum GdkPropMode mode, unsigned char* data, int nelements);
     * }
     */
    public static void gdk_property_change(MemorySegment window, MemorySegment property, MemorySegment type, int format, int mode, MemorySegment data, int nelements) {
        var mh$ = gdk_property_change$MH();
        try {
            mh$.invokeExact(window, property, type, format, mode, data, nelements);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_property_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$1940.const$2,"gdk_property_delete");
    }
    /**
     * {@snippet :
     * void gdk_property_delete(struct _GdkWindow* window, struct _GdkAtom* property);
     * }
     */
    public static void gdk_property_delete(MemorySegment window, MemorySegment property) {
        var mh$ = gdk_property_delete$MH();
        try {
            mh$.invokeExact(window, property);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_text_property_to_utf8_list_for_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1940.const$3,"gdk_text_property_to_utf8_list_for_display");
    }
    /**
     * {@snippet :
     * int gdk_text_property_to_utf8_list_for_display(struct _GdkDisplay* display, struct _GdkAtom* encoding, int format, unsigned char* text, int length, char*** list);
     * }
     */
    public static int gdk_text_property_to_utf8_list_for_display(MemorySegment display, MemorySegment encoding, int format, MemorySegment text, int length, MemorySegment list) {
        var mh$ = gdk_text_property_to_utf8_list_for_display$MH();
        try {
            return (int)mh$.invokeExact(display, encoding, format, text, length, list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_utf8_to_string_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1940.const$4,"gdk_utf8_to_string_target");
    }
    /**
     * {@snippet :
     * char* gdk_utf8_to_string_target(char* str);
     * }
     */
    public static MemorySegment gdk_utf8_to_string_target(MemorySegment str) {
        var mh$ = gdk_utf8_to_string_target$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_selection_owner_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1940.const$5,"gdk_selection_owner_set");
    }
    /**
     * {@snippet :
     * int gdk_selection_owner_set(struct _GdkWindow* owner, struct _GdkAtom* selection, unsigned int time_, int send_event);
     * }
     */
    public static int gdk_selection_owner_set(MemorySegment owner, MemorySegment selection, int time_, int send_event) {
        var mh$ = gdk_selection_owner_set$MH();
        try {
            return (int)mh$.invokeExact(owner, selection, time_, send_event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_selection_owner_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1941.const$0,"gdk_selection_owner_get");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_selection_owner_get(struct _GdkAtom* selection);
     * }
     */
    public static MemorySegment gdk_selection_owner_get(MemorySegment selection) {
        var mh$ = gdk_selection_owner_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_selection_owner_set_for_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1941.const$2,"gdk_selection_owner_set_for_display");
    }
    /**
     * {@snippet :
     * int gdk_selection_owner_set_for_display(struct _GdkDisplay* display, struct _GdkWindow* owner, struct _GdkAtom* selection, unsigned int time_, int send_event);
     * }
     */
    public static int gdk_selection_owner_set_for_display(MemorySegment display, MemorySegment owner, MemorySegment selection, int time_, int send_event) {
        var mh$ = gdk_selection_owner_set_for_display$MH();
        try {
            return (int)mh$.invokeExact(display, owner, selection, time_, send_event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_selection_owner_get_for_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1941.const$3,"gdk_selection_owner_get_for_display");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_selection_owner_get_for_display(struct _GdkDisplay* display, struct _GdkAtom* selection);
     * }
     */
    public static MemorySegment gdk_selection_owner_get_for_display(MemorySegment display, MemorySegment selection) {
        var mh$ = gdk_selection_owner_get_for_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(display, selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_selection_convert$MH() {
        return RuntimeHelper.requireNonNull(constants$1941.const$4,"gdk_selection_convert");
    }
    /**
     * {@snippet :
     * void gdk_selection_convert(struct _GdkWindow* requestor, struct _GdkAtom* selection, struct _GdkAtom* target, unsigned int time_);
     * }
     */
    public static void gdk_selection_convert(MemorySegment requestor, MemorySegment selection, MemorySegment target, int time_) {
        var mh$ = gdk_selection_convert$MH();
        try {
            mh$.invokeExact(requestor, selection, target, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_selection_property_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1941.const$5,"gdk_selection_property_get");
    }
    /**
     * {@snippet :
     * int gdk_selection_property_get(struct _GdkWindow* requestor, unsigned char** data, struct _GdkAtom** prop_type, int* prop_format);
     * }
     */
    public static int gdk_selection_property_get(MemorySegment requestor, MemorySegment data, MemorySegment prop_type, MemorySegment prop_format) {
        var mh$ = gdk_selection_property_get$MH();
        try {
            return (int)mh$.invokeExact(requestor, data, prop_type, prop_format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_selection_send_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$1942.const$0,"gdk_selection_send_notify");
    }
    /**
     * {@snippet :
     * void gdk_selection_send_notify(struct _GdkWindow* requestor, struct _GdkAtom* selection, struct _GdkAtom* target, struct _GdkAtom* property, unsigned int time_);
     * }
     */
    public static void gdk_selection_send_notify(MemorySegment requestor, MemorySegment selection, MemorySegment target, MemorySegment property, int time_) {
        var mh$ = gdk_selection_send_notify$MH();
        try {
            mh$.invokeExact(requestor, selection, target, property, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_selection_send_notify_for_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1942.const$1,"gdk_selection_send_notify_for_display");
    }
    /**
     * {@snippet :
     * void gdk_selection_send_notify_for_display(struct _GdkDisplay* display, struct _GdkWindow* requestor, struct _GdkAtom* selection, struct _GdkAtom* target, struct _GdkAtom* property, unsigned int time_);
     * }
     */
    public static void gdk_selection_send_notify_for_display(MemorySegment display, MemorySegment requestor, MemorySegment selection, MemorySegment target, MemorySegment property, int time_) {
        var mh$ = gdk_selection_send_notify_for_display$MH();
        try {
            mh$.invokeExact(display, requestor, selection, target, property, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_test_render_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$1942.const$2,"gdk_test_render_sync");
    }
    /**
     * {@snippet :
     * void gdk_test_render_sync(struct _GdkWindow* window);
     * }
     */
    public static void gdk_test_render_sync(MemorySegment window) {
        var mh$ = gdk_test_render_sync$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_test_simulate_key$MH() {
        return RuntimeHelper.requireNonNull(constants$1942.const$4,"gdk_test_simulate_key");
    }
    /**
     * {@snippet :
     * int gdk_test_simulate_key(struct _GdkWindow* window, int x, int y, unsigned int keyval, enum GdkModifierType modifiers, enum GdkEventType key_pressrelease);
     * }
     */
    public static int gdk_test_simulate_key(MemorySegment window, int x, int y, int keyval, int modifiers, int key_pressrelease) {
        var mh$ = gdk_test_simulate_key$MH();
        try {
            return (int)mh$.invokeExact(window, x, y, keyval, modifiers, key_pressrelease);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_test_simulate_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1942.const$5,"gdk_test_simulate_button");
    }
    /**
     * {@snippet :
     * int gdk_test_simulate_button(struct _GdkWindow* window, int x, int y, unsigned int button, enum GdkModifierType modifiers, enum GdkEventType button_pressrelease);
     * }
     */
    public static int gdk_test_simulate_button(MemorySegment window, int x, int y, int button, int modifiers, int button_pressrelease) {
        var mh$ = gdk_test_simulate_button$MH();
        try {
            return (int)mh$.invokeExact(window, x, y, button, modifiers, button_pressrelease);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_threads_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1943.const$0,"gdk_threads_init");
    }
    /**
     * {@snippet :
     * void gdk_threads_init();
     * }
     */
    public static void gdk_threads_init() {
        var mh$ = gdk_threads_init$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_threads_enter$MH() {
        return RuntimeHelper.requireNonNull(constants$1943.const$1,"gdk_threads_enter");
    }
    /**
     * {@snippet :
     * void gdk_threads_enter();
     * }
     */
    public static void gdk_threads_enter() {
        var mh$ = gdk_threads_enter$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_threads_leave$MH() {
        return RuntimeHelper.requireNonNull(constants$1943.const$2,"gdk_threads_leave");
    }
    /**
     * {@snippet :
     * void gdk_threads_leave();
     * }
     */
    public static void gdk_threads_leave() {
        var mh$ = gdk_threads_leave$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_threads_set_lock_functions$MH() {
        return RuntimeHelper.requireNonNull(constants$1943.const$5,"gdk_threads_set_lock_functions");
    }
    /**
     * {@snippet :
     * void gdk_threads_set_lock_functions(void (*enter_fn)(), void (*leave_fn)());
     * }
     */
    public static void gdk_threads_set_lock_functions(MemorySegment enter_fn, MemorySegment leave_fn) {
        var mh$ = gdk_threads_set_lock_functions$MH();
        try {
            mh$.invokeExact(enter_fn, leave_fn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_threads_add_idle_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1944.const$2,"gdk_threads_add_idle_full");
    }
    /**
     * {@snippet :
     * unsigned int gdk_threads_add_idle_full(int priority, int (*function)(void*), void* data, void (*notify)(void*));
     * }
     */
    public static int gdk_threads_add_idle_full(int priority, MemorySegment function, MemorySegment data, MemorySegment notify) {
        var mh$ = gdk_threads_add_idle_full$MH();
        try {
            return (int)mh$.invokeExact(priority, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_threads_add_idle$MH() {
        return RuntimeHelper.requireNonNull(constants$1944.const$4,"gdk_threads_add_idle");
    }
    /**
     * {@snippet :
     * unsigned int gdk_threads_add_idle(int (*function)(void*), void* data);
     * }
     */
    public static int gdk_threads_add_idle(MemorySegment function, MemorySegment data) {
        var mh$ = gdk_threads_add_idle$MH();
        try {
            return (int)mh$.invokeExact(function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_threads_add_timeout_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1945.const$1,"gdk_threads_add_timeout_full");
    }
    /**
     * {@snippet :
     * unsigned int gdk_threads_add_timeout_full(int priority, unsigned int interval, int (*function)(void*), void* data, void (*notify)(void*));
     * }
     */
    public static int gdk_threads_add_timeout_full(int priority, int interval, MemorySegment function, MemorySegment data, MemorySegment notify) {
        var mh$ = gdk_threads_add_timeout_full$MH();
        try {
            return (int)mh$.invokeExact(priority, interval, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_threads_add_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$1945.const$3,"gdk_threads_add_timeout");
    }
    /**
     * {@snippet :
     * unsigned int gdk_threads_add_timeout(unsigned int interval, int (*function)(void*), void* data);
     * }
     */
    public static int gdk_threads_add_timeout(int interval, MemorySegment function, MemorySegment data) {
        var mh$ = gdk_threads_add_timeout$MH();
        try {
            return (int)mh$.invokeExact(interval, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_threads_add_timeout_seconds_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1946.const$0,"gdk_threads_add_timeout_seconds_full");
    }
    /**
     * {@snippet :
     * unsigned int gdk_threads_add_timeout_seconds_full(int priority, unsigned int interval, int (*function)(void*), void* data, void (*notify)(void*));
     * }
     */
    public static int gdk_threads_add_timeout_seconds_full(int priority, int interval, MemorySegment function, MemorySegment data, MemorySegment notify) {
        var mh$ = gdk_threads_add_timeout_seconds_full$MH();
        try {
            return (int)mh$.invokeExact(priority, interval, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_threads_add_timeout_seconds$MH() {
        return RuntimeHelper.requireNonNull(constants$1946.const$2,"gdk_threads_add_timeout_seconds");
    }
    /**
     * {@snippet :
     * unsigned int gdk_threads_add_timeout_seconds(unsigned int interval, int (*function)(void*), void* data);
     * }
     */
    public static int gdk_threads_add_timeout_seconds(int interval, MemorySegment function, MemorySegment data) {
        var mh$ = gdk_threads_add_timeout_seconds$MH();
        try {
            return (int)mh$.invokeExact(interval, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GdkVisualType.GDK_VISUAL_STATIC_GRAY = 0;
     * }
     */
    public static int GDK_VISUAL_STATIC_GRAY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkVisualType.GDK_VISUAL_GRAYSCALE = 1;
     * }
     */
    public static int GDK_VISUAL_GRAYSCALE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkVisualType.GDK_VISUAL_STATIC_COLOR = 2;
     * }
     */
    public static int GDK_VISUAL_STATIC_COLOR() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkVisualType.GDK_VISUAL_PSEUDO_COLOR = 3;
     * }
     */
    public static int GDK_VISUAL_PSEUDO_COLOR() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkVisualType.GDK_VISUAL_TRUE_COLOR = 4;
     * }
     */
    public static int GDK_VISUAL_TRUE_COLOR() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkVisualType.GDK_VISUAL_DIRECT_COLOR = 5;
     * }
     */
    public static int GDK_VISUAL_DIRECT_COLOR() {
        return (int)5L;
    }
    public static MethodHandle gdk_visual_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1946.const$3,"gdk_visual_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_visual_get_type();
     * }
     */
    public static long gdk_visual_get_type() {
        var mh$ = gdk_visual_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_best_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$1946.const$4,"gdk_visual_get_best_depth");
    }
    /**
     * {@snippet :
     * int gdk_visual_get_best_depth();
     * }
     */
    public static int gdk_visual_get_best_depth() {
        var mh$ = gdk_visual_get_best_depth$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_best_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1946.const$5,"gdk_visual_get_best_type");
    }
    /**
     * {@snippet :
     * enum GdkVisualType gdk_visual_get_best_type();
     * }
     */
    public static int gdk_visual_get_best_type() {
        var mh$ = gdk_visual_get_best_type$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_system$MH() {
        return RuntimeHelper.requireNonNull(constants$1947.const$0,"gdk_visual_get_system");
    }
    /**
     * {@snippet :
     * struct _GdkVisual* gdk_visual_get_system();
     * }
     */
    public static MemorySegment gdk_visual_get_system() {
        var mh$ = gdk_visual_get_system$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_best$MH() {
        return RuntimeHelper.requireNonNull(constants$1947.const$1,"gdk_visual_get_best");
    }
    /**
     * {@snippet :
     * struct _GdkVisual* gdk_visual_get_best();
     * }
     */
    public static MemorySegment gdk_visual_get_best() {
        var mh$ = gdk_visual_get_best$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_best_with_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$1947.const$2,"gdk_visual_get_best_with_depth");
    }
    /**
     * {@snippet :
     * struct _GdkVisual* gdk_visual_get_best_with_depth(int depth);
     * }
     */
    public static MemorySegment gdk_visual_get_best_with_depth(int depth) {
        var mh$ = gdk_visual_get_best_with_depth$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(depth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_best_with_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1947.const$3,"gdk_visual_get_best_with_type");
    }
    /**
     * {@snippet :
     * struct _GdkVisual* gdk_visual_get_best_with_type(enum GdkVisualType visual_type);
     * }
     */
    public static MemorySegment gdk_visual_get_best_with_type(int visual_type) {
        var mh$ = gdk_visual_get_best_with_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(visual_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_best_with_both$MH() {
        return RuntimeHelper.requireNonNull(constants$1947.const$4,"gdk_visual_get_best_with_both");
    }
    /**
     * {@snippet :
     * struct _GdkVisual* gdk_visual_get_best_with_both(int depth, enum GdkVisualType visual_type);
     * }
     */
    public static MemorySegment gdk_visual_get_best_with_both(int depth, int visual_type) {
        var mh$ = gdk_visual_get_best_with_both$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(depth, visual_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_query_depths$MH() {
        return RuntimeHelper.requireNonNull(constants$1947.const$5,"gdk_query_depths");
    }
    /**
     * {@snippet :
     * void gdk_query_depths(int** depths, int* count);
     * }
     */
    public static void gdk_query_depths(MemorySegment depths, MemorySegment count) {
        var mh$ = gdk_query_depths$MH();
        try {
            mh$.invokeExact(depths, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_query_visual_types$MH() {
        return RuntimeHelper.requireNonNull(constants$1948.const$0,"gdk_query_visual_types");
    }
    /**
     * {@snippet :
     * void gdk_query_visual_types(enum GdkVisualType** visual_types, int* count);
     * }
     */
    public static void gdk_query_visual_types(MemorySegment visual_types, MemorySegment count) {
        var mh$ = gdk_query_visual_types$MH();
        try {
            mh$.invokeExact(visual_types, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_list_visuals$MH() {
        return RuntimeHelper.requireNonNull(constants$1948.const$1,"gdk_list_visuals");
    }
    /**
     * {@snippet :
     * struct _GList* gdk_list_visuals();
     * }
     */
    public static MemorySegment gdk_list_visuals() {
        var mh$ = gdk_list_visuals$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1948.const$2,"gdk_visual_get_screen");
    }
    /**
     * {@snippet :
     * struct _GdkScreen* gdk_visual_get_screen(struct _GdkVisual* visual);
     * }
     */
    public static MemorySegment gdk_visual_get_screen(MemorySegment visual) {
        var mh$ = gdk_visual_get_screen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(visual);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_visual_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1948.const$3,"gdk_visual_get_visual_type");
    }
    /**
     * {@snippet :
     * enum GdkVisualType gdk_visual_get_visual_type(struct _GdkVisual* visual);
     * }
     */
    public static int gdk_visual_get_visual_type(MemorySegment visual) {
        var mh$ = gdk_visual_get_visual_type$MH();
        try {
            return (int)mh$.invokeExact(visual);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$1948.const$4,"gdk_visual_get_depth");
    }
    /**
     * {@snippet :
     * int gdk_visual_get_depth(struct _GdkVisual* visual);
     * }
     */
    public static int gdk_visual_get_depth(MemorySegment visual) {
        var mh$ = gdk_visual_get_depth$MH();
        try {
            return (int)mh$.invokeExact(visual);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_byte_order$MH() {
        return RuntimeHelper.requireNonNull(constants$1948.const$5,"gdk_visual_get_byte_order");
    }
    /**
     * {@snippet :
     * enum GdkByteOrder gdk_visual_get_byte_order(struct _GdkVisual* visual);
     * }
     */
    public static int gdk_visual_get_byte_order(MemorySegment visual) {
        var mh$ = gdk_visual_get_byte_order$MH();
        try {
            return (int)mh$.invokeExact(visual);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_colormap_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1949.const$0,"gdk_visual_get_colormap_size");
    }
    /**
     * {@snippet :
     * int gdk_visual_get_colormap_size(struct _GdkVisual* visual);
     * }
     */
    public static int gdk_visual_get_colormap_size(MemorySegment visual) {
        var mh$ = gdk_visual_get_colormap_size$MH();
        try {
            return (int)mh$.invokeExact(visual);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_bits_per_rgb$MH() {
        return RuntimeHelper.requireNonNull(constants$1949.const$1,"gdk_visual_get_bits_per_rgb");
    }
    /**
     * {@snippet :
     * int gdk_visual_get_bits_per_rgb(struct _GdkVisual* visual);
     * }
     */
    public static int gdk_visual_get_bits_per_rgb(MemorySegment visual) {
        var mh$ = gdk_visual_get_bits_per_rgb$MH();
        try {
            return (int)mh$.invokeExact(visual);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_red_pixel_details$MH() {
        return RuntimeHelper.requireNonNull(constants$1949.const$2,"gdk_visual_get_red_pixel_details");
    }
    /**
     * {@snippet :
     * void gdk_visual_get_red_pixel_details(struct _GdkVisual* visual, unsigned int* mask, int* shift, int* precision);
     * }
     */
    public static void gdk_visual_get_red_pixel_details(MemorySegment visual, MemorySegment mask, MemorySegment shift, MemorySegment precision) {
        var mh$ = gdk_visual_get_red_pixel_details$MH();
        try {
            mh$.invokeExact(visual, mask, shift, precision);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_green_pixel_details$MH() {
        return RuntimeHelper.requireNonNull(constants$1949.const$3,"gdk_visual_get_green_pixel_details");
    }
    /**
     * {@snippet :
     * void gdk_visual_get_green_pixel_details(struct _GdkVisual* visual, unsigned int* mask, int* shift, int* precision);
     * }
     */
    public static void gdk_visual_get_green_pixel_details(MemorySegment visual, MemorySegment mask, MemorySegment shift, MemorySegment precision) {
        var mh$ = gdk_visual_get_green_pixel_details$MH();
        try {
            mh$.invokeExact(visual, mask, shift, precision);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_visual_get_blue_pixel_details$MH() {
        return RuntimeHelper.requireNonNull(constants$1949.const$4,"gdk_visual_get_blue_pixel_details");
    }
    /**
     * {@snippet :
     * void gdk_visual_get_blue_pixel_details(struct _GdkVisual* visual, unsigned int* mask, int* shift, int* precision);
     * }
     */
    public static void gdk_visual_get_blue_pixel_details(MemorySegment visual, MemorySegment mask, MemorySegment shift, MemorySegment precision) {
        var mh$ = gdk_visual_get_blue_pixel_details$MH();
        try {
            mh$.invokeExact(visual, mask, shift, precision);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GdkAppLaunchContext* GdkAppLaunchContext_autoptr;
     * }
     */
    public static final AddressLayout GdkAppLaunchContext_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkAppLaunchContext_listautoptr;
     * }
     */
    public static final AddressLayout GdkAppLaunchContext_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkAppLaunchContext_slistautoptr;
     * }
     */
    public static final AddressLayout GdkAppLaunchContext_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkAppLaunchContext_queueautoptr;
     * }
     */
    public static final AddressLayout GdkAppLaunchContext_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GdkCursor* GdkCursor_autoptr;
     * }
     */
    public static final AddressLayout GdkCursor_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkCursor_listautoptr;
     * }
     */
    public static final AddressLayout GdkCursor_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkCursor_slistautoptr;
     * }
     */
    public static final AddressLayout GdkCursor_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkCursor_queueautoptr;
     * }
     */
    public static final AddressLayout GdkCursor_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GdkDevice* GdkDevice_autoptr;
     * }
     */
    public static final AddressLayout GdkDevice_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkDevice_listautoptr;
     * }
     */
    public static final AddressLayout GdkDevice_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkDevice_slistautoptr;
     * }
     */
    public static final AddressLayout GdkDevice_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkDevice_queueautoptr;
     * }
     */
    public static final AddressLayout GdkDevice_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GdkDeviceManager* GdkDeviceManager_autoptr;
     * }
     */
    public static final AddressLayout GdkDeviceManager_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkDeviceManager_listautoptr;
     * }
     */
    public static final AddressLayout GdkDeviceManager_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkDeviceManager_slistautoptr;
     * }
     */
    public static final AddressLayout GdkDeviceManager_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkDeviceManager_queueautoptr;
     * }
     */
    public static final AddressLayout GdkDeviceManager_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GdkDisplay* GdkDisplay_autoptr;
     * }
     */
    public static final AddressLayout GdkDisplay_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkDisplay_listautoptr;
     * }
     */
    public static final AddressLayout GdkDisplay_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkDisplay_slistautoptr;
     * }
     */
    public static final AddressLayout GdkDisplay_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkDisplay_queueautoptr;
     * }
     */
    public static final AddressLayout GdkDisplay_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GdkDisplayManager* GdkDisplayManager_autoptr;
     * }
     */
    public static final AddressLayout GdkDisplayManager_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkDisplayManager_listautoptr;
     * }
     */
    public static final AddressLayout GdkDisplayManager_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkDisplayManager_slistautoptr;
     * }
     */
    public static final AddressLayout GdkDisplayManager_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkDisplayManager_queueautoptr;
     * }
     */
    public static final AddressLayout GdkDisplayManager_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GdkDragContext* GdkDragContext_autoptr;
     * }
     */
    public static final AddressLayout GdkDragContext_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkDragContext_listautoptr;
     * }
     */
    public static final AddressLayout GdkDragContext_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkDragContext_slistautoptr;
     * }
     */
    public static final AddressLayout GdkDragContext_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkDragContext_queueautoptr;
     * }
     */
    public static final AddressLayout GdkDragContext_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GdkFrameClock* GdkFrameClock_autoptr;
     * }
     */
    public static final AddressLayout GdkFrameClock_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkFrameClock_listautoptr;
     * }
     */
    public static final AddressLayout GdkFrameClock_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkFrameClock_slistautoptr;
     * }
     */
    public static final AddressLayout GdkFrameClock_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkFrameClock_queueautoptr;
     * }
     */
    public static final AddressLayout GdkFrameClock_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GdkGLContext* GdkGLContext_autoptr;
     * }
     */
    public static final AddressLayout GdkGLContext_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkGLContext_listautoptr;
     * }
     */
    public static final AddressLayout GdkGLContext_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkGLContext_slistautoptr;
     * }
     */
    public static final AddressLayout GdkGLContext_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkGLContext_queueautoptr;
     * }
     */
    public static final AddressLayout GdkGLContext_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GdkKeymap* GdkKeymap_autoptr;
     * }
     */
    public static final AddressLayout GdkKeymap_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkKeymap_listautoptr;
     * }
     */
    public static final AddressLayout GdkKeymap_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkKeymap_slistautoptr;
     * }
     */
    public static final AddressLayout GdkKeymap_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkKeymap_queueautoptr;
     * }
     */
    public static final AddressLayout GdkKeymap_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GdkScreen* GdkScreen_autoptr;
     * }
     */
    public static final AddressLayout GdkScreen_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkScreen_listautoptr;
     * }
     */
    public static final AddressLayout GdkScreen_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkScreen_slistautoptr;
     * }
     */
    public static final AddressLayout GdkScreen_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkScreen_queueautoptr;
     * }
     */
    public static final AddressLayout GdkScreen_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GdkVisual* GdkVisual_autoptr;
     * }
     */
    public static final AddressLayout GdkVisual_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkVisual_listautoptr;
     * }
     */
    public static final AddressLayout GdkVisual_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkVisual_slistautoptr;
     * }
     */
    public static final AddressLayout GdkVisual_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkVisual_queueautoptr;
     * }
     */
    public static final AddressLayout GdkVisual_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GdkWindow* GdkWindow_autoptr;
     * }
     */
    public static final AddressLayout GdkWindow_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkWindow_listautoptr;
     * }
     */
    public static final AddressLayout GdkWindow_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkWindow_slistautoptr;
     * }
     */
    public static final AddressLayout GdkWindow_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkWindow_queueautoptr;
     * }
     */
    public static final AddressLayout GdkWindow_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef union _GdkEvent* GdkEvent_autoptr;
     * }
     */
    public static final AddressLayout GdkEvent_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkEvent_listautoptr;
     * }
     */
    public static final AddressLayout GdkEvent_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkEvent_slistautoptr;
     * }
     */
    public static final AddressLayout GdkEvent_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkEvent_queueautoptr;
     * }
     */
    public static final AddressLayout GdkEvent_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GdkFrameTimings* GdkFrameTimings_autoptr;
     * }
     */
    public static final AddressLayout GdkFrameTimings_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkFrameTimings_listautoptr;
     * }
     */
    public static final AddressLayout GdkFrameTimings_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkFrameTimings_slistautoptr;
     * }
     */
    public static final AddressLayout GdkFrameTimings_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkFrameTimings_queueautoptr;
     * }
     */
    public static final AddressLayout GdkFrameTimings_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GdkRGBA* GdkRGBA_autoptr;
     * }
     */
    public static final AddressLayout GdkRGBA_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GdkRGBA_listautoptr;
     * }
     */
    public static final AddressLayout GdkRGBA_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GdkRGBA_slistautoptr;
     * }
     */
    public static final AddressLayout GdkRGBA_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GdkRGBA_queueautoptr;
     * }
     */
    public static final AddressLayout GdkRGBA_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum GtkAlign.GTK_ALIGN_FILL = 0;
     * }
     */
    public static int GTK_ALIGN_FILL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkAlign.GTK_ALIGN_START = 1;
     * }
     */
    public static int GTK_ALIGN_START() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkAlign.GTK_ALIGN_END = 2;
     * }
     */
    public static int GTK_ALIGN_END() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkAlign.GTK_ALIGN_CENTER = 3;
     * }
     */
    public static int GTK_ALIGN_CENTER() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkAlign.GTK_ALIGN_BASELINE = 4;
     * }
     */
    public static int GTK_ALIGN_BASELINE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkArrowType.GTK_ARROW_UP = 0;
     * }
     */
    public static int GTK_ARROW_UP() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkArrowType.GTK_ARROW_DOWN = 1;
     * }
     */
    public static int GTK_ARROW_DOWN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkArrowType.GTK_ARROW_LEFT = 2;
     * }
     */
    public static int GTK_ARROW_LEFT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkArrowType.GTK_ARROW_RIGHT = 3;
     * }
     */
    public static int GTK_ARROW_RIGHT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkArrowType.GTK_ARROW_NONE = 4;
     * }
     */
    public static int GTK_ARROW_NONE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkBaselinePosition.GTK_BASELINE_POSITION_TOP = 0;
     * }
     */
    public static int GTK_BASELINE_POSITION_TOP() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkBaselinePosition.GTK_BASELINE_POSITION_CENTER = 1;
     * }
     */
    public static int GTK_BASELINE_POSITION_CENTER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkBaselinePosition.GTK_BASELINE_POSITION_BOTTOM = 2;
     * }
     */
    public static int GTK_BASELINE_POSITION_BOTTOM() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkDeleteType.GTK_DELETE_CHARS = 0;
     * }
     */
    public static int GTK_DELETE_CHARS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkDeleteType.GTK_DELETE_WORD_ENDS = 1;
     * }
     */
    public static int GTK_DELETE_WORD_ENDS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkDeleteType.GTK_DELETE_WORDS = 2;
     * }
     */
    public static int GTK_DELETE_WORDS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkDeleteType.GTK_DELETE_DISPLAY_LINES = 3;
     * }
     */
    public static int GTK_DELETE_DISPLAY_LINES() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkDeleteType.GTK_DELETE_DISPLAY_LINE_ENDS = 4;
     * }
     */
    public static int GTK_DELETE_DISPLAY_LINE_ENDS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkDeleteType.GTK_DELETE_PARAGRAPH_ENDS = 5;
     * }
     */
    public static int GTK_DELETE_PARAGRAPH_ENDS() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkDeleteType.GTK_DELETE_PARAGRAPHS = 6;
     * }
     */
    public static int GTK_DELETE_PARAGRAPHS() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GtkDeleteType.GTK_DELETE_WHITESPACE = 7;
     * }
     */
    public static int GTK_DELETE_WHITESPACE() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GtkDirectionType.GTK_DIR_TAB_FORWARD = 0;
     * }
     */
    public static int GTK_DIR_TAB_FORWARD() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkDirectionType.GTK_DIR_TAB_BACKWARD = 1;
     * }
     */
    public static int GTK_DIR_TAB_BACKWARD() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkDirectionType.GTK_DIR_UP = 2;
     * }
     */
    public static int GTK_DIR_UP() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkDirectionType.GTK_DIR_DOWN = 3;
     * }
     */
    public static int GTK_DIR_DOWN() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkDirectionType.GTK_DIR_LEFT = 4;
     * }
     */
    public static int GTK_DIR_LEFT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkDirectionType.GTK_DIR_RIGHT = 5;
     * }
     */
    public static int GTK_DIR_RIGHT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkIconSize.GTK_ICON_SIZE_INVALID = 0;
     * }
     */
    public static int GTK_ICON_SIZE_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkIconSize.GTK_ICON_SIZE_MENU = 1;
     * }
     */
    public static int GTK_ICON_SIZE_MENU() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkIconSize.GTK_ICON_SIZE_SMALL_TOOLBAR = 2;
     * }
     */
    public static int GTK_ICON_SIZE_SMALL_TOOLBAR() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkIconSize.GTK_ICON_SIZE_LARGE_TOOLBAR = 3;
     * }
     */
    public static int GTK_ICON_SIZE_LARGE_TOOLBAR() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkIconSize.GTK_ICON_SIZE_BUTTON = 4;
     * }
     */
    public static int GTK_ICON_SIZE_BUTTON() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkIconSize.GTK_ICON_SIZE_DND = 5;
     * }
     */
    public static int GTK_ICON_SIZE_DND() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkIconSize.GTK_ICON_SIZE_DIALOG = 6;
     * }
     */
    public static int GTK_ICON_SIZE_DIALOG() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GtkSensitivityType.GTK_SENSITIVITY_AUTO = 0;
     * }
     */
    public static int GTK_SENSITIVITY_AUTO() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkSensitivityType.GTK_SENSITIVITY_ON = 1;
     * }
     */
    public static int GTK_SENSITIVITY_ON() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkSensitivityType.GTK_SENSITIVITY_OFF = 2;
     * }
     */
    public static int GTK_SENSITIVITY_OFF() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkTextDirection.GTK_TEXT_DIR_NONE = 0;
     * }
     */
    public static int GTK_TEXT_DIR_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkTextDirection.GTK_TEXT_DIR_LTR = 1;
     * }
     */
    public static int GTK_TEXT_DIR_LTR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkTextDirection.GTK_TEXT_DIR_RTL = 2;
     * }
     */
    public static int GTK_TEXT_DIR_RTL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkJustification.GTK_JUSTIFY_LEFT = 0;
     * }
     */
    public static int GTK_JUSTIFY_LEFT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkJustification.GTK_JUSTIFY_RIGHT = 1;
     * }
     */
    public static int GTK_JUSTIFY_RIGHT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkJustification.GTK_JUSTIFY_CENTER = 2;
     * }
     */
    public static int GTK_JUSTIFY_CENTER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkJustification.GTK_JUSTIFY_FILL = 3;
     * }
     */
    public static int GTK_JUSTIFY_FILL() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkMenuDirectionType.GTK_MENU_DIR_PARENT = 0;
     * }
     */
    public static int GTK_MENU_DIR_PARENT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkMenuDirectionType.GTK_MENU_DIR_CHILD = 1;
     * }
     */
    public static int GTK_MENU_DIR_CHILD() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkMenuDirectionType.GTK_MENU_DIR_NEXT = 2;
     * }
     */
    public static int GTK_MENU_DIR_NEXT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkMenuDirectionType.GTK_MENU_DIR_PREV = 3;
     * }
     */
    public static int GTK_MENU_DIR_PREV() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkMessageType.GTK_MESSAGE_INFO = 0;
     * }
     */
    public static int GTK_MESSAGE_INFO() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkMessageType.GTK_MESSAGE_WARNING = 1;
     * }
     */
    public static int GTK_MESSAGE_WARNING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkMessageType.GTK_MESSAGE_QUESTION = 2;
     * }
     */
    public static int GTK_MESSAGE_QUESTION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkMessageType.GTK_MESSAGE_ERROR = 3;
     * }
     */
    public static int GTK_MESSAGE_ERROR() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkMessageType.GTK_MESSAGE_OTHER = 4;
     * }
     */
    public static int GTK_MESSAGE_OTHER() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkMovementStep.GTK_MOVEMENT_LOGICAL_POSITIONS = 0;
     * }
     */
    public static int GTK_MOVEMENT_LOGICAL_POSITIONS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkMovementStep.GTK_MOVEMENT_VISUAL_POSITIONS = 1;
     * }
     */
    public static int GTK_MOVEMENT_VISUAL_POSITIONS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkMovementStep.GTK_MOVEMENT_WORDS = 2;
     * }
     */
    public static int GTK_MOVEMENT_WORDS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkMovementStep.GTK_MOVEMENT_DISPLAY_LINES = 3;
     * }
     */
    public static int GTK_MOVEMENT_DISPLAY_LINES() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkMovementStep.GTK_MOVEMENT_DISPLAY_LINE_ENDS = 4;
     * }
     */
    public static int GTK_MOVEMENT_DISPLAY_LINE_ENDS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkMovementStep.GTK_MOVEMENT_PARAGRAPHS = 5;
     * }
     */
    public static int GTK_MOVEMENT_PARAGRAPHS() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkMovementStep.GTK_MOVEMENT_PARAGRAPH_ENDS = 6;
     * }
     */
    public static int GTK_MOVEMENT_PARAGRAPH_ENDS() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GtkMovementStep.GTK_MOVEMENT_PAGES = 7;
     * }
     */
    public static int GTK_MOVEMENT_PAGES() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GtkMovementStep.GTK_MOVEMENT_BUFFER_ENDS = 8;
     * }
     */
    public static int GTK_MOVEMENT_BUFFER_ENDS() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GtkMovementStep.GTK_MOVEMENT_HORIZONTAL_PAGES = 9;
     * }
     */
    public static int GTK_MOVEMENT_HORIZONTAL_PAGES() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum GtkScrollStep.GTK_SCROLL_STEPS = 0;
     * }
     */
    public static int GTK_SCROLL_STEPS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkScrollStep.GTK_SCROLL_PAGES = 1;
     * }
     */
    public static int GTK_SCROLL_PAGES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkScrollStep.GTK_SCROLL_ENDS = 2;
     * }
     */
    public static int GTK_SCROLL_ENDS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkScrollStep.GTK_SCROLL_HORIZONTAL_STEPS = 3;
     * }
     */
    public static int GTK_SCROLL_HORIZONTAL_STEPS() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkScrollStep.GTK_SCROLL_HORIZONTAL_PAGES = 4;
     * }
     */
    public static int GTK_SCROLL_HORIZONTAL_PAGES() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkScrollStep.GTK_SCROLL_HORIZONTAL_ENDS = 5;
     * }
     */
    public static int GTK_SCROLL_HORIZONTAL_ENDS() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkOrientation.GTK_ORIENTATION_HORIZONTAL = 0;
     * }
     */
    public static int GTK_ORIENTATION_HORIZONTAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkOrientation.GTK_ORIENTATION_VERTICAL = 1;
     * }
     */
    public static int GTK_ORIENTATION_VERTICAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkPackType.GTK_PACK_START = 0;
     * }
     */
    public static int GTK_PACK_START() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkPackType.GTK_PACK_END = 1;
     * }
     */
    public static int GTK_PACK_END() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkPositionType.GTK_POS_LEFT = 0;
     * }
     */
    public static int GTK_POS_LEFT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkPositionType.GTK_POS_RIGHT = 1;
     * }
     */
    public static int GTK_POS_RIGHT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkPositionType.GTK_POS_TOP = 2;
     * }
     */
    public static int GTK_POS_TOP() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkPositionType.GTK_POS_BOTTOM = 3;
     * }
     */
    public static int GTK_POS_BOTTOM() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkReliefStyle.GTK_RELIEF_NORMAL = 0;
     * }
     */
    public static int GTK_RELIEF_NORMAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkReliefStyle.GTK_RELIEF_HALF = 1;
     * }
     */
    public static int GTK_RELIEF_HALF() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkReliefStyle.GTK_RELIEF_NONE = 2;
     * }
     */
    public static int GTK_RELIEF_NONE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkScrollType.GTK_SCROLL_NONE = 0;
     * }
     */
    public static int GTK_SCROLL_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkScrollType.GTK_SCROLL_JUMP = 1;
     * }
     */
    public static int GTK_SCROLL_JUMP() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkScrollType.GTK_SCROLL_STEP_BACKWARD = 2;
     * }
     */
    public static int GTK_SCROLL_STEP_BACKWARD() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkScrollType.GTK_SCROLL_STEP_FORWARD = 3;
     * }
     */
    public static int GTK_SCROLL_STEP_FORWARD() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkScrollType.GTK_SCROLL_PAGE_BACKWARD = 4;
     * }
     */
    public static int GTK_SCROLL_PAGE_BACKWARD() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkScrollType.GTK_SCROLL_PAGE_FORWARD = 5;
     * }
     */
    public static int GTK_SCROLL_PAGE_FORWARD() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkScrollType.GTK_SCROLL_STEP_UP = 6;
     * }
     */
    public static int GTK_SCROLL_STEP_UP() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GtkScrollType.GTK_SCROLL_STEP_DOWN = 7;
     * }
     */
    public static int GTK_SCROLL_STEP_DOWN() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GtkScrollType.GTK_SCROLL_PAGE_UP = 8;
     * }
     */
    public static int GTK_SCROLL_PAGE_UP() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GtkScrollType.GTK_SCROLL_PAGE_DOWN = 9;
     * }
     */
    public static int GTK_SCROLL_PAGE_DOWN() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum GtkScrollType.GTK_SCROLL_STEP_LEFT = 10;
     * }
     */
    public static int GTK_SCROLL_STEP_LEFT() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum GtkScrollType.GTK_SCROLL_STEP_RIGHT = 11;
     * }
     */
    public static int GTK_SCROLL_STEP_RIGHT() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum GtkScrollType.GTK_SCROLL_PAGE_LEFT = 12;
     * }
     */
    public static int GTK_SCROLL_PAGE_LEFT() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum GtkScrollType.GTK_SCROLL_PAGE_RIGHT = 13;
     * }
     */
    public static int GTK_SCROLL_PAGE_RIGHT() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum GtkScrollType.GTK_SCROLL_START = 14;
     * }
     */
    public static int GTK_SCROLL_START() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum GtkScrollType.GTK_SCROLL_END = 15;
     * }
     */
    public static int GTK_SCROLL_END() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum GtkSelectionMode.GTK_SELECTION_NONE = 0;
     * }
     */
    public static int GTK_SELECTION_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkSelectionMode.GTK_SELECTION_SINGLE = 1;
     * }
     */
    public static int GTK_SELECTION_SINGLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkSelectionMode.GTK_SELECTION_BROWSE = 2;
     * }
     */
    public static int GTK_SELECTION_BROWSE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkSelectionMode.GTK_SELECTION_MULTIPLE = 3;
     * }
     */
    public static int GTK_SELECTION_MULTIPLE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkShadowType.GTK_SHADOW_NONE = 0;
     * }
     */
    public static int GTK_SHADOW_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkShadowType.GTK_SHADOW_IN = 1;
     * }
     */
    public static int GTK_SHADOW_IN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkShadowType.GTK_SHADOW_OUT = 2;
     * }
     */
    public static int GTK_SHADOW_OUT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkShadowType.GTK_SHADOW_ETCHED_IN = 3;
     * }
     */
    public static int GTK_SHADOW_ETCHED_IN() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkShadowType.GTK_SHADOW_ETCHED_OUT = 4;
     * }
     */
    public static int GTK_SHADOW_ETCHED_OUT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkStateType.GTK_STATE_NORMAL = 0;
     * }
     */
    public static int GTK_STATE_NORMAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkStateType.GTK_STATE_ACTIVE = 1;
     * }
     */
    public static int GTK_STATE_ACTIVE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkStateType.GTK_STATE_PRELIGHT = 2;
     * }
     */
    public static int GTK_STATE_PRELIGHT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkStateType.GTK_STATE_SELECTED = 3;
     * }
     */
    public static int GTK_STATE_SELECTED() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkStateType.GTK_STATE_INSENSITIVE = 4;
     * }
     */
    public static int GTK_STATE_INSENSITIVE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkStateType.GTK_STATE_INCONSISTENT = 5;
     * }
     */
    public static int GTK_STATE_INCONSISTENT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkStateType.GTK_STATE_FOCUSED = 6;
     * }
     */
    public static int GTK_STATE_FOCUSED() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GtkToolbarStyle.GTK_TOOLBAR_ICONS = 0;
     * }
     */
    public static int GTK_TOOLBAR_ICONS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkToolbarStyle.GTK_TOOLBAR_TEXT = 1;
     * }
     */
    public static int GTK_TOOLBAR_TEXT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkToolbarStyle.GTK_TOOLBAR_BOTH = 2;
     * }
     */
    public static int GTK_TOOLBAR_BOTH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkToolbarStyle.GTK_TOOLBAR_BOTH_HORIZ = 3;
     * }
     */
    public static int GTK_TOOLBAR_BOTH_HORIZ() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkWrapMode.GTK_WRAP_NONE = 0;
     * }
     */
    public static int GTK_WRAP_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkWrapMode.GTK_WRAP_CHAR = 1;
     * }
     */
    public static int GTK_WRAP_CHAR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkWrapMode.GTK_WRAP_WORD = 2;
     * }
     */
    public static int GTK_WRAP_WORD() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkWrapMode.GTK_WRAP_WORD_CHAR = 3;
     * }
     */
    public static int GTK_WRAP_WORD_CHAR() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkSortType.GTK_SORT_ASCENDING = 0;
     * }
     */
    public static int GTK_SORT_ASCENDING() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkSortType.GTK_SORT_DESCENDING = 1;
     * }
     */
    public static int GTK_SORT_DESCENDING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkIMPreeditStyle.GTK_IM_PREEDIT_NOTHING = 0;
     * }
     */
    public static int GTK_IM_PREEDIT_NOTHING() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkIMPreeditStyle.GTK_IM_PREEDIT_CALLBACK = 1;
     * }
     */
    public static int GTK_IM_PREEDIT_CALLBACK() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkIMPreeditStyle.GTK_IM_PREEDIT_NONE = 2;
     * }
     */
    public static int GTK_IM_PREEDIT_NONE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkIMStatusStyle.GTK_IM_STATUS_NOTHING = 0;
     * }
     */
    public static int GTK_IM_STATUS_NOTHING() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkIMStatusStyle.GTK_IM_STATUS_CALLBACK = 1;
     * }
     */
    public static int GTK_IM_STATUS_CALLBACK() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkIMStatusStyle.GTK_IM_STATUS_NONE = 2;
     * }
     */
    public static int GTK_IM_STATUS_NONE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkPackDirection.GTK_PACK_DIRECTION_LTR = 0;
     * }
     */
    public static int GTK_PACK_DIRECTION_LTR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkPackDirection.GTK_PACK_DIRECTION_RTL = 1;
     * }
     */
    public static int GTK_PACK_DIRECTION_RTL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkPackDirection.GTK_PACK_DIRECTION_TTB = 2;
     * }
     */
    public static int GTK_PACK_DIRECTION_TTB() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkPackDirection.GTK_PACK_DIRECTION_BTT = 3;
     * }
     */
    public static int GTK_PACK_DIRECTION_BTT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkPrintPages.GTK_PRINT_PAGES_ALL = 0;
     * }
     */
    public static int GTK_PRINT_PAGES_ALL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkPrintPages.GTK_PRINT_PAGES_CURRENT = 1;
     * }
     */
    public static int GTK_PRINT_PAGES_CURRENT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkPrintPages.GTK_PRINT_PAGES_RANGES = 2;
     * }
     */
    public static int GTK_PRINT_PAGES_RANGES() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkPrintPages.GTK_PRINT_PAGES_SELECTION = 3;
     * }
     */
    public static int GTK_PRINT_PAGES_SELECTION() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkPageSet.GTK_PAGE_SET_ALL = 0;
     * }
     */
    public static int GTK_PAGE_SET_ALL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkPageSet.GTK_PAGE_SET_EVEN = 1;
     * }
     */
    public static int GTK_PAGE_SET_EVEN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkPageSet.GTK_PAGE_SET_ODD = 2;
     * }
     */
    public static int GTK_PAGE_SET_ODD() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkNumberUpLayout.GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM = 0;
     * }
     */
    public static int GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkNumberUpLayout.GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP = 1;
     * }
     */
    public static int GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkNumberUpLayout.GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM = 2;
     * }
     */
    public static int GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkNumberUpLayout.GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP = 3;
     * }
     */
    public static int GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkNumberUpLayout.GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT = 4;
     * }
     */
    public static int GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkNumberUpLayout.GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT = 5;
     * }
     */
    public static int GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkNumberUpLayout.GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT = 6;
     * }
     */
    public static int GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GtkNumberUpLayout.GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT = 7;
     * }
     */
    public static int GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GtkPageOrientation.GTK_PAGE_ORIENTATION_PORTRAIT = 0;
     * }
     */
    public static int GTK_PAGE_ORIENTATION_PORTRAIT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkPageOrientation.GTK_PAGE_ORIENTATION_LANDSCAPE = 1;
     * }
     */
    public static int GTK_PAGE_ORIENTATION_LANDSCAPE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkPageOrientation.GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT = 2;
     * }
     */
    public static int GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkPageOrientation.GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE = 3;
     * }
     */
    public static int GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkPrintQuality.GTK_PRINT_QUALITY_LOW = 0;
     * }
     */
    public static int GTK_PRINT_QUALITY_LOW() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkPrintQuality.GTK_PRINT_QUALITY_NORMAL = 1;
     * }
     */
    public static int GTK_PRINT_QUALITY_NORMAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkPrintQuality.GTK_PRINT_QUALITY_HIGH = 2;
     * }
     */
    public static int GTK_PRINT_QUALITY_HIGH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkPrintQuality.GTK_PRINT_QUALITY_DRAFT = 3;
     * }
     */
    public static int GTK_PRINT_QUALITY_DRAFT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkPrintDuplex.GTK_PRINT_DUPLEX_SIMPLEX = 0;
     * }
     */
    public static int GTK_PRINT_DUPLEX_SIMPLEX() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkPrintDuplex.GTK_PRINT_DUPLEX_HORIZONTAL = 1;
     * }
     */
    public static int GTK_PRINT_DUPLEX_HORIZONTAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkPrintDuplex.GTK_PRINT_DUPLEX_VERTICAL = 2;
     * }
     */
    public static int GTK_PRINT_DUPLEX_VERTICAL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkUnit.GTK_UNIT_NONE = 0;
     * }
     */
    public static int GTK_UNIT_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkUnit.GTK_UNIT_POINTS = 1;
     * }
     */
    public static int GTK_UNIT_POINTS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkUnit.GTK_UNIT_INCH = 2;
     * }
     */
    public static int GTK_UNIT_INCH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkUnit.GTK_UNIT_MM = 3;
     * }
     */
    public static int GTK_UNIT_MM() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkTreeViewGridLines.GTK_TREE_VIEW_GRID_LINES_NONE = 0;
     * }
     */
    public static int GTK_TREE_VIEW_GRID_LINES_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkTreeViewGridLines.GTK_TREE_VIEW_GRID_LINES_HORIZONTAL = 1;
     * }
     */
    public static int GTK_TREE_VIEW_GRID_LINES_HORIZONTAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkTreeViewGridLines.GTK_TREE_VIEW_GRID_LINES_VERTICAL = 2;
     * }
     */
    public static int GTK_TREE_VIEW_GRID_LINES_VERTICAL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkTreeViewGridLines.GTK_TREE_VIEW_GRID_LINES_BOTH = 3;
     * }
     */
    public static int GTK_TREE_VIEW_GRID_LINES_BOTH() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkDragResult.GTK_DRAG_RESULT_SUCCESS = 0;
     * }
     */
    public static int GTK_DRAG_RESULT_SUCCESS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkDragResult.GTK_DRAG_RESULT_NO_TARGET = 1;
     * }
     */
    public static int GTK_DRAG_RESULT_NO_TARGET() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkDragResult.GTK_DRAG_RESULT_USER_CANCELLED = 2;
     * }
     */
    public static int GTK_DRAG_RESULT_USER_CANCELLED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkDragResult.GTK_DRAG_RESULT_TIMEOUT_EXPIRED = 3;
     * }
     */
    public static int GTK_DRAG_RESULT_TIMEOUT_EXPIRED() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkDragResult.GTK_DRAG_RESULT_GRAB_BROKEN = 4;
     * }
     */
    public static int GTK_DRAG_RESULT_GRAB_BROKEN() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkDragResult.GTK_DRAG_RESULT_ERROR = 5;
     * }
     */
    public static int GTK_DRAG_RESULT_ERROR() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkSizeGroupMode.GTK_SIZE_GROUP_NONE = 0;
     * }
     */
    public static int GTK_SIZE_GROUP_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkSizeGroupMode.GTK_SIZE_GROUP_HORIZONTAL = 1;
     * }
     */
    public static int GTK_SIZE_GROUP_HORIZONTAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkSizeGroupMode.GTK_SIZE_GROUP_VERTICAL = 2;
     * }
     */
    public static int GTK_SIZE_GROUP_VERTICAL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkSizeGroupMode.GTK_SIZE_GROUP_BOTH = 3;
     * }
     */
    public static int GTK_SIZE_GROUP_BOTH() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkSizeRequestMode.GTK_SIZE_REQUEST_HEIGHT_FOR_WIDTH = 0;
     * }
     */
    public static int GTK_SIZE_REQUEST_HEIGHT_FOR_WIDTH() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkSizeRequestMode.GTK_SIZE_REQUEST_WIDTH_FOR_HEIGHT = 1;
     * }
     */
    public static int GTK_SIZE_REQUEST_WIDTH_FOR_HEIGHT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkSizeRequestMode.GTK_SIZE_REQUEST_CONSTANT_SIZE = 2;
     * }
     */
    public static int GTK_SIZE_REQUEST_CONSTANT_SIZE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkScrollablePolicy.GTK_SCROLL_MINIMUM = 0;
     * }
     */
    public static int GTK_SCROLL_MINIMUM() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkScrollablePolicy.GTK_SCROLL_NATURAL = 1;
     * }
     */
    public static int GTK_SCROLL_NATURAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkStateFlags.GTK_STATE_FLAG_NORMAL = 0;
     * }
     */
    public static int GTK_STATE_FLAG_NORMAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkStateFlags.GTK_STATE_FLAG_ACTIVE = 1;
     * }
     */
    public static int GTK_STATE_FLAG_ACTIVE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkStateFlags.GTK_STATE_FLAG_PRELIGHT = 2;
     * }
     */
    public static int GTK_STATE_FLAG_PRELIGHT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkStateFlags.GTK_STATE_FLAG_SELECTED = 4;
     * }
     */
    public static int GTK_STATE_FLAG_SELECTED() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkStateFlags.GTK_STATE_FLAG_INSENSITIVE = 8;
     * }
     */
    public static int GTK_STATE_FLAG_INSENSITIVE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GtkStateFlags.GTK_STATE_FLAG_INCONSISTENT = 16;
     * }
     */
    public static int GTK_STATE_FLAG_INCONSISTENT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GtkStateFlags.GTK_STATE_FLAG_FOCUSED = 32;
     * }
     */
    public static int GTK_STATE_FLAG_FOCUSED() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GtkStateFlags.GTK_STATE_FLAG_BACKDROP = 64;
     * }
     */
    public static int GTK_STATE_FLAG_BACKDROP() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum GtkStateFlags.GTK_STATE_FLAG_DIR_LTR = 128;
     * }
     */
    public static int GTK_STATE_FLAG_DIR_LTR() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum GtkStateFlags.GTK_STATE_FLAG_DIR_RTL = 256;
     * }
     */
    public static int GTK_STATE_FLAG_DIR_RTL() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum GtkStateFlags.GTK_STATE_FLAG_LINK = 512;
     * }
     */
    public static int GTK_STATE_FLAG_LINK() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * enum GtkStateFlags.GTK_STATE_FLAG_VISITED = 1024;
     * }
     */
    public static int GTK_STATE_FLAG_VISITED() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * enum GtkStateFlags.GTK_STATE_FLAG_CHECKED = 2048;
     * }
     */
    public static int GTK_STATE_FLAG_CHECKED() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * enum GtkStateFlags.GTK_STATE_FLAG_DROP_ACTIVE = 4096;
     * }
     */
    public static int GTK_STATE_FLAG_DROP_ACTIVE() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * enum GtkRegionFlags.GTK_REGION_EVEN = 1;
     * }
     */
    public static int GTK_REGION_EVEN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkRegionFlags.GTK_REGION_ODD = 2;
     * }
     */
    public static int GTK_REGION_ODD() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkRegionFlags.GTK_REGION_FIRST = 4;
     * }
     */
    public static int GTK_REGION_FIRST() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkRegionFlags.GTK_REGION_LAST = 8;
     * }
     */
    public static int GTK_REGION_LAST() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GtkRegionFlags.GTK_REGION_ONLY = 16;
     * }
     */
    public static int GTK_REGION_ONLY() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GtkRegionFlags.GTK_REGION_SORTED = 32;
     * }
     */
    public static int GTK_REGION_SORTED() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GtkJunctionSides.GTK_JUNCTION_NONE = 0;
     * }
     */
    public static int GTK_JUNCTION_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkJunctionSides.GTK_JUNCTION_CORNER_TOPLEFT = 1;
     * }
     */
    public static int GTK_JUNCTION_CORNER_TOPLEFT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkJunctionSides.GTK_JUNCTION_CORNER_TOPRIGHT = 2;
     * }
     */
    public static int GTK_JUNCTION_CORNER_TOPRIGHT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkJunctionSides.GTK_JUNCTION_CORNER_BOTTOMLEFT = 4;
     * }
     */
    public static int GTK_JUNCTION_CORNER_BOTTOMLEFT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkJunctionSides.GTK_JUNCTION_CORNER_BOTTOMRIGHT = 8;
     * }
     */
    public static int GTK_JUNCTION_CORNER_BOTTOMRIGHT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GtkJunctionSides.GTK_JUNCTION_TOP = 3;
     * }
     */
    public static int GTK_JUNCTION_TOP() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkJunctionSides.GTK_JUNCTION_BOTTOM = 12;
     * }
     */
    public static int GTK_JUNCTION_BOTTOM() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum GtkJunctionSides.GTK_JUNCTION_LEFT = 5;
     * }
     */
    public static int GTK_JUNCTION_LEFT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkJunctionSides.GTK_JUNCTION_RIGHT = 10;
     * }
     */
    public static int GTK_JUNCTION_RIGHT() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum GtkBorderStyle.GTK_BORDER_STYLE_NONE = 0;
     * }
     */
    public static int GTK_BORDER_STYLE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkBorderStyle.GTK_BORDER_STYLE_SOLID = 1;
     * }
     */
    public static int GTK_BORDER_STYLE_SOLID() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkBorderStyle.GTK_BORDER_STYLE_INSET = 2;
     * }
     */
    public static int GTK_BORDER_STYLE_INSET() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkBorderStyle.GTK_BORDER_STYLE_OUTSET = 3;
     * }
     */
    public static int GTK_BORDER_STYLE_OUTSET() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkBorderStyle.GTK_BORDER_STYLE_HIDDEN = 4;
     * }
     */
    public static int GTK_BORDER_STYLE_HIDDEN() {
        return (int)4L;
    }
}


