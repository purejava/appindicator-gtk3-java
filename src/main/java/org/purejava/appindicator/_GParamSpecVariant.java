// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import java.lang.foreign.SegmentAllocator;
import java.lang.invoke.VarHandle;
/**
 * {@snippet :
 * struct _GParamSpecVariant {
 *     struct _GParamSpec parent_instance;
 *     struct _GVariantType* type;
 *     struct _GVariant* default_value;
 *     void* padding[4];
 * };
 * }
 */
public class _GParamSpecVariant {

    public static MemoryLayout $LAYOUT() {
        return constants$668.const$3;
    }
    public static MemorySegment parent_instance$slice(MemorySegment seg) {
        return seg.asSlice(0, 72);
    }
    public static VarHandle type$VH() {
        return constants$668.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _GVariantType* type;
     * }
     */
    public static MemorySegment type$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$668.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _GVariantType* type;
     * }
     */
    public static void type$set(MemorySegment seg, MemorySegment x) {
        constants$668.const$4.set(seg, x);
    }
    public static MemorySegment type$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$668.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void type$set(MemorySegment seg, long index, MemorySegment x) {
        constants$668.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle default_value$VH() {
        return constants$668.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _GVariant* default_value;
     * }
     */
    public static MemorySegment default_value$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$668.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _GVariant* default_value;
     * }
     */
    public static void default_value$set(MemorySegment seg, MemorySegment x) {
        constants$668.const$5.set(seg, x);
    }
    public static MemorySegment default_value$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$668.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void default_value$set(MemorySegment seg, long index, MemorySegment x) {
        constants$668.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment padding$slice(MemorySegment seg) {
        return seg.asSlice(88, 32);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


