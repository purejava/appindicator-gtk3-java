// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _PangoGlyphItem {
 *     struct _PangoItem* item;
 *     struct _PangoGlyphString* glyphs;
 *     int y_offset;
 *     int start_x_offset;
 *     int end_x_offset;
 * };
 * }
 */
public class _PangoGlyphItem {

    public static MemoryLayout $LAYOUT() {
        return constants$1614.const$1;
    }
    public static VarHandle item$VH() {
        return constants$1614.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _PangoItem* item;
     * }
     */
    public static MemorySegment item$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1614.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _PangoItem* item;
     * }
     */
    public static void item$set(MemorySegment seg, MemorySegment x) {
        constants$1614.const$2.set(seg, x);
    }
    public static MemorySegment item$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1614.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void item$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1614.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle glyphs$VH() {
        return constants$1614.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _PangoGlyphString* glyphs;
     * }
     */
    public static MemorySegment glyphs$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1614.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _PangoGlyphString* glyphs;
     * }
     */
    public static void glyphs$set(MemorySegment seg, MemorySegment x) {
        constants$1614.const$3.set(seg, x);
    }
    public static MemorySegment glyphs$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1614.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void glyphs$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1614.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle y_offset$VH() {
        return constants$1614.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int y_offset;
     * }
     */
    public static int y_offset$get(MemorySegment seg) {
        return (int)constants$1614.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int y_offset;
     * }
     */
    public static void y_offset$set(MemorySegment seg, int x) {
        constants$1614.const$4.set(seg, x);
    }
    public static int y_offset$get(MemorySegment seg, long index) {
        return (int)constants$1614.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void y_offset$set(MemorySegment seg, long index, int x) {
        constants$1614.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle start_x_offset$VH() {
        return constants$1614.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int start_x_offset;
     * }
     */
    public static int start_x_offset$get(MemorySegment seg) {
        return (int)constants$1614.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int start_x_offset;
     * }
     */
    public static void start_x_offset$set(MemorySegment seg, int x) {
        constants$1614.const$5.set(seg, x);
    }
    public static int start_x_offset$get(MemorySegment seg, long index) {
        return (int)constants$1614.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void start_x_offset$set(MemorySegment seg, long index, int x) {
        constants$1614.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle end_x_offset$VH() {
        return constants$1615.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int end_x_offset;
     * }
     */
    public static int end_x_offset$get(MemorySegment seg) {
        return (int)constants$1615.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int end_x_offset;
     * }
     */
    public static void end_x_offset$set(MemorySegment seg, int x) {
        constants$1615.const$0.set(seg, x);
    }
    public static int end_x_offset$get(MemorySegment seg, long index) {
        return (int)constants$1615.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void end_x_offset$set(MemorySegment seg, long index, int x) {
        constants$1615.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


