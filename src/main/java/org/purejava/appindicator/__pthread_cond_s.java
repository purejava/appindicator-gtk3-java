// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct __pthread_cond_s {
 *     union __atomic_wide_counter __wseq;
 *     union __atomic_wide_counter __g1_start;
 *     unsigned int __g_refs[2];
 *     unsigned int __g_size[2];
 *     unsigned int __g1_orig_size;
 *     unsigned int __wrefs;
 *     unsigned int __g_signals[2];
 * };
 * }
 */
public class __pthread_cond_s {

    public static MemoryLayout $LAYOUT() {
        return constants$76.const$1;
    }
    public static MemorySegment __wseq$slice(MemorySegment seg) {
        return seg.asSlice(0, 8);
    }
    public static MemorySegment __g1_start$slice(MemorySegment seg) {
        return seg.asSlice(8, 8);
    }
    public static MemorySegment __g_refs$slice(MemorySegment seg) {
        return seg.asSlice(16, 8);
    }
    public static MemorySegment __g_size$slice(MemorySegment seg) {
        return seg.asSlice(24, 8);
    }
    public static VarHandle __g1_orig_size$VH() {
        return constants$76.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int __g1_orig_size;
     * }
     */
    public static int __g1_orig_size$get(MemorySegment seg) {
        return (int)constants$76.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int __g1_orig_size;
     * }
     */
    public static void __g1_orig_size$set(MemorySegment seg, int x) {
        constants$76.const$2.set(seg, x);
    }
    public static int __g1_orig_size$get(MemorySegment seg, long index) {
        return (int)constants$76.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void __g1_orig_size$set(MemorySegment seg, long index, int x) {
        constants$76.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __wrefs$VH() {
        return constants$76.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int __wrefs;
     * }
     */
    public static int __wrefs$get(MemorySegment seg) {
        return (int)constants$76.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int __wrefs;
     * }
     */
    public static void __wrefs$set(MemorySegment seg, int x) {
        constants$76.const$3.set(seg, x);
    }
    public static int __wrefs$get(MemorySegment seg, long index) {
        return (int)constants$76.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void __wrefs$set(MemorySegment seg, long index, int x) {
        constants$76.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment __g_signals$slice(MemorySegment seg) {
        return seg.asSlice(40, 8);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


