// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class app_indicator_h_4 extends app_indicator_h_3 {

    public static MethodHandle g_aligned_free$MH() {
        return RuntimeHelper.requireNonNull(constants$207.const$3,"g_aligned_free");
    }
    /**
     * {@snippet :
     * void g_aligned_free(void* mem);
     * }
     */
    public static void g_aligned_free(MemorySegment mem) {
        var mh$ = g_aligned_free$MH();
        try {
            mh$.invokeExact(mem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_aligned_free_sized$MH() {
        return RuntimeHelper.requireNonNull(constants$207.const$5,"g_aligned_free_sized");
    }
    /**
     * {@snippet :
     * void g_aligned_free_sized(void* mem, unsigned long alignment, unsigned long size);
     * }
     */
    public static void g_aligned_free_sized(MemorySegment mem, long alignment, long size) {
        var mh$ = g_aligned_free_sized$MH();
        try {
            mh$.invokeExact(mem, alignment, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mem_set_vtable$MH() {
        return RuntimeHelper.requireNonNull(constants$210.const$4,"g_mem_set_vtable");
    }
    /**
     * {@snippet :
     * void g_mem_set_vtable(struct _GMemVTable* vtable);
     * }
     */
    public static void g_mem_set_vtable(MemorySegment vtable) {
        var mh$ = g_mem_set_vtable$MH();
        try {
            mh$.invokeExact(vtable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mem_is_system_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$210.const$5,"g_mem_is_system_malloc");
    }
    /**
     * {@snippet :
     * int g_mem_is_system_malloc();
     * }
     */
    public static int g_mem_is_system_malloc() {
        var mh$ = g_mem_is_system_malloc$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout g_mem_gc_friendly$LAYOUT() {
        return JAVA_INT;
    }
    public static VarHandle g_mem_gc_friendly$VH() {
        return constants$7.const$0;
    }
    public static MemorySegment g_mem_gc_friendly$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$211.const$0,"g_mem_gc_friendly");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * int g_mem_gc_friendly;
     * }
     */
    public static int g_mem_gc_friendly$get() {
        return (int) constants$7.const$0.get(RuntimeHelper.requireNonNull(constants$211.const$0, "g_mem_gc_friendly"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * int g_mem_gc_friendly;
     * }
     */
    public static void g_mem_gc_friendly$set(int x) {
        constants$7.const$0.set(RuntimeHelper.requireNonNull(constants$211.const$0, "g_mem_gc_friendly"), x);
    }
    public static MemoryLayout glib_mem_profiler_table$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle glib_mem_profiler_table$VH() {
        return constants$211.const$1;
    }
    public static MemorySegment glib_mem_profiler_table$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$211.const$2,"glib_mem_profiler_table");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * struct _GMemVTable* glib_mem_profiler_table;
     * }
     */
    public static MemorySegment glib_mem_profiler_table$get() {
        return (java.lang.foreign.MemorySegment) constants$211.const$1.get(RuntimeHelper.requireNonNull(constants$211.const$2, "glib_mem_profiler_table"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * struct _GMemVTable* glib_mem_profiler_table;
     * }
     */
    public static void glib_mem_profiler_table$set(MemorySegment x) {
        constants$211.const$1.set(RuntimeHelper.requireNonNull(constants$211.const$2, "glib_mem_profiler_table"), x);
    }
    public static MethodHandle g_mem_profile$MH() {
        return RuntimeHelper.requireNonNull(constants$211.const$3,"g_mem_profile");
    }
    /**
     * {@snippet :
     * void g_mem_profile();
     * }
     */
    public static void g_mem_profile() {
        var mh$ = g_mem_profile$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GTraverseFlags.G_TRAVERSE_LEAVES = 1;
     * }
     */
    public static int G_TRAVERSE_LEAVES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GTraverseFlags.G_TRAVERSE_NON_LEAVES = 2;
     * }
     */
    public static int G_TRAVERSE_NON_LEAVES() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GTraverseFlags.G_TRAVERSE_ALL = 3;
     * }
     */
    public static int G_TRAVERSE_ALL() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GTraverseFlags.G_TRAVERSE_MASK = 3;
     * }
     */
    public static int G_TRAVERSE_MASK() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GTraverseFlags.G_TRAVERSE_LEAFS = 1;
     * }
     */
    public static int G_TRAVERSE_LEAFS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GTraverseFlags.G_TRAVERSE_NON_LEAFS = 2;
     * }
     */
    public static int G_TRAVERSE_NON_LEAFS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GTraverseType.G_IN_ORDER = 0;
     * }
     */
    public static int G_IN_ORDER() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GTraverseType.G_PRE_ORDER = 1;
     * }
     */
    public static int G_PRE_ORDER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GTraverseType.G_POST_ORDER = 2;
     * }
     */
    public static int G_POST_ORDER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GTraverseType.G_LEVEL_ORDER = 3;
     * }
     */
    public static int G_LEVEL_ORDER() {
        return (int)3L;
    }
    public static MethodHandle g_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$213.const$0,"g_node_new");
    }
    /**
     * {@snippet :
     * struct _GNode* g_node_new(void* data);
     * }
     */
    public static MemorySegment g_node_new(MemorySegment data) {
        var mh$ = g_node_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$213.const$1,"g_node_destroy");
    }
    /**
     * {@snippet :
     * void g_node_destroy(struct _GNode* root);
     * }
     */
    public static void g_node_destroy(MemorySegment root) {
        var mh$ = g_node_destroy$MH();
        try {
            mh$.invokeExact(root);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_unlink$MH() {
        return RuntimeHelper.requireNonNull(constants$213.const$2,"g_node_unlink");
    }
    /**
     * {@snippet :
     * void g_node_unlink(struct _GNode* node);
     * }
     */
    public static void g_node_unlink(MemorySegment node) {
        var mh$ = g_node_unlink$MH();
        try {
            mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_copy_deep$MH() {
        return RuntimeHelper.requireNonNull(constants$213.const$4,"g_node_copy_deep");
    }
    /**
     * {@snippet :
     * struct _GNode* g_node_copy_deep(struct _GNode* node, void* (*copy_func)(void*,void*), void* data);
     * }
     */
    public static MemorySegment g_node_copy_deep(MemorySegment node, MemorySegment copy_func, MemorySegment data) {
        var mh$ = g_node_copy_deep$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node, copy_func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$213.const$5,"g_node_copy");
    }
    /**
     * {@snippet :
     * struct _GNode* g_node_copy(struct _GNode* node);
     * }
     */
    public static MemorySegment g_node_copy(MemorySegment node) {
        var mh$ = g_node_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$214.const$0,"g_node_insert");
    }
    /**
     * {@snippet :
     * struct _GNode* g_node_insert(struct _GNode* parent, int position, struct _GNode* node);
     * }
     */
    public static MemorySegment g_node_insert(MemorySegment parent, int position, MemorySegment node) {
        var mh$ = g_node_insert$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parent, position, node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_insert_before$MH() {
        return RuntimeHelper.requireNonNull(constants$214.const$1,"g_node_insert_before");
    }
    /**
     * {@snippet :
     * struct _GNode* g_node_insert_before(struct _GNode* parent, struct _GNode* sibling, struct _GNode* node);
     * }
     */
    public static MemorySegment g_node_insert_before(MemorySegment parent, MemorySegment sibling, MemorySegment node) {
        var mh$ = g_node_insert_before$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parent, sibling, node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_insert_after$MH() {
        return RuntimeHelper.requireNonNull(constants$214.const$2,"g_node_insert_after");
    }
    /**
     * {@snippet :
     * struct _GNode* g_node_insert_after(struct _GNode* parent, struct _GNode* sibling, struct _GNode* node);
     * }
     */
    public static MemorySegment g_node_insert_after(MemorySegment parent, MemorySegment sibling, MemorySegment node) {
        var mh$ = g_node_insert_after$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parent, sibling, node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$214.const$3,"g_node_prepend");
    }
    /**
     * {@snippet :
     * struct _GNode* g_node_prepend(struct _GNode* parent, struct _GNode* node);
     * }
     */
    public static MemorySegment g_node_prepend(MemorySegment parent, MemorySegment node) {
        var mh$ = g_node_prepend$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parent, node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_n_nodes$MH() {
        return RuntimeHelper.requireNonNull(constants$214.const$4,"g_node_n_nodes");
    }
    /**
     * {@snippet :
     * unsigned int g_node_n_nodes(struct _GNode* root, enum GTraverseFlags flags);
     * }
     */
    public static int g_node_n_nodes(MemorySegment root, int flags) {
        var mh$ = g_node_n_nodes$MH();
        try {
            return (int)mh$.invokeExact(root, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_get_root$MH() {
        return RuntimeHelper.requireNonNull(constants$214.const$5,"g_node_get_root");
    }
    /**
     * {@snippet :
     * struct _GNode* g_node_get_root(struct _GNode* node);
     * }
     */
    public static MemorySegment g_node_get_root(MemorySegment node) {
        var mh$ = g_node_get_root$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_is_ancestor$MH() {
        return RuntimeHelper.requireNonNull(constants$215.const$0,"g_node_is_ancestor");
    }
    /**
     * {@snippet :
     * int g_node_is_ancestor(struct _GNode* node, struct _GNode* descendant);
     * }
     */
    public static int g_node_is_ancestor(MemorySegment node, MemorySegment descendant) {
        var mh$ = g_node_is_ancestor$MH();
        try {
            return (int)mh$.invokeExact(node, descendant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$215.const$1,"g_node_depth");
    }
    /**
     * {@snippet :
     * unsigned int g_node_depth(struct _GNode* node);
     * }
     */
    public static int g_node_depth(MemorySegment node) {
        var mh$ = g_node_depth$MH();
        try {
            return (int)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_find$MH() {
        return RuntimeHelper.requireNonNull(constants$215.const$3,"g_node_find");
    }
    /**
     * {@snippet :
     * struct _GNode* g_node_find(struct _GNode* root, enum GTraverseType order, enum GTraverseFlags flags, void* data);
     * }
     */
    public static MemorySegment g_node_find(MemorySegment root, int order, int flags, MemorySegment data) {
        var mh$ = g_node_find$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(root, order, flags, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_traverse$MH() {
        return RuntimeHelper.requireNonNull(constants$215.const$6,"g_node_traverse");
    }
    /**
     * {@snippet :
     * void g_node_traverse(struct _GNode* root, enum GTraverseType order, enum GTraverseFlags flags, int max_depth, int (*func)(struct _GNode*,void*), void* data);
     * }
     */
    public static void g_node_traverse(MemorySegment root, int order, int flags, int max_depth, MemorySegment func, MemorySegment data) {
        var mh$ = g_node_traverse$MH();
        try {
            mh$.invokeExact(root, order, flags, max_depth, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_max_height$MH() {
        return RuntimeHelper.requireNonNull(constants$216.const$0,"g_node_max_height");
    }
    /**
     * {@snippet :
     * unsigned int g_node_max_height(struct _GNode* root);
     * }
     */
    public static int g_node_max_height(MemorySegment root) {
        var mh$ = g_node_max_height$MH();
        try {
            return (int)mh$.invokeExact(root);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_children_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$216.const$2,"g_node_children_foreach");
    }
    /**
     * {@snippet :
     * void g_node_children_foreach(struct _GNode* node, enum GTraverseFlags flags, void (*func)(struct _GNode*,void*), void* data);
     * }
     */
    public static void g_node_children_foreach(MemorySegment node, int flags, MemorySegment func, MemorySegment data) {
        var mh$ = g_node_children_foreach$MH();
        try {
            mh$.invokeExact(node, flags, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_reverse_children$MH() {
        return RuntimeHelper.requireNonNull(constants$216.const$3,"g_node_reverse_children");
    }
    /**
     * {@snippet :
     * void g_node_reverse_children(struct _GNode* node);
     * }
     */
    public static void g_node_reverse_children(MemorySegment node) {
        var mh$ = g_node_reverse_children$MH();
        try {
            mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_n_children$MH() {
        return RuntimeHelper.requireNonNull(constants$216.const$4,"g_node_n_children");
    }
    /**
     * {@snippet :
     * unsigned int g_node_n_children(struct _GNode* node);
     * }
     */
    public static int g_node_n_children(MemorySegment node) {
        var mh$ = g_node_n_children$MH();
        try {
            return (int)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_nth_child$MH() {
        return RuntimeHelper.requireNonNull(constants$216.const$5,"g_node_nth_child");
    }
    /**
     * {@snippet :
     * struct _GNode* g_node_nth_child(struct _GNode* node, unsigned int n);
     * }
     */
    public static MemorySegment g_node_nth_child(MemorySegment node, int n) {
        var mh$ = g_node_nth_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_last_child$MH() {
        return RuntimeHelper.requireNonNull(constants$217.const$0,"g_node_last_child");
    }
    /**
     * {@snippet :
     * struct _GNode* g_node_last_child(struct _GNode* node);
     * }
     */
    public static MemorySegment g_node_last_child(MemorySegment node) {
        var mh$ = g_node_last_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_find_child$MH() {
        return RuntimeHelper.requireNonNull(constants$217.const$1,"g_node_find_child");
    }
    /**
     * {@snippet :
     * struct _GNode* g_node_find_child(struct _GNode* node, enum GTraverseFlags flags, void* data);
     * }
     */
    public static MemorySegment g_node_find_child(MemorySegment node, int flags, MemorySegment data) {
        var mh$ = g_node_find_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node, flags, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_child_position$MH() {
        return RuntimeHelper.requireNonNull(constants$217.const$2,"g_node_child_position");
    }
    /**
     * {@snippet :
     * int g_node_child_position(struct _GNode* node, struct _GNode* child);
     * }
     */
    public static int g_node_child_position(MemorySegment node, MemorySegment child) {
        var mh$ = g_node_child_position$MH();
        try {
            return (int)mh$.invokeExact(node, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_child_index$MH() {
        return RuntimeHelper.requireNonNull(constants$217.const$3,"g_node_child_index");
    }
    /**
     * {@snippet :
     * int g_node_child_index(struct _GNode* node, void* data);
     * }
     */
    public static int g_node_child_index(MemorySegment node, MemorySegment data) {
        var mh$ = g_node_child_index$MH();
        try {
            return (int)mh$.invokeExact(node, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_first_sibling$MH() {
        return RuntimeHelper.requireNonNull(constants$217.const$4,"g_node_first_sibling");
    }
    /**
     * {@snippet :
     * struct _GNode* g_node_first_sibling(struct _GNode* node);
     * }
     */
    public static MemorySegment g_node_first_sibling(MemorySegment node) {
        var mh$ = g_node_first_sibling$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_last_sibling$MH() {
        return RuntimeHelper.requireNonNull(constants$217.const$5,"g_node_last_sibling");
    }
    /**
     * {@snippet :
     * struct _GNode* g_node_last_sibling(struct _GNode* node);
     * }
     */
    public static MemorySegment g_node_last_sibling(MemorySegment node) {
        var mh$ = g_node_last_sibling$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$218.const$4,"g_list_alloc");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_alloc();
     * }
     */
    public static MemorySegment g_list_alloc() {
        var mh$ = g_list_alloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_free$MH() {
        return RuntimeHelper.requireNonNull(constants$218.const$5,"g_list_free");
    }
    /**
     * {@snippet :
     * void g_list_free(struct _GList* list);
     * }
     */
    public static void g_list_free(MemorySegment list) {
        var mh$ = g_list_free$MH();
        try {
            mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_free_1$MH() {
        return RuntimeHelper.requireNonNull(constants$219.const$0,"g_list_free_1");
    }
    /**
     * {@snippet :
     * void g_list_free_1(struct _GList* list);
     * }
     */
    public static void g_list_free_1(MemorySegment list) {
        var mh$ = g_list_free_1$MH();
        try {
            mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_free_full$MH() {
        return RuntimeHelper.requireNonNull(constants$219.const$2,"g_list_free_full");
    }
    /**
     * {@snippet :
     * void g_list_free_full(struct _GList* list, void (*free_func)(void*));
     * }
     */
    public static void g_list_free_full(MemorySegment list, MemorySegment free_func) {
        var mh$ = g_list_free_full$MH();
        try {
            mh$.invokeExact(list, free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_append$MH() {
        return RuntimeHelper.requireNonNull(constants$219.const$3,"g_list_append");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_append(struct _GList* list, void* data);
     * }
     */
    public static MemorySegment g_list_append(MemorySegment list, MemorySegment data) {
        var mh$ = g_list_append$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$219.const$4,"g_list_prepend");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_prepend(struct _GList* list, void* data);
     * }
     */
    public static MemorySegment g_list_prepend(MemorySegment list, MemorySegment data) {
        var mh$ = g_list_prepend$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$219.const$5,"g_list_insert");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_insert(struct _GList* list, void* data, int position);
     * }
     */
    public static MemorySegment g_list_insert(MemorySegment list, MemorySegment data, int position) {
        var mh$ = g_list_insert$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, data, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_insert_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$220.const$1,"g_list_insert_sorted");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_insert_sorted(struct _GList* list, void* data, int (*func)(void*,void*));
     * }
     */
    public static MemorySegment g_list_insert_sorted(MemorySegment list, MemorySegment data, MemorySegment func) {
        var mh$ = g_list_insert_sorted$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, data, func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_insert_sorted_with_data$MH() {
        return RuntimeHelper.requireNonNull(constants$220.const$3,"g_list_insert_sorted_with_data");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_insert_sorted_with_data(struct _GList* list, void* data, int (*func)(void*,void*,void*), void* user_data);
     * }
     */
    public static MemorySegment g_list_insert_sorted_with_data(MemorySegment list, MemorySegment data, MemorySegment func, MemorySegment user_data) {
        var mh$ = g_list_insert_sorted_with_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, data, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_insert_before$MH() {
        return RuntimeHelper.requireNonNull(constants$220.const$4,"g_list_insert_before");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_insert_before(struct _GList* list, struct _GList* sibling, void* data);
     * }
     */
    public static MemorySegment g_list_insert_before(MemorySegment list, MemorySegment sibling, MemorySegment data) {
        var mh$ = g_list_insert_before$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, sibling, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_insert_before_link$MH() {
        return RuntimeHelper.requireNonNull(constants$220.const$5,"g_list_insert_before_link");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_insert_before_link(struct _GList* list, struct _GList* sibling, struct _GList* link_);
     * }
     */
    public static MemorySegment g_list_insert_before_link(MemorySegment list, MemorySegment sibling, MemorySegment link_) {
        var mh$ = g_list_insert_before_link$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, sibling, link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_concat$MH() {
        return RuntimeHelper.requireNonNull(constants$221.const$0,"g_list_concat");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_concat(struct _GList* list1, struct _GList* list2);
     * }
     */
    public static MemorySegment g_list_concat(MemorySegment list1, MemorySegment list2) {
        var mh$ = g_list_concat$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list1, list2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$221.const$1,"g_list_remove");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_remove(struct _GList* list, void* data);
     * }
     */
    public static MemorySegment g_list_remove(MemorySegment list, MemorySegment data) {
        var mh$ = g_list_remove$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_remove_all$MH() {
        return RuntimeHelper.requireNonNull(constants$221.const$2,"g_list_remove_all");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_remove_all(struct _GList* list, void* data);
     * }
     */
    public static MemorySegment g_list_remove_all(MemorySegment list, MemorySegment data) {
        var mh$ = g_list_remove_all$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_remove_link$MH() {
        return RuntimeHelper.requireNonNull(constants$221.const$3,"g_list_remove_link");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_remove_link(struct _GList* list, struct _GList* llink);
     * }
     */
    public static MemorySegment g_list_remove_link(MemorySegment list, MemorySegment llink) {
        var mh$ = g_list_remove_link$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, llink);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_delete_link$MH() {
        return RuntimeHelper.requireNonNull(constants$221.const$4,"g_list_delete_link");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_delete_link(struct _GList* list, struct _GList* link_);
     * }
     */
    public static MemorySegment g_list_delete_link(MemorySegment list, MemorySegment link_) {
        var mh$ = g_list_delete_link$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_reverse$MH() {
        return RuntimeHelper.requireNonNull(constants$221.const$5,"g_list_reverse");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_reverse(struct _GList* list);
     * }
     */
    public static MemorySegment g_list_reverse(MemorySegment list) {
        var mh$ = g_list_reverse$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$222.const$0,"g_list_copy");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_copy(struct _GList* list);
     * }
     */
    public static MemorySegment g_list_copy(MemorySegment list) {
        var mh$ = g_list_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_copy_deep$MH() {
        return RuntimeHelper.requireNonNull(constants$222.const$2,"g_list_copy_deep");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_copy_deep(struct _GList* list, void* (*func)(void*,void*), void* user_data);
     * }
     */
    public static MemorySegment g_list_copy_deep(MemorySegment list, MemorySegment func, MemorySegment user_data) {
        var mh$ = g_list_copy_deep$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_nth$MH() {
        return RuntimeHelper.requireNonNull(constants$222.const$3,"g_list_nth");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_nth(struct _GList* list, unsigned int n);
     * }
     */
    public static MemorySegment g_list_nth(MemorySegment list, int n) {
        var mh$ = g_list_nth$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_nth_prev$MH() {
        return RuntimeHelper.requireNonNull(constants$222.const$4,"g_list_nth_prev");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_nth_prev(struct _GList* list, unsigned int n);
     * }
     */
    public static MemorySegment g_list_nth_prev(MemorySegment list, int n) {
        var mh$ = g_list_nth_prev$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_find$MH() {
        return RuntimeHelper.requireNonNull(constants$222.const$5,"g_list_find");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_find(struct _GList* list, void* data);
     * }
     */
    public static MemorySegment g_list_find(MemorySegment list, MemorySegment data) {
        var mh$ = g_list_find$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_find_custom$MH() {
        return RuntimeHelper.requireNonNull(constants$223.const$1,"g_list_find_custom");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_find_custom(struct _GList* list, void* data, int (*func)(void*,void*));
     * }
     */
    public static MemorySegment g_list_find_custom(MemorySegment list, MemorySegment data, MemorySegment func) {
        var mh$ = g_list_find_custom$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, data, func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_position$MH() {
        return RuntimeHelper.requireNonNull(constants$223.const$2,"g_list_position");
    }
    /**
     * {@snippet :
     * int g_list_position(struct _GList* list, struct _GList* llink);
     * }
     */
    public static int g_list_position(MemorySegment list, MemorySegment llink) {
        var mh$ = g_list_position$MH();
        try {
            return (int)mh$.invokeExact(list, llink);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_index$MH() {
        return RuntimeHelper.requireNonNull(constants$223.const$3,"g_list_index");
    }
    /**
     * {@snippet :
     * int g_list_index(struct _GList* list, void* data);
     * }
     */
    public static int g_list_index(MemorySegment list, MemorySegment data) {
        var mh$ = g_list_index$MH();
        try {
            return (int)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_last$MH() {
        return RuntimeHelper.requireNonNull(constants$223.const$4,"g_list_last");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_last(struct _GList* list);
     * }
     */
    public static MemorySegment g_list_last(MemorySegment list) {
        var mh$ = g_list_last$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_first$MH() {
        return RuntimeHelper.requireNonNull(constants$223.const$5,"g_list_first");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_first(struct _GList* list);
     * }
     */
    public static MemorySegment g_list_first(MemorySegment list) {
        var mh$ = g_list_first$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_length$MH() {
        return RuntimeHelper.requireNonNull(constants$224.const$0,"g_list_length");
    }
    /**
     * {@snippet :
     * unsigned int g_list_length(struct _GList* list);
     * }
     */
    public static int g_list_length(MemorySegment list) {
        var mh$ = g_list_length$MH();
        try {
            return (int)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$224.const$2,"g_list_foreach");
    }
    /**
     * {@snippet :
     * void g_list_foreach(struct _GList* list, void (*func)(void*,void*), void* user_data);
     * }
     */
    public static void g_list_foreach(MemorySegment list, MemorySegment func, MemorySegment user_data) {
        var mh$ = g_list_foreach$MH();
        try {
            mh$.invokeExact(list, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$224.const$4,"g_list_sort");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_sort(struct _GList* list, int (*compare_func)(void*,void*));
     * }
     */
    public static MemorySegment g_list_sort(MemorySegment list, MemorySegment compare_func) {
        var mh$ = g_list_sort$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, compare_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_sort_with_data$MH() {
        return RuntimeHelper.requireNonNull(constants$225.const$0,"g_list_sort_with_data");
    }
    /**
     * {@snippet :
     * struct _GList* g_list_sort_with_data(struct _GList* list, int (*compare_func)(void*,void*,void*), void* user_data);
     * }
     */
    public static MemorySegment g_list_sort_with_data(MemorySegment list, MemorySegment compare_func, MemorySegment user_data) {
        var mh$ = g_list_sort_with_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, compare_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_nth_data$MH() {
        return RuntimeHelper.requireNonNull(constants$225.const$1,"g_list_nth_data");
    }
    /**
     * {@snippet :
     * void* g_list_nth_data(struct _GList* list, unsigned int n);
     * }
     */
    public static MemorySegment g_list_nth_data(MemorySegment list, int n) {
        var mh$ = g_list_nth_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_list$MH() {
        return RuntimeHelper.requireNonNull(constants$225.const$3,"g_clear_list");
    }
    /**
     * {@snippet :
     * void g_clear_list(struct _GList** list_ptr, void (*destroy)(void*));
     * }
     */
    public static void g_clear_list(MemorySegment list_ptr, MemorySegment destroy) {
        var mh$ = g_clear_list$MH();
        try {
            mh$.invokeExact(list_ptr, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_new$MH() {
        return RuntimeHelper.requireNonNull(constants$227.const$2,"g_hash_table_new");
    }
    /**
     * {@snippet :
     * struct _GHashTable* g_hash_table_new(unsigned int (*hash_func)(void*), int (*key_equal_func)(void*,void*));
     * }
     */
    public static MemorySegment g_hash_table_new(MemorySegment hash_func, MemorySegment key_equal_func) {
        var mh$ = g_hash_table_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hash_func, key_equal_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_new_full$MH() {
        return RuntimeHelper.requireNonNull(constants$228.const$1,"g_hash_table_new_full");
    }
    /**
     * {@snippet :
     * struct _GHashTable* g_hash_table_new_full(unsigned int (*hash_func)(void*), int (*key_equal_func)(void*,void*), void (*key_destroy_func)(void*), void (*value_destroy_func)(void*));
     * }
     */
    public static MemorySegment g_hash_table_new_full(MemorySegment hash_func, MemorySegment key_equal_func, MemorySegment key_destroy_func, MemorySegment value_destroy_func) {
        var mh$ = g_hash_table_new_full$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hash_func, key_equal_func, key_destroy_func, value_destroy_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_new_similar$MH() {
        return RuntimeHelper.requireNonNull(constants$228.const$2,"g_hash_table_new_similar");
    }
    /**
     * {@snippet :
     * struct _GHashTable* g_hash_table_new_similar(struct _GHashTable* other_hash_table);
     * }
     */
    public static MemorySegment g_hash_table_new_similar(MemorySegment other_hash_table) {
        var mh$ = g_hash_table_new_similar$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(other_hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$228.const$3,"g_hash_table_destroy");
    }
    /**
     * {@snippet :
     * void g_hash_table_destroy(struct _GHashTable* hash_table);
     * }
     */
    public static void g_hash_table_destroy(MemorySegment hash_table) {
        var mh$ = g_hash_table_destroy$MH();
        try {
            mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$228.const$4,"g_hash_table_insert");
    }
    /**
     * {@snippet :
     * int g_hash_table_insert(struct _GHashTable* hash_table, void* key, void* value);
     * }
     */
    public static int g_hash_table_insert(MemorySegment hash_table, MemorySegment key, MemorySegment value) {
        var mh$ = g_hash_table_insert$MH();
        try {
            return (int)mh$.invokeExact(hash_table, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_replace$MH() {
        return RuntimeHelper.requireNonNull(constants$228.const$5,"g_hash_table_replace");
    }
    /**
     * {@snippet :
     * int g_hash_table_replace(struct _GHashTable* hash_table, void* key, void* value);
     * }
     */
    public static int g_hash_table_replace(MemorySegment hash_table, MemorySegment key, MemorySegment value) {
        var mh$ = g_hash_table_replace$MH();
        try {
            return (int)mh$.invokeExact(hash_table, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_add$MH() {
        return RuntimeHelper.requireNonNull(constants$229.const$0,"g_hash_table_add");
    }
    /**
     * {@snippet :
     * int g_hash_table_add(struct _GHashTable* hash_table, void* key);
     * }
     */
    public static int g_hash_table_add(MemorySegment hash_table, MemorySegment key) {
        var mh$ = g_hash_table_add$MH();
        try {
            return (int)mh$.invokeExact(hash_table, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$229.const$1,"g_hash_table_remove");
    }
    /**
     * {@snippet :
     * int g_hash_table_remove(struct _GHashTable* hash_table, void* key);
     * }
     */
    public static int g_hash_table_remove(MemorySegment hash_table, MemorySegment key) {
        var mh$ = g_hash_table_remove$MH();
        try {
            return (int)mh$.invokeExact(hash_table, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_remove_all$MH() {
        return RuntimeHelper.requireNonNull(constants$229.const$2,"g_hash_table_remove_all");
    }
    /**
     * {@snippet :
     * void g_hash_table_remove_all(struct _GHashTable* hash_table);
     * }
     */
    public static void g_hash_table_remove_all(MemorySegment hash_table) {
        var mh$ = g_hash_table_remove_all$MH();
        try {
            mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_steal$MH() {
        return RuntimeHelper.requireNonNull(constants$229.const$3,"g_hash_table_steal");
    }
    /**
     * {@snippet :
     * int g_hash_table_steal(struct _GHashTable* hash_table, void* key);
     * }
     */
    public static int g_hash_table_steal(MemorySegment hash_table, MemorySegment key) {
        var mh$ = g_hash_table_steal$MH();
        try {
            return (int)mh$.invokeExact(hash_table, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_steal_extended$MH() {
        return RuntimeHelper.requireNonNull(constants$229.const$4,"g_hash_table_steal_extended");
    }
    /**
     * {@snippet :
     * int g_hash_table_steal_extended(struct _GHashTable* hash_table, void* lookup_key, void** stolen_key, void** stolen_value);
     * }
     */
    public static int g_hash_table_steal_extended(MemorySegment hash_table, MemorySegment lookup_key, MemorySegment stolen_key, MemorySegment stolen_value) {
        var mh$ = g_hash_table_steal_extended$MH();
        try {
            return (int)mh$.invokeExact(hash_table, lookup_key, stolen_key, stolen_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_steal_all$MH() {
        return RuntimeHelper.requireNonNull(constants$229.const$5,"g_hash_table_steal_all");
    }
    /**
     * {@snippet :
     * void g_hash_table_steal_all(struct _GHashTable* hash_table);
     * }
     */
    public static void g_hash_table_steal_all(MemorySegment hash_table) {
        var mh$ = g_hash_table_steal_all$MH();
        try {
            mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_steal_all_keys$MH() {
        return RuntimeHelper.requireNonNull(constants$230.const$0,"g_hash_table_steal_all_keys");
    }
    /**
     * {@snippet :
     * struct _GPtrArray* g_hash_table_steal_all_keys(struct _GHashTable* hash_table);
     * }
     */
    public static MemorySegment g_hash_table_steal_all_keys(MemorySegment hash_table) {
        var mh$ = g_hash_table_steal_all_keys$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_steal_all_values$MH() {
        return RuntimeHelper.requireNonNull(constants$230.const$1,"g_hash_table_steal_all_values");
    }
    /**
     * {@snippet :
     * struct _GPtrArray* g_hash_table_steal_all_values(struct _GHashTable* hash_table);
     * }
     */
    public static MemorySegment g_hash_table_steal_all_values(MemorySegment hash_table) {
        var mh$ = g_hash_table_steal_all_values$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$230.const$2,"g_hash_table_lookup");
    }
    /**
     * {@snippet :
     * void* g_hash_table_lookup(struct _GHashTable* hash_table, void* key);
     * }
     */
    public static MemorySegment g_hash_table_lookup(MemorySegment hash_table, MemorySegment key) {
        var mh$ = g_hash_table_lookup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hash_table, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_contains$MH() {
        return RuntimeHelper.requireNonNull(constants$230.const$3,"g_hash_table_contains");
    }
    /**
     * {@snippet :
     * int g_hash_table_contains(struct _GHashTable* hash_table, void* key);
     * }
     */
    public static int g_hash_table_contains(MemorySegment hash_table, MemorySegment key) {
        var mh$ = g_hash_table_contains$MH();
        try {
            return (int)mh$.invokeExact(hash_table, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_lookup_extended$MH() {
        return RuntimeHelper.requireNonNull(constants$230.const$4,"g_hash_table_lookup_extended");
    }
    /**
     * {@snippet :
     * int g_hash_table_lookup_extended(struct _GHashTable* hash_table, void* lookup_key, void** orig_key, void** value);
     * }
     */
    public static int g_hash_table_lookup_extended(MemorySegment hash_table, MemorySegment lookup_key, MemorySegment orig_key, MemorySegment value) {
        var mh$ = g_hash_table_lookup_extended$MH();
        try {
            return (int)mh$.invokeExact(hash_table, lookup_key, orig_key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$231.const$0,"g_hash_table_foreach");
    }
    /**
     * {@snippet :
     * void g_hash_table_foreach(struct _GHashTable* hash_table, void (*func)(void*,void*,void*), void* user_data);
     * }
     */
    public static void g_hash_table_foreach(MemorySegment hash_table, MemorySegment func, MemorySegment user_data) {
        var mh$ = g_hash_table_foreach$MH();
        try {
            mh$.invokeExact(hash_table, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_find$MH() {
        return RuntimeHelper.requireNonNull(constants$231.const$2,"g_hash_table_find");
    }
    /**
     * {@snippet :
     * void* g_hash_table_find(struct _GHashTable* hash_table, int (*predicate)(void*,void*,void*), void* user_data);
     * }
     */
    public static MemorySegment g_hash_table_find(MemorySegment hash_table, MemorySegment predicate, MemorySegment user_data) {
        var mh$ = g_hash_table_find$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hash_table, predicate, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_foreach_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$231.const$4,"g_hash_table_foreach_remove");
    }
    /**
     * {@snippet :
     * unsigned int g_hash_table_foreach_remove(struct _GHashTable* hash_table, int (*func)(void*,void*,void*), void* user_data);
     * }
     */
    public static int g_hash_table_foreach_remove(MemorySegment hash_table, MemorySegment func, MemorySegment user_data) {
        var mh$ = g_hash_table_foreach_remove$MH();
        try {
            return (int)mh$.invokeExact(hash_table, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_foreach_steal$MH() {
        return RuntimeHelper.requireNonNull(constants$232.const$0,"g_hash_table_foreach_steal");
    }
    /**
     * {@snippet :
     * unsigned int g_hash_table_foreach_steal(struct _GHashTable* hash_table, int (*func)(void*,void*,void*), void* user_data);
     * }
     */
    public static int g_hash_table_foreach_steal(MemorySegment hash_table, MemorySegment func, MemorySegment user_data) {
        var mh$ = g_hash_table_foreach_steal$MH();
        try {
            return (int)mh$.invokeExact(hash_table, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_size$MH() {
        return RuntimeHelper.requireNonNull(constants$232.const$1,"g_hash_table_size");
    }
    /**
     * {@snippet :
     * unsigned int g_hash_table_size(struct _GHashTable* hash_table);
     * }
     */
    public static int g_hash_table_size(MemorySegment hash_table) {
        var mh$ = g_hash_table_size$MH();
        try {
            return (int)mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_get_keys$MH() {
        return RuntimeHelper.requireNonNull(constants$232.const$2,"g_hash_table_get_keys");
    }
    /**
     * {@snippet :
     * struct _GList* g_hash_table_get_keys(struct _GHashTable* hash_table);
     * }
     */
    public static MemorySegment g_hash_table_get_keys(MemorySegment hash_table) {
        var mh$ = g_hash_table_get_keys$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_get_values$MH() {
        return RuntimeHelper.requireNonNull(constants$232.const$3,"g_hash_table_get_values");
    }
    /**
     * {@snippet :
     * struct _GList* g_hash_table_get_values(struct _GHashTable* hash_table);
     * }
     */
    public static MemorySegment g_hash_table_get_values(MemorySegment hash_table) {
        var mh$ = g_hash_table_get_values$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_get_keys_as_array$MH() {
        return RuntimeHelper.requireNonNull(constants$232.const$4,"g_hash_table_get_keys_as_array");
    }
    /**
     * {@snippet :
     * void** g_hash_table_get_keys_as_array(struct _GHashTable* hash_table, unsigned int* length);
     * }
     */
    public static MemorySegment g_hash_table_get_keys_as_array(MemorySegment hash_table, MemorySegment length) {
        var mh$ = g_hash_table_get_keys_as_array$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hash_table, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_get_keys_as_ptr_array$MH() {
        return RuntimeHelper.requireNonNull(constants$232.const$5,"g_hash_table_get_keys_as_ptr_array");
    }
    /**
     * {@snippet :
     * struct _GPtrArray* g_hash_table_get_keys_as_ptr_array(struct _GHashTable* hash_table);
     * }
     */
    public static MemorySegment g_hash_table_get_keys_as_ptr_array(MemorySegment hash_table) {
        var mh$ = g_hash_table_get_keys_as_ptr_array$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_get_values_as_ptr_array$MH() {
        return RuntimeHelper.requireNonNull(constants$233.const$0,"g_hash_table_get_values_as_ptr_array");
    }
    /**
     * {@snippet :
     * struct _GPtrArray* g_hash_table_get_values_as_ptr_array(struct _GHashTable* hash_table);
     * }
     */
    public static MemorySegment g_hash_table_get_values_as_ptr_array(MemorySegment hash_table) {
        var mh$ = g_hash_table_get_values_as_ptr_array$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_iter_init$MH() {
        return RuntimeHelper.requireNonNull(constants$233.const$1,"g_hash_table_iter_init");
    }
    /**
     * {@snippet :
     * void g_hash_table_iter_init(struct _GHashTableIter* iter, struct _GHashTable* hash_table);
     * }
     */
    public static void g_hash_table_iter_init(MemorySegment iter, MemorySegment hash_table) {
        var mh$ = g_hash_table_iter_init$MH();
        try {
            mh$.invokeExact(iter, hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_iter_next$MH() {
        return RuntimeHelper.requireNonNull(constants$233.const$2,"g_hash_table_iter_next");
    }
    /**
     * {@snippet :
     * int g_hash_table_iter_next(struct _GHashTableIter* iter, void** key, void** value);
     * }
     */
    public static int g_hash_table_iter_next(MemorySegment iter, MemorySegment key, MemorySegment value) {
        var mh$ = g_hash_table_iter_next$MH();
        try {
            return (int)mh$.invokeExact(iter, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_iter_get_hash_table$MH() {
        return RuntimeHelper.requireNonNull(constants$233.const$3,"g_hash_table_iter_get_hash_table");
    }
    /**
     * {@snippet :
     * struct _GHashTable* g_hash_table_iter_get_hash_table(struct _GHashTableIter* iter);
     * }
     */
    public static MemorySegment g_hash_table_iter_get_hash_table(MemorySegment iter) {
        var mh$ = g_hash_table_iter_get_hash_table$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_iter_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$233.const$4,"g_hash_table_iter_remove");
    }
    /**
     * {@snippet :
     * void g_hash_table_iter_remove(struct _GHashTableIter* iter);
     * }
     */
    public static void g_hash_table_iter_remove(MemorySegment iter) {
        var mh$ = g_hash_table_iter_remove$MH();
        try {
            mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_iter_replace$MH() {
        return RuntimeHelper.requireNonNull(constants$233.const$5,"g_hash_table_iter_replace");
    }
    /**
     * {@snippet :
     * void g_hash_table_iter_replace(struct _GHashTableIter* iter, void* value);
     * }
     */
    public static void g_hash_table_iter_replace(MemorySegment iter, MemorySegment value) {
        var mh$ = g_hash_table_iter_replace$MH();
        try {
            mh$.invokeExact(iter, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_iter_steal$MH() {
        return RuntimeHelper.requireNonNull(constants$234.const$0,"g_hash_table_iter_steal");
    }
    /**
     * {@snippet :
     * void g_hash_table_iter_steal(struct _GHashTableIter* iter);
     * }
     */
    public static void g_hash_table_iter_steal(MemorySegment iter) {
        var mh$ = g_hash_table_iter_steal$MH();
        try {
            mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$234.const$1,"g_hash_table_ref");
    }
    /**
     * {@snippet :
     * struct _GHashTable* g_hash_table_ref(struct _GHashTable* hash_table);
     * }
     */
    public static MemorySegment g_hash_table_ref(MemorySegment hash_table) {
        var mh$ = g_hash_table_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$234.const$2,"g_hash_table_unref");
    }
    /**
     * {@snippet :
     * void g_hash_table_unref(struct _GHashTable* hash_table);
     * }
     */
    public static void g_hash_table_unref(MemorySegment hash_table) {
        var mh$ = g_hash_table_unref$MH();
        try {
            mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_str_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$234.const$3,"g_str_equal");
    }
    /**
     * {@snippet :
     * int g_str_equal(void* v1, void* v2);
     * }
     */
    public static int g_str_equal(MemorySegment v1, MemorySegment v2) {
        var mh$ = g_str_equal$MH();
        try {
            return (int)mh$.invokeExact(v1, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_str_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$234.const$4,"g_str_hash");
    }
    /**
     * {@snippet :
     * unsigned int g_str_hash(void* v);
     * }
     */
    public static int g_str_hash(MemorySegment v) {
        var mh$ = g_str_hash$MH();
        try {
            return (int)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_int_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$234.const$5,"g_int_equal");
    }
    /**
     * {@snippet :
     * int g_int_equal(void* v1, void* v2);
     * }
     */
    public static int g_int_equal(MemorySegment v1, MemorySegment v2) {
        var mh$ = g_int_equal$MH();
        try {
            return (int)mh$.invokeExact(v1, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_int_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$235.const$0,"g_int_hash");
    }
    /**
     * {@snippet :
     * unsigned int g_int_hash(void* v);
     * }
     */
    public static int g_int_hash(MemorySegment v) {
        var mh$ = g_int_hash$MH();
        try {
            return (int)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_int64_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$235.const$1,"g_int64_equal");
    }
    /**
     * {@snippet :
     * int g_int64_equal(void* v1, void* v2);
     * }
     */
    public static int g_int64_equal(MemorySegment v1, MemorySegment v2) {
        var mh$ = g_int64_equal$MH();
        try {
            return (int)mh$.invokeExact(v1, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_int64_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$235.const$2,"g_int64_hash");
    }
    /**
     * {@snippet :
     * unsigned int g_int64_hash(void* v);
     * }
     */
    public static int g_int64_hash(MemorySegment v) {
        var mh$ = g_int64_hash$MH();
        try {
            return (int)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_double_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$235.const$3,"g_double_equal");
    }
    /**
     * {@snippet :
     * int g_double_equal(void* v1, void* v2);
     * }
     */
    public static int g_double_equal(MemorySegment v1, MemorySegment v2) {
        var mh$ = g_double_equal$MH();
        try {
            return (int)mh$.invokeExact(v1, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_double_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$235.const$4,"g_double_hash");
    }
    /**
     * {@snippet :
     * unsigned int g_double_hash(void* v);
     * }
     */
    public static int g_double_hash(MemorySegment v) {
        var mh$ = g_double_hash$MH();
        try {
            return (int)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_direct_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$235.const$5,"g_direct_hash");
    }
    /**
     * {@snippet :
     * unsigned int g_direct_hash(void* v);
     * }
     */
    public static int g_direct_hash(MemorySegment v) {
        var mh$ = g_direct_hash$MH();
        try {
            return (int)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_direct_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$236.const$0,"g_direct_equal");
    }
    /**
     * {@snippet :
     * int g_direct_equal(void* v1, void* v2);
     * }
     */
    public static int g_direct_equal(MemorySegment v1, MemorySegment v2) {
        var mh$ = g_direct_equal$MH();
        try {
            return (int)mh$.invokeExact(v1, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hmac_new$MH() {
        return RuntimeHelper.requireNonNull(constants$236.const$1,"g_hmac_new");
    }
    /**
     * {@snippet :
     * struct _GHmac* g_hmac_new(enum GChecksumType digest_type, unsigned char* key, unsigned long key_len);
     * }
     */
    public static MemorySegment g_hmac_new(int digest_type, MemorySegment key, long key_len) {
        var mh$ = g_hmac_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(digest_type, key, key_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hmac_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$236.const$2,"g_hmac_copy");
    }
    /**
     * {@snippet :
     * struct _GHmac* g_hmac_copy(struct _GHmac* hmac);
     * }
     */
    public static MemorySegment g_hmac_copy(MemorySegment hmac) {
        var mh$ = g_hmac_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hmac);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hmac_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$236.const$3,"g_hmac_ref");
    }
    /**
     * {@snippet :
     * struct _GHmac* g_hmac_ref(struct _GHmac* hmac);
     * }
     */
    public static MemorySegment g_hmac_ref(MemorySegment hmac) {
        var mh$ = g_hmac_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hmac);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hmac_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$236.const$4,"g_hmac_unref");
    }
    /**
     * {@snippet :
     * void g_hmac_unref(struct _GHmac* hmac);
     * }
     */
    public static void g_hmac_unref(MemorySegment hmac) {
        var mh$ = g_hmac_unref$MH();
        try {
            mh$.invokeExact(hmac);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hmac_update$MH() {
        return RuntimeHelper.requireNonNull(constants$236.const$5,"g_hmac_update");
    }
    /**
     * {@snippet :
     * void g_hmac_update(struct _GHmac* hmac, unsigned char* data, long length);
     * }
     */
    public static void g_hmac_update(MemorySegment hmac, MemorySegment data, long length) {
        var mh$ = g_hmac_update$MH();
        try {
            mh$.invokeExact(hmac, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hmac_get_string$MH() {
        return RuntimeHelper.requireNonNull(constants$237.const$0,"g_hmac_get_string");
    }
    /**
     * {@snippet :
     * char* g_hmac_get_string(struct _GHmac* hmac);
     * }
     */
    public static MemorySegment g_hmac_get_string(MemorySegment hmac) {
        var mh$ = g_hmac_get_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hmac);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hmac_get_digest$MH() {
        return RuntimeHelper.requireNonNull(constants$237.const$1,"g_hmac_get_digest");
    }
    /**
     * {@snippet :
     * void g_hmac_get_digest(struct _GHmac* hmac, unsigned char* buffer, unsigned long* digest_len);
     * }
     */
    public static void g_hmac_get_digest(MemorySegment hmac, MemorySegment buffer, MemorySegment digest_len) {
        var mh$ = g_hmac_get_digest$MH();
        try {
            mh$.invokeExact(hmac, buffer, digest_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_compute_hmac_for_data$MH() {
        return RuntimeHelper.requireNonNull(constants$237.const$3,"g_compute_hmac_for_data");
    }
    /**
     * {@snippet :
     * char* g_compute_hmac_for_data(enum GChecksumType digest_type, unsigned char* key, unsigned long key_len, unsigned char* data, unsigned long length);
     * }
     */
    public static MemorySegment g_compute_hmac_for_data(int digest_type, MemorySegment key, long key_len, MemorySegment data, long length) {
        var mh$ = g_compute_hmac_for_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(digest_type, key, key_len, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_compute_hmac_for_string$MH() {
        return RuntimeHelper.requireNonNull(constants$237.const$4,"g_compute_hmac_for_string");
    }
    /**
     * {@snippet :
     * char* g_compute_hmac_for_string(enum GChecksumType digest_type, unsigned char* key, unsigned long key_len, char* str, long length);
     * }
     */
    public static MemorySegment g_compute_hmac_for_string(int digest_type, MemorySegment key, long key_len, MemorySegment str, long length) {
        var mh$ = g_compute_hmac_for_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(digest_type, key, key_len, str, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_compute_hmac_for_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$237.const$6,"g_compute_hmac_for_bytes");
    }
    /**
     * {@snippet :
     * char* g_compute_hmac_for_bytes(enum GChecksumType digest_type, struct _GBytes* key, struct _GBytes* data);
     * }
     */
    public static MemorySegment g_compute_hmac_for_bytes(int digest_type, MemorySegment key, MemorySegment data) {
        var mh$ = g_compute_hmac_for_bytes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(digest_type, key, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GHookFlagMask.G_HOOK_FLAG_ACTIVE = 1;
     * }
     */
    public static int G_HOOK_FLAG_ACTIVE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GHookFlagMask.G_HOOK_FLAG_IN_CALL = 2;
     * }
     */
    public static int G_HOOK_FLAG_IN_CALL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GHookFlagMask.G_HOOK_FLAG_MASK = 15;
     * }
     */
    public static int G_HOOK_FLAG_MASK() {
        return (int)15L;
    }
    public static MethodHandle g_hook_list_init$MH() {
        return RuntimeHelper.requireNonNull(constants$241.const$5,"g_hook_list_init");
    }
    /**
     * {@snippet :
     * void g_hook_list_init(struct _GHookList* hook_list, unsigned int hook_size);
     * }
     */
    public static void g_hook_list_init(MemorySegment hook_list, int hook_size) {
        var mh$ = g_hook_list_init$MH();
        try {
            mh$.invokeExact(hook_list, hook_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_list_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$242.const$0,"g_hook_list_clear");
    }
    /**
     * {@snippet :
     * void g_hook_list_clear(struct _GHookList* hook_list);
     * }
     */
    public static void g_hook_list_clear(MemorySegment hook_list) {
        var mh$ = g_hook_list_clear$MH();
        try {
            mh$.invokeExact(hook_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$242.const$1,"g_hook_alloc");
    }
    /**
     * {@snippet :
     * struct _GHook* g_hook_alloc(struct _GHookList* hook_list);
     * }
     */
    public static MemorySegment g_hook_alloc(MemorySegment hook_list) {
        var mh$ = g_hook_alloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hook_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_free$MH() {
        return RuntimeHelper.requireNonNull(constants$242.const$2,"g_hook_free");
    }
    /**
     * {@snippet :
     * void g_hook_free(struct _GHookList* hook_list, struct _GHook* hook);
     * }
     */
    public static void g_hook_free(MemorySegment hook_list, MemorySegment hook) {
        var mh$ = g_hook_free$MH();
        try {
            mh$.invokeExact(hook_list, hook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$242.const$3,"g_hook_ref");
    }
    /**
     * {@snippet :
     * struct _GHook* g_hook_ref(struct _GHookList* hook_list, struct _GHook* hook);
     * }
     */
    public static MemorySegment g_hook_ref(MemorySegment hook_list, MemorySegment hook) {
        var mh$ = g_hook_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hook_list, hook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$242.const$4,"g_hook_unref");
    }
    /**
     * {@snippet :
     * void g_hook_unref(struct _GHookList* hook_list, struct _GHook* hook);
     * }
     */
    public static void g_hook_unref(MemorySegment hook_list, MemorySegment hook) {
        var mh$ = g_hook_unref$MH();
        try {
            mh$.invokeExact(hook_list, hook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$242.const$5,"g_hook_destroy");
    }
    /**
     * {@snippet :
     * int g_hook_destroy(struct _GHookList* hook_list, unsigned long hook_id);
     * }
     */
    public static int g_hook_destroy(MemorySegment hook_list, long hook_id) {
        var mh$ = g_hook_destroy$MH();
        try {
            return (int)mh$.invokeExact(hook_list, hook_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_destroy_link$MH() {
        return RuntimeHelper.requireNonNull(constants$243.const$0,"g_hook_destroy_link");
    }
    /**
     * {@snippet :
     * void g_hook_destroy_link(struct _GHookList* hook_list, struct _GHook* hook);
     * }
     */
    public static void g_hook_destroy_link(MemorySegment hook_list, MemorySegment hook) {
        var mh$ = g_hook_destroy_link$MH();
        try {
            mh$.invokeExact(hook_list, hook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$243.const$1,"g_hook_prepend");
    }
    /**
     * {@snippet :
     * void g_hook_prepend(struct _GHookList* hook_list, struct _GHook* hook);
     * }
     */
    public static void g_hook_prepend(MemorySegment hook_list, MemorySegment hook) {
        var mh$ = g_hook_prepend$MH();
        try {
            mh$.invokeExact(hook_list, hook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_insert_before$MH() {
        return RuntimeHelper.requireNonNull(constants$243.const$2,"g_hook_insert_before");
    }
    /**
     * {@snippet :
     * void g_hook_insert_before(struct _GHookList* hook_list, struct _GHook* sibling, struct _GHook* hook);
     * }
     */
    public static void g_hook_insert_before(MemorySegment hook_list, MemorySegment sibling, MemorySegment hook) {
        var mh$ = g_hook_insert_before$MH();
        try {
            mh$.invokeExact(hook_list, sibling, hook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_insert_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$243.const$4,"g_hook_insert_sorted");
    }
    /**
     * {@snippet :
     * void g_hook_insert_sorted(struct _GHookList* hook_list, struct _GHook* hook, int (*func)(struct _GHook*,struct _GHook*));
     * }
     */
    public static void g_hook_insert_sorted(MemorySegment hook_list, MemorySegment hook, MemorySegment func) {
        var mh$ = g_hook_insert_sorted$MH();
        try {
            mh$.invokeExact(hook_list, hook, func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_get$MH() {
        return RuntimeHelper.requireNonNull(constants$243.const$5,"g_hook_get");
    }
    /**
     * {@snippet :
     * struct _GHook* g_hook_get(struct _GHookList* hook_list, unsigned long hook_id);
     * }
     */
    public static MemorySegment g_hook_get(MemorySegment hook_list, long hook_id) {
        var mh$ = g_hook_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hook_list, hook_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_find$MH() {
        return RuntimeHelper.requireNonNull(constants$244.const$1,"g_hook_find");
    }
    /**
     * {@snippet :
     * struct _GHook* g_hook_find(struct _GHookList* hook_list, int need_valids, int (*func)(struct _GHook*,void*), void* data);
     * }
     */
    public static MemorySegment g_hook_find(MemorySegment hook_list, int need_valids, MemorySegment func, MemorySegment data) {
        var mh$ = g_hook_find$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hook_list, need_valids, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_find_data$MH() {
        return RuntimeHelper.requireNonNull(constants$244.const$2,"g_hook_find_data");
    }
    /**
     * {@snippet :
     * struct _GHook* g_hook_find_data(struct _GHookList* hook_list, int need_valids, void* data);
     * }
     */
    public static MemorySegment g_hook_find_data(MemorySegment hook_list, int need_valids, MemorySegment data) {
        var mh$ = g_hook_find_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hook_list, need_valids, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_find_func$MH() {
        return RuntimeHelper.requireNonNull(constants$244.const$3,"g_hook_find_func");
    }
    /**
     * {@snippet :
     * struct _GHook* g_hook_find_func(struct _GHookList* hook_list, int need_valids, void* func);
     * }
     */
    public static MemorySegment g_hook_find_func(MemorySegment hook_list, int need_valids, MemorySegment func) {
        var mh$ = g_hook_find_func$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hook_list, need_valids, func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_find_func_data$MH() {
        return RuntimeHelper.requireNonNull(constants$244.const$4,"g_hook_find_func_data");
    }
    /**
     * {@snippet :
     * struct _GHook* g_hook_find_func_data(struct _GHookList* hook_list, int need_valids, void* func, void* data);
     * }
     */
    public static MemorySegment g_hook_find_func_data(MemorySegment hook_list, int need_valids, MemorySegment func, MemorySegment data) {
        var mh$ = g_hook_find_func_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hook_list, need_valids, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_first_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$244.const$5,"g_hook_first_valid");
    }
    /**
     * {@snippet :
     * struct _GHook* g_hook_first_valid(struct _GHookList* hook_list, int may_be_in_call);
     * }
     */
    public static MemorySegment g_hook_first_valid(MemorySegment hook_list, int may_be_in_call) {
        var mh$ = g_hook_first_valid$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hook_list, may_be_in_call);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_next_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$245.const$0,"g_hook_next_valid");
    }
    /**
     * {@snippet :
     * struct _GHook* g_hook_next_valid(struct _GHookList* hook_list, struct _GHook* hook, int may_be_in_call);
     * }
     */
    public static MemorySegment g_hook_next_valid(MemorySegment hook_list, MemorySegment hook, int may_be_in_call) {
        var mh$ = g_hook_next_valid$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hook_list, hook, may_be_in_call);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_compare_ids$MH() {
        return RuntimeHelper.requireNonNull(constants$245.const$1,"g_hook_compare_ids");
    }
    /**
     * {@snippet :
     * int g_hook_compare_ids(struct _GHook* new_hook, struct _GHook* sibling);
     * }
     */
    public static int g_hook_compare_ids(MemorySegment new_hook, MemorySegment sibling) {
        var mh$ = g_hook_compare_ids$MH();
        try {
            return (int)mh$.invokeExact(new_hook, sibling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_list_invoke$MH() {
        return RuntimeHelper.requireNonNull(constants$245.const$2,"g_hook_list_invoke");
    }
    /**
     * {@snippet :
     * void g_hook_list_invoke(struct _GHookList* hook_list, int may_recurse);
     * }
     */
    public static void g_hook_list_invoke(MemorySegment hook_list, int may_recurse) {
        var mh$ = g_hook_list_invoke$MH();
        try {
            mh$.invokeExact(hook_list, may_recurse);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_list_invoke_check$MH() {
        return RuntimeHelper.requireNonNull(constants$245.const$3,"g_hook_list_invoke_check");
    }
    /**
     * {@snippet :
     * void g_hook_list_invoke_check(struct _GHookList* hook_list, int may_recurse);
     * }
     */
    public static void g_hook_list_invoke_check(MemorySegment hook_list, int may_recurse) {
        var mh$ = g_hook_list_invoke_check$MH();
        try {
            mh$.invokeExact(hook_list, may_recurse);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_list_marshal$MH() {
        return RuntimeHelper.requireNonNull(constants$245.const$5,"g_hook_list_marshal");
    }
    /**
     * {@snippet :
     * void g_hook_list_marshal(struct _GHookList* hook_list, int may_recurse, void (*marshaller)(struct _GHook*,void*), void* marshal_data);
     * }
     */
    public static void g_hook_list_marshal(MemorySegment hook_list, int may_recurse, MemorySegment marshaller, MemorySegment marshal_data) {
        var mh$ = g_hook_list_marshal$MH();
        try {
            mh$.invokeExact(hook_list, may_recurse, marshaller, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_list_marshal_check$MH() {
        return RuntimeHelper.requireNonNull(constants$246.const$1,"g_hook_list_marshal_check");
    }
    /**
     * {@snippet :
     * void g_hook_list_marshal_check(struct _GHookList* hook_list, int may_recurse, int (*marshaller)(struct _GHook*,void*), void* marshal_data);
     * }
     */
    public static void g_hook_list_marshal_check(MemorySegment hook_list, int may_recurse, MemorySegment marshaller, MemorySegment marshal_data) {
        var mh$ = g_hook_list_marshal_check$MH();
        try {
            mh$.invokeExact(hook_list, may_recurse, marshaller, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hostname_is_non_ascii$MH() {
        return RuntimeHelper.requireNonNull(constants$246.const$2,"g_hostname_is_non_ascii");
    }
    /**
     * {@snippet :
     * int g_hostname_is_non_ascii(char* hostname);
     * }
     */
    public static int g_hostname_is_non_ascii(MemorySegment hostname) {
        var mh$ = g_hostname_is_non_ascii$MH();
        try {
            return (int)mh$.invokeExact(hostname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hostname_is_ascii_encoded$MH() {
        return RuntimeHelper.requireNonNull(constants$246.const$3,"g_hostname_is_ascii_encoded");
    }
    /**
     * {@snippet :
     * int g_hostname_is_ascii_encoded(char* hostname);
     * }
     */
    public static int g_hostname_is_ascii_encoded(MemorySegment hostname) {
        var mh$ = g_hostname_is_ascii_encoded$MH();
        try {
            return (int)mh$.invokeExact(hostname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hostname_is_ip_address$MH() {
        return RuntimeHelper.requireNonNull(constants$246.const$4,"g_hostname_is_ip_address");
    }
    /**
     * {@snippet :
     * int g_hostname_is_ip_address(char* hostname);
     * }
     */
    public static int g_hostname_is_ip_address(MemorySegment hostname) {
        var mh$ = g_hostname_is_ip_address$MH();
        try {
            return (int)mh$.invokeExact(hostname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hostname_to_ascii$MH() {
        return RuntimeHelper.requireNonNull(constants$246.const$5,"g_hostname_to_ascii");
    }
    /**
     * {@snippet :
     * char* g_hostname_to_ascii(char* hostname);
     * }
     */
    public static MemorySegment g_hostname_to_ascii(MemorySegment hostname) {
        var mh$ = g_hostname_to_ascii$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hostname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hostname_to_unicode$MH() {
        return RuntimeHelper.requireNonNull(constants$247.const$0,"g_hostname_to_unicode");
    }
    /**
     * {@snippet :
     * char* g_hostname_to_unicode(char* hostname);
     * }
     */
    public static MemorySegment g_hostname_to_unicode(MemorySegment hostname) {
        var mh$ = g_hostname_to_unicode$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hostname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_poll$MH() {
        return RuntimeHelper.requireNonNull(constants$248.const$1,"g_poll");
    }
    /**
     * {@snippet :
     * int g_poll(struct _GPollFD* fds, unsigned int nfds, int timeout);
     * }
     */
    public static int g_poll(MemorySegment fds, int nfds, int timeout) {
        var mh$ = g_poll$MH();
        try {
            return (int)mh$.invokeExact(fds, nfds, timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$248.const$5,"g_slist_alloc");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_alloc();
     * }
     */
    public static MemorySegment g_slist_alloc() {
        var mh$ = g_slist_alloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_free$MH() {
        return RuntimeHelper.requireNonNull(constants$249.const$0,"g_slist_free");
    }
    /**
     * {@snippet :
     * void g_slist_free(struct _GSList* list);
     * }
     */
    public static void g_slist_free(MemorySegment list) {
        var mh$ = g_slist_free$MH();
        try {
            mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_free_1$MH() {
        return RuntimeHelper.requireNonNull(constants$249.const$1,"g_slist_free_1");
    }
    /**
     * {@snippet :
     * void g_slist_free_1(struct _GSList* list);
     * }
     */
    public static void g_slist_free_1(MemorySegment list) {
        var mh$ = g_slist_free_1$MH();
        try {
            mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_free_full$MH() {
        return RuntimeHelper.requireNonNull(constants$249.const$3,"g_slist_free_full");
    }
    /**
     * {@snippet :
     * void g_slist_free_full(struct _GSList* list, void (*free_func)(void*));
     * }
     */
    public static void g_slist_free_full(MemorySegment list, MemorySegment free_func) {
        var mh$ = g_slist_free_full$MH();
        try {
            mh$.invokeExact(list, free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_append$MH() {
        return RuntimeHelper.requireNonNull(constants$249.const$4,"g_slist_append");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_append(struct _GSList* list, void* data);
     * }
     */
    public static MemorySegment g_slist_append(MemorySegment list, MemorySegment data) {
        var mh$ = g_slist_append$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$249.const$5,"g_slist_prepend");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_prepend(struct _GSList* list, void* data);
     * }
     */
    public static MemorySegment g_slist_prepend(MemorySegment list, MemorySegment data) {
        var mh$ = g_slist_prepend$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$250.const$0,"g_slist_insert");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_insert(struct _GSList* list, void* data, int position);
     * }
     */
    public static MemorySegment g_slist_insert(MemorySegment list, MemorySegment data, int position) {
        var mh$ = g_slist_insert$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, data, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_insert_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$250.const$2,"g_slist_insert_sorted");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_insert_sorted(struct _GSList* list, void* data, int (*func)(void*,void*));
     * }
     */
    public static MemorySegment g_slist_insert_sorted(MemorySegment list, MemorySegment data, MemorySegment func) {
        var mh$ = g_slist_insert_sorted$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, data, func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_insert_sorted_with_data$MH() {
        return RuntimeHelper.requireNonNull(constants$250.const$4,"g_slist_insert_sorted_with_data");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_insert_sorted_with_data(struct _GSList* list, void* data, int (*func)(void*,void*,void*), void* user_data);
     * }
     */
    public static MemorySegment g_slist_insert_sorted_with_data(MemorySegment list, MemorySegment data, MemorySegment func, MemorySegment user_data) {
        var mh$ = g_slist_insert_sorted_with_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, data, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_insert_before$MH() {
        return RuntimeHelper.requireNonNull(constants$250.const$5,"g_slist_insert_before");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_insert_before(struct _GSList* slist, struct _GSList* sibling, void* data);
     * }
     */
    public static MemorySegment g_slist_insert_before(MemorySegment slist, MemorySegment sibling, MemorySegment data) {
        var mh$ = g_slist_insert_before$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(slist, sibling, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_concat$MH() {
        return RuntimeHelper.requireNonNull(constants$251.const$0,"g_slist_concat");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_concat(struct _GSList* list1, struct _GSList* list2);
     * }
     */
    public static MemorySegment g_slist_concat(MemorySegment list1, MemorySegment list2) {
        var mh$ = g_slist_concat$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list1, list2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$251.const$1,"g_slist_remove");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_remove(struct _GSList* list, void* data);
     * }
     */
    public static MemorySegment g_slist_remove(MemorySegment list, MemorySegment data) {
        var mh$ = g_slist_remove$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_remove_all$MH() {
        return RuntimeHelper.requireNonNull(constants$251.const$2,"g_slist_remove_all");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_remove_all(struct _GSList* list, void* data);
     * }
     */
    public static MemorySegment g_slist_remove_all(MemorySegment list, MemorySegment data) {
        var mh$ = g_slist_remove_all$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_remove_link$MH() {
        return RuntimeHelper.requireNonNull(constants$251.const$3,"g_slist_remove_link");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_remove_link(struct _GSList* list, struct _GSList* link_);
     * }
     */
    public static MemorySegment g_slist_remove_link(MemorySegment list, MemorySegment link_) {
        var mh$ = g_slist_remove_link$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_delete_link$MH() {
        return RuntimeHelper.requireNonNull(constants$251.const$4,"g_slist_delete_link");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_delete_link(struct _GSList* list, struct _GSList* link_);
     * }
     */
    public static MemorySegment g_slist_delete_link(MemorySegment list, MemorySegment link_) {
        var mh$ = g_slist_delete_link$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_reverse$MH() {
        return RuntimeHelper.requireNonNull(constants$251.const$5,"g_slist_reverse");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_reverse(struct _GSList* list);
     * }
     */
    public static MemorySegment g_slist_reverse(MemorySegment list) {
        var mh$ = g_slist_reverse$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$252.const$0,"g_slist_copy");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_copy(struct _GSList* list);
     * }
     */
    public static MemorySegment g_slist_copy(MemorySegment list) {
        var mh$ = g_slist_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_copy_deep$MH() {
        return RuntimeHelper.requireNonNull(constants$252.const$2,"g_slist_copy_deep");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_copy_deep(struct _GSList* list, void* (*func)(void*,void*), void* user_data);
     * }
     */
    public static MemorySegment g_slist_copy_deep(MemorySegment list, MemorySegment func, MemorySegment user_data) {
        var mh$ = g_slist_copy_deep$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_nth$MH() {
        return RuntimeHelper.requireNonNull(constants$252.const$3,"g_slist_nth");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_nth(struct _GSList* list, unsigned int n);
     * }
     */
    public static MemorySegment g_slist_nth(MemorySegment list, int n) {
        var mh$ = g_slist_nth$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_find$MH() {
        return RuntimeHelper.requireNonNull(constants$252.const$4,"g_slist_find");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_find(struct _GSList* list, void* data);
     * }
     */
    public static MemorySegment g_slist_find(MemorySegment list, MemorySegment data) {
        var mh$ = g_slist_find$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_find_custom$MH() {
        return RuntimeHelper.requireNonNull(constants$253.const$0,"g_slist_find_custom");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_find_custom(struct _GSList* list, void* data, int (*func)(void*,void*));
     * }
     */
    public static MemorySegment g_slist_find_custom(MemorySegment list, MemorySegment data, MemorySegment func) {
        var mh$ = g_slist_find_custom$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, data, func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_position$MH() {
        return RuntimeHelper.requireNonNull(constants$253.const$1,"g_slist_position");
    }
    /**
     * {@snippet :
     * int g_slist_position(struct _GSList* list, struct _GSList* llink);
     * }
     */
    public static int g_slist_position(MemorySegment list, MemorySegment llink) {
        var mh$ = g_slist_position$MH();
        try {
            return (int)mh$.invokeExact(list, llink);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_index$MH() {
        return RuntimeHelper.requireNonNull(constants$253.const$2,"g_slist_index");
    }
    /**
     * {@snippet :
     * int g_slist_index(struct _GSList* list, void* data);
     * }
     */
    public static int g_slist_index(MemorySegment list, MemorySegment data) {
        var mh$ = g_slist_index$MH();
        try {
            return (int)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_last$MH() {
        return RuntimeHelper.requireNonNull(constants$253.const$3,"g_slist_last");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_last(struct _GSList* list);
     * }
     */
    public static MemorySegment g_slist_last(MemorySegment list) {
        var mh$ = g_slist_last$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_length$MH() {
        return RuntimeHelper.requireNonNull(constants$253.const$4,"g_slist_length");
    }
    /**
     * {@snippet :
     * unsigned int g_slist_length(struct _GSList* list);
     * }
     */
    public static int g_slist_length(MemorySegment list) {
        var mh$ = g_slist_length$MH();
        try {
            return (int)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$254.const$0,"g_slist_foreach");
    }
    /**
     * {@snippet :
     * void g_slist_foreach(struct _GSList* list, void (*func)(void*,void*), void* user_data);
     * }
     */
    public static void g_slist_foreach(MemorySegment list, MemorySegment func, MemorySegment user_data) {
        var mh$ = g_slist_foreach$MH();
        try {
            mh$.invokeExact(list, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$254.const$2,"g_slist_sort");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_sort(struct _GSList* list, int (*compare_func)(void*,void*));
     * }
     */
    public static MemorySegment g_slist_sort(MemorySegment list, MemorySegment compare_func) {
        var mh$ = g_slist_sort$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, compare_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_sort_with_data$MH() {
        return RuntimeHelper.requireNonNull(constants$254.const$4,"g_slist_sort_with_data");
    }
    /**
     * {@snippet :
     * struct _GSList* g_slist_sort_with_data(struct _GSList* list, int (*compare_func)(void*,void*,void*), void* user_data);
     * }
     */
    public static MemorySegment g_slist_sort_with_data(MemorySegment list, MemorySegment compare_func, MemorySegment user_data) {
        var mh$ = g_slist_sort_with_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, compare_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_nth_data$MH() {
        return RuntimeHelper.requireNonNull(constants$254.const$5,"g_slist_nth_data");
    }
    /**
     * {@snippet :
     * void* g_slist_nth_data(struct _GSList* list, unsigned int n);
     * }
     */
    public static MemorySegment g_slist_nth_data(MemorySegment list, int n) {
        var mh$ = g_slist_nth_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_slist$MH() {
        return RuntimeHelper.requireNonNull(constants$255.const$1,"g_clear_slist");
    }
    /**
     * {@snippet :
     * void g_clear_slist(struct _GSList** slist_ptr, void (*destroy)(void*));
     * }
     */
    public static void g_clear_slist(MemorySegment slist_ptr, MemorySegment destroy) {
        var mh$ = g_clear_slist$MH();
        try {
            mh$.invokeExact(slist_ptr, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GIOCondition.G_IO_IN = 1;
     * }
     */
    public static int G_IO_IN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GIOCondition.G_IO_OUT = 4;
     * }
     */
    public static int G_IO_OUT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GIOCondition.G_IO_PRI = 2;
     * }
     */
    public static int G_IO_PRI() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GIOCondition.G_IO_ERR = 8;
     * }
     */
    public static int G_IO_ERR() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GIOCondition.G_IO_HUP = 16;
     * }
     */
    public static int G_IO_HUP() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GIOCondition.G_IO_NVAL = 32;
     * }
     */
    public static int G_IO_NVAL() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GMainContextFlags.G_MAIN_CONTEXT_FLAGS_NONE = 0;
     * }
     */
    public static int G_MAIN_CONTEXT_FLAGS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GMainContextFlags.G_MAIN_CONTEXT_FLAGS_OWNERLESS_POLLING = 1;
     * }
     */
    public static int G_MAIN_CONTEXT_FLAGS_OWNERLESS_POLLING() {
        return (int)1L;
    }
    public static MethodHandle g_main_context_new$MH() {
        return RuntimeHelper.requireNonNull(constants$262.const$2,"g_main_context_new");
    }
    /**
     * {@snippet :
     * struct _GMainContext* g_main_context_new();
     * }
     */
    public static MemorySegment g_main_context_new() {
        var mh$ = g_main_context_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_new_with_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$262.const$3,"g_main_context_new_with_flags");
    }
    /**
     * {@snippet :
     * struct _GMainContext* g_main_context_new_with_flags(enum GMainContextFlags flags);
     * }
     */
    public static MemorySegment g_main_context_new_with_flags(int flags) {
        var mh$ = g_main_context_new_with_flags$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$262.const$4,"g_main_context_ref");
    }
    /**
     * {@snippet :
     * struct _GMainContext* g_main_context_ref(struct _GMainContext* context);
     * }
     */
    public static MemorySegment g_main_context_ref(MemorySegment context) {
        var mh$ = g_main_context_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$262.const$5,"g_main_context_unref");
    }
    /**
     * {@snippet :
     * void g_main_context_unref(struct _GMainContext* context);
     * }
     */
    public static void g_main_context_unref(MemorySegment context) {
        var mh$ = g_main_context_unref$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_default$MH() {
        return RuntimeHelper.requireNonNull(constants$263.const$0,"g_main_context_default");
    }
    /**
     * {@snippet :
     * struct _GMainContext* g_main_context_default();
     * }
     */
    public static MemorySegment g_main_context_default() {
        var mh$ = g_main_context_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_iteration$MH() {
        return RuntimeHelper.requireNonNull(constants$263.const$1,"g_main_context_iteration");
    }
    /**
     * {@snippet :
     * int g_main_context_iteration(struct _GMainContext* context, int may_block);
     * }
     */
    public static int g_main_context_iteration(MemorySegment context, int may_block) {
        var mh$ = g_main_context_iteration$MH();
        try {
            return (int)mh$.invokeExact(context, may_block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$263.const$2,"g_main_context_pending");
    }
    /**
     * {@snippet :
     * int g_main_context_pending(struct _GMainContext* context);
     * }
     */
    public static int g_main_context_pending(MemorySegment context) {
        var mh$ = g_main_context_pending$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_find_source_by_id$MH() {
        return RuntimeHelper.requireNonNull(constants$263.const$3,"g_main_context_find_source_by_id");
    }
    /**
     * {@snippet :
     * struct _GSource* g_main_context_find_source_by_id(struct _GMainContext* context, unsigned int source_id);
     * }
     */
    public static MemorySegment g_main_context_find_source_by_id(MemorySegment context, int source_id) {
        var mh$ = g_main_context_find_source_by_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, source_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_find_source_by_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$263.const$4,"g_main_context_find_source_by_user_data");
    }
    /**
     * {@snippet :
     * struct _GSource* g_main_context_find_source_by_user_data(struct _GMainContext* context, void* user_data);
     * }
     */
    public static MemorySegment g_main_context_find_source_by_user_data(MemorySegment context, MemorySegment user_data) {
        var mh$ = g_main_context_find_source_by_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_find_source_by_funcs_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$263.const$5,"g_main_context_find_source_by_funcs_user_data");
    }
    /**
     * {@snippet :
     * struct _GSource* g_main_context_find_source_by_funcs_user_data(struct _GMainContext* context, struct _GSourceFuncs* funcs, void* user_data);
     * }
     */
    public static MemorySegment g_main_context_find_source_by_funcs_user_data(MemorySegment context, MemorySegment funcs, MemorySegment user_data) {
        var mh$ = g_main_context_find_source_by_funcs_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, funcs, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_wakeup$MH() {
        return RuntimeHelper.requireNonNull(constants$264.const$0,"g_main_context_wakeup");
    }
    /**
     * {@snippet :
     * void g_main_context_wakeup(struct _GMainContext* context);
     * }
     */
    public static void g_main_context_wakeup(MemorySegment context) {
        var mh$ = g_main_context_wakeup$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_acquire$MH() {
        return RuntimeHelper.requireNonNull(constants$264.const$1,"g_main_context_acquire");
    }
    /**
     * {@snippet :
     * int g_main_context_acquire(struct _GMainContext* context);
     * }
     */
    public static int g_main_context_acquire(MemorySegment context) {
        var mh$ = g_main_context_acquire$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_release$MH() {
        return RuntimeHelper.requireNonNull(constants$264.const$2,"g_main_context_release");
    }
    /**
     * {@snippet :
     * void g_main_context_release(struct _GMainContext* context);
     * }
     */
    public static void g_main_context_release(MemorySegment context) {
        var mh$ = g_main_context_release$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_is_owner$MH() {
        return RuntimeHelper.requireNonNull(constants$264.const$3,"g_main_context_is_owner");
    }
    /**
     * {@snippet :
     * int g_main_context_is_owner(struct _GMainContext* context);
     * }
     */
    public static int g_main_context_is_owner(MemorySegment context) {
        var mh$ = g_main_context_is_owner$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$264.const$4,"g_main_context_wait");
    }
    /**
     * {@snippet :
     * int g_main_context_wait(struct _GMainContext* context, struct _GCond* cond, union _GMutex* mutex);
     * }
     */
    public static int g_main_context_wait(MemorySegment context, MemorySegment cond, MemorySegment mutex) {
        var mh$ = g_main_context_wait$MH();
        try {
            return (int)mh$.invokeExact(context, cond, mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_prepare$MH() {
        return RuntimeHelper.requireNonNull(constants$264.const$5,"g_main_context_prepare");
    }
    /**
     * {@snippet :
     * int g_main_context_prepare(struct _GMainContext* context, int* priority);
     * }
     */
    public static int g_main_context_prepare(MemorySegment context, MemorySegment priority) {
        var mh$ = g_main_context_prepare$MH();
        try {
            return (int)mh$.invokeExact(context, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_query$MH() {
        return RuntimeHelper.requireNonNull(constants$265.const$1,"g_main_context_query");
    }
    /**
     * {@snippet :
     * int g_main_context_query(struct _GMainContext* context, int max_priority, int* timeout_, struct _GPollFD* fds, int n_fds);
     * }
     */
    public static int g_main_context_query(MemorySegment context, int max_priority, MemorySegment timeout_, MemorySegment fds, int n_fds) {
        var mh$ = g_main_context_query$MH();
        try {
            return (int)mh$.invokeExact(context, max_priority, timeout_, fds, n_fds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_check$MH() {
        return RuntimeHelper.requireNonNull(constants$265.const$3,"g_main_context_check");
    }
    /**
     * {@snippet :
     * int g_main_context_check(struct _GMainContext* context, int max_priority, struct _GPollFD* fds, int n_fds);
     * }
     */
    public static int g_main_context_check(MemorySegment context, int max_priority, MemorySegment fds, int n_fds) {
        var mh$ = g_main_context_check$MH();
        try {
            return (int)mh$.invokeExact(context, max_priority, fds, n_fds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_dispatch$MH() {
        return RuntimeHelper.requireNonNull(constants$265.const$4,"g_main_context_dispatch");
    }
    /**
     * {@snippet :
     * void g_main_context_dispatch(struct _GMainContext* context);
     * }
     */
    public static void g_main_context_dispatch(MemorySegment context) {
        var mh$ = g_main_context_dispatch$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_set_poll_func$MH() {
        return RuntimeHelper.requireNonNull(constants$266.const$0,"g_main_context_set_poll_func");
    }
    /**
     * {@snippet :
     * void g_main_context_set_poll_func(struct _GMainContext* context, int (*func)(struct _GPollFD*,unsigned int,int));
     * }
     */
    public static void g_main_context_set_poll_func(MemorySegment context, MemorySegment func) {
        var mh$ = g_main_context_set_poll_func$MH();
        try {
            mh$.invokeExact(context, func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_get_poll_func$MH() {
        return RuntimeHelper.requireNonNull(constants$266.const$2,"g_main_context_get_poll_func");
    }
    /**
     * {@snippet :
     * int (*g_main_context_get_poll_func(struct _GMainContext* context))(struct _GPollFD*,unsigned int,int);
     * }
     */
    public static MemorySegment g_main_context_get_poll_func(MemorySegment context) {
        var mh$ = g_main_context_get_poll_func$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_add_poll$MH() {
        return RuntimeHelper.requireNonNull(constants$266.const$3,"g_main_context_add_poll");
    }
    /**
     * {@snippet :
     * void g_main_context_add_poll(struct _GMainContext* context, struct _GPollFD* fd, int priority);
     * }
     */
    public static void g_main_context_add_poll(MemorySegment context, MemorySegment fd, int priority) {
        var mh$ = g_main_context_add_poll$MH();
        try {
            mh$.invokeExact(context, fd, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_remove_poll$MH() {
        return RuntimeHelper.requireNonNull(constants$266.const$4,"g_main_context_remove_poll");
    }
    /**
     * {@snippet :
     * void g_main_context_remove_poll(struct _GMainContext* context, struct _GPollFD* fd);
     * }
     */
    public static void g_main_context_remove_poll(MemorySegment context, MemorySegment fd) {
        var mh$ = g_main_context_remove_poll$MH();
        try {
            mh$.invokeExact(context, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$266.const$5,"g_main_depth");
    }
    /**
     * {@snippet :
     * int g_main_depth();
     * }
     */
    public static int g_main_depth() {
        var mh$ = g_main_depth$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_current_source$MH() {
        return RuntimeHelper.requireNonNull(constants$267.const$0,"g_main_current_source");
    }
    /**
     * {@snippet :
     * struct _GSource* g_main_current_source();
     * }
     */
    public static MemorySegment g_main_current_source() {
        var mh$ = g_main_current_source$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_push_thread_default$MH() {
        return RuntimeHelper.requireNonNull(constants$267.const$1,"g_main_context_push_thread_default");
    }
    /**
     * {@snippet :
     * void g_main_context_push_thread_default(struct _GMainContext* context);
     * }
     */
    public static void g_main_context_push_thread_default(MemorySegment context) {
        var mh$ = g_main_context_push_thread_default$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_pop_thread_default$MH() {
        return RuntimeHelper.requireNonNull(constants$267.const$2,"g_main_context_pop_thread_default");
    }
    /**
     * {@snippet :
     * void g_main_context_pop_thread_default(struct _GMainContext* context);
     * }
     */
    public static void g_main_context_pop_thread_default(MemorySegment context) {
        var mh$ = g_main_context_pop_thread_default$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_get_thread_default$MH() {
        return RuntimeHelper.requireNonNull(constants$267.const$3,"g_main_context_get_thread_default");
    }
    /**
     * {@snippet :
     * struct _GMainContext* g_main_context_get_thread_default();
     * }
     */
    public static MemorySegment g_main_context_get_thread_default() {
        var mh$ = g_main_context_get_thread_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_ref_thread_default$MH() {
        return RuntimeHelper.requireNonNull(constants$267.const$4,"g_main_context_ref_thread_default");
    }
    /**
     * {@snippet :
     * struct _GMainContext* g_main_context_ref_thread_default();
     * }
     */
    public static MemorySegment g_main_context_ref_thread_default() {
        var mh$ = g_main_context_ref_thread_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_new$MH() {
        return RuntimeHelper.requireNonNull(constants$267.const$5,"g_main_loop_new");
    }
    /**
     * {@snippet :
     * struct _GMainLoop* g_main_loop_new(struct _GMainContext* context, int is_running);
     * }
     */
    public static MemorySegment g_main_loop_new(MemorySegment context, int is_running) {
        var mh$ = g_main_loop_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, is_running);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_run$MH() {
        return RuntimeHelper.requireNonNull(constants$268.const$0,"g_main_loop_run");
    }
    /**
     * {@snippet :
     * void g_main_loop_run(struct _GMainLoop* loop);
     * }
     */
    public static void g_main_loop_run(MemorySegment loop) {
        var mh$ = g_main_loop_run$MH();
        try {
            mh$.invokeExact(loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_quit$MH() {
        return RuntimeHelper.requireNonNull(constants$268.const$1,"g_main_loop_quit");
    }
    /**
     * {@snippet :
     * void g_main_loop_quit(struct _GMainLoop* loop);
     * }
     */
    public static void g_main_loop_quit(MemorySegment loop) {
        var mh$ = g_main_loop_quit$MH();
        try {
            mh$.invokeExact(loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$268.const$2,"g_main_loop_ref");
    }
    /**
     * {@snippet :
     * struct _GMainLoop* g_main_loop_ref(struct _GMainLoop* loop);
     * }
     */
    public static MemorySegment g_main_loop_ref(MemorySegment loop) {
        var mh$ = g_main_loop_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$268.const$3,"g_main_loop_unref");
    }
    /**
     * {@snippet :
     * void g_main_loop_unref(struct _GMainLoop* loop);
     * }
     */
    public static void g_main_loop_unref(MemorySegment loop) {
        var mh$ = g_main_loop_unref$MH();
        try {
            mh$.invokeExact(loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_is_running$MH() {
        return RuntimeHelper.requireNonNull(constants$268.const$4,"g_main_loop_is_running");
    }
    /**
     * {@snippet :
     * int g_main_loop_is_running(struct _GMainLoop* loop);
     * }
     */
    public static int g_main_loop_is_running(MemorySegment loop) {
        var mh$ = g_main_loop_is_running$MH();
        try {
            return (int)mh$.invokeExact(loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_get_context$MH() {
        return RuntimeHelper.requireNonNull(constants$268.const$5,"g_main_loop_get_context");
    }
    /**
     * {@snippet :
     * struct _GMainContext* g_main_loop_get_context(struct _GMainLoop* loop);
     * }
     */
    public static MemorySegment g_main_loop_get_context(MemorySegment loop) {
        var mh$ = g_main_loop_get_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$269.const$0,"g_source_new");
    }
    /**
     * {@snippet :
     * struct _GSource* g_source_new(struct _GSourceFuncs* source_funcs, unsigned int struct_size);
     * }
     */
    public static MemorySegment g_source_new(MemorySegment source_funcs, int struct_size) {
        var mh$ = g_source_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source_funcs, struct_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_dispose_function$MH() {
        return RuntimeHelper.requireNonNull(constants$269.const$2,"g_source_set_dispose_function");
    }
    /**
     * {@snippet :
     * void g_source_set_dispose_function(struct _GSource* source, void (*dispose)(struct _GSource*));
     * }
     */
    public static void g_source_set_dispose_function(MemorySegment source, MemorySegment dispose) {
        var mh$ = g_source_set_dispose_function$MH();
        try {
            mh$.invokeExact(source, dispose);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$269.const$3,"g_source_ref");
    }
    /**
     * {@snippet :
     * struct _GSource* g_source_ref(struct _GSource* source);
     * }
     */
    public static MemorySegment g_source_ref(MemorySegment source) {
        var mh$ = g_source_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$269.const$4,"g_source_unref");
    }
    /**
     * {@snippet :
     * void g_source_unref(struct _GSource* source);
     * }
     */
    public static void g_source_unref(MemorySegment source) {
        var mh$ = g_source_unref$MH();
        try {
            mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_attach$MH() {
        return RuntimeHelper.requireNonNull(constants$269.const$5,"g_source_attach");
    }
    /**
     * {@snippet :
     * unsigned int g_source_attach(struct _GSource* source, struct _GMainContext* context);
     * }
     */
    public static int g_source_attach(MemorySegment source, MemorySegment context) {
        var mh$ = g_source_attach$MH();
        try {
            return (int)mh$.invokeExact(source, context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$270.const$0,"g_source_destroy");
    }
    /**
     * {@snippet :
     * void g_source_destroy(struct _GSource* source);
     * }
     */
    public static void g_source_destroy(MemorySegment source) {
        var mh$ = g_source_destroy$MH();
        try {
            mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$270.const$1,"g_source_set_priority");
    }
    /**
     * {@snippet :
     * void g_source_set_priority(struct _GSource* source, int priority);
     * }
     */
    public static void g_source_set_priority(MemorySegment source, int priority) {
        var mh$ = g_source_set_priority$MH();
        try {
            mh$.invokeExact(source, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$270.const$2,"g_source_get_priority");
    }
    /**
     * {@snippet :
     * int g_source_get_priority(struct _GSource* source);
     * }
     */
    public static int g_source_get_priority(MemorySegment source) {
        var mh$ = g_source_get_priority$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_can_recurse$MH() {
        return RuntimeHelper.requireNonNull(constants$270.const$3,"g_source_set_can_recurse");
    }
    /**
     * {@snippet :
     * void g_source_set_can_recurse(struct _GSource* source, int can_recurse);
     * }
     */
    public static void g_source_set_can_recurse(MemorySegment source, int can_recurse) {
        var mh$ = g_source_set_can_recurse$MH();
        try {
            mh$.invokeExact(source, can_recurse);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_can_recurse$MH() {
        return RuntimeHelper.requireNonNull(constants$270.const$4,"g_source_get_can_recurse");
    }
    /**
     * {@snippet :
     * int g_source_get_can_recurse(struct _GSource* source);
     * }
     */
    public static int g_source_get_can_recurse(MemorySegment source) {
        var mh$ = g_source_get_can_recurse$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_id$MH() {
        return RuntimeHelper.requireNonNull(constants$270.const$5,"g_source_get_id");
    }
    /**
     * {@snippet :
     * unsigned int g_source_get_id(struct _GSource* source);
     * }
     */
    public static int g_source_get_id(MemorySegment source) {
        var mh$ = g_source_get_id$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_context$MH() {
        return RuntimeHelper.requireNonNull(constants$271.const$0,"g_source_get_context");
    }
    /**
     * {@snippet :
     * struct _GMainContext* g_source_get_context(struct _GSource* source);
     * }
     */
    public static MemorySegment g_source_get_context(MemorySegment source) {
        var mh$ = g_source_get_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$271.const$3,"g_source_set_callback");
    }
    /**
     * {@snippet :
     * void g_source_set_callback(struct _GSource* source, int (*func)(void*), void* data, void (*notify)(void*));
     * }
     */
    public static void g_source_set_callback(MemorySegment source, MemorySegment func, MemorySegment data, MemorySegment notify) {
        var mh$ = g_source_set_callback$MH();
        try {
            mh$.invokeExact(source, func, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_funcs$MH() {
        return RuntimeHelper.requireNonNull(constants$271.const$4,"g_source_set_funcs");
    }
    /**
     * {@snippet :
     * void g_source_set_funcs(struct _GSource* source, struct _GSourceFuncs* funcs);
     * }
     */
    public static void g_source_set_funcs(MemorySegment source, MemorySegment funcs) {
        var mh$ = g_source_set_funcs$MH();
        try {
            mh$.invokeExact(source, funcs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_is_destroyed$MH() {
        return RuntimeHelper.requireNonNull(constants$271.const$5,"g_source_is_destroyed");
    }
    /**
     * {@snippet :
     * int g_source_is_destroyed(struct _GSource* source);
     * }
     */
    public static int g_source_is_destroyed(MemorySegment source) {
        var mh$ = g_source_is_destroyed$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$272.const$0,"g_source_set_name");
    }
    /**
     * {@snippet :
     * void g_source_set_name(struct _GSource* source, char* name);
     * }
     */
    public static void g_source_set_name(MemorySegment source, MemorySegment name) {
        var mh$ = g_source_set_name$MH();
        try {
            mh$.invokeExact(source, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_static_name$MH() {
        return RuntimeHelper.requireNonNull(constants$272.const$1,"g_source_set_static_name");
    }
    /**
     * {@snippet :
     * void g_source_set_static_name(struct _GSource* source, char* name);
     * }
     */
    public static void g_source_set_static_name(MemorySegment source, MemorySegment name) {
        var mh$ = g_source_set_static_name$MH();
        try {
            mh$.invokeExact(source, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$272.const$2,"g_source_get_name");
    }
    /**
     * {@snippet :
     * char* g_source_get_name(struct _GSource* source);
     * }
     */
    public static MemorySegment g_source_get_name(MemorySegment source) {
        var mh$ = g_source_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_name_by_id$MH() {
        return RuntimeHelper.requireNonNull(constants$272.const$3,"g_source_set_name_by_id");
    }
    /**
     * {@snippet :
     * void g_source_set_name_by_id(unsigned int tag, char* name);
     * }
     */
    public static void g_source_set_name_by_id(int tag, MemorySegment name) {
        var mh$ = g_source_set_name_by_id$MH();
        try {
            mh$.invokeExact(tag, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_ready_time$MH() {
        return RuntimeHelper.requireNonNull(constants$272.const$4,"g_source_set_ready_time");
    }
    /**
     * {@snippet :
     * void g_source_set_ready_time(struct _GSource* source, long ready_time);
     * }
     */
    public static void g_source_set_ready_time(MemorySegment source, long ready_time) {
        var mh$ = g_source_set_ready_time$MH();
        try {
            mh$.invokeExact(source, ready_time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_ready_time$MH() {
        return RuntimeHelper.requireNonNull(constants$272.const$5,"g_source_get_ready_time");
    }
    /**
     * {@snippet :
     * long g_source_get_ready_time(struct _GSource* source);
     * }
     */
    public static long g_source_get_ready_time(MemorySegment source) {
        var mh$ = g_source_get_ready_time$MH();
        try {
            return (long)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_add_unix_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$273.const$0,"g_source_add_unix_fd");
    }
    /**
     * {@snippet :
     * void* g_source_add_unix_fd(struct _GSource* source, int fd, enum GIOCondition events);
     * }
     */
    public static MemorySegment g_source_add_unix_fd(MemorySegment source, int fd, int events) {
        var mh$ = g_source_add_unix_fd$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source, fd, events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_modify_unix_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$273.const$1,"g_source_modify_unix_fd");
    }
    /**
     * {@snippet :
     * void g_source_modify_unix_fd(struct _GSource* source, void* tag, enum GIOCondition new_events);
     * }
     */
    public static void g_source_modify_unix_fd(MemorySegment source, MemorySegment tag, int new_events) {
        var mh$ = g_source_modify_unix_fd$MH();
        try {
            mh$.invokeExact(source, tag, new_events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_remove_unix_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$273.const$2,"g_source_remove_unix_fd");
    }
    /**
     * {@snippet :
     * void g_source_remove_unix_fd(struct _GSource* source, void* tag);
     * }
     */
    public static void g_source_remove_unix_fd(MemorySegment source, MemorySegment tag) {
        var mh$ = g_source_remove_unix_fd$MH();
        try {
            mh$.invokeExact(source, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_query_unix_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$273.const$3,"g_source_query_unix_fd");
    }
    /**
     * {@snippet :
     * enum GIOCondition g_source_query_unix_fd(struct _GSource* source, void* tag);
     * }
     */
    public static int g_source_query_unix_fd(MemorySegment source, MemorySegment tag) {
        var mh$ = g_source_query_unix_fd$MH();
        try {
            return (int)mh$.invokeExact(source, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_callback_indirect$MH() {
        return RuntimeHelper.requireNonNull(constants$273.const$4,"g_source_set_callback_indirect");
    }
    /**
     * {@snippet :
     * void g_source_set_callback_indirect(struct _GSource* source, void* callback_data, struct _GSourceCallbackFuncs* callback_funcs);
     * }
     */
    public static void g_source_set_callback_indirect(MemorySegment source, MemorySegment callback_data, MemorySegment callback_funcs) {
        var mh$ = g_source_set_callback_indirect$MH();
        try {
            mh$.invokeExact(source, callback_data, callback_funcs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_add_poll$MH() {
        return RuntimeHelper.requireNonNull(constants$273.const$5,"g_source_add_poll");
    }
    /**
     * {@snippet :
     * void g_source_add_poll(struct _GSource* source, struct _GPollFD* fd);
     * }
     */
    public static void g_source_add_poll(MemorySegment source, MemorySegment fd) {
        var mh$ = g_source_add_poll$MH();
        try {
            mh$.invokeExact(source, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_remove_poll$MH() {
        return RuntimeHelper.requireNonNull(constants$274.const$0,"g_source_remove_poll");
    }
    /**
     * {@snippet :
     * void g_source_remove_poll(struct _GSource* source, struct _GPollFD* fd);
     * }
     */
    public static void g_source_remove_poll(MemorySegment source, MemorySegment fd) {
        var mh$ = g_source_remove_poll$MH();
        try {
            mh$.invokeExact(source, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_add_child_source$MH() {
        return RuntimeHelper.requireNonNull(constants$274.const$1,"g_source_add_child_source");
    }
    /**
     * {@snippet :
     * void g_source_add_child_source(struct _GSource* source, struct _GSource* child_source);
     * }
     */
    public static void g_source_add_child_source(MemorySegment source, MemorySegment child_source) {
        var mh$ = g_source_add_child_source$MH();
        try {
            mh$.invokeExact(source, child_source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_remove_child_source$MH() {
        return RuntimeHelper.requireNonNull(constants$274.const$2,"g_source_remove_child_source");
    }
    /**
     * {@snippet :
     * void g_source_remove_child_source(struct _GSource* source, struct _GSource* child_source);
     * }
     */
    public static void g_source_remove_child_source(MemorySegment source, MemorySegment child_source) {
        var mh$ = g_source_remove_child_source$MH();
        try {
            mh$.invokeExact(source, child_source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_current_time$MH() {
        return RuntimeHelper.requireNonNull(constants$274.const$3,"g_source_get_current_time");
    }
    /**
     * {@snippet :
     * void g_source_get_current_time(struct _GSource* source, struct _GTimeVal* timeval);
     * }
     */
    public static void g_source_get_current_time(MemorySegment source, MemorySegment timeval) {
        var mh$ = g_source_get_current_time$MH();
        try {
            mh$.invokeExact(source, timeval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_time$MH() {
        return RuntimeHelper.requireNonNull(constants$274.const$4,"g_source_get_time");
    }
    /**
     * {@snippet :
     * long g_source_get_time(struct _GSource* source);
     * }
     */
    public static long g_source_get_time(MemorySegment source) {
        var mh$ = g_source_get_time$MH();
        try {
            return (long)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_idle_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$274.const$5,"g_idle_source_new");
    }
    /**
     * {@snippet :
     * struct _GSource* g_idle_source_new();
     * }
     */
    public static MemorySegment g_idle_source_new() {
        var mh$ = g_idle_source_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_child_watch_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$275.const$0,"g_child_watch_source_new");
    }
    /**
     * {@snippet :
     * struct _GSource* g_child_watch_source_new(int pid);
     * }
     */
    public static MemorySegment g_child_watch_source_new(int pid) {
        var mh$ = g_child_watch_source_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_timeout_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$275.const$1,"g_timeout_source_new");
    }
    /**
     * {@snippet :
     * struct _GSource* g_timeout_source_new(unsigned int interval);
     * }
     */
    public static MemorySegment g_timeout_source_new(int interval) {
        var mh$ = g_timeout_source_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(interval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_timeout_source_new_seconds$MH() {
        return RuntimeHelper.requireNonNull(constants$275.const$2,"g_timeout_source_new_seconds");
    }
    /**
     * {@snippet :
     * struct _GSource* g_timeout_source_new_seconds(unsigned int interval);
     * }
     */
    public static MemorySegment g_timeout_source_new_seconds(int interval) {
        var mh$ = g_timeout_source_new_seconds$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(interval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_get_current_time$MH() {
        return RuntimeHelper.requireNonNull(constants$275.const$3,"g_get_current_time");
    }
    /**
     * {@snippet :
     * void g_get_current_time(struct _GTimeVal* result);
     * }
     */
    public static void g_get_current_time(MemorySegment result) {
        var mh$ = g_get_current_time$MH();
        try {
            mh$.invokeExact(result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_get_monotonic_time$MH() {
        return RuntimeHelper.requireNonNull(constants$275.const$4,"g_get_monotonic_time");
    }
    /**
     * {@snippet :
     * long g_get_monotonic_time();
     * }
     */
    public static long g_get_monotonic_time() {
        var mh$ = g_get_monotonic_time$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_get_real_time$MH() {
        return RuntimeHelper.requireNonNull(constants$275.const$5,"g_get_real_time");
    }
    /**
     * {@snippet :
     * long g_get_real_time();
     * }
     */
    public static long g_get_real_time() {
        var mh$ = g_get_real_time$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$276.const$0,"g_source_remove");
    }
    /**
     * {@snippet :
     * int g_source_remove(unsigned int tag);
     * }
     */
    public static int g_source_remove(int tag) {
        var mh$ = g_source_remove$MH();
        try {
            return (int)mh$.invokeExact(tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_remove_by_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$276.const$1,"g_source_remove_by_user_data");
    }
    /**
     * {@snippet :
     * int g_source_remove_by_user_data(void* user_data);
     * }
     */
    public static int g_source_remove_by_user_data(MemorySegment user_data) {
        var mh$ = g_source_remove_by_user_data$MH();
        try {
            return (int)mh$.invokeExact(user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_remove_by_funcs_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$276.const$2,"g_source_remove_by_funcs_user_data");
    }
    /**
     * {@snippet :
     * int g_source_remove_by_funcs_user_data(struct _GSourceFuncs* funcs, void* user_data);
     * }
     */
    public static int g_source_remove_by_funcs_user_data(MemorySegment funcs, MemorySegment user_data) {
        var mh$ = g_source_remove_by_funcs_user_data$MH();
        try {
            return (int)mh$.invokeExact(funcs, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_handle_id$MH() {
        return RuntimeHelper.requireNonNull(constants$276.const$5,"g_clear_handle_id");
    }
    /**
     * {@snippet :
     * void g_clear_handle_id(unsigned int* tag_ptr, void (*clear_func)(unsigned int));
     * }
     */
    public static void g_clear_handle_id(MemorySegment tag_ptr, MemorySegment clear_func) {
        var mh$ = g_clear_handle_id$MH();
        try {
            mh$.invokeExact(tag_ptr, clear_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_timeout_add_full$MH() {
        return RuntimeHelper.requireNonNull(constants$277.const$3,"g_timeout_add_full");
    }
    /**
     * {@snippet :
     * unsigned int g_timeout_add_full(int priority, unsigned int interval, int (*function)(void*), void* data, void (*notify)(void*));
     * }
     */
    public static int g_timeout_add_full(int priority, int interval, MemorySegment function, MemorySegment data, MemorySegment notify) {
        var mh$ = g_timeout_add_full$MH();
        try {
            return (int)mh$.invokeExact(priority, interval, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_timeout_add$MH() {
        return RuntimeHelper.requireNonNull(constants$277.const$5,"g_timeout_add");
    }
    /**
     * {@snippet :
     * unsigned int g_timeout_add(unsigned int interval, int (*function)(void*), void* data);
     * }
     */
    public static int g_timeout_add(int interval, MemorySegment function, MemorySegment data) {
        var mh$ = g_timeout_add$MH();
        try {
            return (int)mh$.invokeExact(interval, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_timeout_add_once$MH() {
        return RuntimeHelper.requireNonNull(constants$278.const$1,"g_timeout_add_once");
    }
    /**
     * {@snippet :
     * unsigned int g_timeout_add_once(unsigned int interval, void (*function)(void*), void* data);
     * }
     */
    public static int g_timeout_add_once(int interval, MemorySegment function, MemorySegment data) {
        var mh$ = g_timeout_add_once$MH();
        try {
            return (int)mh$.invokeExact(interval, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_timeout_add_seconds_full$MH() {
        return RuntimeHelper.requireNonNull(constants$278.const$4,"g_timeout_add_seconds_full");
    }
    /**
     * {@snippet :
     * unsigned int g_timeout_add_seconds_full(int priority, unsigned int interval, int (*function)(void*), void* data, void (*notify)(void*));
     * }
     */
    public static int g_timeout_add_seconds_full(int priority, int interval, MemorySegment function, MemorySegment data, MemorySegment notify) {
        var mh$ = g_timeout_add_seconds_full$MH();
        try {
            return (int)mh$.invokeExact(priority, interval, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_timeout_add_seconds$MH() {
        return RuntimeHelper.requireNonNull(constants$279.const$0,"g_timeout_add_seconds");
    }
    /**
     * {@snippet :
     * unsigned int g_timeout_add_seconds(unsigned int interval, int (*function)(void*), void* data);
     * }
     */
    public static int g_timeout_add_seconds(int interval, MemorySegment function, MemorySegment data) {
        var mh$ = g_timeout_add_seconds$MH();
        try {
            return (int)mh$.invokeExact(interval, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_child_watch_add_full$MH() {
        return RuntimeHelper.requireNonNull(constants$279.const$3,"g_child_watch_add_full");
    }
    /**
     * {@snippet :
     * unsigned int g_child_watch_add_full(int priority, int pid, void (*function)(int,int,void*), void* data, void (*notify)(void*));
     * }
     */
    public static int g_child_watch_add_full(int priority, int pid, MemorySegment function, MemorySegment data, MemorySegment notify) {
        var mh$ = g_child_watch_add_full$MH();
        try {
            return (int)mh$.invokeExact(priority, pid, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_child_watch_add$MH() {
        return RuntimeHelper.requireNonNull(constants$279.const$5,"g_child_watch_add");
    }
    /**
     * {@snippet :
     * unsigned int g_child_watch_add(int pid, void (*function)(int,int,void*), void* data);
     * }
     */
    public static int g_child_watch_add(int pid, MemorySegment function, MemorySegment data) {
        var mh$ = g_child_watch_add$MH();
        try {
            return (int)mh$.invokeExact(pid, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_idle_add$MH() {
        return RuntimeHelper.requireNonNull(constants$280.const$1,"g_idle_add");
    }
    /**
     * {@snippet :
     * unsigned int g_idle_add(int (*function)(void*), void* data);
     * }
     */
    public static int g_idle_add(MemorySegment function, MemorySegment data) {
        var mh$ = g_idle_add$MH();
        try {
            return (int)mh$.invokeExact(function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_idle_add_full$MH() {
        return RuntimeHelper.requireNonNull(constants$280.const$5,"g_idle_add_full");
    }
    /**
     * {@snippet :
     * unsigned int g_idle_add_full(int priority, int (*function)(void*), void* data, void (*notify)(void*));
     * }
     */
    public static int g_idle_add_full(int priority, MemorySegment function, MemorySegment data, MemorySegment notify) {
        var mh$ = g_idle_add_full$MH();
        try {
            return (int)mh$.invokeExact(priority, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_idle_add_once$MH() {
        return RuntimeHelper.requireNonNull(constants$281.const$1,"g_idle_add_once");
    }
    /**
     * {@snippet :
     * unsigned int g_idle_add_once(void (*function)(void*), void* data);
     * }
     */
    public static int g_idle_add_once(MemorySegment function, MemorySegment data) {
        var mh$ = g_idle_add_once$MH();
        try {
            return (int)mh$.invokeExact(function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_idle_remove_by_data$MH() {
        return RuntimeHelper.requireNonNull(constants$281.const$2,"g_idle_remove_by_data");
    }
    /**
     * {@snippet :
     * int g_idle_remove_by_data(void* data);
     * }
     */
    public static int g_idle_remove_by_data(MemorySegment data) {
        var mh$ = g_idle_remove_by_data$MH();
        try {
            return (int)mh$.invokeExact(data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_invoke_full$MH() {
        return RuntimeHelper.requireNonNull(constants$281.const$6,"g_main_context_invoke_full");
    }
    /**
     * {@snippet :
     * void g_main_context_invoke_full(struct _GMainContext* context, int priority, int (*function)(void*), void* data, void (*notify)(void*));
     * }
     */
    public static void g_main_context_invoke_full(MemorySegment context, int priority, MemorySegment function, MemorySegment data, MemorySegment notify) {
        var mh$ = g_main_context_invoke_full$MH();
        try {
            mh$.invokeExact(context, priority, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_invoke$MH() {
        return RuntimeHelper.requireNonNull(constants$282.const$1,"g_main_context_invoke");
    }
    /**
     * {@snippet :
     * void g_main_context_invoke(struct _GMainContext* context, int (*function)(void*), void* data);
     * }
     */
    public static void g_main_context_invoke(MemorySegment context, MemorySegment function, MemorySegment data) {
        var mh$ = g_main_context_invoke$MH();
        try {
            mh$.invokeExact(context, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * struct _GSourceFuncs g_timeout_funcs;
     * }
     */
    public static MemorySegment g_timeout_funcs$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$282.const$2,"g_timeout_funcs");
    }
    /**
     * {@snippet :
     * struct _GSourceFuncs g_child_watch_funcs;
     * }
     */
    public static MemorySegment g_child_watch_funcs$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$282.const$3,"g_child_watch_funcs");
    }
    /**
     * {@snippet :
     * struct _GSourceFuncs g_idle_funcs;
     * }
     */
    public static MemorySegment g_idle_funcs$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$282.const$4,"g_idle_funcs");
    }
    /**
     * {@snippet :
     * struct _GSourceFuncs g_unix_signal_funcs;
     * }
     */
    public static MemorySegment g_unix_signal_funcs$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$282.const$5,"g_unix_signal_funcs");
    }
    /**
     * {@snippet :
     * struct _GSourceFuncs g_unix_fd_source_funcs;
     * }
     */
    public static MemorySegment g_unix_fd_source_funcs$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$283.const$0,"g_unix_fd_source_funcs");
    }
    /**
     * {@snippet :
     * typedef unsigned int gunichar;
     * }
     */
    public static final OfInt gunichar = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned short gunichar2;
     * }
     */
    public static final OfShort gunichar2 = JAVA_SHORT;
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_CONTROL = 0;
     * }
     */
    public static int G_UNICODE_CONTROL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_FORMAT = 1;
     * }
     */
    public static int G_UNICODE_FORMAT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_UNASSIGNED = 2;
     * }
     */
    public static int G_UNICODE_UNASSIGNED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_PRIVATE_USE = 3;
     * }
     */
    public static int G_UNICODE_PRIVATE_USE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_SURROGATE = 4;
     * }
     */
    public static int G_UNICODE_SURROGATE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_LOWERCASE_LETTER = 5;
     * }
     */
    public static int G_UNICODE_LOWERCASE_LETTER() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_MODIFIER_LETTER = 6;
     * }
     */
    public static int G_UNICODE_MODIFIER_LETTER() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_OTHER_LETTER = 7;
     * }
     */
    public static int G_UNICODE_OTHER_LETTER() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_TITLECASE_LETTER = 8;
     * }
     */
    public static int G_UNICODE_TITLECASE_LETTER() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_UPPERCASE_LETTER = 9;
     * }
     */
    public static int G_UNICODE_UPPERCASE_LETTER() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_SPACING_MARK = 10;
     * }
     */
    public static int G_UNICODE_SPACING_MARK() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_ENCLOSING_MARK = 11;
     * }
     */
    public static int G_UNICODE_ENCLOSING_MARK() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_NON_SPACING_MARK = 12;
     * }
     */
    public static int G_UNICODE_NON_SPACING_MARK() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_DECIMAL_NUMBER = 13;
     * }
     */
    public static int G_UNICODE_DECIMAL_NUMBER() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_LETTER_NUMBER = 14;
     * }
     */
    public static int G_UNICODE_LETTER_NUMBER() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_OTHER_NUMBER = 15;
     * }
     */
    public static int G_UNICODE_OTHER_NUMBER() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_CONNECT_PUNCTUATION = 16;
     * }
     */
    public static int G_UNICODE_CONNECT_PUNCTUATION() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_DASH_PUNCTUATION = 17;
     * }
     */
    public static int G_UNICODE_DASH_PUNCTUATION() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_CLOSE_PUNCTUATION = 18;
     * }
     */
    public static int G_UNICODE_CLOSE_PUNCTUATION() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_FINAL_PUNCTUATION = 19;
     * }
     */
    public static int G_UNICODE_FINAL_PUNCTUATION() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_INITIAL_PUNCTUATION = 20;
     * }
     */
    public static int G_UNICODE_INITIAL_PUNCTUATION() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_OTHER_PUNCTUATION = 21;
     * }
     */
    public static int G_UNICODE_OTHER_PUNCTUATION() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_OPEN_PUNCTUATION = 22;
     * }
     */
    public static int G_UNICODE_OPEN_PUNCTUATION() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_CURRENCY_SYMBOL = 23;
     * }
     */
    public static int G_UNICODE_CURRENCY_SYMBOL() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_MODIFIER_SYMBOL = 24;
     * }
     */
    public static int G_UNICODE_MODIFIER_SYMBOL() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_MATH_SYMBOL = 25;
     * }
     */
    public static int G_UNICODE_MATH_SYMBOL() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_OTHER_SYMBOL = 26;
     * }
     */
    public static int G_UNICODE_OTHER_SYMBOL() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_LINE_SEPARATOR = 27;
     * }
     */
    public static int G_UNICODE_LINE_SEPARATOR() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_PARAGRAPH_SEPARATOR = 28;
     * }
     */
    public static int G_UNICODE_PARAGRAPH_SEPARATOR() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum GUnicodeType.G_UNICODE_SPACE_SEPARATOR = 29;
     * }
     */
    public static int G_UNICODE_SPACE_SEPARATOR() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_MANDATORY = 0;
     * }
     */
    public static int G_UNICODE_BREAK_MANDATORY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_CARRIAGE_RETURN = 1;
     * }
     */
    public static int G_UNICODE_BREAK_CARRIAGE_RETURN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_LINE_FEED = 2;
     * }
     */
    public static int G_UNICODE_BREAK_LINE_FEED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_COMBINING_MARK = 3;
     * }
     */
    public static int G_UNICODE_BREAK_COMBINING_MARK() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_SURROGATE = 4;
     * }
     */
    public static int G_UNICODE_BREAK_SURROGATE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_ZERO_WIDTH_SPACE = 5;
     * }
     */
    public static int G_UNICODE_BREAK_ZERO_WIDTH_SPACE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_INSEPARABLE = 6;
     * }
     */
    public static int G_UNICODE_BREAK_INSEPARABLE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_NON_BREAKING_GLUE = 7;
     * }
     */
    public static int G_UNICODE_BREAK_NON_BREAKING_GLUE() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_CONTINGENT = 8;
     * }
     */
    public static int G_UNICODE_BREAK_CONTINGENT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_SPACE = 9;
     * }
     */
    public static int G_UNICODE_BREAK_SPACE() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_AFTER = 10;
     * }
     */
    public static int G_UNICODE_BREAK_AFTER() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_BEFORE = 11;
     * }
     */
    public static int G_UNICODE_BREAK_BEFORE() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_BEFORE_AND_AFTER = 12;
     * }
     */
    public static int G_UNICODE_BREAK_BEFORE_AND_AFTER() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_HYPHEN = 13;
     * }
     */
    public static int G_UNICODE_BREAK_HYPHEN() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_NON_STARTER = 14;
     * }
     */
    public static int G_UNICODE_BREAK_NON_STARTER() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_OPEN_PUNCTUATION = 15;
     * }
     */
    public static int G_UNICODE_BREAK_OPEN_PUNCTUATION() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_CLOSE_PUNCTUATION = 16;
     * }
     */
    public static int G_UNICODE_BREAK_CLOSE_PUNCTUATION() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_QUOTATION = 17;
     * }
     */
    public static int G_UNICODE_BREAK_QUOTATION() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_EXCLAMATION = 18;
     * }
     */
    public static int G_UNICODE_BREAK_EXCLAMATION() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_IDEOGRAPHIC = 19;
     * }
     */
    public static int G_UNICODE_BREAK_IDEOGRAPHIC() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_NUMERIC = 20;
     * }
     */
    public static int G_UNICODE_BREAK_NUMERIC() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_INFIX_SEPARATOR = 21;
     * }
     */
    public static int G_UNICODE_BREAK_INFIX_SEPARATOR() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_SYMBOL = 22;
     * }
     */
    public static int G_UNICODE_BREAK_SYMBOL() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_ALPHABETIC = 23;
     * }
     */
    public static int G_UNICODE_BREAK_ALPHABETIC() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_PREFIX = 24;
     * }
     */
    public static int G_UNICODE_BREAK_PREFIX() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_POSTFIX = 25;
     * }
     */
    public static int G_UNICODE_BREAK_POSTFIX() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_COMPLEX_CONTEXT = 26;
     * }
     */
    public static int G_UNICODE_BREAK_COMPLEX_CONTEXT() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_AMBIGUOUS = 27;
     * }
     */
    public static int G_UNICODE_BREAK_AMBIGUOUS() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_UNKNOWN = 28;
     * }
     */
    public static int G_UNICODE_BREAK_UNKNOWN() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_NEXT_LINE = 29;
     * }
     */
    public static int G_UNICODE_BREAK_NEXT_LINE() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_WORD_JOINER = 30;
     * }
     */
    public static int G_UNICODE_BREAK_WORD_JOINER() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_HANGUL_L_JAMO = 31;
     * }
     */
    public static int G_UNICODE_BREAK_HANGUL_L_JAMO() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_HANGUL_V_JAMO = 32;
     * }
     */
    public static int G_UNICODE_BREAK_HANGUL_V_JAMO() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_HANGUL_T_JAMO = 33;
     * }
     */
    public static int G_UNICODE_BREAK_HANGUL_T_JAMO() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_HANGUL_LV_SYLLABLE = 34;
     * }
     */
    public static int G_UNICODE_BREAK_HANGUL_LV_SYLLABLE() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_HANGUL_LVT_SYLLABLE = 35;
     * }
     */
    public static int G_UNICODE_BREAK_HANGUL_LVT_SYLLABLE() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_CLOSE_PARANTHESIS = 36;
     * }
     */
    public static int G_UNICODE_BREAK_CLOSE_PARANTHESIS() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_CLOSE_PARENTHESIS = 36;
     * }
     */
    public static int G_UNICODE_BREAK_CLOSE_PARENTHESIS() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_CONDITIONAL_JAPANESE_STARTER = 37;
     * }
     */
    public static int G_UNICODE_BREAK_CONDITIONAL_JAPANESE_STARTER() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_HEBREW_LETTER = 38;
     * }
     */
    public static int G_UNICODE_BREAK_HEBREW_LETTER() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_REGIONAL_INDICATOR = 39;
     * }
     */
    public static int G_UNICODE_BREAK_REGIONAL_INDICATOR() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_EMOJI_BASE = 40;
     * }
     */
    public static int G_UNICODE_BREAK_EMOJI_BASE() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_EMOJI_MODIFIER = 41;
     * }
     */
    public static int G_UNICODE_BREAK_EMOJI_MODIFIER() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType.G_UNICODE_BREAK_ZERO_WIDTH_JOINER = 42;
     * }
     */
    public static int G_UNICODE_BREAK_ZERO_WIDTH_JOINER() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_INVALID_CODE = -1;
     * }
     */
    public static int G_UNICODE_SCRIPT_INVALID_CODE() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_COMMON = 0;
     * }
     */
    public static int G_UNICODE_SCRIPT_COMMON() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_INHERITED = 1;
     * }
     */
    public static int G_UNICODE_SCRIPT_INHERITED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_ARABIC = 2;
     * }
     */
    public static int G_UNICODE_SCRIPT_ARABIC() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_ARMENIAN = 3;
     * }
     */
    public static int G_UNICODE_SCRIPT_ARMENIAN() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_BENGALI = 4;
     * }
     */
    public static int G_UNICODE_SCRIPT_BENGALI() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_BOPOMOFO = 5;
     * }
     */
    public static int G_UNICODE_SCRIPT_BOPOMOFO() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_CHEROKEE = 6;
     * }
     */
    public static int G_UNICODE_SCRIPT_CHEROKEE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_COPTIC = 7;
     * }
     */
    public static int G_UNICODE_SCRIPT_COPTIC() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_CYRILLIC = 8;
     * }
     */
    public static int G_UNICODE_SCRIPT_CYRILLIC() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_DESERET = 9;
     * }
     */
    public static int G_UNICODE_SCRIPT_DESERET() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_DEVANAGARI = 10;
     * }
     */
    public static int G_UNICODE_SCRIPT_DEVANAGARI() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_ETHIOPIC = 11;
     * }
     */
    public static int G_UNICODE_SCRIPT_ETHIOPIC() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_GEORGIAN = 12;
     * }
     */
    public static int G_UNICODE_SCRIPT_GEORGIAN() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_GOTHIC = 13;
     * }
     */
    public static int G_UNICODE_SCRIPT_GOTHIC() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_GREEK = 14;
     * }
     */
    public static int G_UNICODE_SCRIPT_GREEK() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_GUJARATI = 15;
     * }
     */
    public static int G_UNICODE_SCRIPT_GUJARATI() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_GURMUKHI = 16;
     * }
     */
    public static int G_UNICODE_SCRIPT_GURMUKHI() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_HAN = 17;
     * }
     */
    public static int G_UNICODE_SCRIPT_HAN() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_HANGUL = 18;
     * }
     */
    public static int G_UNICODE_SCRIPT_HANGUL() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_HEBREW = 19;
     * }
     */
    public static int G_UNICODE_SCRIPT_HEBREW() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_HIRAGANA = 20;
     * }
     */
    public static int G_UNICODE_SCRIPT_HIRAGANA() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_KANNADA = 21;
     * }
     */
    public static int G_UNICODE_SCRIPT_KANNADA() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_KATAKANA = 22;
     * }
     */
    public static int G_UNICODE_SCRIPT_KATAKANA() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_KHMER = 23;
     * }
     */
    public static int G_UNICODE_SCRIPT_KHMER() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_LAO = 24;
     * }
     */
    public static int G_UNICODE_SCRIPT_LAO() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_LATIN = 25;
     * }
     */
    public static int G_UNICODE_SCRIPT_LATIN() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_MALAYALAM = 26;
     * }
     */
    public static int G_UNICODE_SCRIPT_MALAYALAM() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_MONGOLIAN = 27;
     * }
     */
    public static int G_UNICODE_SCRIPT_MONGOLIAN() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_MYANMAR = 28;
     * }
     */
    public static int G_UNICODE_SCRIPT_MYANMAR() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_OGHAM = 29;
     * }
     */
    public static int G_UNICODE_SCRIPT_OGHAM() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_OLD_ITALIC = 30;
     * }
     */
    public static int G_UNICODE_SCRIPT_OLD_ITALIC() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_ORIYA = 31;
     * }
     */
    public static int G_UNICODE_SCRIPT_ORIYA() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_RUNIC = 32;
     * }
     */
    public static int G_UNICODE_SCRIPT_RUNIC() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_SINHALA = 33;
     * }
     */
    public static int G_UNICODE_SCRIPT_SINHALA() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_SYRIAC = 34;
     * }
     */
    public static int G_UNICODE_SCRIPT_SYRIAC() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_TAMIL = 35;
     * }
     */
    public static int G_UNICODE_SCRIPT_TAMIL() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_TELUGU = 36;
     * }
     */
    public static int G_UNICODE_SCRIPT_TELUGU() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_THAANA = 37;
     * }
     */
    public static int G_UNICODE_SCRIPT_THAANA() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_THAI = 38;
     * }
     */
    public static int G_UNICODE_SCRIPT_THAI() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_TIBETAN = 39;
     * }
     */
    public static int G_UNICODE_SCRIPT_TIBETAN() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_CANADIAN_ABORIGINAL = 40;
     * }
     */
    public static int G_UNICODE_SCRIPT_CANADIAN_ABORIGINAL() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_YI = 41;
     * }
     */
    public static int G_UNICODE_SCRIPT_YI() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_TAGALOG = 42;
     * }
     */
    public static int G_UNICODE_SCRIPT_TAGALOG() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_HANUNOO = 43;
     * }
     */
    public static int G_UNICODE_SCRIPT_HANUNOO() {
        return (int)43L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_BUHID = 44;
     * }
     */
    public static int G_UNICODE_SCRIPT_BUHID() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_TAGBANWA = 45;
     * }
     */
    public static int G_UNICODE_SCRIPT_TAGBANWA() {
        return (int)45L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_BRAILLE = 46;
     * }
     */
    public static int G_UNICODE_SCRIPT_BRAILLE() {
        return (int)46L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_CYPRIOT = 47;
     * }
     */
    public static int G_UNICODE_SCRIPT_CYPRIOT() {
        return (int)47L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_LIMBU = 48;
     * }
     */
    public static int G_UNICODE_SCRIPT_LIMBU() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_OSMANYA = 49;
     * }
     */
    public static int G_UNICODE_SCRIPT_OSMANYA() {
        return (int)49L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_SHAVIAN = 50;
     * }
     */
    public static int G_UNICODE_SCRIPT_SHAVIAN() {
        return (int)50L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_LINEAR_B = 51;
     * }
     */
    public static int G_UNICODE_SCRIPT_LINEAR_B() {
        return (int)51L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_TAI_LE = 52;
     * }
     */
    public static int G_UNICODE_SCRIPT_TAI_LE() {
        return (int)52L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_UGARITIC = 53;
     * }
     */
    public static int G_UNICODE_SCRIPT_UGARITIC() {
        return (int)53L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_NEW_TAI_LUE = 54;
     * }
     */
    public static int G_UNICODE_SCRIPT_NEW_TAI_LUE() {
        return (int)54L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_BUGINESE = 55;
     * }
     */
    public static int G_UNICODE_SCRIPT_BUGINESE() {
        return (int)55L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_GLAGOLITIC = 56;
     * }
     */
    public static int G_UNICODE_SCRIPT_GLAGOLITIC() {
        return (int)56L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_TIFINAGH = 57;
     * }
     */
    public static int G_UNICODE_SCRIPT_TIFINAGH() {
        return (int)57L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_SYLOTI_NAGRI = 58;
     * }
     */
    public static int G_UNICODE_SCRIPT_SYLOTI_NAGRI() {
        return (int)58L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_OLD_PERSIAN = 59;
     * }
     */
    public static int G_UNICODE_SCRIPT_OLD_PERSIAN() {
        return (int)59L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_KHAROSHTHI = 60;
     * }
     */
    public static int G_UNICODE_SCRIPT_KHAROSHTHI() {
        return (int)60L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_UNKNOWN = 61;
     * }
     */
    public static int G_UNICODE_SCRIPT_UNKNOWN() {
        return (int)61L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_BALINESE = 62;
     * }
     */
    public static int G_UNICODE_SCRIPT_BALINESE() {
        return (int)62L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_CUNEIFORM = 63;
     * }
     */
    public static int G_UNICODE_SCRIPT_CUNEIFORM() {
        return (int)63L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_PHOENICIAN = 64;
     * }
     */
    public static int G_UNICODE_SCRIPT_PHOENICIAN() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_PHAGS_PA = 65;
     * }
     */
    public static int G_UNICODE_SCRIPT_PHAGS_PA() {
        return (int)65L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_NKO = 66;
     * }
     */
    public static int G_UNICODE_SCRIPT_NKO() {
        return (int)66L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_KAYAH_LI = 67;
     * }
     */
    public static int G_UNICODE_SCRIPT_KAYAH_LI() {
        return (int)67L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_LEPCHA = 68;
     * }
     */
    public static int G_UNICODE_SCRIPT_LEPCHA() {
        return (int)68L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_REJANG = 69;
     * }
     */
    public static int G_UNICODE_SCRIPT_REJANG() {
        return (int)69L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_SUNDANESE = 70;
     * }
     */
    public static int G_UNICODE_SCRIPT_SUNDANESE() {
        return (int)70L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_SAURASHTRA = 71;
     * }
     */
    public static int G_UNICODE_SCRIPT_SAURASHTRA() {
        return (int)71L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_CHAM = 72;
     * }
     */
    public static int G_UNICODE_SCRIPT_CHAM() {
        return (int)72L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_OL_CHIKI = 73;
     * }
     */
    public static int G_UNICODE_SCRIPT_OL_CHIKI() {
        return (int)73L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_VAI = 74;
     * }
     */
    public static int G_UNICODE_SCRIPT_VAI() {
        return (int)74L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_CARIAN = 75;
     * }
     */
    public static int G_UNICODE_SCRIPT_CARIAN() {
        return (int)75L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_LYCIAN = 76;
     * }
     */
    public static int G_UNICODE_SCRIPT_LYCIAN() {
        return (int)76L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_LYDIAN = 77;
     * }
     */
    public static int G_UNICODE_SCRIPT_LYDIAN() {
        return (int)77L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_AVESTAN = 78;
     * }
     */
    public static int G_UNICODE_SCRIPT_AVESTAN() {
        return (int)78L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_BAMUM = 79;
     * }
     */
    public static int G_UNICODE_SCRIPT_BAMUM() {
        return (int)79L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_EGYPTIAN_HIEROGLYPHS = 80;
     * }
     */
    public static int G_UNICODE_SCRIPT_EGYPTIAN_HIEROGLYPHS() {
        return (int)80L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_IMPERIAL_ARAMAIC = 81;
     * }
     */
    public static int G_UNICODE_SCRIPT_IMPERIAL_ARAMAIC() {
        return (int)81L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_INSCRIPTIONAL_PAHLAVI = 82;
     * }
     */
    public static int G_UNICODE_SCRIPT_INSCRIPTIONAL_PAHLAVI() {
        return (int)82L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_INSCRIPTIONAL_PARTHIAN = 83;
     * }
     */
    public static int G_UNICODE_SCRIPT_INSCRIPTIONAL_PARTHIAN() {
        return (int)83L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_JAVANESE = 84;
     * }
     */
    public static int G_UNICODE_SCRIPT_JAVANESE() {
        return (int)84L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_KAITHI = 85;
     * }
     */
    public static int G_UNICODE_SCRIPT_KAITHI() {
        return (int)85L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_LISU = 86;
     * }
     */
    public static int G_UNICODE_SCRIPT_LISU() {
        return (int)86L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_MEETEI_MAYEK = 87;
     * }
     */
    public static int G_UNICODE_SCRIPT_MEETEI_MAYEK() {
        return (int)87L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_OLD_SOUTH_ARABIAN = 88;
     * }
     */
    public static int G_UNICODE_SCRIPT_OLD_SOUTH_ARABIAN() {
        return (int)88L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_OLD_TURKIC = 89;
     * }
     */
    public static int G_UNICODE_SCRIPT_OLD_TURKIC() {
        return (int)89L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_SAMARITAN = 90;
     * }
     */
    public static int G_UNICODE_SCRIPT_SAMARITAN() {
        return (int)90L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_TAI_THAM = 91;
     * }
     */
    public static int G_UNICODE_SCRIPT_TAI_THAM() {
        return (int)91L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_TAI_VIET = 92;
     * }
     */
    public static int G_UNICODE_SCRIPT_TAI_VIET() {
        return (int)92L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_BATAK = 93;
     * }
     */
    public static int G_UNICODE_SCRIPT_BATAK() {
        return (int)93L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_BRAHMI = 94;
     * }
     */
    public static int G_UNICODE_SCRIPT_BRAHMI() {
        return (int)94L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_MANDAIC = 95;
     * }
     */
    public static int G_UNICODE_SCRIPT_MANDAIC() {
        return (int)95L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_CHAKMA = 96;
     * }
     */
    public static int G_UNICODE_SCRIPT_CHAKMA() {
        return (int)96L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_MEROITIC_CURSIVE = 97;
     * }
     */
    public static int G_UNICODE_SCRIPT_MEROITIC_CURSIVE() {
        return (int)97L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_MEROITIC_HIEROGLYPHS = 98;
     * }
     */
    public static int G_UNICODE_SCRIPT_MEROITIC_HIEROGLYPHS() {
        return (int)98L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_MIAO = 99;
     * }
     */
    public static int G_UNICODE_SCRIPT_MIAO() {
        return (int)99L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_SHARADA = 100;
     * }
     */
    public static int G_UNICODE_SCRIPT_SHARADA() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_SORA_SOMPENG = 101;
     * }
     */
    public static int G_UNICODE_SCRIPT_SORA_SOMPENG() {
        return (int)101L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_TAKRI = 102;
     * }
     */
    public static int G_UNICODE_SCRIPT_TAKRI() {
        return (int)102L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_BASSA_VAH = 103;
     * }
     */
    public static int G_UNICODE_SCRIPT_BASSA_VAH() {
        return (int)103L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_CAUCASIAN_ALBANIAN = 104;
     * }
     */
    public static int G_UNICODE_SCRIPT_CAUCASIAN_ALBANIAN() {
        return (int)104L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_DUPLOYAN = 105;
     * }
     */
    public static int G_UNICODE_SCRIPT_DUPLOYAN() {
        return (int)105L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_ELBASAN = 106;
     * }
     */
    public static int G_UNICODE_SCRIPT_ELBASAN() {
        return (int)106L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_GRANTHA = 107;
     * }
     */
    public static int G_UNICODE_SCRIPT_GRANTHA() {
        return (int)107L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_KHOJKI = 108;
     * }
     */
    public static int G_UNICODE_SCRIPT_KHOJKI() {
        return (int)108L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_KHUDAWADI = 109;
     * }
     */
    public static int G_UNICODE_SCRIPT_KHUDAWADI() {
        return (int)109L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_LINEAR_A = 110;
     * }
     */
    public static int G_UNICODE_SCRIPT_LINEAR_A() {
        return (int)110L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_MAHAJANI = 111;
     * }
     */
    public static int G_UNICODE_SCRIPT_MAHAJANI() {
        return (int)111L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_MANICHAEAN = 112;
     * }
     */
    public static int G_UNICODE_SCRIPT_MANICHAEAN() {
        return (int)112L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_MENDE_KIKAKUI = 113;
     * }
     */
    public static int G_UNICODE_SCRIPT_MENDE_KIKAKUI() {
        return (int)113L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_MODI = 114;
     * }
     */
    public static int G_UNICODE_SCRIPT_MODI() {
        return (int)114L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_MRO = 115;
     * }
     */
    public static int G_UNICODE_SCRIPT_MRO() {
        return (int)115L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_NABATAEAN = 116;
     * }
     */
    public static int G_UNICODE_SCRIPT_NABATAEAN() {
        return (int)116L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_OLD_NORTH_ARABIAN = 117;
     * }
     */
    public static int G_UNICODE_SCRIPT_OLD_NORTH_ARABIAN() {
        return (int)117L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_OLD_PERMIC = 118;
     * }
     */
    public static int G_UNICODE_SCRIPT_OLD_PERMIC() {
        return (int)118L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_PAHAWH_HMONG = 119;
     * }
     */
    public static int G_UNICODE_SCRIPT_PAHAWH_HMONG() {
        return (int)119L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_PALMYRENE = 120;
     * }
     */
    public static int G_UNICODE_SCRIPT_PALMYRENE() {
        return (int)120L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_PAU_CIN_HAU = 121;
     * }
     */
    public static int G_UNICODE_SCRIPT_PAU_CIN_HAU() {
        return (int)121L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_PSALTER_PAHLAVI = 122;
     * }
     */
    public static int G_UNICODE_SCRIPT_PSALTER_PAHLAVI() {
        return (int)122L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_SIDDHAM = 123;
     * }
     */
    public static int G_UNICODE_SCRIPT_SIDDHAM() {
        return (int)123L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_TIRHUTA = 124;
     * }
     */
    public static int G_UNICODE_SCRIPT_TIRHUTA() {
        return (int)124L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_WARANG_CITI = 125;
     * }
     */
    public static int G_UNICODE_SCRIPT_WARANG_CITI() {
        return (int)125L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_AHOM = 126;
     * }
     */
    public static int G_UNICODE_SCRIPT_AHOM() {
        return (int)126L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_ANATOLIAN_HIEROGLYPHS = 127;
     * }
     */
    public static int G_UNICODE_SCRIPT_ANATOLIAN_HIEROGLYPHS() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_HATRAN = 128;
     * }
     */
    public static int G_UNICODE_SCRIPT_HATRAN() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_MULTANI = 129;
     * }
     */
    public static int G_UNICODE_SCRIPT_MULTANI() {
        return (int)129L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_OLD_HUNGARIAN = 130;
     * }
     */
    public static int G_UNICODE_SCRIPT_OLD_HUNGARIAN() {
        return (int)130L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_SIGNWRITING = 131;
     * }
     */
    public static int G_UNICODE_SCRIPT_SIGNWRITING() {
        return (int)131L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_ADLAM = 132;
     * }
     */
    public static int G_UNICODE_SCRIPT_ADLAM() {
        return (int)132L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_BHAIKSUKI = 133;
     * }
     */
    public static int G_UNICODE_SCRIPT_BHAIKSUKI() {
        return (int)133L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_MARCHEN = 134;
     * }
     */
    public static int G_UNICODE_SCRIPT_MARCHEN() {
        return (int)134L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_NEWA = 135;
     * }
     */
    public static int G_UNICODE_SCRIPT_NEWA() {
        return (int)135L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_OSAGE = 136;
     * }
     */
    public static int G_UNICODE_SCRIPT_OSAGE() {
        return (int)136L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_TANGUT = 137;
     * }
     */
    public static int G_UNICODE_SCRIPT_TANGUT() {
        return (int)137L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_MASARAM_GONDI = 138;
     * }
     */
    public static int G_UNICODE_SCRIPT_MASARAM_GONDI() {
        return (int)138L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_NUSHU = 139;
     * }
     */
    public static int G_UNICODE_SCRIPT_NUSHU() {
        return (int)139L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_SOYOMBO = 140;
     * }
     */
    public static int G_UNICODE_SCRIPT_SOYOMBO() {
        return (int)140L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_ZANABAZAR_SQUARE = 141;
     * }
     */
    public static int G_UNICODE_SCRIPT_ZANABAZAR_SQUARE() {
        return (int)141L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_DOGRA = 142;
     * }
     */
    public static int G_UNICODE_SCRIPT_DOGRA() {
        return (int)142L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_GUNJALA_GONDI = 143;
     * }
     */
    public static int G_UNICODE_SCRIPT_GUNJALA_GONDI() {
        return (int)143L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_HANIFI_ROHINGYA = 144;
     * }
     */
    public static int G_UNICODE_SCRIPT_HANIFI_ROHINGYA() {
        return (int)144L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_MAKASAR = 145;
     * }
     */
    public static int G_UNICODE_SCRIPT_MAKASAR() {
        return (int)145L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_MEDEFAIDRIN = 146;
     * }
     */
    public static int G_UNICODE_SCRIPT_MEDEFAIDRIN() {
        return (int)146L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_OLD_SOGDIAN = 147;
     * }
     */
    public static int G_UNICODE_SCRIPT_OLD_SOGDIAN() {
        return (int)147L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_SOGDIAN = 148;
     * }
     */
    public static int G_UNICODE_SCRIPT_SOGDIAN() {
        return (int)148L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_ELYMAIC = 149;
     * }
     */
    public static int G_UNICODE_SCRIPT_ELYMAIC() {
        return (int)149L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_NANDINAGARI = 150;
     * }
     */
    public static int G_UNICODE_SCRIPT_NANDINAGARI() {
        return (int)150L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_NYIAKENG_PUACHUE_HMONG = 151;
     * }
     */
    public static int G_UNICODE_SCRIPT_NYIAKENG_PUACHUE_HMONG() {
        return (int)151L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_WANCHO = 152;
     * }
     */
    public static int G_UNICODE_SCRIPT_WANCHO() {
        return (int)152L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_CHORASMIAN = 153;
     * }
     */
    public static int G_UNICODE_SCRIPT_CHORASMIAN() {
        return (int)153L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_DIVES_AKURU = 154;
     * }
     */
    public static int G_UNICODE_SCRIPT_DIVES_AKURU() {
        return (int)154L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_KHITAN_SMALL_SCRIPT = 155;
     * }
     */
    public static int G_UNICODE_SCRIPT_KHITAN_SMALL_SCRIPT() {
        return (int)155L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_YEZIDI = 156;
     * }
     */
    public static int G_UNICODE_SCRIPT_YEZIDI() {
        return (int)156L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_CYPRO_MINOAN = 157;
     * }
     */
    public static int G_UNICODE_SCRIPT_CYPRO_MINOAN() {
        return (int)157L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_OLD_UYGHUR = 158;
     * }
     */
    public static int G_UNICODE_SCRIPT_OLD_UYGHUR() {
        return (int)158L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_TANGSA = 159;
     * }
     */
    public static int G_UNICODE_SCRIPT_TANGSA() {
        return (int)159L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_TOTO = 160;
     * }
     */
    public static int G_UNICODE_SCRIPT_TOTO() {
        return (int)160L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_VITHKUQI = 161;
     * }
     */
    public static int G_UNICODE_SCRIPT_VITHKUQI() {
        return (int)161L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_MATH = 162;
     * }
     */
    public static int G_UNICODE_SCRIPT_MATH() {
        return (int)162L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_KAWI = 163;
     * }
     */
    public static int G_UNICODE_SCRIPT_KAWI() {
        return (int)163L;
    }
    /**
     * {@snippet :
     * enum GUnicodeScript.G_UNICODE_SCRIPT_NAG_MUNDARI = 164;
     * }
     */
    public static int G_UNICODE_SCRIPT_NAG_MUNDARI() {
        return (int)164L;
    }
    public static MethodHandle g_unicode_script_to_iso15924$MH() {
        return RuntimeHelper.requireNonNull(constants$283.const$1,"g_unicode_script_to_iso15924");
    }
    /**
     * {@snippet :
     * unsigned int g_unicode_script_to_iso15924(enum GUnicodeScript script);
     * }
     */
    public static int g_unicode_script_to_iso15924(int script) {
        var mh$ = g_unicode_script_to_iso15924$MH();
        try {
            return (int)mh$.invokeExact(script);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unicode_script_from_iso15924$MH() {
        return RuntimeHelper.requireNonNull(constants$283.const$2,"g_unicode_script_from_iso15924");
    }
    /**
     * {@snippet :
     * enum GUnicodeScript g_unicode_script_from_iso15924(unsigned int iso15924);
     * }
     */
    public static int g_unicode_script_from_iso15924(int iso15924) {
        var mh$ = g_unicode_script_from_iso15924$MH();
        try {
            return (int)mh$.invokeExact(iso15924);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isalnum$MH() {
        return RuntimeHelper.requireNonNull(constants$283.const$3,"g_unichar_isalnum");
    }
    /**
     * {@snippet :
     * int g_unichar_isalnum(unsigned int c);
     * }
     */
    public static int g_unichar_isalnum(int c) {
        var mh$ = g_unichar_isalnum$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isalpha$MH() {
        return RuntimeHelper.requireNonNull(constants$283.const$4,"g_unichar_isalpha");
    }
    /**
     * {@snippet :
     * int g_unichar_isalpha(unsigned int c);
     * }
     */
    public static int g_unichar_isalpha(int c) {
        var mh$ = g_unichar_isalpha$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_iscntrl$MH() {
        return RuntimeHelper.requireNonNull(constants$283.const$5,"g_unichar_iscntrl");
    }
    /**
     * {@snippet :
     * int g_unichar_iscntrl(unsigned int c);
     * }
     */
    public static int g_unichar_iscntrl(int c) {
        var mh$ = g_unichar_iscntrl$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isdigit$MH() {
        return RuntimeHelper.requireNonNull(constants$284.const$0,"g_unichar_isdigit");
    }
    /**
     * {@snippet :
     * int g_unichar_isdigit(unsigned int c);
     * }
     */
    public static int g_unichar_isdigit(int c) {
        var mh$ = g_unichar_isdigit$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isgraph$MH() {
        return RuntimeHelper.requireNonNull(constants$284.const$1,"g_unichar_isgraph");
    }
    /**
     * {@snippet :
     * int g_unichar_isgraph(unsigned int c);
     * }
     */
    public static int g_unichar_isgraph(int c) {
        var mh$ = g_unichar_isgraph$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_islower$MH() {
        return RuntimeHelper.requireNonNull(constants$284.const$2,"g_unichar_islower");
    }
    /**
     * {@snippet :
     * int g_unichar_islower(unsigned int c);
     * }
     */
    public static int g_unichar_islower(int c) {
        var mh$ = g_unichar_islower$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isprint$MH() {
        return RuntimeHelper.requireNonNull(constants$284.const$3,"g_unichar_isprint");
    }
    /**
     * {@snippet :
     * int g_unichar_isprint(unsigned int c);
     * }
     */
    public static int g_unichar_isprint(int c) {
        var mh$ = g_unichar_isprint$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_ispunct$MH() {
        return RuntimeHelper.requireNonNull(constants$284.const$4,"g_unichar_ispunct");
    }
    /**
     * {@snippet :
     * int g_unichar_ispunct(unsigned int c);
     * }
     */
    public static int g_unichar_ispunct(int c) {
        var mh$ = g_unichar_ispunct$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isspace$MH() {
        return RuntimeHelper.requireNonNull(constants$284.const$5,"g_unichar_isspace");
    }
    /**
     * {@snippet :
     * int g_unichar_isspace(unsigned int c);
     * }
     */
    public static int g_unichar_isspace(int c) {
        var mh$ = g_unichar_isspace$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isupper$MH() {
        return RuntimeHelper.requireNonNull(constants$285.const$0,"g_unichar_isupper");
    }
    /**
     * {@snippet :
     * int g_unichar_isupper(unsigned int c);
     * }
     */
    public static int g_unichar_isupper(int c) {
        var mh$ = g_unichar_isupper$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isxdigit$MH() {
        return RuntimeHelper.requireNonNull(constants$285.const$1,"g_unichar_isxdigit");
    }
    /**
     * {@snippet :
     * int g_unichar_isxdigit(unsigned int c);
     * }
     */
    public static int g_unichar_isxdigit(int c) {
        var mh$ = g_unichar_isxdigit$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_istitle$MH() {
        return RuntimeHelper.requireNonNull(constants$285.const$2,"g_unichar_istitle");
    }
    /**
     * {@snippet :
     * int g_unichar_istitle(unsigned int c);
     * }
     */
    public static int g_unichar_istitle(int c) {
        var mh$ = g_unichar_istitle$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isdefined$MH() {
        return RuntimeHelper.requireNonNull(constants$285.const$3,"g_unichar_isdefined");
    }
    /**
     * {@snippet :
     * int g_unichar_isdefined(unsigned int c);
     * }
     */
    public static int g_unichar_isdefined(int c) {
        var mh$ = g_unichar_isdefined$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_iswide$MH() {
        return RuntimeHelper.requireNonNull(constants$285.const$4,"g_unichar_iswide");
    }
    /**
     * {@snippet :
     * int g_unichar_iswide(unsigned int c);
     * }
     */
    public static int g_unichar_iswide(int c) {
        var mh$ = g_unichar_iswide$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_iswide_cjk$MH() {
        return RuntimeHelper.requireNonNull(constants$285.const$5,"g_unichar_iswide_cjk");
    }
    /**
     * {@snippet :
     * int g_unichar_iswide_cjk(unsigned int c);
     * }
     */
    public static int g_unichar_iswide_cjk(int c) {
        var mh$ = g_unichar_iswide_cjk$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_iszerowidth$MH() {
        return RuntimeHelper.requireNonNull(constants$286.const$0,"g_unichar_iszerowidth");
    }
    /**
     * {@snippet :
     * int g_unichar_iszerowidth(unsigned int c);
     * }
     */
    public static int g_unichar_iszerowidth(int c) {
        var mh$ = g_unichar_iszerowidth$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_ismark$MH() {
        return RuntimeHelper.requireNonNull(constants$286.const$1,"g_unichar_ismark");
    }
    /**
     * {@snippet :
     * int g_unichar_ismark(unsigned int c);
     * }
     */
    public static int g_unichar_ismark(int c) {
        var mh$ = g_unichar_ismark$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_toupper$MH() {
        return RuntimeHelper.requireNonNull(constants$286.const$2,"g_unichar_toupper");
    }
    /**
     * {@snippet :
     * unsigned int g_unichar_toupper(unsigned int c);
     * }
     */
    public static int g_unichar_toupper(int c) {
        var mh$ = g_unichar_toupper$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_tolower$MH() {
        return RuntimeHelper.requireNonNull(constants$286.const$3,"g_unichar_tolower");
    }
    /**
     * {@snippet :
     * unsigned int g_unichar_tolower(unsigned int c);
     * }
     */
    public static int g_unichar_tolower(int c) {
        var mh$ = g_unichar_tolower$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_totitle$MH() {
        return RuntimeHelper.requireNonNull(constants$286.const$4,"g_unichar_totitle");
    }
    /**
     * {@snippet :
     * unsigned int g_unichar_totitle(unsigned int c);
     * }
     */
    public static int g_unichar_totitle(int c) {
        var mh$ = g_unichar_totitle$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_digit_value$MH() {
        return RuntimeHelper.requireNonNull(constants$286.const$5,"g_unichar_digit_value");
    }
    /**
     * {@snippet :
     * int g_unichar_digit_value(unsigned int c);
     * }
     */
    public static int g_unichar_digit_value(int c) {
        var mh$ = g_unichar_digit_value$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_xdigit_value$MH() {
        return RuntimeHelper.requireNonNull(constants$287.const$0,"g_unichar_xdigit_value");
    }
    /**
     * {@snippet :
     * int g_unichar_xdigit_value(unsigned int c);
     * }
     */
    public static int g_unichar_xdigit_value(int c) {
        var mh$ = g_unichar_xdigit_value$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_type$MH() {
        return RuntimeHelper.requireNonNull(constants$287.const$1,"g_unichar_type");
    }
    /**
     * {@snippet :
     * enum GUnicodeType g_unichar_type(unsigned int c);
     * }
     */
    public static int g_unichar_type(int c) {
        var mh$ = g_unichar_type$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_break_type$MH() {
        return RuntimeHelper.requireNonNull(constants$287.const$2,"g_unichar_break_type");
    }
    /**
     * {@snippet :
     * enum GUnicodeBreakType g_unichar_break_type(unsigned int c);
     * }
     */
    public static int g_unichar_break_type(int c) {
        var mh$ = g_unichar_break_type$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_combining_class$MH() {
        return RuntimeHelper.requireNonNull(constants$287.const$3,"g_unichar_combining_class");
    }
    /**
     * {@snippet :
     * int g_unichar_combining_class(unsigned int uc);
     * }
     */
    public static int g_unichar_combining_class(int uc) {
        var mh$ = g_unichar_combining_class$MH();
        try {
            return (int)mh$.invokeExact(uc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_get_mirror_char$MH() {
        return RuntimeHelper.requireNonNull(constants$287.const$4,"g_unichar_get_mirror_char");
    }
    /**
     * {@snippet :
     * int g_unichar_get_mirror_char(unsigned int ch, unsigned int* mirrored_ch);
     * }
     */
    public static int g_unichar_get_mirror_char(int ch, MemorySegment mirrored_ch) {
        var mh$ = g_unichar_get_mirror_char$MH();
        try {
            return (int)mh$.invokeExact(ch, mirrored_ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_get_script$MH() {
        return RuntimeHelper.requireNonNull(constants$287.const$5,"g_unichar_get_script");
    }
    /**
     * {@snippet :
     * enum GUnicodeScript g_unichar_get_script(unsigned int ch);
     * }
     */
    public static int g_unichar_get_script(int ch) {
        var mh$ = g_unichar_get_script$MH();
        try {
            return (int)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_validate$MH() {
        return RuntimeHelper.requireNonNull(constants$288.const$0,"g_unichar_validate");
    }
    /**
     * {@snippet :
     * int g_unichar_validate(unsigned int ch);
     * }
     */
    public static int g_unichar_validate(int ch) {
        var mh$ = g_unichar_validate$MH();
        try {
            return (int)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_compose$MH() {
        return RuntimeHelper.requireNonNull(constants$288.const$2,"g_unichar_compose");
    }
    /**
     * {@snippet :
     * int g_unichar_compose(unsigned int a, unsigned int b, unsigned int* ch);
     * }
     */
    public static int g_unichar_compose(int a, int b, MemorySegment ch) {
        var mh$ = g_unichar_compose$MH();
        try {
            return (int)mh$.invokeExact(a, b, ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_decompose$MH() {
        return RuntimeHelper.requireNonNull(constants$288.const$3,"g_unichar_decompose");
    }
    /**
     * {@snippet :
     * int g_unichar_decompose(unsigned int ch, unsigned int* a, unsigned int* b);
     * }
     */
    public static int g_unichar_decompose(int ch, MemorySegment a, MemorySegment b) {
        var mh$ = g_unichar_decompose$MH();
        try {
            return (int)mh$.invokeExact(ch, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_fully_decompose$MH() {
        return RuntimeHelper.requireNonNull(constants$288.const$5,"g_unichar_fully_decompose");
    }
    /**
     * {@snippet :
     * unsigned long g_unichar_fully_decompose(unsigned int ch, int compat, unsigned int* result, unsigned long result_len);
     * }
     */
    public static long g_unichar_fully_decompose(int ch, int compat, MemorySegment result, long result_len) {
        var mh$ = g_unichar_fully_decompose$MH();
        try {
            return (long)mh$.invokeExact(ch, compat, result, result_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unicode_canonical_ordering$MH() {
        return RuntimeHelper.requireNonNull(constants$289.const$0,"g_unicode_canonical_ordering");
    }
    /**
     * {@snippet :
     * void g_unicode_canonical_ordering(unsigned int* string, unsigned long len);
     * }
     */
    public static void g_unicode_canonical_ordering(MemorySegment string, long len) {
        var mh$ = g_unicode_canonical_ordering$MH();
        try {
            mh$.invokeExact(string, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unicode_canonical_decomposition$MH() {
        return RuntimeHelper.requireNonNull(constants$289.const$1,"g_unicode_canonical_decomposition");
    }
    /**
     * {@snippet :
     * unsigned int* g_unicode_canonical_decomposition(unsigned int ch, unsigned long* result_len);
     * }
     */
    public static MemorySegment g_unicode_canonical_decomposition(int ch, MemorySegment result_len) {
        var mh$ = g_unicode_canonical_decomposition$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(ch, result_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout g_utf8_skip$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle g_utf8_skip$VH() {
        return constants$211.const$1;
    }
    public static MemorySegment g_utf8_skip$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$289.const$2,"g_utf8_skip");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * char* g_utf8_skip;
     * }
     */
    public static MemorySegment g_utf8_skip$get() {
        return (java.lang.foreign.MemorySegment) constants$211.const$1.get(RuntimeHelper.requireNonNull(constants$289.const$2, "g_utf8_skip"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * char* g_utf8_skip;
     * }
     */
    public static void g_utf8_skip$set(MemorySegment x) {
        constants$211.const$1.set(RuntimeHelper.requireNonNull(constants$289.const$2, "g_utf8_skip"), x);
    }
    public static MethodHandle g_utf8_get_char$MH() {
        return RuntimeHelper.requireNonNull(constants$289.const$3,"g_utf8_get_char");
    }
    /**
     * {@snippet :
     * unsigned int g_utf8_get_char(char* p);
     * }
     */
    public static int g_utf8_get_char(MemorySegment p) {
        var mh$ = g_utf8_get_char$MH();
        try {
            return (int)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_get_char_validated$MH() {
        return RuntimeHelper.requireNonNull(constants$289.const$4,"g_utf8_get_char_validated");
    }
    /**
     * {@snippet :
     * unsigned int g_utf8_get_char_validated(char* p, long max_len);
     * }
     */
    public static int g_utf8_get_char_validated(MemorySegment p, long max_len) {
        var mh$ = g_utf8_get_char_validated$MH();
        try {
            return (int)mh$.invokeExact(p, max_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_offset_to_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$289.const$5,"g_utf8_offset_to_pointer");
    }
    /**
     * {@snippet :
     * char* g_utf8_offset_to_pointer(char* str, long offset);
     * }
     */
    public static MemorySegment g_utf8_offset_to_pointer(MemorySegment str, long offset) {
        var mh$ = g_utf8_offset_to_pointer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_pointer_to_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$290.const$0,"g_utf8_pointer_to_offset");
    }
    /**
     * {@snippet :
     * long g_utf8_pointer_to_offset(char* str, char* pos);
     * }
     */
    public static long g_utf8_pointer_to_offset(MemorySegment str, MemorySegment pos) {
        var mh$ = g_utf8_pointer_to_offset$MH();
        try {
            return (long)mh$.invokeExact(str, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_prev_char$MH() {
        return RuntimeHelper.requireNonNull(constants$290.const$1,"g_utf8_prev_char");
    }
    /**
     * {@snippet :
     * char* g_utf8_prev_char(char* p);
     * }
     */
    public static MemorySegment g_utf8_prev_char(MemorySegment p) {
        var mh$ = g_utf8_prev_char$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_find_next_char$MH() {
        return RuntimeHelper.requireNonNull(constants$290.const$2,"g_utf8_find_next_char");
    }
    /**
     * {@snippet :
     * char* g_utf8_find_next_char(char* p, char* end);
     * }
     */
    public static MemorySegment g_utf8_find_next_char(MemorySegment p, MemorySegment end) {
        var mh$ = g_utf8_find_next_char$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(p, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_find_prev_char$MH() {
        return RuntimeHelper.requireNonNull(constants$290.const$3,"g_utf8_find_prev_char");
    }
    /**
     * {@snippet :
     * char* g_utf8_find_prev_char(char* str, char* p);
     * }
     */
    public static MemorySegment g_utf8_find_prev_char(MemorySegment str, MemorySegment p) {
        var mh$ = g_utf8_find_prev_char$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strlen$MH() {
        return RuntimeHelper.requireNonNull(constants$290.const$4,"g_utf8_strlen");
    }
    /**
     * {@snippet :
     * long g_utf8_strlen(char* p, long max);
     * }
     */
    public static long g_utf8_strlen(MemorySegment p, long max) {
        var mh$ = g_utf8_strlen$MH();
        try {
            return (long)mh$.invokeExact(p, max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_substring$MH() {
        return RuntimeHelper.requireNonNull(constants$290.const$5,"g_utf8_substring");
    }
    /**
     * {@snippet :
     * char* g_utf8_substring(char* str, long start_pos, long end_pos);
     * }
     */
    public static MemorySegment g_utf8_substring(MemorySegment str, long start_pos, long end_pos) {
        var mh$ = g_utf8_substring$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strncpy$MH() {
        return RuntimeHelper.requireNonNull(constants$291.const$0,"g_utf8_strncpy");
    }
    /**
     * {@snippet :
     * char* g_utf8_strncpy(char* dest, char* src, unsigned long n);
     * }
     */
    public static MemorySegment g_utf8_strncpy(MemorySegment dest, MemorySegment src, long n) {
        var mh$ = g_utf8_strncpy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(dest, src, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strchr$MH() {
        return RuntimeHelper.requireNonNull(constants$291.const$2,"g_utf8_strchr");
    }
    /**
     * {@snippet :
     * char* g_utf8_strchr(char* p, long len, unsigned int c);
     * }
     */
    public static MemorySegment g_utf8_strchr(MemorySegment p, long len, int c) {
        var mh$ = g_utf8_strchr$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(p, len, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strrchr$MH() {
        return RuntimeHelper.requireNonNull(constants$291.const$3,"g_utf8_strrchr");
    }
    /**
     * {@snippet :
     * char* g_utf8_strrchr(char* p, long len, unsigned int c);
     * }
     */
    public static MemorySegment g_utf8_strrchr(MemorySegment p, long len, int c) {
        var mh$ = g_utf8_strrchr$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(p, len, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strreverse$MH() {
        return RuntimeHelper.requireNonNull(constants$291.const$4,"g_utf8_strreverse");
    }
    /**
     * {@snippet :
     * char* g_utf8_strreverse(char* str, long len);
     * }
     */
    public static MemorySegment g_utf8_strreverse(MemorySegment str, long len) {
        var mh$ = g_utf8_strreverse$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_to_utf16$MH() {
        return RuntimeHelper.requireNonNull(constants$291.const$5,"g_utf8_to_utf16");
    }
    /**
     * {@snippet :
     * unsigned short* g_utf8_to_utf16(char* str, long len, long* items_read, long* items_written, struct _GError** error);
     * }
     */
    public static MemorySegment g_utf8_to_utf16(MemorySegment str, long len, MemorySegment items_read, MemorySegment items_written, MemorySegment error) {
        var mh$ = g_utf8_to_utf16$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, len, items_read, items_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_to_ucs4$MH() {
        return RuntimeHelper.requireNonNull(constants$292.const$0,"g_utf8_to_ucs4");
    }
    /**
     * {@snippet :
     * unsigned int* g_utf8_to_ucs4(char* str, long len, long* items_read, long* items_written, struct _GError** error);
     * }
     */
    public static MemorySegment g_utf8_to_ucs4(MemorySegment str, long len, MemorySegment items_read, MemorySegment items_written, MemorySegment error) {
        var mh$ = g_utf8_to_ucs4$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, len, items_read, items_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_to_ucs4_fast$MH() {
        return RuntimeHelper.requireNonNull(constants$292.const$1,"g_utf8_to_ucs4_fast");
    }
    /**
     * {@snippet :
     * unsigned int* g_utf8_to_ucs4_fast(char* str, long len, long* items_written);
     * }
     */
    public static MemorySegment g_utf8_to_ucs4_fast(MemorySegment str, long len, MemorySegment items_written) {
        var mh$ = g_utf8_to_ucs4_fast$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, len, items_written);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf16_to_ucs4$MH() {
        return RuntimeHelper.requireNonNull(constants$292.const$2,"g_utf16_to_ucs4");
    }
    /**
     * {@snippet :
     * unsigned int* g_utf16_to_ucs4(unsigned short* str, long len, long* items_read, long* items_written, struct _GError** error);
     * }
     */
    public static MemorySegment g_utf16_to_ucs4(MemorySegment str, long len, MemorySegment items_read, MemorySegment items_written, MemorySegment error) {
        var mh$ = g_utf16_to_ucs4$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, len, items_read, items_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf16_to_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$292.const$3,"g_utf16_to_utf8");
    }
    /**
     * {@snippet :
     * char* g_utf16_to_utf8(unsigned short* str, long len, long* items_read, long* items_written, struct _GError** error);
     * }
     */
    public static MemorySegment g_utf16_to_utf8(MemorySegment str, long len, MemorySegment items_read, MemorySegment items_written, MemorySegment error) {
        var mh$ = g_utf16_to_utf8$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, len, items_read, items_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ucs4_to_utf16$MH() {
        return RuntimeHelper.requireNonNull(constants$292.const$4,"g_ucs4_to_utf16");
    }
    /**
     * {@snippet :
     * unsigned short* g_ucs4_to_utf16(unsigned int* str, long len, long* items_read, long* items_written, struct _GError** error);
     * }
     */
    public static MemorySegment g_ucs4_to_utf16(MemorySegment str, long len, MemorySegment items_read, MemorySegment items_written, MemorySegment error) {
        var mh$ = g_ucs4_to_utf16$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, len, items_read, items_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ucs4_to_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$292.const$5,"g_ucs4_to_utf8");
    }
    /**
     * {@snippet :
     * char* g_ucs4_to_utf8(unsigned int* str, long len, long* items_read, long* items_written, struct _GError** error);
     * }
     */
    public static MemorySegment g_ucs4_to_utf8(MemorySegment str, long len, MemorySegment items_read, MemorySegment items_written, MemorySegment error) {
        var mh$ = g_ucs4_to_utf8$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, len, items_read, items_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_to_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$293.const$0,"g_unichar_to_utf8");
    }
    /**
     * {@snippet :
     * int g_unichar_to_utf8(unsigned int c, char* outbuf);
     * }
     */
    public static int g_unichar_to_utf8(int c, MemorySegment outbuf) {
        var mh$ = g_unichar_to_utf8$MH();
        try {
            return (int)mh$.invokeExact(c, outbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_validate$MH() {
        return RuntimeHelper.requireNonNull(constants$293.const$1,"g_utf8_validate");
    }
    /**
     * {@snippet :
     * int g_utf8_validate(char* str, long max_len, char** end);
     * }
     */
    public static int g_utf8_validate(MemorySegment str, long max_len, MemorySegment end) {
        var mh$ = g_utf8_validate$MH();
        try {
            return (int)mh$.invokeExact(str, max_len, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_validate_len$MH() {
        return RuntimeHelper.requireNonNull(constants$293.const$2,"g_utf8_validate_len");
    }
    /**
     * {@snippet :
     * int g_utf8_validate_len(char* str, unsigned long max_len, char** end);
     * }
     */
    public static int g_utf8_validate_len(MemorySegment str, long max_len, MemorySegment end) {
        var mh$ = g_utf8_validate_len$MH();
        try {
            return (int)mh$.invokeExact(str, max_len, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strup$MH() {
        return RuntimeHelper.requireNonNull(constants$293.const$3,"g_utf8_strup");
    }
    /**
     * {@snippet :
     * char* g_utf8_strup(char* str, long len);
     * }
     */
    public static MemorySegment g_utf8_strup(MemorySegment str, long len) {
        var mh$ = g_utf8_strup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strdown$MH() {
        return RuntimeHelper.requireNonNull(constants$293.const$4,"g_utf8_strdown");
    }
    /**
     * {@snippet :
     * char* g_utf8_strdown(char* str, long len);
     * }
     */
    public static MemorySegment g_utf8_strdown(MemorySegment str, long len) {
        var mh$ = g_utf8_strdown$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_casefold$MH() {
        return RuntimeHelper.requireNonNull(constants$293.const$5,"g_utf8_casefold");
    }
    /**
     * {@snippet :
     * char* g_utf8_casefold(char* str, long len);
     * }
     */
    public static MemorySegment g_utf8_casefold(MemorySegment str, long len) {
        var mh$ = g_utf8_casefold$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GNormalizeMode.G_NORMALIZE_DEFAULT = 0;
     * }
     */
    public static int G_NORMALIZE_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GNormalizeMode.G_NORMALIZE_NFD = 0;
     * }
     */
    public static int G_NORMALIZE_NFD() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GNormalizeMode.G_NORMALIZE_DEFAULT_COMPOSE = 1;
     * }
     */
    public static int G_NORMALIZE_DEFAULT_COMPOSE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GNormalizeMode.G_NORMALIZE_NFC = 1;
     * }
     */
    public static int G_NORMALIZE_NFC() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GNormalizeMode.G_NORMALIZE_ALL = 2;
     * }
     */
    public static int G_NORMALIZE_ALL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GNormalizeMode.G_NORMALIZE_NFKD = 2;
     * }
     */
    public static int G_NORMALIZE_NFKD() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GNormalizeMode.G_NORMALIZE_ALL_COMPOSE = 3;
     * }
     */
    public static int G_NORMALIZE_ALL_COMPOSE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GNormalizeMode.G_NORMALIZE_NFKC = 3;
     * }
     */
    public static int G_NORMALIZE_NFKC() {
        return (int)3L;
    }
    public static MethodHandle g_utf8_normalize$MH() {
        return RuntimeHelper.requireNonNull(constants$294.const$0,"g_utf8_normalize");
    }
    /**
     * {@snippet :
     * char* g_utf8_normalize(char* str, long len, enum GNormalizeMode mode);
     * }
     */
    public static MemorySegment g_utf8_normalize(MemorySegment str, long len, int mode) {
        var mh$ = g_utf8_normalize$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, len, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_collate$MH() {
        return RuntimeHelper.requireNonNull(constants$294.const$1,"g_utf8_collate");
    }
    /**
     * {@snippet :
     * int g_utf8_collate(char* str1, char* str2);
     * }
     */
    public static int g_utf8_collate(MemorySegment str1, MemorySegment str2) {
        var mh$ = g_utf8_collate$MH();
        try {
            return (int)mh$.invokeExact(str1, str2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_collate_key$MH() {
        return RuntimeHelper.requireNonNull(constants$294.const$2,"g_utf8_collate_key");
    }
    /**
     * {@snippet :
     * char* g_utf8_collate_key(char* str, long len);
     * }
     */
    public static MemorySegment g_utf8_collate_key(MemorySegment str, long len) {
        var mh$ = g_utf8_collate_key$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_collate_key_for_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$294.const$3,"g_utf8_collate_key_for_filename");
    }
    /**
     * {@snippet :
     * char* g_utf8_collate_key_for_filename(char* str, long len);
     * }
     */
    public static MemorySegment g_utf8_collate_key_for_filename(MemorySegment str, long len) {
        var mh$ = g_utf8_collate_key_for_filename$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_make_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$294.const$4,"g_utf8_make_valid");
    }
    /**
     * {@snippet :
     * char* g_utf8_make_valid(char* str, long len);
     * }
     */
    public static MemorySegment g_utf8_make_valid(MemorySegment str, long len) {
        var mh$ = g_utf8_make_valid$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GAsciiType.G_ASCII_ALNUM = 1;
     * }
     */
    public static int G_ASCII_ALNUM() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GAsciiType.G_ASCII_ALPHA = 2;
     * }
     */
    public static int G_ASCII_ALPHA() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GAsciiType.G_ASCII_CNTRL = 4;
     * }
     */
    public static int G_ASCII_CNTRL() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GAsciiType.G_ASCII_DIGIT = 8;
     * }
     */
    public static int G_ASCII_DIGIT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GAsciiType.G_ASCII_GRAPH = 16;
     * }
     */
    public static int G_ASCII_GRAPH() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GAsciiType.G_ASCII_LOWER = 32;
     * }
     */
    public static int G_ASCII_LOWER() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GAsciiType.G_ASCII_PRINT = 64;
     * }
     */
    public static int G_ASCII_PRINT() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum GAsciiType.G_ASCII_PUNCT = 128;
     * }
     */
    public static int G_ASCII_PUNCT() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum GAsciiType.G_ASCII_SPACE = 256;
     * }
     */
    public static int G_ASCII_SPACE() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum GAsciiType.G_ASCII_UPPER = 512;
     * }
     */
    public static int G_ASCII_UPPER() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * enum GAsciiType.G_ASCII_XDIGIT = 1024;
     * }
     */
    public static int G_ASCII_XDIGIT() {
        return (int)1024L;
    }
    public static MemoryLayout g_ascii_table$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle g_ascii_table$VH() {
        return constants$211.const$1;
    }
    public static MemorySegment g_ascii_table$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$294.const$5,"g_ascii_table");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * unsigned short* g_ascii_table;
     * }
     */
    public static MemorySegment g_ascii_table$get() {
        return (java.lang.foreign.MemorySegment) constants$211.const$1.get(RuntimeHelper.requireNonNull(constants$294.const$5, "g_ascii_table"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * unsigned short* g_ascii_table;
     * }
     */
    public static void g_ascii_table$set(MemorySegment x) {
        constants$211.const$1.set(RuntimeHelper.requireNonNull(constants$294.const$5, "g_ascii_table"), x);
    }
    public static MethodHandle g_ascii_tolower$MH() {
        return RuntimeHelper.requireNonNull(constants$295.const$1,"g_ascii_tolower");
    }
    /**
     * {@snippet :
     * char g_ascii_tolower(char c);
     * }
     */
    public static byte g_ascii_tolower(byte c) {
        var mh$ = g_ascii_tolower$MH();
        try {
            return (byte)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ascii_toupper$MH() {
        return RuntimeHelper.requireNonNull(constants$295.const$2,"g_ascii_toupper");
    }
    /**
     * {@snippet :
     * char g_ascii_toupper(char c);
     * }
     */
    public static byte g_ascii_toupper(byte c) {
        var mh$ = g_ascii_toupper$MH();
        try {
            return (byte)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ascii_digit_value$MH() {
        return RuntimeHelper.requireNonNull(constants$295.const$3,"g_ascii_digit_value");
    }
    /**
     * {@snippet :
     * int g_ascii_digit_value(char c);
     * }
     */
    public static int g_ascii_digit_value(byte c) {
        var mh$ = g_ascii_digit_value$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ascii_xdigit_value$MH() {
        return RuntimeHelper.requireNonNull(constants$295.const$4,"g_ascii_xdigit_value");
    }
    /**
     * {@snippet :
     * int g_ascii_xdigit_value(char c);
     * }
     */
    public static int g_ascii_xdigit_value(byte c) {
        var mh$ = g_ascii_xdigit_value$MH();
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strdelimit$MH() {
        return RuntimeHelper.requireNonNull(constants$295.const$6,"g_strdelimit");
    }
    /**
     * {@snippet :
     * char* g_strdelimit(char* string, char* delimiters, char new_delimiter);
     * }
     */
    public static MemorySegment g_strdelimit(MemorySegment string, MemorySegment delimiters, byte new_delimiter) {
        var mh$ = g_strdelimit$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, delimiters, new_delimiter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strcanon$MH() {
        return RuntimeHelper.requireNonNull(constants$296.const$0,"g_strcanon");
    }
    /**
     * {@snippet :
     * char* g_strcanon(char* string, char* valid_chars, char substitutor);
     * }
     */
    public static MemorySegment g_strcanon(MemorySegment string, MemorySegment valid_chars, byte substitutor) {
        var mh$ = g_strcanon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, valid_chars, substitutor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strerror$MH() {
        return RuntimeHelper.requireNonNull(constants$296.const$1,"g_strerror");
    }
    /**
     * {@snippet :
     * char* g_strerror(int errnum);
     * }
     */
    public static MemorySegment g_strerror(int errnum) {
        var mh$ = g_strerror$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(errnum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strsignal$MH() {
        return RuntimeHelper.requireNonNull(constants$296.const$2,"g_strsignal");
    }
    /**
     * {@snippet :
     * char* g_strsignal(int signum);
     * }
     */
    public static MemorySegment g_strsignal(int signum) {
        var mh$ = g_strsignal$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(signum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strreverse$MH() {
        return RuntimeHelper.requireNonNull(constants$296.const$3,"g_strreverse");
    }
    /**
     * {@snippet :
     * char* g_strreverse(char* string);
     * }
     */
    public static MemorySegment g_strreverse(MemorySegment string) {
        var mh$ = g_strreverse$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strlcpy$MH() {
        return RuntimeHelper.requireNonNull(constants$296.const$4,"g_strlcpy");
    }
    /**
     * {@snippet :
     * unsigned long g_strlcpy(char* dest, char* src, unsigned long dest_size);
     * }
     */
    public static long g_strlcpy(MemorySegment dest, MemorySegment src, long dest_size) {
        var mh$ = g_strlcpy$MH();
        try {
            return (long)mh$.invokeExact(dest, src, dest_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strlcat$MH() {
        return RuntimeHelper.requireNonNull(constants$296.const$5,"g_strlcat");
    }
    /**
     * {@snippet :
     * unsigned long g_strlcat(char* dest, char* src, unsigned long dest_size);
     * }
     */
    public static long g_strlcat(MemorySegment dest, MemorySegment src, long dest_size) {
        var mh$ = g_strlcat$MH();
        try {
            return (long)mh$.invokeExact(dest, src, dest_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strstr_len$MH() {
        return RuntimeHelper.requireNonNull(constants$297.const$0,"g_strstr_len");
    }
    /**
     * {@snippet :
     * char* g_strstr_len(char* haystack, long haystack_len, char* needle);
     * }
     */
    public static MemorySegment g_strstr_len(MemorySegment haystack, long haystack_len, MemorySegment needle) {
        var mh$ = g_strstr_len$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(haystack, haystack_len, needle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strrstr$MH() {
        return RuntimeHelper.requireNonNull(constants$297.const$1,"g_strrstr");
    }
    /**
     * {@snippet :
     * char* g_strrstr(char* haystack, char* needle);
     * }
     */
    public static MemorySegment g_strrstr(MemorySegment haystack, MemorySegment needle) {
        var mh$ = g_strrstr$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(haystack, needle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strrstr_len$MH() {
        return RuntimeHelper.requireNonNull(constants$297.const$2,"g_strrstr_len");
    }
    /**
     * {@snippet :
     * char* g_strrstr_len(char* haystack, long haystack_len, char* needle);
     * }
     */
    public static MemorySegment g_strrstr_len(MemorySegment haystack, long haystack_len, MemorySegment needle) {
        var mh$ = g_strrstr_len$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(haystack, haystack_len, needle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_str_has_suffix$MH() {
        return RuntimeHelper.requireNonNull(constants$297.const$3,"g_str_has_suffix");
    }
    /**
     * {@snippet :
     * int g_str_has_suffix(char* str, char* suffix);
     * }
     */
    public static int g_str_has_suffix(MemorySegment str, MemorySegment suffix) {
        var mh$ = g_str_has_suffix$MH();
        try {
            return (int)mh$.invokeExact(str, suffix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_str_has_prefix$MH() {
        return RuntimeHelper.requireNonNull(constants$297.const$4,"g_str_has_prefix");
    }
    /**
     * {@snippet :
     * int g_str_has_prefix(char* str, char* prefix);
     * }
     */
    public static int g_str_has_prefix(MemorySegment str, MemorySegment prefix) {
        var mh$ = g_str_has_prefix$MH();
        try {
            return (int)mh$.invokeExact(str, prefix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strtod$MH() {
        return RuntimeHelper.requireNonNull(constants$297.const$5,"g_strtod");
    }
    /**
     * {@snippet :
     * double g_strtod(char* nptr, char** endptr);
     * }
     */
    public static double g_strtod(MemorySegment nptr, MemorySegment endptr) {
        var mh$ = g_strtod$MH();
        try {
            return (double)mh$.invokeExact(nptr, endptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ascii_strtod$MH() {
        return RuntimeHelper.requireNonNull(constants$298.const$0,"g_ascii_strtod");
    }
    /**
     * {@snippet :
     * double g_ascii_strtod(char* nptr, char** endptr);
     * }
     */
    public static double g_ascii_strtod(MemorySegment nptr, MemorySegment endptr) {
        var mh$ = g_ascii_strtod$MH();
        try {
            return (double)mh$.invokeExact(nptr, endptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ascii_strtoull$MH() {
        return RuntimeHelper.requireNonNull(constants$298.const$1,"g_ascii_strtoull");
    }
    /**
     * {@snippet :
     * unsigned long g_ascii_strtoull(char* nptr, char** endptr, unsigned int base);
     * }
     */
    public static long g_ascii_strtoull(MemorySegment nptr, MemorySegment endptr, int base) {
        var mh$ = g_ascii_strtoull$MH();
        try {
            return (long)mh$.invokeExact(nptr, endptr, base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ascii_strtoll$MH() {
        return RuntimeHelper.requireNonNull(constants$298.const$2,"g_ascii_strtoll");
    }
    /**
     * {@snippet :
     * long g_ascii_strtoll(char* nptr, char** endptr, unsigned int base);
     * }
     */
    public static long g_ascii_strtoll(MemorySegment nptr, MemorySegment endptr, int base) {
        var mh$ = g_ascii_strtoll$MH();
        try {
            return (long)mh$.invokeExact(nptr, endptr, base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ascii_dtostr$MH() {
        return RuntimeHelper.requireNonNull(constants$298.const$4,"g_ascii_dtostr");
    }
    /**
     * {@snippet :
     * char* g_ascii_dtostr(char* buffer, int buf_len, double d);
     * }
     */
    public static MemorySegment g_ascii_dtostr(MemorySegment buffer, int buf_len, double d) {
        var mh$ = g_ascii_dtostr$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, buf_len, d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ascii_formatd$MH() {
        return RuntimeHelper.requireNonNull(constants$298.const$6,"g_ascii_formatd");
    }
    /**
     * {@snippet :
     * char* g_ascii_formatd(char* buffer, int buf_len, char* format, double d);
     * }
     */
    public static MemorySegment g_ascii_formatd(MemorySegment buffer, int buf_len, MemorySegment format, double d) {
        var mh$ = g_ascii_formatd$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, buf_len, format, d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strchug$MH() {
        return RuntimeHelper.requireNonNull(constants$299.const$0,"g_strchug");
    }
    /**
     * {@snippet :
     * char* g_strchug(char* string);
     * }
     */
    public static MemorySegment g_strchug(MemorySegment string) {
        var mh$ = g_strchug$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strchomp$MH() {
        return RuntimeHelper.requireNonNull(constants$299.const$1,"g_strchomp");
    }
    /**
     * {@snippet :
     * char* g_strchomp(char* string);
     * }
     */
    public static MemorySegment g_strchomp(MemorySegment string) {
        var mh$ = g_strchomp$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ascii_strcasecmp$MH() {
        return RuntimeHelper.requireNonNull(constants$299.const$2,"g_ascii_strcasecmp");
    }
    /**
     * {@snippet :
     * int g_ascii_strcasecmp(char* s1, char* s2);
     * }
     */
    public static int g_ascii_strcasecmp(MemorySegment s1, MemorySegment s2) {
        var mh$ = g_ascii_strcasecmp$MH();
        try {
            return (int)mh$.invokeExact(s1, s2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ascii_strncasecmp$MH() {
        return RuntimeHelper.requireNonNull(constants$299.const$3,"g_ascii_strncasecmp");
    }
    /**
     * {@snippet :
     * int g_ascii_strncasecmp(char* s1, char* s2, unsigned long n);
     * }
     */
    public static int g_ascii_strncasecmp(MemorySegment s1, MemorySegment s2, long n) {
        var mh$ = g_ascii_strncasecmp$MH();
        try {
            return (int)mh$.invokeExact(s1, s2, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ascii_strdown$MH() {
        return RuntimeHelper.requireNonNull(constants$299.const$4,"g_ascii_strdown");
    }
    /**
     * {@snippet :
     * char* g_ascii_strdown(char* str, long len);
     * }
     */
    public static MemorySegment g_ascii_strdown(MemorySegment str, long len) {
        var mh$ = g_ascii_strdown$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ascii_strup$MH() {
        return RuntimeHelper.requireNonNull(constants$299.const$5,"g_ascii_strup");
    }
    /**
     * {@snippet :
     * char* g_ascii_strup(char* str, long len);
     * }
     */
    public static MemorySegment g_ascii_strup(MemorySegment str, long len) {
        var mh$ = g_ascii_strup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_str_is_ascii$MH() {
        return RuntimeHelper.requireNonNull(constants$300.const$0,"g_str_is_ascii");
    }
    /**
     * {@snippet :
     * int g_str_is_ascii(char* str);
     * }
     */
    public static int g_str_is_ascii(MemorySegment str) {
        var mh$ = g_str_is_ascii$MH();
        try {
            return (int)mh$.invokeExact(str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strcasecmp$MH() {
        return RuntimeHelper.requireNonNull(constants$300.const$1,"g_strcasecmp");
    }
    /**
     * {@snippet :
     * int g_strcasecmp(char* s1, char* s2);
     * }
     */
    public static int g_strcasecmp(MemorySegment s1, MemorySegment s2) {
        var mh$ = g_strcasecmp$MH();
        try {
            return (int)mh$.invokeExact(s1, s2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strncasecmp$MH() {
        return RuntimeHelper.requireNonNull(constants$300.const$2,"g_strncasecmp");
    }
    /**
     * {@snippet :
     * int g_strncasecmp(char* s1, char* s2, unsigned int n);
     * }
     */
    public static int g_strncasecmp(MemorySegment s1, MemorySegment s2, int n) {
        var mh$ = g_strncasecmp$MH();
        try {
            return (int)mh$.invokeExact(s1, s2, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strdown$MH() {
        return RuntimeHelper.requireNonNull(constants$300.const$3,"g_strdown");
    }
    /**
     * {@snippet :
     * char* g_strdown(char* string);
     * }
     */
    public static MemorySegment g_strdown(MemorySegment string) {
        var mh$ = g_strdown$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strup$MH() {
        return RuntimeHelper.requireNonNull(constants$300.const$4,"g_strup");
    }
    /**
     * {@snippet :
     * char* g_strup(char* string);
     * }
     */
    public static MemorySegment g_strup(MemorySegment string) {
        var mh$ = g_strup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strdup$MH() {
        return RuntimeHelper.requireNonNull(constants$300.const$5,"g_strdup");
    }
    /**
     * {@snippet :
     * char* g_strdup(char* str);
     * }
     */
    public static MemorySegment g_strdup(MemorySegment str) {
        var mh$ = g_strdup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strdup_printf$MH() {
        return RuntimeHelper.requireNonNull(constants$301.const$0,"g_strdup_printf");
    }
    /**
     * {@snippet :
     * char* g_strdup_printf(char* format,...);
     * }
     */
    public static MemorySegment g_strdup_printf(MemorySegment format, Object... x1) {
        var mh$ = g_strdup_printf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strdup_vprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$301.const$2,"g_strdup_vprintf");
    }
    /**
     * {@snippet :
     * char* g_strdup_vprintf(char* format, struct __va_list args);
     * }
     */
    public static MemorySegment g_strdup_vprintf(MemorySegment format, MemorySegment args) {
        var mh$ = g_strdup_vprintf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strndup$MH() {
        return RuntimeHelper.requireNonNull(constants$301.const$3,"g_strndup");
    }
    /**
     * {@snippet :
     * char* g_strndup(char* str, unsigned long n);
     * }
     */
    public static MemorySegment g_strndup(MemorySegment str, long n) {
        var mh$ = g_strndup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strnfill$MH() {
        return RuntimeHelper.requireNonNull(constants$301.const$5,"g_strnfill");
    }
    /**
     * {@snippet :
     * char* g_strnfill(unsigned long length, char fill_char);
     * }
     */
    public static MemorySegment g_strnfill(long length, byte fill_char) {
        var mh$ = g_strnfill$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(length, fill_char);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strconcat$MH() {
        return RuntimeHelper.requireNonNull(constants$302.const$0,"g_strconcat");
    }
    /**
     * {@snippet :
     * char* g_strconcat(char* string1,...);
     * }
     */
    public static MemorySegment g_strconcat(MemorySegment string1, Object... x1) {
        var mh$ = g_strconcat$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string1, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strjoin$MH() {
        return RuntimeHelper.requireNonNull(constants$302.const$1,"g_strjoin");
    }
    /**
     * {@snippet :
     * char* g_strjoin(char* separator,...);
     * }
     */
    public static MemorySegment g_strjoin(MemorySegment separator, Object... x1) {
        var mh$ = g_strjoin$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(separator, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strcompress$MH() {
        return RuntimeHelper.requireNonNull(constants$302.const$2,"g_strcompress");
    }
    /**
     * {@snippet :
     * char* g_strcompress(char* source);
     * }
     */
    public static MemorySegment g_strcompress(MemorySegment source) {
        var mh$ = g_strcompress$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strescape$MH() {
        return RuntimeHelper.requireNonNull(constants$302.const$3,"g_strescape");
    }
    /**
     * {@snippet :
     * char* g_strescape(char* source, char* exceptions);
     * }
     */
    public static MemorySegment g_strescape(MemorySegment source, MemorySegment exceptions) {
        var mh$ = g_strescape$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source, exceptions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_memdup$MH() {
        return RuntimeHelper.requireNonNull(constants$302.const$4,"g_memdup");
    }
    /**
     * {@snippet :
     * void* g_memdup(void* mem, unsigned int byte_size);
     * }
     */
    public static MemorySegment g_memdup(MemorySegment mem, int byte_size) {
        var mh$ = g_memdup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mem, byte_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_memdup2$MH() {
        return RuntimeHelper.requireNonNull(constants$302.const$5,"g_memdup2");
    }
    /**
     * {@snippet :
     * void* g_memdup2(void* mem, unsigned long byte_size);
     * }
     */
    public static MemorySegment g_memdup2(MemorySegment mem, long byte_size) {
        var mh$ = g_memdup2$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mem, byte_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef char** GStrv;
     * }
     */
    public static final AddressLayout GStrv = RuntimeHelper.POINTER;
    public static MethodHandle g_strsplit$MH() {
        return RuntimeHelper.requireNonNull(constants$303.const$0,"g_strsplit");
    }
    /**
     * {@snippet :
     * char** g_strsplit(char* string, char* delimiter, int max_tokens);
     * }
     */
    public static MemorySegment g_strsplit(MemorySegment string, MemorySegment delimiter, int max_tokens) {
        var mh$ = g_strsplit$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, delimiter, max_tokens);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strsplit_set$MH() {
        return RuntimeHelper.requireNonNull(constants$303.const$1,"g_strsplit_set");
    }
    /**
     * {@snippet :
     * char** g_strsplit_set(char* string, char* delimiters, int max_tokens);
     * }
     */
    public static MemorySegment g_strsplit_set(MemorySegment string, MemorySegment delimiters, int max_tokens) {
        var mh$ = g_strsplit_set$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, delimiters, max_tokens);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strjoinv$MH() {
        return RuntimeHelper.requireNonNull(constants$303.const$2,"g_strjoinv");
    }
    /**
     * {@snippet :
     * char* g_strjoinv(char* separator, char** str_array);
     * }
     */
    public static MemorySegment g_strjoinv(MemorySegment separator, MemorySegment str_array) {
        var mh$ = g_strjoinv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(separator, str_array);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strfreev$MH() {
        return RuntimeHelper.requireNonNull(constants$303.const$3,"g_strfreev");
    }
    /**
     * {@snippet :
     * void g_strfreev(char** str_array);
     * }
     */
    public static void g_strfreev(MemorySegment str_array) {
        var mh$ = g_strfreev$MH();
        try {
            mh$.invokeExact(str_array);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strdupv$MH() {
        return RuntimeHelper.requireNonNull(constants$303.const$4,"g_strdupv");
    }
    /**
     * {@snippet :
     * char** g_strdupv(char** str_array);
     * }
     */
    public static MemorySegment g_strdupv(MemorySegment str_array) {
        var mh$ = g_strdupv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str_array);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strv_length$MH() {
        return RuntimeHelper.requireNonNull(constants$303.const$5,"g_strv_length");
    }
    /**
     * {@snippet :
     * unsigned int g_strv_length(char** str_array);
     * }
     */
    public static int g_strv_length(MemorySegment str_array) {
        var mh$ = g_strv_length$MH();
        try {
            return (int)mh$.invokeExact(str_array);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_stpcpy$MH() {
        return RuntimeHelper.requireNonNull(constants$304.const$0,"g_stpcpy");
    }
    /**
     * {@snippet :
     * char* g_stpcpy(char* dest, char* src);
     * }
     */
    public static MemorySegment g_stpcpy(MemorySegment dest, MemorySegment src) {
        var mh$ = g_stpcpy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(dest, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_str_to_ascii$MH() {
        return RuntimeHelper.requireNonNull(constants$304.const$1,"g_str_to_ascii");
    }
    /**
     * {@snippet :
     * char* g_str_to_ascii(char* str, char* from_locale);
     * }
     */
    public static MemorySegment g_str_to_ascii(MemorySegment str, MemorySegment from_locale) {
        var mh$ = g_str_to_ascii$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, from_locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_str_tokenize_and_fold$MH() {
        return RuntimeHelper.requireNonNull(constants$304.const$2,"g_str_tokenize_and_fold");
    }
    /**
     * {@snippet :
     * char** g_str_tokenize_and_fold(char* string, char* translit_locale, char*** ascii_alternates);
     * }
     */
    public static MemorySegment g_str_tokenize_and_fold(MemorySegment string, MemorySegment translit_locale, MemorySegment ascii_alternates) {
        var mh$ = g_str_tokenize_and_fold$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, translit_locale, ascii_alternates);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_str_match_string$MH() {
        return RuntimeHelper.requireNonNull(constants$304.const$3,"g_str_match_string");
    }
    /**
     * {@snippet :
     * int g_str_match_string(char* search_term, char* potential_hit, int accept_alternates);
     * }
     */
    public static int g_str_match_string(MemorySegment search_term, MemorySegment potential_hit, int accept_alternates) {
        var mh$ = g_str_match_string$MH();
        try {
            return (int)mh$.invokeExact(search_term, potential_hit, accept_alternates);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strv_contains$MH() {
        return RuntimeHelper.requireNonNull(constants$304.const$4,"g_strv_contains");
    }
    /**
     * {@snippet :
     * int g_strv_contains(char** strv, char* str);
     * }
     */
    public static int g_strv_contains(MemorySegment strv, MemorySegment str) {
        var mh$ = g_strv_contains$MH();
        try {
            return (int)mh$.invokeExact(strv, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strv_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$304.const$5,"g_strv_equal");
    }
    /**
     * {@snippet :
     * int g_strv_equal(char** strv1, char** strv2);
     * }
     */
    public static int g_strv_equal(MemorySegment strv1, MemorySegment strv2) {
        var mh$ = g_strv_equal$MH();
        try {
            return (int)mh$.invokeExact(strv1, strv2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GNumberParserError.G_NUMBER_PARSER_ERROR_INVALID = 0;
     * }
     */
    public static int G_NUMBER_PARSER_ERROR_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GNumberParserError.G_NUMBER_PARSER_ERROR_OUT_OF_BOUNDS = 1;
     * }
     */
    public static int G_NUMBER_PARSER_ERROR_OUT_OF_BOUNDS() {
        return (int)1L;
    }
    public static MethodHandle g_number_parser_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$305.const$0,"g_number_parser_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int g_number_parser_error_quark();
     * }
     */
    public static int g_number_parser_error_quark() {
        var mh$ = g_number_parser_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ascii_string_to_signed$MH() {
        return RuntimeHelper.requireNonNull(constants$305.const$2,"g_ascii_string_to_signed");
    }
    /**
     * {@snippet :
     * int g_ascii_string_to_signed(char* str, unsigned int base, long min, long max, long* out_num, struct _GError** error);
     * }
     */
    public static int g_ascii_string_to_signed(MemorySegment str, int base, long min, long max, MemorySegment out_num, MemorySegment error) {
        var mh$ = g_ascii_string_to_signed$MH();
        try {
            return (int)mh$.invokeExact(str, base, min, max, out_num, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ascii_string_to_unsigned$MH() {
        return RuntimeHelper.requireNonNull(constants$305.const$3,"g_ascii_string_to_unsigned");
    }
    /**
     * {@snippet :
     * int g_ascii_string_to_unsigned(char* str, unsigned int base, unsigned long min, unsigned long max, unsigned long* out_num, struct _GError** error);
     * }
     */
    public static int g_ascii_string_to_unsigned(MemorySegment str, int base, long min, long max, MemorySegment out_num, MemorySegment error) {
        var mh$ = g_ascii_string_to_unsigned$MH();
        try {
            return (int)mh$.invokeExact(str, base, min, max, out_num, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_new$MH() {
        return RuntimeHelper.requireNonNull(constants$306.const$2,"g_string_new");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_new(char* init);
     * }
     */
    public static MemorySegment g_string_new(MemorySegment init) {
        var mh$ = g_string_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(init);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_new_len$MH() {
        return RuntimeHelper.requireNonNull(constants$306.const$3,"g_string_new_len");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_new_len(char* init, long len);
     * }
     */
    public static MemorySegment g_string_new_len(MemorySegment init, long len) {
        var mh$ = g_string_new_len$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(init, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_sized_new$MH() {
        return RuntimeHelper.requireNonNull(constants$306.const$4,"g_string_sized_new");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_sized_new(unsigned long dfl_size);
     * }
     */
    public static MemorySegment g_string_sized_new(long dfl_size) {
        var mh$ = g_string_sized_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(dfl_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_free$MH() {
        return RuntimeHelper.requireNonNull(constants$306.const$5,"g_string_free");
    }
    /**
     * {@snippet :
     * char* g_string_free(struct _GString* string, int free_segment);
     * }
     */
    public static MemorySegment g_string_free(MemorySegment string, int free_segment) {
        var mh$ = g_string_free$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, free_segment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_free_and_steal$MH() {
        return RuntimeHelper.requireNonNull(constants$307.const$0,"g_string_free_and_steal");
    }
    /**
     * {@snippet :
     * char* g_string_free_and_steal(struct _GString* string);
     * }
     */
    public static MemorySegment g_string_free_and_steal(MemorySegment string) {
        var mh$ = g_string_free_and_steal$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_free_to_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$307.const$1,"g_string_free_to_bytes");
    }
    /**
     * {@snippet :
     * struct _GBytes* g_string_free_to_bytes(struct _GString* string);
     * }
     */
    public static MemorySegment g_string_free_to_bytes(MemorySegment string) {
        var mh$ = g_string_free_to_bytes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$307.const$2,"g_string_equal");
    }
    /**
     * {@snippet :
     * int g_string_equal(struct _GString* v, struct _GString* v2);
     * }
     */
    public static int g_string_equal(MemorySegment v, MemorySegment v2) {
        var mh$ = g_string_equal$MH();
        try {
            return (int)mh$.invokeExact(v, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$307.const$3,"g_string_hash");
    }
    /**
     * {@snippet :
     * unsigned int g_string_hash(struct _GString* str);
     * }
     */
    public static int g_string_hash(MemorySegment str) {
        var mh$ = g_string_hash$MH();
        try {
            return (int)mh$.invokeExact(str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_assign$MH() {
        return RuntimeHelper.requireNonNull(constants$307.const$4,"g_string_assign");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_assign(struct _GString* string, char* rval);
     * }
     */
    public static MemorySegment g_string_assign(MemorySegment string, MemorySegment rval) {
        var mh$ = g_string_assign$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, rval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_truncate$MH() {
        return RuntimeHelper.requireNonNull(constants$307.const$5,"g_string_truncate");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_truncate(struct _GString* string, unsigned long len);
     * }
     */
    public static MemorySegment g_string_truncate(MemorySegment string, long len) {
        var mh$ = g_string_truncate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_set_size$MH() {
        return RuntimeHelper.requireNonNull(constants$308.const$0,"g_string_set_size");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_set_size(struct _GString* string, unsigned long len);
     * }
     */
    public static MemorySegment g_string_set_size(MemorySegment string, long len) {
        var mh$ = g_string_set_size$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_insert_len$MH() {
        return RuntimeHelper.requireNonNull(constants$308.const$2,"g_string_insert_len");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_insert_len(struct _GString* string, long pos, char* val, long len);
     * }
     */
    public static MemorySegment g_string_insert_len(MemorySegment string, long pos, MemorySegment val, long len) {
        var mh$ = g_string_insert_len$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, pos, val, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append$MH() {
        return RuntimeHelper.requireNonNull(constants$308.const$3,"g_string_append");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_append(struct _GString* string, char* val);
     * }
     */
    public static MemorySegment g_string_append(MemorySegment string, MemorySegment val) {
        var mh$ = g_string_append$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, val);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_len$MH() {
        return RuntimeHelper.requireNonNull(constants$308.const$4,"g_string_append_len");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_append_len(struct _GString* string, char* val, long len);
     * }
     */
    public static MemorySegment g_string_append_len(MemorySegment string, MemorySegment val, long len) {
        var mh$ = g_string_append_len$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, val, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_c$MH() {
        return RuntimeHelper.requireNonNull(constants$308.const$6,"g_string_append_c");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_append_c(struct _GString* string, char c);
     * }
     */
    public static MemorySegment g_string_append_c(MemorySegment string, byte c) {
        var mh$ = g_string_append_c$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$309.const$0,"g_string_append_unichar");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_append_unichar(struct _GString* string, unsigned int wc);
     * }
     */
    public static MemorySegment g_string_append_unichar(MemorySegment string, int wc) {
        var mh$ = g_string_append_unichar$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, wc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$309.const$1,"g_string_prepend");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_prepend(struct _GString* string, char* val);
     * }
     */
    public static MemorySegment g_string_prepend(MemorySegment string, MemorySegment val) {
        var mh$ = g_string_prepend$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, val);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_prepend_c$MH() {
        return RuntimeHelper.requireNonNull(constants$309.const$2,"g_string_prepend_c");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_prepend_c(struct _GString* string, char c);
     * }
     */
    public static MemorySegment g_string_prepend_c(MemorySegment string, byte c) {
        var mh$ = g_string_prepend_c$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_prepend_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$309.const$3,"g_string_prepend_unichar");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_prepend_unichar(struct _GString* string, unsigned int wc);
     * }
     */
    public static MemorySegment g_string_prepend_unichar(MemorySegment string, int wc) {
        var mh$ = g_string_prepend_unichar$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, wc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_prepend_len$MH() {
        return RuntimeHelper.requireNonNull(constants$309.const$4,"g_string_prepend_len");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_prepend_len(struct _GString* string, char* val, long len);
     * }
     */
    public static MemorySegment g_string_prepend_len(MemorySegment string, MemorySegment val, long len) {
        var mh$ = g_string_prepend_len$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, val, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$309.const$5,"g_string_insert");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_insert(struct _GString* string, long pos, char* val);
     * }
     */
    public static MemorySegment g_string_insert(MemorySegment string, long pos, MemorySegment val) {
        var mh$ = g_string_insert$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, pos, val);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_insert_c$MH() {
        return RuntimeHelper.requireNonNull(constants$310.const$1,"g_string_insert_c");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_insert_c(struct _GString* string, long pos, char c);
     * }
     */
    public static MemorySegment g_string_insert_c(MemorySegment string, long pos, byte c) {
        var mh$ = g_string_insert_c$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, pos, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_insert_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$310.const$2,"g_string_insert_unichar");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_insert_unichar(struct _GString* string, long pos, unsigned int wc);
     * }
     */
    public static MemorySegment g_string_insert_unichar(MemorySegment string, long pos, int wc) {
        var mh$ = g_string_insert_unichar$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, pos, wc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_overwrite$MH() {
        return RuntimeHelper.requireNonNull(constants$310.const$3,"g_string_overwrite");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_overwrite(struct _GString* string, unsigned long pos, char* val);
     * }
     */
    public static MemorySegment g_string_overwrite(MemorySegment string, long pos, MemorySegment val) {
        var mh$ = g_string_overwrite$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, pos, val);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_overwrite_len$MH() {
        return RuntimeHelper.requireNonNull(constants$310.const$4,"g_string_overwrite_len");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_overwrite_len(struct _GString* string, unsigned long pos, char* val, long len);
     * }
     */
    public static MemorySegment g_string_overwrite_len(MemorySegment string, long pos, MemorySegment val, long len) {
        var mh$ = g_string_overwrite_len$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, pos, val, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_erase$MH() {
        return RuntimeHelper.requireNonNull(constants$310.const$5,"g_string_erase");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_erase(struct _GString* string, long pos, long len);
     * }
     */
    public static MemorySegment g_string_erase(MemorySegment string, long pos, long len) {
        var mh$ = g_string_erase$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, pos, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_replace$MH() {
        return RuntimeHelper.requireNonNull(constants$311.const$1,"g_string_replace");
    }
    /**
     * {@snippet :
     * unsigned int g_string_replace(struct _GString* string, char* find, char* replace, unsigned int limit);
     * }
     */
    public static int g_string_replace(MemorySegment string, MemorySegment find, MemorySegment replace, int limit) {
        var mh$ = g_string_replace$MH();
        try {
            return (int)mh$.invokeExact(string, find, replace, limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_ascii_down$MH() {
        return RuntimeHelper.requireNonNull(constants$311.const$2,"g_string_ascii_down");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_ascii_down(struct _GString* string);
     * }
     */
    public static MemorySegment g_string_ascii_down(MemorySegment string) {
        var mh$ = g_string_ascii_down$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_ascii_up$MH() {
        return RuntimeHelper.requireNonNull(constants$311.const$3,"g_string_ascii_up");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_ascii_up(struct _GString* string);
     * }
     */
    public static MemorySegment g_string_ascii_up(MemorySegment string) {
        var mh$ = g_string_ascii_up$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_vprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$311.const$5,"g_string_vprintf");
    }
    /**
     * {@snippet :
     * void g_string_vprintf(struct _GString* string, char* format, struct __va_list args);
     * }
     */
    public static void g_string_vprintf(MemorySegment string, MemorySegment format, MemorySegment args) {
        var mh$ = g_string_vprintf$MH();
        try {
            mh$.invokeExact(string, format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_printf$MH() {
        return RuntimeHelper.requireNonNull(constants$312.const$0,"g_string_printf");
    }
    /**
     * {@snippet :
     * void g_string_printf(struct _GString* string, char* format,...);
     * }
     */
    public static void g_string_printf(MemorySegment string, MemorySegment format, Object... x2) {
        var mh$ = g_string_printf$MH();
        try {
            mh$.invokeExact(string, format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_vprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$312.const$1,"g_string_append_vprintf");
    }
    /**
     * {@snippet :
     * void g_string_append_vprintf(struct _GString* string, char* format, struct __va_list args);
     * }
     */
    public static void g_string_append_vprintf(MemorySegment string, MemorySegment format, MemorySegment args) {
        var mh$ = g_string_append_vprintf$MH();
        try {
            mh$.invokeExact(string, format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_printf$MH() {
        return RuntimeHelper.requireNonNull(constants$312.const$2,"g_string_append_printf");
    }
    /**
     * {@snippet :
     * void g_string_append_printf(struct _GString* string, char* format,...);
     * }
     */
    public static void g_string_append_printf(MemorySegment string, MemorySegment format, Object... x2) {
        var mh$ = g_string_append_printf$MH();
        try {
            mh$.invokeExact(string, format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_uri_escaped$MH() {
        return RuntimeHelper.requireNonNull(constants$312.const$3,"g_string_append_uri_escaped");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_append_uri_escaped(struct _GString* string, char* unescaped, char* reserved_chars_allowed, int allow_utf8);
     * }
     */
    public static MemorySegment g_string_append_uri_escaped(MemorySegment string, MemorySegment unescaped, MemorySegment reserved_chars_allowed, int allow_utf8) {
        var mh$ = g_string_append_uri_escaped$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string, unescaped, reserved_chars_allowed, allow_utf8);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_down$MH() {
        return RuntimeHelper.requireNonNull(constants$312.const$4,"g_string_down");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_down(struct _GString* string);
     * }
     */
    public static MemorySegment g_string_down(MemorySegment string) {
        var mh$ = g_string_down$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_up$MH() {
        return RuntimeHelper.requireNonNull(constants$312.const$5,"g_string_up");
    }
    /**
     * {@snippet :
     * struct _GString* g_string_up(struct _GString* string);
     * }
     */
    public static MemorySegment g_string_up(MemorySegment string) {
        var mh$ = g_string_up$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GIOError.G_IO_ERROR_NONE = 0;
     * }
     */
    public static int G_IO_ERROR_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GIOError.G_IO_ERROR_AGAIN = 1;
     * }
     */
    public static int G_IO_ERROR_AGAIN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GIOError.G_IO_ERROR_INVAL = 2;
     * }
     */
    public static int G_IO_ERROR_INVAL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GIOError.G_IO_ERROR_UNKNOWN = 3;
     * }
     */
    public static int G_IO_ERROR_UNKNOWN() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GIOChannelError.G_IO_CHANNEL_ERROR_FBIG = 0;
     * }
     */
    public static int G_IO_CHANNEL_ERROR_FBIG() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GIOChannelError.G_IO_CHANNEL_ERROR_INVAL = 1;
     * }
     */
    public static int G_IO_CHANNEL_ERROR_INVAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GIOChannelError.G_IO_CHANNEL_ERROR_IO = 2;
     * }
     */
    public static int G_IO_CHANNEL_ERROR_IO() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GIOChannelError.G_IO_CHANNEL_ERROR_ISDIR = 3;
     * }
     */
    public static int G_IO_CHANNEL_ERROR_ISDIR() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GIOChannelError.G_IO_CHANNEL_ERROR_NOSPC = 4;
     * }
     */
    public static int G_IO_CHANNEL_ERROR_NOSPC() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GIOChannelError.G_IO_CHANNEL_ERROR_NXIO = 5;
     * }
     */
    public static int G_IO_CHANNEL_ERROR_NXIO() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GIOChannelError.G_IO_CHANNEL_ERROR_OVERFLOW = 6;
     * }
     */
    public static int G_IO_CHANNEL_ERROR_OVERFLOW() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GIOChannelError.G_IO_CHANNEL_ERROR_PIPE = 7;
     * }
     */
    public static int G_IO_CHANNEL_ERROR_PIPE() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GIOChannelError.G_IO_CHANNEL_ERROR_FAILED = 8;
     * }
     */
    public static int G_IO_CHANNEL_ERROR_FAILED() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GIOStatus.G_IO_STATUS_ERROR = 0;
     * }
     */
    public static int G_IO_STATUS_ERROR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GIOStatus.G_IO_STATUS_NORMAL = 1;
     * }
     */
    public static int G_IO_STATUS_NORMAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GIOStatus.G_IO_STATUS_EOF = 2;
     * }
     */
    public static int G_IO_STATUS_EOF() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GIOStatus.G_IO_STATUS_AGAIN = 3;
     * }
     */
    public static int G_IO_STATUS_AGAIN() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GSeekType.G_SEEK_CUR = 0;
     * }
     */
    public static int G_SEEK_CUR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GSeekType.G_SEEK_SET = 1;
     * }
     */
    public static int G_SEEK_SET() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GSeekType.G_SEEK_END = 2;
     * }
     */
    public static int G_SEEK_END() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GIOFlags.G_IO_FLAG_NONE = 0;
     * }
     */
    public static int G_IO_FLAG_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GIOFlags.G_IO_FLAG_APPEND = 1;
     * }
     */
    public static int G_IO_FLAG_APPEND() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GIOFlags.G_IO_FLAG_NONBLOCK = 2;
     * }
     */
    public static int G_IO_FLAG_NONBLOCK() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GIOFlags.G_IO_FLAG_IS_READABLE = 4;
     * }
     */
    public static int G_IO_FLAG_IS_READABLE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GIOFlags.G_IO_FLAG_IS_WRITABLE = 8;
     * }
     */
    public static int G_IO_FLAG_IS_WRITABLE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GIOFlags.G_IO_FLAG_IS_WRITEABLE = 8;
     * }
     */
    public static int G_IO_FLAG_IS_WRITEABLE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GIOFlags.G_IO_FLAG_IS_SEEKABLE = 16;
     * }
     */
    public static int G_IO_FLAG_IS_SEEKABLE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GIOFlags.G_IO_FLAG_MASK = 31;
     * }
     */
    public static int G_IO_FLAG_MASK() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum GIOFlags.G_IO_FLAG_GET_MASK = 31;
     * }
     */
    public static int G_IO_FLAG_GET_MASK() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum GIOFlags.G_IO_FLAG_SET_MASK = 3;
     * }
     */
    public static int G_IO_FLAG_SET_MASK() {
        return (int)3L;
    }
    public static MethodHandle g_io_channel_init$MH() {
        return RuntimeHelper.requireNonNull(constants$319.const$2,"g_io_channel_init");
    }
    /**
     * {@snippet :
     * void g_io_channel_init(struct _GIOChannel* channel);
     * }
     */
    public static void g_io_channel_init(MemorySegment channel) {
        var mh$ = g_io_channel_init$MH();
        try {
            mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$319.const$3,"g_io_channel_ref");
    }
    /**
     * {@snippet :
     * struct _GIOChannel* g_io_channel_ref(struct _GIOChannel* channel);
     * }
     */
    public static MemorySegment g_io_channel_ref(MemorySegment channel) {
        var mh$ = g_io_channel_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$319.const$4,"g_io_channel_unref");
    }
    /**
     * {@snippet :
     * void g_io_channel_unref(struct _GIOChannel* channel);
     * }
     */
    public static void g_io_channel_unref(MemorySegment channel) {
        var mh$ = g_io_channel_unref$MH();
        try {
            mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_read$MH() {
        return RuntimeHelper.requireNonNull(constants$319.const$5,"g_io_channel_read");
    }
    /**
     * {@snippet :
     * enum GIOError g_io_channel_read(struct _GIOChannel* channel, char* buf, unsigned long count, unsigned long* bytes_read);
     * }
     */
    public static int g_io_channel_read(MemorySegment channel, MemorySegment buf, long count, MemorySegment bytes_read) {
        var mh$ = g_io_channel_read$MH();
        try {
            return (int)mh$.invokeExact(channel, buf, count, bytes_read);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_write$MH() {
        return RuntimeHelper.requireNonNull(constants$320.const$0,"g_io_channel_write");
    }
    /**
     * {@snippet :
     * enum GIOError g_io_channel_write(struct _GIOChannel* channel, char* buf, unsigned long count, unsigned long* bytes_written);
     * }
     */
    public static int g_io_channel_write(MemorySegment channel, MemorySegment buf, long count, MemorySegment bytes_written) {
        var mh$ = g_io_channel_write$MH();
        try {
            return (int)mh$.invokeExact(channel, buf, count, bytes_written);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_seek$MH() {
        return RuntimeHelper.requireNonNull(constants$320.const$2,"g_io_channel_seek");
    }
    /**
     * {@snippet :
     * enum GIOError g_io_channel_seek(struct _GIOChannel* channel, long offset, enum GSeekType type);
     * }
     */
    public static int g_io_channel_seek(MemorySegment channel, long offset, int type) {
        var mh$ = g_io_channel_seek$MH();
        try {
            return (int)mh$.invokeExact(channel, offset, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_close$MH() {
        return RuntimeHelper.requireNonNull(constants$320.const$3,"g_io_channel_close");
    }
    /**
     * {@snippet :
     * void g_io_channel_close(struct _GIOChannel* channel);
     * }
     */
    public static void g_io_channel_close(MemorySegment channel) {
        var mh$ = g_io_channel_close$MH();
        try {
            mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_shutdown$MH() {
        return RuntimeHelper.requireNonNull(constants$320.const$4,"g_io_channel_shutdown");
    }
    /**
     * {@snippet :
     * enum GIOStatus g_io_channel_shutdown(struct _GIOChannel* channel, int flush, struct _GError** err);
     * }
     */
    public static int g_io_channel_shutdown(MemorySegment channel, int flush, MemorySegment err) {
        var mh$ = g_io_channel_shutdown$MH();
        try {
            return (int)mh$.invokeExact(channel, flush, err);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_add_watch_full$MH() {
        return RuntimeHelper.requireNonNull(constants$321.const$2,"g_io_add_watch_full");
    }
    /**
     * {@snippet :
     * unsigned int g_io_add_watch_full(struct _GIOChannel* channel, int priority, enum GIOCondition condition, int (*func)(struct _GIOChannel*,enum GIOCondition,void*), void* user_data, void (*notify)(void*));
     * }
     */
    public static int g_io_add_watch_full(MemorySegment channel, int priority, int condition, MemorySegment func, MemorySegment user_data, MemorySegment notify) {
        var mh$ = g_io_add_watch_full$MH();
        try {
            return (int)mh$.invokeExact(channel, priority, condition, func, user_data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_create_watch$MH() {
        return RuntimeHelper.requireNonNull(constants$321.const$3,"g_io_create_watch");
    }
    /**
     * {@snippet :
     * struct _GSource* g_io_create_watch(struct _GIOChannel* channel, enum GIOCondition condition);
     * }
     */
    public static MemorySegment g_io_create_watch(MemorySegment channel, int condition) {
        var mh$ = g_io_create_watch$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(channel, condition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_add_watch$MH() {
        return RuntimeHelper.requireNonNull(constants$321.const$5,"g_io_add_watch");
    }
    /**
     * {@snippet :
     * unsigned int g_io_add_watch(struct _GIOChannel* channel, enum GIOCondition condition, int (*func)(struct _GIOChannel*,enum GIOCondition,void*), void* user_data);
     * }
     */
    public static int g_io_add_watch(MemorySegment channel, int condition, MemorySegment func, MemorySegment user_data) {
        var mh$ = g_io_add_watch$MH();
        try {
            return (int)mh$.invokeExact(channel, condition, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_set_buffer_size$MH() {
        return RuntimeHelper.requireNonNull(constants$322.const$0,"g_io_channel_set_buffer_size");
    }
    /**
     * {@snippet :
     * void g_io_channel_set_buffer_size(struct _GIOChannel* channel, unsigned long size);
     * }
     */
    public static void g_io_channel_set_buffer_size(MemorySegment channel, long size) {
        var mh$ = g_io_channel_set_buffer_size$MH();
        try {
            mh$.invokeExact(channel, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_buffer_size$MH() {
        return RuntimeHelper.requireNonNull(constants$322.const$1,"g_io_channel_get_buffer_size");
    }
    /**
     * {@snippet :
     * unsigned long g_io_channel_get_buffer_size(struct _GIOChannel* channel);
     * }
     */
    public static long g_io_channel_get_buffer_size(MemorySegment channel) {
        var mh$ = g_io_channel_get_buffer_size$MH();
        try {
            return (long)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_buffer_condition$MH() {
        return RuntimeHelper.requireNonNull(constants$322.const$2,"g_io_channel_get_buffer_condition");
    }
    /**
     * {@snippet :
     * enum GIOCondition g_io_channel_get_buffer_condition(struct _GIOChannel* channel);
     * }
     */
    public static int g_io_channel_get_buffer_condition(MemorySegment channel) {
        var mh$ = g_io_channel_get_buffer_condition$MH();
        try {
            return (int)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$322.const$3,"g_io_channel_set_flags");
    }
    /**
     * {@snippet :
     * enum GIOStatus g_io_channel_set_flags(struct _GIOChannel* channel, enum GIOFlags flags, struct _GError** error);
     * }
     */
    public static int g_io_channel_set_flags(MemorySegment channel, int flags, MemorySegment error) {
        var mh$ = g_io_channel_set_flags$MH();
        try {
            return (int)mh$.invokeExact(channel, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$322.const$4,"g_io_channel_get_flags");
    }
    /**
     * {@snippet :
     * enum GIOFlags g_io_channel_get_flags(struct _GIOChannel* channel);
     * }
     */
    public static int g_io_channel_get_flags(MemorySegment channel) {
        var mh$ = g_io_channel_get_flags$MH();
        try {
            return (int)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_set_line_term$MH() {
        return RuntimeHelper.requireNonNull(constants$322.const$5,"g_io_channel_set_line_term");
    }
    /**
     * {@snippet :
     * void g_io_channel_set_line_term(struct _GIOChannel* channel, char* line_term, int length);
     * }
     */
    public static void g_io_channel_set_line_term(MemorySegment channel, MemorySegment line_term, int length) {
        var mh$ = g_io_channel_set_line_term$MH();
        try {
            mh$.invokeExact(channel, line_term, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_line_term$MH() {
        return RuntimeHelper.requireNonNull(constants$323.const$0,"g_io_channel_get_line_term");
    }
    /**
     * {@snippet :
     * char* g_io_channel_get_line_term(struct _GIOChannel* channel, int* length);
     * }
     */
    public static MemorySegment g_io_channel_get_line_term(MemorySegment channel, MemorySegment length) {
        var mh$ = g_io_channel_get_line_term$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(channel, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_set_buffered$MH() {
        return RuntimeHelper.requireNonNull(constants$323.const$1,"g_io_channel_set_buffered");
    }
    /**
     * {@snippet :
     * void g_io_channel_set_buffered(struct _GIOChannel* channel, int buffered);
     * }
     */
    public static void g_io_channel_set_buffered(MemorySegment channel, int buffered) {
        var mh$ = g_io_channel_set_buffered$MH();
        try {
            mh$.invokeExact(channel, buffered);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_buffered$MH() {
        return RuntimeHelper.requireNonNull(constants$323.const$2,"g_io_channel_get_buffered");
    }
    /**
     * {@snippet :
     * int g_io_channel_get_buffered(struct _GIOChannel* channel);
     * }
     */
    public static int g_io_channel_get_buffered(MemorySegment channel) {
        var mh$ = g_io_channel_get_buffered$MH();
        try {
            return (int)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_set_encoding$MH() {
        return RuntimeHelper.requireNonNull(constants$323.const$3,"g_io_channel_set_encoding");
    }
    /**
     * {@snippet :
     * enum GIOStatus g_io_channel_set_encoding(struct _GIOChannel* channel, char* encoding, struct _GError** error);
     * }
     */
    public static int g_io_channel_set_encoding(MemorySegment channel, MemorySegment encoding, MemorySegment error) {
        var mh$ = g_io_channel_set_encoding$MH();
        try {
            return (int)mh$.invokeExact(channel, encoding, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_encoding$MH() {
        return RuntimeHelper.requireNonNull(constants$323.const$4,"g_io_channel_get_encoding");
    }
    /**
     * {@snippet :
     * char* g_io_channel_get_encoding(struct _GIOChannel* channel);
     * }
     */
    public static MemorySegment g_io_channel_get_encoding(MemorySegment channel) {
        var mh$ = g_io_channel_get_encoding$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_set_close_on_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$323.const$5,"g_io_channel_set_close_on_unref");
    }
    /**
     * {@snippet :
     * void g_io_channel_set_close_on_unref(struct _GIOChannel* channel, int do_close);
     * }
     */
    public static void g_io_channel_set_close_on_unref(MemorySegment channel, int do_close) {
        var mh$ = g_io_channel_set_close_on_unref$MH();
        try {
            mh$.invokeExact(channel, do_close);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_close_on_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$324.const$0,"g_io_channel_get_close_on_unref");
    }
    /**
     * {@snippet :
     * int g_io_channel_get_close_on_unref(struct _GIOChannel* channel);
     * }
     */
    public static int g_io_channel_get_close_on_unref(MemorySegment channel) {
        var mh$ = g_io_channel_get_close_on_unref$MH();
        try {
            return (int)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_flush$MH() {
        return RuntimeHelper.requireNonNull(constants$324.const$1,"g_io_channel_flush");
    }
    /**
     * {@snippet :
     * enum GIOStatus g_io_channel_flush(struct _GIOChannel* channel, struct _GError** error);
     * }
     */
    public static int g_io_channel_flush(MemorySegment channel, MemorySegment error) {
        var mh$ = g_io_channel_flush$MH();
        try {
            return (int)mh$.invokeExact(channel, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_read_line$MH() {
        return RuntimeHelper.requireNonNull(constants$324.const$2,"g_io_channel_read_line");
    }
    /**
     * {@snippet :
     * enum GIOStatus g_io_channel_read_line(struct _GIOChannel* channel, char** str_return, unsigned long* length, unsigned long* terminator_pos, struct _GError** error);
     * }
     */
    public static int g_io_channel_read_line(MemorySegment channel, MemorySegment str_return, MemorySegment length, MemorySegment terminator_pos, MemorySegment error) {
        var mh$ = g_io_channel_read_line$MH();
        try {
            return (int)mh$.invokeExact(channel, str_return, length, terminator_pos, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_read_line_string$MH() {
        return RuntimeHelper.requireNonNull(constants$324.const$3,"g_io_channel_read_line_string");
    }
    /**
     * {@snippet :
     * enum GIOStatus g_io_channel_read_line_string(struct _GIOChannel* channel, struct _GString* buffer, unsigned long* terminator_pos, struct _GError** error);
     * }
     */
    public static int g_io_channel_read_line_string(MemorySegment channel, MemorySegment buffer, MemorySegment terminator_pos, MemorySegment error) {
        var mh$ = g_io_channel_read_line_string$MH();
        try {
            return (int)mh$.invokeExact(channel, buffer, terminator_pos, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_read_to_end$MH() {
        return RuntimeHelper.requireNonNull(constants$324.const$4,"g_io_channel_read_to_end");
    }
    /**
     * {@snippet :
     * enum GIOStatus g_io_channel_read_to_end(struct _GIOChannel* channel, char** str_return, unsigned long* length, struct _GError** error);
     * }
     */
    public static int g_io_channel_read_to_end(MemorySegment channel, MemorySegment str_return, MemorySegment length, MemorySegment error) {
        var mh$ = g_io_channel_read_to_end$MH();
        try {
            return (int)mh$.invokeExact(channel, str_return, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_read_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$324.const$5,"g_io_channel_read_chars");
    }
    /**
     * {@snippet :
     * enum GIOStatus g_io_channel_read_chars(struct _GIOChannel* channel, char* buf, unsigned long count, unsigned long* bytes_read, struct _GError** error);
     * }
     */
    public static int g_io_channel_read_chars(MemorySegment channel, MemorySegment buf, long count, MemorySegment bytes_read, MemorySegment error) {
        var mh$ = g_io_channel_read_chars$MH();
        try {
            return (int)mh$.invokeExact(channel, buf, count, bytes_read, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_read_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$325.const$0,"g_io_channel_read_unichar");
    }
    /**
     * {@snippet :
     * enum GIOStatus g_io_channel_read_unichar(struct _GIOChannel* channel, unsigned int* thechar, struct _GError** error);
     * }
     */
    public static int g_io_channel_read_unichar(MemorySegment channel, MemorySegment thechar, MemorySegment error) {
        var mh$ = g_io_channel_read_unichar$MH();
        try {
            return (int)mh$.invokeExact(channel, thechar, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_write_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$325.const$1,"g_io_channel_write_chars");
    }
    /**
     * {@snippet :
     * enum GIOStatus g_io_channel_write_chars(struct _GIOChannel* channel, char* buf, long count, unsigned long* bytes_written, struct _GError** error);
     * }
     */
    public static int g_io_channel_write_chars(MemorySegment channel, MemorySegment buf, long count, MemorySegment bytes_written, MemorySegment error) {
        var mh$ = g_io_channel_write_chars$MH();
        try {
            return (int)mh$.invokeExact(channel, buf, count, bytes_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_write_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$325.const$2,"g_io_channel_write_unichar");
    }
    /**
     * {@snippet :
     * enum GIOStatus g_io_channel_write_unichar(struct _GIOChannel* channel, unsigned int thechar, struct _GError** error);
     * }
     */
    public static int g_io_channel_write_unichar(MemorySegment channel, int thechar, MemorySegment error) {
        var mh$ = g_io_channel_write_unichar$MH();
        try {
            return (int)mh$.invokeExact(channel, thechar, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_seek_position$MH() {
        return RuntimeHelper.requireNonNull(constants$325.const$3,"g_io_channel_seek_position");
    }
    /**
     * {@snippet :
     * enum GIOStatus g_io_channel_seek_position(struct _GIOChannel* channel, long offset, enum GSeekType type, struct _GError** error);
     * }
     */
    public static int g_io_channel_seek_position(MemorySegment channel, long offset, int type, MemorySegment error) {
        var mh$ = g_io_channel_seek_position$MH();
        try {
            return (int)mh$.invokeExact(channel, offset, type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_new_file$MH() {
        return RuntimeHelper.requireNonNull(constants$325.const$4,"g_io_channel_new_file");
    }
    /**
     * {@snippet :
     * struct _GIOChannel* g_io_channel_new_file(char* filename, char* mode, struct _GError** error);
     * }
     */
    public static MemorySegment g_io_channel_new_file(MemorySegment filename, MemorySegment mode, MemorySegment error) {
        var mh$ = g_io_channel_new_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filename, mode, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$325.const$5,"g_io_channel_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int g_io_channel_error_quark();
     * }
     */
    public static int g_io_channel_error_quark() {
        var mh$ = g_io_channel_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_error_from_errno$MH() {
        return RuntimeHelper.requireNonNull(constants$326.const$0,"g_io_channel_error_from_errno");
    }
    /**
     * {@snippet :
     * enum GIOChannelError g_io_channel_error_from_errno(int en);
     * }
     */
    public static int g_io_channel_error_from_errno(int en) {
        var mh$ = g_io_channel_error_from_errno$MH();
        try {
            return (int)mh$.invokeExact(en);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_unix_new$MH() {
        return RuntimeHelper.requireNonNull(constants$326.const$1,"g_io_channel_unix_new");
    }
    /**
     * {@snippet :
     * struct _GIOChannel* g_io_channel_unix_new(int fd);
     * }
     */
    public static MemorySegment g_io_channel_unix_new(int fd) {
        var mh$ = g_io_channel_unix_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_unix_get_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$326.const$2,"g_io_channel_unix_get_fd");
    }
    /**
     * {@snippet :
     * int g_io_channel_unix_get_fd(struct _GIOChannel* channel);
     * }
     */
    public static int g_io_channel_unix_get_fd(MemorySegment channel) {
        var mh$ = g_io_channel_unix_get_fd$MH();
        try {
            return (int)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * struct _GSourceFuncs g_io_watch_funcs;
     * }
     */
    public static MemorySegment g_io_watch_funcs$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$326.const$3,"g_io_watch_funcs");
    }
    /**
     * {@snippet :
     * enum GKeyFileError.G_KEY_FILE_ERROR_UNKNOWN_ENCODING = 0;
     * }
     */
    public static int G_KEY_FILE_ERROR_UNKNOWN_ENCODING() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GKeyFileError.G_KEY_FILE_ERROR_PARSE = 1;
     * }
     */
    public static int G_KEY_FILE_ERROR_PARSE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GKeyFileError.G_KEY_FILE_ERROR_NOT_FOUND = 2;
     * }
     */
    public static int G_KEY_FILE_ERROR_NOT_FOUND() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GKeyFileError.G_KEY_FILE_ERROR_KEY_NOT_FOUND = 3;
     * }
     */
    public static int G_KEY_FILE_ERROR_KEY_NOT_FOUND() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GKeyFileError.G_KEY_FILE_ERROR_GROUP_NOT_FOUND = 4;
     * }
     */
    public static int G_KEY_FILE_ERROR_GROUP_NOT_FOUND() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GKeyFileError.G_KEY_FILE_ERROR_INVALID_VALUE = 5;
     * }
     */
    public static int G_KEY_FILE_ERROR_INVALID_VALUE() {
        return (int)5L;
    }
    public static MethodHandle g_key_file_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$326.const$4,"g_key_file_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int g_key_file_error_quark();
     * }
     */
    public static int g_key_file_error_quark() {
        var mh$ = g_key_file_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GKeyFileFlags.G_KEY_FILE_NONE = 0;
     * }
     */
    public static int G_KEY_FILE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GKeyFileFlags.G_KEY_FILE_KEEP_COMMENTS = 1;
     * }
     */
    public static int G_KEY_FILE_KEEP_COMMENTS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GKeyFileFlags.G_KEY_FILE_KEEP_TRANSLATIONS = 2;
     * }
     */
    public static int G_KEY_FILE_KEEP_TRANSLATIONS() {
        return (int)2L;
    }
    public static MethodHandle g_key_file_new$MH() {
        return RuntimeHelper.requireNonNull(constants$326.const$5,"g_key_file_new");
    }
    /**
     * {@snippet :
     * struct _GKeyFile* g_key_file_new();
     * }
     */
    public static MemorySegment g_key_file_new() {
        var mh$ = g_key_file_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$327.const$0,"g_key_file_ref");
    }
    /**
     * {@snippet :
     * struct _GKeyFile* g_key_file_ref(struct _GKeyFile* key_file);
     * }
     */
    public static MemorySegment g_key_file_ref(MemorySegment key_file) {
        var mh$ = g_key_file_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$327.const$1,"g_key_file_unref");
    }
    /**
     * {@snippet :
     * void g_key_file_unref(struct _GKeyFile* key_file);
     * }
     */
    public static void g_key_file_unref(MemorySegment key_file) {
        var mh$ = g_key_file_unref$MH();
        try {
            mh$.invokeExact(key_file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_free$MH() {
        return RuntimeHelper.requireNonNull(constants$327.const$2,"g_key_file_free");
    }
    /**
     * {@snippet :
     * void g_key_file_free(struct _GKeyFile* key_file);
     * }
     */
    public static void g_key_file_free(MemorySegment key_file) {
        var mh$ = g_key_file_free$MH();
        try {
            mh$.invokeExact(key_file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_list_separator$MH() {
        return RuntimeHelper.requireNonNull(constants$327.const$3,"g_key_file_set_list_separator");
    }
    /**
     * {@snippet :
     * void g_key_file_set_list_separator(struct _GKeyFile* key_file, char separator);
     * }
     */
    public static void g_key_file_set_list_separator(MemorySegment key_file, byte separator) {
        var mh$ = g_key_file_set_list_separator$MH();
        try {
            mh$.invokeExact(key_file, separator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_load_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$327.const$5,"g_key_file_load_from_file");
    }
    /**
     * {@snippet :
     * int g_key_file_load_from_file(struct _GKeyFile* key_file, char* file, enum GKeyFileFlags flags, struct _GError** error);
     * }
     */
    public static int g_key_file_load_from_file(MemorySegment key_file, MemorySegment file, int flags, MemorySegment error) {
        var mh$ = g_key_file_load_from_file$MH();
        try {
            return (int)mh$.invokeExact(key_file, file, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_load_from_data$MH() {
        return RuntimeHelper.requireNonNull(constants$328.const$1,"g_key_file_load_from_data");
    }
    /**
     * {@snippet :
     * int g_key_file_load_from_data(struct _GKeyFile* key_file, char* data, unsigned long length, enum GKeyFileFlags flags, struct _GError** error);
     * }
     */
    public static int g_key_file_load_from_data(MemorySegment key_file, MemorySegment data, long length, int flags, MemorySegment error) {
        var mh$ = g_key_file_load_from_data$MH();
        try {
            return (int)mh$.invokeExact(key_file, data, length, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_load_from_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$328.const$2,"g_key_file_load_from_bytes");
    }
    /**
     * {@snippet :
     * int g_key_file_load_from_bytes(struct _GKeyFile* key_file, struct _GBytes* bytes, enum GKeyFileFlags flags, struct _GError** error);
     * }
     */
    public static int g_key_file_load_from_bytes(MemorySegment key_file, MemorySegment bytes, int flags, MemorySegment error) {
        var mh$ = g_key_file_load_from_bytes$MH();
        try {
            return (int)mh$.invokeExact(key_file, bytes, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_load_from_dirs$MH() {
        return RuntimeHelper.requireNonNull(constants$328.const$4,"g_key_file_load_from_dirs");
    }
    /**
     * {@snippet :
     * int g_key_file_load_from_dirs(struct _GKeyFile* key_file, char* file, char** search_dirs, char** full_path, enum GKeyFileFlags flags, struct _GError** error);
     * }
     */
    public static int g_key_file_load_from_dirs(MemorySegment key_file, MemorySegment file, MemorySegment search_dirs, MemorySegment full_path, int flags, MemorySegment error) {
        var mh$ = g_key_file_load_from_dirs$MH();
        try {
            return (int)mh$.invokeExact(key_file, file, search_dirs, full_path, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_load_from_data_dirs$MH() {
        return RuntimeHelper.requireNonNull(constants$328.const$6,"g_key_file_load_from_data_dirs");
    }
    /**
     * {@snippet :
     * int g_key_file_load_from_data_dirs(struct _GKeyFile* key_file, char* file, char** full_path, enum GKeyFileFlags flags, struct _GError** error);
     * }
     */
    public static int g_key_file_load_from_data_dirs(MemorySegment key_file, MemorySegment file, MemorySegment full_path, int flags, MemorySegment error) {
        var mh$ = g_key_file_load_from_data_dirs$MH();
        try {
            return (int)mh$.invokeExact(key_file, file, full_path, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_to_data$MH() {
        return RuntimeHelper.requireNonNull(constants$329.const$0,"g_key_file_to_data");
    }
    /**
     * {@snippet :
     * char* g_key_file_to_data(struct _GKeyFile* key_file, unsigned long* length, struct _GError** error);
     * }
     */
    public static MemorySegment g_key_file_to_data(MemorySegment key_file, MemorySegment length, MemorySegment error) {
        var mh$ = g_key_file_to_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_save_to_file$MH() {
        return RuntimeHelper.requireNonNull(constants$329.const$1,"g_key_file_save_to_file");
    }
    /**
     * {@snippet :
     * int g_key_file_save_to_file(struct _GKeyFile* key_file, char* filename, struct _GError** error);
     * }
     */
    public static int g_key_file_save_to_file(MemorySegment key_file, MemorySegment filename, MemorySegment error) {
        var mh$ = g_key_file_save_to_file$MH();
        try {
            return (int)mh$.invokeExact(key_file, filename, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_start_group$MH() {
        return RuntimeHelper.requireNonNull(constants$329.const$2,"g_key_file_get_start_group");
    }
    /**
     * {@snippet :
     * char* g_key_file_get_start_group(struct _GKeyFile* key_file);
     * }
     */
    public static MemorySegment g_key_file_get_start_group(MemorySegment key_file) {
        var mh$ = g_key_file_get_start_group$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_groups$MH() {
        return RuntimeHelper.requireNonNull(constants$329.const$3,"g_key_file_get_groups");
    }
    /**
     * {@snippet :
     * char** g_key_file_get_groups(struct _GKeyFile* key_file, unsigned long* length);
     * }
     */
    public static MemorySegment g_key_file_get_groups(MemorySegment key_file, MemorySegment length) {
        var mh$ = g_key_file_get_groups$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_keys$MH() {
        return RuntimeHelper.requireNonNull(constants$329.const$4,"g_key_file_get_keys");
    }
    /**
     * {@snippet :
     * char** g_key_file_get_keys(struct _GKeyFile* key_file, char* group_name, unsigned long* length, struct _GError** error);
     * }
     */
    public static MemorySegment g_key_file_get_keys(MemorySegment key_file, MemorySegment group_name, MemorySegment length, MemorySegment error) {
        var mh$ = g_key_file_get_keys$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file, group_name, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_has_group$MH() {
        return RuntimeHelper.requireNonNull(constants$329.const$5,"g_key_file_has_group");
    }
    /**
     * {@snippet :
     * int g_key_file_has_group(struct _GKeyFile* key_file, char* group_name);
     * }
     */
    public static int g_key_file_has_group(MemorySegment key_file, MemorySegment group_name) {
        var mh$ = g_key_file_has_group$MH();
        try {
            return (int)mh$.invokeExact(key_file, group_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_has_key$MH() {
        return RuntimeHelper.requireNonNull(constants$330.const$0,"g_key_file_has_key");
    }
    /**
     * {@snippet :
     * int g_key_file_has_key(struct _GKeyFile* key_file, char* group_name, char* key, struct _GError** error);
     * }
     */
    public static int g_key_file_has_key(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment error) {
        var mh$ = g_key_file_has_key$MH();
        try {
            return (int)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$330.const$1,"g_key_file_get_value");
    }
    /**
     * {@snippet :
     * char* g_key_file_get_value(struct _GKeyFile* key_file, char* group_name, char* key, struct _GError** error);
     * }
     */
    public static MemorySegment g_key_file_get_value(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment error) {
        var mh$ = g_key_file_get_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$330.const$2,"g_key_file_set_value");
    }
    /**
     * {@snippet :
     * void g_key_file_set_value(struct _GKeyFile* key_file, char* group_name, char* key, char* value);
     * }
     */
    public static void g_key_file_set_value(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment value) {
        var mh$ = g_key_file_set_value$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_string$MH() {
        return RuntimeHelper.requireNonNull(constants$330.const$3,"g_key_file_get_string");
    }
    /**
     * {@snippet :
     * char* g_key_file_get_string(struct _GKeyFile* key_file, char* group_name, char* key, struct _GError** error);
     * }
     */
    public static MemorySegment g_key_file_get_string(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment error) {
        var mh$ = g_key_file_get_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_string$MH() {
        return RuntimeHelper.requireNonNull(constants$330.const$4,"g_key_file_set_string");
    }
    /**
     * {@snippet :
     * void g_key_file_set_string(struct _GKeyFile* key_file, char* group_name, char* key, char* string);
     * }
     */
    public static void g_key_file_set_string(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment string) {
        var mh$ = g_key_file_set_string$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_locale_string$MH() {
        return RuntimeHelper.requireNonNull(constants$330.const$6,"g_key_file_get_locale_string");
    }
    /**
     * {@snippet :
     * char* g_key_file_get_locale_string(struct _GKeyFile* key_file, char* group_name, char* key, char* locale, struct _GError** error);
     * }
     */
    public static MemorySegment g_key_file_get_locale_string(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment locale, MemorySegment error) {
        var mh$ = g_key_file_get_locale_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file, group_name, key, locale, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_locale_for_key$MH() {
        return RuntimeHelper.requireNonNull(constants$331.const$0,"g_key_file_get_locale_for_key");
    }
    /**
     * {@snippet :
     * char* g_key_file_get_locale_for_key(struct _GKeyFile* key_file, char* group_name, char* key, char* locale);
     * }
     */
    public static MemorySegment g_key_file_get_locale_for_key(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment locale) {
        var mh$ = g_key_file_get_locale_for_key$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file, group_name, key, locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_locale_string$MH() {
        return RuntimeHelper.requireNonNull(constants$331.const$2,"g_key_file_set_locale_string");
    }
    /**
     * {@snippet :
     * void g_key_file_set_locale_string(struct _GKeyFile* key_file, char* group_name, char* key, char* locale, char* string);
     * }
     */
    public static void g_key_file_set_locale_string(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment locale, MemorySegment string) {
        var mh$ = g_key_file_set_locale_string$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, locale, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$331.const$3,"g_key_file_get_boolean");
    }
    /**
     * {@snippet :
     * int g_key_file_get_boolean(struct _GKeyFile* key_file, char* group_name, char* key, struct _GError** error);
     * }
     */
    public static int g_key_file_get_boolean(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment error) {
        var mh$ = g_key_file_get_boolean$MH();
        try {
            return (int)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$331.const$5,"g_key_file_set_boolean");
    }
    /**
     * {@snippet :
     * void g_key_file_set_boolean(struct _GKeyFile* key_file, char* group_name, char* key, int value);
     * }
     */
    public static void g_key_file_set_boolean(MemorySegment key_file, MemorySegment group_name, MemorySegment key, int value) {
        var mh$ = g_key_file_set_boolean$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_integer$MH() {
        return RuntimeHelper.requireNonNull(constants$332.const$0,"g_key_file_get_integer");
    }
    /**
     * {@snippet :
     * int g_key_file_get_integer(struct _GKeyFile* key_file, char* group_name, char* key, struct _GError** error);
     * }
     */
    public static int g_key_file_get_integer(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment error) {
        var mh$ = g_key_file_get_integer$MH();
        try {
            return (int)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_integer$MH() {
        return RuntimeHelper.requireNonNull(constants$332.const$1,"g_key_file_set_integer");
    }
    /**
     * {@snippet :
     * void g_key_file_set_integer(struct _GKeyFile* key_file, char* group_name, char* key, int value);
     * }
     */
    public static void g_key_file_set_integer(MemorySegment key_file, MemorySegment group_name, MemorySegment key, int value) {
        var mh$ = g_key_file_set_integer$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$332.const$3,"g_key_file_get_int64");
    }
    /**
     * {@snippet :
     * long g_key_file_get_int64(struct _GKeyFile* key_file, char* group_name, char* key, struct _GError** error);
     * }
     */
    public static long g_key_file_get_int64(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment error) {
        var mh$ = g_key_file_get_int64$MH();
        try {
            return (long)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$332.const$4,"g_key_file_set_int64");
    }
    /**
     * {@snippet :
     * void g_key_file_set_int64(struct _GKeyFile* key_file, char* group_name, char* key, long value);
     * }
     */
    public static void g_key_file_set_int64(MemorySegment key_file, MemorySegment group_name, MemorySegment key, long value) {
        var mh$ = g_key_file_set_int64$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$332.const$5,"g_key_file_get_uint64");
    }
    /**
     * {@snippet :
     * unsigned long g_key_file_get_uint64(struct _GKeyFile* key_file, char* group_name, char* key, struct _GError** error);
     * }
     */
    public static long g_key_file_get_uint64(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment error) {
        var mh$ = g_key_file_get_uint64$MH();
        try {
            return (long)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$333.const$0,"g_key_file_set_uint64");
    }
    /**
     * {@snippet :
     * void g_key_file_set_uint64(struct _GKeyFile* key_file, char* group_name, char* key, unsigned long value);
     * }
     */
    public static void g_key_file_set_uint64(MemorySegment key_file, MemorySegment group_name, MemorySegment key, long value) {
        var mh$ = g_key_file_set_uint64$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_double$MH() {
        return RuntimeHelper.requireNonNull(constants$333.const$2,"g_key_file_get_double");
    }
    /**
     * {@snippet :
     * double g_key_file_get_double(struct _GKeyFile* key_file, char* group_name, char* key, struct _GError** error);
     * }
     */
    public static double g_key_file_get_double(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment error) {
        var mh$ = g_key_file_get_double$MH();
        try {
            return (double)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_double$MH() {
        return RuntimeHelper.requireNonNull(constants$333.const$4,"g_key_file_set_double");
    }
    /**
     * {@snippet :
     * void g_key_file_set_double(struct _GKeyFile* key_file, char* group_name, char* key, double value);
     * }
     */
    public static void g_key_file_set_double(MemorySegment key_file, MemorySegment group_name, MemorySegment key, double value) {
        var mh$ = g_key_file_set_double$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_string_list$MH() {
        return RuntimeHelper.requireNonNull(constants$333.const$5,"g_key_file_get_string_list");
    }
    /**
     * {@snippet :
     * char** g_key_file_get_string_list(struct _GKeyFile* key_file, char* group_name, char* key, unsigned long* length, struct _GError** error);
     * }
     */
    public static MemorySegment g_key_file_get_string_list(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment length, MemorySegment error) {
        var mh$ = g_key_file_get_string_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file, group_name, key, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_string_list$MH() {
        return RuntimeHelper.requireNonNull(constants$334.const$1,"g_key_file_set_string_list");
    }
    /**
     * {@snippet :
     * void g_key_file_set_string_list(struct _GKeyFile* key_file, char* group_name, char* key, char* list[], unsigned long length);
     * }
     */
    public static void g_key_file_set_string_list(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment list, long length) {
        var mh$ = g_key_file_set_string_list$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, list, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_locale_string_list$MH() {
        return RuntimeHelper.requireNonNull(constants$334.const$3,"g_key_file_get_locale_string_list");
    }
    /**
     * {@snippet :
     * char** g_key_file_get_locale_string_list(struct _GKeyFile* key_file, char* group_name, char* key, char* locale, unsigned long* length, struct _GError** error);
     * }
     */
    public static MemorySegment g_key_file_get_locale_string_list(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment locale, MemorySegment length, MemorySegment error) {
        var mh$ = g_key_file_get_locale_string_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file, group_name, key, locale, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_locale_string_list$MH() {
        return RuntimeHelper.requireNonNull(constants$334.const$5,"g_key_file_set_locale_string_list");
    }
    /**
     * {@snippet :
     * void g_key_file_set_locale_string_list(struct _GKeyFile* key_file, char* group_name, char* key, char* locale, char* list[], unsigned long length);
     * }
     */
    public static void g_key_file_set_locale_string_list(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment locale, MemorySegment list, long length) {
        var mh$ = g_key_file_set_locale_string_list$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, locale, list, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_boolean_list$MH() {
        return RuntimeHelper.requireNonNull(constants$335.const$0,"g_key_file_get_boolean_list");
    }
    /**
     * {@snippet :
     * int* g_key_file_get_boolean_list(struct _GKeyFile* key_file, char* group_name, char* key, unsigned long* length, struct _GError** error);
     * }
     */
    public static MemorySegment g_key_file_get_boolean_list(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment length, MemorySegment error) {
        var mh$ = g_key_file_get_boolean_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file, group_name, key, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_boolean_list$MH() {
        return RuntimeHelper.requireNonNull(constants$335.const$1,"g_key_file_set_boolean_list");
    }
    /**
     * {@snippet :
     * void g_key_file_set_boolean_list(struct _GKeyFile* key_file, char* group_name, char* key, int list[], unsigned long length);
     * }
     */
    public static void g_key_file_set_boolean_list(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment list, long length) {
        var mh$ = g_key_file_set_boolean_list$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, list, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_integer_list$MH() {
        return RuntimeHelper.requireNonNull(constants$335.const$2,"g_key_file_get_integer_list");
    }
    /**
     * {@snippet :
     * int* g_key_file_get_integer_list(struct _GKeyFile* key_file, char* group_name, char* key, unsigned long* length, struct _GError** error);
     * }
     */
    public static MemorySegment g_key_file_get_integer_list(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment length, MemorySegment error) {
        var mh$ = g_key_file_get_integer_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file, group_name, key, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_double_list$MH() {
        return RuntimeHelper.requireNonNull(constants$335.const$3,"g_key_file_set_double_list");
    }
    /**
     * {@snippet :
     * void g_key_file_set_double_list(struct _GKeyFile* key_file, char* group_name, char* key, double list[], unsigned long length);
     * }
     */
    public static void g_key_file_set_double_list(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment list, long length) {
        var mh$ = g_key_file_set_double_list$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, list, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_double_list$MH() {
        return RuntimeHelper.requireNonNull(constants$335.const$4,"g_key_file_get_double_list");
    }
    /**
     * {@snippet :
     * double* g_key_file_get_double_list(struct _GKeyFile* key_file, char* group_name, char* key, unsigned long* length, struct _GError** error);
     * }
     */
    public static MemorySegment g_key_file_get_double_list(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment length, MemorySegment error) {
        var mh$ = g_key_file_get_double_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file, group_name, key, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_integer_list$MH() {
        return RuntimeHelper.requireNonNull(constants$335.const$5,"g_key_file_set_integer_list");
    }
    /**
     * {@snippet :
     * void g_key_file_set_integer_list(struct _GKeyFile* key_file, char* group_name, char* key, int list[], unsigned long length);
     * }
     */
    public static void g_key_file_set_integer_list(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment list, long length) {
        var mh$ = g_key_file_set_integer_list$MH();
        try {
            mh$.invokeExact(key_file, group_name, key, list, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_set_comment$MH() {
        return RuntimeHelper.requireNonNull(constants$336.const$0,"g_key_file_set_comment");
    }
    /**
     * {@snippet :
     * int g_key_file_set_comment(struct _GKeyFile* key_file, char* group_name, char* key, char* comment, struct _GError** error);
     * }
     */
    public static int g_key_file_set_comment(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment comment, MemorySegment error) {
        var mh$ = g_key_file_set_comment$MH();
        try {
            return (int)mh$.invokeExact(key_file, group_name, key, comment, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_comment$MH() {
        return RuntimeHelper.requireNonNull(constants$336.const$1,"g_key_file_get_comment");
    }
    /**
     * {@snippet :
     * char* g_key_file_get_comment(struct _GKeyFile* key_file, char* group_name, char* key, struct _GError** error);
     * }
     */
    public static MemorySegment g_key_file_get_comment(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment error) {
        var mh$ = g_key_file_get_comment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_remove_comment$MH() {
        return RuntimeHelper.requireNonNull(constants$336.const$2,"g_key_file_remove_comment");
    }
    /**
     * {@snippet :
     * int g_key_file_remove_comment(struct _GKeyFile* key_file, char* group_name, char* key, struct _GError** error);
     * }
     */
    public static int g_key_file_remove_comment(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment error) {
        var mh$ = g_key_file_remove_comment$MH();
        try {
            return (int)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_remove_key$MH() {
        return RuntimeHelper.requireNonNull(constants$336.const$3,"g_key_file_remove_key");
    }
    /**
     * {@snippet :
     * int g_key_file_remove_key(struct _GKeyFile* key_file, char* group_name, char* key, struct _GError** error);
     * }
     */
    public static int g_key_file_remove_key(MemorySegment key_file, MemorySegment group_name, MemorySegment key, MemorySegment error) {
        var mh$ = g_key_file_remove_key$MH();
        try {
            return (int)mh$.invokeExact(key_file, group_name, key, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_remove_group$MH() {
        return RuntimeHelper.requireNonNull(constants$336.const$4,"g_key_file_remove_group");
    }
    /**
     * {@snippet :
     * int g_key_file_remove_group(struct _GKeyFile* key_file, char* group_name, struct _GError** error);
     * }
     */
    public static int g_key_file_remove_group(MemorySegment key_file, MemorySegment group_name, MemorySegment error) {
        var mh$ = g_key_file_remove_group$MH();
        try {
            return (int)mh$.invokeExact(key_file, group_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_new$MH() {
        return RuntimeHelper.requireNonNull(constants$336.const$5,"g_mapped_file_new");
    }
    /**
     * {@snippet :
     * struct _GMappedFile* g_mapped_file_new(char* filename, int writable, struct _GError** error);
     * }
     */
    public static MemorySegment g_mapped_file_new(MemorySegment filename, int writable, MemorySegment error) {
        var mh$ = g_mapped_file_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filename, writable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_new_from_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$337.const$0,"g_mapped_file_new_from_fd");
    }
    /**
     * {@snippet :
     * struct _GMappedFile* g_mapped_file_new_from_fd(int fd, int writable, struct _GError** error);
     * }
     */
    public static MemorySegment g_mapped_file_new_from_fd(int fd, int writable, MemorySegment error) {
        var mh$ = g_mapped_file_new_from_fd$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fd, writable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_get_length$MH() {
        return RuntimeHelper.requireNonNull(constants$337.const$1,"g_mapped_file_get_length");
    }
    /**
     * {@snippet :
     * unsigned long g_mapped_file_get_length(struct _GMappedFile* file);
     * }
     */
    public static long g_mapped_file_get_length(MemorySegment file) {
        var mh$ = g_mapped_file_get_length$MH();
        try {
            return (long)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_get_contents$MH() {
        return RuntimeHelper.requireNonNull(constants$337.const$2,"g_mapped_file_get_contents");
    }
    /**
     * {@snippet :
     * char* g_mapped_file_get_contents(struct _GMappedFile* file);
     * }
     */
    public static MemorySegment g_mapped_file_get_contents(MemorySegment file) {
        var mh$ = g_mapped_file_get_contents$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_get_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$337.const$3,"g_mapped_file_get_bytes");
    }
    /**
     * {@snippet :
     * struct _GBytes* g_mapped_file_get_bytes(struct _GMappedFile* file);
     * }
     */
    public static MemorySegment g_mapped_file_get_bytes(MemorySegment file) {
        var mh$ = g_mapped_file_get_bytes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$337.const$4,"g_mapped_file_ref");
    }
    /**
     * {@snippet :
     * struct _GMappedFile* g_mapped_file_ref(struct _GMappedFile* file);
     * }
     */
    public static MemorySegment g_mapped_file_ref(MemorySegment file) {
        var mh$ = g_mapped_file_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$337.const$5,"g_mapped_file_unref");
    }
    /**
     * {@snippet :
     * void g_mapped_file_unref(struct _GMappedFile* file);
     * }
     */
    public static void g_mapped_file_unref(MemorySegment file) {
        var mh$ = g_mapped_file_unref$MH();
        try {
            mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_free$MH() {
        return RuntimeHelper.requireNonNull(constants$338.const$0,"g_mapped_file_free");
    }
    /**
     * {@snippet :
     * void g_mapped_file_free(struct _GMappedFile* file);
     * }
     */
    public static void g_mapped_file_free(MemorySegment file) {
        var mh$ = g_mapped_file_free$MH();
        try {
            mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GMarkupError.G_MARKUP_ERROR_BAD_UTF8 = 0;
     * }
     */
    public static int G_MARKUP_ERROR_BAD_UTF8() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GMarkupError.G_MARKUP_ERROR_EMPTY = 1;
     * }
     */
    public static int G_MARKUP_ERROR_EMPTY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GMarkupError.G_MARKUP_ERROR_PARSE = 2;
     * }
     */
    public static int G_MARKUP_ERROR_PARSE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GMarkupError.G_MARKUP_ERROR_UNKNOWN_ELEMENT = 3;
     * }
     */
    public static int G_MARKUP_ERROR_UNKNOWN_ELEMENT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GMarkupError.G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE = 4;
     * }
     */
    public static int G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GMarkupError.G_MARKUP_ERROR_INVALID_CONTENT = 5;
     * }
     */
    public static int G_MARKUP_ERROR_INVALID_CONTENT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GMarkupError.G_MARKUP_ERROR_MISSING_ATTRIBUTE = 6;
     * }
     */
    public static int G_MARKUP_ERROR_MISSING_ATTRIBUTE() {
        return (int)6L;
    }
    public static MethodHandle g_markup_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$338.const$1,"g_markup_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int g_markup_error_quark();
     * }
     */
    public static int g_markup_error_quark() {
        var mh$ = g_markup_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GMarkupParseFlags.G_MARKUP_DEFAULT_FLAGS = 0;
     * }
     */
    public static int G_MARKUP_DEFAULT_FLAGS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GMarkupParseFlags.G_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG = 1;
     * }
     */
    public static int G_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GMarkupParseFlags.G_MARKUP_TREAT_CDATA_AS_TEXT = 2;
     * }
     */
    public static int G_MARKUP_TREAT_CDATA_AS_TEXT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GMarkupParseFlags.G_MARKUP_PREFIX_ERROR_POSITION = 4;
     * }
     */
    public static int G_MARKUP_PREFIX_ERROR_POSITION() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GMarkupParseFlags.G_MARKUP_IGNORE_QUALIFIED = 8;
     * }
     */
    public static int G_MARKUP_IGNORE_QUALIFIED() {
        return (int)8L;
    }
    public static MethodHandle g_markup_parse_context_new$MH() {
        return RuntimeHelper.requireNonNull(constants$341.const$0,"g_markup_parse_context_new");
    }
    /**
     * {@snippet :
     * struct _GMarkupParseContext* g_markup_parse_context_new(struct _GMarkupParser* parser, enum GMarkupParseFlags flags, void* user_data, void (*user_data_dnotify)(void*));
     * }
     */
    public static MemorySegment g_markup_parse_context_new(MemorySegment parser, int flags, MemorySegment user_data, MemorySegment user_data_dnotify) {
        var mh$ = g_markup_parse_context_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parser, flags, user_data, user_data_dnotify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$341.const$1,"g_markup_parse_context_ref");
    }
    /**
     * {@snippet :
     * struct _GMarkupParseContext* g_markup_parse_context_ref(struct _GMarkupParseContext* context);
     * }
     */
    public static MemorySegment g_markup_parse_context_ref(MemorySegment context) {
        var mh$ = g_markup_parse_context_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$341.const$2,"g_markup_parse_context_unref");
    }
    /**
     * {@snippet :
     * void g_markup_parse_context_unref(struct _GMarkupParseContext* context);
     * }
     */
    public static void g_markup_parse_context_unref(MemorySegment context) {
        var mh$ = g_markup_parse_context_unref$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_free$MH() {
        return RuntimeHelper.requireNonNull(constants$341.const$3,"g_markup_parse_context_free");
    }
    /**
     * {@snippet :
     * void g_markup_parse_context_free(struct _GMarkupParseContext* context);
     * }
     */
    public static void g_markup_parse_context_free(MemorySegment context) {
        var mh$ = g_markup_parse_context_free$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_parse$MH() {
        return RuntimeHelper.requireNonNull(constants$341.const$4,"g_markup_parse_context_parse");
    }
    /**
     * {@snippet :
     * int g_markup_parse_context_parse(struct _GMarkupParseContext* context, char* text, long text_len, struct _GError** error);
     * }
     */
    public static int g_markup_parse_context_parse(MemorySegment context, MemorySegment text, long text_len, MemorySegment error) {
        var mh$ = g_markup_parse_context_parse$MH();
        try {
            return (int)mh$.invokeExact(context, text, text_len, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_push$MH() {
        return RuntimeHelper.requireNonNull(constants$341.const$5,"g_markup_parse_context_push");
    }
    /**
     * {@snippet :
     * void g_markup_parse_context_push(struct _GMarkupParseContext* context, struct _GMarkupParser* parser, void* user_data);
     * }
     */
    public static void g_markup_parse_context_push(MemorySegment context, MemorySegment parser, MemorySegment user_data) {
        var mh$ = g_markup_parse_context_push$MH();
        try {
            mh$.invokeExact(context, parser, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$342.const$0,"g_markup_parse_context_pop");
    }
    /**
     * {@snippet :
     * void* g_markup_parse_context_pop(struct _GMarkupParseContext* context);
     * }
     */
    public static MemorySegment g_markup_parse_context_pop(MemorySegment context) {
        var mh$ = g_markup_parse_context_pop$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_end_parse$MH() {
        return RuntimeHelper.requireNonNull(constants$342.const$1,"g_markup_parse_context_end_parse");
    }
    /**
     * {@snippet :
     * int g_markup_parse_context_end_parse(struct _GMarkupParseContext* context, struct _GError** error);
     * }
     */
    public static int g_markup_parse_context_end_parse(MemorySegment context, MemorySegment error) {
        var mh$ = g_markup_parse_context_end_parse$MH();
        try {
            return (int)mh$.invokeExact(context, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_get_element$MH() {
        return RuntimeHelper.requireNonNull(constants$342.const$2,"g_markup_parse_context_get_element");
    }
    /**
     * {@snippet :
     * char* g_markup_parse_context_get_element(struct _GMarkupParseContext* context);
     * }
     */
    public static MemorySegment g_markup_parse_context_get_element(MemorySegment context) {
        var mh$ = g_markup_parse_context_get_element$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_get_element_stack$MH() {
        return RuntimeHelper.requireNonNull(constants$342.const$3,"g_markup_parse_context_get_element_stack");
    }
    /**
     * {@snippet :
     * struct _GSList* g_markup_parse_context_get_element_stack(struct _GMarkupParseContext* context);
     * }
     */
    public static MemorySegment g_markup_parse_context_get_element_stack(MemorySegment context) {
        var mh$ = g_markup_parse_context_get_element_stack$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$342.const$4,"g_markup_parse_context_get_position");
    }
    /**
     * {@snippet :
     * void g_markup_parse_context_get_position(struct _GMarkupParseContext* context, int* line_number, int* char_number);
     * }
     */
    public static void g_markup_parse_context_get_position(MemorySegment context, MemorySegment line_number, MemorySegment char_number) {
        var mh$ = g_markup_parse_context_get_position$MH();
        try {
            mh$.invokeExact(context, line_number, char_number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$342.const$5,"g_markup_parse_context_get_user_data");
    }
    /**
     * {@snippet :
     * void* g_markup_parse_context_get_user_data(struct _GMarkupParseContext* context);
     * }
     */
    public static MemorySegment g_markup_parse_context_get_user_data(MemorySegment context) {
        var mh$ = g_markup_parse_context_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_escape_text$MH() {
        return RuntimeHelper.requireNonNull(constants$343.const$0,"g_markup_escape_text");
    }
    /**
     * {@snippet :
     * char* g_markup_escape_text(char* text, long length);
     * }
     */
    public static MemorySegment g_markup_escape_text(MemorySegment text, long length) {
        var mh$ = g_markup_escape_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(text, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_printf_escaped$MH() {
        return RuntimeHelper.requireNonNull(constants$343.const$1,"g_markup_printf_escaped");
    }
    /**
     * {@snippet :
     * char* g_markup_printf_escaped(char* format,...);
     * }
     */
    public static MemorySegment g_markup_printf_escaped(MemorySegment format, Object... x1) {
        var mh$ = g_markup_printf_escaped$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_vprintf_escaped$MH() {
        return RuntimeHelper.requireNonNull(constants$343.const$2,"g_markup_vprintf_escaped");
    }
    /**
     * {@snippet :
     * char* g_markup_vprintf_escaped(char* format, struct __va_list args);
     * }
     */
    public static MemorySegment g_markup_vprintf_escaped(MemorySegment format, MemorySegment args) {
        var mh$ = g_markup_vprintf_escaped$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GMarkupCollectType.G_MARKUP_COLLECT_INVALID = 0;
     * }
     */
    public static int G_MARKUP_COLLECT_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GMarkupCollectType.G_MARKUP_COLLECT_STRING = 1;
     * }
     */
    public static int G_MARKUP_COLLECT_STRING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GMarkupCollectType.G_MARKUP_COLLECT_STRDUP = 2;
     * }
     */
    public static int G_MARKUP_COLLECT_STRDUP() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GMarkupCollectType.G_MARKUP_COLLECT_BOOLEAN = 3;
     * }
     */
    public static int G_MARKUP_COLLECT_BOOLEAN() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GMarkupCollectType.G_MARKUP_COLLECT_TRISTATE = 4;
     * }
     */
    public static int G_MARKUP_COLLECT_TRISTATE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GMarkupCollectType.G_MARKUP_COLLECT_OPTIONAL = 65536;
     * }
     */
    public static int G_MARKUP_COLLECT_OPTIONAL() {
        return (int)65536L;
    }
    public static MethodHandle g_markup_collect_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$343.const$3,"g_markup_collect_attributes");
    }
    /**
     * {@snippet :
     * int g_markup_collect_attributes(char* element_name, char** attribute_names, char** attribute_values, struct _GError** error, enum GMarkupCollectType first_type, char* first_attr,...);
     * }
     */
    public static int g_markup_collect_attributes(MemorySegment element_name, MemorySegment attribute_names, MemorySegment attribute_values, MemorySegment error, int first_type, MemorySegment first_attr, Object... x6) {
        var mh$ = g_markup_collect_attributes$MH();
        try {
            return (int)mh$.invokeExact(element_name, attribute_names, attribute_values, error, first_type, first_attr, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_string_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$343.const$4,"g_variant_type_string_is_valid");
    }
    /**
     * {@snippet :
     * int g_variant_type_string_is_valid(char* type_string);
     * }
     */
    public static int g_variant_type_string_is_valid(MemorySegment type_string) {
        var mh$ = g_variant_type_string_is_valid$MH();
        try {
            return (int)mh$.invokeExact(type_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_string_scan$MH() {
        return RuntimeHelper.requireNonNull(constants$343.const$5,"g_variant_type_string_scan");
    }
    /**
     * {@snippet :
     * int g_variant_type_string_scan(char* string, char* limit, char** endptr);
     * }
     */
    public static int g_variant_type_string_scan(MemorySegment string, MemorySegment limit, MemorySegment endptr) {
        var mh$ = g_variant_type_string_scan$MH();
        try {
            return (int)mh$.invokeExact(string, limit, endptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_free$MH() {
        return RuntimeHelper.requireNonNull(constants$344.const$0,"g_variant_type_free");
    }
    /**
     * {@snippet :
     * void g_variant_type_free(struct _GVariantType* type);
     * }
     */
    public static void g_variant_type_free(MemorySegment type) {
        var mh$ = g_variant_type_free$MH();
        try {
            mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$344.const$1,"g_variant_type_copy");
    }
    /**
     * {@snippet :
     * struct _GVariantType* g_variant_type_copy(struct _GVariantType* type);
     * }
     */
    public static MemorySegment g_variant_type_copy(MemorySegment type) {
        var mh$ = g_variant_type_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_new$MH() {
        return RuntimeHelper.requireNonNull(constants$344.const$2,"g_variant_type_new");
    }
    /**
     * {@snippet :
     * struct _GVariantType* g_variant_type_new(char* type_string);
     * }
     */
    public static MemorySegment g_variant_type_new(MemorySegment type_string) {
        var mh$ = g_variant_type_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_get_string_length$MH() {
        return RuntimeHelper.requireNonNull(constants$344.const$3,"g_variant_type_get_string_length");
    }
    /**
     * {@snippet :
     * unsigned long g_variant_type_get_string_length(struct _GVariantType* type);
     * }
     */
    public static long g_variant_type_get_string_length(MemorySegment type) {
        var mh$ = g_variant_type_get_string_length$MH();
        try {
            return (long)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_peek_string$MH() {
        return RuntimeHelper.requireNonNull(constants$344.const$4,"g_variant_type_peek_string");
    }
    /**
     * {@snippet :
     * char* g_variant_type_peek_string(struct _GVariantType* type);
     * }
     */
    public static MemorySegment g_variant_type_peek_string(MemorySegment type) {
        var mh$ = g_variant_type_peek_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_dup_string$MH() {
        return RuntimeHelper.requireNonNull(constants$344.const$5,"g_variant_type_dup_string");
    }
    /**
     * {@snippet :
     * char* g_variant_type_dup_string(struct _GVariantType* type);
     * }
     */
    public static MemorySegment g_variant_type_dup_string(MemorySegment type) {
        var mh$ = g_variant_type_dup_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_is_definite$MH() {
        return RuntimeHelper.requireNonNull(constants$345.const$0,"g_variant_type_is_definite");
    }
    /**
     * {@snippet :
     * int g_variant_type_is_definite(struct _GVariantType* type);
     * }
     */
    public static int g_variant_type_is_definite(MemorySegment type) {
        var mh$ = g_variant_type_is_definite$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_is_container$MH() {
        return RuntimeHelper.requireNonNull(constants$345.const$1,"g_variant_type_is_container");
    }
    /**
     * {@snippet :
     * int g_variant_type_is_container(struct _GVariantType* type);
     * }
     */
    public static int g_variant_type_is_container(MemorySegment type) {
        var mh$ = g_variant_type_is_container$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_is_basic$MH() {
        return RuntimeHelper.requireNonNull(constants$345.const$2,"g_variant_type_is_basic");
    }
    /**
     * {@snippet :
     * int g_variant_type_is_basic(struct _GVariantType* type);
     * }
     */
    public static int g_variant_type_is_basic(MemorySegment type) {
        var mh$ = g_variant_type_is_basic$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_is_maybe$MH() {
        return RuntimeHelper.requireNonNull(constants$345.const$3,"g_variant_type_is_maybe");
    }
    /**
     * {@snippet :
     * int g_variant_type_is_maybe(struct _GVariantType* type);
     * }
     */
    public static int g_variant_type_is_maybe(MemorySegment type) {
        var mh$ = g_variant_type_is_maybe$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_is_array$MH() {
        return RuntimeHelper.requireNonNull(constants$345.const$4,"g_variant_type_is_array");
    }
    /**
     * {@snippet :
     * int g_variant_type_is_array(struct _GVariantType* type);
     * }
     */
    public static int g_variant_type_is_array(MemorySegment type) {
        var mh$ = g_variant_type_is_array$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_is_tuple$MH() {
        return RuntimeHelper.requireNonNull(constants$345.const$5,"g_variant_type_is_tuple");
    }
    /**
     * {@snippet :
     * int g_variant_type_is_tuple(struct _GVariantType* type);
     * }
     */
    public static int g_variant_type_is_tuple(MemorySegment type) {
        var mh$ = g_variant_type_is_tuple$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_is_dict_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$346.const$0,"g_variant_type_is_dict_entry");
    }
    /**
     * {@snippet :
     * int g_variant_type_is_dict_entry(struct _GVariantType* type);
     * }
     */
    public static int g_variant_type_is_dict_entry(MemorySegment type) {
        var mh$ = g_variant_type_is_dict_entry$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_is_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$346.const$1,"g_variant_type_is_variant");
    }
    /**
     * {@snippet :
     * int g_variant_type_is_variant(struct _GVariantType* type);
     * }
     */
    public static int g_variant_type_is_variant(MemorySegment type) {
        var mh$ = g_variant_type_is_variant$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$346.const$2,"g_variant_type_hash");
    }
    /**
     * {@snippet :
     * unsigned int g_variant_type_hash(void* type);
     * }
     */
    public static int g_variant_type_hash(MemorySegment type) {
        var mh$ = g_variant_type_hash$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$346.const$3,"g_variant_type_equal");
    }
    /**
     * {@snippet :
     * int g_variant_type_equal(void* type1, void* type2);
     * }
     */
    public static int g_variant_type_equal(MemorySegment type1, MemorySegment type2) {
        var mh$ = g_variant_type_equal$MH();
        try {
            return (int)mh$.invokeExact(type1, type2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_is_subtype_of$MH() {
        return RuntimeHelper.requireNonNull(constants$346.const$4,"g_variant_type_is_subtype_of");
    }
    /**
     * {@snippet :
     * int g_variant_type_is_subtype_of(struct _GVariantType* type, struct _GVariantType* supertype);
     * }
     */
    public static int g_variant_type_is_subtype_of(MemorySegment type, MemorySegment supertype) {
        var mh$ = g_variant_type_is_subtype_of$MH();
        try {
            return (int)mh$.invokeExact(type, supertype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_element$MH() {
        return RuntimeHelper.requireNonNull(constants$346.const$5,"g_variant_type_element");
    }
    /**
     * {@snippet :
     * struct _GVariantType* g_variant_type_element(struct _GVariantType* type);
     * }
     */
    public static MemorySegment g_variant_type_element(MemorySegment type) {
        var mh$ = g_variant_type_element$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_first$MH() {
        return RuntimeHelper.requireNonNull(constants$347.const$0,"g_variant_type_first");
    }
    /**
     * {@snippet :
     * struct _GVariantType* g_variant_type_first(struct _GVariantType* type);
     * }
     */
    public static MemorySegment g_variant_type_first(MemorySegment type) {
        var mh$ = g_variant_type_first$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_next$MH() {
        return RuntimeHelper.requireNonNull(constants$347.const$1,"g_variant_type_next");
    }
    /**
     * {@snippet :
     * struct _GVariantType* g_variant_type_next(struct _GVariantType* type);
     * }
     */
    public static MemorySegment g_variant_type_next(MemorySegment type) {
        var mh$ = g_variant_type_next$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_n_items$MH() {
        return RuntimeHelper.requireNonNull(constants$347.const$2,"g_variant_type_n_items");
    }
    /**
     * {@snippet :
     * unsigned long g_variant_type_n_items(struct _GVariantType* type);
     * }
     */
    public static long g_variant_type_n_items(MemorySegment type) {
        var mh$ = g_variant_type_n_items$MH();
        try {
            return (long)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_key$MH() {
        return RuntimeHelper.requireNonNull(constants$347.const$3,"g_variant_type_key");
    }
    /**
     * {@snippet :
     * struct _GVariantType* g_variant_type_key(struct _GVariantType* type);
     * }
     */
    public static MemorySegment g_variant_type_key(MemorySegment type) {
        var mh$ = g_variant_type_key$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_value$MH() {
        return RuntimeHelper.requireNonNull(constants$347.const$4,"g_variant_type_value");
    }
    /**
     * {@snippet :
     * struct _GVariantType* g_variant_type_value(struct _GVariantType* type);
     * }
     */
    public static MemorySegment g_variant_type_value(MemorySegment type) {
        var mh$ = g_variant_type_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_new_array$MH() {
        return RuntimeHelper.requireNonNull(constants$347.const$5,"g_variant_type_new_array");
    }
    /**
     * {@snippet :
     * struct _GVariantType* g_variant_type_new_array(struct _GVariantType* element);
     * }
     */
    public static MemorySegment g_variant_type_new_array(MemorySegment element) {
        var mh$ = g_variant_type_new_array$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(element);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_new_maybe$MH() {
        return RuntimeHelper.requireNonNull(constants$348.const$0,"g_variant_type_new_maybe");
    }
    /**
     * {@snippet :
     * struct _GVariantType* g_variant_type_new_maybe(struct _GVariantType* element);
     * }
     */
    public static MemorySegment g_variant_type_new_maybe(MemorySegment element) {
        var mh$ = g_variant_type_new_maybe$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(element);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_new_tuple$MH() {
        return RuntimeHelper.requireNonNull(constants$348.const$1,"g_variant_type_new_tuple");
    }
    /**
     * {@snippet :
     * struct _GVariantType* g_variant_type_new_tuple(struct _GVariantType** items, int length);
     * }
     */
    public static MemorySegment g_variant_type_new_tuple(MemorySegment items, int length) {
        var mh$ = g_variant_type_new_tuple$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(items, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_new_dict_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$348.const$2,"g_variant_type_new_dict_entry");
    }
    /**
     * {@snippet :
     * struct _GVariantType* g_variant_type_new_dict_entry(struct _GVariantType* key, struct _GVariantType* value);
     * }
     */
    public static MemorySegment g_variant_type_new_dict_entry(MemorySegment key, MemorySegment value) {
        var mh$ = g_variant_type_new_dict_entry$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_checked_$MH() {
        return RuntimeHelper.requireNonNull(constants$348.const$3,"g_variant_type_checked_");
    }
    /**
     * {@snippet :
     * struct _GVariantType* g_variant_type_checked_(char*);
     * }
     */
    public static MemorySegment g_variant_type_checked_(MemorySegment x0) {
        var mh$ = g_variant_type_checked_$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_string_get_depth_$MH() {
        return RuntimeHelper.requireNonNull(constants$348.const$4,"g_variant_type_string_get_depth_");
    }
    /**
     * {@snippet :
     * unsigned long g_variant_type_string_get_depth_(char* type_string);
     * }
     */
    public static long g_variant_type_string_get_depth_(MemorySegment type_string) {
        var mh$ = g_variant_type_string_get_depth_$MH();
        try {
            return (long)mh$.invokeExact(type_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GVariantClass.G_VARIANT_CLASS_BOOLEAN = 98;
     * }
     */
    public static int G_VARIANT_CLASS_BOOLEAN() {
        return (int)98L;
    }
    /**
     * {@snippet :
     * enum GVariantClass.G_VARIANT_CLASS_BYTE = 121;
     * }
     */
    public static int G_VARIANT_CLASS_BYTE() {
        return (int)121L;
    }
    /**
     * {@snippet :
     * enum GVariantClass.G_VARIANT_CLASS_INT16 = 110;
     * }
     */
    public static int G_VARIANT_CLASS_INT16() {
        return (int)110L;
    }
    /**
     * {@snippet :
     * enum GVariantClass.G_VARIANT_CLASS_UINT16 = 113;
     * }
     */
    public static int G_VARIANT_CLASS_UINT16() {
        return (int)113L;
    }
    /**
     * {@snippet :
     * enum GVariantClass.G_VARIANT_CLASS_INT32 = 105;
     * }
     */
    public static int G_VARIANT_CLASS_INT32() {
        return (int)105L;
    }
    /**
     * {@snippet :
     * enum GVariantClass.G_VARIANT_CLASS_UINT32 = 117;
     * }
     */
    public static int G_VARIANT_CLASS_UINT32() {
        return (int)117L;
    }
    /**
     * {@snippet :
     * enum GVariantClass.G_VARIANT_CLASS_INT64 = 120;
     * }
     */
    public static int G_VARIANT_CLASS_INT64() {
        return (int)120L;
    }
    /**
     * {@snippet :
     * enum GVariantClass.G_VARIANT_CLASS_UINT64 = 116;
     * }
     */
    public static int G_VARIANT_CLASS_UINT64() {
        return (int)116L;
    }
    /**
     * {@snippet :
     * enum GVariantClass.G_VARIANT_CLASS_HANDLE = 104;
     * }
     */
    public static int G_VARIANT_CLASS_HANDLE() {
        return (int)104L;
    }
    /**
     * {@snippet :
     * enum GVariantClass.G_VARIANT_CLASS_DOUBLE = 100;
     * }
     */
    public static int G_VARIANT_CLASS_DOUBLE() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * enum GVariantClass.G_VARIANT_CLASS_STRING = 115;
     * }
     */
    public static int G_VARIANT_CLASS_STRING() {
        return (int)115L;
    }
    /**
     * {@snippet :
     * enum GVariantClass.G_VARIANT_CLASS_OBJECT_PATH = 111;
     * }
     */
    public static int G_VARIANT_CLASS_OBJECT_PATH() {
        return (int)111L;
    }
    /**
     * {@snippet :
     * enum GVariantClass.G_VARIANT_CLASS_SIGNATURE = 103;
     * }
     */
    public static int G_VARIANT_CLASS_SIGNATURE() {
        return (int)103L;
    }
    /**
     * {@snippet :
     * enum GVariantClass.G_VARIANT_CLASS_VARIANT = 118;
     * }
     */
    public static int G_VARIANT_CLASS_VARIANT() {
        return (int)118L;
    }
    /**
     * {@snippet :
     * enum GVariantClass.G_VARIANT_CLASS_MAYBE = 109;
     * }
     */
    public static int G_VARIANT_CLASS_MAYBE() {
        return (int)109L;
    }
    /**
     * {@snippet :
     * enum GVariantClass.G_VARIANT_CLASS_ARRAY = 97;
     * }
     */
    public static int G_VARIANT_CLASS_ARRAY() {
        return (int)97L;
    }
    /**
     * {@snippet :
     * enum GVariantClass.G_VARIANT_CLASS_TUPLE = 40;
     * }
     */
    public static int G_VARIANT_CLASS_TUPLE() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * enum GVariantClass.G_VARIANT_CLASS_DICT_ENTRY = 123;
     * }
     */
    public static int G_VARIANT_CLASS_DICT_ENTRY() {
        return (int)123L;
    }
    public static MethodHandle g_variant_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$348.const$5,"g_variant_unref");
    }
    /**
     * {@snippet :
     * void g_variant_unref(struct _GVariant* value);
     * }
     */
    public static void g_variant_unref(MemorySegment value) {
        var mh$ = g_variant_unref$MH();
        try {
            mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$349.const$0,"g_variant_ref");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_ref(struct _GVariant* value);
     * }
     */
    public static MemorySegment g_variant_ref(MemorySegment value) {
        var mh$ = g_variant_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_ref_sink$MH() {
        return RuntimeHelper.requireNonNull(constants$349.const$1,"g_variant_ref_sink");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_ref_sink(struct _GVariant* value);
     * }
     */
    public static MemorySegment g_variant_ref_sink(MemorySegment value) {
        var mh$ = g_variant_ref_sink$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_is_floating$MH() {
        return RuntimeHelper.requireNonNull(constants$349.const$2,"g_variant_is_floating");
    }
    /**
     * {@snippet :
     * int g_variant_is_floating(struct _GVariant* value);
     * }
     */
    public static int g_variant_is_floating(MemorySegment value) {
        var mh$ = g_variant_is_floating$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_take_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$349.const$3,"g_variant_take_ref");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_take_ref(struct _GVariant* value);
     * }
     */
    public static MemorySegment g_variant_take_ref(MemorySegment value) {
        var mh$ = g_variant_take_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$349.const$4,"g_variant_get_type");
    }
    /**
     * {@snippet :
     * struct _GVariantType* g_variant_get_type(struct _GVariant* value);
     * }
     */
    public static MemorySegment g_variant_get_type(MemorySegment value) {
        var mh$ = g_variant_get_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_type_string$MH() {
        return RuntimeHelper.requireNonNull(constants$349.const$5,"g_variant_get_type_string");
    }
    /**
     * {@snippet :
     * char* g_variant_get_type_string(struct _GVariant* value);
     * }
     */
    public static MemorySegment g_variant_get_type_string(MemorySegment value) {
        var mh$ = g_variant_get_type_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_is_of_type$MH() {
        return RuntimeHelper.requireNonNull(constants$350.const$0,"g_variant_is_of_type");
    }
    /**
     * {@snippet :
     * int g_variant_is_of_type(struct _GVariant* value, struct _GVariantType* type);
     * }
     */
    public static int g_variant_is_of_type(MemorySegment value, MemorySegment type) {
        var mh$ = g_variant_is_of_type$MH();
        try {
            return (int)mh$.invokeExact(value, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_is_container$MH() {
        return RuntimeHelper.requireNonNull(constants$350.const$1,"g_variant_is_container");
    }
    /**
     * {@snippet :
     * int g_variant_is_container(struct _GVariant* value);
     * }
     */
    public static int g_variant_is_container(MemorySegment value) {
        var mh$ = g_variant_is_container$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_classify$MH() {
        return RuntimeHelper.requireNonNull(constants$350.const$2,"g_variant_classify");
    }
    /**
     * {@snippet :
     * enum GVariantClass g_variant_classify(struct _GVariant* value);
     * }
     */
    public static int g_variant_classify(MemorySegment value) {
        var mh$ = g_variant_classify$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$350.const$3,"g_variant_new_boolean");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_boolean(int value);
     * }
     */
    public static MemorySegment g_variant_new_boolean(int value) {
        var mh$ = g_variant_new_boolean$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_byte$MH() {
        return RuntimeHelper.requireNonNull(constants$350.const$5,"g_variant_new_byte");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_byte(unsigned char value);
     * }
     */
    public static MemorySegment g_variant_new_byte(byte value) {
        var mh$ = g_variant_new_byte$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_int16$MH() {
        return RuntimeHelper.requireNonNull(constants$351.const$1,"g_variant_new_int16");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_int16(short value);
     * }
     */
    public static MemorySegment g_variant_new_int16(short value) {
        var mh$ = g_variant_new_int16$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_uint16$MH() {
        return RuntimeHelper.requireNonNull(constants$351.const$2,"g_variant_new_uint16");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_uint16(unsigned short value);
     * }
     */
    public static MemorySegment g_variant_new_uint16(short value) {
        var mh$ = g_variant_new_uint16$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_int32$MH() {
        return RuntimeHelper.requireNonNull(constants$351.const$3,"g_variant_new_int32");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_int32(int value);
     * }
     */
    public static MemorySegment g_variant_new_int32(int value) {
        var mh$ = g_variant_new_int32$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_uint32$MH() {
        return RuntimeHelper.requireNonNull(constants$351.const$4,"g_variant_new_uint32");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_uint32(unsigned int value);
     * }
     */
    public static MemorySegment g_variant_new_uint32(int value) {
        var mh$ = g_variant_new_uint32$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$351.const$5,"g_variant_new_int64");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_int64(long value);
     * }
     */
    public static MemorySegment g_variant_new_int64(long value) {
        var mh$ = g_variant_new_int64$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$352.const$0,"g_variant_new_uint64");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_uint64(unsigned long value);
     * }
     */
    public static MemorySegment g_variant_new_uint64(long value) {
        var mh$ = g_variant_new_uint64$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_handle$MH() {
        return RuntimeHelper.requireNonNull(constants$352.const$1,"g_variant_new_handle");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_handle(int value);
     * }
     */
    public static MemorySegment g_variant_new_handle(int value) {
        var mh$ = g_variant_new_handle$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_double$MH() {
        return RuntimeHelper.requireNonNull(constants$352.const$3,"g_variant_new_double");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_double(double value);
     * }
     */
    public static MemorySegment g_variant_new_double(double value) {
        var mh$ = g_variant_new_double$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_string$MH() {
        return RuntimeHelper.requireNonNull(constants$352.const$4,"g_variant_new_string");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_string(char* string);
     * }
     */
    public static MemorySegment g_variant_new_string(MemorySegment string) {
        var mh$ = g_variant_new_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_take_string$MH() {
        return RuntimeHelper.requireNonNull(constants$352.const$5,"g_variant_new_take_string");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_take_string(char* string);
     * }
     */
    public static MemorySegment g_variant_new_take_string(MemorySegment string) {
        var mh$ = g_variant_new_take_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_printf$MH() {
        return RuntimeHelper.requireNonNull(constants$353.const$0,"g_variant_new_printf");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_printf(char* format_string,...);
     * }
     */
    public static MemorySegment g_variant_new_printf(MemorySegment format_string, Object... x1) {
        var mh$ = g_variant_new_printf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(format_string, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_object_path$MH() {
        return RuntimeHelper.requireNonNull(constants$353.const$1,"g_variant_new_object_path");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_object_path(char* object_path);
     * }
     */
    public static MemorySegment g_variant_new_object_path(MemorySegment object_path) {
        var mh$ = g_variant_new_object_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(object_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_is_object_path$MH() {
        return RuntimeHelper.requireNonNull(constants$353.const$2,"g_variant_is_object_path");
    }
    /**
     * {@snippet :
     * int g_variant_is_object_path(char* string);
     * }
     */
    public static int g_variant_is_object_path(MemorySegment string) {
        var mh$ = g_variant_is_object_path$MH();
        try {
            return (int)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_signature$MH() {
        return RuntimeHelper.requireNonNull(constants$353.const$3,"g_variant_new_signature");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_signature(char* signature);
     * }
     */
    public static MemorySegment g_variant_new_signature(MemorySegment signature) {
        var mh$ = g_variant_new_signature$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(signature);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_is_signature$MH() {
        return RuntimeHelper.requireNonNull(constants$353.const$4,"g_variant_is_signature");
    }
    /**
     * {@snippet :
     * int g_variant_is_signature(char* string);
     * }
     */
    public static int g_variant_is_signature(MemorySegment string) {
        var mh$ = g_variant_is_signature$MH();
        try {
            return (int)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$353.const$5,"g_variant_new_variant");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_variant(struct _GVariant* value);
     * }
     */
    public static MemorySegment g_variant_new_variant(MemorySegment value) {
        var mh$ = g_variant_new_variant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_strv$MH() {
        return RuntimeHelper.requireNonNull(constants$354.const$0,"g_variant_new_strv");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_strv(char** strv, long length);
     * }
     */
    public static MemorySegment g_variant_new_strv(MemorySegment strv, long length) {
        var mh$ = g_variant_new_strv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(strv, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_objv$MH() {
        return RuntimeHelper.requireNonNull(constants$354.const$1,"g_variant_new_objv");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_objv(char** strv, long length);
     * }
     */
    public static MemorySegment g_variant_new_objv(MemorySegment strv, long length) {
        var mh$ = g_variant_new_objv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(strv, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_bytestring$MH() {
        return RuntimeHelper.requireNonNull(constants$354.const$2,"g_variant_new_bytestring");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_bytestring(char* string);
     * }
     */
    public static MemorySegment g_variant_new_bytestring(MemorySegment string) {
        var mh$ = g_variant_new_bytestring$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_bytestring_array$MH() {
        return RuntimeHelper.requireNonNull(constants$354.const$3,"g_variant_new_bytestring_array");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_bytestring_array(char** strv, long length);
     * }
     */
    public static MemorySegment g_variant_new_bytestring_array(MemorySegment strv, long length) {
        var mh$ = g_variant_new_bytestring_array$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(strv, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_new_fixed_array$MH() {
        return RuntimeHelper.requireNonNull(constants$354.const$5,"g_variant_new_fixed_array");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_new_fixed_array(struct _GVariantType* element_type, void* elements, unsigned long n_elements, unsigned long element_size);
     * }
     */
    public static MemorySegment g_variant_new_fixed_array(MemorySegment element_type, MemorySegment elements, long n_elements, long element_size) {
        var mh$ = g_variant_new_fixed_array$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(element_type, elements, n_elements, element_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$355.const$0,"g_variant_get_boolean");
    }
    /**
     * {@snippet :
     * int g_variant_get_boolean(struct _GVariant* value);
     * }
     */
    public static int g_variant_get_boolean(MemorySegment value) {
        var mh$ = g_variant_get_boolean$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_byte$MH() {
        return RuntimeHelper.requireNonNull(constants$355.const$1,"g_variant_get_byte");
    }
    /**
     * {@snippet :
     * unsigned char g_variant_get_byte(struct _GVariant* value);
     * }
     */
    public static byte g_variant_get_byte(MemorySegment value) {
        var mh$ = g_variant_get_byte$MH();
        try {
            return (byte)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_int16$MH() {
        return RuntimeHelper.requireNonNull(constants$355.const$2,"g_variant_get_int16");
    }
    /**
     * {@snippet :
     * short g_variant_get_int16(struct _GVariant* value);
     * }
     */
    public static short g_variant_get_int16(MemorySegment value) {
        var mh$ = g_variant_get_int16$MH();
        try {
            return (short)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_uint16$MH() {
        return RuntimeHelper.requireNonNull(constants$355.const$3,"g_variant_get_uint16");
    }
    /**
     * {@snippet :
     * unsigned short g_variant_get_uint16(struct _GVariant* value);
     * }
     */
    public static short g_variant_get_uint16(MemorySegment value) {
        var mh$ = g_variant_get_uint16$MH();
        try {
            return (short)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_int32$MH() {
        return RuntimeHelper.requireNonNull(constants$355.const$4,"g_variant_get_int32");
    }
    /**
     * {@snippet :
     * int g_variant_get_int32(struct _GVariant* value);
     * }
     */
    public static int g_variant_get_int32(MemorySegment value) {
        var mh$ = g_variant_get_int32$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_uint32$MH() {
        return RuntimeHelper.requireNonNull(constants$355.const$5,"g_variant_get_uint32");
    }
    /**
     * {@snippet :
     * unsigned int g_variant_get_uint32(struct _GVariant* value);
     * }
     */
    public static int g_variant_get_uint32(MemorySegment value) {
        var mh$ = g_variant_get_uint32$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$356.const$0,"g_variant_get_int64");
    }
    /**
     * {@snippet :
     * long g_variant_get_int64(struct _GVariant* value);
     * }
     */
    public static long g_variant_get_int64(MemorySegment value) {
        var mh$ = g_variant_get_int64$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$356.const$1,"g_variant_get_uint64");
    }
    /**
     * {@snippet :
     * unsigned long g_variant_get_uint64(struct _GVariant* value);
     * }
     */
    public static long g_variant_get_uint64(MemorySegment value) {
        var mh$ = g_variant_get_uint64$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_handle$MH() {
        return RuntimeHelper.requireNonNull(constants$356.const$2,"g_variant_get_handle");
    }
    /**
     * {@snippet :
     * int g_variant_get_handle(struct _GVariant* value);
     * }
     */
    public static int g_variant_get_handle(MemorySegment value) {
        var mh$ = g_variant_get_handle$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_double$MH() {
        return RuntimeHelper.requireNonNull(constants$356.const$3,"g_variant_get_double");
    }
    /**
     * {@snippet :
     * double g_variant_get_double(struct _GVariant* value);
     * }
     */
    public static double g_variant_get_double(MemorySegment value) {
        var mh$ = g_variant_get_double$MH();
        try {
            return (double)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$356.const$4,"g_variant_get_variant");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_variant_get_variant(struct _GVariant* value);
     * }
     */
    public static MemorySegment g_variant_get_variant(MemorySegment value) {
        var mh$ = g_variant_get_variant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_string$MH() {
        return RuntimeHelper.requireNonNull(constants$356.const$5,"g_variant_get_string");
    }
    /**
     * {@snippet :
     * char* g_variant_get_string(struct _GVariant* value, unsigned long* length);
     * }
     */
    public static MemorySegment g_variant_get_string(MemorySegment value, MemorySegment length) {
        var mh$ = g_variant_get_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dup_string$MH() {
        return RuntimeHelper.requireNonNull(constants$357.const$0,"g_variant_dup_string");
    }
    /**
     * {@snippet :
     * char* g_variant_dup_string(struct _GVariant* value, unsigned long* length);
     * }
     */
    public static MemorySegment g_variant_dup_string(MemorySegment value, MemorySegment length) {
        var mh$ = g_variant_dup_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_strv$MH() {
        return RuntimeHelper.requireNonNull(constants$357.const$1,"g_variant_get_strv");
    }
    /**
     * {@snippet :
     * char** g_variant_get_strv(struct _GVariant* value, unsigned long* length);
     * }
     */
    public static MemorySegment g_variant_get_strv(MemorySegment value, MemorySegment length) {
        var mh$ = g_variant_get_strv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dup_strv$MH() {
        return RuntimeHelper.requireNonNull(constants$357.const$2,"g_variant_dup_strv");
    }
    /**
     * {@snippet :
     * char** g_variant_dup_strv(struct _GVariant* value, unsigned long* length);
     * }
     */
    public static MemorySegment g_variant_dup_strv(MemorySegment value, MemorySegment length) {
        var mh$ = g_variant_dup_strv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_objv$MH() {
        return RuntimeHelper.requireNonNull(constants$357.const$3,"g_variant_get_objv");
    }
    /**
     * {@snippet :
     * char** g_variant_get_objv(struct _GVariant* value, unsigned long* length);
     * }
     */
    public static MemorySegment g_variant_get_objv(MemorySegment value, MemorySegment length) {
        var mh$ = g_variant_get_objv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dup_objv$MH() {
        return RuntimeHelper.requireNonNull(constants$357.const$4,"g_variant_dup_objv");
    }
    /**
     * {@snippet :
     * char** g_variant_dup_objv(struct _GVariant* value, unsigned long* length);
     * }
     */
    public static MemorySegment g_variant_dup_objv(MemorySegment value, MemorySegment length) {
        var mh$ = g_variant_dup_objv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_bytestring$MH() {
        return RuntimeHelper.requireNonNull(constants$357.const$5,"g_variant_get_bytestring");
    }
    /**
     * {@snippet :
     * char* g_variant_get_bytestring(struct _GVariant* value);
     * }
     */
    public static MemorySegment g_variant_get_bytestring(MemorySegment value) {
        var mh$ = g_variant_get_bytestring$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dup_bytestring$MH() {
        return RuntimeHelper.requireNonNull(constants$358.const$0,"g_variant_dup_bytestring");
    }
    /**
     * {@snippet :
     * char* g_variant_dup_bytestring(struct _GVariant* value, unsigned long* length);
     * }
     */
    public static MemorySegment g_variant_dup_bytestring(MemorySegment value, MemorySegment length) {
        var mh$ = g_variant_dup_bytestring$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_bytestring_array$MH() {
        return RuntimeHelper.requireNonNull(constants$358.const$1,"g_variant_get_bytestring_array");
    }
    /**
     * {@snippet :
     * char** g_variant_get_bytestring_array(struct _GVariant* value, unsigned long* length);
     * }
     */
    public static MemorySegment g_variant_get_bytestring_array(MemorySegment value, MemorySegment length) {
        var mh$ = g_variant_get_bytestring_array$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dup_bytestring_array$MH() {
        return RuntimeHelper.requireNonNull(constants$358.const$2,"g_variant_dup_bytestring_array");
    }
    /**
     * {@snippet :
     * char** g_variant_dup_bytestring_array(struct _GVariant* value, unsigned long* length);
     * }
     */
    public static MemorySegment g_variant_dup_bytestring_array(MemorySegment value, MemorySegment length) {
        var mh$ = g_variant_dup_bytestring_array$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


