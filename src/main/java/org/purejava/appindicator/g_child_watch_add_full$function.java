// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*g_child_watch_add_full$function)(int,int,void*);
 * }
 */
public interface g_child_watch_add_full$function {

    void apply(int pid, int wait_status, java.lang.foreign.MemorySegment user_data);
    static MemorySegment allocate(g_child_watch_add_full$function fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$279.const$1, fi, constants$255.const$4, scope);
    }
    static g_child_watch_add_full$function ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int _pid, int _wait_status, java.lang.foreign.MemorySegment _user_data) -> {
            try {
                constants$256.const$0.invokeExact(symbol, _pid, _wait_status, _user_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


