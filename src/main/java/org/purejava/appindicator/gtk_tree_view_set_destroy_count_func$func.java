// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.Arena;
import java.lang.foreign.MemorySegment;
/**
 * {@snippet :
 * void (*gtk_tree_view_set_destroy_count_func$func)(struct _GtkTreeView*,struct _GtkTreePath*,int,void*);
 * }
 */
public interface gtk_tree_view_set_destroy_count_func$func {

    void apply(java.lang.foreign.MemorySegment clipboard, java.lang.foreign.MemorySegment atoms, int n_atoms, java.lang.foreign.MemorySegment data);
    static MemorySegment allocate(gtk_tree_view_set_destroy_count_func$func fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$2494.const$5, fi, constants$466.const$3, scope);
    }
    static gtk_tree_view_set_destroy_count_func$func ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _clipboard, java.lang.foreign.MemorySegment _atoms, int _n_atoms, java.lang.foreign.MemorySegment _data) -> {
            try {
                constants$740.const$3.invokeExact(symbol, _clipboard, _atoms, _n_atoms, _data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


