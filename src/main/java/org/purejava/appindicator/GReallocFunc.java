// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.Arena;
import java.lang.foreign.MemorySegment;
/**
 * {@snippet :
 * void* (*GReallocFunc)(void* data,unsigned long size);
 * }
 */
public interface GReallocFunc {

    java.lang.foreign.MemorySegment apply(java.lang.foreign.MemorySegment data, long size);
    static MemorySegment allocate(GReallocFunc fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$1146.const$4, fi, constants$21.const$1, scope);
    }
    static GReallocFunc ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _data, long _size) -> {
            try {
                return (java.lang.foreign.MemorySegment)constants$208.const$5.invokeExact(symbol, _data, _size);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


