// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.Arena;
import java.lang.foreign.MemorySegment;
/**
 * {@snippet :
 * unsigned int (*g_cache_new$hash_value_func)(void*);
 * }
 */
public interface g_cache_new$hash_value_func {

    int apply(java.lang.foreign.MemorySegment key);
    static MemorySegment allocate(g_cache_new$hash_value_func fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$494.const$1, fi, constants$10.const$5, scope);
    }
    static g_cache_new$hash_value_func ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _key) -> {
            try {
                return (int)constants$14.const$2.invokeExact(symbol, _key);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


