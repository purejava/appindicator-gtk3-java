// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.*;

/**
 * {@snippet :
 * void (*AtkFocusHandler)(struct _AtkObject* object,int focus_in);
 * }
 */
public interface AtkFocusHandler {

    void apply(java.lang.foreign.MemorySegment colors, int n_colors);
    static MemorySegment allocate(AtkFocusHandler fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$1210.AtkFocusHandler_UP$MH, fi, constants$1210.AtkFocusHandler$FUNC, scope);
    }
    static AtkFocusHandler ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _colors, int _n_colors) -> {
            try {
                constants$1210.AtkFocusHandler_DOWN$MH.invokeExact(symbol, _colors, _n_colors);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


