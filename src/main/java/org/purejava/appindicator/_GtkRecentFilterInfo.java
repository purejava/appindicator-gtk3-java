// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import java.lang.foreign.SegmentAllocator;
import java.lang.invoke.VarHandle;
/**
 * {@snippet :
 * struct _GtkRecentFilterInfo {
 *     enum GtkRecentFilterFlags contains;
 *     char* uri;
 *     char* display_name;
 *     char* mime_type;
 *     char** applications;
 *     char** groups;
 *     int age;
 * };
 * }
 */
public class _GtkRecentFilterInfo {

    public static MemoryLayout $LAYOUT() {
        return constants$3019.const$2;
    }
    public static VarHandle contains$VH() {
        return constants$3019.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum GtkRecentFilterFlags contains;
     * }
     */
    public static int contains$get(MemorySegment seg) {
        return (int)constants$3019.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum GtkRecentFilterFlags contains;
     * }
     */
    public static void contains$set(MemorySegment seg, int x) {
        constants$3019.const$3.set(seg, x);
    }
    public static int contains$get(MemorySegment seg, long index) {
        return (int)constants$3019.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void contains$set(MemorySegment seg, long index, int x) {
        constants$3019.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle uri$VH() {
        return constants$3019.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* uri;
     * }
     */
    public static MemorySegment uri$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3019.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* uri;
     * }
     */
    public static void uri$set(MemorySegment seg, MemorySegment x) {
        constants$3019.const$4.set(seg, x);
    }
    public static MemorySegment uri$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3019.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void uri$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3019.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle display_name$VH() {
        return constants$3019.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* display_name;
     * }
     */
    public static MemorySegment display_name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3019.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* display_name;
     * }
     */
    public static void display_name$set(MemorySegment seg, MemorySegment x) {
        constants$3019.const$5.set(seg, x);
    }
    public static MemorySegment display_name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3019.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void display_name$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3019.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle mime_type$VH() {
        return constants$3020.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* mime_type;
     * }
     */
    public static MemorySegment mime_type$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3020.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* mime_type;
     * }
     */
    public static void mime_type$set(MemorySegment seg, MemorySegment x) {
        constants$3020.const$0.set(seg, x);
    }
    public static MemorySegment mime_type$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3020.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void mime_type$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3020.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle applications$VH() {
        return constants$3020.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char** applications;
     * }
     */
    public static MemorySegment applications$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3020.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char** applications;
     * }
     */
    public static void applications$set(MemorySegment seg, MemorySegment x) {
        constants$3020.const$1.set(seg, x);
    }
    public static MemorySegment applications$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3020.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void applications$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3020.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle groups$VH() {
        return constants$3020.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char** groups;
     * }
     */
    public static MemorySegment groups$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3020.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char** groups;
     * }
     */
    public static void groups$set(MemorySegment seg, MemorySegment x) {
        constants$3020.const$2.set(seg, x);
    }
    public static MemorySegment groups$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3020.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void groups$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3020.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle age$VH() {
        return constants$3020.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int age;
     * }
     */
    public static int age$get(MemorySegment seg) {
        return (int)constants$3020.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int age;
     * }
     */
    public static void age$set(MemorySegment seg, int x) {
        constants$3020.const$3.set(seg, x);
    }
    public static int age$get(MemorySegment seg, long index) {
        return (int)constants$3020.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void age$set(MemorySegment seg, long index, int x) {
        constants$3020.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


