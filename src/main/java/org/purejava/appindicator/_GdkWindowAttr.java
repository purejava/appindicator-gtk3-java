// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import java.lang.foreign.SegmentAllocator;
import java.lang.invoke.VarHandle;
/**
 * {@snippet :
 * struct _GdkWindowAttr {
 *     char* title;
 *     int event_mask;
 *     int x;
 *     int y;
 *     int width;
 *     int height;
 *     enum GdkWindowWindowClass wclass;
 *     struct _GdkVisual* visual;
 *     enum GdkWindowType window_type;
 *     struct _GdkCursor* cursor;
 *     char* wmclass_name;
 *     char* wmclass_class;
 *     int override_redirect;
 *     enum GdkWindowTypeHint type_hint;
 * };
 * }
 */
public class _GdkWindowAttr {

    public static MemoryLayout $LAYOUT() {
        return constants$1821.const$2;
    }
    public static VarHandle title$VH() {
        return constants$1821.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* title;
     * }
     */
    public static MemorySegment title$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1821.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* title;
     * }
     */
    public static void title$set(MemorySegment seg, MemorySegment x) {
        constants$1821.const$3.set(seg, x);
    }
    public static MemorySegment title$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1821.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void title$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1821.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle event_mask$VH() {
        return constants$1821.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int event_mask;
     * }
     */
    public static int event_mask$get(MemorySegment seg) {
        return (int)constants$1821.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int event_mask;
     * }
     */
    public static void event_mask$set(MemorySegment seg, int x) {
        constants$1821.const$4.set(seg, x);
    }
    public static int event_mask$get(MemorySegment seg, long index) {
        return (int)constants$1821.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void event_mask$set(MemorySegment seg, long index, int x) {
        constants$1821.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle x$VH() {
        return constants$1821.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int x;
     * }
     */
    public static int x$get(MemorySegment seg) {
        return (int)constants$1821.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int x;
     * }
     */
    public static void x$set(MemorySegment seg, int x) {
        constants$1821.const$5.set(seg, x);
    }
    public static int x$get(MemorySegment seg, long index) {
        return (int)constants$1821.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void x$set(MemorySegment seg, long index, int x) {
        constants$1821.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle y$VH() {
        return constants$1822.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int y;
     * }
     */
    public static int y$get(MemorySegment seg) {
        return (int)constants$1822.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int y;
     * }
     */
    public static void y$set(MemorySegment seg, int x) {
        constants$1822.const$0.set(seg, x);
    }
    public static int y$get(MemorySegment seg, long index) {
        return (int)constants$1822.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void y$set(MemorySegment seg, long index, int x) {
        constants$1822.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle width$VH() {
        return constants$1822.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int width;
     * }
     */
    public static int width$get(MemorySegment seg) {
        return (int)constants$1822.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int width;
     * }
     */
    public static void width$set(MemorySegment seg, int x) {
        constants$1822.const$1.set(seg, x);
    }
    public static int width$get(MemorySegment seg, long index) {
        return (int)constants$1822.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void width$set(MemorySegment seg, long index, int x) {
        constants$1822.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle height$VH() {
        return constants$1822.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int height;
     * }
     */
    public static int height$get(MemorySegment seg) {
        return (int)constants$1822.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int height;
     * }
     */
    public static void height$set(MemorySegment seg, int x) {
        constants$1822.const$2.set(seg, x);
    }
    public static int height$get(MemorySegment seg, long index) {
        return (int)constants$1822.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void height$set(MemorySegment seg, long index, int x) {
        constants$1822.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wclass$VH() {
        return constants$1822.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum GdkWindowWindowClass wclass;
     * }
     */
    public static int wclass$get(MemorySegment seg) {
        return (int)constants$1822.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum GdkWindowWindowClass wclass;
     * }
     */
    public static void wclass$set(MemorySegment seg, int x) {
        constants$1822.const$3.set(seg, x);
    }
    public static int wclass$get(MemorySegment seg, long index) {
        return (int)constants$1822.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void wclass$set(MemorySegment seg, long index, int x) {
        constants$1822.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle visual$VH() {
        return constants$1822.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _GdkVisual* visual;
     * }
     */
    public static MemorySegment visual$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1822.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _GdkVisual* visual;
     * }
     */
    public static void visual$set(MemorySegment seg, MemorySegment x) {
        constants$1822.const$4.set(seg, x);
    }
    public static MemorySegment visual$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1822.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void visual$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1822.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle window_type$VH() {
        return constants$1822.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum GdkWindowType window_type;
     * }
     */
    public static int window_type$get(MemorySegment seg) {
        return (int)constants$1822.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum GdkWindowType window_type;
     * }
     */
    public static void window_type$set(MemorySegment seg, int x) {
        constants$1822.const$5.set(seg, x);
    }
    public static int window_type$get(MemorySegment seg, long index) {
        return (int)constants$1822.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void window_type$set(MemorySegment seg, long index, int x) {
        constants$1822.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cursor$VH() {
        return constants$1823.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _GdkCursor* cursor;
     * }
     */
    public static MemorySegment cursor$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1823.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _GdkCursor* cursor;
     * }
     */
    public static void cursor$set(MemorySegment seg, MemorySegment x) {
        constants$1823.const$0.set(seg, x);
    }
    public static MemorySegment cursor$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1823.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void cursor$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1823.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wmclass_name$VH() {
        return constants$1823.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* wmclass_name;
     * }
     */
    public static MemorySegment wmclass_name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1823.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* wmclass_name;
     * }
     */
    public static void wmclass_name$set(MemorySegment seg, MemorySegment x) {
        constants$1823.const$1.set(seg, x);
    }
    public static MemorySegment wmclass_name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1823.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void wmclass_name$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1823.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wmclass_class$VH() {
        return constants$1823.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* wmclass_class;
     * }
     */
    public static MemorySegment wmclass_class$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1823.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* wmclass_class;
     * }
     */
    public static void wmclass_class$set(MemorySegment seg, MemorySegment x) {
        constants$1823.const$2.set(seg, x);
    }
    public static MemorySegment wmclass_class$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1823.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void wmclass_class$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1823.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle override_redirect$VH() {
        return constants$1823.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int override_redirect;
     * }
     */
    public static int override_redirect$get(MemorySegment seg) {
        return (int)constants$1823.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int override_redirect;
     * }
     */
    public static void override_redirect$set(MemorySegment seg, int x) {
        constants$1823.const$3.set(seg, x);
    }
    public static int override_redirect$get(MemorySegment seg, long index) {
        return (int)constants$1823.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void override_redirect$set(MemorySegment seg, long index, int x) {
        constants$1823.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle type_hint$VH() {
        return constants$1823.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum GdkWindowTypeHint type_hint;
     * }
     */
    public static int type_hint$get(MemorySegment seg) {
        return (int)constants$1823.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum GdkWindowTypeHint type_hint;
     * }
     */
    public static void type_hint$set(MemorySegment seg, int x) {
        constants$1823.const$4.set(seg, x);
    }
    public static int type_hint$get(MemorySegment seg, long index) {
        return (int)constants$1823.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void type_hint$set(MemorySegment seg, long index, int x) {
        constants$1823.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


