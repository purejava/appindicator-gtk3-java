// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.Arena;
import java.lang.foreign.MemorySegment;
/**
 * {@snippet :
 * int (*g_completion_set_compare$strncmp_func)(char*,char*,unsigned long);
 * }
 */
public interface g_completion_set_compare$strncmp_func {

    int apply(java.lang.foreign.MemorySegment s1, java.lang.foreign.MemorySegment s2, long n);
    static MemorySegment allocate(g_completion_set_compare$strncmp_func fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$499.const$0, fi, constants$18.const$2, scope);
    }
    static g_completion_set_compare$strncmp_func ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _s1, java.lang.foreign.MemorySegment _s2, long _n) -> {
            try {
                return (int)constants$496.const$2.invokeExact(symbol, _s1, _s2, _n);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


