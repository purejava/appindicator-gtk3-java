// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.MemoryLayout;
import java.lang.foreign.StructLayout;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;

import static java.lang.foreign.ValueLayout.JAVA_INT;
import static java.lang.foreign.ValueLayout.JAVA_LONG;
final class constants$2166 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$2166() {}
    static final MethodHandle const$0 = RuntimeHelper.downcallHandle(
        "gtk_widget_list_action_prefixes",
        constants$5.const$2
    );
    static final MethodHandle const$1 = RuntimeHelper.downcallHandle(
        "gtk_widget_set_font_map",
        constants$13.const$4
    );
    static final MethodHandle const$2 = RuntimeHelper.downcallHandle(
        "gtk_widget_get_font_map",
        constants$5.const$2
    );
    static final StructLayout const$3 = MemoryLayout.structLayout(
        MemoryLayout.structLayout(
            MemoryLayout.structLayout(
                MemoryLayout.structLayout(
                    RuntimeHelper.POINTER.withName("g_class")
                ).withName("g_type_instance"),
                JAVA_INT.withName("ref_count"),
                MemoryLayout.paddingLayout(4),
                RuntimeHelper.POINTER.withName("qdata")
            ).withName("parent_instance"),
            RuntimeHelper.POINTER.withName("priv")
        ).withName("parent"),
        RuntimeHelper.POINTER.withName("priv")
    ).withName("_GtkApplication");
    static final VarHandle const$4 = constants$2166.const$3.varHandle(MemoryLayout.PathElement.groupElement("priv"));
    static final StructLayout const$5 = MemoryLayout.structLayout(
        MemoryLayout.structLayout(
            MemoryLayout.structLayout(
                MemoryLayout.structLayout(
                    JAVA_LONG.withName("g_type")
                ).withName("g_type_class"),
                RuntimeHelper.POINTER.withName("construct_properties"),
                RuntimeHelper.POINTER.withName("constructor"),
                RuntimeHelper.POINTER.withName("set_property"),
                RuntimeHelper.POINTER.withName("get_property"),
                RuntimeHelper.POINTER.withName("dispose"),
                RuntimeHelper.POINTER.withName("finalize"),
                RuntimeHelper.POINTER.withName("dispatch_properties_changed"),
                RuntimeHelper.POINTER.withName("notify"),
                RuntimeHelper.POINTER.withName("constructed"),
                JAVA_LONG.withName("flags"),
                JAVA_LONG.withName("n_construct_properties"),
                RuntimeHelper.POINTER.withName("pspecs"),
                JAVA_LONG.withName("n_pspecs"),
                MemoryLayout.sequenceLayout(3, RuntimeHelper.POINTER).withName("pdummy")
            ).withName("parent_class"),
            RuntimeHelper.POINTER.withName("startup"),
            RuntimeHelper.POINTER.withName("activate"),
            RuntimeHelper.POINTER.withName("open"),
            RuntimeHelper.POINTER.withName("command_line"),
            RuntimeHelper.POINTER.withName("local_command_line"),
            RuntimeHelper.POINTER.withName("before_emit"),
            RuntimeHelper.POINTER.withName("after_emit"),
            RuntimeHelper.POINTER.withName("add_platform_data"),
            RuntimeHelper.POINTER.withName("quit_mainloop"),
            RuntimeHelper.POINTER.withName("run_mainloop"),
            RuntimeHelper.POINTER.withName("shutdown"),
            RuntimeHelper.POINTER.withName("dbus_register"),
            RuntimeHelper.POINTER.withName("dbus_unregister"),
            RuntimeHelper.POINTER.withName("handle_local_options"),
            RuntimeHelper.POINTER.withName("name_lost"),
            MemoryLayout.sequenceLayout(7, RuntimeHelper.POINTER).withName("padding")
        ).withName("parent_class"),
        RuntimeHelper.POINTER.withName("window_added"),
        RuntimeHelper.POINTER.withName("window_removed"),
        MemoryLayout.sequenceLayout(12, RuntimeHelper.POINTER).withName("padding")
    ).withName("_GtkApplicationClass");
}


