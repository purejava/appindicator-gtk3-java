// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import java.lang.foreign.SegmentAllocator;
import java.lang.invoke.VarHandle;
/**
 * {@snippet :
 * struct _GtkStockItem {
 *     char* stock_id;
 *     char* label;
 *     enum GdkModifierType modifier;
 *     unsigned int keyval;
 *     char* translation_domain;
 * };
 * }
 */
public class _GtkStockItem {

    public static MemoryLayout $LAYOUT() {
        return constants$3258.const$4;
    }
    public static VarHandle stock_id$VH() {
        return constants$3258.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* stock_id;
     * }
     */
    public static MemorySegment stock_id$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3258.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* stock_id;
     * }
     */
    public static void stock_id$set(MemorySegment seg, MemorySegment x) {
        constants$3258.const$5.set(seg, x);
    }
    public static MemorySegment stock_id$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3258.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void stock_id$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3258.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle label$VH() {
        return constants$3259.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* label;
     * }
     */
    public static MemorySegment label$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3259.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* label;
     * }
     */
    public static void label$set(MemorySegment seg, MemorySegment x) {
        constants$3259.const$0.set(seg, x);
    }
    public static MemorySegment label$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3259.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void label$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3259.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle modifier$VH() {
        return constants$3259.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum GdkModifierType modifier;
     * }
     */
    public static int modifier$get(MemorySegment seg) {
        return (int)constants$3259.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum GdkModifierType modifier;
     * }
     */
    public static void modifier$set(MemorySegment seg, int x) {
        constants$3259.const$1.set(seg, x);
    }
    public static int modifier$get(MemorySegment seg, long index) {
        return (int)constants$3259.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void modifier$set(MemorySegment seg, long index, int x) {
        constants$3259.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle keyval$VH() {
        return constants$3259.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int keyval;
     * }
     */
    public static int keyval$get(MemorySegment seg) {
        return (int)constants$3259.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int keyval;
     * }
     */
    public static void keyval$set(MemorySegment seg, int x) {
        constants$3259.const$2.set(seg, x);
    }
    public static int keyval$get(MemorySegment seg, long index) {
        return (int)constants$3259.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void keyval$set(MemorySegment seg, long index, int x) {
        constants$3259.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle translation_domain$VH() {
        return constants$3259.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* translation_domain;
     * }
     */
    public static MemorySegment translation_domain$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3259.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* translation_domain;
     * }
     */
    public static void translation_domain$set(MemorySegment seg, MemorySegment x) {
        constants$3259.const$3.set(seg, x);
    }
    public static MemorySegment translation_domain$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3259.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void translation_domain$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3259.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


