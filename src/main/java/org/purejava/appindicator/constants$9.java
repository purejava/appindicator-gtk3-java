// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;

final class constants$9 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$9() {}
    static final FunctionDescriptor GFreeFunc$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor GFreeFunc_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GFreeFunc_UP$MH = RuntimeHelper.upcallHandle(GFreeFunc.class, "apply", constants$9.GFreeFunc_UP$FUNC);
    static final FunctionDescriptor GFreeFunc_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GFreeFunc_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$9.GFreeFunc_DOWN$FUNC
    );
    static final FunctionDescriptor GTranslateFunc$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor GTranslateFunc_UP$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GTranslateFunc_UP$MH = RuntimeHelper.upcallHandle(GTranslateFunc.class, "apply", constants$9.GTranslateFunc_UP$FUNC);
    static final FunctionDescriptor GTranslateFunc_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GTranslateFunc_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$9.GTranslateFunc_DOWN$FUNC
    );
    static final FunctionDescriptor memcpy$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle memcpy$MH = RuntimeHelper.downcallHandle(
        "memcpy",
        constants$9.memcpy$FUNC
    );
    static final FunctionDescriptor memmove$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle memmove$MH = RuntimeHelper.downcallHandle(
        "memmove",
        constants$9.memmove$FUNC
    );
}


