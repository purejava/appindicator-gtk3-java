// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.MemoryLayout;
import java.lang.foreign.StructLayout;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
final class constants$560 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$560() {}
    static final StructLayout const$0 = MemoryLayout.structLayout(
        RuntimeHelper.POINTER.withName("value_init"),
        RuntimeHelper.POINTER.withName("value_free"),
        RuntimeHelper.POINTER.withName("value_copy"),
        RuntimeHelper.POINTER.withName("value_peek_pointer"),
        RuntimeHelper.POINTER.withName("collect_format"),
        RuntimeHelper.POINTER.withName("collect_value"),
        RuntimeHelper.POINTER.withName("lcopy_format"),
        RuntimeHelper.POINTER.withName("lcopy_value")
    ).withName("_GTypeValueTable");
    static final MethodHandle const$1 = RuntimeHelper.upcallHandle(_GTypeValueTable.value_init.class, "apply", constants$13.const$1);
    static final VarHandle const$2 = constants$560.const$0.varHandle(MemoryLayout.PathElement.groupElement("value_init"));
    static final MethodHandle const$3 = RuntimeHelper.upcallHandle(_GTypeValueTable.value_free.class, "apply", constants$13.const$1);
    static final VarHandle const$4 = constants$560.const$0.varHandle(MemoryLayout.PathElement.groupElement("value_free"));
    static final MethodHandle const$5 = RuntimeHelper.upcallHandle(_GTypeValueTable.value_copy.class, "apply", constants$13.const$4);
}


