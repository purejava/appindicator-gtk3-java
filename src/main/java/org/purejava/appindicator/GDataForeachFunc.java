// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.*;

/**
 * {@snippet :
 * void (*GDataForeachFunc)(unsigned int key_id,void* data,void* user_data);
 * }
 */
public interface GDataForeachFunc {

    void apply(int key_id, java.lang.foreign.MemorySegment data, java.lang.foreign.MemorySegment user_data);
    static MemorySegment allocate(GDataForeachFunc fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$108.GDataForeachFunc_UP$MH, fi, constants$108.GDataForeachFunc$FUNC, scope);
    }
    static GDataForeachFunc ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (int _key_id, java.lang.foreign.MemorySegment _data, java.lang.foreign.MemorySegment _user_data) -> {
            try {
                constants$108.GDataForeachFunc_DOWN$MH.invokeExact(symbol, _key_id, _data, _user_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


