// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import java.lang.foreign.SegmentAllocator;
import java.lang.invoke.VarHandle;
/**
 * {@snippet :
 * struct _GSignalQuery {
 *     unsigned int signal_id;
 *     char* signal_name;
 *     unsigned long itype;
 *     enum GSignalFlags signal_flags;
 *     unsigned long return_type;
 *     unsigned int n_params;
 *     unsigned long* param_types;
 * };
 * }
 */
public class _GSignalQuery {

    public static MemoryLayout $LAYOUT() {
        return constants$601.const$0;
    }
    public static VarHandle signal_id$VH() {
        return constants$601.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int signal_id;
     * }
     */
    public static int signal_id$get(MemorySegment seg) {
        return (int)constants$601.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int signal_id;
     * }
     */
    public static void signal_id$set(MemorySegment seg, int x) {
        constants$601.const$1.set(seg, x);
    }
    public static int signal_id$get(MemorySegment seg, long index) {
        return (int)constants$601.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void signal_id$set(MemorySegment seg, long index, int x) {
        constants$601.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle signal_name$VH() {
        return constants$601.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* signal_name;
     * }
     */
    public static MemorySegment signal_name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$601.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* signal_name;
     * }
     */
    public static void signal_name$set(MemorySegment seg, MemorySegment x) {
        constants$601.const$2.set(seg, x);
    }
    public static MemorySegment signal_name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$601.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void signal_name$set(MemorySegment seg, long index, MemorySegment x) {
        constants$601.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle itype$VH() {
        return constants$601.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long itype;
     * }
     */
    public static long itype$get(MemorySegment seg) {
        return (long)constants$601.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long itype;
     * }
     */
    public static void itype$set(MemorySegment seg, long x) {
        constants$601.const$3.set(seg, x);
    }
    public static long itype$get(MemorySegment seg, long index) {
        return (long)constants$601.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void itype$set(MemorySegment seg, long index, long x) {
        constants$601.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle signal_flags$VH() {
        return constants$601.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum GSignalFlags signal_flags;
     * }
     */
    public static int signal_flags$get(MemorySegment seg) {
        return (int)constants$601.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum GSignalFlags signal_flags;
     * }
     */
    public static void signal_flags$set(MemorySegment seg, int x) {
        constants$601.const$4.set(seg, x);
    }
    public static int signal_flags$get(MemorySegment seg, long index) {
        return (int)constants$601.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void signal_flags$set(MemorySegment seg, long index, int x) {
        constants$601.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle return_type$VH() {
        return constants$601.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long return_type;
     * }
     */
    public static long return_type$get(MemorySegment seg) {
        return (long)constants$601.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long return_type;
     * }
     */
    public static void return_type$set(MemorySegment seg, long x) {
        constants$601.const$5.set(seg, x);
    }
    public static long return_type$get(MemorySegment seg, long index) {
        return (long)constants$601.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void return_type$set(MemorySegment seg, long index, long x) {
        constants$601.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle n_params$VH() {
        return constants$602.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int n_params;
     * }
     */
    public static int n_params$get(MemorySegment seg) {
        return (int)constants$602.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int n_params;
     * }
     */
    public static void n_params$set(MemorySegment seg, int x) {
        constants$602.const$0.set(seg, x);
    }
    public static int n_params$get(MemorySegment seg, long index) {
        return (int)constants$602.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void n_params$set(MemorySegment seg, long index, int x) {
        constants$602.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle param_types$VH() {
        return constants$602.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long* param_types;
     * }
     */
    public static MemorySegment param_types$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$602.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long* param_types;
     * }
     */
    public static void param_types$set(MemorySegment seg, MemorySegment x) {
        constants$602.const$1.set(seg, x);
    }
    public static MemorySegment param_types$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$602.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void param_types$set(MemorySegment seg, long index, MemorySegment x) {
        constants$602.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


