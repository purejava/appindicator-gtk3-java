// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import java.lang.foreign.SegmentAllocator;
import java.lang.invoke.VarHandle;
/**
 * {@snippet :
 * struct _PangoEngineInfo {
 *     char* id;
 *     char* engine_type;
 *     char* render_type;
 *     struct _PangoEngineScriptInfo* scripts;
 *     int n_scripts;
 * };
 * }
 */
public class _PangoEngineInfo {

    public static MemoryLayout $LAYOUT() {
        return constants$1612.const$2;
    }
    public static VarHandle id$VH() {
        return constants$1612.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* id;
     * }
     */
    public static MemorySegment id$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1612.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* id;
     * }
     */
    public static void id$set(MemorySegment seg, MemorySegment x) {
        constants$1612.const$3.set(seg, x);
    }
    public static MemorySegment id$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1612.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void id$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1612.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle engine_type$VH() {
        return constants$1612.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* engine_type;
     * }
     */
    public static MemorySegment engine_type$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1612.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* engine_type;
     * }
     */
    public static void engine_type$set(MemorySegment seg, MemorySegment x) {
        constants$1612.const$4.set(seg, x);
    }
    public static MemorySegment engine_type$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1612.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void engine_type$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1612.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle render_type$VH() {
        return constants$1612.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* render_type;
     * }
     */
    public static MemorySegment render_type$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1612.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* render_type;
     * }
     */
    public static void render_type$set(MemorySegment seg, MemorySegment x) {
        constants$1612.const$5.set(seg, x);
    }
    public static MemorySegment render_type$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1612.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void render_type$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1612.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle scripts$VH() {
        return constants$1613.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _PangoEngineScriptInfo* scripts;
     * }
     */
    public static MemorySegment scripts$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1613.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _PangoEngineScriptInfo* scripts;
     * }
     */
    public static void scripts$set(MemorySegment seg, MemorySegment x) {
        constants$1613.const$0.set(seg, x);
    }
    public static MemorySegment scripts$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1613.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void scripts$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1613.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle n_scripts$VH() {
        return constants$1613.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int n_scripts;
     * }
     */
    public static int n_scripts$get(MemorySegment seg) {
        return (int)constants$1613.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int n_scripts;
     * }
     */
    public static void n_scripts$set(MemorySegment seg, int x) {
        constants$1613.const$1.set(seg, x);
    }
    public static int n_scripts$get(MemorySegment seg, long index) {
        return (int)constants$1613.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void n_scripts$set(MemorySegment seg, long index, int x) {
        constants$1613.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


