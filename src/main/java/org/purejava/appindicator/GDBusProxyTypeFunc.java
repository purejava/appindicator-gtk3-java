// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.Arena;
import java.lang.foreign.MemorySegment;
/**
 * {@snippet :
 * unsigned long (*GDBusProxyTypeFunc)(struct _GDBusObjectManagerClient* manager,char* object_path,char* interface_name,void* data);
 * }
 */
public interface GDBusProxyTypeFunc {

    long apply(java.lang.foreign.MemorySegment manager, java.lang.foreign.MemorySegment object_path, java.lang.foreign.MemorySegment interface_name, java.lang.foreign.MemorySegment data);
    static MemorySegment allocate(GDBusProxyTypeFunc fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$701.const$4, fi, constants$333.const$2, scope);
    }
    static GDBusProxyTypeFunc ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _manager, java.lang.foreign.MemorySegment _object_path, java.lang.foreign.MemorySegment _interface_name, java.lang.foreign.MemorySegment _data) -> {
            try {
                return (long)constants$701.const$5.invokeExact(symbol, _manager, _object_path, _interface_name, _data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


