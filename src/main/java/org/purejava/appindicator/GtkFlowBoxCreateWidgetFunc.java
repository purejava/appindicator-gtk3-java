// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.*;

/**
 * {@snippet :
 * struct _GtkWidget* (*GtkFlowBoxCreateWidgetFunc)(void* item,void* user_data);
 * }
 */
public interface GtkFlowBoxCreateWidgetFunc {

    java.lang.foreign.MemorySegment apply(java.lang.foreign.MemorySegment path, java.lang.foreign.MemorySegment func_data);
    static MemorySegment allocate(GtkFlowBoxCreateWidgetFunc fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$1585.GtkFlowBoxCreateWidgetFunc_UP$MH, fi, constants$1585.GtkFlowBoxCreateWidgetFunc$FUNC, scope);
    }
    static GtkFlowBoxCreateWidgetFunc ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _path, java.lang.foreign.MemorySegment _func_data) -> {
            try {
                return (java.lang.foreign.MemorySegment)constants$1585.GtkFlowBoxCreateWidgetFunc_DOWN$MH.invokeExact(symbol, _path, _func_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


