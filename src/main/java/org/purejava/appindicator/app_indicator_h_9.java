// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.AddressLayout;
import java.lang.foreign.MemorySegment;
import java.lang.invoke.MethodHandle;
public class app_indicator_h_9 extends app_indicator_h_8 {

    public static MethodHandle g_volume_monitor_get_mounts$MH() {
        return RuntimeHelper.requireNonNull(constants$1194.const$0,"g_volume_monitor_get_mounts");
    }
    /**
     * {@snippet :
     * struct _GList* g_volume_monitor_get_mounts(struct _GVolumeMonitor* volume_monitor);
     * }
     */
    public static MemorySegment g_volume_monitor_get_mounts(MemorySegment volume_monitor) {
        var mh$ = g_volume_monitor_get_mounts$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume_monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_monitor_get_volume_for_uuid$MH() {
        return RuntimeHelper.requireNonNull(constants$1194.const$1,"g_volume_monitor_get_volume_for_uuid");
    }
    /**
     * {@snippet :
     * struct _GVolume* g_volume_monitor_get_volume_for_uuid(struct _GVolumeMonitor* volume_monitor, char* uuid);
     * }
     */
    public static MemorySegment g_volume_monitor_get_volume_for_uuid(MemorySegment volume_monitor, MemorySegment uuid) {
        var mh$ = g_volume_monitor_get_volume_for_uuid$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume_monitor, uuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_monitor_get_mount_for_uuid$MH() {
        return RuntimeHelper.requireNonNull(constants$1194.const$2,"g_volume_monitor_get_mount_for_uuid");
    }
    /**
     * {@snippet :
     * struct _GMount* g_volume_monitor_get_mount_for_uuid(struct _GVolumeMonitor* volume_monitor, char* uuid);
     * }
     */
    public static MemorySegment g_volume_monitor_get_mount_for_uuid(MemorySegment volume_monitor, MemorySegment uuid) {
        var mh$ = g_volume_monitor_get_mount_for_uuid$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume_monitor, uuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_monitor_adopt_orphan_mount$MH() {
        return RuntimeHelper.requireNonNull(constants$1194.const$3,"g_volume_monitor_adopt_orphan_mount");
    }
    /**
     * {@snippet :
     * struct _GVolume* g_volume_monitor_adopt_orphan_mount(struct _GMount* mount);
     * }
     */
    public static MemorySegment g_volume_monitor_adopt_orphan_mount(MemorySegment mount) {
        var mh$ = g_volume_monitor_adopt_orphan_mount$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_native_volume_monitor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1195.const$2,"g_native_volume_monitor_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_native_volume_monitor_get_type();
     * }
     */
    public static long g_native_volume_monitor_get_type() {
        var mh$ = g_native_volume_monitor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_address_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1196.const$0,"g_network_address_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_network_address_get_type();
     * }
     */
    public static long g_network_address_get_type() {
        var mh$ = g_network_address_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_address_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1196.const$1,"g_network_address_new");
    }
    /**
     * {@snippet :
     * struct _GSocketConnectable* g_network_address_new(char* hostname, unsigned short port);
     * }
     */
    public static MemorySegment g_network_address_new(MemorySegment hostname, short port) {
        var mh$ = g_network_address_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hostname, port);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_address_new_loopback$MH() {
        return RuntimeHelper.requireNonNull(constants$1196.const$2,"g_network_address_new_loopback");
    }
    /**
     * {@snippet :
     * struct _GSocketConnectable* g_network_address_new_loopback(unsigned short port);
     * }
     */
    public static MemorySegment g_network_address_new_loopback(short port) {
        var mh$ = g_network_address_new_loopback$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(port);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_address_parse$MH() {
        return RuntimeHelper.requireNonNull(constants$1196.const$4,"g_network_address_parse");
    }
    /**
     * {@snippet :
     * struct _GSocketConnectable* g_network_address_parse(char* host_and_port, unsigned short default_port, struct _GError** error);
     * }
     */
    public static MemorySegment g_network_address_parse(MemorySegment host_and_port, short default_port, MemorySegment error) {
        var mh$ = g_network_address_parse$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(host_and_port, default_port, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_address_parse_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1196.const$5,"g_network_address_parse_uri");
    }
    /**
     * {@snippet :
     * struct _GSocketConnectable* g_network_address_parse_uri(char* uri, unsigned short default_port, struct _GError** error);
     * }
     */
    public static MemorySegment g_network_address_parse_uri(MemorySegment uri, short default_port, MemorySegment error) {
        var mh$ = g_network_address_parse_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(uri, default_port, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_address_get_hostname$MH() {
        return RuntimeHelper.requireNonNull(constants$1197.const$0,"g_network_address_get_hostname");
    }
    /**
     * {@snippet :
     * char* g_network_address_get_hostname(struct _GNetworkAddress* addr);
     * }
     */
    public static MemorySegment g_network_address_get_hostname(MemorySegment addr) {
        var mh$ = g_network_address_get_hostname$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(addr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_address_get_port$MH() {
        return RuntimeHelper.requireNonNull(constants$1197.const$1,"g_network_address_get_port");
    }
    /**
     * {@snippet :
     * unsigned short g_network_address_get_port(struct _GNetworkAddress* addr);
     * }
     */
    public static short g_network_address_get_port(MemorySegment addr) {
        var mh$ = g_network_address_get_port$MH();
        try {
            return (short)mh$.invokeExact(addr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_address_get_scheme$MH() {
        return RuntimeHelper.requireNonNull(constants$1197.const$2,"g_network_address_get_scheme");
    }
    /**
     * {@snippet :
     * char* g_network_address_get_scheme(struct _GNetworkAddress* addr);
     * }
     */
    public static MemorySegment g_network_address_get_scheme(MemorySegment addr) {
        var mh$ = g_network_address_get_scheme$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(addr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_monitor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1199.const$0,"g_network_monitor_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_network_monitor_get_type();
     * }
     */
    public static long g_network_monitor_get_type() {
        var mh$ = g_network_monitor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_monitor_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1199.const$1,"g_network_monitor_get_default");
    }
    /**
     * {@snippet :
     * struct _GNetworkMonitor* g_network_monitor_get_default();
     * }
     */
    public static MemorySegment g_network_monitor_get_default() {
        var mh$ = g_network_monitor_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_monitor_get_network_available$MH() {
        return RuntimeHelper.requireNonNull(constants$1199.const$2,"g_network_monitor_get_network_available");
    }
    /**
     * {@snippet :
     * int g_network_monitor_get_network_available(struct _GNetworkMonitor* monitor);
     * }
     */
    public static int g_network_monitor_get_network_available(MemorySegment monitor) {
        var mh$ = g_network_monitor_get_network_available$MH();
        try {
            return (int)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_monitor_get_network_metered$MH() {
        return RuntimeHelper.requireNonNull(constants$1199.const$3,"g_network_monitor_get_network_metered");
    }
    /**
     * {@snippet :
     * int g_network_monitor_get_network_metered(struct _GNetworkMonitor* monitor);
     * }
     */
    public static int g_network_monitor_get_network_metered(MemorySegment monitor) {
        var mh$ = g_network_monitor_get_network_metered$MH();
        try {
            return (int)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_monitor_get_connectivity$MH() {
        return RuntimeHelper.requireNonNull(constants$1199.const$4,"g_network_monitor_get_connectivity");
    }
    /**
     * {@snippet :
     * enum GNetworkConnectivity g_network_monitor_get_connectivity(struct _GNetworkMonitor* monitor);
     * }
     */
    public static int g_network_monitor_get_connectivity(MemorySegment monitor) {
        var mh$ = g_network_monitor_get_connectivity$MH();
        try {
            return (int)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_monitor_can_reach$MH() {
        return RuntimeHelper.requireNonNull(constants$1199.const$5,"g_network_monitor_can_reach");
    }
    /**
     * {@snippet :
     * int g_network_monitor_can_reach(struct _GNetworkMonitor* monitor, struct _GSocketConnectable* connectable, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_network_monitor_can_reach(MemorySegment monitor, MemorySegment connectable, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_network_monitor_can_reach$MH();
        try {
            return (int)mh$.invokeExact(monitor, connectable, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_monitor_can_reach_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1200.const$1,"g_network_monitor_can_reach_async");
    }
    /**
     * {@snippet :
     * void g_network_monitor_can_reach_async(struct _GNetworkMonitor* monitor, struct _GSocketConnectable* connectable, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_network_monitor_can_reach_async(MemorySegment monitor, MemorySegment connectable, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_network_monitor_can_reach_async$MH();
        try {
            mh$.invokeExact(monitor, connectable, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_monitor_can_reach_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1200.const$2,"g_network_monitor_can_reach_finish");
    }
    /**
     * {@snippet :
     * int g_network_monitor_can_reach_finish(struct _GNetworkMonitor* monitor, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_network_monitor_can_reach_finish(MemorySegment monitor, MemorySegment result, MemorySegment error) {
        var mh$ = g_network_monitor_can_reach_finish$MH();
        try {
            return (int)mh$.invokeExact(monitor, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_service_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1201.const$0,"g_network_service_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_network_service_get_type();
     * }
     */
    public static long g_network_service_get_type() {
        var mh$ = g_network_service_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_service_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1201.const$1,"g_network_service_new");
    }
    /**
     * {@snippet :
     * struct _GSocketConnectable* g_network_service_new(char* service, char* protocol, char* domain);
     * }
     */
    public static MemorySegment g_network_service_new(MemorySegment service, MemorySegment protocol, MemorySegment domain) {
        var mh$ = g_network_service_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(service, protocol, domain);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_service_get_service$MH() {
        return RuntimeHelper.requireNonNull(constants$1201.const$2,"g_network_service_get_service");
    }
    /**
     * {@snippet :
     * char* g_network_service_get_service(struct _GNetworkService* srv);
     * }
     */
    public static MemorySegment g_network_service_get_service(MemorySegment srv) {
        var mh$ = g_network_service_get_service$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(srv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_service_get_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$1201.const$3,"g_network_service_get_protocol");
    }
    /**
     * {@snippet :
     * char* g_network_service_get_protocol(struct _GNetworkService* srv);
     * }
     */
    public static MemorySegment g_network_service_get_protocol(MemorySegment srv) {
        var mh$ = g_network_service_get_protocol$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(srv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_service_get_domain$MH() {
        return RuntimeHelper.requireNonNull(constants$1201.const$4,"g_network_service_get_domain");
    }
    /**
     * {@snippet :
     * char* g_network_service_get_domain(struct _GNetworkService* srv);
     * }
     */
    public static MemorySegment g_network_service_get_domain(MemorySegment srv) {
        var mh$ = g_network_service_get_domain$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(srv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_service_get_scheme$MH() {
        return RuntimeHelper.requireNonNull(constants$1201.const$5,"g_network_service_get_scheme");
    }
    /**
     * {@snippet :
     * char* g_network_service_get_scheme(struct _GNetworkService* srv);
     * }
     */
    public static MemorySegment g_network_service_get_scheme(MemorySegment srv) {
        var mh$ = g_network_service_get_scheme$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(srv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_network_service_set_scheme$MH() {
        return RuntimeHelper.requireNonNull(constants$1202.const$0,"g_network_service_set_scheme");
    }
    /**
     * {@snippet :
     * void g_network_service_set_scheme(struct _GNetworkService* srv, char* scheme);
     * }
     */
    public static void g_network_service_set_scheme(MemorySegment srv, MemorySegment scheme) {
        var mh$ = g_network_service_set_scheme$MH();
        try {
            mh$.invokeExact(srv, scheme);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_notification_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1202.const$1,"g_notification_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_notification_get_type();
     * }
     */
    public static long g_notification_get_type() {
        var mh$ = g_notification_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_notification_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1202.const$2,"g_notification_new");
    }
    /**
     * {@snippet :
     * struct _GNotification* g_notification_new(char* title);
     * }
     */
    public static MemorySegment g_notification_new(MemorySegment title) {
        var mh$ = g_notification_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_notification_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1202.const$3,"g_notification_set_title");
    }
    /**
     * {@snippet :
     * void g_notification_set_title(struct _GNotification* notification, char* title);
     * }
     */
    public static void g_notification_set_title(MemorySegment notification, MemorySegment title) {
        var mh$ = g_notification_set_title$MH();
        try {
            mh$.invokeExact(notification, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_notification_set_body$MH() {
        return RuntimeHelper.requireNonNull(constants$1202.const$4,"g_notification_set_body");
    }
    /**
     * {@snippet :
     * void g_notification_set_body(struct _GNotification* notification, char* body);
     * }
     */
    public static void g_notification_set_body(MemorySegment notification, MemorySegment body) {
        var mh$ = g_notification_set_body$MH();
        try {
            mh$.invokeExact(notification, body);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_notification_set_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1202.const$5,"g_notification_set_icon");
    }
    /**
     * {@snippet :
     * void g_notification_set_icon(struct _GNotification* notification, struct _GIcon* icon);
     * }
     */
    public static void g_notification_set_icon(MemorySegment notification, MemorySegment icon) {
        var mh$ = g_notification_set_icon$MH();
        try {
            mh$.invokeExact(notification, icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_notification_set_urgent$MH() {
        return RuntimeHelper.requireNonNull(constants$1203.const$0,"g_notification_set_urgent");
    }
    /**
     * {@snippet :
     * void g_notification_set_urgent(struct _GNotification* notification, int urgent);
     * }
     */
    public static void g_notification_set_urgent(MemorySegment notification, int urgent) {
        var mh$ = g_notification_set_urgent$MH();
        try {
            mh$.invokeExact(notification, urgent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_notification_set_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$1203.const$1,"g_notification_set_priority");
    }
    /**
     * {@snippet :
     * void g_notification_set_priority(struct _GNotification* notification, enum GNotificationPriority priority);
     * }
     */
    public static void g_notification_set_priority(MemorySegment notification, int priority) {
        var mh$ = g_notification_set_priority$MH();
        try {
            mh$.invokeExact(notification, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_notification_set_category$MH() {
        return RuntimeHelper.requireNonNull(constants$1203.const$2,"g_notification_set_category");
    }
    /**
     * {@snippet :
     * void g_notification_set_category(struct _GNotification* notification, char* category);
     * }
     */
    public static void g_notification_set_category(MemorySegment notification, MemorySegment category) {
        var mh$ = g_notification_set_category$MH();
        try {
            mh$.invokeExact(notification, category);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_notification_add_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1203.const$3,"g_notification_add_button");
    }
    /**
     * {@snippet :
     * void g_notification_add_button(struct _GNotification* notification, char* label, char* detailed_action);
     * }
     */
    public static void g_notification_add_button(MemorySegment notification, MemorySegment label, MemorySegment detailed_action) {
        var mh$ = g_notification_add_button$MH();
        try {
            mh$.invokeExact(notification, label, detailed_action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_notification_add_button_with_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1203.const$4,"g_notification_add_button_with_target");
    }
    /**
     * {@snippet :
     * void g_notification_add_button_with_target(struct _GNotification* notification, char* label, char* action, char* target_format,...);
     * }
     */
    public static void g_notification_add_button_with_target(MemorySegment notification, MemorySegment label, MemorySegment action, MemorySegment target_format, Object... x4) {
        var mh$ = g_notification_add_button_with_target$MH();
        try {
            mh$.invokeExact(notification, label, action, target_format, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_notification_add_button_with_target_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1203.const$5,"g_notification_add_button_with_target_value");
    }
    /**
     * {@snippet :
     * void g_notification_add_button_with_target_value(struct _GNotification* notification, char* label, char* action, struct _GVariant* target);
     * }
     */
    public static void g_notification_add_button_with_target_value(MemorySegment notification, MemorySegment label, MemorySegment action, MemorySegment target) {
        var mh$ = g_notification_add_button_with_target_value$MH();
        try {
            mh$.invokeExact(notification, label, action, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_notification_set_default_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1204.const$0,"g_notification_set_default_action");
    }
    /**
     * {@snippet :
     * void g_notification_set_default_action(struct _GNotification* notification, char* detailed_action);
     * }
     */
    public static void g_notification_set_default_action(MemorySegment notification, MemorySegment detailed_action) {
        var mh$ = g_notification_set_default_action$MH();
        try {
            mh$.invokeExact(notification, detailed_action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_notification_set_default_action_and_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1204.const$1,"g_notification_set_default_action_and_target");
    }
    /**
     * {@snippet :
     * void g_notification_set_default_action_and_target(struct _GNotification* notification, char* action, char* target_format,...);
     * }
     */
    public static void g_notification_set_default_action_and_target(MemorySegment notification, MemorySegment action, MemorySegment target_format, Object... x3) {
        var mh$ = g_notification_set_default_action_and_target$MH();
        try {
            mh$.invokeExact(notification, action, target_format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_notification_set_default_action_and_target_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1204.const$2,"g_notification_set_default_action_and_target_value");
    }
    /**
     * {@snippet :
     * void g_notification_set_default_action_and_target_value(struct _GNotification* notification, char* action, struct _GVariant* target);
     * }
     */
    public static void g_notification_set_default_action_and_target_value(MemorySegment notification, MemorySegment action, MemorySegment target) {
        var mh$ = g_notification_set_default_action_and_target_value$MH();
        try {
            mh$.invokeExact(notification, action, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_permission_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1207.const$0,"g_permission_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_permission_get_type();
     * }
     */
    public static long g_permission_get_type() {
        var mh$ = g_permission_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_permission_acquire$MH() {
        return RuntimeHelper.requireNonNull(constants$1207.const$1,"g_permission_acquire");
    }
    /**
     * {@snippet :
     * int g_permission_acquire(struct _GPermission* permission, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_permission_acquire(MemorySegment permission, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_permission_acquire$MH();
        try {
            return (int)mh$.invokeExact(permission, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_permission_acquire_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1207.const$3,"g_permission_acquire_async");
    }
    /**
     * {@snippet :
     * void g_permission_acquire_async(struct _GPermission* permission, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_permission_acquire_async(MemorySegment permission, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_permission_acquire_async$MH();
        try {
            mh$.invokeExact(permission, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_permission_acquire_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1207.const$4,"g_permission_acquire_finish");
    }
    /**
     * {@snippet :
     * int g_permission_acquire_finish(struct _GPermission* permission, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_permission_acquire_finish(MemorySegment permission, MemorySegment result, MemorySegment error) {
        var mh$ = g_permission_acquire_finish$MH();
        try {
            return (int)mh$.invokeExact(permission, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_permission_release$MH() {
        return RuntimeHelper.requireNonNull(constants$1207.const$5,"g_permission_release");
    }
    /**
     * {@snippet :
     * int g_permission_release(struct _GPermission* permission, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_permission_release(MemorySegment permission, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_permission_release$MH();
        try {
            return (int)mh$.invokeExact(permission, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_permission_release_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1208.const$1,"g_permission_release_async");
    }
    /**
     * {@snippet :
     * void g_permission_release_async(struct _GPermission* permission, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_permission_release_async(MemorySegment permission, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_permission_release_async$MH();
        try {
            mh$.invokeExact(permission, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_permission_release_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1208.const$2,"g_permission_release_finish");
    }
    /**
     * {@snippet :
     * int g_permission_release_finish(struct _GPermission* permission, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_permission_release_finish(MemorySegment permission, MemorySegment result, MemorySegment error) {
        var mh$ = g_permission_release_finish$MH();
        try {
            return (int)mh$.invokeExact(permission, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_permission_get_allowed$MH() {
        return RuntimeHelper.requireNonNull(constants$1208.const$3,"g_permission_get_allowed");
    }
    /**
     * {@snippet :
     * int g_permission_get_allowed(struct _GPermission* permission);
     * }
     */
    public static int g_permission_get_allowed(MemorySegment permission) {
        var mh$ = g_permission_get_allowed$MH();
        try {
            return (int)mh$.invokeExact(permission);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_permission_get_can_acquire$MH() {
        return RuntimeHelper.requireNonNull(constants$1208.const$4,"g_permission_get_can_acquire");
    }
    /**
     * {@snippet :
     * int g_permission_get_can_acquire(struct _GPermission* permission);
     * }
     */
    public static int g_permission_get_can_acquire(MemorySegment permission) {
        var mh$ = g_permission_get_can_acquire$MH();
        try {
            return (int)mh$.invokeExact(permission);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_permission_get_can_release$MH() {
        return RuntimeHelper.requireNonNull(constants$1208.const$5,"g_permission_get_can_release");
    }
    /**
     * {@snippet :
     * int g_permission_get_can_release(struct _GPermission* permission);
     * }
     */
    public static int g_permission_get_can_release(MemorySegment permission) {
        var mh$ = g_permission_get_can_release$MH();
        try {
            return (int)mh$.invokeExact(permission);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_permission_impl_update$MH() {
        return RuntimeHelper.requireNonNull(constants$1209.const$0,"g_permission_impl_update");
    }
    /**
     * {@snippet :
     * void g_permission_impl_update(struct _GPermission* permission, int allowed, int can_acquire, int can_release);
     * }
     */
    public static void g_permission_impl_update(MemorySegment permission, int allowed, int can_acquire, int can_release) {
        var mh$ = g_permission_impl_update$MH();
        try {
            mh$.invokeExact(permission, allowed, can_acquire, can_release);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollable_input_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1210.const$5,"g_pollable_input_stream_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_pollable_input_stream_get_type();
     * }
     */
    public static long g_pollable_input_stream_get_type() {
        var mh$ = g_pollable_input_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollable_input_stream_can_poll$MH() {
        return RuntimeHelper.requireNonNull(constants$1211.const$0,"g_pollable_input_stream_can_poll");
    }
    /**
     * {@snippet :
     * int g_pollable_input_stream_can_poll(struct _GPollableInputStream* stream);
     * }
     */
    public static int g_pollable_input_stream_can_poll(MemorySegment stream) {
        var mh$ = g_pollable_input_stream_can_poll$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollable_input_stream_is_readable$MH() {
        return RuntimeHelper.requireNonNull(constants$1211.const$1,"g_pollable_input_stream_is_readable");
    }
    /**
     * {@snippet :
     * int g_pollable_input_stream_is_readable(struct _GPollableInputStream* stream);
     * }
     */
    public static int g_pollable_input_stream_is_readable(MemorySegment stream) {
        var mh$ = g_pollable_input_stream_is_readable$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollable_input_stream_create_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1211.const$2,"g_pollable_input_stream_create_source");
    }
    /**
     * {@snippet :
     * struct _GSource* g_pollable_input_stream_create_source(struct _GPollableInputStream* stream, struct _GCancellable* cancellable);
     * }
     */
    public static MemorySegment g_pollable_input_stream_create_source(MemorySegment stream, MemorySegment cancellable) {
        var mh$ = g_pollable_input_stream_create_source$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollable_input_stream_read_nonblocking$MH() {
        return RuntimeHelper.requireNonNull(constants$1211.const$3,"g_pollable_input_stream_read_nonblocking");
    }
    /**
     * {@snippet :
     * long g_pollable_input_stream_read_nonblocking(struct _GPollableInputStream* stream, void* buffer, unsigned long count, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static long g_pollable_input_stream_read_nonblocking(MemorySegment stream, MemorySegment buffer, long count, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_pollable_input_stream_read_nonblocking$MH();
        try {
            return (long)mh$.invokeExact(stream, buffer, count, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollable_output_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.const$3,"g_pollable_output_stream_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_pollable_output_stream_get_type();
     * }
     */
    public static long g_pollable_output_stream_get_type() {
        var mh$ = g_pollable_output_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollable_output_stream_can_poll$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.const$4,"g_pollable_output_stream_can_poll");
    }
    /**
     * {@snippet :
     * int g_pollable_output_stream_can_poll(struct _GPollableOutputStream* stream);
     * }
     */
    public static int g_pollable_output_stream_can_poll(MemorySegment stream) {
        var mh$ = g_pollable_output_stream_can_poll$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollable_output_stream_is_writable$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.const$5,"g_pollable_output_stream_is_writable");
    }
    /**
     * {@snippet :
     * int g_pollable_output_stream_is_writable(struct _GPollableOutputStream* stream);
     * }
     */
    public static int g_pollable_output_stream_is_writable(MemorySegment stream) {
        var mh$ = g_pollable_output_stream_is_writable$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollable_output_stream_create_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.const$0,"g_pollable_output_stream_create_source");
    }
    /**
     * {@snippet :
     * struct _GSource* g_pollable_output_stream_create_source(struct _GPollableOutputStream* stream, struct _GCancellable* cancellable);
     * }
     */
    public static MemorySegment g_pollable_output_stream_create_source(MemorySegment stream, MemorySegment cancellable) {
        var mh$ = g_pollable_output_stream_create_source$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stream, cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollable_output_stream_write_nonblocking$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.const$1,"g_pollable_output_stream_write_nonblocking");
    }
    /**
     * {@snippet :
     * long g_pollable_output_stream_write_nonblocking(struct _GPollableOutputStream* stream, void* buffer, unsigned long count, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static long g_pollable_output_stream_write_nonblocking(MemorySegment stream, MemorySegment buffer, long count, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_pollable_output_stream_write_nonblocking$MH();
        try {
            return (long)mh$.invokeExact(stream, buffer, count, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollable_output_stream_writev_nonblocking$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.const$2,"g_pollable_output_stream_writev_nonblocking");
    }
    /**
     * {@snippet :
     * enum GPollableReturn g_pollable_output_stream_writev_nonblocking(struct _GPollableOutputStream* stream, struct _GOutputVector* vectors, unsigned long n_vectors, unsigned long* bytes_written, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_pollable_output_stream_writev_nonblocking(MemorySegment stream, MemorySegment vectors, long n_vectors, MemorySegment bytes_written, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_pollable_output_stream_writev_nonblocking$MH();
        try {
            return (int)mh$.invokeExact(stream, vectors, n_vectors, bytes_written, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollable_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.const$3,"g_pollable_source_new");
    }
    /**
     * {@snippet :
     * struct _GSource* g_pollable_source_new(struct _GObject* pollable_stream);
     * }
     */
    public static MemorySegment g_pollable_source_new(MemorySegment pollable_stream) {
        var mh$ = g_pollable_source_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pollable_stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollable_source_new_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.const$4,"g_pollable_source_new_full");
    }
    /**
     * {@snippet :
     * struct _GSource* g_pollable_source_new_full(void* pollable_stream, struct _GSource* child_source, struct _GCancellable* cancellable);
     * }
     */
    public static MemorySegment g_pollable_source_new_full(MemorySegment pollable_stream, MemorySegment child_source, MemorySegment cancellable) {
        var mh$ = g_pollable_source_new_full$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pollable_stream, child_source, cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollable_stream_read$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.const$6,"g_pollable_stream_read");
    }
    /**
     * {@snippet :
     * long g_pollable_stream_read(struct _GInputStream* stream, void* buffer, unsigned long count, int blocking, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static long g_pollable_stream_read(MemorySegment stream, MemorySegment buffer, long count, int blocking, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_pollable_stream_read$MH();
        try {
            return (long)mh$.invokeExact(stream, buffer, count, blocking, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollable_stream_write$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.const$0,"g_pollable_stream_write");
    }
    /**
     * {@snippet :
     * long g_pollable_stream_write(struct _GOutputStream* stream, void* buffer, unsigned long count, int blocking, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static long g_pollable_stream_write(MemorySegment stream, MemorySegment buffer, long count, int blocking, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_pollable_stream_write$MH();
        try {
            return (long)mh$.invokeExact(stream, buffer, count, blocking, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollable_stream_write_all$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.const$2,"g_pollable_stream_write_all");
    }
    /**
     * {@snippet :
     * int g_pollable_stream_write_all(struct _GOutputStream* stream, void* buffer, unsigned long count, int blocking, unsigned long* bytes_written, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_pollable_stream_write_all(MemorySegment stream, MemorySegment buffer, long count, int blocking, MemorySegment bytes_written, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_pollable_stream_write_all$MH();
        try {
            return (int)mh$.invokeExact(stream, buffer, count, blocking, bytes_written, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_power_profile_monitor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.const$3,"g_power_profile_monitor_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_power_profile_monitor_get_type();
     * }
     */
    public static long g_power_profile_monitor_get_type() {
        var mh$ = g_power_profile_monitor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GPowerProfileMonitor* GPowerProfileMonitor_autoptr;
     * }
     */
    public static final AddressLayout GPowerProfileMonitor_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GPowerProfileMonitor_listautoptr;
     * }
     */
    public static final AddressLayout GPowerProfileMonitor_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GPowerProfileMonitor_slistautoptr;
     * }
     */
    public static final AddressLayout GPowerProfileMonitor_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GPowerProfileMonitor_queueautoptr;
     * }
     */
    public static final AddressLayout GPowerProfileMonitor_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle g_power_profile_monitor_dup_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.const$5,"g_power_profile_monitor_dup_default");
    }
    /**
     * {@snippet :
     * struct _GPowerProfileMonitor* g_power_profile_monitor_dup_default();
     * }
     */
    public static MemorySegment g_power_profile_monitor_dup_default() {
        var mh$ = g_power_profile_monitor_dup_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_power_profile_monitor_get_power_saver_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.const$0,"g_power_profile_monitor_get_power_saver_enabled");
    }
    /**
     * {@snippet :
     * int g_power_profile_monitor_get_power_saver_enabled(struct _GPowerProfileMonitor* monitor);
     * }
     */
    public static int g_power_profile_monitor_get_power_saver_enabled(MemorySegment monitor) {
        var mh$ = g_power_profile_monitor_get_power_saver_enabled$MH();
        try {
            return (int)mh$.invokeExact(monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_property_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.const$1,"g_property_action_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_property_action_get_type();
     * }
     */
    public static long g_property_action_get_type() {
        var mh$ = g_property_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_property_action_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.const$2,"g_property_action_new");
    }
    /**
     * {@snippet :
     * struct _GPropertyAction* g_property_action_new(char* name, void* object, char* property_name);
     * }
     */
    public static MemorySegment g_property_action_new(MemorySegment name, MemorySegment object, MemorySegment property_name) {
        var mh$ = g_property_action_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, object, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.const$0,"g_proxy_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_proxy_get_type();
     * }
     */
    public static long g_proxy_get_type() {
        var mh$ = g_proxy_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_get_default_for_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.const$1,"g_proxy_get_default_for_protocol");
    }
    /**
     * {@snippet :
     * struct _GProxy* g_proxy_get_default_for_protocol(char* protocol);
     * }
     */
    public static MemorySegment g_proxy_get_default_for_protocol(MemorySegment protocol) {
        var mh$ = g_proxy_get_default_for_protocol$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(protocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.const$2,"g_proxy_connect");
    }
    /**
     * {@snippet :
     * struct _GIOStream* g_proxy_connect(struct _GProxy* proxy, struct _GIOStream* connection, struct _GProxyAddress* proxy_address, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_proxy_connect(MemorySegment proxy, MemorySegment connection, MemorySegment proxy_address, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_proxy_connect$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy, connection, proxy_address, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_connect_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.const$4,"g_proxy_connect_async");
    }
    /**
     * {@snippet :
     * void g_proxy_connect_async(struct _GProxy* proxy, struct _GIOStream* connection, struct _GProxyAddress* proxy_address, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_proxy_connect_async(MemorySegment proxy, MemorySegment connection, MemorySegment proxy_address, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_proxy_connect_async$MH();
        try {
            mh$.invokeExact(proxy, connection, proxy_address, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_connect_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.const$5,"g_proxy_connect_finish");
    }
    /**
     * {@snippet :
     * struct _GIOStream* g_proxy_connect_finish(struct _GProxy* proxy, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_proxy_connect_finish(MemorySegment proxy, MemorySegment result, MemorySegment error) {
        var mh$ = g_proxy_connect_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_supports_hostname$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.const$0,"g_proxy_supports_hostname");
    }
    /**
     * {@snippet :
     * int g_proxy_supports_hostname(struct _GProxy* proxy);
     * }
     */
    public static int g_proxy_supports_hostname(MemorySegment proxy) {
        var mh$ = g_proxy_supports_hostname$MH();
        try {
            return (int)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.const$4,"g_proxy_address_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_proxy_address_get_type();
     * }
     */
    public static long g_proxy_address_get_type() {
        var mh$ = g_proxy_address_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.const$6,"g_proxy_address_new");
    }
    /**
     * {@snippet :
     * struct _GSocketAddress* g_proxy_address_new(struct _GInetAddress* inetaddr, unsigned short port, char* protocol, char* dest_hostname, unsigned short dest_port, char* username, char* password);
     * }
     */
    public static MemorySegment g_proxy_address_new(MemorySegment inetaddr, short port, MemorySegment protocol, MemorySegment dest_hostname, short dest_port, MemorySegment username, MemorySegment password) {
        var mh$ = g_proxy_address_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(inetaddr, port, protocol, dest_hostname, dest_port, username, password);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_get_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.const$0,"g_proxy_address_get_protocol");
    }
    /**
     * {@snippet :
     * char* g_proxy_address_get_protocol(struct _GProxyAddress* proxy);
     * }
     */
    public static MemorySegment g_proxy_address_get_protocol(MemorySegment proxy) {
        var mh$ = g_proxy_address_get_protocol$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_get_destination_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.const$1,"g_proxy_address_get_destination_protocol");
    }
    /**
     * {@snippet :
     * char* g_proxy_address_get_destination_protocol(struct _GProxyAddress* proxy);
     * }
     */
    public static MemorySegment g_proxy_address_get_destination_protocol(MemorySegment proxy) {
        var mh$ = g_proxy_address_get_destination_protocol$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_get_destination_hostname$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.const$2,"g_proxy_address_get_destination_hostname");
    }
    /**
     * {@snippet :
     * char* g_proxy_address_get_destination_hostname(struct _GProxyAddress* proxy);
     * }
     */
    public static MemorySegment g_proxy_address_get_destination_hostname(MemorySegment proxy) {
        var mh$ = g_proxy_address_get_destination_hostname$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_get_destination_port$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.const$3,"g_proxy_address_get_destination_port");
    }
    /**
     * {@snippet :
     * unsigned short g_proxy_address_get_destination_port(struct _GProxyAddress* proxy);
     * }
     */
    public static short g_proxy_address_get_destination_port(MemorySegment proxy) {
        var mh$ = g_proxy_address_get_destination_port$MH();
        try {
            return (short)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_get_username$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.const$4,"g_proxy_address_get_username");
    }
    /**
     * {@snippet :
     * char* g_proxy_address_get_username(struct _GProxyAddress* proxy);
     * }
     */
    public static MemorySegment g_proxy_address_get_username(MemorySegment proxy) {
        var mh$ = g_proxy_address_get_username$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_get_password$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.const$5,"g_proxy_address_get_password");
    }
    /**
     * {@snippet :
     * char* g_proxy_address_get_password(struct _GProxyAddress* proxy);
     * }
     */
    public static MemorySegment g_proxy_address_get_password(MemorySegment proxy) {
        var mh$ = g_proxy_address_get_password$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_get_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.const$0,"g_proxy_address_get_uri");
    }
    /**
     * {@snippet :
     * char* g_proxy_address_get_uri(struct _GProxyAddress* proxy);
     * }
     */
    public static MemorySegment g_proxy_address_get_uri(MemorySegment proxy) {
        var mh$ = g_proxy_address_get_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_address_enumerator_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.const$3,"g_socket_address_enumerator_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_socket_address_enumerator_get_type();
     * }
     */
    public static long g_socket_address_enumerator_get_type() {
        var mh$ = g_socket_address_enumerator_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_address_enumerator_next$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.const$4,"g_socket_address_enumerator_next");
    }
    /**
     * {@snippet :
     * struct _GSocketAddress* g_socket_address_enumerator_next(struct _GSocketAddressEnumerator* enumerator, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_address_enumerator_next(MemorySegment enumerator, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_address_enumerator_next$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(enumerator, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_address_enumerator_next_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.const$0,"g_socket_address_enumerator_next_async");
    }
    /**
     * {@snippet :
     * void g_socket_address_enumerator_next_async(struct _GSocketAddressEnumerator* enumerator, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_socket_address_enumerator_next_async(MemorySegment enumerator, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_socket_address_enumerator_next_async$MH();
        try {
            mh$.invokeExact(enumerator, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_address_enumerator_next_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.const$1,"g_socket_address_enumerator_next_finish");
    }
    /**
     * {@snippet :
     * struct _GSocketAddress* g_socket_address_enumerator_next_finish(struct _GSocketAddressEnumerator* enumerator, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_address_enumerator_next_finish(MemorySegment enumerator, MemorySegment result, MemorySegment error) {
        var mh$ = g_socket_address_enumerator_next_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(enumerator, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_address_enumerator_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1226.const$1,"g_proxy_address_enumerator_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_proxy_address_enumerator_get_type();
     * }
     */
    public static long g_proxy_address_enumerator_get_type() {
        var mh$ = g_proxy_address_enumerator_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_resolver_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1227.const$5,"g_proxy_resolver_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_proxy_resolver_get_type();
     * }
     */
    public static long g_proxy_resolver_get_type() {
        var mh$ = g_proxy_resolver_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_resolver_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.const$0,"g_proxy_resolver_get_default");
    }
    /**
     * {@snippet :
     * struct _GProxyResolver* g_proxy_resolver_get_default();
     * }
     */
    public static MemorySegment g_proxy_resolver_get_default() {
        var mh$ = g_proxy_resolver_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_resolver_is_supported$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.const$1,"g_proxy_resolver_is_supported");
    }
    /**
     * {@snippet :
     * int g_proxy_resolver_is_supported(struct _GProxyResolver* resolver);
     * }
     */
    public static int g_proxy_resolver_is_supported(MemorySegment resolver) {
        var mh$ = g_proxy_resolver_is_supported$MH();
        try {
            return (int)mh$.invokeExact(resolver);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_resolver_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.const$2,"g_proxy_resolver_lookup");
    }
    /**
     * {@snippet :
     * char** g_proxy_resolver_lookup(struct _GProxyResolver* resolver, char* uri, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_proxy_resolver_lookup(MemorySegment resolver, MemorySegment uri, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_proxy_resolver_lookup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, uri, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_resolver_lookup_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.const$4,"g_proxy_resolver_lookup_async");
    }
    /**
     * {@snippet :
     * void g_proxy_resolver_lookup_async(struct _GProxyResolver* resolver, char* uri, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_proxy_resolver_lookup_async(MemorySegment resolver, MemorySegment uri, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_proxy_resolver_lookup_async$MH();
        try {
            mh$.invokeExact(resolver, uri, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_proxy_resolver_lookup_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.const$5,"g_proxy_resolver_lookup_finish");
    }
    /**
     * {@snippet :
     * char** g_proxy_resolver_lookup_finish(struct _GProxyResolver* resolver, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_proxy_resolver_lookup_finish(MemorySegment resolver, MemorySegment result, MemorySegment error) {
        var mh$ = g_proxy_resolver_lookup_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_remote_action_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1229.const$5,"g_remote_action_group_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_remote_action_group_get_type();
     * }
     */
    public static long g_remote_action_group_get_type() {
        var mh$ = g_remote_action_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_remote_action_group_activate_action_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.const$0,"g_remote_action_group_activate_action_full");
    }
    /**
     * {@snippet :
     * void g_remote_action_group_activate_action_full(struct _GRemoteActionGroup* remote, char* action_name, struct _GVariant* parameter, struct _GVariant* platform_data);
     * }
     */
    public static void g_remote_action_group_activate_action_full(MemorySegment remote, MemorySegment action_name, MemorySegment parameter, MemorySegment platform_data) {
        var mh$ = g_remote_action_group_activate_action_full$MH();
        try {
            mh$.invokeExact(remote, action_name, parameter, platform_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_remote_action_group_change_action_state_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.const$1,"g_remote_action_group_change_action_state_full");
    }
    /**
     * {@snippet :
     * void g_remote_action_group_change_action_state_full(struct _GRemoteActionGroup* remote, char* action_name, struct _GVariant* value, struct _GVariant* platform_data);
     * }
     */
    public static void g_remote_action_group_change_action_state_full(MemorySegment remote, MemorySegment action_name, MemorySegment value, MemorySegment platform_data) {
        var mh$ = g_remote_action_group_change_action_state_full$MH();
        try {
            mh$.invokeExact(remote, action_name, value, platform_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GResolverNameLookupFlags.G_RESOLVER_NAME_LOOKUP_FLAGS_DEFAULT = 0;
     * }
     */
    public static int G_RESOLVER_NAME_LOOKUP_FLAGS_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GResolverNameLookupFlags.G_RESOLVER_NAME_LOOKUP_FLAGS_IPV4_ONLY = 1;
     * }
     */
    public static int G_RESOLVER_NAME_LOOKUP_FLAGS_IPV4_ONLY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GResolverNameLookupFlags.G_RESOLVER_NAME_LOOKUP_FLAGS_IPV6_ONLY = 2;
     * }
     */
    public static int G_RESOLVER_NAME_LOOKUP_FLAGS_IPV6_ONLY() {
        return (int)2L;
    }
    public static MethodHandle g_resolver_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.const$1,"g_resolver_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_resolver_get_type();
     * }
     */
    public static long g_resolver_get_type() {
        var mh$ = g_resolver_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.const$2,"g_resolver_get_default");
    }
    /**
     * {@snippet :
     * struct _GResolver* g_resolver_get_default();
     * }
     */
    public static MemorySegment g_resolver_get_default() {
        var mh$ = g_resolver_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_set_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.const$3,"g_resolver_set_default");
    }
    /**
     * {@snippet :
     * void g_resolver_set_default(struct _GResolver* resolver);
     * }
     */
    public static void g_resolver_set_default(MemorySegment resolver) {
        var mh$ = g_resolver_set_default$MH();
        try {
            mh$.invokeExact(resolver);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.const$4,"g_resolver_lookup_by_name");
    }
    /**
     * {@snippet :
     * struct _GList* g_resolver_lookup_by_name(struct _GResolver* resolver, char* hostname, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_by_name(MemorySegment resolver, MemorySegment hostname, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_resolver_lookup_by_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, hostname, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_by_name_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.const$0,"g_resolver_lookup_by_name_async");
    }
    /**
     * {@snippet :
     * void g_resolver_lookup_by_name_async(struct _GResolver* resolver, char* hostname, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_resolver_lookup_by_name_async(MemorySegment resolver, MemorySegment hostname, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_resolver_lookup_by_name_async$MH();
        try {
            mh$.invokeExact(resolver, hostname, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_by_name_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.const$1,"g_resolver_lookup_by_name_finish");
    }
    /**
     * {@snippet :
     * struct _GList* g_resolver_lookup_by_name_finish(struct _GResolver* resolver, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_by_name_finish(MemorySegment resolver, MemorySegment result, MemorySegment error) {
        var mh$ = g_resolver_lookup_by_name_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_by_name_with_flags_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.const$3,"g_resolver_lookup_by_name_with_flags_async");
    }
    /**
     * {@snippet :
     * void g_resolver_lookup_by_name_with_flags_async(struct _GResolver* resolver, char* hostname, enum GResolverNameLookupFlags flags, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_resolver_lookup_by_name_with_flags_async(MemorySegment resolver, MemorySegment hostname, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_resolver_lookup_by_name_with_flags_async$MH();
        try {
            mh$.invokeExact(resolver, hostname, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_by_name_with_flags_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.const$4,"g_resolver_lookup_by_name_with_flags_finish");
    }
    /**
     * {@snippet :
     * struct _GList* g_resolver_lookup_by_name_with_flags_finish(struct _GResolver* resolver, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_by_name_with_flags_finish(MemorySegment resolver, MemorySegment result, MemorySegment error) {
        var mh$ = g_resolver_lookup_by_name_with_flags_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_by_name_with_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.const$5,"g_resolver_lookup_by_name_with_flags");
    }
    /**
     * {@snippet :
     * struct _GList* g_resolver_lookup_by_name_with_flags(struct _GResolver* resolver, char* hostname, enum GResolverNameLookupFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_by_name_with_flags(MemorySegment resolver, MemorySegment hostname, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_resolver_lookup_by_name_with_flags$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, hostname, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_free_addresses$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.const$0,"g_resolver_free_addresses");
    }
    /**
     * {@snippet :
     * void g_resolver_free_addresses(struct _GList* addresses);
     * }
     */
    public static void g_resolver_free_addresses(MemorySegment addresses) {
        var mh$ = g_resolver_free_addresses$MH();
        try {
            mh$.invokeExact(addresses);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_by_address$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.const$1,"g_resolver_lookup_by_address");
    }
    /**
     * {@snippet :
     * char* g_resolver_lookup_by_address(struct _GResolver* resolver, struct _GInetAddress* address, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_by_address(MemorySegment resolver, MemorySegment address, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_resolver_lookup_by_address$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, address, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_by_address_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.const$3,"g_resolver_lookup_by_address_async");
    }
    /**
     * {@snippet :
     * void g_resolver_lookup_by_address_async(struct _GResolver* resolver, struct _GInetAddress* address, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_resolver_lookup_by_address_async(MemorySegment resolver, MemorySegment address, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_resolver_lookup_by_address_async$MH();
        try {
            mh$.invokeExact(resolver, address, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_by_address_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.const$4,"g_resolver_lookup_by_address_finish");
    }
    /**
     * {@snippet :
     * char* g_resolver_lookup_by_address_finish(struct _GResolver* resolver, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_by_address_finish(MemorySegment resolver, MemorySegment result, MemorySegment error) {
        var mh$ = g_resolver_lookup_by_address_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_service$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.const$5,"g_resolver_lookup_service");
    }
    /**
     * {@snippet :
     * struct _GList* g_resolver_lookup_service(struct _GResolver* resolver, char* service, char* protocol, char* domain, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_service(MemorySegment resolver, MemorySegment service, MemorySegment protocol, MemorySegment domain, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_resolver_lookup_service$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, service, protocol, domain, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_service_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.const$1,"g_resolver_lookup_service_async");
    }
    /**
     * {@snippet :
     * void g_resolver_lookup_service_async(struct _GResolver* resolver, char* service, char* protocol, char* domain, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_resolver_lookup_service_async(MemorySegment resolver, MemorySegment service, MemorySegment protocol, MemorySegment domain, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_resolver_lookup_service_async$MH();
        try {
            mh$.invokeExact(resolver, service, protocol, domain, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_service_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.const$2,"g_resolver_lookup_service_finish");
    }
    /**
     * {@snippet :
     * struct _GList* g_resolver_lookup_service_finish(struct _GResolver* resolver, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_service_finish(MemorySegment resolver, MemorySegment result, MemorySegment error) {
        var mh$ = g_resolver_lookup_service_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_records$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.const$3,"g_resolver_lookup_records");
    }
    /**
     * {@snippet :
     * struct _GList* g_resolver_lookup_records(struct _GResolver* resolver, char* rrname, enum GResolverRecordType record_type, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_records(MemorySegment resolver, MemorySegment rrname, int record_type, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_resolver_lookup_records$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, rrname, record_type, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_records_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.const$5,"g_resolver_lookup_records_async");
    }
    /**
     * {@snippet :
     * void g_resolver_lookup_records_async(struct _GResolver* resolver, char* rrname, enum GResolverRecordType record_type, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_resolver_lookup_records_async(MemorySegment resolver, MemorySegment rrname, int record_type, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_resolver_lookup_records_async$MH();
        try {
            mh$.invokeExact(resolver, rrname, record_type, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_lookup_records_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.const$0,"g_resolver_lookup_records_finish");
    }
    /**
     * {@snippet :
     * struct _GList* g_resolver_lookup_records_finish(struct _GResolver* resolver, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_resolver_lookup_records_finish(MemorySegment resolver, MemorySegment result, MemorySegment error) {
        var mh$ = g_resolver_lookup_records_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resolver, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_free_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.const$1,"g_resolver_free_targets");
    }
    /**
     * {@snippet :
     * void g_resolver_free_targets(struct _GList* targets);
     * }
     */
    public static void g_resolver_free_targets(MemorySegment targets) {
        var mh$ = g_resolver_free_targets$MH();
        try {
            mh$.invokeExact(targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resolver_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.const$2,"g_resolver_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int g_resolver_error_quark();
     * }
     */
    public static int g_resolver_error_quark() {
        var mh$ = g_resolver_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.const$3,"g_resource_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int g_resource_error_quark();
     * }
     */
    public static int g_resource_error_quark() {
        var mh$ = g_resource_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.const$4,"g_resource_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_resource_get_type();
     * }
     */
    public static long g_resource_get_type() {
        var mh$ = g_resource_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_new_from_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.const$5,"g_resource_new_from_data");
    }
    /**
     * {@snippet :
     * struct _GResource* g_resource_new_from_data(struct _GBytes* data, struct _GError** error);
     * }
     */
    public static MemorySegment g_resource_new_from_data(MemorySegment data, MemorySegment error) {
        var mh$ = g_resource_new_from_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.const$0,"g_resource_ref");
    }
    /**
     * {@snippet :
     * struct _GResource* g_resource_ref(struct _GResource* resource);
     * }
     */
    public static MemorySegment g_resource_ref(MemorySegment resource) {
        var mh$ = g_resource_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resource);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.const$1,"g_resource_unref");
    }
    /**
     * {@snippet :
     * void g_resource_unref(struct _GResource* resource);
     * }
     */
    public static void g_resource_unref(MemorySegment resource) {
        var mh$ = g_resource_unref$MH();
        try {
            mh$.invokeExact(resource);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_load$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.const$2,"g_resource_load");
    }
    /**
     * {@snippet :
     * struct _GResource* g_resource_load(char* filename, struct _GError** error);
     * }
     */
    public static MemorySegment g_resource_load(MemorySegment filename, MemorySegment error) {
        var mh$ = g_resource_load$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filename, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_open_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.const$3,"g_resource_open_stream");
    }
    /**
     * {@snippet :
     * struct _GInputStream* g_resource_open_stream(struct _GResource* resource, char* path, enum GResourceLookupFlags lookup_flags, struct _GError** error);
     * }
     */
    public static MemorySegment g_resource_open_stream(MemorySegment resource, MemorySegment path, int lookup_flags, MemorySegment error) {
        var mh$ = g_resource_open_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resource, path, lookup_flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_lookup_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.const$4,"g_resource_lookup_data");
    }
    /**
     * {@snippet :
     * struct _GBytes* g_resource_lookup_data(struct _GResource* resource, char* path, enum GResourceLookupFlags lookup_flags, struct _GError** error);
     * }
     */
    public static MemorySegment g_resource_lookup_data(MemorySegment resource, MemorySegment path, int lookup_flags, MemorySegment error) {
        var mh$ = g_resource_lookup_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resource, path, lookup_flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_enumerate_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.const$5,"g_resource_enumerate_children");
    }
    /**
     * {@snippet :
     * char** g_resource_enumerate_children(struct _GResource* resource, char* path, enum GResourceLookupFlags lookup_flags, struct _GError** error);
     * }
     */
    public static MemorySegment g_resource_enumerate_children(MemorySegment resource, MemorySegment path, int lookup_flags, MemorySegment error) {
        var mh$ = g_resource_enumerate_children$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(resource, path, lookup_flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resource_get_info$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.const$1,"g_resource_get_info");
    }
    /**
     * {@snippet :
     * int g_resource_get_info(struct _GResource* resource, char* path, enum GResourceLookupFlags lookup_flags, unsigned long* size, unsigned int* flags, struct _GError** error);
     * }
     */
    public static int g_resource_get_info(MemorySegment resource, MemorySegment path, int lookup_flags, MemorySegment size, MemorySegment flags, MemorySegment error) {
        var mh$ = g_resource_get_info$MH();
        try {
            return (int)mh$.invokeExact(resource, path, lookup_flags, size, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resources_register$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.const$2,"g_resources_register");
    }
    /**
     * {@snippet :
     * void g_resources_register(struct _GResource* resource);
     * }
     */
    public static void g_resources_register(MemorySegment resource) {
        var mh$ = g_resources_register$MH();
        try {
            mh$.invokeExact(resource);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resources_unregister$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.const$3,"g_resources_unregister");
    }
    /**
     * {@snippet :
     * void g_resources_unregister(struct _GResource* resource);
     * }
     */
    public static void g_resources_unregister(MemorySegment resource) {
        var mh$ = g_resources_unregister$MH();
        try {
            mh$.invokeExact(resource);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resources_open_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.const$4,"g_resources_open_stream");
    }
    /**
     * {@snippet :
     * struct _GInputStream* g_resources_open_stream(char* path, enum GResourceLookupFlags lookup_flags, struct _GError** error);
     * }
     */
    public static MemorySegment g_resources_open_stream(MemorySegment path, int lookup_flags, MemorySegment error) {
        var mh$ = g_resources_open_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(path, lookup_flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resources_lookup_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.const$5,"g_resources_lookup_data");
    }
    /**
     * {@snippet :
     * struct _GBytes* g_resources_lookup_data(char* path, enum GResourceLookupFlags lookup_flags, struct _GError** error);
     * }
     */
    public static MemorySegment g_resources_lookup_data(MemorySegment path, int lookup_flags, MemorySegment error) {
        var mh$ = g_resources_lookup_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(path, lookup_flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resources_enumerate_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.const$0,"g_resources_enumerate_children");
    }
    /**
     * {@snippet :
     * char** g_resources_enumerate_children(char* path, enum GResourceLookupFlags lookup_flags, struct _GError** error);
     * }
     */
    public static MemorySegment g_resources_enumerate_children(MemorySegment path, int lookup_flags, MemorySegment error) {
        var mh$ = g_resources_enumerate_children$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(path, lookup_flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_resources_get_info$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.const$1,"g_resources_get_info");
    }
    /**
     * {@snippet :
     * int g_resources_get_info(char* path, enum GResourceLookupFlags lookup_flags, unsigned long* size, unsigned int* flags, struct _GError** error);
     * }
     */
    public static int g_resources_get_info(MemorySegment path, int lookup_flags, MemorySegment size, MemorySegment flags, MemorySegment error) {
        var mh$ = g_resources_get_info$MH();
        try {
            return (int)mh$.invokeExact(path, lookup_flags, size, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_resource_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.const$2,"g_static_resource_init");
    }
    /**
     * {@snippet :
     * void g_static_resource_init(struct _GStaticResource* static_resource);
     * }
     */
    public static void g_static_resource_init(MemorySegment static_resource) {
        var mh$ = g_static_resource_init$MH();
        try {
            mh$.invokeExact(static_resource);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_resource_fini$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.const$3,"g_static_resource_fini");
    }
    /**
     * {@snippet :
     * void g_static_resource_fini(struct _GStaticResource* static_resource);
     * }
     */
    public static void g_static_resource_fini(MemorySegment static_resource) {
        var mh$ = g_static_resource_fini$MH();
        try {
            mh$.invokeExact(static_resource);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_resource_get_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.const$4,"g_static_resource_get_resource");
    }
    /**
     * {@snippet :
     * struct _GResource* g_static_resource_get_resource(struct _GStaticResource* static_resource);
     * }
     */
    public static MemorySegment g_static_resource_get_resource(MemorySegment static_resource) {
        var mh$ = g_static_resource_get_resource$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(static_resource);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_seekable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.const$4,"g_seekable_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_seekable_get_type();
     * }
     */
    public static long g_seekable_get_type() {
        var mh$ = g_seekable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_seekable_tell$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.const$5,"g_seekable_tell");
    }
    /**
     * {@snippet :
     * long g_seekable_tell(struct _GSeekable* seekable);
     * }
     */
    public static long g_seekable_tell(MemorySegment seekable) {
        var mh$ = g_seekable_tell$MH();
        try {
            return (long)mh$.invokeExact(seekable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_seekable_can_seek$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.const$0,"g_seekable_can_seek");
    }
    /**
     * {@snippet :
     * int g_seekable_can_seek(struct _GSeekable* seekable);
     * }
     */
    public static int g_seekable_can_seek(MemorySegment seekable) {
        var mh$ = g_seekable_can_seek$MH();
        try {
            return (int)mh$.invokeExact(seekable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_seekable_seek$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.const$1,"g_seekable_seek");
    }
    /**
     * {@snippet :
     * int g_seekable_seek(struct _GSeekable* seekable, long offset, enum GSeekType type, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_seekable_seek(MemorySegment seekable, long offset, int type, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_seekable_seek$MH();
        try {
            return (int)mh$.invokeExact(seekable, offset, type, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_seekable_can_truncate$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.const$2,"g_seekable_can_truncate");
    }
    /**
     * {@snippet :
     * int g_seekable_can_truncate(struct _GSeekable* seekable);
     * }
     */
    public static int g_seekable_can_truncate(MemorySegment seekable) {
        var mh$ = g_seekable_can_truncate$MH();
        try {
            return (int)mh$.invokeExact(seekable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_seekable_truncate$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.const$3,"g_seekable_truncate");
    }
    /**
     * {@snippet :
     * int g_seekable_truncate(struct _GSeekable* seekable, long offset, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_seekable_truncate(MemorySegment seekable, long offset, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_seekable_truncate$MH();
        try {
            return (int)mh$.invokeExact(seekable, offset, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_source_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.const$4,"g_settings_schema_source_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_settings_schema_source_get_type();
     * }
     */
    public static long g_settings_schema_source_get_type() {
        var mh$ = g_settings_schema_source_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_source_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.const$5,"g_settings_schema_source_get_default");
    }
    /**
     * {@snippet :
     * struct _GSettingsSchemaSource* g_settings_schema_source_get_default();
     * }
     */
    public static MemorySegment g_settings_schema_source_get_default() {
        var mh$ = g_settings_schema_source_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_source_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.const$0,"g_settings_schema_source_ref");
    }
    /**
     * {@snippet :
     * struct _GSettingsSchemaSource* g_settings_schema_source_ref(struct _GSettingsSchemaSource* source);
     * }
     */
    public static MemorySegment g_settings_schema_source_ref(MemorySegment source) {
        var mh$ = g_settings_schema_source_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_source_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.const$1,"g_settings_schema_source_unref");
    }
    /**
     * {@snippet :
     * void g_settings_schema_source_unref(struct _GSettingsSchemaSource* source);
     * }
     */
    public static void g_settings_schema_source_unref(MemorySegment source) {
        var mh$ = g_settings_schema_source_unref$MH();
        try {
            mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_source_new_from_directory$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.const$2,"g_settings_schema_source_new_from_directory");
    }
    /**
     * {@snippet :
     * struct _GSettingsSchemaSource* g_settings_schema_source_new_from_directory(char* directory, struct _GSettingsSchemaSource* parent, int trusted, struct _GError** error);
     * }
     */
    public static MemorySegment g_settings_schema_source_new_from_directory(MemorySegment directory, MemorySegment parent, int trusted, MemorySegment error) {
        var mh$ = g_settings_schema_source_new_from_directory$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(directory, parent, trusted, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_source_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.const$3,"g_settings_schema_source_lookup");
    }
    /**
     * {@snippet :
     * struct _GSettingsSchema* g_settings_schema_source_lookup(struct _GSettingsSchemaSource* source, char* schema_id, int recursive);
     * }
     */
    public static MemorySegment g_settings_schema_source_lookup(MemorySegment source, MemorySegment schema_id, int recursive) {
        var mh$ = g_settings_schema_source_lookup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source, schema_id, recursive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_source_list_schemas$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.const$4,"g_settings_schema_source_list_schemas");
    }
    /**
     * {@snippet :
     * void g_settings_schema_source_list_schemas(struct _GSettingsSchemaSource* source, int recursive, char*** non_relocatable, char*** relocatable);
     * }
     */
    public static void g_settings_schema_source_list_schemas(MemorySegment source, int recursive, MemorySegment non_relocatable, MemorySegment relocatable) {
        var mh$ = g_settings_schema_source_list_schemas$MH();
        try {
            mh$.invokeExact(source, recursive, non_relocatable, relocatable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.const$5,"g_settings_schema_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_settings_schema_get_type();
     * }
     */
    public static long g_settings_schema_get_type() {
        var mh$ = g_settings_schema_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.const$0,"g_settings_schema_ref");
    }
    /**
     * {@snippet :
     * struct _GSettingsSchema* g_settings_schema_ref(struct _GSettingsSchema* schema);
     * }
     */
    public static MemorySegment g_settings_schema_ref(MemorySegment schema) {
        var mh$ = g_settings_schema_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.const$1,"g_settings_schema_unref");
    }
    /**
     * {@snippet :
     * void g_settings_schema_unref(struct _GSettingsSchema* schema);
     * }
     */
    public static void g_settings_schema_unref(MemorySegment schema) {
        var mh$ = g_settings_schema_unref$MH();
        try {
            mh$.invokeExact(schema);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_get_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.const$2,"g_settings_schema_get_id");
    }
    /**
     * {@snippet :
     * char* g_settings_schema_get_id(struct _GSettingsSchema* schema);
     * }
     */
    public static MemorySegment g_settings_schema_get_id(MemorySegment schema) {
        var mh$ = g_settings_schema_get_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_get_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.const$3,"g_settings_schema_get_path");
    }
    /**
     * {@snippet :
     * char* g_settings_schema_get_path(struct _GSettingsSchema* schema);
     * }
     */
    public static MemorySegment g_settings_schema_get_path(MemorySegment schema) {
        var mh$ = g_settings_schema_get_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_get_key$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.const$4,"g_settings_schema_get_key");
    }
    /**
     * {@snippet :
     * struct _GSettingsSchemaKey* g_settings_schema_get_key(struct _GSettingsSchema* schema, char* name);
     * }
     */
    public static MemorySegment g_settings_schema_get_key(MemorySegment schema, MemorySegment name) {
        var mh$ = g_settings_schema_get_key$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_has_key$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.const$5,"g_settings_schema_has_key");
    }
    /**
     * {@snippet :
     * int g_settings_schema_has_key(struct _GSettingsSchema* schema, char* name);
     * }
     */
    public static int g_settings_schema_has_key(MemorySegment schema, MemorySegment name) {
        var mh$ = g_settings_schema_has_key$MH();
        try {
            return (int)mh$.invokeExact(schema, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_list_keys$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.const$0,"g_settings_schema_list_keys");
    }
    /**
     * {@snippet :
     * char** g_settings_schema_list_keys(struct _GSettingsSchema* schema);
     * }
     */
    public static MemorySegment g_settings_schema_list_keys(MemorySegment schema) {
        var mh$ = g_settings_schema_list_keys$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_list_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.const$1,"g_settings_schema_list_children");
    }
    /**
     * {@snippet :
     * char** g_settings_schema_list_children(struct _GSettingsSchema* schema);
     * }
     */
    public static MemorySegment g_settings_schema_list_children(MemorySegment schema) {
        var mh$ = g_settings_schema_list_children$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.const$2,"g_settings_schema_key_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_settings_schema_key_get_type();
     * }
     */
    public static long g_settings_schema_key_get_type() {
        var mh$ = g_settings_schema_key_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.const$3,"g_settings_schema_key_ref");
    }
    /**
     * {@snippet :
     * struct _GSettingsSchemaKey* g_settings_schema_key_ref(struct _GSettingsSchemaKey* key);
     * }
     */
    public static MemorySegment g_settings_schema_key_ref(MemorySegment key) {
        var mh$ = g_settings_schema_key_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.const$4,"g_settings_schema_key_unref");
    }
    /**
     * {@snippet :
     * void g_settings_schema_key_unref(struct _GSettingsSchemaKey* key);
     * }
     */
    public static void g_settings_schema_key_unref(MemorySegment key) {
        var mh$ = g_settings_schema_key_unref$MH();
        try {
            mh$.invokeExact(key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_get_value_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.const$5,"g_settings_schema_key_get_value_type");
    }
    /**
     * {@snippet :
     * struct _GVariantType* g_settings_schema_key_get_value_type(struct _GSettingsSchemaKey* key);
     * }
     */
    public static MemorySegment g_settings_schema_key_get_value_type(MemorySegment key) {
        var mh$ = g_settings_schema_key_get_value_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_get_default_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.const$0,"g_settings_schema_key_get_default_value");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_settings_schema_key_get_default_value(struct _GSettingsSchemaKey* key);
     * }
     */
    public static MemorySegment g_settings_schema_key_get_default_value(MemorySegment key) {
        var mh$ = g_settings_schema_key_get_default_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_get_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.const$1,"g_settings_schema_key_get_range");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_settings_schema_key_get_range(struct _GSettingsSchemaKey* key);
     * }
     */
    public static MemorySegment g_settings_schema_key_get_range(MemorySegment key) {
        var mh$ = g_settings_schema_key_get_range$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_range_check$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.const$2,"g_settings_schema_key_range_check");
    }
    /**
     * {@snippet :
     * int g_settings_schema_key_range_check(struct _GSettingsSchemaKey* key, struct _GVariant* value);
     * }
     */
    public static int g_settings_schema_key_range_check(MemorySegment key, MemorySegment value) {
        var mh$ = g_settings_schema_key_range_check$MH();
        try {
            return (int)mh$.invokeExact(key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.const$3,"g_settings_schema_key_get_name");
    }
    /**
     * {@snippet :
     * char* g_settings_schema_key_get_name(struct _GSettingsSchemaKey* key);
     * }
     */
    public static MemorySegment g_settings_schema_key_get_name(MemorySegment key) {
        var mh$ = g_settings_schema_key_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_get_summary$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.const$4,"g_settings_schema_key_get_summary");
    }
    /**
     * {@snippet :
     * char* g_settings_schema_key_get_summary(struct _GSettingsSchemaKey* key);
     * }
     */
    public static MemorySegment g_settings_schema_key_get_summary(MemorySegment key) {
        var mh$ = g_settings_schema_key_get_summary$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_schema_key_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.const$5,"g_settings_schema_key_get_description");
    }
    /**
     * {@snippet :
     * char* g_settings_schema_key_get_description(struct _GSettingsSchemaKey* key);
     * }
     */
    public static MemorySegment g_settings_schema_key_get_description(MemorySegment key) {
        var mh$ = g_settings_schema_key_get_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.const$5,"g_settings_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_settings_get_type();
     * }
     */
    public static long g_settings_get_type() {
        var mh$ = g_settings_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_list_schemas$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.const$0,"g_settings_list_schemas");
    }
    /**
     * {@snippet :
     * char** g_settings_list_schemas();
     * }
     */
    public static MemorySegment g_settings_list_schemas() {
        var mh$ = g_settings_list_schemas$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_list_relocatable_schemas$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.const$1,"g_settings_list_relocatable_schemas");
    }
    /**
     * {@snippet :
     * char** g_settings_list_relocatable_schemas();
     * }
     */
    public static MemorySegment g_settings_list_relocatable_schemas() {
        var mh$ = g_settings_list_relocatable_schemas$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.const$2,"g_settings_new");
    }
    /**
     * {@snippet :
     * struct _GSettings* g_settings_new(char* schema_id);
     * }
     */
    public static MemorySegment g_settings_new(MemorySegment schema_id) {
        var mh$ = g_settings_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_new_with_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.const$3,"g_settings_new_with_path");
    }
    /**
     * {@snippet :
     * struct _GSettings* g_settings_new_with_path(char* schema_id, char* path);
     * }
     */
    public static MemorySegment g_settings_new_with_path(MemorySegment schema_id, MemorySegment path) {
        var mh$ = g_settings_new_with_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema_id, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_new_with_backend$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.const$4,"g_settings_new_with_backend");
    }
    /**
     * {@snippet :
     * struct _GSettings* g_settings_new_with_backend(char* schema_id, struct _GSettingsBackend* backend);
     * }
     */
    public static MemorySegment g_settings_new_with_backend(MemorySegment schema_id, MemorySegment backend) {
        var mh$ = g_settings_new_with_backend$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema_id, backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_new_with_backend_and_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.const$5,"g_settings_new_with_backend_and_path");
    }
    /**
     * {@snippet :
     * struct _GSettings* g_settings_new_with_backend_and_path(char* schema_id, struct _GSettingsBackend* backend, char* path);
     * }
     */
    public static MemorySegment g_settings_new_with_backend_and_path(MemorySegment schema_id, MemorySegment backend, MemorySegment path) {
        var mh$ = g_settings_new_with_backend_and_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema_id, backend, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_new_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.const$0,"g_settings_new_full");
    }
    /**
     * {@snippet :
     * struct _GSettings* g_settings_new_full(struct _GSettingsSchema* schema, struct _GSettingsBackend* backend, char* path);
     * }
     */
    public static MemorySegment g_settings_new_full(MemorySegment schema, MemorySegment backend, MemorySegment path) {
        var mh$ = g_settings_new_full$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(schema, backend, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_list_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.const$1,"g_settings_list_children");
    }
    /**
     * {@snippet :
     * char** g_settings_list_children(struct _GSettings* settings);
     * }
     */
    public static MemorySegment g_settings_list_children(MemorySegment settings) {
        var mh$ = g_settings_list_children$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_list_keys$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.const$2,"g_settings_list_keys");
    }
    /**
     * {@snippet :
     * char** g_settings_list_keys(struct _GSettings* settings);
     * }
     */
    public static MemorySegment g_settings_list_keys(MemorySegment settings) {
        var mh$ = g_settings_list_keys$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.const$3,"g_settings_get_range");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_settings_get_range(struct _GSettings* settings, char* key);
     * }
     */
    public static MemorySegment g_settings_get_range(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_range$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_range_check$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.const$4,"g_settings_range_check");
    }
    /**
     * {@snippet :
     * int g_settings_range_check(struct _GSettings* settings, char* key, struct _GVariant* value);
     * }
     */
    public static int g_settings_range_check(MemorySegment settings, MemorySegment key, MemorySegment value) {
        var mh$ = g_settings_range_check$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.const$5,"g_settings_set_value");
    }
    /**
     * {@snippet :
     * int g_settings_set_value(struct _GSettings* settings, char* key, struct _GVariant* value);
     * }
     */
    public static int g_settings_set_value(MemorySegment settings, MemorySegment key, MemorySegment value) {
        var mh$ = g_settings_set_value$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.const$0,"g_settings_get_value");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_settings_get_value(struct _GSettings* settings, char* key);
     * }
     */
    public static MemorySegment g_settings_get_value(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_user_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.const$1,"g_settings_get_user_value");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_settings_get_user_value(struct _GSettings* settings, char* key);
     * }
     */
    public static MemorySegment g_settings_get_user_value(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_user_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_default_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.const$2,"g_settings_get_default_value");
    }
    /**
     * {@snippet :
     * struct _GVariant* g_settings_get_default_value(struct _GSettings* settings, char* key);
     * }
     */
    public static MemorySegment g_settings_get_default_value(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_default_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.const$3,"g_settings_set");
    }
    /**
     * {@snippet :
     * int g_settings_set(struct _GSettings* settings, char* key, char* format,...);
     * }
     */
    public static int g_settings_set(MemorySegment settings, MemorySegment key, MemorySegment format, Object... x3) {
        var mh$ = g_settings_set$MH();
        try {
            return (int)mh$.invokeExact(settings, key, format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.const$4,"g_settings_get");
    }
    /**
     * {@snippet :
     * void g_settings_get(struct _GSettings* settings, char* key, char* format,...);
     * }
     */
    public static void g_settings_get(MemorySegment settings, MemorySegment key, MemorySegment format, Object... x3) {
        var mh$ = g_settings_get$MH();
        try {
            mh$.invokeExact(settings, key, format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.const$5,"g_settings_reset");
    }
    /**
     * {@snippet :
     * void g_settings_reset(struct _GSettings* settings, char* key);
     * }
     */
    public static void g_settings_reset(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_reset$MH();
        try {
            mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_int$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.const$0,"g_settings_get_int");
    }
    /**
     * {@snippet :
     * int g_settings_get_int(struct _GSettings* settings, char* key);
     * }
     */
    public static int g_settings_get_int(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_int$MH();
        try {
            return (int)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_int$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.const$1,"g_settings_set_int");
    }
    /**
     * {@snippet :
     * int g_settings_set_int(struct _GSettings* settings, char* key, int value);
     * }
     */
    public static int g_settings_set_int(MemorySegment settings, MemorySegment key, int value) {
        var mh$ = g_settings_set_int$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.const$2,"g_settings_get_int64");
    }
    /**
     * {@snippet :
     * long g_settings_get_int64(struct _GSettings* settings, char* key);
     * }
     */
    public static long g_settings_get_int64(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_int64$MH();
        try {
            return (long)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.const$3,"g_settings_set_int64");
    }
    /**
     * {@snippet :
     * int g_settings_set_int64(struct _GSettings* settings, char* key, long value);
     * }
     */
    public static int g_settings_set_int64(MemorySegment settings, MemorySegment key, long value) {
        var mh$ = g_settings_set_int64$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_uint$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.const$4,"g_settings_get_uint");
    }
    /**
     * {@snippet :
     * unsigned int g_settings_get_uint(struct _GSettings* settings, char* key);
     * }
     */
    public static int g_settings_get_uint(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_uint$MH();
        try {
            return (int)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_uint$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.const$5,"g_settings_set_uint");
    }
    /**
     * {@snippet :
     * int g_settings_set_uint(struct _GSettings* settings, char* key, unsigned int value);
     * }
     */
    public static int g_settings_set_uint(MemorySegment settings, MemorySegment key, int value) {
        var mh$ = g_settings_set_uint$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.const$0,"g_settings_get_uint64");
    }
    /**
     * {@snippet :
     * unsigned long g_settings_get_uint64(struct _GSettings* settings, char* key);
     * }
     */
    public static long g_settings_get_uint64(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_uint64$MH();
        try {
            return (long)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.const$1,"g_settings_set_uint64");
    }
    /**
     * {@snippet :
     * int g_settings_set_uint64(struct _GSettings* settings, char* key, unsigned long value);
     * }
     */
    public static int g_settings_set_uint64(MemorySegment settings, MemorySegment key, long value) {
        var mh$ = g_settings_set_uint64$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.const$2,"g_settings_get_string");
    }
    /**
     * {@snippet :
     * char* g_settings_get_string(struct _GSettings* settings, char* key);
     * }
     */
    public static MemorySegment g_settings_get_string(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.const$3,"g_settings_set_string");
    }
    /**
     * {@snippet :
     * int g_settings_set_string(struct _GSettings* settings, char* key, char* value);
     * }
     */
    public static int g_settings_set_string(MemorySegment settings, MemorySegment key, MemorySegment value) {
        var mh$ = g_settings_set_string$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.const$4,"g_settings_get_boolean");
    }
    /**
     * {@snippet :
     * int g_settings_get_boolean(struct _GSettings* settings, char* key);
     * }
     */
    public static int g_settings_get_boolean(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_boolean$MH();
        try {
            return (int)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.const$5,"g_settings_set_boolean");
    }
    /**
     * {@snippet :
     * int g_settings_set_boolean(struct _GSettings* settings, char* key, int value);
     * }
     */
    public static int g_settings_set_boolean(MemorySegment settings, MemorySegment key, int value) {
        var mh$ = g_settings_set_boolean$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_double$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.const$0,"g_settings_get_double");
    }
    /**
     * {@snippet :
     * double g_settings_get_double(struct _GSettings* settings, char* key);
     * }
     */
    public static double g_settings_get_double(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_double$MH();
        try {
            return (double)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_double$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.const$2,"g_settings_set_double");
    }
    /**
     * {@snippet :
     * int g_settings_set_double(struct _GSettings* settings, char* key, double value);
     * }
     */
    public static int g_settings_set_double(MemorySegment settings, MemorySegment key, double value) {
        var mh$ = g_settings_set_double$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_strv$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.const$3,"g_settings_get_strv");
    }
    /**
     * {@snippet :
     * char** g_settings_get_strv(struct _GSettings* settings, char* key);
     * }
     */
    public static MemorySegment g_settings_get_strv(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_strv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_strv$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.const$4,"g_settings_set_strv");
    }
    /**
     * {@snippet :
     * int g_settings_set_strv(struct _GSettings* settings, char* key, char** value);
     * }
     */
    public static int g_settings_set_strv(MemorySegment settings, MemorySegment key, MemorySegment value) {
        var mh$ = g_settings_set_strv$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_enum$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.const$5,"g_settings_get_enum");
    }
    /**
     * {@snippet :
     * int g_settings_get_enum(struct _GSettings* settings, char* key);
     * }
     */
    public static int g_settings_get_enum(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_enum$MH();
        try {
            return (int)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_enum$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.const$0,"g_settings_set_enum");
    }
    /**
     * {@snippet :
     * int g_settings_set_enum(struct _GSettings* settings, char* key, int value);
     * }
     */
    public static int g_settings_set_enum(MemorySegment settings, MemorySegment key, int value) {
        var mh$ = g_settings_set_enum$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.const$1,"g_settings_get_flags");
    }
    /**
     * {@snippet :
     * unsigned int g_settings_get_flags(struct _GSettings* settings, char* key);
     * }
     */
    public static int g_settings_get_flags(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_get_flags$MH();
        try {
            return (int)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.const$2,"g_settings_set_flags");
    }
    /**
     * {@snippet :
     * int g_settings_set_flags(struct _GSettings* settings, char* key, unsigned int value);
     * }
     */
    public static int g_settings_set_flags(MemorySegment settings, MemorySegment key, int value) {
        var mh$ = g_settings_set_flags$MH();
        try {
            return (int)mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.const$3,"g_settings_get_child");
    }
    /**
     * {@snippet :
     * struct _GSettings* g_settings_get_child(struct _GSettings* settings, char* name);
     * }
     */
    public static MemorySegment g_settings_get_child(MemorySegment settings, MemorySegment name) {
        var mh$ = g_settings_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_is_writable$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.const$4,"g_settings_is_writable");
    }
    /**
     * {@snippet :
     * int g_settings_is_writable(struct _GSettings* settings, char* name);
     * }
     */
    public static int g_settings_is_writable(MemorySegment settings, MemorySegment name) {
        var mh$ = g_settings_is_writable$MH();
        try {
            return (int)mh$.invokeExact(settings, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_delay$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.const$5,"g_settings_delay");
    }
    /**
     * {@snippet :
     * void g_settings_delay(struct _GSettings* settings);
     * }
     */
    public static void g_settings_delay(MemorySegment settings) {
        var mh$ = g_settings_delay$MH();
        try {
            mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_apply$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.const$0,"g_settings_apply");
    }
    /**
     * {@snippet :
     * void g_settings_apply(struct _GSettings* settings);
     * }
     */
    public static void g_settings_apply(MemorySegment settings) {
        var mh$ = g_settings_apply$MH();
        try {
            mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_revert$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.const$1,"g_settings_revert");
    }
    /**
     * {@snippet :
     * void g_settings_revert(struct _GSettings* settings);
     * }
     */
    public static void g_settings_revert(MemorySegment settings) {
        var mh$ = g_settings_revert$MH();
        try {
            mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_has_unapplied$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.const$2,"g_settings_get_has_unapplied");
    }
    /**
     * {@snippet :
     * int g_settings_get_has_unapplied(struct _GSettings* settings);
     * }
     */
    public static int g_settings_get_has_unapplied(MemorySegment settings) {
        var mh$ = g_settings_get_has_unapplied$MH();
        try {
            return (int)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.const$3,"g_settings_sync");
    }
    /**
     * {@snippet :
     * void g_settings_sync();
     * }
     */
    public static void g_settings_sync() {
        var mh$ = g_settings_sync$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GSettingsBindFlags.G_SETTINGS_BIND_DEFAULT = 0;
     * }
     */
    public static int G_SETTINGS_BIND_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GSettingsBindFlags.G_SETTINGS_BIND_GET = 1;
     * }
     */
    public static int G_SETTINGS_BIND_GET() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GSettingsBindFlags.G_SETTINGS_BIND_SET = 2;
     * }
     */
    public static int G_SETTINGS_BIND_SET() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GSettingsBindFlags.G_SETTINGS_BIND_NO_SENSITIVITY = 4;
     * }
     */
    public static int G_SETTINGS_BIND_NO_SENSITIVITY() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GSettingsBindFlags.G_SETTINGS_BIND_GET_NO_CHANGES = 8;
     * }
     */
    public static int G_SETTINGS_BIND_GET_NO_CHANGES() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GSettingsBindFlags.G_SETTINGS_BIND_INVERT_BOOLEAN = 16;
     * }
     */
    public static int G_SETTINGS_BIND_INVERT_BOOLEAN() {
        return (int)16L;
    }
    public static MethodHandle g_settings_bind$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.const$1,"g_settings_bind");
    }
    /**
     * {@snippet :
     * void g_settings_bind(struct _GSettings* settings, char* key, void* object, char* property, enum GSettingsBindFlags flags);
     * }
     */
    public static void g_settings_bind(MemorySegment settings, MemorySegment key, MemorySegment object, MemorySegment property, int flags) {
        var mh$ = g_settings_bind$MH();
        try {
            mh$.invokeExact(settings, key, object, property, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_bind_with_mapping$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.const$5,"g_settings_bind_with_mapping");
    }
    /**
     * {@snippet :
     * void g_settings_bind_with_mapping(struct _GSettings* settings, char* key, void* object, char* property, enum GSettingsBindFlags flags, int (*get_mapping)(struct _GValue*,struct _GVariant*,void*), struct _GVariant* (*set_mapping)(struct _GValue*,struct _GVariantType*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void g_settings_bind_with_mapping(MemorySegment settings, MemorySegment key, MemorySegment object, MemorySegment property, int flags, MemorySegment get_mapping, MemorySegment set_mapping, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = g_settings_bind_with_mapping$MH();
        try {
            mh$.invokeExact(settings, key, object, property, flags, get_mapping, set_mapping, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_bind_writable$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.const$0,"g_settings_bind_writable");
    }
    /**
     * {@snippet :
     * void g_settings_bind_writable(struct _GSettings* settings, char* key, void* object, char* property, int inverted);
     * }
     */
    public static void g_settings_bind_writable(MemorySegment settings, MemorySegment key, MemorySegment object, MemorySegment property, int inverted) {
        var mh$ = g_settings_bind_writable$MH();
        try {
            mh$.invokeExact(settings, key, object, property, inverted);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_unbind$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.const$1,"g_settings_unbind");
    }
    /**
     * {@snippet :
     * void g_settings_unbind(void* object, char* property);
     * }
     */
    public static void g_settings_unbind(MemorySegment object, MemorySegment property) {
        var mh$ = g_settings_unbind$MH();
        try {
            mh$.invokeExact(object, property);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_create_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.const$2,"g_settings_create_action");
    }
    /**
     * {@snippet :
     * struct _GAction* g_settings_create_action(struct _GSettings* settings, char* key);
     * }
     */
    public static MemorySegment g_settings_create_action(MemorySegment settings, MemorySegment key) {
        var mh$ = g_settings_create_action$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_get_mapped$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.const$4,"g_settings_get_mapped");
    }
    /**
     * {@snippet :
     * void* g_settings_get_mapped(struct _GSettings* settings, char* key, int (*mapping)(struct _GVariant*,void**,void*), void* user_data);
     * }
     */
    public static MemorySegment g_settings_get_mapped(MemorySegment settings, MemorySegment key, MemorySegment mapping, MemorySegment user_data) {
        var mh$ = g_settings_get_mapped$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, key, mapping, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.const$5,"g_simple_action_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_simple_action_get_type();
     * }
     */
    public static long g_simple_action_get_type() {
        var mh$ = g_simple_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.const$0,"g_simple_action_new");
    }
    /**
     * {@snippet :
     * struct _GSimpleAction* g_simple_action_new(char* name, struct _GVariantType* parameter_type);
     * }
     */
    public static MemorySegment g_simple_action_new(MemorySegment name, MemorySegment parameter_type) {
        var mh$ = g_simple_action_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, parameter_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_new_stateful$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.const$1,"g_simple_action_new_stateful");
    }
    /**
     * {@snippet :
     * struct _GSimpleAction* g_simple_action_new_stateful(char* name, struct _GVariantType* parameter_type, struct _GVariant* state);
     * }
     */
    public static MemorySegment g_simple_action_new_stateful(MemorySegment name, MemorySegment parameter_type, MemorySegment state) {
        var mh$ = g_simple_action_new_stateful$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, parameter_type, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_set_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.const$2,"g_simple_action_set_enabled");
    }
    /**
     * {@snippet :
     * void g_simple_action_set_enabled(struct _GSimpleAction* simple, int enabled);
     * }
     */
    public static void g_simple_action_set_enabled(MemorySegment simple, int enabled) {
        var mh$ = g_simple_action_set_enabled$MH();
        try {
            mh$.invokeExact(simple, enabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_set_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.const$3,"g_simple_action_set_state");
    }
    /**
     * {@snippet :
     * void g_simple_action_set_state(struct _GSimpleAction* simple, struct _GVariant* value);
     * }
     */
    public static void g_simple_action_set_state(MemorySegment simple, MemorySegment value) {
        var mh$ = g_simple_action_set_state$MH();
        try {
            mh$.invokeExact(simple, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_set_state_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.const$4,"g_simple_action_set_state_hint");
    }
    /**
     * {@snippet :
     * void g_simple_action_set_state_hint(struct _GSimpleAction* simple, struct _GVariant* state_hint);
     * }
     */
    public static void g_simple_action_set_state_hint(MemorySegment simple, MemorySegment state_hint) {
        var mh$ = g_simple_action_set_state_hint$MH();
        try {
            mh$.invokeExact(simple, state_hint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.const$2,"g_simple_action_group_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_simple_action_group_get_type();
     * }
     */
    public static long g_simple_action_group_get_type() {
        var mh$ = g_simple_action_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_group_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.const$3,"g_simple_action_group_new");
    }
    /**
     * {@snippet :
     * struct _GSimpleActionGroup* g_simple_action_group_new();
     * }
     */
    public static MemorySegment g_simple_action_group_new() {
        var mh$ = g_simple_action_group_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_group_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.const$4,"g_simple_action_group_lookup");
    }
    /**
     * {@snippet :
     * struct _GAction* g_simple_action_group_lookup(struct _GSimpleActionGroup* simple, char* action_name);
     * }
     */
    public static MemorySegment g_simple_action_group_lookup(MemorySegment simple, MemorySegment action_name) {
        var mh$ = g_simple_action_group_lookup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(simple, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_group_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.const$5,"g_simple_action_group_insert");
    }
    /**
     * {@snippet :
     * void g_simple_action_group_insert(struct _GSimpleActionGroup* simple, struct _GAction* action);
     * }
     */
    public static void g_simple_action_group_insert(MemorySegment simple, MemorySegment action) {
        var mh$ = g_simple_action_group_insert$MH();
        try {
            mh$.invokeExact(simple, action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_group_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.const$0,"g_simple_action_group_remove");
    }
    /**
     * {@snippet :
     * void g_simple_action_group_remove(struct _GSimpleActionGroup* simple, char* action_name);
     * }
     */
    public static void g_simple_action_group_remove(MemorySegment simple, MemorySegment action_name) {
        var mh$ = g_simple_action_group_remove$MH();
        try {
            mh$.invokeExact(simple, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_action_group_add_entries$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.const$1,"g_simple_action_group_add_entries");
    }
    /**
     * {@snippet :
     * void g_simple_action_group_add_entries(struct _GSimpleActionGroup* simple, struct _GActionEntry* entries, int n_entries, void* user_data);
     * }
     */
    public static void g_simple_action_group_add_entries(MemorySegment simple, MemorySegment entries, int n_entries, MemorySegment user_data) {
        var mh$ = g_simple_action_group_add_entries$MH();
        try {
            mh$.invokeExact(simple, entries, n_entries, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.const$2,"g_simple_async_result_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_simple_async_result_get_type();
     * }
     */
    public static long g_simple_async_result_get_type() {
        var mh$ = g_simple_async_result_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.const$4,"g_simple_async_result_new");
    }
    /**
     * {@snippet :
     * struct _GSimpleAsyncResult* g_simple_async_result_new(struct _GObject* source_object, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data, void* source_tag);
     * }
     */
    public static MemorySegment g_simple_async_result_new(MemorySegment source_object, MemorySegment callback, MemorySegment user_data, MemorySegment source_tag) {
        var mh$ = g_simple_async_result_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source_object, callback, user_data, source_tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_new_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.const$0,"g_simple_async_result_new_error");
    }
    /**
     * {@snippet :
     * struct _GSimpleAsyncResult* g_simple_async_result_new_error(struct _GObject* source_object, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data, unsigned int domain, int code, char* format,...);
     * }
     */
    public static MemorySegment g_simple_async_result_new_error(MemorySegment source_object, MemorySegment callback, MemorySegment user_data, int domain, int code, MemorySegment format, Object... x6) {
        var mh$ = g_simple_async_result_new_error$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source_object, callback, user_data, domain, code, format, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_new_from_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.const$2,"g_simple_async_result_new_from_error");
    }
    /**
     * {@snippet :
     * struct _GSimpleAsyncResult* g_simple_async_result_new_from_error(struct _GObject* source_object, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data, struct _GError* error);
     * }
     */
    public static MemorySegment g_simple_async_result_new_from_error(MemorySegment source_object, MemorySegment callback, MemorySegment user_data, MemorySegment error) {
        var mh$ = g_simple_async_result_new_from_error$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source_object, callback, user_data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_new_take_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.const$4,"g_simple_async_result_new_take_error");
    }
    /**
     * {@snippet :
     * struct _GSimpleAsyncResult* g_simple_async_result_new_take_error(struct _GObject* source_object, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data, struct _GError* error);
     * }
     */
    public static MemorySegment g_simple_async_result_new_take_error(MemorySegment source_object, MemorySegment callback, MemorySegment user_data, MemorySegment error) {
        var mh$ = g_simple_async_result_new_take_error$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source_object, callback, user_data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_set_op_res_gpointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.const$0,"g_simple_async_result_set_op_res_gpointer");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_set_op_res_gpointer(struct _GSimpleAsyncResult* simple, void* op_res, void (*destroy_op_res)(void*));
     * }
     */
    public static void g_simple_async_result_set_op_res_gpointer(MemorySegment simple, MemorySegment op_res, MemorySegment destroy_op_res) {
        var mh$ = g_simple_async_result_set_op_res_gpointer$MH();
        try {
            mh$.invokeExact(simple, op_res, destroy_op_res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_get_op_res_gpointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.const$1,"g_simple_async_result_get_op_res_gpointer");
    }
    /**
     * {@snippet :
     * void* g_simple_async_result_get_op_res_gpointer(struct _GSimpleAsyncResult* simple);
     * }
     */
    public static MemorySegment g_simple_async_result_get_op_res_gpointer(MemorySegment simple) {
        var mh$ = g_simple_async_result_get_op_res_gpointer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(simple);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_set_op_res_gssize$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.const$2,"g_simple_async_result_set_op_res_gssize");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_set_op_res_gssize(struct _GSimpleAsyncResult* simple, long op_res);
     * }
     */
    public static void g_simple_async_result_set_op_res_gssize(MemorySegment simple, long op_res) {
        var mh$ = g_simple_async_result_set_op_res_gssize$MH();
        try {
            mh$.invokeExact(simple, op_res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_get_op_res_gssize$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.const$3,"g_simple_async_result_get_op_res_gssize");
    }
    /**
     * {@snippet :
     * long g_simple_async_result_get_op_res_gssize(struct _GSimpleAsyncResult* simple);
     * }
     */
    public static long g_simple_async_result_get_op_res_gssize(MemorySegment simple) {
        var mh$ = g_simple_async_result_get_op_res_gssize$MH();
        try {
            return (long)mh$.invokeExact(simple);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_set_op_res_gboolean$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.const$4,"g_simple_async_result_set_op_res_gboolean");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_set_op_res_gboolean(struct _GSimpleAsyncResult* simple, int op_res);
     * }
     */
    public static void g_simple_async_result_set_op_res_gboolean(MemorySegment simple, int op_res) {
        var mh$ = g_simple_async_result_set_op_res_gboolean$MH();
        try {
            mh$.invokeExact(simple, op_res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_get_op_res_gboolean$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.const$5,"g_simple_async_result_get_op_res_gboolean");
    }
    /**
     * {@snippet :
     * int g_simple_async_result_get_op_res_gboolean(struct _GSimpleAsyncResult* simple);
     * }
     */
    public static int g_simple_async_result_get_op_res_gboolean(MemorySegment simple) {
        var mh$ = g_simple_async_result_get_op_res_gboolean$MH();
        try {
            return (int)mh$.invokeExact(simple);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_set_check_cancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.const$0,"g_simple_async_result_set_check_cancellable");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_set_check_cancellable(struct _GSimpleAsyncResult* simple, struct _GCancellable* check_cancellable);
     * }
     */
    public static void g_simple_async_result_set_check_cancellable(MemorySegment simple, MemorySegment check_cancellable) {
        var mh$ = g_simple_async_result_set_check_cancellable$MH();
        try {
            mh$.invokeExact(simple, check_cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_get_source_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.const$1,"g_simple_async_result_get_source_tag");
    }
    /**
     * {@snippet :
     * void* g_simple_async_result_get_source_tag(struct _GSimpleAsyncResult* simple);
     * }
     */
    public static MemorySegment g_simple_async_result_get_source_tag(MemorySegment simple) {
        var mh$ = g_simple_async_result_get_source_tag$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(simple);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_set_handle_cancellation$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.const$2,"g_simple_async_result_set_handle_cancellation");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_set_handle_cancellation(struct _GSimpleAsyncResult* simple, int handle_cancellation);
     * }
     */
    public static void g_simple_async_result_set_handle_cancellation(MemorySegment simple, int handle_cancellation) {
        var mh$ = g_simple_async_result_set_handle_cancellation$MH();
        try {
            mh$.invokeExact(simple, handle_cancellation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_complete$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.const$3,"g_simple_async_result_complete");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_complete(struct _GSimpleAsyncResult* simple);
     * }
     */
    public static void g_simple_async_result_complete(MemorySegment simple) {
        var mh$ = g_simple_async_result_complete$MH();
        try {
            mh$.invokeExact(simple);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_complete_in_idle$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.const$4,"g_simple_async_result_complete_in_idle");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_complete_in_idle(struct _GSimpleAsyncResult* simple);
     * }
     */
    public static void g_simple_async_result_complete_in_idle(MemorySegment simple) {
        var mh$ = g_simple_async_result_complete_in_idle$MH();
        try {
            mh$.invokeExact(simple);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_run_in_thread$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.const$0,"g_simple_async_result_run_in_thread");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_run_in_thread(struct _GSimpleAsyncResult* simple, void (*func)(struct _GSimpleAsyncResult*,struct _GObject*,struct _GCancellable*), int io_priority, struct _GCancellable* cancellable);
     * }
     */
    public static void g_simple_async_result_run_in_thread(MemorySegment simple, MemorySegment func, int io_priority, MemorySegment cancellable) {
        var mh$ = g_simple_async_result_run_in_thread$MH();
        try {
            mh$.invokeExact(simple, func, io_priority, cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_set_from_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.const$1,"g_simple_async_result_set_from_error");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_set_from_error(struct _GSimpleAsyncResult* simple, struct _GError* error);
     * }
     */
    public static void g_simple_async_result_set_from_error(MemorySegment simple, MemorySegment error) {
        var mh$ = g_simple_async_result_set_from_error$MH();
        try {
            mh$.invokeExact(simple, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_take_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.const$2,"g_simple_async_result_take_error");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_take_error(struct _GSimpleAsyncResult* simple, struct _GError* error);
     * }
     */
    public static void g_simple_async_result_take_error(MemorySegment simple, MemorySegment error) {
        var mh$ = g_simple_async_result_take_error$MH();
        try {
            mh$.invokeExact(simple, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_propagate_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.const$3,"g_simple_async_result_propagate_error");
    }
    /**
     * {@snippet :
     * int g_simple_async_result_propagate_error(struct _GSimpleAsyncResult* simple, struct _GError** dest);
     * }
     */
    public static int g_simple_async_result_propagate_error(MemorySegment simple, MemorySegment dest) {
        var mh$ = g_simple_async_result_propagate_error$MH();
        try {
            return (int)mh$.invokeExact(simple, dest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_set_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.const$4,"g_simple_async_result_set_error");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_set_error(struct _GSimpleAsyncResult* simple, unsigned int domain, int code, char* format,...);
     * }
     */
    public static void g_simple_async_result_set_error(MemorySegment simple, int domain, int code, MemorySegment format, Object... x4) {
        var mh$ = g_simple_async_result_set_error$MH();
        try {
            mh$.invokeExact(simple, domain, code, format, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_set_error_va$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.const$5,"g_simple_async_result_set_error_va");
    }
    /**
     * {@snippet :
     * void g_simple_async_result_set_error_va(struct _GSimpleAsyncResult* simple, unsigned int domain, int code, char* format, struct __va_list args);
     * }
     */
    public static void g_simple_async_result_set_error_va(MemorySegment simple, int domain, int code, MemorySegment format, MemorySegment args) {
        var mh$ = g_simple_async_result_set_error_va$MH();
        try {
            mh$.invokeExact(simple, domain, code, format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.const$0,"g_simple_async_result_is_valid");
    }
    /**
     * {@snippet :
     * int g_simple_async_result_is_valid(struct _GAsyncResult* result, struct _GObject* source, void* source_tag);
     * }
     */
    public static int g_simple_async_result_is_valid(MemorySegment result, MemorySegment source, MemorySegment source_tag) {
        var mh$ = g_simple_async_result_is_valid$MH();
        try {
            return (int)mh$.invokeExact(result, source, source_tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_report_error_in_idle$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.const$3,"g_simple_async_report_error_in_idle");
    }
    /**
     * {@snippet :
     * void g_simple_async_report_error_in_idle(struct _GObject* object, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data, unsigned int domain, int code, char* format,...);
     * }
     */
    public static void g_simple_async_report_error_in_idle(MemorySegment object, MemorySegment callback, MemorySegment user_data, int domain, int code, MemorySegment format, Object... x6) {
        var mh$ = g_simple_async_report_error_in_idle$MH();
        try {
            mh$.invokeExact(object, callback, user_data, domain, code, format, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_report_gerror_in_idle$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.const$5,"g_simple_async_report_gerror_in_idle");
    }
    /**
     * {@snippet :
     * void g_simple_async_report_gerror_in_idle(struct _GObject* object, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data, struct _GError* error);
     * }
     */
    public static void g_simple_async_report_gerror_in_idle(MemorySegment object, MemorySegment callback, MemorySegment user_data, MemorySegment error) {
        var mh$ = g_simple_async_report_gerror_in_idle$MH();
        try {
            mh$.invokeExact(object, callback, user_data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_report_take_gerror_in_idle$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.const$1,"g_simple_async_report_take_gerror_in_idle");
    }
    /**
     * {@snippet :
     * void g_simple_async_report_take_gerror_in_idle(struct _GObject* object, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data, struct _GError* error);
     * }
     */
    public static void g_simple_async_report_take_gerror_in_idle(MemorySegment object, MemorySegment callback, MemorySegment user_data, MemorySegment error) {
        var mh$ = g_simple_async_report_take_gerror_in_idle$MH();
        try {
            mh$.invokeExact(object, callback, user_data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_io_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.const$2,"g_simple_io_stream_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_simple_io_stream_get_type();
     * }
     */
    public static long g_simple_io_stream_get_type() {
        var mh$ = g_simple_io_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_io_stream_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.const$3,"g_simple_io_stream_new");
    }
    /**
     * {@snippet :
     * struct _GIOStream* g_simple_io_stream_new(struct _GInputStream* input_stream, struct _GOutputStream* output_stream);
     * }
     */
    public static MemorySegment g_simple_io_stream_new(MemorySegment input_stream, MemorySegment output_stream) {
        var mh$ = g_simple_io_stream_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(input_stream, output_stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_permission_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.const$4,"g_simple_permission_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_simple_permission_get_type();
     * }
     */
    public static long g_simple_permission_get_type() {
        var mh$ = g_simple_permission_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_permission_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.const$5,"g_simple_permission_new");
    }
    /**
     * {@snippet :
     * struct _GPermission* g_simple_permission_new(int allowed);
     * }
     */
    public static MemorySegment g_simple_permission_new(int allowed) {
        var mh$ = g_simple_permission_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allowed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_proxy_resolver_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.const$1,"g_simple_proxy_resolver_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_simple_proxy_resolver_get_type();
     * }
     */
    public static long g_simple_proxy_resolver_get_type() {
        var mh$ = g_simple_proxy_resolver_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_proxy_resolver_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.const$2,"g_simple_proxy_resolver_new");
    }
    /**
     * {@snippet :
     * struct _GProxyResolver* g_simple_proxy_resolver_new(char* default_proxy, char** ignore_hosts);
     * }
     */
    public static MemorySegment g_simple_proxy_resolver_new(MemorySegment default_proxy, MemorySegment ignore_hosts) {
        var mh$ = g_simple_proxy_resolver_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(default_proxy, ignore_hosts);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_proxy_resolver_set_default_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.const$3,"g_simple_proxy_resolver_set_default_proxy");
    }
    /**
     * {@snippet :
     * void g_simple_proxy_resolver_set_default_proxy(struct _GSimpleProxyResolver* resolver, char* default_proxy);
     * }
     */
    public static void g_simple_proxy_resolver_set_default_proxy(MemorySegment resolver, MemorySegment default_proxy) {
        var mh$ = g_simple_proxy_resolver_set_default_proxy$MH();
        try {
            mh$.invokeExact(resolver, default_proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_proxy_resolver_set_ignore_hosts$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.const$4,"g_simple_proxy_resolver_set_ignore_hosts");
    }
    /**
     * {@snippet :
     * void g_simple_proxy_resolver_set_ignore_hosts(struct _GSimpleProxyResolver* resolver, char** ignore_hosts);
     * }
     */
    public static void g_simple_proxy_resolver_set_ignore_hosts(MemorySegment resolver, MemorySegment ignore_hosts) {
        var mh$ = g_simple_proxy_resolver_set_ignore_hosts$MH();
        try {
            mh$.invokeExact(resolver, ignore_hosts);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_proxy_resolver_set_uri_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.const$5,"g_simple_proxy_resolver_set_uri_proxy");
    }
    /**
     * {@snippet :
     * void g_simple_proxy_resolver_set_uri_proxy(struct _GSimpleProxyResolver* resolver, char* uri_scheme, char* proxy);
     * }
     */
    public static void g_simple_proxy_resolver_set_uri_proxy(MemorySegment resolver, MemorySegment uri_scheme, MemorySegment proxy) {
        var mh$ = g_simple_proxy_resolver_set_uri_proxy$MH();
        try {
            mh$.invokeExact(resolver, uri_scheme, proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.const$5,"g_socket_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_socket_get_type();
     * }
     */
    public static long g_socket_get_type() {
        var mh$ = g_socket_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.const$1,"g_socket_new");
    }
    /**
     * {@snippet :
     * struct _GSocket* g_socket_new(enum GSocketFamily family, enum GSocketType type, enum GSocketProtocol protocol, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_new(int family, int type, int protocol, MemorySegment error) {
        var mh$ = g_socket_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(family, type, protocol, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_new_from_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.const$2,"g_socket_new_from_fd");
    }
    /**
     * {@snippet :
     * struct _GSocket* g_socket_new_from_fd(int fd, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_new_from_fd(int fd, MemorySegment error) {
        var mh$ = g_socket_new_from_fd$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fd, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.const$3,"g_socket_get_fd");
    }
    /**
     * {@snippet :
     * int g_socket_get_fd(struct _GSocket* socket);
     * }
     */
    public static int g_socket_get_fd(MemorySegment socket) {
        var mh$ = g_socket_get_fd$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_family$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.const$4,"g_socket_get_family");
    }
    /**
     * {@snippet :
     * enum GSocketFamily g_socket_get_family(struct _GSocket* socket);
     * }
     */
    public static int g_socket_get_family(MemorySegment socket) {
        var mh$ = g_socket_get_family$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_socket_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.const$5,"g_socket_get_socket_type");
    }
    /**
     * {@snippet :
     * enum GSocketType g_socket_get_socket_type(struct _GSocket* socket);
     * }
     */
    public static int g_socket_get_socket_type(MemorySegment socket) {
        var mh$ = g_socket_get_socket_type$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.const$0,"g_socket_get_protocol");
    }
    /**
     * {@snippet :
     * enum GSocketProtocol g_socket_get_protocol(struct _GSocket* socket);
     * }
     */
    public static int g_socket_get_protocol(MemorySegment socket) {
        var mh$ = g_socket_get_protocol$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_local_address$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.const$1,"g_socket_get_local_address");
    }
    /**
     * {@snippet :
     * struct _GSocketAddress* g_socket_get_local_address(struct _GSocket* socket, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_get_local_address(MemorySegment socket, MemorySegment error) {
        var mh$ = g_socket_get_local_address$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(socket, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_remote_address$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.const$2,"g_socket_get_remote_address");
    }
    /**
     * {@snippet :
     * struct _GSocketAddress* g_socket_get_remote_address(struct _GSocket* socket, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_get_remote_address(MemorySegment socket, MemorySegment error) {
        var mh$ = g_socket_get_remote_address$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(socket, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_blocking$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.const$3,"g_socket_set_blocking");
    }
    /**
     * {@snippet :
     * void g_socket_set_blocking(struct _GSocket* socket, int blocking);
     * }
     */
    public static void g_socket_set_blocking(MemorySegment socket, int blocking) {
        var mh$ = g_socket_set_blocking$MH();
        try {
            mh$.invokeExact(socket, blocking);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_blocking$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.const$4,"g_socket_get_blocking");
    }
    /**
     * {@snippet :
     * int g_socket_get_blocking(struct _GSocket* socket);
     * }
     */
    public static int g_socket_get_blocking(MemorySegment socket) {
        var mh$ = g_socket_get_blocking$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_keepalive$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.const$5,"g_socket_set_keepalive");
    }
    /**
     * {@snippet :
     * void g_socket_set_keepalive(struct _GSocket* socket, int keepalive);
     * }
     */
    public static void g_socket_set_keepalive(MemorySegment socket, int keepalive) {
        var mh$ = g_socket_set_keepalive$MH();
        try {
            mh$.invokeExact(socket, keepalive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_keepalive$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.const$0,"g_socket_get_keepalive");
    }
    /**
     * {@snippet :
     * int g_socket_get_keepalive(struct _GSocket* socket);
     * }
     */
    public static int g_socket_get_keepalive(MemorySegment socket) {
        var mh$ = g_socket_get_keepalive$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_listen_backlog$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.const$1,"g_socket_get_listen_backlog");
    }
    /**
     * {@snippet :
     * int g_socket_get_listen_backlog(struct _GSocket* socket);
     * }
     */
    public static int g_socket_get_listen_backlog(MemorySegment socket) {
        var mh$ = g_socket_get_listen_backlog$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_listen_backlog$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.const$2,"g_socket_set_listen_backlog");
    }
    /**
     * {@snippet :
     * void g_socket_set_listen_backlog(struct _GSocket* socket, int backlog);
     * }
     */
    public static void g_socket_set_listen_backlog(MemorySegment socket, int backlog) {
        var mh$ = g_socket_set_listen_backlog$MH();
        try {
            mh$.invokeExact(socket, backlog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.const$3,"g_socket_get_timeout");
    }
    /**
     * {@snippet :
     * unsigned int g_socket_get_timeout(struct _GSocket* socket);
     * }
     */
    public static int g_socket_get_timeout(MemorySegment socket) {
        var mh$ = g_socket_get_timeout$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.const$4,"g_socket_set_timeout");
    }
    /**
     * {@snippet :
     * void g_socket_set_timeout(struct _GSocket* socket, unsigned int timeout);
     * }
     */
    public static void g_socket_set_timeout(MemorySegment socket, int timeout) {
        var mh$ = g_socket_set_timeout$MH();
        try {
            mh$.invokeExact(socket, timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_ttl$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.const$5,"g_socket_get_ttl");
    }
    /**
     * {@snippet :
     * unsigned int g_socket_get_ttl(struct _GSocket* socket);
     * }
     */
    public static int g_socket_get_ttl(MemorySegment socket) {
        var mh$ = g_socket_get_ttl$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_ttl$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.const$0,"g_socket_set_ttl");
    }
    /**
     * {@snippet :
     * void g_socket_set_ttl(struct _GSocket* socket, unsigned int ttl);
     * }
     */
    public static void g_socket_set_ttl(MemorySegment socket, int ttl) {
        var mh$ = g_socket_set_ttl$MH();
        try {
            mh$.invokeExact(socket, ttl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_broadcast$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.const$1,"g_socket_get_broadcast");
    }
    /**
     * {@snippet :
     * int g_socket_get_broadcast(struct _GSocket* socket);
     * }
     */
    public static int g_socket_get_broadcast(MemorySegment socket) {
        var mh$ = g_socket_get_broadcast$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_broadcast$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.const$2,"g_socket_set_broadcast");
    }
    /**
     * {@snippet :
     * void g_socket_set_broadcast(struct _GSocket* socket, int broadcast);
     * }
     */
    public static void g_socket_set_broadcast(MemorySegment socket, int broadcast) {
        var mh$ = g_socket_set_broadcast$MH();
        try {
            mh$.invokeExact(socket, broadcast);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_multicast_loopback$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.const$3,"g_socket_get_multicast_loopback");
    }
    /**
     * {@snippet :
     * int g_socket_get_multicast_loopback(struct _GSocket* socket);
     * }
     */
    public static int g_socket_get_multicast_loopback(MemorySegment socket) {
        var mh$ = g_socket_get_multicast_loopback$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_multicast_loopback$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.const$4,"g_socket_set_multicast_loopback");
    }
    /**
     * {@snippet :
     * void g_socket_set_multicast_loopback(struct _GSocket* socket, int loopback);
     * }
     */
    public static void g_socket_set_multicast_loopback(MemorySegment socket, int loopback) {
        var mh$ = g_socket_set_multicast_loopback$MH();
        try {
            mh$.invokeExact(socket, loopback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_multicast_ttl$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.const$5,"g_socket_get_multicast_ttl");
    }
    /**
     * {@snippet :
     * unsigned int g_socket_get_multicast_ttl(struct _GSocket* socket);
     * }
     */
    public static int g_socket_get_multicast_ttl(MemorySegment socket) {
        var mh$ = g_socket_get_multicast_ttl$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_multicast_ttl$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.const$0,"g_socket_set_multicast_ttl");
    }
    /**
     * {@snippet :
     * void g_socket_set_multicast_ttl(struct _GSocket* socket, unsigned int ttl);
     * }
     */
    public static void g_socket_set_multicast_ttl(MemorySegment socket, int ttl) {
        var mh$ = g_socket_set_multicast_ttl$MH();
        try {
            mh$.invokeExact(socket, ttl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_is_connected$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.const$1,"g_socket_is_connected");
    }
    /**
     * {@snippet :
     * int g_socket_is_connected(struct _GSocket* socket);
     * }
     */
    public static int g_socket_is_connected(MemorySegment socket) {
        var mh$ = g_socket_is_connected$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_bind$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.const$2,"g_socket_bind");
    }
    /**
     * {@snippet :
     * int g_socket_bind(struct _GSocket* socket, struct _GSocketAddress* address, int allow_reuse, struct _GError** error);
     * }
     */
    public static int g_socket_bind(MemorySegment socket, MemorySegment address, int allow_reuse, MemorySegment error) {
        var mh$ = g_socket_bind$MH();
        try {
            return (int)mh$.invokeExact(socket, address, allow_reuse, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_join_multicast_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.const$3,"g_socket_join_multicast_group");
    }
    /**
     * {@snippet :
     * int g_socket_join_multicast_group(struct _GSocket* socket, struct _GInetAddress* group, int source_specific, char* iface, struct _GError** error);
     * }
     */
    public static int g_socket_join_multicast_group(MemorySegment socket, MemorySegment group, int source_specific, MemorySegment iface, MemorySegment error) {
        var mh$ = g_socket_join_multicast_group$MH();
        try {
            return (int)mh$.invokeExact(socket, group, source_specific, iface, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_leave_multicast_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.const$4,"g_socket_leave_multicast_group");
    }
    /**
     * {@snippet :
     * int g_socket_leave_multicast_group(struct _GSocket* socket, struct _GInetAddress* group, int source_specific, char* iface, struct _GError** error);
     * }
     */
    public static int g_socket_leave_multicast_group(MemorySegment socket, MemorySegment group, int source_specific, MemorySegment iface, MemorySegment error) {
        var mh$ = g_socket_leave_multicast_group$MH();
        try {
            return (int)mh$.invokeExact(socket, group, source_specific, iface, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_join_multicast_group_ssm$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.const$5,"g_socket_join_multicast_group_ssm");
    }
    /**
     * {@snippet :
     * int g_socket_join_multicast_group_ssm(struct _GSocket* socket, struct _GInetAddress* group, struct _GInetAddress* source_specific, char* iface, struct _GError** error);
     * }
     */
    public static int g_socket_join_multicast_group_ssm(MemorySegment socket, MemorySegment group, MemorySegment source_specific, MemorySegment iface, MemorySegment error) {
        var mh$ = g_socket_join_multicast_group_ssm$MH();
        try {
            return (int)mh$.invokeExact(socket, group, source_specific, iface, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_leave_multicast_group_ssm$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.const$0,"g_socket_leave_multicast_group_ssm");
    }
    /**
     * {@snippet :
     * int g_socket_leave_multicast_group_ssm(struct _GSocket* socket, struct _GInetAddress* group, struct _GInetAddress* source_specific, char* iface, struct _GError** error);
     * }
     */
    public static int g_socket_leave_multicast_group_ssm(MemorySegment socket, MemorySegment group, MemorySegment source_specific, MemorySegment iface, MemorySegment error) {
        var mh$ = g_socket_leave_multicast_group_ssm$MH();
        try {
            return (int)mh$.invokeExact(socket, group, source_specific, iface, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.const$1,"g_socket_connect");
    }
    /**
     * {@snippet :
     * int g_socket_connect(struct _GSocket* socket, struct _GSocketAddress* address, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_socket_connect(MemorySegment socket, MemorySegment address, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_connect$MH();
        try {
            return (int)mh$.invokeExact(socket, address, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_check_connect_result$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.const$2,"g_socket_check_connect_result");
    }
    /**
     * {@snippet :
     * int g_socket_check_connect_result(struct _GSocket* socket, struct _GError** error);
     * }
     */
    public static int g_socket_check_connect_result(MemorySegment socket, MemorySegment error) {
        var mh$ = g_socket_check_connect_result$MH();
        try {
            return (int)mh$.invokeExact(socket, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_available_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.const$3,"g_socket_get_available_bytes");
    }
    /**
     * {@snippet :
     * long g_socket_get_available_bytes(struct _GSocket* socket);
     * }
     */
    public static long g_socket_get_available_bytes(MemorySegment socket) {
        var mh$ = g_socket_get_available_bytes$MH();
        try {
            return (long)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_condition_check$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.const$4,"g_socket_condition_check");
    }
    /**
     * {@snippet :
     * enum GIOCondition g_socket_condition_check(struct _GSocket* socket, enum GIOCondition condition);
     * }
     */
    public static int g_socket_condition_check(MemorySegment socket, int condition) {
        var mh$ = g_socket_condition_check$MH();
        try {
            return (int)mh$.invokeExact(socket, condition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_condition_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.const$5,"g_socket_condition_wait");
    }
    /**
     * {@snippet :
     * int g_socket_condition_wait(struct _GSocket* socket, enum GIOCondition condition, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_socket_condition_wait(MemorySegment socket, int condition, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_condition_wait$MH();
        try {
            return (int)mh$.invokeExact(socket, condition, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_condition_timed_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.const$0,"g_socket_condition_timed_wait");
    }
    /**
     * {@snippet :
     * int g_socket_condition_timed_wait(struct _GSocket* socket, enum GIOCondition condition, long timeout_us, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_socket_condition_timed_wait(MemorySegment socket, int condition, long timeout_us, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_condition_timed_wait$MH();
        try {
            return (int)mh$.invokeExact(socket, condition, timeout_us, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_accept$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.const$1,"g_socket_accept");
    }
    /**
     * {@snippet :
     * struct _GSocket* g_socket_accept(struct _GSocket* socket, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_accept(MemorySegment socket, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_accept$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(socket, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listen$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.const$2,"g_socket_listen");
    }
    /**
     * {@snippet :
     * int g_socket_listen(struct _GSocket* socket, struct _GError** error);
     * }
     */
    public static int g_socket_listen(MemorySegment socket, MemorySegment error) {
        var mh$ = g_socket_listen$MH();
        try {
            return (int)mh$.invokeExact(socket, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_receive$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.const$3,"g_socket_receive");
    }
    /**
     * {@snippet :
     * long g_socket_receive(struct _GSocket* socket, char* buffer, unsigned long size, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static long g_socket_receive(MemorySegment socket, MemorySegment buffer, long size, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_receive$MH();
        try {
            return (long)mh$.invokeExact(socket, buffer, size, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_receive_from$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.const$5,"g_socket_receive_from");
    }
    /**
     * {@snippet :
     * long g_socket_receive_from(struct _GSocket* socket, struct _GSocketAddress** address, char* buffer, unsigned long size, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static long g_socket_receive_from(MemorySegment socket, MemorySegment address, MemorySegment buffer, long size, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_receive_from$MH();
        try {
            return (long)mh$.invokeExact(socket, address, buffer, size, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_send$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.const$0,"g_socket_send");
    }
    /**
     * {@snippet :
     * long g_socket_send(struct _GSocket* socket, char* buffer, unsigned long size, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static long g_socket_send(MemorySegment socket, MemorySegment buffer, long size, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_send$MH();
        try {
            return (long)mh$.invokeExact(socket, buffer, size, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_send_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.const$1,"g_socket_send_to");
    }
    /**
     * {@snippet :
     * long g_socket_send_to(struct _GSocket* socket, struct _GSocketAddress* address, char* buffer, unsigned long size, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static long g_socket_send_to(MemorySegment socket, MemorySegment address, MemorySegment buffer, long size, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_send_to$MH();
        try {
            return (long)mh$.invokeExact(socket, address, buffer, size, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_receive_message$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.const$3,"g_socket_receive_message");
    }
    /**
     * {@snippet :
     * long g_socket_receive_message(struct _GSocket* socket, struct _GSocketAddress** address, struct _GInputVector* vectors, int num_vectors, struct _GSocketControlMessage*** messages, int* num_messages, int* flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static long g_socket_receive_message(MemorySegment socket, MemorySegment address, MemorySegment vectors, int num_vectors, MemorySegment messages, MemorySegment num_messages, MemorySegment flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_receive_message$MH();
        try {
            return (long)mh$.invokeExact(socket, address, vectors, num_vectors, messages, num_messages, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_send_message$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.const$5,"g_socket_send_message");
    }
    /**
     * {@snippet :
     * long g_socket_send_message(struct _GSocket* socket, struct _GSocketAddress* address, struct _GOutputVector* vectors, int num_vectors, struct _GSocketControlMessage** messages, int num_messages, int flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static long g_socket_send_message(MemorySegment socket, MemorySegment address, MemorySegment vectors, int num_vectors, MemorySegment messages, int num_messages, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_send_message$MH();
        try {
            return (long)mh$.invokeExact(socket, address, vectors, num_vectors, messages, num_messages, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_receive_messages$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.const$0,"g_socket_receive_messages");
    }
    /**
     * {@snippet :
     * int g_socket_receive_messages(struct _GSocket* socket, struct _GInputMessage* messages, unsigned int num_messages, int flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_socket_receive_messages(MemorySegment socket, MemorySegment messages, int num_messages, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_receive_messages$MH();
        try {
            return (int)mh$.invokeExact(socket, messages, num_messages, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_send_messages$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.const$1,"g_socket_send_messages");
    }
    /**
     * {@snippet :
     * int g_socket_send_messages(struct _GSocket* socket, struct _GOutputMessage* messages, unsigned int num_messages, int flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_socket_send_messages(MemorySegment socket, MemorySegment messages, int num_messages, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_send_messages$MH();
        try {
            return (int)mh$.invokeExact(socket, messages, num_messages, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_close$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.const$2,"g_socket_close");
    }
    /**
     * {@snippet :
     * int g_socket_close(struct _GSocket* socket, struct _GError** error);
     * }
     */
    public static int g_socket_close(MemorySegment socket, MemorySegment error) {
        var mh$ = g_socket_close$MH();
        try {
            return (int)mh$.invokeExact(socket, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_shutdown$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.const$3,"g_socket_shutdown");
    }
    /**
     * {@snippet :
     * int g_socket_shutdown(struct _GSocket* socket, int shutdown_read, int shutdown_write, struct _GError** error);
     * }
     */
    public static int g_socket_shutdown(MemorySegment socket, int shutdown_read, int shutdown_write, MemorySegment error) {
        var mh$ = g_socket_shutdown$MH();
        try {
            return (int)mh$.invokeExact(socket, shutdown_read, shutdown_write, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_is_closed$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.const$4,"g_socket_is_closed");
    }
    /**
     * {@snippet :
     * int g_socket_is_closed(struct _GSocket* socket);
     * }
     */
    public static int g_socket_is_closed(MemorySegment socket) {
        var mh$ = g_socket_is_closed$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_create_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.const$5,"g_socket_create_source");
    }
    /**
     * {@snippet :
     * struct _GSource* g_socket_create_source(struct _GSocket* socket, enum GIOCondition condition, struct _GCancellable* cancellable);
     * }
     */
    public static MemorySegment g_socket_create_source(MemorySegment socket, int condition, MemorySegment cancellable) {
        var mh$ = g_socket_create_source$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(socket, condition, cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_speaks_ipv4$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.const$0,"g_socket_speaks_ipv4");
    }
    /**
     * {@snippet :
     * int g_socket_speaks_ipv4(struct _GSocket* socket);
     * }
     */
    public static int g_socket_speaks_ipv4(MemorySegment socket) {
        var mh$ = g_socket_speaks_ipv4$MH();
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_credentials$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.const$1,"g_socket_get_credentials");
    }
    /**
     * {@snippet :
     * struct _GCredentials* g_socket_get_credentials(struct _GSocket* socket, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_get_credentials(MemorySegment socket, MemorySegment error) {
        var mh$ = g_socket_get_credentials$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(socket, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_receive_with_blocking$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.const$2,"g_socket_receive_with_blocking");
    }
    /**
     * {@snippet :
     * long g_socket_receive_with_blocking(struct _GSocket* socket, char* buffer, unsigned long size, int blocking, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static long g_socket_receive_with_blocking(MemorySegment socket, MemorySegment buffer, long size, int blocking, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_receive_with_blocking$MH();
        try {
            return (long)mh$.invokeExact(socket, buffer, size, blocking, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_send_with_blocking$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.const$3,"g_socket_send_with_blocking");
    }
    /**
     * {@snippet :
     * long g_socket_send_with_blocking(struct _GSocket* socket, char* buffer, unsigned long size, int blocking, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static long g_socket_send_with_blocking(MemorySegment socket, MemorySegment buffer, long size, int blocking, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_send_with_blocking$MH();
        try {
            return (long)mh$.invokeExact(socket, buffer, size, blocking, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_send_message_with_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.const$5,"g_socket_send_message_with_timeout");
    }
    /**
     * {@snippet :
     * enum GPollableReturn g_socket_send_message_with_timeout(struct _GSocket* socket, struct _GSocketAddress* address, struct _GOutputVector* vectors, int num_vectors, struct _GSocketControlMessage** messages, int num_messages, int flags, long timeout_us, unsigned long* bytes_written, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_socket_send_message_with_timeout(MemorySegment socket, MemorySegment address, MemorySegment vectors, int num_vectors, MemorySegment messages, int num_messages, int flags, long timeout_us, MemorySegment bytes_written, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_send_message_with_timeout$MH();
        try {
            return (int)mh$.invokeExact(socket, address, vectors, num_vectors, messages, num_messages, flags, timeout_us, bytes_written, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_option$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.const$0,"g_socket_get_option");
    }
    /**
     * {@snippet :
     * int g_socket_get_option(struct _GSocket* socket, int level, int optname, int* value, struct _GError** error);
     * }
     */
    public static int g_socket_get_option(MemorySegment socket, int level, int optname, MemorySegment value, MemorySegment error) {
        var mh$ = g_socket_get_option$MH();
        try {
            return (int)mh$.invokeExact(socket, level, optname, value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_option$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.const$2,"g_socket_set_option");
    }
    /**
     * {@snippet :
     * int g_socket_set_option(struct _GSocket* socket, int level, int optname, int value, struct _GError** error);
     * }
     */
    public static int g_socket_set_option(MemorySegment socket, int level, int optname, int value, MemorySegment error) {
        var mh$ = g_socket_set_option$MH();
        try {
            return (int)mh$.invokeExact(socket, level, optname, value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.const$4,"g_socket_client_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_socket_client_get_type();
     * }
     */
    public static long g_socket_client_get_type() {
        var mh$ = g_socket_client_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.const$5,"g_socket_client_new");
    }
    /**
     * {@snippet :
     * struct _GSocketClient* g_socket_client_new();
     * }
     */
    public static MemorySegment g_socket_client_new() {
        var mh$ = g_socket_client_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_family$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.const$0,"g_socket_client_get_family");
    }
    /**
     * {@snippet :
     * enum GSocketFamily g_socket_client_get_family(struct _GSocketClient* client);
     * }
     */
    public static int g_socket_client_get_family(MemorySegment client) {
        var mh$ = g_socket_client_get_family$MH();
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_family$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.const$1,"g_socket_client_set_family");
    }
    /**
     * {@snippet :
     * void g_socket_client_set_family(struct _GSocketClient* client, enum GSocketFamily family);
     * }
     */
    public static void g_socket_client_set_family(MemorySegment client, int family) {
        var mh$ = g_socket_client_set_family$MH();
        try {
            mh$.invokeExact(client, family);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_socket_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.const$2,"g_socket_client_get_socket_type");
    }
    /**
     * {@snippet :
     * enum GSocketType g_socket_client_get_socket_type(struct _GSocketClient* client);
     * }
     */
    public static int g_socket_client_get_socket_type(MemorySegment client) {
        var mh$ = g_socket_client_get_socket_type$MH();
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_socket_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.const$3,"g_socket_client_set_socket_type");
    }
    /**
     * {@snippet :
     * void g_socket_client_set_socket_type(struct _GSocketClient* client, enum GSocketType type);
     * }
     */
    public static void g_socket_client_set_socket_type(MemorySegment client, int type) {
        var mh$ = g_socket_client_set_socket_type$MH();
        try {
            mh$.invokeExact(client, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.const$4,"g_socket_client_get_protocol");
    }
    /**
     * {@snippet :
     * enum GSocketProtocol g_socket_client_get_protocol(struct _GSocketClient* client);
     * }
     */
    public static int g_socket_client_get_protocol(MemorySegment client) {
        var mh$ = g_socket_client_get_protocol$MH();
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.const$5,"g_socket_client_set_protocol");
    }
    /**
     * {@snippet :
     * void g_socket_client_set_protocol(struct _GSocketClient* client, enum GSocketProtocol protocol);
     * }
     */
    public static void g_socket_client_set_protocol(MemorySegment client, int protocol) {
        var mh$ = g_socket_client_set_protocol$MH();
        try {
            mh$.invokeExact(client, protocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_local_address$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.const$0,"g_socket_client_get_local_address");
    }
    /**
     * {@snippet :
     * struct _GSocketAddress* g_socket_client_get_local_address(struct _GSocketClient* client);
     * }
     */
    public static MemorySegment g_socket_client_get_local_address(MemorySegment client) {
        var mh$ = g_socket_client_get_local_address$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_local_address$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.const$1,"g_socket_client_set_local_address");
    }
    /**
     * {@snippet :
     * void g_socket_client_set_local_address(struct _GSocketClient* client, struct _GSocketAddress* address);
     * }
     */
    public static void g_socket_client_set_local_address(MemorySegment client, MemorySegment address) {
        var mh$ = g_socket_client_set_local_address$MH();
        try {
            mh$.invokeExact(client, address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.const$2,"g_socket_client_get_timeout");
    }
    /**
     * {@snippet :
     * unsigned int g_socket_client_get_timeout(struct _GSocketClient* client);
     * }
     */
    public static int g_socket_client_get_timeout(MemorySegment client) {
        var mh$ = g_socket_client_get_timeout$MH();
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.const$3,"g_socket_client_set_timeout");
    }
    /**
     * {@snippet :
     * void g_socket_client_set_timeout(struct _GSocketClient* client, unsigned int timeout);
     * }
     */
    public static void g_socket_client_set_timeout(MemorySegment client, int timeout) {
        var mh$ = g_socket_client_set_timeout$MH();
        try {
            mh$.invokeExact(client, timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_enable_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.const$4,"g_socket_client_get_enable_proxy");
    }
    /**
     * {@snippet :
     * int g_socket_client_get_enable_proxy(struct _GSocketClient* client);
     * }
     */
    public static int g_socket_client_get_enable_proxy(MemorySegment client) {
        var mh$ = g_socket_client_get_enable_proxy$MH();
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_enable_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.const$5,"g_socket_client_set_enable_proxy");
    }
    /**
     * {@snippet :
     * void g_socket_client_set_enable_proxy(struct _GSocketClient* client, int enable);
     * }
     */
    public static void g_socket_client_set_enable_proxy(MemorySegment client, int enable) {
        var mh$ = g_socket_client_set_enable_proxy$MH();
        try {
            mh$.invokeExact(client, enable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_tls$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.const$0,"g_socket_client_get_tls");
    }
    /**
     * {@snippet :
     * int g_socket_client_get_tls(struct _GSocketClient* client);
     * }
     */
    public static int g_socket_client_get_tls(MemorySegment client) {
        var mh$ = g_socket_client_get_tls$MH();
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_tls$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.const$1,"g_socket_client_set_tls");
    }
    /**
     * {@snippet :
     * void g_socket_client_set_tls(struct _GSocketClient* client, int tls);
     * }
     */
    public static void g_socket_client_set_tls(MemorySegment client, int tls) {
        var mh$ = g_socket_client_set_tls$MH();
        try {
            mh$.invokeExact(client, tls);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_tls_validation_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.const$2,"g_socket_client_get_tls_validation_flags");
    }
    /**
     * {@snippet :
     * enum GTlsCertificateFlags g_socket_client_get_tls_validation_flags(struct _GSocketClient* client);
     * }
     */
    public static int g_socket_client_get_tls_validation_flags(MemorySegment client) {
        var mh$ = g_socket_client_get_tls_validation_flags$MH();
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_tls_validation_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.const$3,"g_socket_client_set_tls_validation_flags");
    }
    /**
     * {@snippet :
     * void g_socket_client_set_tls_validation_flags(struct _GSocketClient* client, enum GTlsCertificateFlags flags);
     * }
     */
    public static void g_socket_client_set_tls_validation_flags(MemorySegment client, int flags) {
        var mh$ = g_socket_client_set_tls_validation_flags$MH();
        try {
            mh$.invokeExact(client, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_proxy_resolver$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.const$4,"g_socket_client_get_proxy_resolver");
    }
    /**
     * {@snippet :
     * struct _GProxyResolver* g_socket_client_get_proxy_resolver(struct _GSocketClient* client);
     * }
     */
    public static MemorySegment g_socket_client_get_proxy_resolver(MemorySegment client) {
        var mh$ = g_socket_client_get_proxy_resolver$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_proxy_resolver$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.const$5,"g_socket_client_set_proxy_resolver");
    }
    /**
     * {@snippet :
     * void g_socket_client_set_proxy_resolver(struct _GSocketClient* client, struct _GProxyResolver* proxy_resolver);
     * }
     */
    public static void g_socket_client_set_proxy_resolver(MemorySegment client, MemorySegment proxy_resolver) {
        var mh$ = g_socket_client_set_proxy_resolver$MH();
        try {
            mh$.invokeExact(client, proxy_resolver);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.const$0,"g_socket_client_connect");
    }
    /**
     * {@snippet :
     * struct _GSocketConnection* g_socket_client_connect(struct _GSocketClient* client, struct _GSocketConnectable* connectable, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_client_connect(MemorySegment client, MemorySegment connectable, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_client_connect$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client, connectable, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_host$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.const$2,"g_socket_client_connect_to_host");
    }
    /**
     * {@snippet :
     * struct _GSocketConnection* g_socket_client_connect_to_host(struct _GSocketClient* client, char* host_and_port, unsigned short default_port, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_client_connect_to_host(MemorySegment client, MemorySegment host_and_port, short default_port, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_client_connect_to_host$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client, host_and_port, default_port, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_service$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.const$3,"g_socket_client_connect_to_service");
    }
    /**
     * {@snippet :
     * struct _GSocketConnection* g_socket_client_connect_to_service(struct _GSocketClient* client, char* domain, char* service, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_client_connect_to_service(MemorySegment client, MemorySegment domain, MemorySegment service, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_client_connect_to_service$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client, domain, service, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.const$4,"g_socket_client_connect_to_uri");
    }
    /**
     * {@snippet :
     * struct _GSocketConnection* g_socket_client_connect_to_uri(struct _GSocketClient* client, char* uri, unsigned short default_port, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_client_connect_to_uri(MemorySegment client, MemorySegment uri, short default_port, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_client_connect_to_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client, uri, default_port, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.const$0,"g_socket_client_connect_async");
    }
    /**
     * {@snippet :
     * void g_socket_client_connect_async(struct _GSocketClient* client, struct _GSocketConnectable* connectable, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_socket_client_connect_async(MemorySegment client, MemorySegment connectable, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_socket_client_connect_async$MH();
        try {
            mh$.invokeExact(client, connectable, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.const$1,"g_socket_client_connect_finish");
    }
    /**
     * {@snippet :
     * struct _GSocketConnection* g_socket_client_connect_finish(struct _GSocketClient* client, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_client_connect_finish(MemorySegment client, MemorySegment result, MemorySegment error) {
        var mh$ = g_socket_client_connect_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_host_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.const$4,"g_socket_client_connect_to_host_async");
    }
    /**
     * {@snippet :
     * void g_socket_client_connect_to_host_async(struct _GSocketClient* client, char* host_and_port, unsigned short default_port, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_socket_client_connect_to_host_async(MemorySegment client, MemorySegment host_and_port, short default_port, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_socket_client_connect_to_host_async$MH();
        try {
            mh$.invokeExact(client, host_and_port, default_port, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_host_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.const$5,"g_socket_client_connect_to_host_finish");
    }
    /**
     * {@snippet :
     * struct _GSocketConnection* g_socket_client_connect_to_host_finish(struct _GSocketClient* client, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_client_connect_to_host_finish(MemorySegment client, MemorySegment result, MemorySegment error) {
        var mh$ = g_socket_client_connect_to_host_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_service_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.const$1,"g_socket_client_connect_to_service_async");
    }
    /**
     * {@snippet :
     * void g_socket_client_connect_to_service_async(struct _GSocketClient* client, char* domain, char* service, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_socket_client_connect_to_service_async(MemorySegment client, MemorySegment domain, MemorySegment service, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_socket_client_connect_to_service_async$MH();
        try {
            mh$.invokeExact(client, domain, service, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_service_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.const$2,"g_socket_client_connect_to_service_finish");
    }
    /**
     * {@snippet :
     * struct _GSocketConnection* g_socket_client_connect_to_service_finish(struct _GSocketClient* client, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_client_connect_to_service_finish(MemorySegment client, MemorySegment result, MemorySegment error) {
        var mh$ = g_socket_client_connect_to_service_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_uri_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.const$4,"g_socket_client_connect_to_uri_async");
    }
    /**
     * {@snippet :
     * void g_socket_client_connect_to_uri_async(struct _GSocketClient* client, char* uri, unsigned short default_port, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_socket_client_connect_to_uri_async(MemorySegment client, MemorySegment uri, short default_port, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_socket_client_connect_to_uri_async$MH();
        try {
            mh$.invokeExact(client, uri, default_port, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_uri_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.const$5,"g_socket_client_connect_to_uri_finish");
    }
    /**
     * {@snippet :
     * struct _GSocketConnection* g_socket_client_connect_to_uri_finish(struct _GSocketClient* client, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_client_connect_to_uri_finish(MemorySegment client, MemorySegment result, MemorySegment error) {
        var mh$ = g_socket_client_connect_to_uri_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(client, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_add_application_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.const$0,"g_socket_client_add_application_proxy");
    }
    /**
     * {@snippet :
     * void g_socket_client_add_application_proxy(struct _GSocketClient* client, char* protocol);
     * }
     */
    public static void g_socket_client_add_application_proxy(MemorySegment client, MemorySegment protocol) {
        var mh$ = g_socket_client_add_application_proxy$MH();
        try {
            mh$.invokeExact(client, protocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connectable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.const$2,"g_socket_connectable_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_socket_connectable_get_type();
     * }
     */
    public static long g_socket_connectable_get_type() {
        var mh$ = g_socket_connectable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connectable_enumerate$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.const$3,"g_socket_connectable_enumerate");
    }
    /**
     * {@snippet :
     * struct _GSocketAddressEnumerator* g_socket_connectable_enumerate(struct _GSocketConnectable* connectable);
     * }
     */
    public static MemorySegment g_socket_connectable_enumerate(MemorySegment connectable) {
        var mh$ = g_socket_connectable_enumerate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connectable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connectable_proxy_enumerate$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.const$4,"g_socket_connectable_proxy_enumerate");
    }
    /**
     * {@snippet :
     * struct _GSocketAddressEnumerator* g_socket_connectable_proxy_enumerate(struct _GSocketConnectable* connectable);
     * }
     */
    public static MemorySegment g_socket_connectable_proxy_enumerate(MemorySegment connectable) {
        var mh$ = g_socket_connectable_proxy_enumerate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connectable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connectable_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.const$5,"g_socket_connectable_to_string");
    }
    /**
     * {@snippet :
     * char* g_socket_connectable_to_string(struct _GSocketConnectable* connectable);
     * }
     */
    public static MemorySegment g_socket_connectable_to_string(MemorySegment connectable) {
        var mh$ = g_socket_connectable_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connectable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.const$3,"g_socket_connection_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_socket_connection_get_type();
     * }
     */
    public static long g_socket_connection_get_type() {
        var mh$ = g_socket_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_is_connected$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.const$4,"g_socket_connection_is_connected");
    }
    /**
     * {@snippet :
     * int g_socket_connection_is_connected(struct _GSocketConnection* connection);
     * }
     */
    public static int g_socket_connection_is_connected(MemorySegment connection) {
        var mh$ = g_socket_connection_is_connected$MH();
        try {
            return (int)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.const$5,"g_socket_connection_connect");
    }
    /**
     * {@snippet :
     * int g_socket_connection_connect(struct _GSocketConnection* connection, struct _GSocketAddress* address, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_socket_connection_connect(MemorySegment connection, MemorySegment address, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_connection_connect$MH();
        try {
            return (int)mh$.invokeExact(connection, address, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_connect_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.const$1,"g_socket_connection_connect_async");
    }
    /**
     * {@snippet :
     * void g_socket_connection_connect_async(struct _GSocketConnection* connection, struct _GSocketAddress* address, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_socket_connection_connect_async(MemorySegment connection, MemorySegment address, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_socket_connection_connect_async$MH();
        try {
            mh$.invokeExact(connection, address, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_connect_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.const$2,"g_socket_connection_connect_finish");
    }
    /**
     * {@snippet :
     * int g_socket_connection_connect_finish(struct _GSocketConnection* connection, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_socket_connection_connect_finish(MemorySegment connection, MemorySegment result, MemorySegment error) {
        var mh$ = g_socket_connection_connect_finish$MH();
        try {
            return (int)mh$.invokeExact(connection, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_get_socket$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.const$3,"g_socket_connection_get_socket");
    }
    /**
     * {@snippet :
     * struct _GSocket* g_socket_connection_get_socket(struct _GSocketConnection* connection);
     * }
     */
    public static MemorySegment g_socket_connection_get_socket(MemorySegment connection) {
        var mh$ = g_socket_connection_get_socket$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_get_local_address$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.const$4,"g_socket_connection_get_local_address");
    }
    /**
     * {@snippet :
     * struct _GSocketAddress* g_socket_connection_get_local_address(struct _GSocketConnection* connection, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_connection_get_local_address(MemorySegment connection, MemorySegment error) {
        var mh$ = g_socket_connection_get_local_address$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_get_remote_address$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.const$5,"g_socket_connection_get_remote_address");
    }
    /**
     * {@snippet :
     * struct _GSocketAddress* g_socket_connection_get_remote_address(struct _GSocketConnection* connection, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_connection_get_remote_address(MemorySegment connection, MemorySegment error) {
        var mh$ = g_socket_connection_get_remote_address$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_factory_register_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.const$1,"g_socket_connection_factory_register_type");
    }
    /**
     * {@snippet :
     * void g_socket_connection_factory_register_type(unsigned long g_type, enum GSocketFamily family, enum GSocketType type, int protocol);
     * }
     */
    public static void g_socket_connection_factory_register_type(long g_type, int family, int type, int protocol) {
        var mh$ = g_socket_connection_factory_register_type$MH();
        try {
            mh$.invokeExact(g_type, family, type, protocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_factory_lookup_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.const$3,"g_socket_connection_factory_lookup_type");
    }
    /**
     * {@snippet :
     * unsigned long g_socket_connection_factory_lookup_type(enum GSocketFamily family, enum GSocketType type, int protocol_id);
     * }
     */
    public static long g_socket_connection_factory_lookup_type(int family, int type, int protocol_id) {
        var mh$ = g_socket_connection_factory_lookup_type$MH();
        try {
            return (long)mh$.invokeExact(family, type, protocol_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_factory_create_connection$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.const$4,"g_socket_connection_factory_create_connection");
    }
    /**
     * {@snippet :
     * struct _GSocketConnection* g_socket_connection_factory_create_connection(struct _GSocket* socket);
     * }
     */
    public static MemorySegment g_socket_connection_factory_create_connection(MemorySegment socket) {
        var mh$ = g_socket_connection_factory_create_connection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_control_message_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.const$0,"g_socket_control_message_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_socket_control_message_get_type();
     * }
     */
    public static long g_socket_control_message_get_type() {
        var mh$ = g_socket_control_message_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_control_message_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.const$1,"g_socket_control_message_get_size");
    }
    /**
     * {@snippet :
     * unsigned long g_socket_control_message_get_size(struct _GSocketControlMessage* message);
     * }
     */
    public static long g_socket_control_message_get_size(MemorySegment message) {
        var mh$ = g_socket_control_message_get_size$MH();
        try {
            return (long)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_control_message_get_level$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.const$2,"g_socket_control_message_get_level");
    }
    /**
     * {@snippet :
     * int g_socket_control_message_get_level(struct _GSocketControlMessage* message);
     * }
     */
    public static int g_socket_control_message_get_level(MemorySegment message) {
        var mh$ = g_socket_control_message_get_level$MH();
        try {
            return (int)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_control_message_get_msg_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.const$3,"g_socket_control_message_get_msg_type");
    }
    /**
     * {@snippet :
     * int g_socket_control_message_get_msg_type(struct _GSocketControlMessage* message);
     * }
     */
    public static int g_socket_control_message_get_msg_type(MemorySegment message) {
        var mh$ = g_socket_control_message_get_msg_type$MH();
        try {
            return (int)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_control_message_serialize$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.const$4,"g_socket_control_message_serialize");
    }
    /**
     * {@snippet :
     * void g_socket_control_message_serialize(struct _GSocketControlMessage* message, void* data);
     * }
     */
    public static void g_socket_control_message_serialize(MemorySegment message, MemorySegment data) {
        var mh$ = g_socket_control_message_serialize$MH();
        try {
            mh$.invokeExact(message, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_control_message_deserialize$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.const$5,"g_socket_control_message_deserialize");
    }
    /**
     * {@snippet :
     * struct _GSocketControlMessage* g_socket_control_message_deserialize(int level, int type, unsigned long size, void* data);
     * }
     */
    public static MemorySegment g_socket_control_message_deserialize(int level, int type, long size, MemorySegment data) {
        var mh$ = g_socket_control_message_deserialize$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(level, type, size, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1313.const$5,"g_socket_listener_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_socket_listener_get_type();
     * }
     */
    public static long g_socket_listener_get_type() {
        var mh$ = g_socket_listener_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.const$0,"g_socket_listener_new");
    }
    /**
     * {@snippet :
     * struct _GSocketListener* g_socket_listener_new();
     * }
     */
    public static MemorySegment g_socket_listener_new() {
        var mh$ = g_socket_listener_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_set_backlog$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.const$1,"g_socket_listener_set_backlog");
    }
    /**
     * {@snippet :
     * void g_socket_listener_set_backlog(struct _GSocketListener* listener, int listen_backlog);
     * }
     */
    public static void g_socket_listener_set_backlog(MemorySegment listener, int listen_backlog) {
        var mh$ = g_socket_listener_set_backlog$MH();
        try {
            mh$.invokeExact(listener, listen_backlog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_add_socket$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.const$2,"g_socket_listener_add_socket");
    }
    /**
     * {@snippet :
     * int g_socket_listener_add_socket(struct _GSocketListener* listener, struct _GSocket* socket, struct _GObject* source_object, struct _GError** error);
     * }
     */
    public static int g_socket_listener_add_socket(MemorySegment listener, MemorySegment socket, MemorySegment source_object, MemorySegment error) {
        var mh$ = g_socket_listener_add_socket$MH();
        try {
            return (int)mh$.invokeExact(listener, socket, source_object, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_add_address$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.const$4,"g_socket_listener_add_address");
    }
    /**
     * {@snippet :
     * int g_socket_listener_add_address(struct _GSocketListener* listener, struct _GSocketAddress* address, enum GSocketType type, enum GSocketProtocol protocol, struct _GObject* source_object, struct _GSocketAddress** effective_address, struct _GError** error);
     * }
     */
    public static int g_socket_listener_add_address(MemorySegment listener, MemorySegment address, int type, int protocol, MemorySegment source_object, MemorySegment effective_address, MemorySegment error) {
        var mh$ = g_socket_listener_add_address$MH();
        try {
            return (int)mh$.invokeExact(listener, address, type, protocol, source_object, effective_address, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_add_inet_port$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.const$5,"g_socket_listener_add_inet_port");
    }
    /**
     * {@snippet :
     * int g_socket_listener_add_inet_port(struct _GSocketListener* listener, unsigned short port, struct _GObject* source_object, struct _GError** error);
     * }
     */
    public static int g_socket_listener_add_inet_port(MemorySegment listener, short port, MemorySegment source_object, MemorySegment error) {
        var mh$ = g_socket_listener_add_inet_port$MH();
        try {
            return (int)mh$.invokeExact(listener, port, source_object, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_add_any_inet_port$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.const$0,"g_socket_listener_add_any_inet_port");
    }
    /**
     * {@snippet :
     * unsigned short g_socket_listener_add_any_inet_port(struct _GSocketListener* listener, struct _GObject* source_object, struct _GError** error);
     * }
     */
    public static short g_socket_listener_add_any_inet_port(MemorySegment listener, MemorySegment source_object, MemorySegment error) {
        var mh$ = g_socket_listener_add_any_inet_port$MH();
        try {
            return (short)mh$.invokeExact(listener, source_object, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_accept_socket$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.const$1,"g_socket_listener_accept_socket");
    }
    /**
     * {@snippet :
     * struct _GSocket* g_socket_listener_accept_socket(struct _GSocketListener* listener, struct _GObject** source_object, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_listener_accept_socket(MemorySegment listener, MemorySegment source_object, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_listener_accept_socket$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(listener, source_object, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_accept_socket_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.const$3,"g_socket_listener_accept_socket_async");
    }
    /**
     * {@snippet :
     * void g_socket_listener_accept_socket_async(struct _GSocketListener* listener, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_socket_listener_accept_socket_async(MemorySegment listener, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_socket_listener_accept_socket_async$MH();
        try {
            mh$.invokeExact(listener, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_accept_socket_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.const$4,"g_socket_listener_accept_socket_finish");
    }
    /**
     * {@snippet :
     * struct _GSocket* g_socket_listener_accept_socket_finish(struct _GSocketListener* listener, struct _GAsyncResult* result, struct _GObject** source_object, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_listener_accept_socket_finish(MemorySegment listener, MemorySegment result, MemorySegment source_object, MemorySegment error) {
        var mh$ = g_socket_listener_accept_socket_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(listener, result, source_object, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_accept$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.const$5,"g_socket_listener_accept");
    }
    /**
     * {@snippet :
     * struct _GSocketConnection* g_socket_listener_accept(struct _GSocketListener* listener, struct _GObject** source_object, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_listener_accept(MemorySegment listener, MemorySegment source_object, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_socket_listener_accept$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(listener, source_object, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_accept_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.const$1,"g_socket_listener_accept_async");
    }
    /**
     * {@snippet :
     * void g_socket_listener_accept_async(struct _GSocketListener* listener, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_socket_listener_accept_async(MemorySegment listener, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_socket_listener_accept_async$MH();
        try {
            mh$.invokeExact(listener, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_accept_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.const$2,"g_socket_listener_accept_finish");
    }
    /**
     * {@snippet :
     * struct _GSocketConnection* g_socket_listener_accept_finish(struct _GSocketListener* listener, struct _GAsyncResult* result, struct _GObject** source_object, struct _GError** error);
     * }
     */
    public static MemorySegment g_socket_listener_accept_finish(MemorySegment listener, MemorySegment result, MemorySegment source_object, MemorySegment error) {
        var mh$ = g_socket_listener_accept_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(listener, result, source_object, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_close$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.const$3,"g_socket_listener_close");
    }
    /**
     * {@snippet :
     * void g_socket_listener_close(struct _GSocketListener* listener);
     * }
     */
    public static void g_socket_listener_close(MemorySegment listener) {
        var mh$ = g_socket_listener_close$MH();
        try {
            mh$.invokeExact(listener);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_service_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.const$3,"g_socket_service_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_socket_service_get_type();
     * }
     */
    public static long g_socket_service_get_type() {
        var mh$ = g_socket_service_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_service_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.const$4,"g_socket_service_new");
    }
    /**
     * {@snippet :
     * struct _GSocketService* g_socket_service_new();
     * }
     */
    public static MemorySegment g_socket_service_new() {
        var mh$ = g_socket_service_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_service_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.const$5,"g_socket_service_start");
    }
    /**
     * {@snippet :
     * void g_socket_service_start(struct _GSocketService* service);
     * }
     */
    public static void g_socket_service_start(MemorySegment service) {
        var mh$ = g_socket_service_start$MH();
        try {
            mh$.invokeExact(service);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_service_stop$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.const$0,"g_socket_service_stop");
    }
    /**
     * {@snippet :
     * void g_socket_service_stop(struct _GSocketService* service);
     * }
     */
    public static void g_socket_service_stop(MemorySegment service) {
        var mh$ = g_socket_service_stop$MH();
        try {
            mh$.invokeExact(service);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_service_is_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.const$1,"g_socket_service_is_active");
    }
    /**
     * {@snippet :
     * int g_socket_service_is_active(struct _GSocketService* service);
     * }
     */
    public static int g_socket_service_is_active(MemorySegment service) {
        var mh$ = g_socket_service_is_active$MH();
        try {
            return (int)mh$.invokeExact(service);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.const$2,"g_srv_target_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_srv_target_get_type();
     * }
     */
    public static long g_srv_target_get_type() {
        var mh$ = g_srv_target_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.const$4,"g_srv_target_new");
    }
    /**
     * {@snippet :
     * struct _GSrvTarget* g_srv_target_new(char* hostname, unsigned short port, unsigned short priority, unsigned short weight);
     * }
     */
    public static MemorySegment g_srv_target_new(MemorySegment hostname, short port, short priority, short weight) {
        var mh$ = g_srv_target_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hostname, port, priority, weight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.const$5,"g_srv_target_copy");
    }
    /**
     * {@snippet :
     * struct _GSrvTarget* g_srv_target_copy(struct _GSrvTarget* target);
     * }
     */
    public static MemorySegment g_srv_target_copy(MemorySegment target) {
        var mh$ = g_srv_target_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.const$0,"g_srv_target_free");
    }
    /**
     * {@snippet :
     * void g_srv_target_free(struct _GSrvTarget* target);
     * }
     */
    public static void g_srv_target_free(MemorySegment target) {
        var mh$ = g_srv_target_free$MH();
        try {
            mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_get_hostname$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.const$1,"g_srv_target_get_hostname");
    }
    /**
     * {@snippet :
     * char* g_srv_target_get_hostname(struct _GSrvTarget* target);
     * }
     */
    public static MemorySegment g_srv_target_get_hostname(MemorySegment target) {
        var mh$ = g_srv_target_get_hostname$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_get_port$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.const$2,"g_srv_target_get_port");
    }
    /**
     * {@snippet :
     * unsigned short g_srv_target_get_port(struct _GSrvTarget* target);
     * }
     */
    public static short g_srv_target_get_port(MemorySegment target) {
        var mh$ = g_srv_target_get_port$MH();
        try {
            return (short)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_get_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.const$3,"g_srv_target_get_priority");
    }
    /**
     * {@snippet :
     * unsigned short g_srv_target_get_priority(struct _GSrvTarget* target);
     * }
     */
    public static short g_srv_target_get_priority(MemorySegment target) {
        var mh$ = g_srv_target_get_priority$MH();
        try {
            return (short)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_get_weight$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.const$4,"g_srv_target_get_weight");
    }
    /**
     * {@snippet :
     * unsigned short g_srv_target_get_weight(struct _GSrvTarget* target);
     * }
     */
    public static short g_srv_target_get_weight(MemorySegment target) {
        var mh$ = g_srv_target_get_weight$MH();
        try {
            return (short)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_list_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.const$5,"g_srv_target_list_sort");
    }
    /**
     * {@snippet :
     * struct _GList* g_srv_target_list_sort(struct _GList* targets);
     * }
     */
    public static MemorySegment g_srv_target_list_sort(MemorySegment targets) {
        var mh$ = g_srv_target_list_sort$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.const$0,"g_subprocess_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_subprocess_get_type();
     * }
     */
    public static long g_subprocess_get_type() {
        var mh$ = g_subprocess_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.const$1,"g_subprocess_new");
    }
    /**
     * {@snippet :
     * struct _GSubprocess* g_subprocess_new(enum GSubprocessFlags flags, struct _GError** error, char* argv0,...);
     * }
     */
    public static MemorySegment g_subprocess_new(int flags, MemorySegment error, MemorySegment argv0, Object... x3) {
        var mh$ = g_subprocess_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags, error, argv0, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.const$2,"g_subprocess_newv");
    }
    /**
     * {@snippet :
     * struct _GSubprocess* g_subprocess_newv(char** argv, enum GSubprocessFlags flags, struct _GError** error);
     * }
     */
    public static MemorySegment g_subprocess_newv(MemorySegment argv, int flags, MemorySegment error) {
        var mh$ = g_subprocess_newv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(argv, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_stdin_pipe$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.const$3,"g_subprocess_get_stdin_pipe");
    }
    /**
     * {@snippet :
     * struct _GOutputStream* g_subprocess_get_stdin_pipe(struct _GSubprocess* subprocess);
     * }
     */
    public static MemorySegment g_subprocess_get_stdin_pipe(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_stdin_pipe$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_stdout_pipe$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.const$4,"g_subprocess_get_stdout_pipe");
    }
    /**
     * {@snippet :
     * struct _GInputStream* g_subprocess_get_stdout_pipe(struct _GSubprocess* subprocess);
     * }
     */
    public static MemorySegment g_subprocess_get_stdout_pipe(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_stdout_pipe$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_stderr_pipe$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.const$5,"g_subprocess_get_stderr_pipe");
    }
    /**
     * {@snippet :
     * struct _GInputStream* g_subprocess_get_stderr_pipe(struct _GSubprocess* subprocess);
     * }
     */
    public static MemorySegment g_subprocess_get_stderr_pipe(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_stderr_pipe$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_identifier$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.const$0,"g_subprocess_get_identifier");
    }
    /**
     * {@snippet :
     * char* g_subprocess_get_identifier(struct _GSubprocess* subprocess);
     * }
     */
    public static MemorySegment g_subprocess_get_identifier(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_identifier$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_send_signal$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.const$1,"g_subprocess_send_signal");
    }
    /**
     * {@snippet :
     * void g_subprocess_send_signal(struct _GSubprocess* subprocess, int signal_num);
     * }
     */
    public static void g_subprocess_send_signal(MemorySegment subprocess, int signal_num) {
        var mh$ = g_subprocess_send_signal$MH();
        try {
            mh$.invokeExact(subprocess, signal_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_force_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.const$2,"g_subprocess_force_exit");
    }
    /**
     * {@snippet :
     * void g_subprocess_force_exit(struct _GSubprocess* subprocess);
     * }
     */
    public static void g_subprocess_force_exit(MemorySegment subprocess) {
        var mh$ = g_subprocess_force_exit$MH();
        try {
            mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.const$3,"g_subprocess_wait");
    }
    /**
     * {@snippet :
     * int g_subprocess_wait(struct _GSubprocess* subprocess, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_subprocess_wait(MemorySegment subprocess, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_subprocess_wait$MH();
        try {
            return (int)mh$.invokeExact(subprocess, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_wait_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.const$5,"g_subprocess_wait_async");
    }
    /**
     * {@snippet :
     * void g_subprocess_wait_async(struct _GSubprocess* subprocess, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_subprocess_wait_async(MemorySegment subprocess, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_subprocess_wait_async$MH();
        try {
            mh$.invokeExact(subprocess, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_wait_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.const$0,"g_subprocess_wait_finish");
    }
    /**
     * {@snippet :
     * int g_subprocess_wait_finish(struct _GSubprocess* subprocess, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_subprocess_wait_finish(MemorySegment subprocess, MemorySegment result, MemorySegment error) {
        var mh$ = g_subprocess_wait_finish$MH();
        try {
            return (int)mh$.invokeExact(subprocess, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_wait_check$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.const$1,"g_subprocess_wait_check");
    }
    /**
     * {@snippet :
     * int g_subprocess_wait_check(struct _GSubprocess* subprocess, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_subprocess_wait_check(MemorySegment subprocess, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_subprocess_wait_check$MH();
        try {
            return (int)mh$.invokeExact(subprocess, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_wait_check_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.const$3,"g_subprocess_wait_check_async");
    }
    /**
     * {@snippet :
     * void g_subprocess_wait_check_async(struct _GSubprocess* subprocess, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_subprocess_wait_check_async(MemorySegment subprocess, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_subprocess_wait_check_async$MH();
        try {
            mh$.invokeExact(subprocess, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_wait_check_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.const$4,"g_subprocess_wait_check_finish");
    }
    /**
     * {@snippet :
     * int g_subprocess_wait_check_finish(struct _GSubprocess* subprocess, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_subprocess_wait_check_finish(MemorySegment subprocess, MemorySegment result, MemorySegment error) {
        var mh$ = g_subprocess_wait_check_finish$MH();
        try {
            return (int)mh$.invokeExact(subprocess, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.const$5,"g_subprocess_get_status");
    }
    /**
     * {@snippet :
     * int g_subprocess_get_status(struct _GSubprocess* subprocess);
     * }
     */
    public static int g_subprocess_get_status(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_status$MH();
        try {
            return (int)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_successful$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.const$0,"g_subprocess_get_successful");
    }
    /**
     * {@snippet :
     * int g_subprocess_get_successful(struct _GSubprocess* subprocess);
     * }
     */
    public static int g_subprocess_get_successful(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_successful$MH();
        try {
            return (int)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_if_exited$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.const$1,"g_subprocess_get_if_exited");
    }
    /**
     * {@snippet :
     * int g_subprocess_get_if_exited(struct _GSubprocess* subprocess);
     * }
     */
    public static int g_subprocess_get_if_exited(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_if_exited$MH();
        try {
            return (int)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_exit_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.const$2,"g_subprocess_get_exit_status");
    }
    /**
     * {@snippet :
     * int g_subprocess_get_exit_status(struct _GSubprocess* subprocess);
     * }
     */
    public static int g_subprocess_get_exit_status(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_exit_status$MH();
        try {
            return (int)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_if_signaled$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.const$3,"g_subprocess_get_if_signaled");
    }
    /**
     * {@snippet :
     * int g_subprocess_get_if_signaled(struct _GSubprocess* subprocess);
     * }
     */
    public static int g_subprocess_get_if_signaled(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_if_signaled$MH();
        try {
            return (int)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_term_sig$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.const$4,"g_subprocess_get_term_sig");
    }
    /**
     * {@snippet :
     * int g_subprocess_get_term_sig(struct _GSubprocess* subprocess);
     * }
     */
    public static int g_subprocess_get_term_sig(MemorySegment subprocess) {
        var mh$ = g_subprocess_get_term_sig$MH();
        try {
            return (int)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_communicate$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.const$5,"g_subprocess_communicate");
    }
    /**
     * {@snippet :
     * int g_subprocess_communicate(struct _GSubprocess* subprocess, struct _GBytes* stdin_buf, struct _GCancellable* cancellable, struct _GBytes** stdout_buf, struct _GBytes** stderr_buf, struct _GError** error);
     * }
     */
    public static int g_subprocess_communicate(MemorySegment subprocess, MemorySegment stdin_buf, MemorySegment cancellable, MemorySegment stdout_buf, MemorySegment stderr_buf, MemorySegment error) {
        var mh$ = g_subprocess_communicate$MH();
        try {
            return (int)mh$.invokeExact(subprocess, stdin_buf, cancellable, stdout_buf, stderr_buf, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_communicate_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.const$1,"g_subprocess_communicate_async");
    }
    /**
     * {@snippet :
     * void g_subprocess_communicate_async(struct _GSubprocess* subprocess, struct _GBytes* stdin_buf, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_subprocess_communicate_async(MemorySegment subprocess, MemorySegment stdin_buf, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_subprocess_communicate_async$MH();
        try {
            mh$.invokeExact(subprocess, stdin_buf, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_communicate_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.const$2,"g_subprocess_communicate_finish");
    }
    /**
     * {@snippet :
     * int g_subprocess_communicate_finish(struct _GSubprocess* subprocess, struct _GAsyncResult* result, struct _GBytes** stdout_buf, struct _GBytes** stderr_buf, struct _GError** error);
     * }
     */
    public static int g_subprocess_communicate_finish(MemorySegment subprocess, MemorySegment result, MemorySegment stdout_buf, MemorySegment stderr_buf, MemorySegment error) {
        var mh$ = g_subprocess_communicate_finish$MH();
        try {
            return (int)mh$.invokeExact(subprocess, result, stdout_buf, stderr_buf, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_communicate_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.const$3,"g_subprocess_communicate_utf8");
    }
    /**
     * {@snippet :
     * int g_subprocess_communicate_utf8(struct _GSubprocess* subprocess, char* stdin_buf, struct _GCancellable* cancellable, char** stdout_buf, char** stderr_buf, struct _GError** error);
     * }
     */
    public static int g_subprocess_communicate_utf8(MemorySegment subprocess, MemorySegment stdin_buf, MemorySegment cancellable, MemorySegment stdout_buf, MemorySegment stderr_buf, MemorySegment error) {
        var mh$ = g_subprocess_communicate_utf8$MH();
        try {
            return (int)mh$.invokeExact(subprocess, stdin_buf, cancellable, stdout_buf, stderr_buf, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_communicate_utf8_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.const$5,"g_subprocess_communicate_utf8_async");
    }
    /**
     * {@snippet :
     * void g_subprocess_communicate_utf8_async(struct _GSubprocess* subprocess, char* stdin_buf, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_subprocess_communicate_utf8_async(MemorySegment subprocess, MemorySegment stdin_buf, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_subprocess_communicate_utf8_async$MH();
        try {
            mh$.invokeExact(subprocess, stdin_buf, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_communicate_utf8_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.const$0,"g_subprocess_communicate_utf8_finish");
    }
    /**
     * {@snippet :
     * int g_subprocess_communicate_utf8_finish(struct _GSubprocess* subprocess, struct _GAsyncResult* result, char** stdout_buf, char** stderr_buf, struct _GError** error);
     * }
     */
    public static int g_subprocess_communicate_utf8_finish(MemorySegment subprocess, MemorySegment result, MemorySegment stdout_buf, MemorySegment stderr_buf, MemorySegment error) {
        var mh$ = g_subprocess_communicate_utf8_finish$MH();
        try {
            return (int)mh$.invokeExact(subprocess, result, stdout_buf, stderr_buf, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.const$1,"g_subprocess_launcher_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_subprocess_launcher_get_type();
     * }
     */
    public static long g_subprocess_launcher_get_type() {
        var mh$ = g_subprocess_launcher_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.const$2,"g_subprocess_launcher_new");
    }
    /**
     * {@snippet :
     * struct _GSubprocessLauncher* g_subprocess_launcher_new(enum GSubprocessFlags flags);
     * }
     */
    public static MemorySegment g_subprocess_launcher_new(int flags) {
        var mh$ = g_subprocess_launcher_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_spawn$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.const$3,"g_subprocess_launcher_spawn");
    }
    /**
     * {@snippet :
     * struct _GSubprocess* g_subprocess_launcher_spawn(struct _GSubprocessLauncher* self, struct _GError** error, char* argv0,...);
     * }
     */
    public static MemorySegment g_subprocess_launcher_spawn(MemorySegment self, MemorySegment error, MemorySegment argv0, Object... x3) {
        var mh$ = g_subprocess_launcher_spawn$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, error, argv0, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_spawnv$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.const$4,"g_subprocess_launcher_spawnv");
    }
    /**
     * {@snippet :
     * struct _GSubprocess* g_subprocess_launcher_spawnv(struct _GSubprocessLauncher* self, char** argv, struct _GError** error);
     * }
     */
    public static MemorySegment g_subprocess_launcher_spawnv(MemorySegment self, MemorySegment argv, MemorySegment error) {
        var mh$ = g_subprocess_launcher_spawnv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, argv, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_environ$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.const$5,"g_subprocess_launcher_set_environ");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_set_environ(struct _GSubprocessLauncher* self, char** env);
     * }
     */
    public static void g_subprocess_launcher_set_environ(MemorySegment self, MemorySegment env) {
        var mh$ = g_subprocess_launcher_set_environ$MH();
        try {
            mh$.invokeExact(self, env);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_setenv$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.const$0,"g_subprocess_launcher_setenv");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_setenv(struct _GSubprocessLauncher* self, char* variable, char* value, int overwrite);
     * }
     */
    public static void g_subprocess_launcher_setenv(MemorySegment self, MemorySegment variable, MemorySegment value, int overwrite) {
        var mh$ = g_subprocess_launcher_setenv$MH();
        try {
            mh$.invokeExact(self, variable, value, overwrite);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_unsetenv$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.const$1,"g_subprocess_launcher_unsetenv");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_unsetenv(struct _GSubprocessLauncher* self, char* variable);
     * }
     */
    public static void g_subprocess_launcher_unsetenv(MemorySegment self, MemorySegment variable) {
        var mh$ = g_subprocess_launcher_unsetenv$MH();
        try {
            mh$.invokeExact(self, variable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_getenv$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.const$2,"g_subprocess_launcher_getenv");
    }
    /**
     * {@snippet :
     * char* g_subprocess_launcher_getenv(struct _GSubprocessLauncher* self, char* variable);
     * }
     */
    public static MemorySegment g_subprocess_launcher_getenv(MemorySegment self, MemorySegment variable) {
        var mh$ = g_subprocess_launcher_getenv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, variable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_cwd$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.const$3,"g_subprocess_launcher_set_cwd");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_set_cwd(struct _GSubprocessLauncher* self, char* cwd);
     * }
     */
    public static void g_subprocess_launcher_set_cwd(MemorySegment self, MemorySegment cwd) {
        var mh$ = g_subprocess_launcher_set_cwd$MH();
        try {
            mh$.invokeExact(self, cwd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.const$4,"g_subprocess_launcher_set_flags");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_set_flags(struct _GSubprocessLauncher* self, enum GSubprocessFlags flags);
     * }
     */
    public static void g_subprocess_launcher_set_flags(MemorySegment self, int flags) {
        var mh$ = g_subprocess_launcher_set_flags$MH();
        try {
            mh$.invokeExact(self, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_stdin_file_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.const$5,"g_subprocess_launcher_set_stdin_file_path");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_set_stdin_file_path(struct _GSubprocessLauncher* self, char* path);
     * }
     */
    public static void g_subprocess_launcher_set_stdin_file_path(MemorySegment self, MemorySegment path) {
        var mh$ = g_subprocess_launcher_set_stdin_file_path$MH();
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_take_stdin_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.const$0,"g_subprocess_launcher_take_stdin_fd");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_take_stdin_fd(struct _GSubprocessLauncher* self, int fd);
     * }
     */
    public static void g_subprocess_launcher_take_stdin_fd(MemorySegment self, int fd) {
        var mh$ = g_subprocess_launcher_take_stdin_fd$MH();
        try {
            mh$.invokeExact(self, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_stdout_file_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.const$1,"g_subprocess_launcher_set_stdout_file_path");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_set_stdout_file_path(struct _GSubprocessLauncher* self, char* path);
     * }
     */
    public static void g_subprocess_launcher_set_stdout_file_path(MemorySegment self, MemorySegment path) {
        var mh$ = g_subprocess_launcher_set_stdout_file_path$MH();
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_take_stdout_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.const$2,"g_subprocess_launcher_take_stdout_fd");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_take_stdout_fd(struct _GSubprocessLauncher* self, int fd);
     * }
     */
    public static void g_subprocess_launcher_take_stdout_fd(MemorySegment self, int fd) {
        var mh$ = g_subprocess_launcher_take_stdout_fd$MH();
        try {
            mh$.invokeExact(self, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_stderr_file_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.const$3,"g_subprocess_launcher_set_stderr_file_path");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_set_stderr_file_path(struct _GSubprocessLauncher* self, char* path);
     * }
     */
    public static void g_subprocess_launcher_set_stderr_file_path(MemorySegment self, MemorySegment path) {
        var mh$ = g_subprocess_launcher_set_stderr_file_path$MH();
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_take_stderr_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.const$4,"g_subprocess_launcher_take_stderr_fd");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_take_stderr_fd(struct _GSubprocessLauncher* self, int fd);
     * }
     */
    public static void g_subprocess_launcher_take_stderr_fd(MemorySegment self, int fd) {
        var mh$ = g_subprocess_launcher_take_stderr_fd$MH();
        try {
            mh$.invokeExact(self, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_take_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.const$5,"g_subprocess_launcher_take_fd");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_take_fd(struct _GSubprocessLauncher* self, int source_fd, int target_fd);
     * }
     */
    public static void g_subprocess_launcher_take_fd(MemorySegment self, int source_fd, int target_fd) {
        var mh$ = g_subprocess_launcher_take_fd$MH();
        try {
            mh$.invokeExact(self, source_fd, target_fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_close$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.const$0,"g_subprocess_launcher_close");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_close(struct _GSubprocessLauncher* self);
     * }
     */
    public static void g_subprocess_launcher_close(MemorySegment self) {
        var mh$ = g_subprocess_launcher_close$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_child_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.const$3,"g_subprocess_launcher_set_child_setup");
    }
    /**
     * {@snippet :
     * void g_subprocess_launcher_set_child_setup(struct _GSubprocessLauncher* self, void (*child_setup)(void*), void* user_data, void (*destroy_notify)(void*));
     * }
     */
    public static void g_subprocess_launcher_set_child_setup(MemorySegment self, MemorySegment child_setup, MemorySegment user_data, MemorySegment destroy_notify) {
        var mh$ = g_subprocess_launcher_set_child_setup$MH();
        try {
            mh$.invokeExact(self, child_setup, user_data, destroy_notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.const$4,"g_task_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_task_get_type();
     * }
     */
    public static long g_task_get_type() {
        var mh$ = g_task_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.const$0,"g_task_new");
    }
    /**
     * {@snippet :
     * struct _GTask* g_task_new(void* source_object, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* callback_data);
     * }
     */
    public static MemorySegment g_task_new(MemorySegment source_object, MemorySegment cancellable, MemorySegment callback, MemorySegment callback_data) {
        var mh$ = g_task_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source_object, cancellable, callback, callback_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_report_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.const$2,"g_task_report_error");
    }
    /**
     * {@snippet :
     * void g_task_report_error(void* source_object, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* callback_data, void* source_tag, struct _GError* error);
     * }
     */
    public static void g_task_report_error(MemorySegment source_object, MemorySegment callback, MemorySegment callback_data, MemorySegment source_tag, MemorySegment error) {
        var mh$ = g_task_report_error$MH();
        try {
            mh$.invokeExact(source_object, callback, callback_data, source_tag, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_report_new_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.const$5,"g_task_report_new_error");
    }
    /**
     * {@snippet :
     * void g_task_report_new_error(void* source_object, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* callback_data, void* source_tag, unsigned int domain, int code, char* format,...);
     * }
     */
    public static void g_task_report_new_error(MemorySegment source_object, MemorySegment callback, MemorySegment callback_data, MemorySegment source_tag, int domain, int code, MemorySegment format, Object... x7) {
        var mh$ = g_task_report_new_error$MH();
        try {
            mh$.invokeExact(source_object, callback, callback_data, source_tag, domain, code, format, x7);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_task_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.const$1,"g_task_set_task_data");
    }
    /**
     * {@snippet :
     * void g_task_set_task_data(struct _GTask* task, void* task_data, void (*task_data_destroy)(void*));
     * }
     */
    public static void g_task_set_task_data(MemorySegment task, MemorySegment task_data, MemorySegment task_data_destroy) {
        var mh$ = g_task_set_task_data$MH();
        try {
            mh$.invokeExact(task, task_data, task_data_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.const$2,"g_task_set_priority");
    }
    /**
     * {@snippet :
     * void g_task_set_priority(struct _GTask* task, int priority);
     * }
     */
    public static void g_task_set_priority(MemorySegment task, int priority) {
        var mh$ = g_task_set_priority$MH();
        try {
            mh$.invokeExact(task, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_check_cancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.const$3,"g_task_set_check_cancellable");
    }
    /**
     * {@snippet :
     * void g_task_set_check_cancellable(struct _GTask* task, int check_cancellable);
     * }
     */
    public static void g_task_set_check_cancellable(MemorySegment task, int check_cancellable) {
        var mh$ = g_task_set_check_cancellable$MH();
        try {
            mh$.invokeExact(task, check_cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_source_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.const$4,"g_task_set_source_tag");
    }
    /**
     * {@snippet :
     * void g_task_set_source_tag(struct _GTask* task, void* source_tag);
     * }
     */
    public static void g_task_set_source_tag(MemorySegment task, MemorySegment source_tag) {
        var mh$ = g_task_set_source_tag$MH();
        try {
            mh$.invokeExact(task, source_tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.const$5,"g_task_set_name");
    }
    /**
     * {@snippet :
     * void g_task_set_name(struct _GTask* task, char* name);
     * }
     */
    public static void g_task_set_name(MemorySegment task, MemorySegment name) {
        var mh$ = g_task_set_name$MH();
        try {
            mh$.invokeExact(task, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_static_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.const$0,"g_task_set_static_name");
    }
    /**
     * {@snippet :
     * void g_task_set_static_name(struct _GTask* task, char* name);
     * }
     */
    public static void g_task_set_static_name(MemorySegment task, MemorySegment name) {
        var mh$ = g_task_set_static_name$MH();
        try {
            mh$.invokeExact(task, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_source_object$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.const$1,"g_task_get_source_object");
    }
    /**
     * {@snippet :
     * void* g_task_get_source_object(struct _GTask* task);
     * }
     */
    public static MemorySegment g_task_get_source_object(MemorySegment task) {
        var mh$ = g_task_get_source_object$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_task_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.const$2,"g_task_get_task_data");
    }
    /**
     * {@snippet :
     * void* g_task_get_task_data(struct _GTask* task);
     * }
     */
    public static MemorySegment g_task_get_task_data(MemorySegment task) {
        var mh$ = g_task_get_task_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.const$3,"g_task_get_priority");
    }
    /**
     * {@snippet :
     * int g_task_get_priority(struct _GTask* task);
     * }
     */
    public static int g_task_get_priority(MemorySegment task) {
        var mh$ = g_task_get_priority$MH();
        try {
            return (int)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.const$4,"g_task_get_context");
    }
    /**
     * {@snippet :
     * struct _GMainContext* g_task_get_context(struct _GTask* task);
     * }
     */
    public static MemorySegment g_task_get_context(MemorySegment task) {
        var mh$ = g_task_get_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_cancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.const$5,"g_task_get_cancellable");
    }
    /**
     * {@snippet :
     * struct _GCancellable* g_task_get_cancellable(struct _GTask* task);
     * }
     */
    public static MemorySegment g_task_get_cancellable(MemorySegment task) {
        var mh$ = g_task_get_cancellable$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_check_cancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.const$0,"g_task_get_check_cancellable");
    }
    /**
     * {@snippet :
     * int g_task_get_check_cancellable(struct _GTask* task);
     * }
     */
    public static int g_task_get_check_cancellable(MemorySegment task) {
        var mh$ = g_task_get_check_cancellable$MH();
        try {
            return (int)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_source_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.const$1,"g_task_get_source_tag");
    }
    /**
     * {@snippet :
     * void* g_task_get_source_tag(struct _GTask* task);
     * }
     */
    public static MemorySegment g_task_get_source_tag(MemorySegment task) {
        var mh$ = g_task_get_source_tag$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.const$2,"g_task_get_name");
    }
    /**
     * {@snippet :
     * char* g_task_get_name(struct _GTask* task);
     * }
     */
    public static MemorySegment g_task_get_name(MemorySegment task) {
        var mh$ = g_task_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.const$3,"g_task_is_valid");
    }
    /**
     * {@snippet :
     * int g_task_is_valid(void* result, void* source_object);
     * }
     */
    public static int g_task_is_valid(MemorySegment result, MemorySegment source_object) {
        var mh$ = g_task_is_valid$MH();
        try {
            return (int)mh$.invokeExact(result, source_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_run_in_thread$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.const$0,"g_task_run_in_thread");
    }
    /**
     * {@snippet :
     * void g_task_run_in_thread(struct _GTask* task, void (*task_func)(struct _GTask*,void*,void*,struct _GCancellable*));
     * }
     */
    public static void g_task_run_in_thread(MemorySegment task, MemorySegment task_func) {
        var mh$ = g_task_run_in_thread$MH();
        try {
            mh$.invokeExact(task, task_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_run_in_thread_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.const$2,"g_task_run_in_thread_sync");
    }
    /**
     * {@snippet :
     * void g_task_run_in_thread_sync(struct _GTask* task, void (*task_func)(struct _GTask*,void*,void*,struct _GCancellable*));
     * }
     */
    public static void g_task_run_in_thread_sync(MemorySegment task, MemorySegment task_func) {
        var mh$ = g_task_run_in_thread_sync$MH();
        try {
            mh$.invokeExact(task, task_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_return_on_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.const$3,"g_task_set_return_on_cancel");
    }
    /**
     * {@snippet :
     * int g_task_set_return_on_cancel(struct _GTask* task, int return_on_cancel);
     * }
     */
    public static int g_task_set_return_on_cancel(MemorySegment task, int return_on_cancel) {
        var mh$ = g_task_set_return_on_cancel$MH();
        try {
            return (int)mh$.invokeExact(task, return_on_cancel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_return_on_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.const$4,"g_task_get_return_on_cancel");
    }
    /**
     * {@snippet :
     * int g_task_get_return_on_cancel(struct _GTask* task);
     * }
     */
    public static int g_task_get_return_on_cancel(MemorySegment task) {
        var mh$ = g_task_get_return_on_cancel$MH();
        try {
            return (int)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_attach_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.const$0,"g_task_attach_source");
    }
    /**
     * {@snippet :
     * void g_task_attach_source(struct _GTask* task, struct _GSource* source, int (*callback)(void*));
     * }
     */
    public static void g_task_attach_source(MemorySegment task, MemorySegment source, MemorySegment callback) {
        var mh$ = g_task_attach_source$MH();
        try {
            mh$.invokeExact(task, source, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.const$2,"g_task_return_pointer");
    }
    /**
     * {@snippet :
     * void g_task_return_pointer(struct _GTask* task, void* result, void (*result_destroy)(void*));
     * }
     */
    public static void g_task_return_pointer(MemorySegment task, MemorySegment result, MemorySegment result_destroy) {
        var mh$ = g_task_return_pointer$MH();
        try {
            mh$.invokeExact(task, result, result_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.const$3,"g_task_return_boolean");
    }
    /**
     * {@snippet :
     * void g_task_return_boolean(struct _GTask* task, int result);
     * }
     */
    public static void g_task_return_boolean(MemorySegment task, int result) {
        var mh$ = g_task_return_boolean$MH();
        try {
            mh$.invokeExact(task, result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_int$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.const$4,"g_task_return_int");
    }
    /**
     * {@snippet :
     * void g_task_return_int(struct _GTask* task, long result);
     * }
     */
    public static void g_task_return_int(MemorySegment task, long result) {
        var mh$ = g_task_return_int$MH();
        try {
            mh$.invokeExact(task, result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.const$5,"g_task_return_error");
    }
    /**
     * {@snippet :
     * void g_task_return_error(struct _GTask* task, struct _GError* error);
     * }
     */
    public static void g_task_return_error(MemorySegment task, MemorySegment error) {
        var mh$ = g_task_return_error$MH();
        try {
            mh$.invokeExact(task, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_new_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.const$0,"g_task_return_new_error");
    }
    /**
     * {@snippet :
     * void g_task_return_new_error(struct _GTask* task, unsigned int domain, int code, char* format,...);
     * }
     */
    public static void g_task_return_new_error(MemorySegment task, int domain, int code, MemorySegment format, Object... x4) {
        var mh$ = g_task_return_new_error$MH();
        try {
            mh$.invokeExact(task, domain, code, format, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.const$1,"g_task_return_value");
    }
    /**
     * {@snippet :
     * void g_task_return_value(struct _GTask* task, struct _GValue* result);
     * }
     */
    public static void g_task_return_value(MemorySegment task, MemorySegment result) {
        var mh$ = g_task_return_value$MH();
        try {
            mh$.invokeExact(task, result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_error_if_cancelled$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.const$2,"g_task_return_error_if_cancelled");
    }
    /**
     * {@snippet :
     * int g_task_return_error_if_cancelled(struct _GTask* task);
     * }
     */
    public static int g_task_return_error_if_cancelled(MemorySegment task) {
        var mh$ = g_task_return_error_if_cancelled$MH();
        try {
            return (int)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_propagate_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.const$3,"g_task_propagate_pointer");
    }
    /**
     * {@snippet :
     * void* g_task_propagate_pointer(struct _GTask* task, struct _GError** error);
     * }
     */
    public static MemorySegment g_task_propagate_pointer(MemorySegment task, MemorySegment error) {
        var mh$ = g_task_propagate_pointer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(task, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_propagate_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.const$4,"g_task_propagate_boolean");
    }
    /**
     * {@snippet :
     * int g_task_propagate_boolean(struct _GTask* task, struct _GError** error);
     * }
     */
    public static int g_task_propagate_boolean(MemorySegment task, MemorySegment error) {
        var mh$ = g_task_propagate_boolean$MH();
        try {
            return (int)mh$.invokeExact(task, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_propagate_int$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.const$5,"g_task_propagate_int");
    }
    /**
     * {@snippet :
     * long g_task_propagate_int(struct _GTask* task, struct _GError** error);
     * }
     */
    public static long g_task_propagate_int(MemorySegment task, MemorySegment error) {
        var mh$ = g_task_propagate_int$MH();
        try {
            return (long)mh$.invokeExact(task, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_propagate_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1338.const$0,"g_task_propagate_value");
    }
    /**
     * {@snippet :
     * int g_task_propagate_value(struct _GTask* task, struct _GValue* value, struct _GError** error);
     * }
     */
    public static int g_task_propagate_value(MemorySegment task, MemorySegment value, MemorySegment error) {
        var mh$ = g_task_propagate_value$MH();
        try {
            return (int)mh$.invokeExact(task, value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_had_error$MH() {
        return RuntimeHelper.requireNonNull(constants$1338.const$1,"g_task_had_error");
    }
    /**
     * {@snippet :
     * int g_task_had_error(struct _GTask* task);
     * }
     */
    public static int g_task_had_error(MemorySegment task) {
        var mh$ = g_task_had_error$MH();
        try {
            return (int)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_completed$MH() {
        return RuntimeHelper.requireNonNull(constants$1338.const$2,"g_task_get_completed");
    }
    /**
     * {@snippet :
     * int g_task_get_completed(struct _GTask* task);
     * }
     */
    public static int g_task_get_completed(MemorySegment task) {
        var mh$ = g_task_get_completed$MH();
        try {
            return (int)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tcp_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1339.const$0,"g_tcp_connection_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tcp_connection_get_type();
     * }
     */
    public static long g_tcp_connection_get_type() {
        var mh$ = g_tcp_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tcp_connection_set_graceful_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$1339.const$1,"g_tcp_connection_set_graceful_disconnect");
    }
    /**
     * {@snippet :
     * void g_tcp_connection_set_graceful_disconnect(struct _GTcpConnection* connection, int graceful_disconnect);
     * }
     */
    public static void g_tcp_connection_set_graceful_disconnect(MemorySegment connection, int graceful_disconnect) {
        var mh$ = g_tcp_connection_set_graceful_disconnect$MH();
        try {
            mh$.invokeExact(connection, graceful_disconnect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tcp_connection_get_graceful_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$1339.const$2,"g_tcp_connection_get_graceful_disconnect");
    }
    /**
     * {@snippet :
     * int g_tcp_connection_get_graceful_disconnect(struct _GTcpConnection* connection);
     * }
     */
    public static int g_tcp_connection_get_graceful_disconnect(MemorySegment connection) {
        var mh$ = g_tcp_connection_get_graceful_disconnect$MH();
        try {
            return (int)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tcp_wrapper_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.const$0,"g_tcp_wrapper_connection_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tcp_wrapper_connection_get_type();
     * }
     */
    public static long g_tcp_wrapper_connection_get_type() {
        var mh$ = g_tcp_wrapper_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tcp_wrapper_connection_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.const$1,"g_tcp_wrapper_connection_new");
    }
    /**
     * {@snippet :
     * struct _GSocketConnection* g_tcp_wrapper_connection_new(struct _GIOStream* base_io_stream, struct _GSocket* socket);
     * }
     */
    public static MemorySegment g_tcp_wrapper_connection_new(MemorySegment base_io_stream, MemorySegment socket) {
        var mh$ = g_tcp_wrapper_connection_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(base_io_stream, socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tcp_wrapper_connection_get_base_io_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.const$2,"g_tcp_wrapper_connection_get_base_io_stream");
    }
    /**
     * {@snippet :
     * struct _GIOStream* g_tcp_wrapper_connection_get_base_io_stream(struct _GTcpWrapperConnection* conn);
     * }
     */
    public static MemorySegment g_tcp_wrapper_connection_get_base_io_stream(MemorySegment conn) {
        var mh$ = g_tcp_wrapper_connection_get_base_io_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.const$3,"g_test_dbus_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_test_dbus_get_type();
     * }
     */
    public static long g_test_dbus_get_type() {
        var mh$ = g_test_dbus_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.const$4,"g_test_dbus_new");
    }
    /**
     * {@snippet :
     * struct _GTestDBus* g_test_dbus_new(enum GTestDBusFlags flags);
     * }
     */
    public static MemorySegment g_test_dbus_new(int flags) {
        var mh$ = g_test_dbus_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.const$5,"g_test_dbus_get_flags");
    }
    /**
     * {@snippet :
     * enum GTestDBusFlags g_test_dbus_get_flags(struct _GTestDBus* self);
     * }
     */
    public static int g_test_dbus_get_flags(MemorySegment self) {
        var mh$ = g_test_dbus_get_flags$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_get_bus_address$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.const$0,"g_test_dbus_get_bus_address");
    }
    /**
     * {@snippet :
     * char* g_test_dbus_get_bus_address(struct _GTestDBus* self);
     * }
     */
    public static MemorySegment g_test_dbus_get_bus_address(MemorySegment self) {
        var mh$ = g_test_dbus_get_bus_address$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_add_service_dir$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.const$1,"g_test_dbus_add_service_dir");
    }
    /**
     * {@snippet :
     * void g_test_dbus_add_service_dir(struct _GTestDBus* self, char* path);
     * }
     */
    public static void g_test_dbus_add_service_dir(MemorySegment self, MemorySegment path) {
        var mh$ = g_test_dbus_add_service_dir$MH();
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_up$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.const$2,"g_test_dbus_up");
    }
    /**
     * {@snippet :
     * void g_test_dbus_up(struct _GTestDBus* self);
     * }
     */
    public static void g_test_dbus_up(MemorySegment self) {
        var mh$ = g_test_dbus_up$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_stop$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.const$3,"g_test_dbus_stop");
    }
    /**
     * {@snippet :
     * void g_test_dbus_stop(struct _GTestDBus* self);
     * }
     */
    public static void g_test_dbus_stop(MemorySegment self) {
        var mh$ = g_test_dbus_stop$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_down$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.const$4,"g_test_dbus_down");
    }
    /**
     * {@snippet :
     * void g_test_dbus_down(struct _GTestDBus* self);
     * }
     */
    public static void g_test_dbus_down(MemorySegment self) {
        var mh$ = g_test_dbus_down$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_unset$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.const$5,"g_test_dbus_unset");
    }
    /**
     * {@snippet :
     * void g_test_dbus_unset();
     * }
     */
    public static void g_test_dbus_unset() {
        var mh$ = g_test_dbus_unset$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.const$0,"g_themed_icon_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_themed_icon_get_type();
     * }
     */
    public static long g_themed_icon_get_type() {
        var mh$ = g_themed_icon_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.const$1,"g_themed_icon_new");
    }
    /**
     * {@snippet :
     * struct _GIcon* g_themed_icon_new(char* iconname);
     * }
     */
    public static MemorySegment g_themed_icon_new(MemorySegment iconname) {
        var mh$ = g_themed_icon_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iconname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_new_with_default_fallbacks$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.const$2,"g_themed_icon_new_with_default_fallbacks");
    }
    /**
     * {@snippet :
     * struct _GIcon* g_themed_icon_new_with_default_fallbacks(char* iconname);
     * }
     */
    public static MemorySegment g_themed_icon_new_with_default_fallbacks(MemorySegment iconname) {
        var mh$ = g_themed_icon_new_with_default_fallbacks$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iconname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_new_from_names$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.const$3,"g_themed_icon_new_from_names");
    }
    /**
     * {@snippet :
     * struct _GIcon* g_themed_icon_new_from_names(char** iconnames, int len);
     * }
     */
    public static MemorySegment g_themed_icon_new_from_names(MemorySegment iconnames, int len) {
        var mh$ = g_themed_icon_new_from_names$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iconnames, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_prepend_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.const$4,"g_themed_icon_prepend_name");
    }
    /**
     * {@snippet :
     * void g_themed_icon_prepend_name(struct _GThemedIcon* icon, char* iconname);
     * }
     */
    public static void g_themed_icon_prepend_name(MemorySegment icon, MemorySegment iconname) {
        var mh$ = g_themed_icon_prepend_name$MH();
        try {
            mh$.invokeExact(icon, iconname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_append_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.const$5,"g_themed_icon_append_name");
    }
    /**
     * {@snippet :
     * void g_themed_icon_append_name(struct _GThemedIcon* icon, char* iconname);
     * }
     */
    public static void g_themed_icon_append_name(MemorySegment icon, MemorySegment iconname) {
        var mh$ = g_themed_icon_append_name$MH();
        try {
            mh$.invokeExact(icon, iconname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_get_names$MH() {
        return RuntimeHelper.requireNonNull(constants$1343.const$0,"g_themed_icon_get_names");
    }
    /**
     * {@snippet :
     * char** g_themed_icon_get_names(struct _GThemedIcon* icon);
     * }
     */
    public static MemorySegment g_themed_icon_get_names(MemorySegment icon) {
        var mh$ = g_themed_icon_get_names$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_threaded_socket_service_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.const$4,"g_threaded_socket_service_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_threaded_socket_service_get_type();
     * }
     */
    public static long g_threaded_socket_service_get_type() {
        var mh$ = g_threaded_socket_service_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_threaded_socket_service_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.const$5,"g_threaded_socket_service_new");
    }
    /**
     * {@snippet :
     * struct _GSocketService* g_threaded_socket_service_new(int max_threads);
     * }
     */
    public static MemorySegment g_threaded_socket_service_new(int max_threads) {
        var mh$ = g_threaded_socket_service_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(max_threads);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1349.const$1,"g_tls_backend_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_backend_get_type();
     * }
     */
    public static long g_tls_backend_get_type() {
        var mh$ = g_tls_backend_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1349.const$2,"g_tls_backend_get_default");
    }
    /**
     * {@snippet :
     * struct _GTlsBackend* g_tls_backend_get_default();
     * }
     */
    public static MemorySegment g_tls_backend_get_default() {
        var mh$ = g_tls_backend_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_default_database$MH() {
        return RuntimeHelper.requireNonNull(constants$1349.const$3,"g_tls_backend_get_default_database");
    }
    /**
     * {@snippet :
     * struct _GTlsDatabase* g_tls_backend_get_default_database(struct _GTlsBackend* backend);
     * }
     */
    public static MemorySegment g_tls_backend_get_default_database(MemorySegment backend) {
        var mh$ = g_tls_backend_get_default_database$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_set_default_database$MH() {
        return RuntimeHelper.requireNonNull(constants$1349.const$4,"g_tls_backend_set_default_database");
    }
    /**
     * {@snippet :
     * void g_tls_backend_set_default_database(struct _GTlsBackend* backend, struct _GTlsDatabase* database);
     * }
     */
    public static void g_tls_backend_set_default_database(MemorySegment backend, MemorySegment database) {
        var mh$ = g_tls_backend_set_default_database$MH();
        try {
            mh$.invokeExact(backend, database);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_supports_tls$MH() {
        return RuntimeHelper.requireNonNull(constants$1349.const$5,"g_tls_backend_supports_tls");
    }
    /**
     * {@snippet :
     * int g_tls_backend_supports_tls(struct _GTlsBackend* backend);
     * }
     */
    public static int g_tls_backend_supports_tls(MemorySegment backend) {
        var mh$ = g_tls_backend_supports_tls$MH();
        try {
            return (int)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_supports_dtls$MH() {
        return RuntimeHelper.requireNonNull(constants$1350.const$0,"g_tls_backend_supports_dtls");
    }
    /**
     * {@snippet :
     * int g_tls_backend_supports_dtls(struct _GTlsBackend* backend);
     * }
     */
    public static int g_tls_backend_supports_dtls(MemorySegment backend) {
        var mh$ = g_tls_backend_supports_dtls$MH();
        try {
            return (int)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_certificate_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1350.const$1,"g_tls_backend_get_certificate_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_backend_get_certificate_type(struct _GTlsBackend* backend);
     * }
     */
    public static long g_tls_backend_get_certificate_type(MemorySegment backend) {
        var mh$ = g_tls_backend_get_certificate_type$MH();
        try {
            return (long)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_client_connection_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1350.const$2,"g_tls_backend_get_client_connection_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_backend_get_client_connection_type(struct _GTlsBackend* backend);
     * }
     */
    public static long g_tls_backend_get_client_connection_type(MemorySegment backend) {
        var mh$ = g_tls_backend_get_client_connection_type$MH();
        try {
            return (long)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_server_connection_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1350.const$3,"g_tls_backend_get_server_connection_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_backend_get_server_connection_type(struct _GTlsBackend* backend);
     * }
     */
    public static long g_tls_backend_get_server_connection_type(MemorySegment backend) {
        var mh$ = g_tls_backend_get_server_connection_type$MH();
        try {
            return (long)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_file_database_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1350.const$4,"g_tls_backend_get_file_database_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_backend_get_file_database_type(struct _GTlsBackend* backend);
     * }
     */
    public static long g_tls_backend_get_file_database_type(MemorySegment backend) {
        var mh$ = g_tls_backend_get_file_database_type$MH();
        try {
            return (long)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_dtls_client_connection_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1350.const$5,"g_tls_backend_get_dtls_client_connection_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_backend_get_dtls_client_connection_type(struct _GTlsBackend* backend);
     * }
     */
    public static long g_tls_backend_get_dtls_client_connection_type(MemorySegment backend) {
        var mh$ = g_tls_backend_get_dtls_client_connection_type$MH();
        try {
            return (long)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_dtls_server_connection_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1351.const$0,"g_tls_backend_get_dtls_server_connection_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_backend_get_dtls_server_connection_type(struct _GTlsBackend* backend);
     * }
     */
    public static long g_tls_backend_get_dtls_server_connection_type(MemorySegment backend) {
        var mh$ = g_tls_backend_get_dtls_server_connection_type$MH();
        try {
            return (long)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1352.const$0,"g_tls_certificate_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_certificate_get_type();
     * }
     */
    public static long g_tls_certificate_get_type() {
        var mh$ = g_tls_certificate_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_new_from_pem$MH() {
        return RuntimeHelper.requireNonNull(constants$1352.const$1,"g_tls_certificate_new_from_pem");
    }
    /**
     * {@snippet :
     * struct _GTlsCertificate* g_tls_certificate_new_from_pem(char* data, long length, struct _GError** error);
     * }
     */
    public static MemorySegment g_tls_certificate_new_from_pem(MemorySegment data, long length, MemorySegment error) {
        var mh$ = g_tls_certificate_new_from_pem$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(data, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_new_from_pkcs12$MH() {
        return RuntimeHelper.requireNonNull(constants$1352.const$2,"g_tls_certificate_new_from_pkcs12");
    }
    /**
     * {@snippet :
     * struct _GTlsCertificate* g_tls_certificate_new_from_pkcs12(unsigned char* data, unsigned long length, char* password, struct _GError** error);
     * }
     */
    public static MemorySegment g_tls_certificate_new_from_pkcs12(MemorySegment data, long length, MemorySegment password, MemorySegment error) {
        var mh$ = g_tls_certificate_new_from_pkcs12$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(data, length, password, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_new_from_file_with_password$MH() {
        return RuntimeHelper.requireNonNull(constants$1352.const$3,"g_tls_certificate_new_from_file_with_password");
    }
    /**
     * {@snippet :
     * struct _GTlsCertificate* g_tls_certificate_new_from_file_with_password(char* file, char* password, struct _GError** error);
     * }
     */
    public static MemorySegment g_tls_certificate_new_from_file_with_password(MemorySegment file, MemorySegment password, MemorySegment error) {
        var mh$ = g_tls_certificate_new_from_file_with_password$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, password, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1352.const$4,"g_tls_certificate_new_from_file");
    }
    /**
     * {@snippet :
     * struct _GTlsCertificate* g_tls_certificate_new_from_file(char* file, struct _GError** error);
     * }
     */
    public static MemorySegment g_tls_certificate_new_from_file(MemorySegment file, MemorySegment error) {
        var mh$ = g_tls_certificate_new_from_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_new_from_files$MH() {
        return RuntimeHelper.requireNonNull(constants$1352.const$5,"g_tls_certificate_new_from_files");
    }
    /**
     * {@snippet :
     * struct _GTlsCertificate* g_tls_certificate_new_from_files(char* cert_file, char* key_file, struct _GError** error);
     * }
     */
    public static MemorySegment g_tls_certificate_new_from_files(MemorySegment cert_file, MemorySegment key_file, MemorySegment error) {
        var mh$ = g_tls_certificate_new_from_files$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cert_file, key_file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_new_from_pkcs11_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$1353.const$0,"g_tls_certificate_new_from_pkcs11_uris");
    }
    /**
     * {@snippet :
     * struct _GTlsCertificate* g_tls_certificate_new_from_pkcs11_uris(char* pkcs11_uri, char* private_key_pkcs11_uri, struct _GError** error);
     * }
     */
    public static MemorySegment g_tls_certificate_new_from_pkcs11_uris(MemorySegment pkcs11_uri, MemorySegment private_key_pkcs11_uri, MemorySegment error) {
        var mh$ = g_tls_certificate_new_from_pkcs11_uris$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pkcs11_uri, private_key_pkcs11_uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_list_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1353.const$1,"g_tls_certificate_list_new_from_file");
    }
    /**
     * {@snippet :
     * struct _GList* g_tls_certificate_list_new_from_file(char* file, struct _GError** error);
     * }
     */
    public static MemorySegment g_tls_certificate_list_new_from_file(MemorySegment file, MemorySegment error) {
        var mh$ = g_tls_certificate_list_new_from_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_issuer$MH() {
        return RuntimeHelper.requireNonNull(constants$1353.const$2,"g_tls_certificate_get_issuer");
    }
    /**
     * {@snippet :
     * struct _GTlsCertificate* g_tls_certificate_get_issuer(struct _GTlsCertificate* cert);
     * }
     */
    public static MemorySegment g_tls_certificate_get_issuer(MemorySegment cert) {
        var mh$ = g_tls_certificate_get_issuer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$1353.const$3,"g_tls_certificate_verify");
    }
    /**
     * {@snippet :
     * enum GTlsCertificateFlags g_tls_certificate_verify(struct _GTlsCertificate* cert, struct _GSocketConnectable* identity, struct _GTlsCertificate* trusted_ca);
     * }
     */
    public static int g_tls_certificate_verify(MemorySegment cert, MemorySegment identity, MemorySegment trusted_ca) {
        var mh$ = g_tls_certificate_verify$MH();
        try {
            return (int)mh$.invokeExact(cert, identity, trusted_ca);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_is_same$MH() {
        return RuntimeHelper.requireNonNull(constants$1353.const$4,"g_tls_certificate_is_same");
    }
    /**
     * {@snippet :
     * int g_tls_certificate_is_same(struct _GTlsCertificate* cert_one, struct _GTlsCertificate* cert_two);
     * }
     */
    public static int g_tls_certificate_is_same(MemorySegment cert_one, MemorySegment cert_two) {
        var mh$ = g_tls_certificate_is_same$MH();
        try {
            return (int)mh$.invokeExact(cert_one, cert_two);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_not_valid_before$MH() {
        return RuntimeHelper.requireNonNull(constants$1353.const$5,"g_tls_certificate_get_not_valid_before");
    }
    /**
     * {@snippet :
     * struct _GDateTime* g_tls_certificate_get_not_valid_before(struct _GTlsCertificate* cert);
     * }
     */
    public static MemorySegment g_tls_certificate_get_not_valid_before(MemorySegment cert) {
        var mh$ = g_tls_certificate_get_not_valid_before$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_not_valid_after$MH() {
        return RuntimeHelper.requireNonNull(constants$1354.const$0,"g_tls_certificate_get_not_valid_after");
    }
    /**
     * {@snippet :
     * struct _GDateTime* g_tls_certificate_get_not_valid_after(struct _GTlsCertificate* cert);
     * }
     */
    public static MemorySegment g_tls_certificate_get_not_valid_after(MemorySegment cert) {
        var mh$ = g_tls_certificate_get_not_valid_after$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_subject_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1354.const$1,"g_tls_certificate_get_subject_name");
    }
    /**
     * {@snippet :
     * char* g_tls_certificate_get_subject_name(struct _GTlsCertificate* cert);
     * }
     */
    public static MemorySegment g_tls_certificate_get_subject_name(MemorySegment cert) {
        var mh$ = g_tls_certificate_get_subject_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_issuer_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1354.const$2,"g_tls_certificate_get_issuer_name");
    }
    /**
     * {@snippet :
     * char* g_tls_certificate_get_issuer_name(struct _GTlsCertificate* cert);
     * }
     */
    public static MemorySegment g_tls_certificate_get_issuer_name(MemorySegment cert) {
        var mh$ = g_tls_certificate_get_issuer_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_dns_names$MH() {
        return RuntimeHelper.requireNonNull(constants$1354.const$3,"g_tls_certificate_get_dns_names");
    }
    /**
     * {@snippet :
     * struct _GPtrArray* g_tls_certificate_get_dns_names(struct _GTlsCertificate* cert);
     * }
     */
    public static MemorySegment g_tls_certificate_get_dns_names(MemorySegment cert) {
        var mh$ = g_tls_certificate_get_dns_names$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_ip_addresses$MH() {
        return RuntimeHelper.requireNonNull(constants$1354.const$4,"g_tls_certificate_get_ip_addresses");
    }
    /**
     * {@snippet :
     * struct _GPtrArray* g_tls_certificate_get_ip_addresses(struct _GTlsCertificate* cert);
     * }
     */
    public static MemorySegment g_tls_certificate_get_ip_addresses(MemorySegment cert) {
        var mh$ = g_tls_certificate_get_ip_addresses$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1357.const$2,"g_tls_connection_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_connection_get_type();
     * }
     */
    public static long g_tls_connection_get_type() {
        var mh$ = g_tls_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_use_system_certdb$MH() {
        return RuntimeHelper.requireNonNull(constants$1357.const$3,"g_tls_connection_set_use_system_certdb");
    }
    /**
     * {@snippet :
     * void g_tls_connection_set_use_system_certdb(struct _GTlsConnection* conn, int use_system_certdb);
     * }
     */
    public static void g_tls_connection_set_use_system_certdb(MemorySegment conn, int use_system_certdb) {
        var mh$ = g_tls_connection_set_use_system_certdb$MH();
        try {
            mh$.invokeExact(conn, use_system_certdb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_use_system_certdb$MH() {
        return RuntimeHelper.requireNonNull(constants$1357.const$4,"g_tls_connection_get_use_system_certdb");
    }
    /**
     * {@snippet :
     * int g_tls_connection_get_use_system_certdb(struct _GTlsConnection* conn);
     * }
     */
    public static int g_tls_connection_get_use_system_certdb(MemorySegment conn) {
        var mh$ = g_tls_connection_get_use_system_certdb$MH();
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_database$MH() {
        return RuntimeHelper.requireNonNull(constants$1357.const$5,"g_tls_connection_set_database");
    }
    /**
     * {@snippet :
     * void g_tls_connection_set_database(struct _GTlsConnection* conn, struct _GTlsDatabase* database);
     * }
     */
    public static void g_tls_connection_set_database(MemorySegment conn, MemorySegment database) {
        var mh$ = g_tls_connection_set_database$MH();
        try {
            mh$.invokeExact(conn, database);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_database$MH() {
        return RuntimeHelper.requireNonNull(constants$1358.const$0,"g_tls_connection_get_database");
    }
    /**
     * {@snippet :
     * struct _GTlsDatabase* g_tls_connection_get_database(struct _GTlsConnection* conn);
     * }
     */
    public static MemorySegment g_tls_connection_get_database(MemorySegment conn) {
        var mh$ = g_tls_connection_get_database$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$1358.const$1,"g_tls_connection_set_certificate");
    }
    /**
     * {@snippet :
     * void g_tls_connection_set_certificate(struct _GTlsConnection* conn, struct _GTlsCertificate* certificate);
     * }
     */
    public static void g_tls_connection_set_certificate(MemorySegment conn, MemorySegment certificate) {
        var mh$ = g_tls_connection_set_certificate$MH();
        try {
            mh$.invokeExact(conn, certificate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$1358.const$2,"g_tls_connection_get_certificate");
    }
    /**
     * {@snippet :
     * struct _GTlsCertificate* g_tls_connection_get_certificate(struct _GTlsConnection* conn);
     * }
     */
    public static MemorySegment g_tls_connection_get_certificate(MemorySegment conn) {
        var mh$ = g_tls_connection_get_certificate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_interaction$MH() {
        return RuntimeHelper.requireNonNull(constants$1358.const$3,"g_tls_connection_set_interaction");
    }
    /**
     * {@snippet :
     * void g_tls_connection_set_interaction(struct _GTlsConnection* conn, struct _GTlsInteraction* interaction);
     * }
     */
    public static void g_tls_connection_set_interaction(MemorySegment conn, MemorySegment interaction) {
        var mh$ = g_tls_connection_set_interaction$MH();
        try {
            mh$.invokeExact(conn, interaction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_interaction$MH() {
        return RuntimeHelper.requireNonNull(constants$1358.const$4,"g_tls_connection_get_interaction");
    }
    /**
     * {@snippet :
     * struct _GTlsInteraction* g_tls_connection_get_interaction(struct _GTlsConnection* conn);
     * }
     */
    public static MemorySegment g_tls_connection_get_interaction(MemorySegment conn) {
        var mh$ = g_tls_connection_get_interaction$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_peer_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$1358.const$5,"g_tls_connection_get_peer_certificate");
    }
    /**
     * {@snippet :
     * struct _GTlsCertificate* g_tls_connection_get_peer_certificate(struct _GTlsConnection* conn);
     * }
     */
    public static MemorySegment g_tls_connection_get_peer_certificate(MemorySegment conn) {
        var mh$ = g_tls_connection_get_peer_certificate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_peer_certificate_errors$MH() {
        return RuntimeHelper.requireNonNull(constants$1359.const$0,"g_tls_connection_get_peer_certificate_errors");
    }
    /**
     * {@snippet :
     * enum GTlsCertificateFlags g_tls_connection_get_peer_certificate_errors(struct _GTlsConnection* conn);
     * }
     */
    public static int g_tls_connection_get_peer_certificate_errors(MemorySegment conn) {
        var mh$ = g_tls_connection_get_peer_certificate_errors$MH();
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_require_close_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$1359.const$1,"g_tls_connection_set_require_close_notify");
    }
    /**
     * {@snippet :
     * void g_tls_connection_set_require_close_notify(struct _GTlsConnection* conn, int require_close_notify);
     * }
     */
    public static void g_tls_connection_set_require_close_notify(MemorySegment conn, int require_close_notify) {
        var mh$ = g_tls_connection_set_require_close_notify$MH();
        try {
            mh$.invokeExact(conn, require_close_notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_require_close_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$1359.const$2,"g_tls_connection_get_require_close_notify");
    }
    /**
     * {@snippet :
     * int g_tls_connection_get_require_close_notify(struct _GTlsConnection* conn);
     * }
     */
    public static int g_tls_connection_get_require_close_notify(MemorySegment conn) {
        var mh$ = g_tls_connection_get_require_close_notify$MH();
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_rehandshake_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1359.const$3,"g_tls_connection_set_rehandshake_mode");
    }
    /**
     * {@snippet :
     * void g_tls_connection_set_rehandshake_mode(struct _GTlsConnection* conn, enum GTlsRehandshakeMode mode);
     * }
     */
    public static void g_tls_connection_set_rehandshake_mode(MemorySegment conn, int mode) {
        var mh$ = g_tls_connection_set_rehandshake_mode$MH();
        try {
            mh$.invokeExact(conn, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_rehandshake_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1359.const$4,"g_tls_connection_get_rehandshake_mode");
    }
    /**
     * {@snippet :
     * enum GTlsRehandshakeMode g_tls_connection_get_rehandshake_mode(struct _GTlsConnection* conn);
     * }
     */
    public static int g_tls_connection_get_rehandshake_mode(MemorySegment conn) {
        var mh$ = g_tls_connection_get_rehandshake_mode$MH();
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_advertised_protocols$MH() {
        return RuntimeHelper.requireNonNull(constants$1359.const$5,"g_tls_connection_set_advertised_protocols");
    }
    /**
     * {@snippet :
     * void g_tls_connection_set_advertised_protocols(struct _GTlsConnection* conn, char** protocols);
     * }
     */
    public static void g_tls_connection_set_advertised_protocols(MemorySegment conn, MemorySegment protocols) {
        var mh$ = g_tls_connection_set_advertised_protocols$MH();
        try {
            mh$.invokeExact(conn, protocols);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_negotiated_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$1360.const$0,"g_tls_connection_get_negotiated_protocol");
    }
    /**
     * {@snippet :
     * char* g_tls_connection_get_negotiated_protocol(struct _GTlsConnection* conn);
     * }
     */
    public static MemorySegment g_tls_connection_get_negotiated_protocol(MemorySegment conn) {
        var mh$ = g_tls_connection_get_negotiated_protocol$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_channel_binding_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1360.const$1,"g_tls_connection_get_channel_binding_data");
    }
    /**
     * {@snippet :
     * int g_tls_connection_get_channel_binding_data(struct _GTlsConnection* conn, enum GTlsChannelBindingType type, struct _GByteArray* data, struct _GError** error);
     * }
     */
    public static int g_tls_connection_get_channel_binding_data(MemorySegment conn, int type, MemorySegment data, MemorySegment error) {
        var mh$ = g_tls_connection_get_channel_binding_data$MH();
        try {
            return (int)mh$.invokeExact(conn, type, data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_handshake$MH() {
        return RuntimeHelper.requireNonNull(constants$1360.const$2,"g_tls_connection_handshake");
    }
    /**
     * {@snippet :
     * int g_tls_connection_handshake(struct _GTlsConnection* conn, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_tls_connection_handshake(MemorySegment conn, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_tls_connection_handshake$MH();
        try {
            return (int)mh$.invokeExact(conn, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_handshake_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1360.const$4,"g_tls_connection_handshake_async");
    }
    /**
     * {@snippet :
     * void g_tls_connection_handshake_async(struct _GTlsConnection* conn, int io_priority, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_tls_connection_handshake_async(MemorySegment conn, int io_priority, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_tls_connection_handshake_async$MH();
        try {
            mh$.invokeExact(conn, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_handshake_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1360.const$5,"g_tls_connection_handshake_finish");
    }
    /**
     * {@snippet :
     * int g_tls_connection_handshake_finish(struct _GTlsConnection* conn, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_tls_connection_handshake_finish(MemorySegment conn, MemorySegment result, MemorySegment error) {
        var mh$ = g_tls_connection_handshake_finish$MH();
        try {
            return (int)mh$.invokeExact(conn, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_protocol_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1361.const$0,"g_tls_connection_get_protocol_version");
    }
    /**
     * {@snippet :
     * enum GTlsProtocolVersion g_tls_connection_get_protocol_version(struct _GTlsConnection* conn);
     * }
     */
    public static int g_tls_connection_get_protocol_version(MemorySegment conn) {
        var mh$ = g_tls_connection_get_protocol_version$MH();
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_ciphersuite_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1361.const$1,"g_tls_connection_get_ciphersuite_name");
    }
    /**
     * {@snippet :
     * char* g_tls_connection_get_ciphersuite_name(struct _GTlsConnection* conn);
     * }
     */
    public static MemorySegment g_tls_connection_get_ciphersuite_name(MemorySegment conn) {
        var mh$ = g_tls_connection_get_ciphersuite_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1361.const$2,"g_tls_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int g_tls_error_quark();
     * }
     */
    public static int g_tls_error_quark() {
        var mh$ = g_tls_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_channel_binding_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1361.const$3,"g_tls_channel_binding_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int g_tls_channel_binding_error_quark();
     * }
     */
    public static int g_tls_channel_binding_error_quark() {
        var mh$ = g_tls_channel_binding_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_emit_accept_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$1361.const$4,"g_tls_connection_emit_accept_certificate");
    }
    /**
     * {@snippet :
     * int g_tls_connection_emit_accept_certificate(struct _GTlsConnection* conn, struct _GTlsCertificate* peer_cert, enum GTlsCertificateFlags errors);
     * }
     */
    public static int g_tls_connection_emit_accept_certificate(MemorySegment conn, MemorySegment peer_cert, int errors) {
        var mh$ = g_tls_connection_emit_accept_certificate$MH();
        try {
            return (int)mh$.invokeExact(conn, peer_cert, errors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1362.const$2,"g_tls_client_connection_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_client_connection_get_type();
     * }
     */
    public static long g_tls_client_connection_get_type() {
        var mh$ = g_tls_client_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1362.const$3,"g_tls_client_connection_new");
    }
    /**
     * {@snippet :
     * struct _GIOStream* g_tls_client_connection_new(struct _GIOStream* base_io_stream, struct _GSocketConnectable* server_identity, struct _GError** error);
     * }
     */
    public static MemorySegment g_tls_client_connection_new(MemorySegment base_io_stream, MemorySegment server_identity, MemorySegment error) {
        var mh$ = g_tls_client_connection_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(base_io_stream, server_identity, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_get_validation_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1362.const$4,"g_tls_client_connection_get_validation_flags");
    }
    /**
     * {@snippet :
     * enum GTlsCertificateFlags g_tls_client_connection_get_validation_flags(struct _GTlsClientConnection* conn);
     * }
     */
    public static int g_tls_client_connection_get_validation_flags(MemorySegment conn) {
        var mh$ = g_tls_client_connection_get_validation_flags$MH();
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_set_validation_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1362.const$5,"g_tls_client_connection_set_validation_flags");
    }
    /**
     * {@snippet :
     * void g_tls_client_connection_set_validation_flags(struct _GTlsClientConnection* conn, enum GTlsCertificateFlags flags);
     * }
     */
    public static void g_tls_client_connection_set_validation_flags(MemorySegment conn, int flags) {
        var mh$ = g_tls_client_connection_set_validation_flags$MH();
        try {
            mh$.invokeExact(conn, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_get_server_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$1363.const$0,"g_tls_client_connection_get_server_identity");
    }
    /**
     * {@snippet :
     * struct _GSocketConnectable* g_tls_client_connection_get_server_identity(struct _GTlsClientConnection* conn);
     * }
     */
    public static MemorySegment g_tls_client_connection_get_server_identity(MemorySegment conn) {
        var mh$ = g_tls_client_connection_get_server_identity$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_set_server_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$1363.const$1,"g_tls_client_connection_set_server_identity");
    }
    /**
     * {@snippet :
     * void g_tls_client_connection_set_server_identity(struct _GTlsClientConnection* conn, struct _GSocketConnectable* identity);
     * }
     */
    public static void g_tls_client_connection_set_server_identity(MemorySegment conn, MemorySegment identity) {
        var mh$ = g_tls_client_connection_set_server_identity$MH();
        try {
            mh$.invokeExact(conn, identity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_get_use_ssl3$MH() {
        return RuntimeHelper.requireNonNull(constants$1363.const$2,"g_tls_client_connection_get_use_ssl3");
    }
    /**
     * {@snippet :
     * int g_tls_client_connection_get_use_ssl3(struct _GTlsClientConnection* conn);
     * }
     */
    public static int g_tls_client_connection_get_use_ssl3(MemorySegment conn) {
        var mh$ = g_tls_client_connection_get_use_ssl3$MH();
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_set_use_ssl3$MH() {
        return RuntimeHelper.requireNonNull(constants$1363.const$3,"g_tls_client_connection_set_use_ssl3");
    }
    /**
     * {@snippet :
     * void g_tls_client_connection_set_use_ssl3(struct _GTlsClientConnection* conn, int use_ssl3);
     * }
     */
    public static void g_tls_client_connection_set_use_ssl3(MemorySegment conn, int use_ssl3) {
        var mh$ = g_tls_client_connection_set_use_ssl3$MH();
        try {
            mh$.invokeExact(conn, use_ssl3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_get_accepted_cas$MH() {
        return RuntimeHelper.requireNonNull(constants$1363.const$4,"g_tls_client_connection_get_accepted_cas");
    }
    /**
     * {@snippet :
     * struct _GList* g_tls_client_connection_get_accepted_cas(struct _GTlsClientConnection* conn);
     * }
     */
    public static MemorySegment g_tls_client_connection_get_accepted_cas(MemorySegment conn) {
        var mh$ = g_tls_client_connection_get_accepted_cas$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_copy_session_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1363.const$5,"g_tls_client_connection_copy_session_state");
    }
    /**
     * {@snippet :
     * void g_tls_client_connection_copy_session_state(struct _GTlsClientConnection* conn, struct _GTlsClientConnection* source);
     * }
     */
    public static void g_tls_client_connection_copy_session_state(MemorySegment conn, MemorySegment source) {
        var mh$ = g_tls_client_connection_copy_session_state$MH();
        try {
            mh$.invokeExact(conn, source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1370.const$1,"g_tls_database_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_database_get_type();
     * }
     */
    public static long g_tls_database_get_type() {
        var mh$ = g_tls_database_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_verify_chain$MH() {
        return RuntimeHelper.requireNonNull(constants$1370.const$2,"g_tls_database_verify_chain");
    }
    /**
     * {@snippet :
     * enum GTlsCertificateFlags g_tls_database_verify_chain(struct _GTlsDatabase* self, struct _GTlsCertificate* chain, char* purpose, struct _GSocketConnectable* identity, struct _GTlsInteraction* interaction, enum GTlsDatabaseVerifyFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_tls_database_verify_chain(MemorySegment self, MemorySegment chain, MemorySegment purpose, MemorySegment identity, MemorySegment interaction, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_tls_database_verify_chain$MH();
        try {
            return (int)mh$.invokeExact(self, chain, purpose, identity, interaction, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_verify_chain_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1370.const$4,"g_tls_database_verify_chain_async");
    }
    /**
     * {@snippet :
     * void g_tls_database_verify_chain_async(struct _GTlsDatabase* self, struct _GTlsCertificate* chain, char* purpose, struct _GSocketConnectable* identity, struct _GTlsInteraction* interaction, enum GTlsDatabaseVerifyFlags flags, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_tls_database_verify_chain_async(MemorySegment self, MemorySegment chain, MemorySegment purpose, MemorySegment identity, MemorySegment interaction, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_tls_database_verify_chain_async$MH();
        try {
            mh$.invokeExact(self, chain, purpose, identity, interaction, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_verify_chain_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1370.const$5,"g_tls_database_verify_chain_finish");
    }
    /**
     * {@snippet :
     * enum GTlsCertificateFlags g_tls_database_verify_chain_finish(struct _GTlsDatabase* self, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_tls_database_verify_chain_finish(MemorySegment self, MemorySegment result, MemorySegment error) {
        var mh$ = g_tls_database_verify_chain_finish$MH();
        try {
            return (int)mh$.invokeExact(self, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_create_certificate_handle$MH() {
        return RuntimeHelper.requireNonNull(constants$1371.const$0,"g_tls_database_create_certificate_handle");
    }
    /**
     * {@snippet :
     * char* g_tls_database_create_certificate_handle(struct _GTlsDatabase* self, struct _GTlsCertificate* certificate);
     * }
     */
    public static MemorySegment g_tls_database_create_certificate_handle(MemorySegment self, MemorySegment certificate) {
        var mh$ = g_tls_database_create_certificate_handle$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, certificate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificate_for_handle$MH() {
        return RuntimeHelper.requireNonNull(constants$1371.const$1,"g_tls_database_lookup_certificate_for_handle");
    }
    /**
     * {@snippet :
     * struct _GTlsCertificate* g_tls_database_lookup_certificate_for_handle(struct _GTlsDatabase* self, char* handle, struct _GTlsInteraction* interaction, enum GTlsDatabaseLookupFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_tls_database_lookup_certificate_for_handle(MemorySegment self, MemorySegment handle, MemorySegment interaction, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_tls_database_lookup_certificate_for_handle$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, handle, interaction, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificate_for_handle_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1371.const$3,"g_tls_database_lookup_certificate_for_handle_async");
    }
    /**
     * {@snippet :
     * void g_tls_database_lookup_certificate_for_handle_async(struct _GTlsDatabase* self, char* handle, struct _GTlsInteraction* interaction, enum GTlsDatabaseLookupFlags flags, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_tls_database_lookup_certificate_for_handle_async(MemorySegment self, MemorySegment handle, MemorySegment interaction, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_tls_database_lookup_certificate_for_handle_async$MH();
        try {
            mh$.invokeExact(self, handle, interaction, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificate_for_handle_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1371.const$4,"g_tls_database_lookup_certificate_for_handle_finish");
    }
    /**
     * {@snippet :
     * struct _GTlsCertificate* g_tls_database_lookup_certificate_for_handle_finish(struct _GTlsDatabase* self, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_tls_database_lookup_certificate_for_handle_finish(MemorySegment self, MemorySegment result, MemorySegment error) {
        var mh$ = g_tls_database_lookup_certificate_for_handle_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificate_issuer$MH() {
        return RuntimeHelper.requireNonNull(constants$1371.const$5,"g_tls_database_lookup_certificate_issuer");
    }
    /**
     * {@snippet :
     * struct _GTlsCertificate* g_tls_database_lookup_certificate_issuer(struct _GTlsDatabase* self, struct _GTlsCertificate* certificate, struct _GTlsInteraction* interaction, enum GTlsDatabaseLookupFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_tls_database_lookup_certificate_issuer(MemorySegment self, MemorySegment certificate, MemorySegment interaction, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_tls_database_lookup_certificate_issuer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, certificate, interaction, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificate_issuer_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1372.const$1,"g_tls_database_lookup_certificate_issuer_async");
    }
    /**
     * {@snippet :
     * void g_tls_database_lookup_certificate_issuer_async(struct _GTlsDatabase* self, struct _GTlsCertificate* certificate, struct _GTlsInteraction* interaction, enum GTlsDatabaseLookupFlags flags, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_tls_database_lookup_certificate_issuer_async(MemorySegment self, MemorySegment certificate, MemorySegment interaction, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_tls_database_lookup_certificate_issuer_async$MH();
        try {
            mh$.invokeExact(self, certificate, interaction, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificate_issuer_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1372.const$2,"g_tls_database_lookup_certificate_issuer_finish");
    }
    /**
     * {@snippet :
     * struct _GTlsCertificate* g_tls_database_lookup_certificate_issuer_finish(struct _GTlsDatabase* self, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_tls_database_lookup_certificate_issuer_finish(MemorySegment self, MemorySegment result, MemorySegment error) {
        var mh$ = g_tls_database_lookup_certificate_issuer_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificates_issued_by$MH() {
        return RuntimeHelper.requireNonNull(constants$1372.const$3,"g_tls_database_lookup_certificates_issued_by");
    }
    /**
     * {@snippet :
     * struct _GList* g_tls_database_lookup_certificates_issued_by(struct _GTlsDatabase* self, struct _GByteArray* issuer_raw_dn, struct _GTlsInteraction* interaction, enum GTlsDatabaseLookupFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_tls_database_lookup_certificates_issued_by(MemorySegment self, MemorySegment issuer_raw_dn, MemorySegment interaction, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_tls_database_lookup_certificates_issued_by$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, issuer_raw_dn, interaction, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificates_issued_by_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1372.const$5,"g_tls_database_lookup_certificates_issued_by_async");
    }
    /**
     * {@snippet :
     * void g_tls_database_lookup_certificates_issued_by_async(struct _GTlsDatabase* self, struct _GByteArray* issuer_raw_dn, struct _GTlsInteraction* interaction, enum GTlsDatabaseLookupFlags flags, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_tls_database_lookup_certificates_issued_by_async(MemorySegment self, MemorySegment issuer_raw_dn, MemorySegment interaction, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_tls_database_lookup_certificates_issued_by_async$MH();
        try {
            mh$.invokeExact(self, issuer_raw_dn, interaction, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificates_issued_by_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1373.const$0,"g_tls_database_lookup_certificates_issued_by_finish");
    }
    /**
     * {@snippet :
     * struct _GList* g_tls_database_lookup_certificates_issued_by_finish(struct _GTlsDatabase* self, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_tls_database_lookup_certificates_issued_by_finish(MemorySegment self, MemorySegment result, MemorySegment error) {
        var mh$ = g_tls_database_lookup_certificates_issued_by_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_file_database_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1373.const$2,"g_tls_file_database_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_file_database_get_type();
     * }
     */
    public static long g_tls_file_database_get_type() {
        var mh$ = g_tls_file_database_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_file_database_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1373.const$3,"g_tls_file_database_new");
    }
    /**
     * {@snippet :
     * struct _GTlsDatabase* g_tls_file_database_new(char* anchors, struct _GError** error);
     * }
     */
    public static MemorySegment g_tls_file_database_new(MemorySegment anchors, MemorySegment error) {
        var mh$ = g_tls_file_database_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(anchors, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1376.const$1,"g_tls_interaction_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_interaction_get_type();
     * }
     */
    public static long g_tls_interaction_get_type() {
        var mh$ = g_tls_interaction_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_invoke_ask_password$MH() {
        return RuntimeHelper.requireNonNull(constants$1376.const$2,"g_tls_interaction_invoke_ask_password");
    }
    /**
     * {@snippet :
     * enum GTlsInteractionResult g_tls_interaction_invoke_ask_password(struct _GTlsInteraction* interaction, struct _GTlsPassword* password, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_tls_interaction_invoke_ask_password(MemorySegment interaction, MemorySegment password, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_tls_interaction_invoke_ask_password$MH();
        try {
            return (int)mh$.invokeExact(interaction, password, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_ask_password$MH() {
        return RuntimeHelper.requireNonNull(constants$1376.const$3,"g_tls_interaction_ask_password");
    }
    /**
     * {@snippet :
     * enum GTlsInteractionResult g_tls_interaction_ask_password(struct _GTlsInteraction* interaction, struct _GTlsPassword* password, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_tls_interaction_ask_password(MemorySegment interaction, MemorySegment password, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_tls_interaction_ask_password$MH();
        try {
            return (int)mh$.invokeExact(interaction, password, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_ask_password_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1376.const$5,"g_tls_interaction_ask_password_async");
    }
    /**
     * {@snippet :
     * void g_tls_interaction_ask_password_async(struct _GTlsInteraction* interaction, struct _GTlsPassword* password, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_tls_interaction_ask_password_async(MemorySegment interaction, MemorySegment password, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_tls_interaction_ask_password_async$MH();
        try {
            mh$.invokeExact(interaction, password, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_ask_password_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1377.const$0,"g_tls_interaction_ask_password_finish");
    }
    /**
     * {@snippet :
     * enum GTlsInteractionResult g_tls_interaction_ask_password_finish(struct _GTlsInteraction* interaction, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_tls_interaction_ask_password_finish(MemorySegment interaction, MemorySegment result, MemorySegment error) {
        var mh$ = g_tls_interaction_ask_password_finish$MH();
        try {
            return (int)mh$.invokeExact(interaction, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_invoke_request_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$1377.const$1,"g_tls_interaction_invoke_request_certificate");
    }
    /**
     * {@snippet :
     * enum GTlsInteractionResult g_tls_interaction_invoke_request_certificate(struct _GTlsInteraction* interaction, struct _GTlsConnection* connection, enum GTlsCertificateRequestFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_tls_interaction_invoke_request_certificate(MemorySegment interaction, MemorySegment connection, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_tls_interaction_invoke_request_certificate$MH();
        try {
            return (int)mh$.invokeExact(interaction, connection, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_request_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$1377.const$2,"g_tls_interaction_request_certificate");
    }
    /**
     * {@snippet :
     * enum GTlsInteractionResult g_tls_interaction_request_certificate(struct _GTlsInteraction* interaction, struct _GTlsConnection* connection, enum GTlsCertificateRequestFlags flags, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_tls_interaction_request_certificate(MemorySegment interaction, MemorySegment connection, int flags, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_tls_interaction_request_certificate$MH();
        try {
            return (int)mh$.invokeExact(interaction, connection, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_request_certificate_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1377.const$4,"g_tls_interaction_request_certificate_async");
    }
    /**
     * {@snippet :
     * void g_tls_interaction_request_certificate_async(struct _GTlsInteraction* interaction, struct _GTlsConnection* connection, enum GTlsCertificateRequestFlags flags, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_tls_interaction_request_certificate_async(MemorySegment interaction, MemorySegment connection, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_tls_interaction_request_certificate_async$MH();
        try {
            mh$.invokeExact(interaction, connection, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_request_certificate_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1377.const$5,"g_tls_interaction_request_certificate_finish");
    }
    /**
     * {@snippet :
     * enum GTlsInteractionResult g_tls_interaction_request_certificate_finish(struct _GTlsInteraction* interaction, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_tls_interaction_request_certificate_finish(MemorySegment interaction, MemorySegment result, MemorySegment error) {
        var mh$ = g_tls_interaction_request_certificate_finish$MH();
        try {
            return (int)mh$.invokeExact(interaction, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1379.const$4,"g_tls_password_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_password_get_type();
     * }
     */
    public static long g_tls_password_get_type() {
        var mh$ = g_tls_password_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1379.const$5,"g_tls_password_new");
    }
    /**
     * {@snippet :
     * struct _GTlsPassword* g_tls_password_new(enum _GTlsPasswordFlags flags, char* description);
     * }
     */
    public static MemorySegment g_tls_password_new(int flags, MemorySegment description) {
        var mh$ = g_tls_password_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(flags, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1380.const$0,"g_tls_password_get_value");
    }
    /**
     * {@snippet :
     * unsigned char* g_tls_password_get_value(struct _GTlsPassword* password, unsigned long* length);
     * }
     */
    public static MemorySegment g_tls_password_get_value(MemorySegment password, MemorySegment length) {
        var mh$ = g_tls_password_get_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(password, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1380.const$1,"g_tls_password_set_value");
    }
    /**
     * {@snippet :
     * void g_tls_password_set_value(struct _GTlsPassword* password, unsigned char* value, long length);
     * }
     */
    public static void g_tls_password_set_value(MemorySegment password, MemorySegment value, long length) {
        var mh$ = g_tls_password_set_value$MH();
        try {
            mh$.invokeExact(password, value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_set_value_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1380.const$3,"g_tls_password_set_value_full");
    }
    /**
     * {@snippet :
     * void g_tls_password_set_value_full(struct _GTlsPassword* password, unsigned char* value, long length, void (*destroy)(void*));
     * }
     */
    public static void g_tls_password_set_value_full(MemorySegment password, MemorySegment value, long length, MemorySegment destroy) {
        var mh$ = g_tls_password_set_value_full$MH();
        try {
            mh$.invokeExact(password, value, length, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1380.const$4,"g_tls_password_get_flags");
    }
    /**
     * {@snippet :
     * enum _GTlsPasswordFlags g_tls_password_get_flags(struct _GTlsPassword* password);
     * }
     */
    public static int g_tls_password_get_flags(MemorySegment password) {
        var mh$ = g_tls_password_get_flags$MH();
        try {
            return (int)mh$.invokeExact(password);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1380.const$5,"g_tls_password_set_flags");
    }
    /**
     * {@snippet :
     * void g_tls_password_set_flags(struct _GTlsPassword* password, enum _GTlsPasswordFlags flags);
     * }
     */
    public static void g_tls_password_set_flags(MemorySegment password, int flags) {
        var mh$ = g_tls_password_set_flags$MH();
        try {
            mh$.invokeExact(password, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1381.const$0,"g_tls_password_get_description");
    }
    /**
     * {@snippet :
     * char* g_tls_password_get_description(struct _GTlsPassword* password);
     * }
     */
    public static MemorySegment g_tls_password_get_description(MemorySegment password) {
        var mh$ = g_tls_password_get_description$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(password);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_set_description$MH() {
        return RuntimeHelper.requireNonNull(constants$1381.const$1,"g_tls_password_set_description");
    }
    /**
     * {@snippet :
     * void g_tls_password_set_description(struct _GTlsPassword* password, char* description);
     * }
     */
    public static void g_tls_password_set_description(MemorySegment password, MemorySegment description) {
        var mh$ = g_tls_password_set_description$MH();
        try {
            mh$.invokeExact(password, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_get_warning$MH() {
        return RuntimeHelper.requireNonNull(constants$1381.const$2,"g_tls_password_get_warning");
    }
    /**
     * {@snippet :
     * char* g_tls_password_get_warning(struct _GTlsPassword* password);
     * }
     */
    public static MemorySegment g_tls_password_get_warning(MemorySegment password) {
        var mh$ = g_tls_password_get_warning$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(password);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_set_warning$MH() {
        return RuntimeHelper.requireNonNull(constants$1381.const$3,"g_tls_password_set_warning");
    }
    /**
     * {@snippet :
     * void g_tls_password_set_warning(struct _GTlsPassword* password, char* warning);
     * }
     */
    public static void g_tls_password_set_warning(MemorySegment password, MemorySegment warning) {
        var mh$ = g_tls_password_set_warning$MH();
        try {
            mh$.invokeExact(password, warning);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_server_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1381.const$5,"g_tls_server_connection_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_tls_server_connection_get_type();
     * }
     */
    public static long g_tls_server_connection_get_type() {
        var mh$ = g_tls_server_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_server_connection_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1382.const$0,"g_tls_server_connection_new");
    }
    /**
     * {@snippet :
     * struct _GIOStream* g_tls_server_connection_new(struct _GIOStream* base_io_stream, struct _GTlsCertificate* certificate, struct _GError** error);
     * }
     */
    public static MemorySegment g_tls_server_connection_new(MemorySegment base_io_stream, MemorySegment certificate, MemorySegment error) {
        var mh$ = g_tls_server_connection_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(base_io_stream, certificate, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GUnixConnection* GUnixConnection_autoptr;
     * }
     */
    public static final AddressLayout GUnixConnection_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GUnixConnection_listautoptr;
     * }
     */
    public static final AddressLayout GUnixConnection_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GUnixConnection_slistautoptr;
     * }
     */
    public static final AddressLayout GUnixConnection_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GUnixConnection_queueautoptr;
     * }
     */
    public static final AddressLayout GUnixConnection_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle g_unix_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1382.const$4,"g_unix_connection_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_unix_connection_get_type();
     * }
     */
    public static long g_unix_connection_get_type() {
        var mh$ = g_unix_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_send_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$1382.const$5,"g_unix_connection_send_fd");
    }
    /**
     * {@snippet :
     * int g_unix_connection_send_fd(struct _GUnixConnection* connection, int fd, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_unix_connection_send_fd(MemorySegment connection, int fd, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_unix_connection_send_fd$MH();
        try {
            return (int)mh$.invokeExact(connection, fd, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_receive_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$1383.const$0,"g_unix_connection_receive_fd");
    }
    /**
     * {@snippet :
     * int g_unix_connection_receive_fd(struct _GUnixConnection* connection, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_unix_connection_receive_fd(MemorySegment connection, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_unix_connection_receive_fd$MH();
        try {
            return (int)mh$.invokeExact(connection, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_send_credentials$MH() {
        return RuntimeHelper.requireNonNull(constants$1383.const$1,"g_unix_connection_send_credentials");
    }
    /**
     * {@snippet :
     * int g_unix_connection_send_credentials(struct _GUnixConnection* connection, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static int g_unix_connection_send_credentials(MemorySegment connection, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_unix_connection_send_credentials$MH();
        try {
            return (int)mh$.invokeExact(connection, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_send_credentials_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1383.const$3,"g_unix_connection_send_credentials_async");
    }
    /**
     * {@snippet :
     * void g_unix_connection_send_credentials_async(struct _GUnixConnection* connection, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_unix_connection_send_credentials_async(MemorySegment connection, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_unix_connection_send_credentials_async$MH();
        try {
            mh$.invokeExact(connection, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_send_credentials_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1383.const$4,"g_unix_connection_send_credentials_finish");
    }
    /**
     * {@snippet :
     * int g_unix_connection_send_credentials_finish(struct _GUnixConnection* connection, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_unix_connection_send_credentials_finish(MemorySegment connection, MemorySegment result, MemorySegment error) {
        var mh$ = g_unix_connection_send_credentials_finish$MH();
        try {
            return (int)mh$.invokeExact(connection, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_receive_credentials$MH() {
        return RuntimeHelper.requireNonNull(constants$1383.const$5,"g_unix_connection_receive_credentials");
    }
    /**
     * {@snippet :
     * struct _GCredentials* g_unix_connection_receive_credentials(struct _GUnixConnection* connection, struct _GCancellable* cancellable, struct _GError** error);
     * }
     */
    public static MemorySegment g_unix_connection_receive_credentials(MemorySegment connection, MemorySegment cancellable, MemorySegment error) {
        var mh$ = g_unix_connection_receive_credentials$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_receive_credentials_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1384.const$1,"g_unix_connection_receive_credentials_async");
    }
    /**
     * {@snippet :
     * void g_unix_connection_receive_credentials_async(struct _GUnixConnection* connection, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_unix_connection_receive_credentials_async(MemorySegment connection, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_unix_connection_receive_credentials_async$MH();
        try {
            mh$.invokeExact(connection, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_receive_credentials_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1384.const$2,"g_unix_connection_receive_credentials_finish");
    }
    /**
     * {@snippet :
     * struct _GCredentials* g_unix_connection_receive_credentials_finish(struct _GUnixConnection* connection, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static MemorySegment g_unix_connection_receive_credentials_finish(MemorySegment connection, MemorySegment result, MemorySegment error) {
        var mh$ = g_unix_connection_receive_credentials_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(connection, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GUnixCredentialsMessage* GUnixCredentialsMessage_autoptr;
     * }
     */
    public static final AddressLayout GUnixCredentialsMessage_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GUnixCredentialsMessage_listautoptr;
     * }
     */
    public static final AddressLayout GUnixCredentialsMessage_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GUnixCredentialsMessage_slistautoptr;
     * }
     */
    public static final AddressLayout GUnixCredentialsMessage_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GUnixCredentialsMessage_queueautoptr;
     * }
     */
    public static final AddressLayout GUnixCredentialsMessage_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle g_unix_credentials_message_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1385.const$4,"g_unix_credentials_message_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_unix_credentials_message_get_type();
     * }
     */
    public static long g_unix_credentials_message_get_type() {
        var mh$ = g_unix_credentials_message_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_credentials_message_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1385.const$5,"g_unix_credentials_message_new");
    }
    /**
     * {@snippet :
     * struct _GSocketControlMessage* g_unix_credentials_message_new();
     * }
     */
    public static MemorySegment g_unix_credentials_message_new() {
        var mh$ = g_unix_credentials_message_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_credentials_message_new_with_credentials$MH() {
        return RuntimeHelper.requireNonNull(constants$1386.const$0,"g_unix_credentials_message_new_with_credentials");
    }
    /**
     * {@snippet :
     * struct _GSocketControlMessage* g_unix_credentials_message_new_with_credentials(struct _GCredentials* credentials);
     * }
     */
    public static MemorySegment g_unix_credentials_message_new_with_credentials(MemorySegment credentials) {
        var mh$ = g_unix_credentials_message_new_with_credentials$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(credentials);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_credentials_message_get_credentials$MH() {
        return RuntimeHelper.requireNonNull(constants$1386.const$1,"g_unix_credentials_message_get_credentials");
    }
    /**
     * {@snippet :
     * struct _GCredentials* g_unix_credentials_message_get_credentials(struct _GUnixCredentialsMessage* message);
     * }
     */
    public static MemorySegment g_unix_credentials_message_get_credentials(MemorySegment message) {
        var mh$ = g_unix_credentials_message_get_credentials$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_credentials_message_is_supported$MH() {
        return RuntimeHelper.requireNonNull(constants$1386.const$2,"g_unix_credentials_message_is_supported");
    }
    /**
     * {@snippet :
     * int g_unix_credentials_message_is_supported();
     * }
     */
    public static int g_unix_credentials_message_is_supported() {
        var mh$ = g_unix_credentials_message_is_supported$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GUnixFDList* GUnixFDList_autoptr;
     * }
     */
    public static final AddressLayout GUnixFDList_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GUnixFDList_listautoptr;
     * }
     */
    public static final AddressLayout GUnixFDList_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GUnixFDList_slistautoptr;
     * }
     */
    public static final AddressLayout GUnixFDList_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GUnixFDList_queueautoptr;
     * }
     */
    public static final AddressLayout GUnixFDList_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle g_unix_fd_list_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1388.const$4,"g_unix_fd_list_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_unix_fd_list_get_type();
     * }
     */
    public static long g_unix_fd_list_get_type() {
        var mh$ = g_unix_fd_list_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1388.const$5,"g_unix_fd_list_new");
    }
    /**
     * {@snippet :
     * struct _GUnixFDList* g_unix_fd_list_new();
     * }
     */
    public static MemorySegment g_unix_fd_list_new() {
        var mh$ = g_unix_fd_list_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_new_from_array$MH() {
        return RuntimeHelper.requireNonNull(constants$1389.const$0,"g_unix_fd_list_new_from_array");
    }
    /**
     * {@snippet :
     * struct _GUnixFDList* g_unix_fd_list_new_from_array(int* fds, int n_fds);
     * }
     */
    public static MemorySegment g_unix_fd_list_new_from_array(MemorySegment fds, int n_fds) {
        var mh$ = g_unix_fd_list_new_from_array$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fds, n_fds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_append$MH() {
        return RuntimeHelper.requireNonNull(constants$1389.const$1,"g_unix_fd_list_append");
    }
    /**
     * {@snippet :
     * int g_unix_fd_list_append(struct _GUnixFDList* list, int fd, struct _GError** error);
     * }
     */
    public static int g_unix_fd_list_append(MemorySegment list, int fd, MemorySegment error) {
        var mh$ = g_unix_fd_list_append$MH();
        try {
            return (int)mh$.invokeExact(list, fd, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_get_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1389.const$2,"g_unix_fd_list_get_length");
    }
    /**
     * {@snippet :
     * int g_unix_fd_list_get_length(struct _GUnixFDList* list);
     * }
     */
    public static int g_unix_fd_list_get_length(MemorySegment list) {
        var mh$ = g_unix_fd_list_get_length$MH();
        try {
            return (int)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1389.const$3,"g_unix_fd_list_get");
    }
    /**
     * {@snippet :
     * int g_unix_fd_list_get(struct _GUnixFDList* list, int index_, struct _GError** error);
     * }
     */
    public static int g_unix_fd_list_get(MemorySegment list, int index_, MemorySegment error) {
        var mh$ = g_unix_fd_list_get$MH();
        try {
            return (int)mh$.invokeExact(list, index_, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_peek_fds$MH() {
        return RuntimeHelper.requireNonNull(constants$1389.const$4,"g_unix_fd_list_peek_fds");
    }
    /**
     * {@snippet :
     * int* g_unix_fd_list_peek_fds(struct _GUnixFDList* list, int* length);
     * }
     */
    public static MemorySegment g_unix_fd_list_peek_fds(MemorySegment list, MemorySegment length) {
        var mh$ = g_unix_fd_list_peek_fds$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_steal_fds$MH() {
        return RuntimeHelper.requireNonNull(constants$1389.const$5,"g_unix_fd_list_steal_fds");
    }
    /**
     * {@snippet :
     * int* g_unix_fd_list_steal_fds(struct _GUnixFDList* list, int* length);
     * }
     */
    public static MemorySegment g_unix_fd_list_steal_fds(MemorySegment list, MemorySegment length) {
        var mh$ = g_unix_fd_list_steal_fds$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GUnixSocketAddress* GUnixSocketAddress_autoptr;
     * }
     */
    public static final AddressLayout GUnixSocketAddress_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GUnixSocketAddress_listautoptr;
     * }
     */
    public static final AddressLayout GUnixSocketAddress_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GUnixSocketAddress_slistautoptr;
     * }
     */
    public static final AddressLayout GUnixSocketAddress_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GUnixSocketAddress_queueautoptr;
     * }
     */
    public static final AddressLayout GUnixSocketAddress_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle g_unix_socket_address_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1390.const$3,"g_unix_socket_address_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_unix_socket_address_get_type();
     * }
     */
    public static long g_unix_socket_address_get_type() {
        var mh$ = g_unix_socket_address_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1390.const$4,"g_unix_socket_address_new");
    }
    /**
     * {@snippet :
     * struct _GSocketAddress* g_unix_socket_address_new(char* path);
     * }
     */
    public static MemorySegment g_unix_socket_address_new(MemorySegment path) {
        var mh$ = g_unix_socket_address_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_new_abstract$MH() {
        return RuntimeHelper.requireNonNull(constants$1390.const$5,"g_unix_socket_address_new_abstract");
    }
    /**
     * {@snippet :
     * struct _GSocketAddress* g_unix_socket_address_new_abstract(char* path, int path_len);
     * }
     */
    public static MemorySegment g_unix_socket_address_new_abstract(MemorySegment path, int path_len) {
        var mh$ = g_unix_socket_address_new_abstract$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(path, path_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_new_with_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1391.const$0,"g_unix_socket_address_new_with_type");
    }
    /**
     * {@snippet :
     * struct _GSocketAddress* g_unix_socket_address_new_with_type(char* path, int path_len, enum GUnixSocketAddressType type);
     * }
     */
    public static MemorySegment g_unix_socket_address_new_with_type(MemorySegment path, int path_len, int type) {
        var mh$ = g_unix_socket_address_new_with_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(path, path_len, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_get_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1391.const$1,"g_unix_socket_address_get_path");
    }
    /**
     * {@snippet :
     * char* g_unix_socket_address_get_path(struct _GUnixSocketAddress* address);
     * }
     */
    public static MemorySegment g_unix_socket_address_get_path(MemorySegment address) {
        var mh$ = g_unix_socket_address_get_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_get_path_len$MH() {
        return RuntimeHelper.requireNonNull(constants$1391.const$2,"g_unix_socket_address_get_path_len");
    }
    /**
     * {@snippet :
     * unsigned long g_unix_socket_address_get_path_len(struct _GUnixSocketAddress* address);
     * }
     */
    public static long g_unix_socket_address_get_path_len(MemorySegment address) {
        var mh$ = g_unix_socket_address_get_path_len$MH();
        try {
            return (long)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_get_address_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1391.const$3,"g_unix_socket_address_get_address_type");
    }
    /**
     * {@snippet :
     * enum GUnixSocketAddressType g_unix_socket_address_get_address_type(struct _GUnixSocketAddress* address);
     * }
     */
    public static int g_unix_socket_address_get_address_type(MemorySegment address) {
        var mh$ = g_unix_socket_address_get_address_type$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_get_is_abstract$MH() {
        return RuntimeHelper.requireNonNull(constants$1391.const$4,"g_unix_socket_address_get_is_abstract");
    }
    /**
     * {@snippet :
     * int g_unix_socket_address_get_is_abstract(struct _GUnixSocketAddress* address);
     * }
     */
    public static int g_unix_socket_address_get_is_abstract(MemorySegment address) {
        var mh$ = g_unix_socket_address_get_is_abstract$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_abstract_names_supported$MH() {
        return RuntimeHelper.requireNonNull(constants$1391.const$5,"g_unix_socket_address_abstract_names_supported");
    }
    /**
     * {@snippet :
     * int g_unix_socket_address_abstract_names_supported();
     * }
     */
    public static int g_unix_socket_address_abstract_names_supported() {
        var mh$ = g_unix_socket_address_abstract_names_supported$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1398.const$4,"g_vfs_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_vfs_get_type();
     * }
     */
    public static long g_vfs_get_type() {
        var mh$ = g_vfs_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_is_active$MH() {
        return RuntimeHelper.requireNonNull(constants$1398.const$5,"g_vfs_is_active");
    }
    /**
     * {@snippet :
     * int g_vfs_is_active(struct _GVfs* vfs);
     * }
     */
    public static int g_vfs_is_active(MemorySegment vfs) {
        var mh$ = g_vfs_is_active$MH();
        try {
            return (int)mh$.invokeExact(vfs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_file_for_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1399.const$0,"g_vfs_get_file_for_path");
    }
    /**
     * {@snippet :
     * struct _GFile* g_vfs_get_file_for_path(struct _GVfs* vfs, char* path);
     * }
     */
    public static MemorySegment g_vfs_get_file_for_path(MemorySegment vfs, MemorySegment path) {
        var mh$ = g_vfs_get_file_for_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(vfs, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_file_for_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$1399.const$1,"g_vfs_get_file_for_uri");
    }
    /**
     * {@snippet :
     * struct _GFile* g_vfs_get_file_for_uri(struct _GVfs* vfs, char* uri);
     * }
     */
    public static MemorySegment g_vfs_get_file_for_uri(MemorySegment vfs, MemorySegment uri) {
        var mh$ = g_vfs_get_file_for_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(vfs, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_supported_uri_schemes$MH() {
        return RuntimeHelper.requireNonNull(constants$1399.const$2,"g_vfs_get_supported_uri_schemes");
    }
    /**
     * {@snippet :
     * char** g_vfs_get_supported_uri_schemes(struct _GVfs* vfs);
     * }
     */
    public static MemorySegment g_vfs_get_supported_uri_schemes(MemorySegment vfs) {
        var mh$ = g_vfs_get_supported_uri_schemes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(vfs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_parse_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1399.const$3,"g_vfs_parse_name");
    }
    /**
     * {@snippet :
     * struct _GFile* g_vfs_parse_name(struct _GVfs* vfs, char* parse_name);
     * }
     */
    public static MemorySegment g_vfs_parse_name(MemorySegment vfs, MemorySegment parse_name) {
        var mh$ = g_vfs_parse_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(vfs, parse_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1399.const$4,"g_vfs_get_default");
    }
    /**
     * {@snippet :
     * struct _GVfs* g_vfs_get_default();
     * }
     */
    public static MemorySegment g_vfs_get_default() {
        var mh$ = g_vfs_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_local$MH() {
        return RuntimeHelper.requireNonNull(constants$1399.const$5,"g_vfs_get_local");
    }
    /**
     * {@snippet :
     * struct _GVfs* g_vfs_get_local();
     * }
     */
    public static MemorySegment g_vfs_get_local() {
        var mh$ = g_vfs_get_local$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_register_uri_scheme$MH() {
        return RuntimeHelper.requireNonNull(constants$1400.const$4,"g_vfs_register_uri_scheme");
    }
    /**
     * {@snippet :
     * int g_vfs_register_uri_scheme(struct _GVfs* vfs, char* scheme, struct _GFile* (*uri_func)(struct _GVfs*,char*,void*), void* uri_data, void (*uri_destroy)(void*), struct _GFile* (*parse_name_func)(struct _GVfs*,char*,void*), void* parse_name_data, void (*parse_name_destroy)(void*));
     * }
     */
    public static int g_vfs_register_uri_scheme(MemorySegment vfs, MemorySegment scheme, MemorySegment uri_func, MemorySegment uri_data, MemorySegment uri_destroy, MemorySegment parse_name_func, MemorySegment parse_name_data, MemorySegment parse_name_destroy) {
        var mh$ = g_vfs_register_uri_scheme$MH();
        try {
            return (int)mh$.invokeExact(vfs, scheme, uri_func, uri_data, uri_destroy, parse_name_func, parse_name_data, parse_name_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_unregister_uri_scheme$MH() {
        return RuntimeHelper.requireNonNull(constants$1400.const$5,"g_vfs_unregister_uri_scheme");
    }
    /**
     * {@snippet :
     * int g_vfs_unregister_uri_scheme(struct _GVfs* vfs, char* scheme);
     * }
     */
    public static int g_vfs_unregister_uri_scheme(MemorySegment vfs, MemorySegment scheme) {
        var mh$ = g_vfs_unregister_uri_scheme$MH();
        try {
            return (int)mh$.invokeExact(vfs, scheme);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1408.const$1,"g_volume_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_volume_get_type();
     * }
     */
    public static long g_volume_get_type() {
        var mh$ = g_volume_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1408.const$2,"g_volume_get_name");
    }
    /**
     * {@snippet :
     * char* g_volume_get_name(struct _GVolume* volume);
     * }
     */
    public static MemorySegment g_volume_get_name(MemorySegment volume) {
        var mh$ = g_volume_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1408.const$3,"g_volume_get_icon");
    }
    /**
     * {@snippet :
     * struct _GIcon* g_volume_get_icon(struct _GVolume* volume);
     * }
     */
    public static MemorySegment g_volume_get_icon(MemorySegment volume) {
        var mh$ = g_volume_get_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_symbolic_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1408.const$4,"g_volume_get_symbolic_icon");
    }
    /**
     * {@snippet :
     * struct _GIcon* g_volume_get_symbolic_icon(struct _GVolume* volume);
     * }
     */
    public static MemorySegment g_volume_get_symbolic_icon(MemorySegment volume) {
        var mh$ = g_volume_get_symbolic_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_uuid$MH() {
        return RuntimeHelper.requireNonNull(constants$1408.const$5,"g_volume_get_uuid");
    }
    /**
     * {@snippet :
     * char* g_volume_get_uuid(struct _GVolume* volume);
     * }
     */
    public static MemorySegment g_volume_get_uuid(MemorySegment volume) {
        var mh$ = g_volume_get_uuid$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_drive$MH() {
        return RuntimeHelper.requireNonNull(constants$1409.const$0,"g_volume_get_drive");
    }
    /**
     * {@snippet :
     * struct _GDrive* g_volume_get_drive(struct _GVolume* volume);
     * }
     */
    public static MemorySegment g_volume_get_drive(MemorySegment volume) {
        var mh$ = g_volume_get_drive$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_mount$MH() {
        return RuntimeHelper.requireNonNull(constants$1409.const$1,"g_volume_get_mount");
    }
    /**
     * {@snippet :
     * struct _GMount* g_volume_get_mount(struct _GVolume* volume);
     * }
     */
    public static MemorySegment g_volume_get_mount(MemorySegment volume) {
        var mh$ = g_volume_get_mount$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_can_mount$MH() {
        return RuntimeHelper.requireNonNull(constants$1409.const$2,"g_volume_can_mount");
    }
    /**
     * {@snippet :
     * int g_volume_can_mount(struct _GVolume* volume);
     * }
     */
    public static int g_volume_can_mount(MemorySegment volume) {
        var mh$ = g_volume_can_mount$MH();
        try {
            return (int)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_can_eject$MH() {
        return RuntimeHelper.requireNonNull(constants$1409.const$3,"g_volume_can_eject");
    }
    /**
     * {@snippet :
     * int g_volume_can_eject(struct _GVolume* volume);
     * }
     */
    public static int g_volume_can_eject(MemorySegment volume) {
        var mh$ = g_volume_can_eject$MH();
        try {
            return (int)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_should_automount$MH() {
        return RuntimeHelper.requireNonNull(constants$1409.const$4,"g_volume_should_automount");
    }
    /**
     * {@snippet :
     * int g_volume_should_automount(struct _GVolume* volume);
     * }
     */
    public static int g_volume_should_automount(MemorySegment volume) {
        var mh$ = g_volume_should_automount$MH();
        try {
            return (int)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_mount$MH() {
        return RuntimeHelper.requireNonNull(constants$1410.const$0,"g_volume_mount");
    }
    /**
     * {@snippet :
     * void g_volume_mount(struct _GVolume* volume, enum GMountMountFlags flags, struct _GMountOperation* mount_operation, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_volume_mount(MemorySegment volume, int flags, MemorySegment mount_operation, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_volume_mount$MH();
        try {
            mh$.invokeExact(volume, flags, mount_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_mount_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1410.const$1,"g_volume_mount_finish");
    }
    /**
     * {@snippet :
     * int g_volume_mount_finish(struct _GVolume* volume, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_volume_mount_finish(MemorySegment volume, MemorySegment result, MemorySegment error) {
        var mh$ = g_volume_mount_finish$MH();
        try {
            return (int)mh$.invokeExact(volume, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_eject$MH() {
        return RuntimeHelper.requireNonNull(constants$1410.const$3,"g_volume_eject");
    }
    /**
     * {@snippet :
     * void g_volume_eject(struct _GVolume* volume, enum GMountUnmountFlags flags, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_volume_eject(MemorySegment volume, int flags, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_volume_eject$MH();
        try {
            mh$.invokeExact(volume, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_eject_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1410.const$4,"g_volume_eject_finish");
    }
    /**
     * {@snippet :
     * int g_volume_eject_finish(struct _GVolume* volume, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_volume_eject_finish(MemorySegment volume, MemorySegment result, MemorySegment error) {
        var mh$ = g_volume_eject_finish$MH();
        try {
            return (int)mh$.invokeExact(volume, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_identifier$MH() {
        return RuntimeHelper.requireNonNull(constants$1410.const$5,"g_volume_get_identifier");
    }
    /**
     * {@snippet :
     * char* g_volume_get_identifier(struct _GVolume* volume, char* kind);
     * }
     */
    public static MemorySegment g_volume_get_identifier(MemorySegment volume, MemorySegment kind) {
        var mh$ = g_volume_get_identifier$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume, kind);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_enumerate_identifiers$MH() {
        return RuntimeHelper.requireNonNull(constants$1411.const$0,"g_volume_enumerate_identifiers");
    }
    /**
     * {@snippet :
     * char** g_volume_enumerate_identifiers(struct _GVolume* volume);
     * }
     */
    public static MemorySegment g_volume_enumerate_identifiers(MemorySegment volume) {
        var mh$ = g_volume_enumerate_identifiers$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_activation_root$MH() {
        return RuntimeHelper.requireNonNull(constants$1411.const$1,"g_volume_get_activation_root");
    }
    /**
     * {@snippet :
     * struct _GFile* g_volume_get_activation_root(struct _GVolume* volume);
     * }
     */
    public static MemorySegment g_volume_get_activation_root(MemorySegment volume) {
        var mh$ = g_volume_get_activation_root$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_eject_with_operation$MH() {
        return RuntimeHelper.requireNonNull(constants$1411.const$3,"g_volume_eject_with_operation");
    }
    /**
     * {@snippet :
     * void g_volume_eject_with_operation(struct _GVolume* volume, enum GMountUnmountFlags flags, struct _GMountOperation* mount_operation, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void g_volume_eject_with_operation(MemorySegment volume, int flags, MemorySegment mount_operation, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = g_volume_eject_with_operation$MH();
        try {
            mh$.invokeExact(volume, flags, mount_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_eject_with_operation_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1411.const$4,"g_volume_eject_with_operation_finish");
    }
    /**
     * {@snippet :
     * int g_volume_eject_with_operation_finish(struct _GVolume* volume, struct _GAsyncResult* result, struct _GError** error);
     * }
     */
    public static int g_volume_eject_with_operation_finish(MemorySegment volume, MemorySegment result, MemorySegment error) {
        var mh$ = g_volume_eject_with_operation_finish$MH();
        try {
            return (int)mh$.invokeExact(volume, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_sort_key$MH() {
        return RuntimeHelper.requireNonNull(constants$1411.const$5,"g_volume_get_sort_key");
    }
    /**
     * {@snippet :
     * char* g_volume_get_sort_key(struct _GVolume* volume);
     * }
     */
    public static MemorySegment g_volume_get_sort_key(MemorySegment volume) {
        var mh$ = g_volume_get_sort_key$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_compressor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1412.const$1,"g_zlib_compressor_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_zlib_compressor_get_type();
     * }
     */
    public static long g_zlib_compressor_get_type() {
        var mh$ = g_zlib_compressor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_compressor_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1412.const$3,"g_zlib_compressor_new");
    }
    /**
     * {@snippet :
     * struct _GZlibCompressor* g_zlib_compressor_new(enum GZlibCompressorFormat format, int level);
     * }
     */
    public static MemorySegment g_zlib_compressor_new(int format, int level) {
        var mh$ = g_zlib_compressor_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(format, level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_compressor_get_file_info$MH() {
        return RuntimeHelper.requireNonNull(constants$1412.const$4,"g_zlib_compressor_get_file_info");
    }
    /**
     * {@snippet :
     * struct _GFileInfo* g_zlib_compressor_get_file_info(struct _GZlibCompressor* compressor);
     * }
     */
    public static MemorySegment g_zlib_compressor_get_file_info(MemorySegment compressor) {
        var mh$ = g_zlib_compressor_get_file_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(compressor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_compressor_set_file_info$MH() {
        return RuntimeHelper.requireNonNull(constants$1412.const$5,"g_zlib_compressor_set_file_info");
    }
    /**
     * {@snippet :
     * void g_zlib_compressor_set_file_info(struct _GZlibCompressor* compressor, struct _GFileInfo* file_info);
     * }
     */
    public static void g_zlib_compressor_set_file_info(MemorySegment compressor, MemorySegment file_info) {
        var mh$ = g_zlib_compressor_set_file_info$MH();
        try {
            mh$.invokeExact(compressor, file_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_decompressor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1413.const$1,"g_zlib_decompressor_get_type");
    }
    /**
     * {@snippet :
     * unsigned long g_zlib_decompressor_get_type();
     * }
     */
    public static long g_zlib_decompressor_get_type() {
        var mh$ = g_zlib_decompressor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_decompressor_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1413.const$2,"g_zlib_decompressor_new");
    }
    /**
     * {@snippet :
     * struct _GZlibDecompressor* g_zlib_decompressor_new(enum GZlibCompressorFormat format);
     * }
     */
    public static MemorySegment g_zlib_decompressor_new(int format) {
        var mh$ = g_zlib_decompressor_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_decompressor_get_file_info$MH() {
        return RuntimeHelper.requireNonNull(constants$1413.const$3,"g_zlib_decompressor_get_file_info");
    }
    /**
     * {@snippet :
     * struct _GFileInfo* g_zlib_decompressor_get_file_info(struct _GZlibDecompressor* decompressor);
     * }
     */
    public static MemorySegment g_zlib_decompressor_get_file_info(MemorySegment decompressor) {
        var mh$ = g_zlib_decompressor_get_file_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(decompressor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GAction* GAction_autoptr;
     * }
     */
    public static final AddressLayout GAction_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GAction_listautoptr;
     * }
     */
    public static final AddressLayout GAction_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GAction_slistautoptr;
     * }
     */
    public static final AddressLayout GAction_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GAction_queueautoptr;
     * }
     */
    public static final AddressLayout GAction_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GActionMap* GActionMap_autoptr;
     * }
     */
    public static final AddressLayout GActionMap_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GActionMap_listautoptr;
     * }
     */
    public static final AddressLayout GActionMap_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GActionMap_slistautoptr;
     * }
     */
    public static final AddressLayout GActionMap_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GActionMap_queueautoptr;
     * }
     */
    public static final AddressLayout GActionMap_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GAppInfo* GAppInfo_autoptr;
     * }
     */
    public static final AddressLayout GAppInfo_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GAppInfo_listautoptr;
     * }
     */
    public static final AddressLayout GAppInfo_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GAppInfo_slistautoptr;
     * }
     */
    public static final AddressLayout GAppInfo_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GAppInfo_queueautoptr;
     * }
     */
    public static final AddressLayout GAppInfo_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GAppLaunchContext* GAppLaunchContext_autoptr;
     * }
     */
    public static final AddressLayout GAppLaunchContext_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GAppLaunchContext_listautoptr;
     * }
     */
    public static final AddressLayout GAppLaunchContext_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GAppLaunchContext_slistautoptr;
     * }
     */
    public static final AddressLayout GAppLaunchContext_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GAppLaunchContext_queueautoptr;
     * }
     */
    public static final AddressLayout GAppLaunchContext_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GAppInfoMonitor* GAppInfoMonitor_autoptr;
     * }
     */
    public static final AddressLayout GAppInfoMonitor_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GAppInfoMonitor_listautoptr;
     * }
     */
    public static final AddressLayout GAppInfoMonitor_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GAppInfoMonitor_slistautoptr;
     * }
     */
    public static final AddressLayout GAppInfoMonitor_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GAppInfoMonitor_queueautoptr;
     * }
     */
    public static final AddressLayout GAppInfoMonitor_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GApplicationCommandLine* GApplicationCommandLine_autoptr;
     * }
     */
    public static final AddressLayout GApplicationCommandLine_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GApplicationCommandLine_listautoptr;
     * }
     */
    public static final AddressLayout GApplicationCommandLine_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GApplicationCommandLine_slistautoptr;
     * }
     */
    public static final AddressLayout GApplicationCommandLine_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GApplicationCommandLine_queueautoptr;
     * }
     */
    public static final AddressLayout GApplicationCommandLine_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GApplication* GApplication_autoptr;
     * }
     */
    public static final AddressLayout GApplication_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GApplication_listautoptr;
     * }
     */
    public static final AddressLayout GApplication_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GApplication_slistautoptr;
     * }
     */
    public static final AddressLayout GApplication_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GApplication_queueautoptr;
     * }
     */
    public static final AddressLayout GApplication_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GAsyncInitable* GAsyncInitable_autoptr;
     * }
     */
    public static final AddressLayout GAsyncInitable_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GAsyncInitable_listautoptr;
     * }
     */
    public static final AddressLayout GAsyncInitable_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GAsyncInitable_slistautoptr;
     * }
     */
    public static final AddressLayout GAsyncInitable_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GAsyncInitable_queueautoptr;
     * }
     */
    public static final AddressLayout GAsyncInitable_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GAsyncResult* GAsyncResult_autoptr;
     * }
     */
    public static final AddressLayout GAsyncResult_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GAsyncResult_listautoptr;
     * }
     */
    public static final AddressLayout GAsyncResult_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GAsyncResult_slistautoptr;
     * }
     */
    public static final AddressLayout GAsyncResult_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GAsyncResult_queueautoptr;
     * }
     */
    public static final AddressLayout GAsyncResult_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GBufferedInputStream* GBufferedInputStream_autoptr;
     * }
     */
    public static final AddressLayout GBufferedInputStream_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GBufferedInputStream_listautoptr;
     * }
     */
    public static final AddressLayout GBufferedInputStream_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GBufferedInputStream_slistautoptr;
     * }
     */
    public static final AddressLayout GBufferedInputStream_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GBufferedInputStream_queueautoptr;
     * }
     */
    public static final AddressLayout GBufferedInputStream_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GBufferedOutputStream* GBufferedOutputStream_autoptr;
     * }
     */
    public static final AddressLayout GBufferedOutputStream_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GBufferedOutputStream_listautoptr;
     * }
     */
    public static final AddressLayout GBufferedOutputStream_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GBufferedOutputStream_slistautoptr;
     * }
     */
    public static final AddressLayout GBufferedOutputStream_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GBufferedOutputStream_queueautoptr;
     * }
     */
    public static final AddressLayout GBufferedOutputStream_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GBytesIcon* GBytesIcon_autoptr;
     * }
     */
    public static final AddressLayout GBytesIcon_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GBytesIcon_listautoptr;
     * }
     */
    public static final AddressLayout GBytesIcon_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GBytesIcon_slistautoptr;
     * }
     */
    public static final AddressLayout GBytesIcon_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GBytesIcon_queueautoptr;
     * }
     */
    public static final AddressLayout GBytesIcon_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GCancellable* GCancellable_autoptr;
     * }
     */
    public static final AddressLayout GCancellable_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GCancellable_listautoptr;
     * }
     */
    public static final AddressLayout GCancellable_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GCancellable_slistautoptr;
     * }
     */
    public static final AddressLayout GCancellable_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GCancellable_queueautoptr;
     * }
     */
    public static final AddressLayout GCancellable_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GCharsetConverter* GCharsetConverter_autoptr;
     * }
     */
    public static final AddressLayout GCharsetConverter_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GCharsetConverter_listautoptr;
     * }
     */
    public static final AddressLayout GCharsetConverter_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GCharsetConverter_slistautoptr;
     * }
     */
    public static final AddressLayout GCharsetConverter_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GCharsetConverter_queueautoptr;
     * }
     */
    public static final AddressLayout GCharsetConverter_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GConverter* GConverter_autoptr;
     * }
     */
    public static final AddressLayout GConverter_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GConverter_listautoptr;
     * }
     */
    public static final AddressLayout GConverter_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GConverter_slistautoptr;
     * }
     */
    public static final AddressLayout GConverter_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GConverter_queueautoptr;
     * }
     */
    public static final AddressLayout GConverter_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GConverterInputStream* GConverterInputStream_autoptr;
     * }
     */
    public static final AddressLayout GConverterInputStream_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GConverterInputStream_listautoptr;
     * }
     */
    public static final AddressLayout GConverterInputStream_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GConverterInputStream_slistautoptr;
     * }
     */
    public static final AddressLayout GConverterInputStream_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GConverterInputStream_queueautoptr;
     * }
     */
    public static final AddressLayout GConverterInputStream_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GConverterOutputStream* GConverterOutputStream_autoptr;
     * }
     */
    public static final AddressLayout GConverterOutputStream_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GConverterOutputStream_listautoptr;
     * }
     */
    public static final AddressLayout GConverterOutputStream_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GConverterOutputStream_slistautoptr;
     * }
     */
    public static final AddressLayout GConverterOutputStream_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GConverterOutputStream_queueautoptr;
     * }
     */
    public static final AddressLayout GConverterOutputStream_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GCredentials* GCredentials_autoptr;
     * }
     */
    public static final AddressLayout GCredentials_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GCredentials_listautoptr;
     * }
     */
    public static final AddressLayout GCredentials_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GCredentials_slistautoptr;
     * }
     */
    public static final AddressLayout GCredentials_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GCredentials_queueautoptr;
     * }
     */
    public static final AddressLayout GCredentials_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDatagramBased* GDatagramBased_autoptr;
     * }
     */
    public static final AddressLayout GDatagramBased_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDatagramBased_listautoptr;
     * }
     */
    public static final AddressLayout GDatagramBased_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDatagramBased_slistautoptr;
     * }
     */
    public static final AddressLayout GDatagramBased_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDatagramBased_queueautoptr;
     * }
     */
    public static final AddressLayout GDatagramBased_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDataInputStream* GDataInputStream_autoptr;
     * }
     */
    public static final AddressLayout GDataInputStream_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDataInputStream_listautoptr;
     * }
     */
    public static final AddressLayout GDataInputStream_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDataInputStream_slistautoptr;
     * }
     */
    public static final AddressLayout GDataInputStream_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDataInputStream_queueautoptr;
     * }
     */
    public static final AddressLayout GDataInputStream_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDataOutputStream* GDataOutputStream_autoptr;
     * }
     */
    public static final AddressLayout GDataOutputStream_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDataOutputStream_listautoptr;
     * }
     */
    public static final AddressLayout GDataOutputStream_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDataOutputStream_slistautoptr;
     * }
     */
    public static final AddressLayout GDataOutputStream_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDataOutputStream_queueautoptr;
     * }
     */
    public static final AddressLayout GDataOutputStream_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDBusActionGroup* GDBusActionGroup_autoptr;
     * }
     */
    public static final AddressLayout GDBusActionGroup_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusActionGroup_listautoptr;
     * }
     */
    public static final AddressLayout GDBusActionGroup_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusActionGroup_slistautoptr;
     * }
     */
    public static final AddressLayout GDBusActionGroup_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusActionGroup_queueautoptr;
     * }
     */
    public static final AddressLayout GDBusActionGroup_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDBusAuthObserver* GDBusAuthObserver_autoptr;
     * }
     */
    public static final AddressLayout GDBusAuthObserver_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusAuthObserver_listautoptr;
     * }
     */
    public static final AddressLayout GDBusAuthObserver_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusAuthObserver_slistautoptr;
     * }
     */
    public static final AddressLayout GDBusAuthObserver_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusAuthObserver_queueautoptr;
     * }
     */
    public static final AddressLayout GDBusAuthObserver_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDBusConnection* GDBusConnection_autoptr;
     * }
     */
    public static final AddressLayout GDBusConnection_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusConnection_listautoptr;
     * }
     */
    public static final AddressLayout GDBusConnection_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusConnection_slistautoptr;
     * }
     */
    public static final AddressLayout GDBusConnection_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusConnection_queueautoptr;
     * }
     */
    public static final AddressLayout GDBusConnection_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDBusInterface* GDBusInterface_autoptr;
     * }
     */
    public static final AddressLayout GDBusInterface_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusInterface_listautoptr;
     * }
     */
    public static final AddressLayout GDBusInterface_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusInterface_slistautoptr;
     * }
     */
    public static final AddressLayout GDBusInterface_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusInterface_queueautoptr;
     * }
     */
    public static final AddressLayout GDBusInterface_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDBusInterfaceSkeleton* GDBusInterfaceSkeleton_autoptr;
     * }
     */
    public static final AddressLayout GDBusInterfaceSkeleton_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusInterfaceSkeleton_listautoptr;
     * }
     */
    public static final AddressLayout GDBusInterfaceSkeleton_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusInterfaceSkeleton_slistautoptr;
     * }
     */
    public static final AddressLayout GDBusInterfaceSkeleton_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusInterfaceSkeleton_queueautoptr;
     * }
     */
    public static final AddressLayout GDBusInterfaceSkeleton_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDBusMenuModel* GDBusMenuModel_autoptr;
     * }
     */
    public static final AddressLayout GDBusMenuModel_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusMenuModel_listautoptr;
     * }
     */
    public static final AddressLayout GDBusMenuModel_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusMenuModel_slistautoptr;
     * }
     */
    public static final AddressLayout GDBusMenuModel_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusMenuModel_queueautoptr;
     * }
     */
    public static final AddressLayout GDBusMenuModel_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDBusMessage* GDBusMessage_autoptr;
     * }
     */
    public static final AddressLayout GDBusMessage_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusMessage_listautoptr;
     * }
     */
    public static final AddressLayout GDBusMessage_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusMessage_slistautoptr;
     * }
     */
    public static final AddressLayout GDBusMessage_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusMessage_queueautoptr;
     * }
     */
    public static final AddressLayout GDBusMessage_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDBusMethodInvocation* GDBusMethodInvocation_autoptr;
     * }
     */
    public static final AddressLayout GDBusMethodInvocation_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusMethodInvocation_listautoptr;
     * }
     */
    public static final AddressLayout GDBusMethodInvocation_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusMethodInvocation_slistautoptr;
     * }
     */
    public static final AddressLayout GDBusMethodInvocation_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusMethodInvocation_queueautoptr;
     * }
     */
    public static final AddressLayout GDBusMethodInvocation_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDBusNodeInfo* GDBusNodeInfo_autoptr;
     * }
     */
    public static final AddressLayout GDBusNodeInfo_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusNodeInfo_listautoptr;
     * }
     */
    public static final AddressLayout GDBusNodeInfo_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusNodeInfo_slistautoptr;
     * }
     */
    public static final AddressLayout GDBusNodeInfo_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusNodeInfo_queueautoptr;
     * }
     */
    public static final AddressLayout GDBusNodeInfo_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDBusObject* GDBusObject_autoptr;
     * }
     */
    public static final AddressLayout GDBusObject_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusObject_listautoptr;
     * }
     */
    public static final AddressLayout GDBusObject_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusObject_slistautoptr;
     * }
     */
    public static final AddressLayout GDBusObject_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusObject_queueautoptr;
     * }
     */
    public static final AddressLayout GDBusObject_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDBusObjectManagerClient* GDBusObjectManagerClient_autoptr;
     * }
     */
    public static final AddressLayout GDBusObjectManagerClient_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusObjectManagerClient_listautoptr;
     * }
     */
    public static final AddressLayout GDBusObjectManagerClient_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusObjectManagerClient_slistautoptr;
     * }
     */
    public static final AddressLayout GDBusObjectManagerClient_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusObjectManagerClient_queueautoptr;
     * }
     */
    public static final AddressLayout GDBusObjectManagerClient_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDBusObjectManager* GDBusObjectManager_autoptr;
     * }
     */
    public static final AddressLayout GDBusObjectManager_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusObjectManager_listautoptr;
     * }
     */
    public static final AddressLayout GDBusObjectManager_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusObjectManager_slistautoptr;
     * }
     */
    public static final AddressLayout GDBusObjectManager_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusObjectManager_queueautoptr;
     * }
     */
    public static final AddressLayout GDBusObjectManager_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDBusObjectManagerServer* GDBusObjectManagerServer_autoptr;
     * }
     */
    public static final AddressLayout GDBusObjectManagerServer_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusObjectManagerServer_listautoptr;
     * }
     */
    public static final AddressLayout GDBusObjectManagerServer_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusObjectManagerServer_slistautoptr;
     * }
     */
    public static final AddressLayout GDBusObjectManagerServer_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusObjectManagerServer_queueautoptr;
     * }
     */
    public static final AddressLayout GDBusObjectManagerServer_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDBusObjectProxy* GDBusObjectProxy_autoptr;
     * }
     */
    public static final AddressLayout GDBusObjectProxy_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusObjectProxy_listautoptr;
     * }
     */
    public static final AddressLayout GDBusObjectProxy_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusObjectProxy_slistautoptr;
     * }
     */
    public static final AddressLayout GDBusObjectProxy_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusObjectProxy_queueautoptr;
     * }
     */
    public static final AddressLayout GDBusObjectProxy_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDBusObjectSkeleton* GDBusObjectSkeleton_autoptr;
     * }
     */
    public static final AddressLayout GDBusObjectSkeleton_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusObjectSkeleton_listautoptr;
     * }
     */
    public static final AddressLayout GDBusObjectSkeleton_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusObjectSkeleton_slistautoptr;
     * }
     */
    public static final AddressLayout GDBusObjectSkeleton_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusObjectSkeleton_queueautoptr;
     * }
     */
    public static final AddressLayout GDBusObjectSkeleton_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDBusProxy* GDBusProxy_autoptr;
     * }
     */
    public static final AddressLayout GDBusProxy_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusProxy_listautoptr;
     * }
     */
    public static final AddressLayout GDBusProxy_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusProxy_slistautoptr;
     * }
     */
    public static final AddressLayout GDBusProxy_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusProxy_queueautoptr;
     * }
     */
    public static final AddressLayout GDBusProxy_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDBusServer* GDBusServer_autoptr;
     * }
     */
    public static final AddressLayout GDBusServer_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDBusServer_listautoptr;
     * }
     */
    public static final AddressLayout GDBusServer_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDBusServer_slistautoptr;
     * }
     */
    public static final AddressLayout GDBusServer_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDBusServer_queueautoptr;
     * }
     */
    public static final AddressLayout GDBusServer_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GDrive* GDrive_autoptr;
     * }
     */
    public static final AddressLayout GDrive_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GDrive_listautoptr;
     * }
     */
    public static final AddressLayout GDrive_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GDrive_slistautoptr;
     * }
     */
    public static final AddressLayout GDrive_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GDrive_queueautoptr;
     * }
     */
    public static final AddressLayout GDrive_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GEmblemedIcon* GEmblemedIcon_autoptr;
     * }
     */
    public static final AddressLayout GEmblemedIcon_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GEmblemedIcon_listautoptr;
     * }
     */
    public static final AddressLayout GEmblemedIcon_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GEmblemedIcon_slistautoptr;
     * }
     */
    public static final AddressLayout GEmblemedIcon_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GEmblemedIcon_queueautoptr;
     * }
     */
    public static final AddressLayout GEmblemedIcon_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GEmblem* GEmblem_autoptr;
     * }
     */
    public static final AddressLayout GEmblem_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GEmblem_listautoptr;
     * }
     */
    public static final AddressLayout GEmblem_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GEmblem_slistautoptr;
     * }
     */
    public static final AddressLayout GEmblem_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GEmblem_queueautoptr;
     * }
     */
    public static final AddressLayout GEmblem_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GFileEnumerator* GFileEnumerator_autoptr;
     * }
     */
    public static final AddressLayout GFileEnumerator_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GFileEnumerator_listautoptr;
     * }
     */
    public static final AddressLayout GFileEnumerator_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GFileEnumerator_slistautoptr;
     * }
     */
    public static final AddressLayout GFileEnumerator_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFileEnumerator_queueautoptr;
     * }
     */
    public static final AddressLayout GFileEnumerator_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GFile* GFile_autoptr;
     * }
     */
    public static final AddressLayout GFile_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GFile_listautoptr;
     * }
     */
    public static final AddressLayout GFile_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GFile_slistautoptr;
     * }
     */
    public static final AddressLayout GFile_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFile_queueautoptr;
     * }
     */
    public static final AddressLayout GFile_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GFileAttributeInfoList* GFileAttributeInfoList_autoptr;
     * }
     */
    public static final AddressLayout GFileAttributeInfoList_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GFileAttributeInfoList_listautoptr;
     * }
     */
    public static final AddressLayout GFileAttributeInfoList_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GFileAttributeInfoList_slistautoptr;
     * }
     */
    public static final AddressLayout GFileAttributeInfoList_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFileAttributeInfoList_queueautoptr;
     * }
     */
    public static final AddressLayout GFileAttributeInfoList_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GFileIcon* GFileIcon_autoptr;
     * }
     */
    public static final AddressLayout GFileIcon_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GFileIcon_listautoptr;
     * }
     */
    public static final AddressLayout GFileIcon_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GFileIcon_slistautoptr;
     * }
     */
    public static final AddressLayout GFileIcon_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFileIcon_queueautoptr;
     * }
     */
    public static final AddressLayout GFileIcon_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GFileInfo* GFileInfo_autoptr;
     * }
     */
    public static final AddressLayout GFileInfo_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GFileInfo_listautoptr;
     * }
     */
    public static final AddressLayout GFileInfo_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GFileInfo_slistautoptr;
     * }
     */
    public static final AddressLayout GFileInfo_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFileInfo_queueautoptr;
     * }
     */
    public static final AddressLayout GFileInfo_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GFileInputStream* GFileInputStream_autoptr;
     * }
     */
    public static final AddressLayout GFileInputStream_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GFileInputStream_listautoptr;
     * }
     */
    public static final AddressLayout GFileInputStream_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GFileInputStream_slistautoptr;
     * }
     */
    public static final AddressLayout GFileInputStream_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFileInputStream_queueautoptr;
     * }
     */
    public static final AddressLayout GFileInputStream_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GFileIOStream* GFileIOStream_autoptr;
     * }
     */
    public static final AddressLayout GFileIOStream_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GFileIOStream_listautoptr;
     * }
     */
    public static final AddressLayout GFileIOStream_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GFileIOStream_slistautoptr;
     * }
     */
    public static final AddressLayout GFileIOStream_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFileIOStream_queueautoptr;
     * }
     */
    public static final AddressLayout GFileIOStream_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GFileMonitor* GFileMonitor_autoptr;
     * }
     */
    public static final AddressLayout GFileMonitor_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GFileMonitor_listautoptr;
     * }
     */
    public static final AddressLayout GFileMonitor_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GFileMonitor_slistautoptr;
     * }
     */
    public static final AddressLayout GFileMonitor_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFileMonitor_queueautoptr;
     * }
     */
    public static final AddressLayout GFileMonitor_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GFilenameCompleter* GFilenameCompleter_autoptr;
     * }
     */
    public static final AddressLayout GFilenameCompleter_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GFilenameCompleter_listautoptr;
     * }
     */
    public static final AddressLayout GFilenameCompleter_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GFilenameCompleter_slistautoptr;
     * }
     */
    public static final AddressLayout GFilenameCompleter_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFilenameCompleter_queueautoptr;
     * }
     */
    public static final AddressLayout GFilenameCompleter_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GFileOutputStream* GFileOutputStream_autoptr;
     * }
     */
    public static final AddressLayout GFileOutputStream_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GFileOutputStream_listautoptr;
     * }
     */
    public static final AddressLayout GFileOutputStream_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GFileOutputStream_slistautoptr;
     * }
     */
    public static final AddressLayout GFileOutputStream_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFileOutputStream_queueautoptr;
     * }
     */
    public static final AddressLayout GFileOutputStream_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GFilterInputStream* GFilterInputStream_autoptr;
     * }
     */
    public static final AddressLayout GFilterInputStream_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GFilterInputStream_listautoptr;
     * }
     */
    public static final AddressLayout GFilterInputStream_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GFilterInputStream_slistautoptr;
     * }
     */
    public static final AddressLayout GFilterInputStream_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFilterInputStream_queueautoptr;
     * }
     */
    public static final AddressLayout GFilterInputStream_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GFilterOutputStream* GFilterOutputStream_autoptr;
     * }
     */
    public static final AddressLayout GFilterOutputStream_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GFilterOutputStream_listautoptr;
     * }
     */
    public static final AddressLayout GFilterOutputStream_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GFilterOutputStream_slistautoptr;
     * }
     */
    public static final AddressLayout GFilterOutputStream_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GFilterOutputStream_queueautoptr;
     * }
     */
    public static final AddressLayout GFilterOutputStream_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GIcon* GIcon_autoptr;
     * }
     */
    public static final AddressLayout GIcon_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GIcon_listautoptr;
     * }
     */
    public static final AddressLayout GIcon_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GIcon_slistautoptr;
     * }
     */
    public static final AddressLayout GIcon_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GIcon_queueautoptr;
     * }
     */
    public static final AddressLayout GIcon_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GInetAddress* GInetAddress_autoptr;
     * }
     */
    public static final AddressLayout GInetAddress_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GInetAddress_listautoptr;
     * }
     */
    public static final AddressLayout GInetAddress_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GInetAddress_slistautoptr;
     * }
     */
    public static final AddressLayout GInetAddress_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GInetAddress_queueautoptr;
     * }
     */
    public static final AddressLayout GInetAddress_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GInetAddressMask* GInetAddressMask_autoptr;
     * }
     */
    public static final AddressLayout GInetAddressMask_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GInetAddressMask_listautoptr;
     * }
     */
    public static final AddressLayout GInetAddressMask_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GInetAddressMask_slistautoptr;
     * }
     */
    public static final AddressLayout GInetAddressMask_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GInetAddressMask_queueautoptr;
     * }
     */
    public static final AddressLayout GInetAddressMask_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GInetSocketAddress* GInetSocketAddress_autoptr;
     * }
     */
    public static final AddressLayout GInetSocketAddress_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GInetSocketAddress_listautoptr;
     * }
     */
    public static final AddressLayout GInetSocketAddress_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GInetSocketAddress_slistautoptr;
     * }
     */
    public static final AddressLayout GInetSocketAddress_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GInetSocketAddress_queueautoptr;
     * }
     */
    public static final AddressLayout GInetSocketAddress_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GInitable* GInitable_autoptr;
     * }
     */
    public static final AddressLayout GInitable_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GInitable_listautoptr;
     * }
     */
    public static final AddressLayout GInitable_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GInitable_slistautoptr;
     * }
     */
    public static final AddressLayout GInitable_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GInitable_queueautoptr;
     * }
     */
    public static final AddressLayout GInitable_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GInputStream* GInputStream_autoptr;
     * }
     */
    public static final AddressLayout GInputStream_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GInputStream_listautoptr;
     * }
     */
    public static final AddressLayout GInputStream_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GInputStream_slistautoptr;
     * }
     */
    public static final AddressLayout GInputStream_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GInputStream_queueautoptr;
     * }
     */
    public static final AddressLayout GInputStream_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GIOModule* GIOModule_autoptr;
     * }
     */
    public static final AddressLayout GIOModule_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GIOModule_listautoptr;
     * }
     */
    public static final AddressLayout GIOModule_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GIOModule_slistautoptr;
     * }
     */
    public static final AddressLayout GIOModule_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GIOModule_queueautoptr;
     * }
     */
    public static final AddressLayout GIOModule_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GIOStream* GIOStream_autoptr;
     * }
     */
    public static final AddressLayout GIOStream_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GIOStream_listautoptr;
     * }
     */
    public static final AddressLayout GIOStream_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GIOStream_slistautoptr;
     * }
     */
    public static final AddressLayout GIOStream_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GIOStream_queueautoptr;
     * }
     */
    public static final AddressLayout GIOStream_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GLoadableIcon* GLoadableIcon_autoptr;
     * }
     */
    public static final AddressLayout GLoadableIcon_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GLoadableIcon_listautoptr;
     * }
     */
    public static final AddressLayout GLoadableIcon_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GLoadableIcon_slistautoptr;
     * }
     */
    public static final AddressLayout GLoadableIcon_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GLoadableIcon_queueautoptr;
     * }
     */
    public static final AddressLayout GLoadableIcon_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GMemoryInputStream* GMemoryInputStream_autoptr;
     * }
     */
    public static final AddressLayout GMemoryInputStream_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMemoryInputStream_listautoptr;
     * }
     */
    public static final AddressLayout GMemoryInputStream_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMemoryInputStream_slistautoptr;
     * }
     */
    public static final AddressLayout GMemoryInputStream_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMemoryInputStream_queueautoptr;
     * }
     */
    public static final AddressLayout GMemoryInputStream_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GMemoryOutputStream* GMemoryOutputStream_autoptr;
     * }
     */
    public static final AddressLayout GMemoryOutputStream_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMemoryOutputStream_listautoptr;
     * }
     */
    public static final AddressLayout GMemoryOutputStream_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMemoryOutputStream_slistautoptr;
     * }
     */
    public static final AddressLayout GMemoryOutputStream_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMemoryOutputStream_queueautoptr;
     * }
     */
    public static final AddressLayout GMemoryOutputStream_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GMenu* GMenu_autoptr;
     * }
     */
    public static final AddressLayout GMenu_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMenu_listautoptr;
     * }
     */
    public static final AddressLayout GMenu_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMenu_slistautoptr;
     * }
     */
    public static final AddressLayout GMenu_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMenu_queueautoptr;
     * }
     */
    public static final AddressLayout GMenu_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GMenuItem* GMenuItem_autoptr;
     * }
     */
    public static final AddressLayout GMenuItem_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMenuItem_listautoptr;
     * }
     */
    public static final AddressLayout GMenuItem_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMenuItem_slistautoptr;
     * }
     */
    public static final AddressLayout GMenuItem_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMenuItem_queueautoptr;
     * }
     */
    public static final AddressLayout GMenuItem_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GMenuModel* GMenuModel_autoptr;
     * }
     */
    public static final AddressLayout GMenuModel_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMenuModel_listautoptr;
     * }
     */
    public static final AddressLayout GMenuModel_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMenuModel_slistautoptr;
     * }
     */
    public static final AddressLayout GMenuModel_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMenuModel_queueautoptr;
     * }
     */
    public static final AddressLayout GMenuModel_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GMenuAttributeIter* GMenuAttributeIter_autoptr;
     * }
     */
    public static final AddressLayout GMenuAttributeIter_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMenuAttributeIter_listautoptr;
     * }
     */
    public static final AddressLayout GMenuAttributeIter_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMenuAttributeIter_slistautoptr;
     * }
     */
    public static final AddressLayout GMenuAttributeIter_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMenuAttributeIter_queueautoptr;
     * }
     */
    public static final AddressLayout GMenuAttributeIter_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GMenuLinkIter* GMenuLinkIter_autoptr;
     * }
     */
    public static final AddressLayout GMenuLinkIter_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMenuLinkIter_listautoptr;
     * }
     */
    public static final AddressLayout GMenuLinkIter_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMenuLinkIter_slistautoptr;
     * }
     */
    public static final AddressLayout GMenuLinkIter_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMenuLinkIter_queueautoptr;
     * }
     */
    public static final AddressLayout GMenuLinkIter_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GMount* GMount_autoptr;
     * }
     */
    public static final AddressLayout GMount_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMount_listautoptr;
     * }
     */
    public static final AddressLayout GMount_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMount_slistautoptr;
     * }
     */
    public static final AddressLayout GMount_slistautoptr = RuntimeHelper.POINTER;
}


