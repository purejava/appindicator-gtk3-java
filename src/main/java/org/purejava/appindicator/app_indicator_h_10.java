// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.AddressLayout;
import java.lang.foreign.MemorySegment;
import java.lang.invoke.MethodHandle;

import static java.lang.foreign.ValueLayout.*;
public class app_indicator_h_10 extends app_indicator_h_9 {

    /**
     * {@snippet :
     * typedef struct _GSList* GMenuModel_slistautoptr;
     * }
     */
    public static final AddressLayout GMenuModel_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMenuModel_queueautoptr;
     * }
     */
    public static final AddressLayout GMenuModel_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GMenuAttributeIter* GMenuAttributeIter_autoptr;
     * }
     */
    public static final AddressLayout GMenuAttributeIter_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMenuAttributeIter_listautoptr;
     * }
     */
    public static final AddressLayout GMenuAttributeIter_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMenuAttributeIter_slistautoptr;
     * }
     */
    public static final AddressLayout GMenuAttributeIter_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMenuAttributeIter_queueautoptr;
     * }
     */
    public static final AddressLayout GMenuAttributeIter_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GMenuLinkIter* GMenuLinkIter_autoptr;
     * }
     */
    public static final AddressLayout GMenuLinkIter_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMenuLinkIter_listautoptr;
     * }
     */
    public static final AddressLayout GMenuLinkIter_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMenuLinkIter_slistautoptr;
     * }
     */
    public static final AddressLayout GMenuLinkIter_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMenuLinkIter_queueautoptr;
     * }
     */
    public static final AddressLayout GMenuLinkIter_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GMount* GMount_autoptr;
     * }
     */
    public static final AddressLayout GMount_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMount_listautoptr;
     * }
     */
    public static final AddressLayout GMount_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMount_slistautoptr;
     * }
     */
    public static final AddressLayout GMount_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMount_queueautoptr;
     * }
     */
    public static final AddressLayout GMount_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GMountOperation* GMountOperation_autoptr;
     * }
     */
    public static final AddressLayout GMountOperation_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GMountOperation_listautoptr;
     * }
     */
    public static final AddressLayout GMountOperation_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GMountOperation_slistautoptr;
     * }
     */
    public static final AddressLayout GMountOperation_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GMountOperation_queueautoptr;
     * }
     */
    public static final AddressLayout GMountOperation_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GNativeVolumeMonitor* GNativeVolumeMonitor_autoptr;
     * }
     */
    public static final AddressLayout GNativeVolumeMonitor_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GNativeVolumeMonitor_listautoptr;
     * }
     */
    public static final AddressLayout GNativeVolumeMonitor_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GNativeVolumeMonitor_slistautoptr;
     * }
     */
    public static final AddressLayout GNativeVolumeMonitor_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GNativeVolumeMonitor_queueautoptr;
     * }
     */
    public static final AddressLayout GNativeVolumeMonitor_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GNetworkAddress* GNetworkAddress_autoptr;
     * }
     */
    public static final AddressLayout GNetworkAddress_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GNetworkAddress_listautoptr;
     * }
     */
    public static final AddressLayout GNetworkAddress_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GNetworkAddress_slistautoptr;
     * }
     */
    public static final AddressLayout GNetworkAddress_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GNetworkAddress_queueautoptr;
     * }
     */
    public static final AddressLayout GNetworkAddress_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GNetworkMonitor* GNetworkMonitor_autoptr;
     * }
     */
    public static final AddressLayout GNetworkMonitor_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GNetworkMonitor_listautoptr;
     * }
     */
    public static final AddressLayout GNetworkMonitor_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GNetworkMonitor_slistautoptr;
     * }
     */
    public static final AddressLayout GNetworkMonitor_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GNetworkMonitor_queueautoptr;
     * }
     */
    public static final AddressLayout GNetworkMonitor_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GNetworkService* GNetworkService_autoptr;
     * }
     */
    public static final AddressLayout GNetworkService_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GNetworkService_listautoptr;
     * }
     */
    public static final AddressLayout GNetworkService_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GNetworkService_slistautoptr;
     * }
     */
    public static final AddressLayout GNetworkService_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GNetworkService_queueautoptr;
     * }
     */
    public static final AddressLayout GNetworkService_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GNotification* GNotification_autoptr;
     * }
     */
    public static final AddressLayout GNotification_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GNotification_listautoptr;
     * }
     */
    public static final AddressLayout GNotification_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GNotification_slistautoptr;
     * }
     */
    public static final AddressLayout GNotification_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GNotification_queueautoptr;
     * }
     */
    public static final AddressLayout GNotification_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GOutputStream* GOutputStream_autoptr;
     * }
     */
    public static final AddressLayout GOutputStream_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GOutputStream_listautoptr;
     * }
     */
    public static final AddressLayout GOutputStream_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GOutputStream_slistautoptr;
     * }
     */
    public static final AddressLayout GOutputStream_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GOutputStream_queueautoptr;
     * }
     */
    public static final AddressLayout GOutputStream_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GPermission* GPermission_autoptr;
     * }
     */
    public static final AddressLayout GPermission_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GPermission_listautoptr;
     * }
     */
    public static final AddressLayout GPermission_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GPermission_slistautoptr;
     * }
     */
    public static final AddressLayout GPermission_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GPermission_queueautoptr;
     * }
     */
    public static final AddressLayout GPermission_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GPollableInputStream* GPollableInputStream_autoptr;
     * }
     */
    public static final AddressLayout GPollableInputStream_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GPollableInputStream_listautoptr;
     * }
     */
    public static final AddressLayout GPollableInputStream_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GPollableInputStream_slistautoptr;
     * }
     */
    public static final AddressLayout GPollableInputStream_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GPollableInputStream_queueautoptr;
     * }
     */
    public static final AddressLayout GPollableInputStream_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GPollableOutputStream* GPollableOutputStream_autoptr;
     * }
     */
    public static final AddressLayout GPollableOutputStream_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GPollableOutputStream_listautoptr;
     * }
     */
    public static final AddressLayout GPollableOutputStream_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GPollableOutputStream_slistautoptr;
     * }
     */
    public static final AddressLayout GPollableOutputStream_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GPollableOutputStream_queueautoptr;
     * }
     */
    public static final AddressLayout GPollableOutputStream_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GPropertyAction* GPropertyAction_autoptr;
     * }
     */
    public static final AddressLayout GPropertyAction_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GPropertyAction_listautoptr;
     * }
     */
    public static final AddressLayout GPropertyAction_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GPropertyAction_slistautoptr;
     * }
     */
    public static final AddressLayout GPropertyAction_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GPropertyAction_queueautoptr;
     * }
     */
    public static final AddressLayout GPropertyAction_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GProxyAddressEnumerator* GProxyAddressEnumerator_autoptr;
     * }
     */
    public static final AddressLayout GProxyAddressEnumerator_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GProxyAddressEnumerator_listautoptr;
     * }
     */
    public static final AddressLayout GProxyAddressEnumerator_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GProxyAddressEnumerator_slistautoptr;
     * }
     */
    public static final AddressLayout GProxyAddressEnumerator_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GProxyAddressEnumerator_queueautoptr;
     * }
     */
    public static final AddressLayout GProxyAddressEnumerator_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GProxyAddress* GProxyAddress_autoptr;
     * }
     */
    public static final AddressLayout GProxyAddress_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GProxyAddress_listautoptr;
     * }
     */
    public static final AddressLayout GProxyAddress_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GProxyAddress_slistautoptr;
     * }
     */
    public static final AddressLayout GProxyAddress_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GProxyAddress_queueautoptr;
     * }
     */
    public static final AddressLayout GProxyAddress_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GProxy* GProxy_autoptr;
     * }
     */
    public static final AddressLayout GProxy_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GProxy_listautoptr;
     * }
     */
    public static final AddressLayout GProxy_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GProxy_slistautoptr;
     * }
     */
    public static final AddressLayout GProxy_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GProxy_queueautoptr;
     * }
     */
    public static final AddressLayout GProxy_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GProxyResolver* GProxyResolver_autoptr;
     * }
     */
    public static final AddressLayout GProxyResolver_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GProxyResolver_listautoptr;
     * }
     */
    public static final AddressLayout GProxyResolver_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GProxyResolver_slistautoptr;
     * }
     */
    public static final AddressLayout GProxyResolver_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GProxyResolver_queueautoptr;
     * }
     */
    public static final AddressLayout GProxyResolver_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GRemoteActionGroup* GRemoteActionGroup_autoptr;
     * }
     */
    public static final AddressLayout GRemoteActionGroup_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GRemoteActionGroup_listautoptr;
     * }
     */
    public static final AddressLayout GRemoteActionGroup_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GRemoteActionGroup_slistautoptr;
     * }
     */
    public static final AddressLayout GRemoteActionGroup_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GRemoteActionGroup_queueautoptr;
     * }
     */
    public static final AddressLayout GRemoteActionGroup_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GResolver* GResolver_autoptr;
     * }
     */
    public static final AddressLayout GResolver_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GResolver_listautoptr;
     * }
     */
    public static final AddressLayout GResolver_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GResolver_slistautoptr;
     * }
     */
    public static final AddressLayout GResolver_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GResolver_queueautoptr;
     * }
     */
    public static final AddressLayout GResolver_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GResource* GResource_autoptr;
     * }
     */
    public static final AddressLayout GResource_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GResource_listautoptr;
     * }
     */
    public static final AddressLayout GResource_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GResource_slistautoptr;
     * }
     */
    public static final AddressLayout GResource_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GResource_queueautoptr;
     * }
     */
    public static final AddressLayout GResource_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSeekable* GSeekable_autoptr;
     * }
     */
    public static final AddressLayout GSeekable_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSeekable_listautoptr;
     * }
     */
    public static final AddressLayout GSeekable_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSeekable_slistautoptr;
     * }
     */
    public static final AddressLayout GSeekable_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSeekable_queueautoptr;
     * }
     */
    public static final AddressLayout GSeekable_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSettingsBackend* GSettingsBackend_autoptr;
     * }
     */
    public static final AddressLayout GSettingsBackend_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSettingsBackend_listautoptr;
     * }
     */
    public static final AddressLayout GSettingsBackend_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSettingsBackend_slistautoptr;
     * }
     */
    public static final AddressLayout GSettingsBackend_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSettingsBackend_queueautoptr;
     * }
     */
    public static final AddressLayout GSettingsBackend_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSettingsSchema* GSettingsSchema_autoptr;
     * }
     */
    public static final AddressLayout GSettingsSchema_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSettingsSchema_listautoptr;
     * }
     */
    public static final AddressLayout GSettingsSchema_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSettingsSchema_slistautoptr;
     * }
     */
    public static final AddressLayout GSettingsSchema_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSettingsSchema_queueautoptr;
     * }
     */
    public static final AddressLayout GSettingsSchema_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSettingsSchemaKey* GSettingsSchemaKey_autoptr;
     * }
     */
    public static final AddressLayout GSettingsSchemaKey_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSettingsSchemaKey_listautoptr;
     * }
     */
    public static final AddressLayout GSettingsSchemaKey_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSettingsSchemaKey_slistautoptr;
     * }
     */
    public static final AddressLayout GSettingsSchemaKey_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSettingsSchemaKey_queueautoptr;
     * }
     */
    public static final AddressLayout GSettingsSchemaKey_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSettingsSchemaSource* GSettingsSchemaSource_autoptr;
     * }
     */
    public static final AddressLayout GSettingsSchemaSource_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSettingsSchemaSource_listautoptr;
     * }
     */
    public static final AddressLayout GSettingsSchemaSource_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSettingsSchemaSource_slistautoptr;
     * }
     */
    public static final AddressLayout GSettingsSchemaSource_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSettingsSchemaSource_queueautoptr;
     * }
     */
    public static final AddressLayout GSettingsSchemaSource_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSettings* GSettings_autoptr;
     * }
     */
    public static final AddressLayout GSettings_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSettings_listautoptr;
     * }
     */
    public static final AddressLayout GSettings_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSettings_slistautoptr;
     * }
     */
    public static final AddressLayout GSettings_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSettings_queueautoptr;
     * }
     */
    public static final AddressLayout GSettings_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSimpleActionGroup* GSimpleActionGroup_autoptr;
     * }
     */
    public static final AddressLayout GSimpleActionGroup_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSimpleActionGroup_listautoptr;
     * }
     */
    public static final AddressLayout GSimpleActionGroup_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSimpleActionGroup_slistautoptr;
     * }
     */
    public static final AddressLayout GSimpleActionGroup_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSimpleActionGroup_queueautoptr;
     * }
     */
    public static final AddressLayout GSimpleActionGroup_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSimpleAction* GSimpleAction_autoptr;
     * }
     */
    public static final AddressLayout GSimpleAction_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSimpleAction_listautoptr;
     * }
     */
    public static final AddressLayout GSimpleAction_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSimpleAction_slistautoptr;
     * }
     */
    public static final AddressLayout GSimpleAction_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSimpleAction_queueautoptr;
     * }
     */
    public static final AddressLayout GSimpleAction_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSimpleAsyncResult* GSimpleAsyncResult_autoptr;
     * }
     */
    public static final AddressLayout GSimpleAsyncResult_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSimpleAsyncResult_listautoptr;
     * }
     */
    public static final AddressLayout GSimpleAsyncResult_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSimpleAsyncResult_slistautoptr;
     * }
     */
    public static final AddressLayout GSimpleAsyncResult_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSimpleAsyncResult_queueautoptr;
     * }
     */
    public static final AddressLayout GSimpleAsyncResult_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSimplePermission* GSimplePermission_autoptr;
     * }
     */
    public static final AddressLayout GSimplePermission_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSimplePermission_listautoptr;
     * }
     */
    public static final AddressLayout GSimplePermission_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSimplePermission_slistautoptr;
     * }
     */
    public static final AddressLayout GSimplePermission_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSimplePermission_queueautoptr;
     * }
     */
    public static final AddressLayout GSimplePermission_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSimpleProxyResolver* GSimpleProxyResolver_autoptr;
     * }
     */
    public static final AddressLayout GSimpleProxyResolver_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSimpleProxyResolver_listautoptr;
     * }
     */
    public static final AddressLayout GSimpleProxyResolver_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSimpleProxyResolver_slistautoptr;
     * }
     */
    public static final AddressLayout GSimpleProxyResolver_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSimpleProxyResolver_queueautoptr;
     * }
     */
    public static final AddressLayout GSimpleProxyResolver_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSocketAddressEnumerator* GSocketAddressEnumerator_autoptr;
     * }
     */
    public static final AddressLayout GSocketAddressEnumerator_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSocketAddressEnumerator_listautoptr;
     * }
     */
    public static final AddressLayout GSocketAddressEnumerator_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSocketAddressEnumerator_slistautoptr;
     * }
     */
    public static final AddressLayout GSocketAddressEnumerator_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSocketAddressEnumerator_queueautoptr;
     * }
     */
    public static final AddressLayout GSocketAddressEnumerator_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSocketAddress* GSocketAddress_autoptr;
     * }
     */
    public static final AddressLayout GSocketAddress_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSocketAddress_listautoptr;
     * }
     */
    public static final AddressLayout GSocketAddress_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSocketAddress_slistautoptr;
     * }
     */
    public static final AddressLayout GSocketAddress_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSocketAddress_queueautoptr;
     * }
     */
    public static final AddressLayout GSocketAddress_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSocketClient* GSocketClient_autoptr;
     * }
     */
    public static final AddressLayout GSocketClient_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSocketClient_listautoptr;
     * }
     */
    public static final AddressLayout GSocketClient_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSocketClient_slistautoptr;
     * }
     */
    public static final AddressLayout GSocketClient_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSocketClient_queueautoptr;
     * }
     */
    public static final AddressLayout GSocketClient_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSocketConnectable* GSocketConnectable_autoptr;
     * }
     */
    public static final AddressLayout GSocketConnectable_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSocketConnectable_listautoptr;
     * }
     */
    public static final AddressLayout GSocketConnectable_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSocketConnectable_slistautoptr;
     * }
     */
    public static final AddressLayout GSocketConnectable_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSocketConnectable_queueautoptr;
     * }
     */
    public static final AddressLayout GSocketConnectable_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSocketConnection* GSocketConnection_autoptr;
     * }
     */
    public static final AddressLayout GSocketConnection_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSocketConnection_listautoptr;
     * }
     */
    public static final AddressLayout GSocketConnection_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSocketConnection_slistautoptr;
     * }
     */
    public static final AddressLayout GSocketConnection_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSocketConnection_queueautoptr;
     * }
     */
    public static final AddressLayout GSocketConnection_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSocketControlMessage* GSocketControlMessage_autoptr;
     * }
     */
    public static final AddressLayout GSocketControlMessage_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSocketControlMessage_listautoptr;
     * }
     */
    public static final AddressLayout GSocketControlMessage_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSocketControlMessage_slistautoptr;
     * }
     */
    public static final AddressLayout GSocketControlMessage_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSocketControlMessage_queueautoptr;
     * }
     */
    public static final AddressLayout GSocketControlMessage_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSocket* GSocket_autoptr;
     * }
     */
    public static final AddressLayout GSocket_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSocket_listautoptr;
     * }
     */
    public static final AddressLayout GSocket_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSocket_slistautoptr;
     * }
     */
    public static final AddressLayout GSocket_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSocket_queueautoptr;
     * }
     */
    public static final AddressLayout GSocket_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSocketListener* GSocketListener_autoptr;
     * }
     */
    public static final AddressLayout GSocketListener_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSocketListener_listautoptr;
     * }
     */
    public static final AddressLayout GSocketListener_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSocketListener_slistautoptr;
     * }
     */
    public static final AddressLayout GSocketListener_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSocketListener_queueautoptr;
     * }
     */
    public static final AddressLayout GSocketListener_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSocketService* GSocketService_autoptr;
     * }
     */
    public static final AddressLayout GSocketService_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSocketService_listautoptr;
     * }
     */
    public static final AddressLayout GSocketService_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSocketService_slistautoptr;
     * }
     */
    public static final AddressLayout GSocketService_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSocketService_queueautoptr;
     * }
     */
    public static final AddressLayout GSocketService_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSubprocess* GSubprocess_autoptr;
     * }
     */
    public static final AddressLayout GSubprocess_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSubprocess_listautoptr;
     * }
     */
    public static final AddressLayout GSubprocess_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSubprocess_slistautoptr;
     * }
     */
    public static final AddressLayout GSubprocess_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSubprocess_queueautoptr;
     * }
     */
    public static final AddressLayout GSubprocess_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSubprocessLauncher* GSubprocessLauncher_autoptr;
     * }
     */
    public static final AddressLayout GSubprocessLauncher_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GSubprocessLauncher_listautoptr;
     * }
     */
    public static final AddressLayout GSubprocessLauncher_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GSubprocessLauncher_slistautoptr;
     * }
     */
    public static final AddressLayout GSubprocessLauncher_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GSubprocessLauncher_queueautoptr;
     * }
     */
    public static final AddressLayout GSubprocessLauncher_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GTask* GTask_autoptr;
     * }
     */
    public static final AddressLayout GTask_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GTask_listautoptr;
     * }
     */
    public static final AddressLayout GTask_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GTask_slistautoptr;
     * }
     */
    public static final AddressLayout GTask_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTask_queueautoptr;
     * }
     */
    public static final AddressLayout GTask_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GTcpConnection* GTcpConnection_autoptr;
     * }
     */
    public static final AddressLayout GTcpConnection_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GTcpConnection_listautoptr;
     * }
     */
    public static final AddressLayout GTcpConnection_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GTcpConnection_slistautoptr;
     * }
     */
    public static final AddressLayout GTcpConnection_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTcpConnection_queueautoptr;
     * }
     */
    public static final AddressLayout GTcpConnection_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GTcpWrapperConnection* GTcpWrapperConnection_autoptr;
     * }
     */
    public static final AddressLayout GTcpWrapperConnection_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GTcpWrapperConnection_listautoptr;
     * }
     */
    public static final AddressLayout GTcpWrapperConnection_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GTcpWrapperConnection_slistautoptr;
     * }
     */
    public static final AddressLayout GTcpWrapperConnection_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTcpWrapperConnection_queueautoptr;
     * }
     */
    public static final AddressLayout GTcpWrapperConnection_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GTestDBus* GTestDBus_autoptr;
     * }
     */
    public static final AddressLayout GTestDBus_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GTestDBus_listautoptr;
     * }
     */
    public static final AddressLayout GTestDBus_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GTestDBus_slistautoptr;
     * }
     */
    public static final AddressLayout GTestDBus_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTestDBus_queueautoptr;
     * }
     */
    public static final AddressLayout GTestDBus_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GThemedIcon* GThemedIcon_autoptr;
     * }
     */
    public static final AddressLayout GThemedIcon_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GThemedIcon_listautoptr;
     * }
     */
    public static final AddressLayout GThemedIcon_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GThemedIcon_slistautoptr;
     * }
     */
    public static final AddressLayout GThemedIcon_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GThemedIcon_queueautoptr;
     * }
     */
    public static final AddressLayout GThemedIcon_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GThreadedSocketService* GThreadedSocketService_autoptr;
     * }
     */
    public static final AddressLayout GThreadedSocketService_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GThreadedSocketService_listautoptr;
     * }
     */
    public static final AddressLayout GThreadedSocketService_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GThreadedSocketService_slistautoptr;
     * }
     */
    public static final AddressLayout GThreadedSocketService_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GThreadedSocketService_queueautoptr;
     * }
     */
    public static final AddressLayout GThreadedSocketService_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GTlsBackend* GTlsBackend_autoptr;
     * }
     */
    public static final AddressLayout GTlsBackend_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GTlsBackend_listautoptr;
     * }
     */
    public static final AddressLayout GTlsBackend_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GTlsBackend_slistautoptr;
     * }
     */
    public static final AddressLayout GTlsBackend_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTlsBackend_queueautoptr;
     * }
     */
    public static final AddressLayout GTlsBackend_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GTlsCertificate* GTlsCertificate_autoptr;
     * }
     */
    public static final AddressLayout GTlsCertificate_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GTlsCertificate_listautoptr;
     * }
     */
    public static final AddressLayout GTlsCertificate_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GTlsCertificate_slistautoptr;
     * }
     */
    public static final AddressLayout GTlsCertificate_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTlsCertificate_queueautoptr;
     * }
     */
    public static final AddressLayout GTlsCertificate_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GTlsClientConnection* GTlsClientConnection_autoptr;
     * }
     */
    public static final AddressLayout GTlsClientConnection_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GTlsClientConnection_listautoptr;
     * }
     */
    public static final AddressLayout GTlsClientConnection_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GTlsClientConnection_slistautoptr;
     * }
     */
    public static final AddressLayout GTlsClientConnection_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTlsClientConnection_queueautoptr;
     * }
     */
    public static final AddressLayout GTlsClientConnection_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GTlsConnection* GTlsConnection_autoptr;
     * }
     */
    public static final AddressLayout GTlsConnection_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GTlsConnection_listautoptr;
     * }
     */
    public static final AddressLayout GTlsConnection_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GTlsConnection_slistautoptr;
     * }
     */
    public static final AddressLayout GTlsConnection_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTlsConnection_queueautoptr;
     * }
     */
    public static final AddressLayout GTlsConnection_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GTlsDatabase* GTlsDatabase_autoptr;
     * }
     */
    public static final AddressLayout GTlsDatabase_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GTlsDatabase_listautoptr;
     * }
     */
    public static final AddressLayout GTlsDatabase_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GTlsDatabase_slistautoptr;
     * }
     */
    public static final AddressLayout GTlsDatabase_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTlsDatabase_queueautoptr;
     * }
     */
    public static final AddressLayout GTlsDatabase_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GTlsFileDatabase* GTlsFileDatabase_autoptr;
     * }
     */
    public static final AddressLayout GTlsFileDatabase_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GTlsFileDatabase_listautoptr;
     * }
     */
    public static final AddressLayout GTlsFileDatabase_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GTlsFileDatabase_slistautoptr;
     * }
     */
    public static final AddressLayout GTlsFileDatabase_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTlsFileDatabase_queueautoptr;
     * }
     */
    public static final AddressLayout GTlsFileDatabase_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GTlsInteraction* GTlsInteraction_autoptr;
     * }
     */
    public static final AddressLayout GTlsInteraction_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GTlsInteraction_listautoptr;
     * }
     */
    public static final AddressLayout GTlsInteraction_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GTlsInteraction_slistautoptr;
     * }
     */
    public static final AddressLayout GTlsInteraction_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTlsInteraction_queueautoptr;
     * }
     */
    public static final AddressLayout GTlsInteraction_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GTlsPassword* GTlsPassword_autoptr;
     * }
     */
    public static final AddressLayout GTlsPassword_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GTlsPassword_listautoptr;
     * }
     */
    public static final AddressLayout GTlsPassword_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GTlsPassword_slistautoptr;
     * }
     */
    public static final AddressLayout GTlsPassword_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTlsPassword_queueautoptr;
     * }
     */
    public static final AddressLayout GTlsPassword_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GTlsServerConnection* GTlsServerConnection_autoptr;
     * }
     */
    public static final AddressLayout GTlsServerConnection_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GTlsServerConnection_listautoptr;
     * }
     */
    public static final AddressLayout GTlsServerConnection_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GTlsServerConnection_slistautoptr;
     * }
     */
    public static final AddressLayout GTlsServerConnection_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GTlsServerConnection_queueautoptr;
     * }
     */
    public static final AddressLayout GTlsServerConnection_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GVfs* GVfs_autoptr;
     * }
     */
    public static final AddressLayout GVfs_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GVfs_listautoptr;
     * }
     */
    public static final AddressLayout GVfs_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GVfs_slistautoptr;
     * }
     */
    public static final AddressLayout GVfs_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GVfs_queueautoptr;
     * }
     */
    public static final AddressLayout GVfs_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GVolume* GVolume_autoptr;
     * }
     */
    public static final AddressLayout GVolume_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GVolume_listautoptr;
     * }
     */
    public static final AddressLayout GVolume_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GVolume_slistautoptr;
     * }
     */
    public static final AddressLayout GVolume_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GVolume_queueautoptr;
     * }
     */
    public static final AddressLayout GVolume_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GVolumeMonitor* GVolumeMonitor_autoptr;
     * }
     */
    public static final AddressLayout GVolumeMonitor_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GVolumeMonitor_listautoptr;
     * }
     */
    public static final AddressLayout GVolumeMonitor_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GVolumeMonitor_slistautoptr;
     * }
     */
    public static final AddressLayout GVolumeMonitor_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GVolumeMonitor_queueautoptr;
     * }
     */
    public static final AddressLayout GVolumeMonitor_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GZlibCompressor* GZlibCompressor_autoptr;
     * }
     */
    public static final AddressLayout GZlibCompressor_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GZlibCompressor_listautoptr;
     * }
     */
    public static final AddressLayout GZlibCompressor_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GZlibCompressor_slistautoptr;
     * }
     */
    public static final AddressLayout GZlibCompressor_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GZlibCompressor_queueautoptr;
     * }
     */
    public static final AddressLayout GZlibCompressor_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GZlibDecompressor* GZlibDecompressor_autoptr;
     * }
     */
    public static final AddressLayout GZlibDecompressor_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GZlibDecompressor_listautoptr;
     * }
     */
    public static final AddressLayout GZlibDecompressor_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GZlibDecompressor_slistautoptr;
     * }
     */
    public static final AddressLayout GZlibDecompressor_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GZlibDecompressor_queueautoptr;
     * }
     */
    public static final AddressLayout GZlibDecompressor_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef unsigned char uint8_t;
     * }
     */
    public static final OfByte uint8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned short uint16_t;
     * }
     */
    public static final OfShort uint16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef unsigned int uint32_t;
     * }
     */
    public static final OfInt uint32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned long uint64_t;
     * }
     */
    public static final OfLong uint64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef signed char int_least8_t;
     * }
     */
    public static final OfByte int_least8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef short int_least16_t;
     * }
     */
    public static final OfShort int_least16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef int int_least32_t;
     * }
     */
    public static final OfInt int_least32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef long int_least64_t;
     * }
     */
    public static final OfLong int_least64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned char uint_least8_t;
     * }
     */
    public static final OfByte uint_least8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned short uint_least16_t;
     * }
     */
    public static final OfShort uint_least16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef unsigned int uint_least32_t;
     * }
     */
    public static final OfInt uint_least32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned long uint_least64_t;
     * }
     */
    public static final OfLong uint_least64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef signed char int_fast8_t;
     * }
     */
    public static final OfByte int_fast8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef long int_fast16_t;
     * }
     */
    public static final OfLong int_fast16_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long int_fast32_t;
     * }
     */
    public static final OfLong int_fast32_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long int_fast64_t;
     * }
     */
    public static final OfLong int_fast64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned char uint_fast8_t;
     * }
     */
    public static final OfByte uint_fast8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned long uint_fast16_t;
     * }
     */
    public static final OfLong uint_fast16_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long uint_fast32_t;
     * }
     */
    public static final OfLong uint_fast32_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long uint_fast64_t;
     * }
     */
    public static final OfLong uint_fast64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long uintptr_t;
     * }
     */
    public static final OfLong uintptr_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long intmax_t;
     * }
     */
    public static final OfLong intmax_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long uintmax_t;
     * }
     */
    public static final OfLong uintmax_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef int hb_bool_t;
     * }
     */
    public static final OfInt hb_bool_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned int hb_codepoint_t;
     * }
     */
    public static final OfInt hb_codepoint_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef int hb_position_t;
     * }
     */
    public static final OfInt hb_position_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned int hb_mask_t;
     * }
     */
    public static final OfInt hb_mask_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned int hb_tag_t;
     * }
     */
    public static final OfInt hb_tag_t = JAVA_INT;
    public static MethodHandle hb_tag_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1419.const$0,"hb_tag_from_string");
    }
    /**
     * {@snippet :
     * unsigned int hb_tag_from_string(char* str, int len);
     * }
     */
    public static int hb_tag_from_string(MemorySegment str, int len) {
        var mh$ = hb_tag_from_string$MH();
        try {
            return (int)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_tag_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1419.const$1,"hb_tag_to_string");
    }
    /**
     * {@snippet :
     * void hb_tag_to_string(unsigned int tag, char* buf);
     * }
     */
    public static void hb_tag_to_string(int tag, MemorySegment buf) {
        var mh$ = hb_tag_to_string$MH();
        try {
            mh$.invokeExact(tag, buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum hb_direction_t.HB_DIRECTION_INVALID = 0;
     * }
     */
    public static int HB_DIRECTION_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum hb_direction_t.HB_DIRECTION_LTR = 4;
     * }
     */
    public static int HB_DIRECTION_LTR() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum hb_direction_t.HB_DIRECTION_RTL = 5;
     * }
     */
    public static int HB_DIRECTION_RTL() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum hb_direction_t.HB_DIRECTION_TTB = 6;
     * }
     */
    public static int HB_DIRECTION_TTB() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum hb_direction_t.HB_DIRECTION_BTT = 7;
     * }
     */
    public static int HB_DIRECTION_BTT() {
        return (int)7L;
    }
    public static MethodHandle hb_direction_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1419.const$2,"hb_direction_from_string");
    }
    /**
     * {@snippet :
     * enum hb_direction_t hb_direction_from_string(char* str, int len);
     * }
     */
    public static int hb_direction_from_string(MemorySegment str, int len) {
        var mh$ = hb_direction_from_string$MH();
        try {
            return (int)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_direction_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1419.const$3,"hb_direction_to_string");
    }
    /**
     * {@snippet :
     * char* hb_direction_to_string(enum hb_direction_t direction);
     * }
     */
    public static MemorySegment hb_direction_to_string(int direction) {
        var mh$ = hb_direction_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct hb_language_impl_t* hb_language_t;
     * }
     */
    public static final AddressLayout hb_language_t = RuntimeHelper.POINTER;
    public static MethodHandle hb_language_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1419.const$4,"hb_language_from_string");
    }
    /**
     * {@snippet :
     * struct hb_language_impl_t* hb_language_from_string(char* str, int len);
     * }
     */
    public static MemorySegment hb_language_from_string(MemorySegment str, int len) {
        var mh$ = hb_language_from_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_language_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1419.const$5,"hb_language_to_string");
    }
    /**
     * {@snippet :
     * char* hb_language_to_string(struct hb_language_impl_t* language);
     * }
     */
    public static MemorySegment hb_language_to_string(MemorySegment language) {
        var mh$ = hb_language_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_language_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1420.const$0,"hb_language_get_default");
    }
    /**
     * {@snippet :
     * struct hb_language_impl_t* hb_language_get_default();
     * }
     */
    public static MemorySegment hb_language_get_default() {
        var mh$ = hb_language_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_language_matches$MH() {
        return RuntimeHelper.requireNonNull(constants$1420.const$1,"hb_language_matches");
    }
    /**
     * {@snippet :
     * int hb_language_matches(struct hb_language_impl_t* language, struct hb_language_impl_t* specific);
     * }
     */
    public static int hb_language_matches(MemorySegment language, MemorySegment specific) {
        var mh$ = hb_language_matches$MH();
        try {
            return (int)mh$.invokeExact(language, specific);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_COMMON = 1517910393;
     * }
     */
    public static int HB_SCRIPT_COMMON() {
        return (int)1517910393L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_INHERITED = 1516858984;
     * }
     */
    public static int HB_SCRIPT_INHERITED() {
        return (int)1516858984L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_UNKNOWN = 1517976186;
     * }
     */
    public static int HB_SCRIPT_UNKNOWN() {
        return (int)1517976186L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_ARABIC = 1098015074;
     * }
     */
    public static int HB_SCRIPT_ARABIC() {
        return (int)1098015074L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_ARMENIAN = 1098018158;
     * }
     */
    public static int HB_SCRIPT_ARMENIAN() {
        return (int)1098018158L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_BENGALI = 1113943655;
     * }
     */
    public static int HB_SCRIPT_BENGALI() {
        return (int)1113943655L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_CYRILLIC = 1132032620;
     * }
     */
    public static int HB_SCRIPT_CYRILLIC() {
        return (int)1132032620L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_DEVANAGARI = 1147500129;
     * }
     */
    public static int HB_SCRIPT_DEVANAGARI() {
        return (int)1147500129L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_GEORGIAN = 1197830002;
     * }
     */
    public static int HB_SCRIPT_GEORGIAN() {
        return (int)1197830002L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_GREEK = 1198679403;
     * }
     */
    public static int HB_SCRIPT_GREEK() {
        return (int)1198679403L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_GUJARATI = 1198877298;
     * }
     */
    public static int HB_SCRIPT_GUJARATI() {
        return (int)1198877298L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_GURMUKHI = 1198879349;
     * }
     */
    public static int HB_SCRIPT_GURMUKHI() {
        return (int)1198879349L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_HANGUL = 1214344807;
     * }
     */
    public static int HB_SCRIPT_HANGUL() {
        return (int)1214344807L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_HAN = 1214344809;
     * }
     */
    public static int HB_SCRIPT_HAN() {
        return (int)1214344809L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_HEBREW = 1214603890;
     * }
     */
    public static int HB_SCRIPT_HEBREW() {
        return (int)1214603890L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_HIRAGANA = 1214870113;
     * }
     */
    public static int HB_SCRIPT_HIRAGANA() {
        return (int)1214870113L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_KANNADA = 1265525857;
     * }
     */
    public static int HB_SCRIPT_KANNADA() {
        return (int)1265525857L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_KATAKANA = 1264676449;
     * }
     */
    public static int HB_SCRIPT_KATAKANA() {
        return (int)1264676449L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_LAO = 1281453935;
     * }
     */
    public static int HB_SCRIPT_LAO() {
        return (int)1281453935L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_LATIN = 1281455214;
     * }
     */
    public static int HB_SCRIPT_LATIN() {
        return (int)1281455214L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_MALAYALAM = 1298954605;
     * }
     */
    public static int HB_SCRIPT_MALAYALAM() {
        return (int)1298954605L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_ORIYA = 1332902241;
     * }
     */
    public static int HB_SCRIPT_ORIYA() {
        return (int)1332902241L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_TAMIL = 1415671148;
     * }
     */
    public static int HB_SCRIPT_TAMIL() {
        return (int)1415671148L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_TELUGU = 1415933045;
     * }
     */
    public static int HB_SCRIPT_TELUGU() {
        return (int)1415933045L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_THAI = 1416126825;
     * }
     */
    public static int HB_SCRIPT_THAI() {
        return (int)1416126825L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_TIBETAN = 1416192628;
     * }
     */
    public static int HB_SCRIPT_TIBETAN() {
        return (int)1416192628L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_BOPOMOFO = 1114599535;
     * }
     */
    public static int HB_SCRIPT_BOPOMOFO() {
        return (int)1114599535L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_BRAILLE = 1114792297;
     * }
     */
    public static int HB_SCRIPT_BRAILLE() {
        return (int)1114792297L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_CANADIAN_SYLLABICS = 1130458739;
     * }
     */
    public static int HB_SCRIPT_CANADIAN_SYLLABICS() {
        return (int)1130458739L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_CHEROKEE = 1130915186;
     * }
     */
    public static int HB_SCRIPT_CHEROKEE() {
        return (int)1130915186L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_ETHIOPIC = 1165256809;
     * }
     */
    public static int HB_SCRIPT_ETHIOPIC() {
        return (int)1165256809L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_KHMER = 1265134962;
     * }
     */
    public static int HB_SCRIPT_KHMER() {
        return (int)1265134962L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_MONGOLIAN = 1299148391;
     * }
     */
    public static int HB_SCRIPT_MONGOLIAN() {
        return (int)1299148391L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_MYANMAR = 1299803506;
     * }
     */
    public static int HB_SCRIPT_MYANMAR() {
        return (int)1299803506L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_OGHAM = 1332175213;
     * }
     */
    public static int HB_SCRIPT_OGHAM() {
        return (int)1332175213L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_RUNIC = 1383427698;
     * }
     */
    public static int HB_SCRIPT_RUNIC() {
        return (int)1383427698L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_SINHALA = 1399418472;
     * }
     */
    public static int HB_SCRIPT_SINHALA() {
        return (int)1399418472L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_SYRIAC = 1400468067;
     * }
     */
    public static int HB_SCRIPT_SYRIAC() {
        return (int)1400468067L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_THAANA = 1416126817;
     * }
     */
    public static int HB_SCRIPT_THAANA() {
        return (int)1416126817L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_YI = 1500080489;
     * }
     */
    public static int HB_SCRIPT_YI() {
        return (int)1500080489L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_DESERET = 1148416628;
     * }
     */
    public static int HB_SCRIPT_DESERET() {
        return (int)1148416628L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_GOTHIC = 1198486632;
     * }
     */
    public static int HB_SCRIPT_GOTHIC() {
        return (int)1198486632L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_OLD_ITALIC = 1232363884;
     * }
     */
    public static int HB_SCRIPT_OLD_ITALIC() {
        return (int)1232363884L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_BUHID = 1114990692;
     * }
     */
    public static int HB_SCRIPT_BUHID() {
        return (int)1114990692L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_HANUNOO = 1214344815;
     * }
     */
    public static int HB_SCRIPT_HANUNOO() {
        return (int)1214344815L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_TAGALOG = 1416064103;
     * }
     */
    public static int HB_SCRIPT_TAGALOG() {
        return (int)1416064103L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_TAGBANWA = 1415669602;
     * }
     */
    public static int HB_SCRIPT_TAGBANWA() {
        return (int)1415669602L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_CYPRIOT = 1131442804;
     * }
     */
    public static int HB_SCRIPT_CYPRIOT() {
        return (int)1131442804L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_LIMBU = 1281977698;
     * }
     */
    public static int HB_SCRIPT_LIMBU() {
        return (int)1281977698L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_LINEAR_B = 1281977954;
     * }
     */
    public static int HB_SCRIPT_LINEAR_B() {
        return (int)1281977954L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_OSMANYA = 1332964705;
     * }
     */
    public static int HB_SCRIPT_OSMANYA() {
        return (int)1332964705L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_SHAVIAN = 1399349623;
     * }
     */
    public static int HB_SCRIPT_SHAVIAN() {
        return (int)1399349623L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_TAI_LE = 1415670885;
     * }
     */
    public static int HB_SCRIPT_TAI_LE() {
        return (int)1415670885L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_UGARITIC = 1432838514;
     * }
     */
    public static int HB_SCRIPT_UGARITIC() {
        return (int)1432838514L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_BUGINESE = 1114990441;
     * }
     */
    public static int HB_SCRIPT_BUGINESE() {
        return (int)1114990441L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_COPTIC = 1131376756;
     * }
     */
    public static int HB_SCRIPT_COPTIC() {
        return (int)1131376756L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_GLAGOLITIC = 1198285159;
     * }
     */
    public static int HB_SCRIPT_GLAGOLITIC() {
        return (int)1198285159L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_KHAROSHTHI = 1265131890;
     * }
     */
    public static int HB_SCRIPT_KHAROSHTHI() {
        return (int)1265131890L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_NEW_TAI_LUE = 1415670901;
     * }
     */
    public static int HB_SCRIPT_NEW_TAI_LUE() {
        return (int)1415670901L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_OLD_PERSIAN = 1483761007;
     * }
     */
    public static int HB_SCRIPT_OLD_PERSIAN() {
        return (int)1483761007L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_SYLOTI_NAGRI = 1400466543;
     * }
     */
    public static int HB_SCRIPT_SYLOTI_NAGRI() {
        return (int)1400466543L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_TIFINAGH = 1415999079;
     * }
     */
    public static int HB_SCRIPT_TIFINAGH() {
        return (int)1415999079L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_BALINESE = 1113681001;
     * }
     */
    public static int HB_SCRIPT_BALINESE() {
        return (int)1113681001L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_CUNEIFORM = 1483961720;
     * }
     */
    public static int HB_SCRIPT_CUNEIFORM() {
        return (int)1483961720L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_NKO = 1315663727;
     * }
     */
    public static int HB_SCRIPT_NKO() {
        return (int)1315663727L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_PHAGS_PA = 1349017959;
     * }
     */
    public static int HB_SCRIPT_PHAGS_PA() {
        return (int)1349017959L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_PHOENICIAN = 1349021304;
     * }
     */
    public static int HB_SCRIPT_PHOENICIAN() {
        return (int)1349021304L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_CARIAN = 1130459753;
     * }
     */
    public static int HB_SCRIPT_CARIAN() {
        return (int)1130459753L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_CHAM = 1130914157;
     * }
     */
    public static int HB_SCRIPT_CHAM() {
        return (int)1130914157L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_KAYAH_LI = 1264675945;
     * }
     */
    public static int HB_SCRIPT_KAYAH_LI() {
        return (int)1264675945L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_LEPCHA = 1281716323;
     * }
     */
    public static int HB_SCRIPT_LEPCHA() {
        return (int)1281716323L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_LYCIAN = 1283023721;
     * }
     */
    public static int HB_SCRIPT_LYCIAN() {
        return (int)1283023721L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_LYDIAN = 1283023977;
     * }
     */
    public static int HB_SCRIPT_LYDIAN() {
        return (int)1283023977L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_OL_CHIKI = 1332503403;
     * }
     */
    public static int HB_SCRIPT_OL_CHIKI() {
        return (int)1332503403L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_REJANG = 1382706791;
     * }
     */
    public static int HB_SCRIPT_REJANG() {
        return (int)1382706791L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_SAURASHTRA = 1398895986;
     * }
     */
    public static int HB_SCRIPT_SAURASHTRA() {
        return (int)1398895986L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_SUNDANESE = 1400204900;
     * }
     */
    public static int HB_SCRIPT_SUNDANESE() {
        return (int)1400204900L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_VAI = 1449224553;
     * }
     */
    public static int HB_SCRIPT_VAI() {
        return (int)1449224553L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_AVESTAN = 1098281844;
     * }
     */
    public static int HB_SCRIPT_AVESTAN() {
        return (int)1098281844L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_BAMUM = 1113681269;
     * }
     */
    public static int HB_SCRIPT_BAMUM() {
        return (int)1113681269L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_EGYPTIAN_HIEROGLYPHS = 1164409200;
     * }
     */
    public static int HB_SCRIPT_EGYPTIAN_HIEROGLYPHS() {
        return (int)1164409200L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_IMPERIAL_ARAMAIC = 1098018153;
     * }
     */
    public static int HB_SCRIPT_IMPERIAL_ARAMAIC() {
        return (int)1098018153L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_INSCRIPTIONAL_PAHLAVI = 1349020777;
     * }
     */
    public static int HB_SCRIPT_INSCRIPTIONAL_PAHLAVI() {
        return (int)1349020777L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_INSCRIPTIONAL_PARTHIAN = 1349678185;
     * }
     */
    public static int HB_SCRIPT_INSCRIPTIONAL_PARTHIAN() {
        return (int)1349678185L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_JAVANESE = 1247901281;
     * }
     */
    public static int HB_SCRIPT_JAVANESE() {
        return (int)1247901281L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_KAITHI = 1265920105;
     * }
     */
    public static int HB_SCRIPT_KAITHI() {
        return (int)1265920105L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_LISU = 1281979253;
     * }
     */
    public static int HB_SCRIPT_LISU() {
        return (int)1281979253L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_MEETEI_MAYEK = 1299473769;
     * }
     */
    public static int HB_SCRIPT_MEETEI_MAYEK() {
        return (int)1299473769L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_OLD_SOUTH_ARABIAN = 1398895202;
     * }
     */
    public static int HB_SCRIPT_OLD_SOUTH_ARABIAN() {
        return (int)1398895202L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_OLD_TURKIC = 1332898664;
     * }
     */
    public static int HB_SCRIPT_OLD_TURKIC() {
        return (int)1332898664L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_SAMARITAN = 1398893938;
     * }
     */
    public static int HB_SCRIPT_SAMARITAN() {
        return (int)1398893938L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_TAI_THAM = 1281453665;
     * }
     */
    public static int HB_SCRIPT_TAI_THAM() {
        return (int)1281453665L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_TAI_VIET = 1415673460;
     * }
     */
    public static int HB_SCRIPT_TAI_VIET() {
        return (int)1415673460L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_BATAK = 1113683051;
     * }
     */
    public static int HB_SCRIPT_BATAK() {
        return (int)1113683051L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_BRAHMI = 1114792296;
     * }
     */
    public static int HB_SCRIPT_BRAHMI() {
        return (int)1114792296L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_MANDAIC = 1298230884;
     * }
     */
    public static int HB_SCRIPT_MANDAIC() {
        return (int)1298230884L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_CHAKMA = 1130457965;
     * }
     */
    public static int HB_SCRIPT_CHAKMA() {
        return (int)1130457965L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_MEROITIC_CURSIVE = 1298494051;
     * }
     */
    public static int HB_SCRIPT_MEROITIC_CURSIVE() {
        return (int)1298494051L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_MEROITIC_HIEROGLYPHS = 1298494063;
     * }
     */
    public static int HB_SCRIPT_MEROITIC_HIEROGLYPHS() {
        return (int)1298494063L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_MIAO = 1349284452;
     * }
     */
    public static int HB_SCRIPT_MIAO() {
        return (int)1349284452L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_SHARADA = 1399353956;
     * }
     */
    public static int HB_SCRIPT_SHARADA() {
        return (int)1399353956L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_SORA_SOMPENG = 1399812705;
     * }
     */
    public static int HB_SCRIPT_SORA_SOMPENG() {
        return (int)1399812705L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_TAKRI = 1415670642;
     * }
     */
    public static int HB_SCRIPT_TAKRI() {
        return (int)1415670642L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_BASSA_VAH = 1113682803;
     * }
     */
    public static int HB_SCRIPT_BASSA_VAH() {
        return (int)1113682803L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_CAUCASIAN_ALBANIAN = 1097295970;
     * }
     */
    public static int HB_SCRIPT_CAUCASIAN_ALBANIAN() {
        return (int)1097295970L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_DUPLOYAN = 1148547180;
     * }
     */
    public static int HB_SCRIPT_DUPLOYAN() {
        return (int)1148547180L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_ELBASAN = 1164730977;
     * }
     */
    public static int HB_SCRIPT_ELBASAN() {
        return (int)1164730977L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_GRANTHA = 1198678382;
     * }
     */
    public static int HB_SCRIPT_GRANTHA() {
        return (int)1198678382L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_KHOJKI = 1265135466;
     * }
     */
    public static int HB_SCRIPT_KHOJKI() {
        return (int)1265135466L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_KHUDAWADI = 1399418468;
     * }
     */
    public static int HB_SCRIPT_KHUDAWADI() {
        return (int)1399418468L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_LINEAR_A = 1281977953;
     * }
     */
    public static int HB_SCRIPT_LINEAR_A() {
        return (int)1281977953L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_MAHAJANI = 1298229354;
     * }
     */
    public static int HB_SCRIPT_MAHAJANI() {
        return (int)1298229354L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_MANICHAEAN = 1298230889;
     * }
     */
    public static int HB_SCRIPT_MANICHAEAN() {
        return (int)1298230889L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_MENDE_KIKAKUI = 1298493028;
     * }
     */
    public static int HB_SCRIPT_MENDE_KIKAKUI() {
        return (int)1298493028L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_MODI = 1299145833;
     * }
     */
    public static int HB_SCRIPT_MODI() {
        return (int)1299145833L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_MRO = 1299345263;
     * }
     */
    public static int HB_SCRIPT_MRO() {
        return (int)1299345263L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_NABATAEAN = 1315070324;
     * }
     */
    public static int HB_SCRIPT_NABATAEAN() {
        return (int)1315070324L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_OLD_NORTH_ARABIAN = 1315009122;
     * }
     */
    public static int HB_SCRIPT_OLD_NORTH_ARABIAN() {
        return (int)1315009122L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_OLD_PERMIC = 1348825709;
     * }
     */
    public static int HB_SCRIPT_OLD_PERMIC() {
        return (int)1348825709L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_PAHAWH_HMONG = 1215131239;
     * }
     */
    public static int HB_SCRIPT_PAHAWH_HMONG() {
        return (int)1215131239L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_PALMYRENE = 1348562029;
     * }
     */
    public static int HB_SCRIPT_PALMYRENE() {
        return (int)1348562029L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_PAU_CIN_HAU = 1348564323;
     * }
     */
    public static int HB_SCRIPT_PAU_CIN_HAU() {
        return (int)1348564323L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_PSALTER_PAHLAVI = 1349020784;
     * }
     */
    public static int HB_SCRIPT_PSALTER_PAHLAVI() {
        return (int)1349020784L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_SIDDHAM = 1399415908;
     * }
     */
    public static int HB_SCRIPT_SIDDHAM() {
        return (int)1399415908L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_TIRHUTA = 1416196712;
     * }
     */
    public static int HB_SCRIPT_TIRHUTA() {
        return (int)1416196712L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_WARANG_CITI = 1466004065;
     * }
     */
    public static int HB_SCRIPT_WARANG_CITI() {
        return (int)1466004065L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_AHOM = 1097363309;
     * }
     */
    public static int HB_SCRIPT_AHOM() {
        return (int)1097363309L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_ANATOLIAN_HIEROGLYPHS = 1215067511;
     * }
     */
    public static int HB_SCRIPT_ANATOLIAN_HIEROGLYPHS() {
        return (int)1215067511L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_HATRAN = 1214346354;
     * }
     */
    public static int HB_SCRIPT_HATRAN() {
        return (int)1214346354L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_MULTANI = 1299541108;
     * }
     */
    public static int HB_SCRIPT_MULTANI() {
        return (int)1299541108L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_OLD_HUNGARIAN = 1215655527;
     * }
     */
    public static int HB_SCRIPT_OLD_HUNGARIAN() {
        return (int)1215655527L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_SIGNWRITING = 1399287415;
     * }
     */
    public static int HB_SCRIPT_SIGNWRITING() {
        return (int)1399287415L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_ADLAM = 1097100397;
     * }
     */
    public static int HB_SCRIPT_ADLAM() {
        return (int)1097100397L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_BHAIKSUKI = 1114139507;
     * }
     */
    public static int HB_SCRIPT_BHAIKSUKI() {
        return (int)1114139507L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_MARCHEN = 1298231907;
     * }
     */
    public static int HB_SCRIPT_MARCHEN() {
        return (int)1298231907L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_OSAGE = 1332963173;
     * }
     */
    public static int HB_SCRIPT_OSAGE() {
        return (int)1332963173L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_TANGUT = 1415671399;
     * }
     */
    public static int HB_SCRIPT_TANGUT() {
        return (int)1415671399L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_NEWA = 1315272545;
     * }
     */
    public static int HB_SCRIPT_NEWA() {
        return (int)1315272545L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_MASARAM_GONDI = 1198485101;
     * }
     */
    public static int HB_SCRIPT_MASARAM_GONDI() {
        return (int)1198485101L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_NUSHU = 1316186229;
     * }
     */
    public static int HB_SCRIPT_NUSHU() {
        return (int)1316186229L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_SOYOMBO = 1399814511;
     * }
     */
    public static int HB_SCRIPT_SOYOMBO() {
        return (int)1399814511L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_ZANABAZAR_SQUARE = 1516334690;
     * }
     */
    public static int HB_SCRIPT_ZANABAZAR_SQUARE() {
        return (int)1516334690L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_DOGRA = 1148151666;
     * }
     */
    public static int HB_SCRIPT_DOGRA() {
        return (int)1148151666L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_GUNJALA_GONDI = 1198485095;
     * }
     */
    public static int HB_SCRIPT_GUNJALA_GONDI() {
        return (int)1198485095L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_HANIFI_ROHINGYA = 1383032935;
     * }
     */
    public static int HB_SCRIPT_HANIFI_ROHINGYA() {
        return (int)1383032935L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_MAKASAR = 1298230113;
     * }
     */
    public static int HB_SCRIPT_MAKASAR() {
        return (int)1298230113L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_MEDEFAIDRIN = 1298490470;
     * }
     */
    public static int HB_SCRIPT_MEDEFAIDRIN() {
        return (int)1298490470L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_OLD_SOGDIAN = 1399809903;
     * }
     */
    public static int HB_SCRIPT_OLD_SOGDIAN() {
        return (int)1399809903L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_SOGDIAN = 1399809892;
     * }
     */
    public static int HB_SCRIPT_SOGDIAN() {
        return (int)1399809892L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_ELYMAIC = 1164736877;
     * }
     */
    public static int HB_SCRIPT_ELYMAIC() {
        return (int)1164736877L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_NANDINAGARI = 1315008100;
     * }
     */
    public static int HB_SCRIPT_NANDINAGARI() {
        return (int)1315008100L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_NYIAKENG_PUACHUE_HMONG = 1215131248;
     * }
     */
    public static int HB_SCRIPT_NYIAKENG_PUACHUE_HMONG() {
        return (int)1215131248L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_WANCHO = 1466132591;
     * }
     */
    public static int HB_SCRIPT_WANCHO() {
        return (int)1466132591L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_CHORASMIAN = 1130918515;
     * }
     */
    public static int HB_SCRIPT_CHORASMIAN() {
        return (int)1130918515L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_DIVES_AKURU = 1147756907;
     * }
     */
    public static int HB_SCRIPT_DIVES_AKURU() {
        return (int)1147756907L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_KHITAN_SMALL_SCRIPT = 1265202291;
     * }
     */
    public static int HB_SCRIPT_KHITAN_SMALL_SCRIPT() {
        return (int)1265202291L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_YEZIDI = 1499822697;
     * }
     */
    public static int HB_SCRIPT_YEZIDI() {
        return (int)1499822697L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_CYPRO_MINOAN = 1131441518;
     * }
     */
    public static int HB_SCRIPT_CYPRO_MINOAN() {
        return (int)1131441518L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_OLD_UYGHUR = 1333094258;
     * }
     */
    public static int HB_SCRIPT_OLD_UYGHUR() {
        return (int)1333094258L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_TANGSA = 1416524641;
     * }
     */
    public static int HB_SCRIPT_TANGSA() {
        return (int)1416524641L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_TOTO = 1416590447;
     * }
     */
    public static int HB_SCRIPT_TOTO() {
        return (int)1416590447L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_VITHKUQI = 1449751656;
     * }
     */
    public static int HB_SCRIPT_VITHKUQI() {
        return (int)1449751656L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_MATH = 1517122664;
     * }
     */
    public static int HB_SCRIPT_MATH() {
        return (int)1517122664L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_KAWI = 1264678761;
     * }
     */
    public static int HB_SCRIPT_KAWI() {
        return (int)1264678761L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_NAG_MUNDARI = 1315006317;
     * }
     */
    public static int HB_SCRIPT_NAG_MUNDARI() {
        return (int)1315006317L;
    }
    /**
     * {@snippet :
     * enum hb_script_t.HB_SCRIPT_INVALID = 0;
     * }
     */
    public static int HB_SCRIPT_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum hb_script_t._HB_SCRIPT_MAX_VALUE = 2147483647;
     * }
     */
    public static int _HB_SCRIPT_MAX_VALUE() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * enum hb_script_t._HB_SCRIPT_MAX_VALUE_SIGNED = 2147483647;
     * }
     */
    public static int _HB_SCRIPT_MAX_VALUE_SIGNED() {
        return (int)2147483647L;
    }
    public static MethodHandle hb_script_from_iso15924_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$1420.const$2,"hb_script_from_iso15924_tag");
    }
    /**
     * {@snippet :
     * enum hb_script_t hb_script_from_iso15924_tag(unsigned int tag);
     * }
     */
    public static int hb_script_from_iso15924_tag(int tag) {
        var mh$ = hb_script_from_iso15924_tag$MH();
        try {
            return (int)mh$.invokeExact(tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_script_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1420.const$3,"hb_script_from_string");
    }
    /**
     * {@snippet :
     * enum hb_script_t hb_script_from_string(char* str, int len);
     * }
     */
    public static int hb_script_from_string(MemorySegment str, int len) {
        var mh$ = hb_script_from_string$MH();
        try {
            return (int)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_script_to_iso15924_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$1420.const$4,"hb_script_to_iso15924_tag");
    }
    /**
     * {@snippet :
     * unsigned int hb_script_to_iso15924_tag(enum hb_script_t script);
     * }
     */
    public static int hb_script_to_iso15924_tag(int script) {
        var mh$ = hb_script_to_iso15924_tag$MH();
        try {
            return (int)mh$.invokeExact(script);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_script_get_horizontal_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1420.const$5,"hb_script_get_horizontal_direction");
    }
    /**
     * {@snippet :
     * enum hb_direction_t hb_script_get_horizontal_direction(enum hb_script_t script);
     * }
     */
    public static int hb_script_get_horizontal_direction(int script) {
        var mh$ = hb_script_get_horizontal_direction$MH();
        try {
            return (int)mh$.invokeExact(script);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_feature_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1422.const$2,"hb_feature_from_string");
    }
    /**
     * {@snippet :
     * int hb_feature_from_string(char* str, int len, struct hb_feature_t* feature);
     * }
     */
    public static int hb_feature_from_string(MemorySegment str, int len, MemorySegment feature) {
        var mh$ = hb_feature_from_string$MH();
        try {
            return (int)mh$.invokeExact(str, len, feature);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_feature_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1422.const$3,"hb_feature_to_string");
    }
    /**
     * {@snippet :
     * void hb_feature_to_string(struct hb_feature_t* feature, char* buf, unsigned int size);
     * }
     */
    public static void hb_feature_to_string(MemorySegment feature, MemorySegment buf, int size) {
        var mh$ = hb_feature_to_string$MH();
        try {
            mh$.invokeExact(feature, buf, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_variation_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1423.const$1,"hb_variation_from_string");
    }
    /**
     * {@snippet :
     * int hb_variation_from_string(char* str, int len, struct hb_variation_t* variation);
     * }
     */
    public static int hb_variation_from_string(MemorySegment str, int len, MemorySegment variation) {
        var mh$ = hb_variation_from_string$MH();
        try {
            return (int)mh$.invokeExact(str, len, variation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_variation_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1423.const$2,"hb_variation_to_string");
    }
    /**
     * {@snippet :
     * void hb_variation_to_string(struct hb_variation_t* variation, char* buf, unsigned int size);
     * }
     */
    public static void hb_variation_to_string(MemorySegment variation, MemorySegment buf, int size) {
        var mh$ = hb_variation_to_string$MH();
        try {
            mh$.invokeExact(variation, buf, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef unsigned int hb_color_t;
     * }
     */
    public static final OfInt hb_color_t = JAVA_INT;
    public static MethodHandle hb_color_get_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1423.const$4,"hb_color_get_alpha");
    }
    /**
     * {@snippet :
     * unsigned char hb_color_get_alpha(unsigned int color);
     * }
     */
    public static byte hb_color_get_alpha(int color) {
        var mh$ = hb_color_get_alpha$MH();
        try {
            return (byte)mh$.invokeExact(color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_color_get_red$MH() {
        return RuntimeHelper.requireNonNull(constants$1423.const$5,"hb_color_get_red");
    }
    /**
     * {@snippet :
     * unsigned char hb_color_get_red(unsigned int color);
     * }
     */
    public static byte hb_color_get_red(int color) {
        var mh$ = hb_color_get_red$MH();
        try {
            return (byte)mh$.invokeExact(color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_color_get_green$MH() {
        return RuntimeHelper.requireNonNull(constants$1424.const$0,"hb_color_get_green");
    }
    /**
     * {@snippet :
     * unsigned char hb_color_get_green(unsigned int color);
     * }
     */
    public static byte hb_color_get_green(int color) {
        var mh$ = hb_color_get_green$MH();
        try {
            return (byte)mh$.invokeExact(color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_color_get_blue$MH() {
        return RuntimeHelper.requireNonNull(constants$1424.const$1,"hb_color_get_blue");
    }
    /**
     * {@snippet :
     * unsigned char hb_color_get_blue(unsigned int color);
     * }
     */
    public static byte hb_color_get_blue(int color) {
        var mh$ = hb_color_get_blue$MH();
        try {
            return (byte)mh$.invokeExact(color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum hb_memory_mode_t.HB_MEMORY_MODE_DUPLICATE = 0;
     * }
     */
    public static int HB_MEMORY_MODE_DUPLICATE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum hb_memory_mode_t.HB_MEMORY_MODE_READONLY = 1;
     * }
     */
    public static int HB_MEMORY_MODE_READONLY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum hb_memory_mode_t.HB_MEMORY_MODE_WRITABLE = 2;
     * }
     */
    public static int HB_MEMORY_MODE_WRITABLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum hb_memory_mode_t.HB_MEMORY_MODE_READONLY_MAY_MAKE_WRITABLE = 3;
     * }
     */
    public static int HB_MEMORY_MODE_READONLY_MAY_MAKE_WRITABLE() {
        return (int)3L;
    }
    public static MethodHandle hb_blob_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1425.const$3,"hb_blob_create");
    }
    /**
     * {@snippet :
     * struct hb_blob_t* hb_blob_create(char* data, unsigned int length, enum hb_memory_mode_t mode, void* user_data, void (*destroy)(void*));
     * }
     */
    public static MemorySegment hb_blob_create(MemorySegment data, int length, int mode, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_blob_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(data, length, mode, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_blob_create_or_fail$MH() {
        return RuntimeHelper.requireNonNull(constants$1425.const$5,"hb_blob_create_or_fail");
    }
    /**
     * {@snippet :
     * struct hb_blob_t* hb_blob_create_or_fail(char* data, unsigned int length, enum hb_memory_mode_t mode, void* user_data, void (*destroy)(void*));
     * }
     */
    public static MemorySegment hb_blob_create_or_fail(MemorySegment data, int length, int mode, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_blob_create_or_fail$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(data, length, mode, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_blob_create_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1426.const$0,"hb_blob_create_from_file");
    }
    /**
     * {@snippet :
     * struct hb_blob_t* hb_blob_create_from_file(char* file_name);
     * }
     */
    public static MemorySegment hb_blob_create_from_file(MemorySegment file_name) {
        var mh$ = hb_blob_create_from_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_blob_create_from_file_or_fail$MH() {
        return RuntimeHelper.requireNonNull(constants$1426.const$1,"hb_blob_create_from_file_or_fail");
    }
    /**
     * {@snippet :
     * struct hb_blob_t* hb_blob_create_from_file_or_fail(char* file_name);
     * }
     */
    public static MemorySegment hb_blob_create_from_file_or_fail(MemorySegment file_name) {
        var mh$ = hb_blob_create_from_file_or_fail$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_blob_create_sub_blob$MH() {
        return RuntimeHelper.requireNonNull(constants$1426.const$2,"hb_blob_create_sub_blob");
    }
    /**
     * {@snippet :
     * struct hb_blob_t* hb_blob_create_sub_blob(struct hb_blob_t* parent, unsigned int offset, unsigned int length);
     * }
     */
    public static MemorySegment hb_blob_create_sub_blob(MemorySegment parent, int offset, int length) {
        var mh$ = hb_blob_create_sub_blob$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parent, offset, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_blob_copy_writable_or_fail$MH() {
        return RuntimeHelper.requireNonNull(constants$1426.const$3,"hb_blob_copy_writable_or_fail");
    }
    /**
     * {@snippet :
     * struct hb_blob_t* hb_blob_copy_writable_or_fail(struct hb_blob_t* blob);
     * }
     */
    public static MemorySegment hb_blob_copy_writable_or_fail(MemorySegment blob) {
        var mh$ = hb_blob_copy_writable_or_fail$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(blob);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_blob_get_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$1426.const$4,"hb_blob_get_empty");
    }
    /**
     * {@snippet :
     * struct hb_blob_t* hb_blob_get_empty();
     * }
     */
    public static MemorySegment hb_blob_get_empty() {
        var mh$ = hb_blob_get_empty$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_blob_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1426.const$5,"hb_blob_reference");
    }
    /**
     * {@snippet :
     * struct hb_blob_t* hb_blob_reference(struct hb_blob_t* blob);
     * }
     */
    public static MemorySegment hb_blob_reference(MemorySegment blob) {
        var mh$ = hb_blob_reference$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(blob);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_blob_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1427.const$0,"hb_blob_destroy");
    }
    /**
     * {@snippet :
     * void hb_blob_destroy(struct hb_blob_t* blob);
     * }
     */
    public static void hb_blob_destroy(MemorySegment blob) {
        var mh$ = hb_blob_destroy$MH();
        try {
            mh$.invokeExact(blob);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_blob_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1427.const$3,"hb_blob_set_user_data");
    }
    /**
     * {@snippet :
     * int hb_blob_set_user_data(struct hb_blob_t* blob, struct hb_user_data_key_t* key, void* data, void (*destroy)(void*), int replace);
     * }
     */
    public static int hb_blob_set_user_data(MemorySegment blob, MemorySegment key, MemorySegment data, MemorySegment destroy, int replace) {
        var mh$ = hb_blob_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(blob, key, data, destroy, replace);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_blob_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1427.const$4,"hb_blob_get_user_data");
    }
    /**
     * {@snippet :
     * void* hb_blob_get_user_data(struct hb_blob_t* blob, struct hb_user_data_key_t* key);
     * }
     */
    public static MemorySegment hb_blob_get_user_data(MemorySegment blob, MemorySegment key) {
        var mh$ = hb_blob_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(blob, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_blob_make_immutable$MH() {
        return RuntimeHelper.requireNonNull(constants$1427.const$5,"hb_blob_make_immutable");
    }
    /**
     * {@snippet :
     * void hb_blob_make_immutable(struct hb_blob_t* blob);
     * }
     */
    public static void hb_blob_make_immutable(MemorySegment blob) {
        var mh$ = hb_blob_make_immutable$MH();
        try {
            mh$.invokeExact(blob);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_blob_is_immutable$MH() {
        return RuntimeHelper.requireNonNull(constants$1428.const$0,"hb_blob_is_immutable");
    }
    /**
     * {@snippet :
     * int hb_blob_is_immutable(struct hb_blob_t* blob);
     * }
     */
    public static int hb_blob_is_immutable(MemorySegment blob) {
        var mh$ = hb_blob_is_immutable$MH();
        try {
            return (int)mh$.invokeExact(blob);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_blob_get_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1428.const$1,"hb_blob_get_length");
    }
    /**
     * {@snippet :
     * unsigned int hb_blob_get_length(struct hb_blob_t* blob);
     * }
     */
    public static int hb_blob_get_length(MemorySegment blob) {
        var mh$ = hb_blob_get_length$MH();
        try {
            return (int)mh$.invokeExact(blob);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_blob_get_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1428.const$2,"hb_blob_get_data");
    }
    /**
     * {@snippet :
     * char* hb_blob_get_data(struct hb_blob_t* blob, unsigned int* length);
     * }
     */
    public static MemorySegment hb_blob_get_data(MemorySegment blob, MemorySegment length) {
        var mh$ = hb_blob_get_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(blob, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_blob_get_data_writable$MH() {
        return RuntimeHelper.requireNonNull(constants$1428.const$3,"hb_blob_get_data_writable");
    }
    /**
     * {@snippet :
     * char* hb_blob_get_data_writable(struct hb_blob_t* blob, unsigned int* length);
     * }
     */
    public static MemorySegment hb_blob_get_data_writable(MemorySegment blob, MemorySegment length) {
        var mh$ = hb_blob_get_data_writable$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(blob, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_CONTROL = 0;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_CONTROL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_FORMAT = 1;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_FORMAT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_UNASSIGNED = 2;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_UNASSIGNED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_PRIVATE_USE = 3;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_PRIVATE_USE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_SURROGATE = 4;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_SURROGATE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_LOWERCASE_LETTER = 5;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_LOWERCASE_LETTER() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_MODIFIER_LETTER = 6;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_MODIFIER_LETTER() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_OTHER_LETTER = 7;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_OTHER_LETTER() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_TITLECASE_LETTER = 8;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_TITLECASE_LETTER() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_UPPERCASE_LETTER = 9;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_UPPERCASE_LETTER() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_SPACING_MARK = 10;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_SPACING_MARK() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_ENCLOSING_MARK = 11;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_ENCLOSING_MARK() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_NON_SPACING_MARK = 12;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_NON_SPACING_MARK() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_DECIMAL_NUMBER = 13;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_DECIMAL_NUMBER() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_LETTER_NUMBER = 14;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_LETTER_NUMBER() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_OTHER_NUMBER = 15;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_OTHER_NUMBER() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_CONNECT_PUNCTUATION = 16;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_CONNECT_PUNCTUATION() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_DASH_PUNCTUATION = 17;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_DASH_PUNCTUATION() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_CLOSE_PUNCTUATION = 18;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_CLOSE_PUNCTUATION() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_FINAL_PUNCTUATION = 19;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_FINAL_PUNCTUATION() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_INITIAL_PUNCTUATION = 20;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_INITIAL_PUNCTUATION() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_OTHER_PUNCTUATION = 21;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_OTHER_PUNCTUATION() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_OPEN_PUNCTUATION = 22;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_OPEN_PUNCTUATION() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_CURRENCY_SYMBOL = 23;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_CURRENCY_SYMBOL() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_MODIFIER_SYMBOL = 24;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_MODIFIER_SYMBOL() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_MATH_SYMBOL = 25;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_MATH_SYMBOL() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_OTHER_SYMBOL = 26;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_OTHER_SYMBOL() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_LINE_SEPARATOR = 27;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_LINE_SEPARATOR() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_PARAGRAPH_SEPARATOR = 28;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_PARAGRAPH_SEPARATOR() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t.HB_UNICODE_GENERAL_CATEGORY_SPACE_SEPARATOR = 29;
     * }
     */
    public static int HB_UNICODE_GENERAL_CATEGORY_SPACE_SEPARATOR() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_NOT_REORDERED = 0;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_NOT_REORDERED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_OVERLAY = 1;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_OVERLAY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_NUKTA = 7;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_NUKTA() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_KANA_VOICING = 8;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_KANA_VOICING() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_VIRAMA = 9;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_VIRAMA() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC10 = 10;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC10() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC11 = 11;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC11() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC12 = 12;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC12() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC13 = 13;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC13() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC14 = 14;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC14() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC15 = 15;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC15() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC16 = 16;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC16() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC17 = 17;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC17() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC18 = 18;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC18() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC19 = 19;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC19() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC20 = 20;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC20() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC21 = 21;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC21() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC22 = 22;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC22() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC23 = 23;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC23() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC24 = 24;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC24() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC25 = 25;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC25() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC26 = 26;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC26() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC27 = 27;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC27() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC28 = 28;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC28() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC29 = 29;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC29() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC30 = 30;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC30() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC31 = 31;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC31() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC32 = 32;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC32() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC33 = 33;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC33() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC34 = 34;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC34() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC35 = 35;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC35() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC36 = 36;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC36() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC84 = 84;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC84() {
        return (int)84L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC91 = 91;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC91() {
        return (int)91L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC103 = 103;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC103() {
        return (int)103L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC107 = 107;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC107() {
        return (int)107L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC118 = 118;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC118() {
        return (int)118L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC122 = 122;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC122() {
        return (int)122L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC129 = 129;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC129() {
        return (int)129L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC130 = 130;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC130() {
        return (int)130L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_CCC132 = 132;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_CCC132() {
        return (int)132L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW_LEFT = 200;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW_LEFT() {
        return (int)200L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW = 202;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW() {
        return (int)202L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE = 214;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE() {
        return (int)214L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE_RIGHT = 216;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE_RIGHT() {
        return (int)216L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_BELOW_LEFT = 218;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_BELOW_LEFT() {
        return (int)218L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_BELOW = 220;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_BELOW() {
        return (int)220L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_BELOW_RIGHT = 222;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_BELOW_RIGHT() {
        return (int)222L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_LEFT = 224;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_LEFT() {
        return (int)224L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_RIGHT = 226;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_RIGHT() {
        return (int)226L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_ABOVE_LEFT = 228;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_ABOVE_LEFT() {
        return (int)228L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_ABOVE = 230;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_ABOVE() {
        return (int)230L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_ABOVE_RIGHT = 232;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_ABOVE_RIGHT() {
        return (int)232L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_DOUBLE_BELOW = 233;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_DOUBLE_BELOW() {
        return (int)233L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_DOUBLE_ABOVE = 234;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_DOUBLE_ABOVE() {
        return (int)234L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_IOTA_SUBSCRIPT = 240;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_IOTA_SUBSCRIPT() {
        return (int)240L;
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t.HB_UNICODE_COMBINING_CLASS_INVALID = 255;
     * }
     */
    public static int HB_UNICODE_COMBINING_CLASS_INVALID() {
        return (int)255L;
    }
    public static MethodHandle hb_unicode_funcs_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$1428.const$4,"hb_unicode_funcs_get_default");
    }
    /**
     * {@snippet :
     * struct hb_unicode_funcs_t* hb_unicode_funcs_get_default();
     * }
     */
    public static MemorySegment hb_unicode_funcs_get_default() {
        var mh$ = hb_unicode_funcs_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_funcs_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1428.const$5,"hb_unicode_funcs_create");
    }
    /**
     * {@snippet :
     * struct hb_unicode_funcs_t* hb_unicode_funcs_create(struct hb_unicode_funcs_t* parent);
     * }
     */
    public static MemorySegment hb_unicode_funcs_create(MemorySegment parent) {
        var mh$ = hb_unicode_funcs_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_funcs_get_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$1429.const$0,"hb_unicode_funcs_get_empty");
    }
    /**
     * {@snippet :
     * struct hb_unicode_funcs_t* hb_unicode_funcs_get_empty();
     * }
     */
    public static MemorySegment hb_unicode_funcs_get_empty() {
        var mh$ = hb_unicode_funcs_get_empty$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_funcs_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1429.const$1,"hb_unicode_funcs_reference");
    }
    /**
     * {@snippet :
     * struct hb_unicode_funcs_t* hb_unicode_funcs_reference(struct hb_unicode_funcs_t* ufuncs);
     * }
     */
    public static MemorySegment hb_unicode_funcs_reference(MemorySegment ufuncs) {
        var mh$ = hb_unicode_funcs_reference$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(ufuncs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_funcs_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1429.const$2,"hb_unicode_funcs_destroy");
    }
    /**
     * {@snippet :
     * void hb_unicode_funcs_destroy(struct hb_unicode_funcs_t* ufuncs);
     * }
     */
    public static void hb_unicode_funcs_destroy(MemorySegment ufuncs) {
        var mh$ = hb_unicode_funcs_destroy$MH();
        try {
            mh$.invokeExact(ufuncs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_funcs_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1429.const$4,"hb_unicode_funcs_set_user_data");
    }
    /**
     * {@snippet :
     * int hb_unicode_funcs_set_user_data(struct hb_unicode_funcs_t* ufuncs, struct hb_user_data_key_t* key, void* data, void (*destroy)(void*), int replace);
     * }
     */
    public static int hb_unicode_funcs_set_user_data(MemorySegment ufuncs, MemorySegment key, MemorySegment data, MemorySegment destroy, int replace) {
        var mh$ = hb_unicode_funcs_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(ufuncs, key, data, destroy, replace);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_funcs_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1429.const$5,"hb_unicode_funcs_get_user_data");
    }
    /**
     * {@snippet :
     * void* hb_unicode_funcs_get_user_data(struct hb_unicode_funcs_t* ufuncs, struct hb_user_data_key_t* key);
     * }
     */
    public static MemorySegment hb_unicode_funcs_get_user_data(MemorySegment ufuncs, MemorySegment key) {
        var mh$ = hb_unicode_funcs_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(ufuncs, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_funcs_make_immutable$MH() {
        return RuntimeHelper.requireNonNull(constants$1430.const$0,"hb_unicode_funcs_make_immutable");
    }
    /**
     * {@snippet :
     * void hb_unicode_funcs_make_immutable(struct hb_unicode_funcs_t* ufuncs);
     * }
     */
    public static void hb_unicode_funcs_make_immutable(MemorySegment ufuncs) {
        var mh$ = hb_unicode_funcs_make_immutable$MH();
        try {
            mh$.invokeExact(ufuncs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_funcs_is_immutable$MH() {
        return RuntimeHelper.requireNonNull(constants$1430.const$1,"hb_unicode_funcs_is_immutable");
    }
    /**
     * {@snippet :
     * int hb_unicode_funcs_is_immutable(struct hb_unicode_funcs_t* ufuncs);
     * }
     */
    public static int hb_unicode_funcs_is_immutable(MemorySegment ufuncs) {
        var mh$ = hb_unicode_funcs_is_immutable$MH();
        try {
            return (int)mh$.invokeExact(ufuncs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_funcs_get_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1430.const$2,"hb_unicode_funcs_get_parent");
    }
    /**
     * {@snippet :
     * struct hb_unicode_funcs_t* hb_unicode_funcs_get_parent(struct hb_unicode_funcs_t* ufuncs);
     * }
     */
    public static MemorySegment hb_unicode_funcs_get_parent(MemorySegment ufuncs) {
        var mh$ = hb_unicode_funcs_get_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(ufuncs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_funcs_set_combining_class_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1432.const$0,"hb_unicode_funcs_set_combining_class_func");
    }
    /**
     * {@snippet :
     * void hb_unicode_funcs_set_combining_class_func(struct hb_unicode_funcs_t* ufuncs, enum hb_unicode_combining_class_t (*func)(struct hb_unicode_funcs_t*,unsigned int,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_unicode_funcs_set_combining_class_func(MemorySegment ufuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_unicode_funcs_set_combining_class_func$MH();
        try {
            mh$.invokeExact(ufuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_funcs_set_general_category_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1432.const$3,"hb_unicode_funcs_set_general_category_func");
    }
    /**
     * {@snippet :
     * void hb_unicode_funcs_set_general_category_func(struct hb_unicode_funcs_t* ufuncs, enum hb_unicode_general_category_t (*func)(struct hb_unicode_funcs_t*,unsigned int,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_unicode_funcs_set_general_category_func(MemorySegment ufuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_unicode_funcs_set_general_category_func$MH();
        try {
            mh$.invokeExact(ufuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_funcs_set_mirroring_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1433.const$0,"hb_unicode_funcs_set_mirroring_func");
    }
    /**
     * {@snippet :
     * void hb_unicode_funcs_set_mirroring_func(struct hb_unicode_funcs_t* ufuncs, unsigned int (*func)(struct hb_unicode_funcs_t*,unsigned int,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_unicode_funcs_set_mirroring_func(MemorySegment ufuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_unicode_funcs_set_mirroring_func$MH();
        try {
            mh$.invokeExact(ufuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_funcs_set_script_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1433.const$3,"hb_unicode_funcs_set_script_func");
    }
    /**
     * {@snippet :
     * void hb_unicode_funcs_set_script_func(struct hb_unicode_funcs_t* ufuncs, enum hb_script_t (*func)(struct hb_unicode_funcs_t*,unsigned int,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_unicode_funcs_set_script_func(MemorySegment ufuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_unicode_funcs_set_script_func$MH();
        try {
            mh$.invokeExact(ufuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_funcs_set_compose_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1434.const$0,"hb_unicode_funcs_set_compose_func");
    }
    /**
     * {@snippet :
     * void hb_unicode_funcs_set_compose_func(struct hb_unicode_funcs_t* ufuncs, int (*func)(struct hb_unicode_funcs_t*,unsigned int,unsigned int,unsigned int*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_unicode_funcs_set_compose_func(MemorySegment ufuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_unicode_funcs_set_compose_func$MH();
        try {
            mh$.invokeExact(ufuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_funcs_set_decompose_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1434.const$3,"hb_unicode_funcs_set_decompose_func");
    }
    /**
     * {@snippet :
     * void hb_unicode_funcs_set_decompose_func(struct hb_unicode_funcs_t* ufuncs, int (*func)(struct hb_unicode_funcs_t*,unsigned int,unsigned int*,unsigned int*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_unicode_funcs_set_decompose_func(MemorySegment ufuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_unicode_funcs_set_decompose_func$MH();
        try {
            mh$.invokeExact(ufuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_combining_class$MH() {
        return RuntimeHelper.requireNonNull(constants$1434.const$4,"hb_unicode_combining_class");
    }
    /**
     * {@snippet :
     * enum hb_unicode_combining_class_t hb_unicode_combining_class(struct hb_unicode_funcs_t* ufuncs, unsigned int unicode);
     * }
     */
    public static int hb_unicode_combining_class(MemorySegment ufuncs, int unicode) {
        var mh$ = hb_unicode_combining_class$MH();
        try {
            return (int)mh$.invokeExact(ufuncs, unicode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_general_category$MH() {
        return RuntimeHelper.requireNonNull(constants$1434.const$5,"hb_unicode_general_category");
    }
    /**
     * {@snippet :
     * enum hb_unicode_general_category_t hb_unicode_general_category(struct hb_unicode_funcs_t* ufuncs, unsigned int unicode);
     * }
     */
    public static int hb_unicode_general_category(MemorySegment ufuncs, int unicode) {
        var mh$ = hb_unicode_general_category$MH();
        try {
            return (int)mh$.invokeExact(ufuncs, unicode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_mirroring$MH() {
        return RuntimeHelper.requireNonNull(constants$1435.const$0,"hb_unicode_mirroring");
    }
    /**
     * {@snippet :
     * unsigned int hb_unicode_mirroring(struct hb_unicode_funcs_t* ufuncs, unsigned int unicode);
     * }
     */
    public static int hb_unicode_mirroring(MemorySegment ufuncs, int unicode) {
        var mh$ = hb_unicode_mirroring$MH();
        try {
            return (int)mh$.invokeExact(ufuncs, unicode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_script$MH() {
        return RuntimeHelper.requireNonNull(constants$1435.const$1,"hb_unicode_script");
    }
    /**
     * {@snippet :
     * enum hb_script_t hb_unicode_script(struct hb_unicode_funcs_t* ufuncs, unsigned int unicode);
     * }
     */
    public static int hb_unicode_script(MemorySegment ufuncs, int unicode) {
        var mh$ = hb_unicode_script$MH();
        try {
            return (int)mh$.invokeExact(ufuncs, unicode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_compose$MH() {
        return RuntimeHelper.requireNonNull(constants$1435.const$2,"hb_unicode_compose");
    }
    /**
     * {@snippet :
     * int hb_unicode_compose(struct hb_unicode_funcs_t* ufuncs, unsigned int a, unsigned int b, unsigned int* ab);
     * }
     */
    public static int hb_unicode_compose(MemorySegment ufuncs, int a, int b, MemorySegment ab) {
        var mh$ = hb_unicode_compose$MH();
        try {
            return (int)mh$.invokeExact(ufuncs, a, b, ab);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_decompose$MH() {
        return RuntimeHelper.requireNonNull(constants$1435.const$3,"hb_unicode_decompose");
    }
    /**
     * {@snippet :
     * int hb_unicode_decompose(struct hb_unicode_funcs_t* ufuncs, unsigned int ab, unsigned int* a, unsigned int* b);
     * }
     */
    public static int hb_unicode_decompose(MemorySegment ufuncs, int ab, MemorySegment a, MemorySegment b) {
        var mh$ = hb_unicode_decompose$MH();
        try {
            return (int)mh$.invokeExact(ufuncs, ab, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1435.const$4,"hb_set_create");
    }
    /**
     * {@snippet :
     * struct hb_set_t* hb_set_create();
     * }
     */
    public static MemorySegment hb_set_create() {
        var mh$ = hb_set_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_get_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$1435.const$5,"hb_set_get_empty");
    }
    /**
     * {@snippet :
     * struct hb_set_t* hb_set_get_empty();
     * }
     */
    public static MemorySegment hb_set_get_empty() {
        var mh$ = hb_set_get_empty$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1436.const$0,"hb_set_reference");
    }
    /**
     * {@snippet :
     * struct hb_set_t* hb_set_reference(struct hb_set_t* set);
     * }
     */
    public static MemorySegment hb_set_reference(MemorySegment set) {
        var mh$ = hb_set_reference$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1436.const$1,"hb_set_destroy");
    }
    /**
     * {@snippet :
     * void hb_set_destroy(struct hb_set_t* set);
     * }
     */
    public static void hb_set_destroy(MemorySegment set) {
        var mh$ = hb_set_destroy$MH();
        try {
            mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1436.const$3,"hb_set_set_user_data");
    }
    /**
     * {@snippet :
     * int hb_set_set_user_data(struct hb_set_t* set, struct hb_user_data_key_t* key, void* data, void (*destroy)(void*), int replace);
     * }
     */
    public static int hb_set_set_user_data(MemorySegment set, MemorySegment key, MemorySegment data, MemorySegment destroy, int replace) {
        var mh$ = hb_set_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(set, key, data, destroy, replace);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1436.const$4,"hb_set_get_user_data");
    }
    /**
     * {@snippet :
     * void* hb_set_get_user_data(struct hb_set_t* set, struct hb_user_data_key_t* key);
     * }
     */
    public static MemorySegment hb_set_get_user_data(MemorySegment set, MemorySegment key) {
        var mh$ = hb_set_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(set, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_allocation_successful$MH() {
        return RuntimeHelper.requireNonNull(constants$1436.const$5,"hb_set_allocation_successful");
    }
    /**
     * {@snippet :
     * int hb_set_allocation_successful(struct hb_set_t* set);
     * }
     */
    public static int hb_set_allocation_successful(MemorySegment set) {
        var mh$ = hb_set_allocation_successful$MH();
        try {
            return (int)mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1437.const$0,"hb_set_copy");
    }
    /**
     * {@snippet :
     * struct hb_set_t* hb_set_copy(struct hb_set_t* set);
     * }
     */
    public static MemorySegment hb_set_copy(MemorySegment set) {
        var mh$ = hb_set_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$1437.const$1,"hb_set_clear");
    }
    /**
     * {@snippet :
     * void hb_set_clear(struct hb_set_t* set);
     * }
     */
    public static void hb_set_clear(MemorySegment set) {
        var mh$ = hb_set_clear$MH();
        try {
            mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_is_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$1437.const$2,"hb_set_is_empty");
    }
    /**
     * {@snippet :
     * int hb_set_is_empty(struct hb_set_t* set);
     * }
     */
    public static int hb_set_is_empty(MemorySegment set) {
        var mh$ = hb_set_is_empty$MH();
        try {
            return (int)mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_invert$MH() {
        return RuntimeHelper.requireNonNull(constants$1437.const$3,"hb_set_invert");
    }
    /**
     * {@snippet :
     * void hb_set_invert(struct hb_set_t* set);
     * }
     */
    public static void hb_set_invert(MemorySegment set) {
        var mh$ = hb_set_invert$MH();
        try {
            mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_is_inverted$MH() {
        return RuntimeHelper.requireNonNull(constants$1437.const$4,"hb_set_is_inverted");
    }
    /**
     * {@snippet :
     * int hb_set_is_inverted(struct hb_set_t* set);
     * }
     */
    public static int hb_set_is_inverted(MemorySegment set) {
        var mh$ = hb_set_is_inverted$MH();
        try {
            return (int)mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_has$MH() {
        return RuntimeHelper.requireNonNull(constants$1437.const$5,"hb_set_has");
    }
    /**
     * {@snippet :
     * int hb_set_has(struct hb_set_t* set, unsigned int codepoint);
     * }
     */
    public static int hb_set_has(MemorySegment set, int codepoint) {
        var mh$ = hb_set_has$MH();
        try {
            return (int)mh$.invokeExact(set, codepoint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_add$MH() {
        return RuntimeHelper.requireNonNull(constants$1438.const$0,"hb_set_add");
    }
    /**
     * {@snippet :
     * void hb_set_add(struct hb_set_t* set, unsigned int codepoint);
     * }
     */
    public static void hb_set_add(MemorySegment set, int codepoint) {
        var mh$ = hb_set_add$MH();
        try {
            mh$.invokeExact(set, codepoint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_add_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1438.const$1,"hb_set_add_range");
    }
    /**
     * {@snippet :
     * void hb_set_add_range(struct hb_set_t* set, unsigned int first, unsigned int last);
     * }
     */
    public static void hb_set_add_range(MemorySegment set, int first, int last) {
        var mh$ = hb_set_add_range$MH();
        try {
            mh$.invokeExact(set, first, last);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_add_sorted_array$MH() {
        return RuntimeHelper.requireNonNull(constants$1438.const$2,"hb_set_add_sorted_array");
    }
    /**
     * {@snippet :
     * void hb_set_add_sorted_array(struct hb_set_t* set, unsigned int* sorted_codepoints, unsigned int num_codepoints);
     * }
     */
    public static void hb_set_add_sorted_array(MemorySegment set, MemorySegment sorted_codepoints, int num_codepoints) {
        var mh$ = hb_set_add_sorted_array$MH();
        try {
            mh$.invokeExact(set, sorted_codepoints, num_codepoints);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_del$MH() {
        return RuntimeHelper.requireNonNull(constants$1438.const$3,"hb_set_del");
    }
    /**
     * {@snippet :
     * void hb_set_del(struct hb_set_t* set, unsigned int codepoint);
     * }
     */
    public static void hb_set_del(MemorySegment set, int codepoint) {
        var mh$ = hb_set_del$MH();
        try {
            mh$.invokeExact(set, codepoint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_del_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1438.const$4,"hb_set_del_range");
    }
    /**
     * {@snippet :
     * void hb_set_del_range(struct hb_set_t* set, unsigned int first, unsigned int last);
     * }
     */
    public static void hb_set_del_range(MemorySegment set, int first, int last) {
        var mh$ = hb_set_del_range$MH();
        try {
            mh$.invokeExact(set, first, last);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_is_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1438.const$5,"hb_set_is_equal");
    }
    /**
     * {@snippet :
     * int hb_set_is_equal(struct hb_set_t* set, struct hb_set_t* other);
     * }
     */
    public static int hb_set_is_equal(MemorySegment set, MemorySegment other) {
        var mh$ = hb_set_is_equal$MH();
        try {
            return (int)mh$.invokeExact(set, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$1439.const$0,"hb_set_hash");
    }
    /**
     * {@snippet :
     * unsigned int hb_set_hash(struct hb_set_t* set);
     * }
     */
    public static int hb_set_hash(MemorySegment set) {
        var mh$ = hb_set_hash$MH();
        try {
            return (int)mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_is_subset$MH() {
        return RuntimeHelper.requireNonNull(constants$1439.const$1,"hb_set_is_subset");
    }
    /**
     * {@snippet :
     * int hb_set_is_subset(struct hb_set_t* set, struct hb_set_t* larger_set);
     * }
     */
    public static int hb_set_is_subset(MemorySegment set, MemorySegment larger_set) {
        var mh$ = hb_set_is_subset$MH();
        try {
            return (int)mh$.invokeExact(set, larger_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1439.const$2,"hb_set_set");
    }
    /**
     * {@snippet :
     * void hb_set_set(struct hb_set_t* set, struct hb_set_t* other);
     * }
     */
    public static void hb_set_set(MemorySegment set, MemorySegment other) {
        var mh$ = hb_set_set$MH();
        try {
            mh$.invokeExact(set, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_union$MH() {
        return RuntimeHelper.requireNonNull(constants$1439.const$3,"hb_set_union");
    }
    /**
     * {@snippet :
     * void hb_set_union(struct hb_set_t* set, struct hb_set_t* other);
     * }
     */
    public static void hb_set_union(MemorySegment set, MemorySegment other) {
        var mh$ = hb_set_union$MH();
        try {
            mh$.invokeExact(set, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_intersect$MH() {
        return RuntimeHelper.requireNonNull(constants$1439.const$4,"hb_set_intersect");
    }
    /**
     * {@snippet :
     * void hb_set_intersect(struct hb_set_t* set, struct hb_set_t* other);
     * }
     */
    public static void hb_set_intersect(MemorySegment set, MemorySegment other) {
        var mh$ = hb_set_intersect$MH();
        try {
            mh$.invokeExact(set, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_subtract$MH() {
        return RuntimeHelper.requireNonNull(constants$1439.const$5,"hb_set_subtract");
    }
    /**
     * {@snippet :
     * void hb_set_subtract(struct hb_set_t* set, struct hb_set_t* other);
     * }
     */
    public static void hb_set_subtract(MemorySegment set, MemorySegment other) {
        var mh$ = hb_set_subtract$MH();
        try {
            mh$.invokeExact(set, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_symmetric_difference$MH() {
        return RuntimeHelper.requireNonNull(constants$1440.const$0,"hb_set_symmetric_difference");
    }
    /**
     * {@snippet :
     * void hb_set_symmetric_difference(struct hb_set_t* set, struct hb_set_t* other);
     * }
     */
    public static void hb_set_symmetric_difference(MemorySegment set, MemorySegment other) {
        var mh$ = hb_set_symmetric_difference$MH();
        try {
            mh$.invokeExact(set, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_get_population$MH() {
        return RuntimeHelper.requireNonNull(constants$1440.const$1,"hb_set_get_population");
    }
    /**
     * {@snippet :
     * unsigned int hb_set_get_population(struct hb_set_t* set);
     * }
     */
    public static int hb_set_get_population(MemorySegment set) {
        var mh$ = hb_set_get_population$MH();
        try {
            return (int)mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_get_min$MH() {
        return RuntimeHelper.requireNonNull(constants$1440.const$2,"hb_set_get_min");
    }
    /**
     * {@snippet :
     * unsigned int hb_set_get_min(struct hb_set_t* set);
     * }
     */
    public static int hb_set_get_min(MemorySegment set) {
        var mh$ = hb_set_get_min$MH();
        try {
            return (int)mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_get_max$MH() {
        return RuntimeHelper.requireNonNull(constants$1440.const$3,"hb_set_get_max");
    }
    /**
     * {@snippet :
     * unsigned int hb_set_get_max(struct hb_set_t* set);
     * }
     */
    public static int hb_set_get_max(MemorySegment set) {
        var mh$ = hb_set_get_max$MH();
        try {
            return (int)mh$.invokeExact(set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_next$MH() {
        return RuntimeHelper.requireNonNull(constants$1440.const$4,"hb_set_next");
    }
    /**
     * {@snippet :
     * int hb_set_next(struct hb_set_t* set, unsigned int* codepoint);
     * }
     */
    public static int hb_set_next(MemorySegment set, MemorySegment codepoint) {
        var mh$ = hb_set_next$MH();
        try {
            return (int)mh$.invokeExact(set, codepoint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_previous$MH() {
        return RuntimeHelper.requireNonNull(constants$1440.const$5,"hb_set_previous");
    }
    /**
     * {@snippet :
     * int hb_set_previous(struct hb_set_t* set, unsigned int* codepoint);
     * }
     */
    public static int hb_set_previous(MemorySegment set, MemorySegment codepoint) {
        var mh$ = hb_set_previous$MH();
        try {
            return (int)mh$.invokeExact(set, codepoint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_next_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1441.const$0,"hb_set_next_range");
    }
    /**
     * {@snippet :
     * int hb_set_next_range(struct hb_set_t* set, unsigned int* first, unsigned int* last);
     * }
     */
    public static int hb_set_next_range(MemorySegment set, MemorySegment first, MemorySegment last) {
        var mh$ = hb_set_next_range$MH();
        try {
            return (int)mh$.invokeExact(set, first, last);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_previous_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1441.const$1,"hb_set_previous_range");
    }
    /**
     * {@snippet :
     * int hb_set_previous_range(struct hb_set_t* set, unsigned int* first, unsigned int* last);
     * }
     */
    public static int hb_set_previous_range(MemorySegment set, MemorySegment first, MemorySegment last) {
        var mh$ = hb_set_previous_range$MH();
        try {
            return (int)mh$.invokeExact(set, first, last);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_set_next_many$MH() {
        return RuntimeHelper.requireNonNull(constants$1441.const$2,"hb_set_next_many");
    }
    /**
     * {@snippet :
     * unsigned int hb_set_next_many(struct hb_set_t* set, unsigned int codepoint, unsigned int* out, unsigned int size);
     * }
     */
    public static int hb_set_next_many(MemorySegment set, int codepoint, MemorySegment out, int size) {
        var mh$ = hb_set_next_many$MH();
        try {
            return (int)mh$.invokeExact(set, codepoint, out, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1441.const$3,"hb_map_create");
    }
    /**
     * {@snippet :
     * struct hb_map_t* hb_map_create();
     * }
     */
    public static MemorySegment hb_map_create() {
        var mh$ = hb_map_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_get_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$1441.const$4,"hb_map_get_empty");
    }
    /**
     * {@snippet :
     * struct hb_map_t* hb_map_get_empty();
     * }
     */
    public static MemorySegment hb_map_get_empty() {
        var mh$ = hb_map_get_empty$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1441.const$5,"hb_map_reference");
    }
    /**
     * {@snippet :
     * struct hb_map_t* hb_map_reference(struct hb_map_t* map);
     * }
     */
    public static MemorySegment hb_map_reference(MemorySegment map) {
        var mh$ = hb_map_reference$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(map);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1442.const$0,"hb_map_destroy");
    }
    /**
     * {@snippet :
     * void hb_map_destroy(struct hb_map_t* map);
     * }
     */
    public static void hb_map_destroy(MemorySegment map) {
        var mh$ = hb_map_destroy$MH();
        try {
            mh$.invokeExact(map);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1442.const$2,"hb_map_set_user_data");
    }
    /**
     * {@snippet :
     * int hb_map_set_user_data(struct hb_map_t* map, struct hb_user_data_key_t* key, void* data, void (*destroy)(void*), int replace);
     * }
     */
    public static int hb_map_set_user_data(MemorySegment map, MemorySegment key, MemorySegment data, MemorySegment destroy, int replace) {
        var mh$ = hb_map_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(map, key, data, destroy, replace);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1442.const$3,"hb_map_get_user_data");
    }
    /**
     * {@snippet :
     * void* hb_map_get_user_data(struct hb_map_t* map, struct hb_user_data_key_t* key);
     * }
     */
    public static MemorySegment hb_map_get_user_data(MemorySegment map, MemorySegment key) {
        var mh$ = hb_map_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(map, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_allocation_successful$MH() {
        return RuntimeHelper.requireNonNull(constants$1442.const$4,"hb_map_allocation_successful");
    }
    /**
     * {@snippet :
     * int hb_map_allocation_successful(struct hb_map_t* map);
     * }
     */
    public static int hb_map_allocation_successful(MemorySegment map) {
        var mh$ = hb_map_allocation_successful$MH();
        try {
            return (int)mh$.invokeExact(map);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1442.const$5,"hb_map_copy");
    }
    /**
     * {@snippet :
     * struct hb_map_t* hb_map_copy(struct hb_map_t* map);
     * }
     */
    public static MemorySegment hb_map_copy(MemorySegment map) {
        var mh$ = hb_map_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(map);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$1443.const$0,"hb_map_clear");
    }
    /**
     * {@snippet :
     * void hb_map_clear(struct hb_map_t* map);
     * }
     */
    public static void hb_map_clear(MemorySegment map) {
        var mh$ = hb_map_clear$MH();
        try {
            mh$.invokeExact(map);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_is_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$1443.const$1,"hb_map_is_empty");
    }
    /**
     * {@snippet :
     * int hb_map_is_empty(struct hb_map_t* map);
     * }
     */
    public static int hb_map_is_empty(MemorySegment map) {
        var mh$ = hb_map_is_empty$MH();
        try {
            return (int)mh$.invokeExact(map);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_get_population$MH() {
        return RuntimeHelper.requireNonNull(constants$1443.const$2,"hb_map_get_population");
    }
    /**
     * {@snippet :
     * unsigned int hb_map_get_population(struct hb_map_t* map);
     * }
     */
    public static int hb_map_get_population(MemorySegment map) {
        var mh$ = hb_map_get_population$MH();
        try {
            return (int)mh$.invokeExact(map);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_is_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1443.const$3,"hb_map_is_equal");
    }
    /**
     * {@snippet :
     * int hb_map_is_equal(struct hb_map_t* map, struct hb_map_t* other);
     * }
     */
    public static int hb_map_is_equal(MemorySegment map, MemorySegment other) {
        var mh$ = hb_map_is_equal$MH();
        try {
            return (int)mh$.invokeExact(map, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$1443.const$4,"hb_map_hash");
    }
    /**
     * {@snippet :
     * unsigned int hb_map_hash(struct hb_map_t* map);
     * }
     */
    public static int hb_map_hash(MemorySegment map) {
        var mh$ = hb_map_hash$MH();
        try {
            return (int)mh$.invokeExact(map);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1443.const$5,"hb_map_set");
    }
    /**
     * {@snippet :
     * void hb_map_set(struct hb_map_t* map, unsigned int key, unsigned int value);
     * }
     */
    public static void hb_map_set(MemorySegment map, int key, int value) {
        var mh$ = hb_map_set$MH();
        try {
            mh$.invokeExact(map, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1444.const$0,"hb_map_get");
    }
    /**
     * {@snippet :
     * unsigned int hb_map_get(struct hb_map_t* map, unsigned int key);
     * }
     */
    public static int hb_map_get(MemorySegment map, int key) {
        var mh$ = hb_map_get$MH();
        try {
            return (int)mh$.invokeExact(map, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_del$MH() {
        return RuntimeHelper.requireNonNull(constants$1444.const$1,"hb_map_del");
    }
    /**
     * {@snippet :
     * void hb_map_del(struct hb_map_t* map, unsigned int key);
     * }
     */
    public static void hb_map_del(MemorySegment map, int key) {
        var mh$ = hb_map_del$MH();
        try {
            mh$.invokeExact(map, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_has$MH() {
        return RuntimeHelper.requireNonNull(constants$1444.const$2,"hb_map_has");
    }
    /**
     * {@snippet :
     * int hb_map_has(struct hb_map_t* map, unsigned int key);
     * }
     */
    public static int hb_map_has(MemorySegment map, int key) {
        var mh$ = hb_map_has$MH();
        try {
            return (int)mh$.invokeExact(map, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_update$MH() {
        return RuntimeHelper.requireNonNull(constants$1444.const$3,"hb_map_update");
    }
    /**
     * {@snippet :
     * void hb_map_update(struct hb_map_t* map, struct hb_map_t* other);
     * }
     */
    public static void hb_map_update(MemorySegment map, MemorySegment other) {
        var mh$ = hb_map_update$MH();
        try {
            mh$.invokeExact(map, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_next$MH() {
        return RuntimeHelper.requireNonNull(constants$1444.const$4,"hb_map_next");
    }
    /**
     * {@snippet :
     * int hb_map_next(struct hb_map_t* map, int* idx, unsigned int* key, unsigned int* value);
     * }
     */
    public static int hb_map_next(MemorySegment map, MemorySegment idx, MemorySegment key, MemorySegment value) {
        var mh$ = hb_map_next$MH();
        try {
            return (int)mh$.invokeExact(map, idx, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_keys$MH() {
        return RuntimeHelper.requireNonNull(constants$1444.const$5,"hb_map_keys");
    }
    /**
     * {@snippet :
     * void hb_map_keys(struct hb_map_t* map, struct hb_set_t* keys);
     * }
     */
    public static void hb_map_keys(MemorySegment map, MemorySegment keys) {
        var mh$ = hb_map_keys$MH();
        try {
            mh$.invokeExact(map, keys);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_map_values$MH() {
        return RuntimeHelper.requireNonNull(constants$1445.const$0,"hb_map_values");
    }
    /**
     * {@snippet :
     * void hb_map_values(struct hb_map_t* map, struct hb_set_t* values);
     * }
     */
    public static void hb_map_values(MemorySegment map, MemorySegment values) {
        var mh$ = hb_map_values$MH();
        try {
            mh$.invokeExact(map, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1445.const$1,"hb_face_count");
    }
    /**
     * {@snippet :
     * unsigned int hb_face_count(struct hb_blob_t* blob);
     * }
     */
    public static int hb_face_count(MemorySegment blob) {
        var mh$ = hb_face_count$MH();
        try {
            return (int)mh$.invokeExact(blob);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1445.const$2,"hb_face_create");
    }
    /**
     * {@snippet :
     * struct hb_face_t* hb_face_create(struct hb_blob_t* blob, unsigned int index);
     * }
     */
    public static MemorySegment hb_face_create(MemorySegment blob, int index) {
        var mh$ = hb_face_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(blob, index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_create_for_tables$MH() {
        return RuntimeHelper.requireNonNull(constants$1446.const$0,"hb_face_create_for_tables");
    }
    /**
     * {@snippet :
     * struct hb_face_t* hb_face_create_for_tables(struct hb_blob_t* (*reference_table_func)(struct hb_face_t*,unsigned int,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static MemorySegment hb_face_create_for_tables(MemorySegment reference_table_func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_face_create_for_tables$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(reference_table_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_get_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$1446.const$1,"hb_face_get_empty");
    }
    /**
     * {@snippet :
     * struct hb_face_t* hb_face_get_empty();
     * }
     */
    public static MemorySegment hb_face_get_empty() {
        var mh$ = hb_face_get_empty$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1446.const$2,"hb_face_reference");
    }
    /**
     * {@snippet :
     * struct hb_face_t* hb_face_reference(struct hb_face_t* face);
     * }
     */
    public static MemorySegment hb_face_reference(MemorySegment face) {
        var mh$ = hb_face_reference$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1446.const$3,"hb_face_destroy");
    }
    /**
     * {@snippet :
     * void hb_face_destroy(struct hb_face_t* face);
     * }
     */
    public static void hb_face_destroy(MemorySegment face) {
        var mh$ = hb_face_destroy$MH();
        try {
            mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1446.const$5,"hb_face_set_user_data");
    }
    /**
     * {@snippet :
     * int hb_face_set_user_data(struct hb_face_t* face, struct hb_user_data_key_t* key, void* data, void (*destroy)(void*), int replace);
     * }
     */
    public static int hb_face_set_user_data(MemorySegment face, MemorySegment key, MemorySegment data, MemorySegment destroy, int replace) {
        var mh$ = hb_face_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(face, key, data, destroy, replace);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1447.const$0,"hb_face_get_user_data");
    }
    /**
     * {@snippet :
     * void* hb_face_get_user_data(struct hb_face_t* face, struct hb_user_data_key_t* key);
     * }
     */
    public static MemorySegment hb_face_get_user_data(MemorySegment face, MemorySegment key) {
        var mh$ = hb_face_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(face, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_make_immutable$MH() {
        return RuntimeHelper.requireNonNull(constants$1447.const$1,"hb_face_make_immutable");
    }
    /**
     * {@snippet :
     * void hb_face_make_immutable(struct hb_face_t* face);
     * }
     */
    public static void hb_face_make_immutable(MemorySegment face) {
        var mh$ = hb_face_make_immutable$MH();
        try {
            mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_is_immutable$MH() {
        return RuntimeHelper.requireNonNull(constants$1447.const$2,"hb_face_is_immutable");
    }
    /**
     * {@snippet :
     * int hb_face_is_immutable(struct hb_face_t* face);
     * }
     */
    public static int hb_face_is_immutable(MemorySegment face) {
        var mh$ = hb_face_is_immutable$MH();
        try {
            return (int)mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_reference_table$MH() {
        return RuntimeHelper.requireNonNull(constants$1447.const$3,"hb_face_reference_table");
    }
    /**
     * {@snippet :
     * struct hb_blob_t* hb_face_reference_table(struct hb_face_t* face, unsigned int tag);
     * }
     */
    public static MemorySegment hb_face_reference_table(MemorySegment face, int tag) {
        var mh$ = hb_face_reference_table$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(face, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_reference_blob$MH() {
        return RuntimeHelper.requireNonNull(constants$1447.const$4,"hb_face_reference_blob");
    }
    /**
     * {@snippet :
     * struct hb_blob_t* hb_face_reference_blob(struct hb_face_t* face);
     * }
     */
    public static MemorySegment hb_face_reference_blob(MemorySegment face) {
        var mh$ = hb_face_reference_blob$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_set_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1447.const$5,"hb_face_set_index");
    }
    /**
     * {@snippet :
     * void hb_face_set_index(struct hb_face_t* face, unsigned int index);
     * }
     */
    public static void hb_face_set_index(MemorySegment face, int index) {
        var mh$ = hb_face_set_index$MH();
        try {
            mh$.invokeExact(face, index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_get_index$MH() {
        return RuntimeHelper.requireNonNull(constants$1448.const$0,"hb_face_get_index");
    }
    /**
     * {@snippet :
     * unsigned int hb_face_get_index(struct hb_face_t* face);
     * }
     */
    public static int hb_face_get_index(MemorySegment face) {
        var mh$ = hb_face_get_index$MH();
        try {
            return (int)mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_set_upem$MH() {
        return RuntimeHelper.requireNonNull(constants$1448.const$1,"hb_face_set_upem");
    }
    /**
     * {@snippet :
     * void hb_face_set_upem(struct hb_face_t* face, unsigned int upem);
     * }
     */
    public static void hb_face_set_upem(MemorySegment face, int upem) {
        var mh$ = hb_face_set_upem$MH();
        try {
            mh$.invokeExact(face, upem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_get_upem$MH() {
        return RuntimeHelper.requireNonNull(constants$1448.const$2,"hb_face_get_upem");
    }
    /**
     * {@snippet :
     * unsigned int hb_face_get_upem(struct hb_face_t* face);
     * }
     */
    public static int hb_face_get_upem(MemorySegment face) {
        var mh$ = hb_face_get_upem$MH();
        try {
            return (int)mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_set_glyph_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1448.const$3,"hb_face_set_glyph_count");
    }
    /**
     * {@snippet :
     * void hb_face_set_glyph_count(struct hb_face_t* face, unsigned int glyph_count);
     * }
     */
    public static void hb_face_set_glyph_count(MemorySegment face, int glyph_count) {
        var mh$ = hb_face_set_glyph_count$MH();
        try {
            mh$.invokeExact(face, glyph_count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_get_glyph_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1448.const$4,"hb_face_get_glyph_count");
    }
    /**
     * {@snippet :
     * unsigned int hb_face_get_glyph_count(struct hb_face_t* face);
     * }
     */
    public static int hb_face_get_glyph_count(MemorySegment face) {
        var mh$ = hb_face_get_glyph_count$MH();
        try {
            return (int)mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_get_table_tags$MH() {
        return RuntimeHelper.requireNonNull(constants$1448.const$5,"hb_face_get_table_tags");
    }
    /**
     * {@snippet :
     * unsigned int hb_face_get_table_tags(struct hb_face_t* face, unsigned int start_offset, unsigned int* table_count, unsigned int* table_tags);
     * }
     */
    public static int hb_face_get_table_tags(MemorySegment face, int start_offset, MemorySegment table_count, MemorySegment table_tags) {
        var mh$ = hb_face_get_table_tags$MH();
        try {
            return (int)mh$.invokeExact(face, start_offset, table_count, table_tags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_collect_unicodes$MH() {
        return RuntimeHelper.requireNonNull(constants$1449.const$0,"hb_face_collect_unicodes");
    }
    /**
     * {@snippet :
     * void hb_face_collect_unicodes(struct hb_face_t* face, struct hb_set_t* out);
     * }
     */
    public static void hb_face_collect_unicodes(MemorySegment face, MemorySegment out) {
        var mh$ = hb_face_collect_unicodes$MH();
        try {
            mh$.invokeExact(face, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_collect_nominal_glyph_mapping$MH() {
        return RuntimeHelper.requireNonNull(constants$1449.const$1,"hb_face_collect_nominal_glyph_mapping");
    }
    /**
     * {@snippet :
     * void hb_face_collect_nominal_glyph_mapping(struct hb_face_t* face, struct hb_map_t* mapping, struct hb_set_t* unicodes);
     * }
     */
    public static void hb_face_collect_nominal_glyph_mapping(MemorySegment face, MemorySegment mapping, MemorySegment unicodes) {
        var mh$ = hb_face_collect_nominal_glyph_mapping$MH();
        try {
            mh$.invokeExact(face, mapping, unicodes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_collect_variation_selectors$MH() {
        return RuntimeHelper.requireNonNull(constants$1449.const$2,"hb_face_collect_variation_selectors");
    }
    /**
     * {@snippet :
     * void hb_face_collect_variation_selectors(struct hb_face_t* face, struct hb_set_t* out);
     * }
     */
    public static void hb_face_collect_variation_selectors(MemorySegment face, MemorySegment out) {
        var mh$ = hb_face_collect_variation_selectors$MH();
        try {
            mh$.invokeExact(face, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_collect_variation_unicodes$MH() {
        return RuntimeHelper.requireNonNull(constants$1449.const$3,"hb_face_collect_variation_unicodes");
    }
    /**
     * {@snippet :
     * void hb_face_collect_variation_unicodes(struct hb_face_t* face, unsigned int variation_selector, struct hb_set_t* out);
     * }
     */
    public static void hb_face_collect_variation_unicodes(MemorySegment face, int variation_selector, MemorySegment out) {
        var mh$ = hb_face_collect_variation_unicodes$MH();
        try {
            mh$.invokeExact(face, variation_selector, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_builder_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1449.const$4,"hb_face_builder_create");
    }
    /**
     * {@snippet :
     * struct hb_face_t* hb_face_builder_create();
     * }
     */
    public static MemorySegment hb_face_builder_create() {
        var mh$ = hb_face_builder_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_builder_add_table$MH() {
        return RuntimeHelper.requireNonNull(constants$1449.const$5,"hb_face_builder_add_table");
    }
    /**
     * {@snippet :
     * int hb_face_builder_add_table(struct hb_face_t* face, unsigned int tag, struct hb_blob_t* blob);
     * }
     */
    public static int hb_face_builder_add_table(MemorySegment face, int tag, MemorySegment blob) {
        var mh$ = hb_face_builder_add_table$MH();
        try {
            return (int)mh$.invokeExact(face, tag, blob);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_face_builder_sort_tables$MH() {
        return RuntimeHelper.requireNonNull(constants$1450.const$0,"hb_face_builder_sort_tables");
    }
    /**
     * {@snippet :
     * void hb_face_builder_sort_tables(struct hb_face_t* face, unsigned int* tags);
     * }
     */
    public static void hb_face_builder_sort_tables(MemorySegment face, MemorySegment tags) {
        var mh$ = hb_face_builder_sort_tables$MH();
        try {
            mh$.invokeExact(face, tags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_draw_funcs_set_move_to_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1453.const$2,"hb_draw_funcs_set_move_to_func");
    }
    /**
     * {@snippet :
     * void hb_draw_funcs_set_move_to_func(struct hb_draw_funcs_t* dfuncs, void (*func)(struct hb_draw_funcs_t*,void*,struct hb_draw_state_t*,float,float,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_draw_funcs_set_move_to_func(MemorySegment dfuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_draw_funcs_set_move_to_func$MH();
        try {
            mh$.invokeExact(dfuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_draw_funcs_set_line_to_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1453.const$5,"hb_draw_funcs_set_line_to_func");
    }
    /**
     * {@snippet :
     * void hb_draw_funcs_set_line_to_func(struct hb_draw_funcs_t* dfuncs, void (*func)(struct hb_draw_funcs_t*,void*,struct hb_draw_state_t*,float,float,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_draw_funcs_set_line_to_func(MemorySegment dfuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_draw_funcs_set_line_to_func$MH();
        try {
            mh$.invokeExact(dfuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_draw_funcs_set_quadratic_to_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1454.const$2,"hb_draw_funcs_set_quadratic_to_func");
    }
    /**
     * {@snippet :
     * void hb_draw_funcs_set_quadratic_to_func(struct hb_draw_funcs_t* dfuncs, void (*func)(struct hb_draw_funcs_t*,void*,struct hb_draw_state_t*,float,float,float,float,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_draw_funcs_set_quadratic_to_func(MemorySegment dfuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_draw_funcs_set_quadratic_to_func$MH();
        try {
            mh$.invokeExact(dfuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_draw_funcs_set_cubic_to_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1454.const$5,"hb_draw_funcs_set_cubic_to_func");
    }
    /**
     * {@snippet :
     * void hb_draw_funcs_set_cubic_to_func(struct hb_draw_funcs_t* dfuncs, void (*func)(struct hb_draw_funcs_t*,void*,struct hb_draw_state_t*,float,float,float,float,float,float,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_draw_funcs_set_cubic_to_func(MemorySegment dfuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_draw_funcs_set_cubic_to_func$MH();
        try {
            mh$.invokeExact(dfuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_draw_funcs_set_close_path_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1455.const$2,"hb_draw_funcs_set_close_path_func");
    }
    /**
     * {@snippet :
     * void hb_draw_funcs_set_close_path_func(struct hb_draw_funcs_t* dfuncs, void (*func)(struct hb_draw_funcs_t*,void*,struct hb_draw_state_t*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_draw_funcs_set_close_path_func(MemorySegment dfuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_draw_funcs_set_close_path_func$MH();
        try {
            mh$.invokeExact(dfuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_draw_funcs_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1455.const$3,"hb_draw_funcs_create");
    }
    /**
     * {@snippet :
     * struct hb_draw_funcs_t* hb_draw_funcs_create();
     * }
     */
    public static MemorySegment hb_draw_funcs_create() {
        var mh$ = hb_draw_funcs_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_draw_funcs_get_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$1455.const$4,"hb_draw_funcs_get_empty");
    }
    /**
     * {@snippet :
     * struct hb_draw_funcs_t* hb_draw_funcs_get_empty();
     * }
     */
    public static MemorySegment hb_draw_funcs_get_empty() {
        var mh$ = hb_draw_funcs_get_empty$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_draw_funcs_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1455.const$5,"hb_draw_funcs_reference");
    }
    /**
     * {@snippet :
     * struct hb_draw_funcs_t* hb_draw_funcs_reference(struct hb_draw_funcs_t* dfuncs);
     * }
     */
    public static MemorySegment hb_draw_funcs_reference(MemorySegment dfuncs) {
        var mh$ = hb_draw_funcs_reference$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(dfuncs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_draw_funcs_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1456.const$0,"hb_draw_funcs_destroy");
    }
    /**
     * {@snippet :
     * void hb_draw_funcs_destroy(struct hb_draw_funcs_t* dfuncs);
     * }
     */
    public static void hb_draw_funcs_destroy(MemorySegment dfuncs) {
        var mh$ = hb_draw_funcs_destroy$MH();
        try {
            mh$.invokeExact(dfuncs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_draw_funcs_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1456.const$2,"hb_draw_funcs_set_user_data");
    }
    /**
     * {@snippet :
     * int hb_draw_funcs_set_user_data(struct hb_draw_funcs_t* dfuncs, struct hb_user_data_key_t* key, void* data, void (*destroy)(void*), int replace);
     * }
     */
    public static int hb_draw_funcs_set_user_data(MemorySegment dfuncs, MemorySegment key, MemorySegment data, MemorySegment destroy, int replace) {
        var mh$ = hb_draw_funcs_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(dfuncs, key, data, destroy, replace);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_draw_funcs_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1456.const$3,"hb_draw_funcs_get_user_data");
    }
    /**
     * {@snippet :
     * void* hb_draw_funcs_get_user_data(struct hb_draw_funcs_t* dfuncs, struct hb_user_data_key_t* key);
     * }
     */
    public static MemorySegment hb_draw_funcs_get_user_data(MemorySegment dfuncs, MemorySegment key) {
        var mh$ = hb_draw_funcs_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(dfuncs, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_draw_funcs_make_immutable$MH() {
        return RuntimeHelper.requireNonNull(constants$1456.const$4,"hb_draw_funcs_make_immutable");
    }
    /**
     * {@snippet :
     * void hb_draw_funcs_make_immutable(struct hb_draw_funcs_t* dfuncs);
     * }
     */
    public static void hb_draw_funcs_make_immutable(MemorySegment dfuncs) {
        var mh$ = hb_draw_funcs_make_immutable$MH();
        try {
            mh$.invokeExact(dfuncs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_draw_funcs_is_immutable$MH() {
        return RuntimeHelper.requireNonNull(constants$1456.const$5,"hb_draw_funcs_is_immutable");
    }
    /**
     * {@snippet :
     * int hb_draw_funcs_is_immutable(struct hb_draw_funcs_t* dfuncs);
     * }
     */
    public static int hb_draw_funcs_is_immutable(MemorySegment dfuncs) {
        var mh$ = hb_draw_funcs_is_immutable$MH();
        try {
            return (int)mh$.invokeExact(dfuncs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_draw_move_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1457.const$1,"hb_draw_move_to");
    }
    /**
     * {@snippet :
     * void hb_draw_move_to(struct hb_draw_funcs_t* dfuncs, void* draw_data, struct hb_draw_state_t* st, float to_x, float to_y);
     * }
     */
    public static void hb_draw_move_to(MemorySegment dfuncs, MemorySegment draw_data, MemorySegment st, float to_x, float to_y) {
        var mh$ = hb_draw_move_to$MH();
        try {
            mh$.invokeExact(dfuncs, draw_data, st, to_x, to_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_draw_line_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1457.const$2,"hb_draw_line_to");
    }
    /**
     * {@snippet :
     * void hb_draw_line_to(struct hb_draw_funcs_t* dfuncs, void* draw_data, struct hb_draw_state_t* st, float to_x, float to_y);
     * }
     */
    public static void hb_draw_line_to(MemorySegment dfuncs, MemorySegment draw_data, MemorySegment st, float to_x, float to_y) {
        var mh$ = hb_draw_line_to$MH();
        try {
            mh$.invokeExact(dfuncs, draw_data, st, to_x, to_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_draw_quadratic_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1457.const$4,"hb_draw_quadratic_to");
    }
    /**
     * {@snippet :
     * void hb_draw_quadratic_to(struct hb_draw_funcs_t* dfuncs, void* draw_data, struct hb_draw_state_t* st, float control_x, float control_y, float to_x, float to_y);
     * }
     */
    public static void hb_draw_quadratic_to(MemorySegment dfuncs, MemorySegment draw_data, MemorySegment st, float control_x, float control_y, float to_x, float to_y) {
        var mh$ = hb_draw_quadratic_to$MH();
        try {
            mh$.invokeExact(dfuncs, draw_data, st, control_x, control_y, to_x, to_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_draw_cubic_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1457.const$6,"hb_draw_cubic_to");
    }
    /**
     * {@snippet :
     * void hb_draw_cubic_to(struct hb_draw_funcs_t* dfuncs, void* draw_data, struct hb_draw_state_t* st, float control1_x, float control1_y, float control2_x, float control2_y, float to_x, float to_y);
     * }
     */
    public static void hb_draw_cubic_to(MemorySegment dfuncs, MemorySegment draw_data, MemorySegment st, float control1_x, float control1_y, float control2_x, float control2_y, float to_x, float to_y) {
        var mh$ = hb_draw_cubic_to$MH();
        try {
            mh$.invokeExact(dfuncs, draw_data, st, control1_x, control1_y, control2_x, control2_y, to_x, to_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_draw_close_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1458.const$0,"hb_draw_close_path");
    }
    /**
     * {@snippet :
     * void hb_draw_close_path(struct hb_draw_funcs_t* dfuncs, void* draw_data, struct hb_draw_state_t* st);
     * }
     */
    public static void hb_draw_close_path(MemorySegment dfuncs, MemorySegment draw_data, MemorySegment st) {
        var mh$ = hb_draw_close_path$MH();
        try {
            mh$.invokeExact(dfuncs, draw_data, st);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1458.const$1,"hb_paint_funcs_create");
    }
    /**
     * {@snippet :
     * struct hb_paint_funcs_t* hb_paint_funcs_create();
     * }
     */
    public static MemorySegment hb_paint_funcs_create() {
        var mh$ = hb_paint_funcs_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_get_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$1458.const$2,"hb_paint_funcs_get_empty");
    }
    /**
     * {@snippet :
     * struct hb_paint_funcs_t* hb_paint_funcs_get_empty();
     * }
     */
    public static MemorySegment hb_paint_funcs_get_empty() {
        var mh$ = hb_paint_funcs_get_empty$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1458.const$3,"hb_paint_funcs_reference");
    }
    /**
     * {@snippet :
     * struct hb_paint_funcs_t* hb_paint_funcs_reference(struct hb_paint_funcs_t* funcs);
     * }
     */
    public static MemorySegment hb_paint_funcs_reference(MemorySegment funcs) {
        var mh$ = hb_paint_funcs_reference$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(funcs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1458.const$4,"hb_paint_funcs_destroy");
    }
    /**
     * {@snippet :
     * void hb_paint_funcs_destroy(struct hb_paint_funcs_t* funcs);
     * }
     */
    public static void hb_paint_funcs_destroy(MemorySegment funcs) {
        var mh$ = hb_paint_funcs_destroy$MH();
        try {
            mh$.invokeExact(funcs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1459.const$0,"hb_paint_funcs_set_user_data");
    }
    /**
     * {@snippet :
     * int hb_paint_funcs_set_user_data(struct hb_paint_funcs_t* funcs, struct hb_user_data_key_t* key, void* data, void (*destroy)(void*), int replace);
     * }
     */
    public static int hb_paint_funcs_set_user_data(MemorySegment funcs, MemorySegment key, MemorySegment data, MemorySegment destroy, int replace) {
        var mh$ = hb_paint_funcs_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(funcs, key, data, destroy, replace);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1459.const$1,"hb_paint_funcs_get_user_data");
    }
    /**
     * {@snippet :
     * void* hb_paint_funcs_get_user_data(struct hb_paint_funcs_t* funcs, struct hb_user_data_key_t* key);
     * }
     */
    public static MemorySegment hb_paint_funcs_get_user_data(MemorySegment funcs, MemorySegment key) {
        var mh$ = hb_paint_funcs_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(funcs, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_make_immutable$MH() {
        return RuntimeHelper.requireNonNull(constants$1459.const$2,"hb_paint_funcs_make_immutable");
    }
    /**
     * {@snippet :
     * void hb_paint_funcs_make_immutable(struct hb_paint_funcs_t* funcs);
     * }
     */
    public static void hb_paint_funcs_make_immutable(MemorySegment funcs) {
        var mh$ = hb_paint_funcs_make_immutable$MH();
        try {
            mh$.invokeExact(funcs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_is_immutable$MH() {
        return RuntimeHelper.requireNonNull(constants$1459.const$3,"hb_paint_funcs_is_immutable");
    }
    /**
     * {@snippet :
     * int hb_paint_funcs_is_immutable(struct hb_paint_funcs_t* funcs);
     * }
     */
    public static int hb_paint_funcs_is_immutable(MemorySegment funcs) {
        var mh$ = hb_paint_funcs_is_immutable$MH();
        try {
            return (int)mh$.invokeExact(funcs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum hb_paint_extend_t.HB_PAINT_EXTEND_PAD = 0;
     * }
     */
    public static int HB_PAINT_EXTEND_PAD() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum hb_paint_extend_t.HB_PAINT_EXTEND_REPEAT = 1;
     * }
     */
    public static int HB_PAINT_EXTEND_REPEAT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum hb_paint_extend_t.HB_PAINT_EXTEND_REFLECT = 2;
     * }
     */
    public static int HB_PAINT_EXTEND_REFLECT() {
        return (int)2L;
    }
    public static MethodHandle hb_color_line_get_color_stops$MH() {
        return RuntimeHelper.requireNonNull(constants$1466.const$2,"hb_color_line_get_color_stops");
    }
    /**
     * {@snippet :
     * unsigned int hb_color_line_get_color_stops(struct hb_color_line_t* color_line, unsigned int start, unsigned int* count, struct hb_color_stop_t* color_stops);
     * }
     */
    public static int hb_color_line_get_color_stops(MemorySegment color_line, int start, MemorySegment count, MemorySegment color_stops) {
        var mh$ = hb_color_line_get_color_stops$MH();
        try {
            return (int)mh$.invokeExact(color_line, start, count, color_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_color_line_get_extend$MH() {
        return RuntimeHelper.requireNonNull(constants$1466.const$3,"hb_color_line_get_extend");
    }
    /**
     * {@snippet :
     * enum hb_paint_extend_t hb_color_line_get_extend(struct hb_color_line_t* color_line);
     * }
     */
    public static int hb_color_line_get_extend(MemorySegment color_line) {
        var mh$ = hb_color_line_get_extend$MH();
        try {
            return (int)mh$.invokeExact(color_line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_CLEAR = 0;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_CLEAR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_SRC = 1;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_SRC() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_DEST = 2;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_DEST() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_SRC_OVER = 3;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_SRC_OVER() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_DEST_OVER = 4;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_DEST_OVER() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_SRC_IN = 5;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_SRC_IN() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_DEST_IN = 6;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_DEST_IN() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_SRC_OUT = 7;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_SRC_OUT() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_DEST_OUT = 8;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_DEST_OUT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_SRC_ATOP = 9;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_SRC_ATOP() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_DEST_ATOP = 10;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_DEST_ATOP() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_XOR = 11;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_XOR() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_PLUS = 12;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_PLUS() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_SCREEN = 13;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_SCREEN() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_OVERLAY = 14;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_OVERLAY() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_DARKEN = 15;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_DARKEN() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_LIGHTEN = 16;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_LIGHTEN() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_COLOR_DODGE = 17;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_COLOR_DODGE() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_COLOR_BURN = 18;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_COLOR_BURN() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_HARD_LIGHT = 19;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_HARD_LIGHT() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_SOFT_LIGHT = 20;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_SOFT_LIGHT() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_DIFFERENCE = 21;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_DIFFERENCE() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_EXCLUSION = 22;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_EXCLUSION() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_MULTIPLY = 23;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_MULTIPLY() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_HSL_HUE = 24;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_HSL_HUE() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_HSL_SATURATION = 25;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_HSL_SATURATION() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_HSL_COLOR = 26;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_HSL_COLOR() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum hb_paint_composite_mode_t.HB_PAINT_COMPOSITE_MODE_HSL_LUMINOSITY = 27;
     * }
     */
    public static int HB_PAINT_COMPOSITE_MODE_HSL_LUMINOSITY() {
        return (int)27L;
    }
    public static MethodHandle hb_paint_funcs_set_push_transform_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1468.const$0,"hb_paint_funcs_set_push_transform_func");
    }
    /**
     * {@snippet :
     * void hb_paint_funcs_set_push_transform_func(struct hb_paint_funcs_t* funcs, void (*func)(struct hb_paint_funcs_t*,void*,float,float,float,float,float,float,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_paint_funcs_set_push_transform_func(MemorySegment funcs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_paint_funcs_set_push_transform_func$MH();
        try {
            mh$.invokeExact(funcs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_set_pop_transform_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1468.const$3,"hb_paint_funcs_set_pop_transform_func");
    }
    /**
     * {@snippet :
     * void hb_paint_funcs_set_pop_transform_func(struct hb_paint_funcs_t* funcs, void (*func)(struct hb_paint_funcs_t*,void*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_paint_funcs_set_pop_transform_func(MemorySegment funcs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_paint_funcs_set_pop_transform_func$MH();
        try {
            mh$.invokeExact(funcs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_set_color_glyph_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1469.const$0,"hb_paint_funcs_set_color_glyph_func");
    }
    /**
     * {@snippet :
     * void hb_paint_funcs_set_color_glyph_func(struct hb_paint_funcs_t* funcs, int (*func)(struct hb_paint_funcs_t*,void*,unsigned int,struct hb_font_t*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_paint_funcs_set_color_glyph_func(MemorySegment funcs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_paint_funcs_set_color_glyph_func$MH();
        try {
            mh$.invokeExact(funcs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_set_push_clip_glyph_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1469.const$3,"hb_paint_funcs_set_push_clip_glyph_func");
    }
    /**
     * {@snippet :
     * void hb_paint_funcs_set_push_clip_glyph_func(struct hb_paint_funcs_t* funcs, void (*func)(struct hb_paint_funcs_t*,void*,unsigned int,struct hb_font_t*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_paint_funcs_set_push_clip_glyph_func(MemorySegment funcs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_paint_funcs_set_push_clip_glyph_func$MH();
        try {
            mh$.invokeExact(funcs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_set_push_clip_rectangle_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1470.const$0,"hb_paint_funcs_set_push_clip_rectangle_func");
    }
    /**
     * {@snippet :
     * void hb_paint_funcs_set_push_clip_rectangle_func(struct hb_paint_funcs_t* funcs, void (*func)(struct hb_paint_funcs_t*,void*,float,float,float,float,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_paint_funcs_set_push_clip_rectangle_func(MemorySegment funcs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_paint_funcs_set_push_clip_rectangle_func$MH();
        try {
            mh$.invokeExact(funcs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_set_pop_clip_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1470.const$3,"hb_paint_funcs_set_pop_clip_func");
    }
    /**
     * {@snippet :
     * void hb_paint_funcs_set_pop_clip_func(struct hb_paint_funcs_t* funcs, void (*func)(struct hb_paint_funcs_t*,void*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_paint_funcs_set_pop_clip_func(MemorySegment funcs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_paint_funcs_set_pop_clip_func$MH();
        try {
            mh$.invokeExact(funcs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_set_color_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1471.const$0,"hb_paint_funcs_set_color_func");
    }
    /**
     * {@snippet :
     * void hb_paint_funcs_set_color_func(struct hb_paint_funcs_t* funcs, void (*func)(struct hb_paint_funcs_t*,void*,int,unsigned int,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_paint_funcs_set_color_func(MemorySegment funcs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_paint_funcs_set_color_func$MH();
        try {
            mh$.invokeExact(funcs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_set_image_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1471.const$3,"hb_paint_funcs_set_image_func");
    }
    /**
     * {@snippet :
     * void hb_paint_funcs_set_image_func(struct hb_paint_funcs_t* funcs, int (*func)(struct hb_paint_funcs_t*,void*,struct hb_blob_t*,unsigned int,unsigned int,unsigned int,float,struct hb_glyph_extents_t*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_paint_funcs_set_image_func(MemorySegment funcs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_paint_funcs_set_image_func$MH();
        try {
            mh$.invokeExact(funcs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_set_linear_gradient_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1472.const$0,"hb_paint_funcs_set_linear_gradient_func");
    }
    /**
     * {@snippet :
     * void hb_paint_funcs_set_linear_gradient_func(struct hb_paint_funcs_t* funcs, void (*func)(struct hb_paint_funcs_t*,void*,struct hb_color_line_t*,float,float,float,float,float,float,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_paint_funcs_set_linear_gradient_func(MemorySegment funcs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_paint_funcs_set_linear_gradient_func$MH();
        try {
            mh$.invokeExact(funcs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_set_radial_gradient_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1472.const$3,"hb_paint_funcs_set_radial_gradient_func");
    }
    /**
     * {@snippet :
     * void hb_paint_funcs_set_radial_gradient_func(struct hb_paint_funcs_t* funcs, void (*func)(struct hb_paint_funcs_t*,void*,struct hb_color_line_t*,float,float,float,float,float,float,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_paint_funcs_set_radial_gradient_func(MemorySegment funcs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_paint_funcs_set_radial_gradient_func$MH();
        try {
            mh$.invokeExact(funcs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_set_sweep_gradient_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1473.const$0,"hb_paint_funcs_set_sweep_gradient_func");
    }
    /**
     * {@snippet :
     * void hb_paint_funcs_set_sweep_gradient_func(struct hb_paint_funcs_t* funcs, void (*func)(struct hb_paint_funcs_t*,void*,struct hb_color_line_t*,float,float,float,float,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_paint_funcs_set_sweep_gradient_func(MemorySegment funcs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_paint_funcs_set_sweep_gradient_func$MH();
        try {
            mh$.invokeExact(funcs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_set_push_group_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1473.const$3,"hb_paint_funcs_set_push_group_func");
    }
    /**
     * {@snippet :
     * void hb_paint_funcs_set_push_group_func(struct hb_paint_funcs_t* funcs, void (*func)(struct hb_paint_funcs_t*,void*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_paint_funcs_set_push_group_func(MemorySegment funcs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_paint_funcs_set_push_group_func$MH();
        try {
            mh$.invokeExact(funcs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_set_pop_group_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1474.const$0,"hb_paint_funcs_set_pop_group_func");
    }
    /**
     * {@snippet :
     * void hb_paint_funcs_set_pop_group_func(struct hb_paint_funcs_t* funcs, void (*func)(struct hb_paint_funcs_t*,void*,enum hb_paint_composite_mode_t,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_paint_funcs_set_pop_group_func(MemorySegment funcs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_paint_funcs_set_pop_group_func$MH();
        try {
            mh$.invokeExact(funcs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_funcs_set_custom_palette_color_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1474.const$3,"hb_paint_funcs_set_custom_palette_color_func");
    }
    /**
     * {@snippet :
     * void hb_paint_funcs_set_custom_palette_color_func(struct hb_paint_funcs_t* funcs, int (*func)(struct hb_paint_funcs_t*,void*,unsigned int,unsigned int*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_paint_funcs_set_custom_palette_color_func(MemorySegment funcs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_paint_funcs_set_custom_palette_color_func$MH();
        try {
            mh$.invokeExact(funcs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_push_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$1474.const$5,"hb_paint_push_transform");
    }
    /**
     * {@snippet :
     * void hb_paint_push_transform(struct hb_paint_funcs_t* funcs, void* paint_data, float xx, float yx, float xy, float yy, float dx, float dy);
     * }
     */
    public static void hb_paint_push_transform(MemorySegment funcs, MemorySegment paint_data, float xx, float yx, float xy, float yy, float dx, float dy) {
        var mh$ = hb_paint_push_transform$MH();
        try {
            mh$.invokeExact(funcs, paint_data, xx, yx, xy, yy, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_pop_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$1475.const$0,"hb_paint_pop_transform");
    }
    /**
     * {@snippet :
     * void hb_paint_pop_transform(struct hb_paint_funcs_t* funcs, void* paint_data);
     * }
     */
    public static void hb_paint_pop_transform(MemorySegment funcs, MemorySegment paint_data) {
        var mh$ = hb_paint_pop_transform$MH();
        try {
            mh$.invokeExact(funcs, paint_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_color_glyph$MH() {
        return RuntimeHelper.requireNonNull(constants$1475.const$1,"hb_paint_color_glyph");
    }
    /**
     * {@snippet :
     * int hb_paint_color_glyph(struct hb_paint_funcs_t* funcs, void* paint_data, unsigned int glyph, struct hb_font_t* font);
     * }
     */
    public static int hb_paint_color_glyph(MemorySegment funcs, MemorySegment paint_data, int glyph, MemorySegment font) {
        var mh$ = hb_paint_color_glyph$MH();
        try {
            return (int)mh$.invokeExact(funcs, paint_data, glyph, font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_push_clip_glyph$MH() {
        return RuntimeHelper.requireNonNull(constants$1475.const$2,"hb_paint_push_clip_glyph");
    }
    /**
     * {@snippet :
     * void hb_paint_push_clip_glyph(struct hb_paint_funcs_t* funcs, void* paint_data, unsigned int glyph, struct hb_font_t* font);
     * }
     */
    public static void hb_paint_push_clip_glyph(MemorySegment funcs, MemorySegment paint_data, int glyph, MemorySegment font) {
        var mh$ = hb_paint_push_clip_glyph$MH();
        try {
            mh$.invokeExact(funcs, paint_data, glyph, font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_push_clip_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1475.const$4,"hb_paint_push_clip_rectangle");
    }
    /**
     * {@snippet :
     * void hb_paint_push_clip_rectangle(struct hb_paint_funcs_t* funcs, void* paint_data, float xmin, float ymin, float xmax, float ymax);
     * }
     */
    public static void hb_paint_push_clip_rectangle(MemorySegment funcs, MemorySegment paint_data, float xmin, float ymin, float xmax, float ymax) {
        var mh$ = hb_paint_push_clip_rectangle$MH();
        try {
            mh$.invokeExact(funcs, paint_data, xmin, ymin, xmax, ymax);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_pop_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$1475.const$5,"hb_paint_pop_clip");
    }
    /**
     * {@snippet :
     * void hb_paint_pop_clip(struct hb_paint_funcs_t* funcs, void* paint_data);
     * }
     */
    public static void hb_paint_pop_clip(MemorySegment funcs, MemorySegment paint_data) {
        var mh$ = hb_paint_pop_clip$MH();
        try {
            mh$.invokeExact(funcs, paint_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1476.const$0,"hb_paint_color");
    }
    /**
     * {@snippet :
     * void hb_paint_color(struct hb_paint_funcs_t* funcs, void* paint_data, int is_foreground, unsigned int color);
     * }
     */
    public static void hb_paint_color(MemorySegment funcs, MemorySegment paint_data, int is_foreground, int color) {
        var mh$ = hb_paint_color$MH();
        try {
            mh$.invokeExact(funcs, paint_data, is_foreground, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1476.const$2,"hb_paint_image");
    }
    /**
     * {@snippet :
     * void hb_paint_image(struct hb_paint_funcs_t* funcs, void* paint_data, struct hb_blob_t* image, unsigned int width, unsigned int height, unsigned int format, float slant, struct hb_glyph_extents_t* extents);
     * }
     */
    public static void hb_paint_image(MemorySegment funcs, MemorySegment paint_data, MemorySegment image, int width, int height, int format, float slant, MemorySegment extents) {
        var mh$ = hb_paint_image$MH();
        try {
            mh$.invokeExact(funcs, paint_data, image, width, height, format, slant, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_linear_gradient$MH() {
        return RuntimeHelper.requireNonNull(constants$1476.const$3,"hb_paint_linear_gradient");
    }
    /**
     * {@snippet :
     * void hb_paint_linear_gradient(struct hb_paint_funcs_t* funcs, void* paint_data, struct hb_color_line_t* color_line, float x0, float y0, float x1, float y1, float x2, float y2);
     * }
     */
    public static void hb_paint_linear_gradient(MemorySegment funcs, MemorySegment paint_data, MemorySegment color_line, float x0, float y0, float x1, float y1, float x2, float y2) {
        var mh$ = hb_paint_linear_gradient$MH();
        try {
            mh$.invokeExact(funcs, paint_data, color_line, x0, y0, x1, y1, x2, y2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_radial_gradient$MH() {
        return RuntimeHelper.requireNonNull(constants$1476.const$4,"hb_paint_radial_gradient");
    }
    /**
     * {@snippet :
     * void hb_paint_radial_gradient(struct hb_paint_funcs_t* funcs, void* paint_data, struct hb_color_line_t* color_line, float x0, float y0, float r0, float x1, float y1, float r1);
     * }
     */
    public static void hb_paint_radial_gradient(MemorySegment funcs, MemorySegment paint_data, MemorySegment color_line, float x0, float y0, float r0, float x1, float y1, float r1) {
        var mh$ = hb_paint_radial_gradient$MH();
        try {
            mh$.invokeExact(funcs, paint_data, color_line, x0, y0, r0, x1, y1, r1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_sweep_gradient$MH() {
        return RuntimeHelper.requireNonNull(constants$1476.const$5,"hb_paint_sweep_gradient");
    }
    /**
     * {@snippet :
     * void hb_paint_sweep_gradient(struct hb_paint_funcs_t* funcs, void* paint_data, struct hb_color_line_t* color_line, float x0, float y0, float start_angle, float end_angle);
     * }
     */
    public static void hb_paint_sweep_gradient(MemorySegment funcs, MemorySegment paint_data, MemorySegment color_line, float x0, float y0, float start_angle, float end_angle) {
        var mh$ = hb_paint_sweep_gradient$MH();
        try {
            mh$.invokeExact(funcs, paint_data, color_line, x0, y0, start_angle, end_angle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_push_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1477.const$0,"hb_paint_push_group");
    }
    /**
     * {@snippet :
     * void hb_paint_push_group(struct hb_paint_funcs_t* funcs, void* paint_data);
     * }
     */
    public static void hb_paint_push_group(MemorySegment funcs, MemorySegment paint_data) {
        var mh$ = hb_paint_push_group$MH();
        try {
            mh$.invokeExact(funcs, paint_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_pop_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1477.const$1,"hb_paint_pop_group");
    }
    /**
     * {@snippet :
     * void hb_paint_pop_group(struct hb_paint_funcs_t* funcs, void* paint_data, enum hb_paint_composite_mode_t mode);
     * }
     */
    public static void hb_paint_pop_group(MemorySegment funcs, MemorySegment paint_data, int mode) {
        var mh$ = hb_paint_pop_group$MH();
        try {
            mh$.invokeExact(funcs, paint_data, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_paint_custom_palette_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1477.const$2,"hb_paint_custom_palette_color");
    }
    /**
     * {@snippet :
     * int hb_paint_custom_palette_color(struct hb_paint_funcs_t* funcs, void* paint_data, unsigned int color_index, unsigned int* color);
     * }
     */
    public static int hb_paint_custom_palette_color(MemorySegment funcs, MemorySegment paint_data, int color_index, MemorySegment color) {
        var mh$ = hb_paint_custom_palette_color$MH();
        try {
            return (int)mh$.invokeExact(funcs, paint_data, color_index, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1477.const$3,"hb_font_funcs_create");
    }
    /**
     * {@snippet :
     * struct hb_font_funcs_t* hb_font_funcs_create();
     * }
     */
    public static MemorySegment hb_font_funcs_create() {
        var mh$ = hb_font_funcs_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_get_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$1477.const$4,"hb_font_funcs_get_empty");
    }
    /**
     * {@snippet :
     * struct hb_font_funcs_t* hb_font_funcs_get_empty();
     * }
     */
    public static MemorySegment hb_font_funcs_get_empty() {
        var mh$ = hb_font_funcs_get_empty$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1477.const$5,"hb_font_funcs_reference");
    }
    /**
     * {@snippet :
     * struct hb_font_funcs_t* hb_font_funcs_reference(struct hb_font_funcs_t* ffuncs);
     * }
     */
    public static MemorySegment hb_font_funcs_reference(MemorySegment ffuncs) {
        var mh$ = hb_font_funcs_reference$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(ffuncs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1478.const$0,"hb_font_funcs_destroy");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_destroy(struct hb_font_funcs_t* ffuncs);
     * }
     */
    public static void hb_font_funcs_destroy(MemorySegment ffuncs) {
        var mh$ = hb_font_funcs_destroy$MH();
        try {
            mh$.invokeExact(ffuncs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1478.const$2,"hb_font_funcs_set_user_data");
    }
    /**
     * {@snippet :
     * int hb_font_funcs_set_user_data(struct hb_font_funcs_t* ffuncs, struct hb_user_data_key_t* key, void* data, void (*destroy)(void*), int replace);
     * }
     */
    public static int hb_font_funcs_set_user_data(MemorySegment ffuncs, MemorySegment key, MemorySegment data, MemorySegment destroy, int replace) {
        var mh$ = hb_font_funcs_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(ffuncs, key, data, destroy, replace);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1478.const$3,"hb_font_funcs_get_user_data");
    }
    /**
     * {@snippet :
     * void* hb_font_funcs_get_user_data(struct hb_font_funcs_t* ffuncs, struct hb_user_data_key_t* key);
     * }
     */
    public static MemorySegment hb_font_funcs_get_user_data(MemorySegment ffuncs, MemorySegment key) {
        var mh$ = hb_font_funcs_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(ffuncs, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_make_immutable$MH() {
        return RuntimeHelper.requireNonNull(constants$1478.const$4,"hb_font_funcs_make_immutable");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_make_immutable(struct hb_font_funcs_t* ffuncs);
     * }
     */
    public static void hb_font_funcs_make_immutable(MemorySegment ffuncs) {
        var mh$ = hb_font_funcs_make_immutable$MH();
        try {
            mh$.invokeExact(ffuncs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_is_immutable$MH() {
        return RuntimeHelper.requireNonNull(constants$1478.const$5,"hb_font_funcs_is_immutable");
    }
    /**
     * {@snippet :
     * int hb_font_funcs_is_immutable(struct hb_font_funcs_t* ffuncs);
     * }
     */
    public static int hb_font_funcs_is_immutable(MemorySegment ffuncs) {
        var mh$ = hb_font_funcs_is_immutable$MH();
        try {
            return (int)mh$.invokeExact(ffuncs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_font_h_extents_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1487.const$3,"hb_font_funcs_set_font_h_extents_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_font_h_extents_func(struct hb_font_funcs_t* ffuncs, int (*func)(struct hb_font_t*,void*,struct hb_font_extents_t*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_font_h_extents_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_font_h_extents_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_font_v_extents_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1488.const$0,"hb_font_funcs_set_font_v_extents_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_font_v_extents_func(struct hb_font_funcs_t* ffuncs, int (*func)(struct hb_font_t*,void*,struct hb_font_extents_t*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_font_v_extents_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_font_v_extents_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_nominal_glyph_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1488.const$3,"hb_font_funcs_set_nominal_glyph_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_nominal_glyph_func(struct hb_font_funcs_t* ffuncs, int (*func)(struct hb_font_t*,void*,unsigned int,unsigned int*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_nominal_glyph_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_nominal_glyph_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_nominal_glyphs_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1489.const$0,"hb_font_funcs_set_nominal_glyphs_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_nominal_glyphs_func(struct hb_font_funcs_t* ffuncs, unsigned int (*func)(struct hb_font_t*,void*,unsigned int,unsigned int*,unsigned int,unsigned int*,unsigned int,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_nominal_glyphs_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_nominal_glyphs_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_variation_glyph_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1489.const$3,"hb_font_funcs_set_variation_glyph_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_variation_glyph_func(struct hb_font_funcs_t* ffuncs, int (*func)(struct hb_font_t*,void*,unsigned int,unsigned int,unsigned int*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_variation_glyph_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_variation_glyph_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_glyph_h_advance_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1490.const$0,"hb_font_funcs_set_glyph_h_advance_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_glyph_h_advance_func(struct hb_font_funcs_t* ffuncs, int (*func)(struct hb_font_t*,void*,unsigned int,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_glyph_h_advance_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_glyph_h_advance_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_glyph_v_advance_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1490.const$3,"hb_font_funcs_set_glyph_v_advance_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_glyph_v_advance_func(struct hb_font_funcs_t* ffuncs, int (*func)(struct hb_font_t*,void*,unsigned int,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_glyph_v_advance_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_glyph_v_advance_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_glyph_h_advances_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1491.const$0,"hb_font_funcs_set_glyph_h_advances_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_glyph_h_advances_func(struct hb_font_funcs_t* ffuncs, void (*func)(struct hb_font_t*,void*,unsigned int,unsigned int*,unsigned int,int*,unsigned int,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_glyph_h_advances_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_glyph_h_advances_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_glyph_v_advances_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1491.const$3,"hb_font_funcs_set_glyph_v_advances_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_glyph_v_advances_func(struct hb_font_funcs_t* ffuncs, void (*func)(struct hb_font_t*,void*,unsigned int,unsigned int*,unsigned int,int*,unsigned int,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_glyph_v_advances_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_glyph_v_advances_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_glyph_h_origin_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1492.const$0,"hb_font_funcs_set_glyph_h_origin_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_glyph_h_origin_func(struct hb_font_funcs_t* ffuncs, int (*func)(struct hb_font_t*,void*,unsigned int,int*,int*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_glyph_h_origin_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_glyph_h_origin_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_glyph_v_origin_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1492.const$3,"hb_font_funcs_set_glyph_v_origin_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_glyph_v_origin_func(struct hb_font_funcs_t* ffuncs, int (*func)(struct hb_font_t*,void*,unsigned int,int*,int*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_glyph_v_origin_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_glyph_v_origin_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_glyph_h_kerning_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1493.const$0,"hb_font_funcs_set_glyph_h_kerning_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_glyph_h_kerning_func(struct hb_font_funcs_t* ffuncs, int (*func)(struct hb_font_t*,void*,unsigned int,unsigned int,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_glyph_h_kerning_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_glyph_h_kerning_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_glyph_extents_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1493.const$3,"hb_font_funcs_set_glyph_extents_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_glyph_extents_func(struct hb_font_funcs_t* ffuncs, int (*func)(struct hb_font_t*,void*,unsigned int,struct hb_glyph_extents_t*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_glyph_extents_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_glyph_extents_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_glyph_contour_point_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1494.const$0,"hb_font_funcs_set_glyph_contour_point_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_glyph_contour_point_func(struct hb_font_funcs_t* ffuncs, int (*func)(struct hb_font_t*,void*,unsigned int,unsigned int,int*,int*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_glyph_contour_point_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_glyph_contour_point_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_glyph_name_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1494.const$3,"hb_font_funcs_set_glyph_name_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_glyph_name_func(struct hb_font_funcs_t* ffuncs, int (*func)(struct hb_font_t*,void*,unsigned int,char*,unsigned int,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_glyph_name_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_glyph_name_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_glyph_from_name_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1495.const$0,"hb_font_funcs_set_glyph_from_name_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_glyph_from_name_func(struct hb_font_funcs_t* ffuncs, int (*func)(struct hb_font_t*,void*,char*,int,unsigned int*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_glyph_from_name_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_glyph_from_name_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_draw_glyph_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1495.const$3,"hb_font_funcs_set_draw_glyph_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_draw_glyph_func(struct hb_font_funcs_t* ffuncs, void (*func)(struct hb_font_t*,void*,unsigned int,struct hb_draw_funcs_t*,void*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_draw_glyph_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_draw_glyph_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_paint_glyph_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1496.const$0,"hb_font_funcs_set_paint_glyph_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_paint_glyph_func(struct hb_font_funcs_t* ffuncs, void (*func)(struct hb_font_t*,void*,unsigned int,struct hb_paint_funcs_t*,void*,unsigned int,unsigned int,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_paint_glyph_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_paint_glyph_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_h_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1496.const$1,"hb_font_get_h_extents");
    }
    /**
     * {@snippet :
     * int hb_font_get_h_extents(struct hb_font_t* font, struct hb_font_extents_t* extents);
     * }
     */
    public static int hb_font_get_h_extents(MemorySegment font, MemorySegment extents) {
        var mh$ = hb_font_get_h_extents$MH();
        try {
            return (int)mh$.invokeExact(font, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_v_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1496.const$2,"hb_font_get_v_extents");
    }
    /**
     * {@snippet :
     * int hb_font_get_v_extents(struct hb_font_t* font, struct hb_font_extents_t* extents);
     * }
     */
    public static int hb_font_get_v_extents(MemorySegment font, MemorySegment extents) {
        var mh$ = hb_font_get_v_extents$MH();
        try {
            return (int)mh$.invokeExact(font, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_nominal_glyph$MH() {
        return RuntimeHelper.requireNonNull(constants$1496.const$3,"hb_font_get_nominal_glyph");
    }
    /**
     * {@snippet :
     * int hb_font_get_nominal_glyph(struct hb_font_t* font, unsigned int unicode, unsigned int* glyph);
     * }
     */
    public static int hb_font_get_nominal_glyph(MemorySegment font, int unicode, MemorySegment glyph) {
        var mh$ = hb_font_get_nominal_glyph$MH();
        try {
            return (int)mh$.invokeExact(font, unicode, glyph);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_variation_glyph$MH() {
        return RuntimeHelper.requireNonNull(constants$1496.const$4,"hb_font_get_variation_glyph");
    }
    /**
     * {@snippet :
     * int hb_font_get_variation_glyph(struct hb_font_t* font, unsigned int unicode, unsigned int variation_selector, unsigned int* glyph);
     * }
     */
    public static int hb_font_get_variation_glyph(MemorySegment font, int unicode, int variation_selector, MemorySegment glyph) {
        var mh$ = hb_font_get_variation_glyph$MH();
        try {
            return (int)mh$.invokeExact(font, unicode, variation_selector, glyph);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_nominal_glyphs$MH() {
        return RuntimeHelper.requireNonNull(constants$1496.const$6,"hb_font_get_nominal_glyphs");
    }
    /**
     * {@snippet :
     * unsigned int hb_font_get_nominal_glyphs(struct hb_font_t* font, unsigned int count, unsigned int* first_unicode, unsigned int unicode_stride, unsigned int* first_glyph, unsigned int glyph_stride);
     * }
     */
    public static int hb_font_get_nominal_glyphs(MemorySegment font, int count, MemorySegment first_unicode, int unicode_stride, MemorySegment first_glyph, int glyph_stride) {
        var mh$ = hb_font_get_nominal_glyphs$MH();
        try {
            return (int)mh$.invokeExact(font, count, first_unicode, unicode_stride, first_glyph, glyph_stride);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph_h_advance$MH() {
        return RuntimeHelper.requireNonNull(constants$1497.const$0,"hb_font_get_glyph_h_advance");
    }
    /**
     * {@snippet :
     * int hb_font_get_glyph_h_advance(struct hb_font_t* font, unsigned int glyph);
     * }
     */
    public static int hb_font_get_glyph_h_advance(MemorySegment font, int glyph) {
        var mh$ = hb_font_get_glyph_h_advance$MH();
        try {
            return (int)mh$.invokeExact(font, glyph);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph_v_advance$MH() {
        return RuntimeHelper.requireNonNull(constants$1497.const$1,"hb_font_get_glyph_v_advance");
    }
    /**
     * {@snippet :
     * int hb_font_get_glyph_v_advance(struct hb_font_t* font, unsigned int glyph);
     * }
     */
    public static int hb_font_get_glyph_v_advance(MemorySegment font, int glyph) {
        var mh$ = hb_font_get_glyph_v_advance$MH();
        try {
            return (int)mh$.invokeExact(font, glyph);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph_h_advances$MH() {
        return RuntimeHelper.requireNonNull(constants$1497.const$3,"hb_font_get_glyph_h_advances");
    }
    /**
     * {@snippet :
     * void hb_font_get_glyph_h_advances(struct hb_font_t* font, unsigned int count, unsigned int* first_glyph, unsigned int glyph_stride, int* first_advance, unsigned int advance_stride);
     * }
     */
    public static void hb_font_get_glyph_h_advances(MemorySegment font, int count, MemorySegment first_glyph, int glyph_stride, MemorySegment first_advance, int advance_stride) {
        var mh$ = hb_font_get_glyph_h_advances$MH();
        try {
            mh$.invokeExact(font, count, first_glyph, glyph_stride, first_advance, advance_stride);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph_v_advances$MH() {
        return RuntimeHelper.requireNonNull(constants$1497.const$4,"hb_font_get_glyph_v_advances");
    }
    /**
     * {@snippet :
     * void hb_font_get_glyph_v_advances(struct hb_font_t* font, unsigned int count, unsigned int* first_glyph, unsigned int glyph_stride, int* first_advance, unsigned int advance_stride);
     * }
     */
    public static void hb_font_get_glyph_v_advances(MemorySegment font, int count, MemorySegment first_glyph, int glyph_stride, MemorySegment first_advance, int advance_stride) {
        var mh$ = hb_font_get_glyph_v_advances$MH();
        try {
            mh$.invokeExact(font, count, first_glyph, glyph_stride, first_advance, advance_stride);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph_h_origin$MH() {
        return RuntimeHelper.requireNonNull(constants$1497.const$5,"hb_font_get_glyph_h_origin");
    }
    /**
     * {@snippet :
     * int hb_font_get_glyph_h_origin(struct hb_font_t* font, unsigned int glyph, int* x, int* y);
     * }
     */
    public static int hb_font_get_glyph_h_origin(MemorySegment font, int glyph, MemorySegment x, MemorySegment y) {
        var mh$ = hb_font_get_glyph_h_origin$MH();
        try {
            return (int)mh$.invokeExact(font, glyph, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph_v_origin$MH() {
        return RuntimeHelper.requireNonNull(constants$1498.const$0,"hb_font_get_glyph_v_origin");
    }
    /**
     * {@snippet :
     * int hb_font_get_glyph_v_origin(struct hb_font_t* font, unsigned int glyph, int* x, int* y);
     * }
     */
    public static int hb_font_get_glyph_v_origin(MemorySegment font, int glyph, MemorySegment x, MemorySegment y) {
        var mh$ = hb_font_get_glyph_v_origin$MH();
        try {
            return (int)mh$.invokeExact(font, glyph, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph_h_kerning$MH() {
        return RuntimeHelper.requireNonNull(constants$1498.const$1,"hb_font_get_glyph_h_kerning");
    }
    /**
     * {@snippet :
     * int hb_font_get_glyph_h_kerning(struct hb_font_t* font, unsigned int left_glyph, unsigned int right_glyph);
     * }
     */
    public static int hb_font_get_glyph_h_kerning(MemorySegment font, int left_glyph, int right_glyph) {
        var mh$ = hb_font_get_glyph_h_kerning$MH();
        try {
            return (int)mh$.invokeExact(font, left_glyph, right_glyph);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1498.const$2,"hb_font_get_glyph_extents");
    }
    /**
     * {@snippet :
     * int hb_font_get_glyph_extents(struct hb_font_t* font, unsigned int glyph, struct hb_glyph_extents_t* extents);
     * }
     */
    public static int hb_font_get_glyph_extents(MemorySegment font, int glyph, MemorySegment extents) {
        var mh$ = hb_font_get_glyph_extents$MH();
        try {
            return (int)mh$.invokeExact(font, glyph, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph_contour_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1498.const$3,"hb_font_get_glyph_contour_point");
    }
    /**
     * {@snippet :
     * int hb_font_get_glyph_contour_point(struct hb_font_t* font, unsigned int glyph, unsigned int point_index, int* x, int* y);
     * }
     */
    public static int hb_font_get_glyph_contour_point(MemorySegment font, int glyph, int point_index, MemorySegment x, MemorySegment y) {
        var mh$ = hb_font_get_glyph_contour_point$MH();
        try {
            return (int)mh$.invokeExact(font, glyph, point_index, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1498.const$4,"hb_font_get_glyph_name");
    }
    /**
     * {@snippet :
     * int hb_font_get_glyph_name(struct hb_font_t* font, unsigned int glyph, char* name, unsigned int size);
     * }
     */
    public static int hb_font_get_glyph_name(MemorySegment font, int glyph, MemorySegment name, int size) {
        var mh$ = hb_font_get_glyph_name$MH();
        try {
            return (int)mh$.invokeExact(font, glyph, name, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph_from_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1498.const$5,"hb_font_get_glyph_from_name");
    }
    /**
     * {@snippet :
     * int hb_font_get_glyph_from_name(struct hb_font_t* font, char* name, int len, unsigned int* glyph);
     * }
     */
    public static int hb_font_get_glyph_from_name(MemorySegment font, MemorySegment name, int len, MemorySegment glyph) {
        var mh$ = hb_font_get_glyph_from_name$MH();
        try {
            return (int)mh$.invokeExact(font, name, len, glyph);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_draw_glyph$MH() {
        return RuntimeHelper.requireNonNull(constants$1499.const$0,"hb_font_draw_glyph");
    }
    /**
     * {@snippet :
     * void hb_font_draw_glyph(struct hb_font_t* font, unsigned int glyph, struct hb_draw_funcs_t* dfuncs, void* draw_data);
     * }
     */
    public static void hb_font_draw_glyph(MemorySegment font, int glyph, MemorySegment dfuncs, MemorySegment draw_data) {
        var mh$ = hb_font_draw_glyph$MH();
        try {
            mh$.invokeExact(font, glyph, dfuncs, draw_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_paint_glyph$MH() {
        return RuntimeHelper.requireNonNull(constants$1499.const$2,"hb_font_paint_glyph");
    }
    /**
     * {@snippet :
     * void hb_font_paint_glyph(struct hb_font_t* font, unsigned int glyph, struct hb_paint_funcs_t* pfuncs, void* paint_data, unsigned int palette_index, unsigned int foreground);
     * }
     */
    public static void hb_font_paint_glyph(MemorySegment font, int glyph, MemorySegment pfuncs, MemorySegment paint_data, int palette_index, int foreground) {
        var mh$ = hb_font_paint_glyph$MH();
        try {
            mh$.invokeExact(font, glyph, pfuncs, paint_data, palette_index, foreground);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph$MH() {
        return RuntimeHelper.requireNonNull(constants$1499.const$3,"hb_font_get_glyph");
    }
    /**
     * {@snippet :
     * int hb_font_get_glyph(struct hb_font_t* font, unsigned int unicode, unsigned int variation_selector, unsigned int* glyph);
     * }
     */
    public static int hb_font_get_glyph(MemorySegment font, int unicode, int variation_selector, MemorySegment glyph) {
        var mh$ = hb_font_get_glyph$MH();
        try {
            return (int)mh$.invokeExact(font, unicode, variation_selector, glyph);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_extents_for_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1499.const$4,"hb_font_get_extents_for_direction");
    }
    /**
     * {@snippet :
     * void hb_font_get_extents_for_direction(struct hb_font_t* font, enum hb_direction_t direction, struct hb_font_extents_t* extents);
     * }
     */
    public static void hb_font_get_extents_for_direction(MemorySegment font, int direction, MemorySegment extents) {
        var mh$ = hb_font_get_extents_for_direction$MH();
        try {
            mh$.invokeExact(font, direction, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph_advance_for_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1499.const$6,"hb_font_get_glyph_advance_for_direction");
    }
    /**
     * {@snippet :
     * void hb_font_get_glyph_advance_for_direction(struct hb_font_t* font, unsigned int glyph, enum hb_direction_t direction, int* x, int* y);
     * }
     */
    public static void hb_font_get_glyph_advance_for_direction(MemorySegment font, int glyph, int direction, MemorySegment x, MemorySegment y) {
        var mh$ = hb_font_get_glyph_advance_for_direction$MH();
        try {
            mh$.invokeExact(font, glyph, direction, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph_advances_for_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1500.const$1,"hb_font_get_glyph_advances_for_direction");
    }
    /**
     * {@snippet :
     * void hb_font_get_glyph_advances_for_direction(struct hb_font_t* font, enum hb_direction_t direction, unsigned int count, unsigned int* first_glyph, unsigned int glyph_stride, int* first_advance, unsigned int advance_stride);
     * }
     */
    public static void hb_font_get_glyph_advances_for_direction(MemorySegment font, int direction, int count, MemorySegment first_glyph, int glyph_stride, MemorySegment first_advance, int advance_stride) {
        var mh$ = hb_font_get_glyph_advances_for_direction$MH();
        try {
            mh$.invokeExact(font, direction, count, first_glyph, glyph_stride, first_advance, advance_stride);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph_origin_for_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1500.const$2,"hb_font_get_glyph_origin_for_direction");
    }
    /**
     * {@snippet :
     * void hb_font_get_glyph_origin_for_direction(struct hb_font_t* font, unsigned int glyph, enum hb_direction_t direction, int* x, int* y);
     * }
     */
    public static void hb_font_get_glyph_origin_for_direction(MemorySegment font, int glyph, int direction, MemorySegment x, MemorySegment y) {
        var mh$ = hb_font_get_glyph_origin_for_direction$MH();
        try {
            mh$.invokeExact(font, glyph, direction, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_add_glyph_origin_for_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1500.const$3,"hb_font_add_glyph_origin_for_direction");
    }
    /**
     * {@snippet :
     * void hb_font_add_glyph_origin_for_direction(struct hb_font_t* font, unsigned int glyph, enum hb_direction_t direction, int* x, int* y);
     * }
     */
    public static void hb_font_add_glyph_origin_for_direction(MemorySegment font, int glyph, int direction, MemorySegment x, MemorySegment y) {
        var mh$ = hb_font_add_glyph_origin_for_direction$MH();
        try {
            mh$.invokeExact(font, glyph, direction, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_subtract_glyph_origin_for_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1500.const$4,"hb_font_subtract_glyph_origin_for_direction");
    }
    /**
     * {@snippet :
     * void hb_font_subtract_glyph_origin_for_direction(struct hb_font_t* font, unsigned int glyph, enum hb_direction_t direction, int* x, int* y);
     * }
     */
    public static void hb_font_subtract_glyph_origin_for_direction(MemorySegment font, int glyph, int direction, MemorySegment x, MemorySegment y) {
        var mh$ = hb_font_subtract_glyph_origin_for_direction$MH();
        try {
            mh$.invokeExact(font, glyph, direction, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph_kerning_for_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1500.const$5,"hb_font_get_glyph_kerning_for_direction");
    }
    /**
     * {@snippet :
     * void hb_font_get_glyph_kerning_for_direction(struct hb_font_t* font, unsigned int first_glyph, unsigned int second_glyph, enum hb_direction_t direction, int* x, int* y);
     * }
     */
    public static void hb_font_get_glyph_kerning_for_direction(MemorySegment font, int first_glyph, int second_glyph, int direction, MemorySegment x, MemorySegment y) {
        var mh$ = hb_font_get_glyph_kerning_for_direction$MH();
        try {
            mh$.invokeExact(font, first_glyph, second_glyph, direction, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph_extents_for_origin$MH() {
        return RuntimeHelper.requireNonNull(constants$1501.const$0,"hb_font_get_glyph_extents_for_origin");
    }
    /**
     * {@snippet :
     * int hb_font_get_glyph_extents_for_origin(struct hb_font_t* font, unsigned int glyph, enum hb_direction_t direction, struct hb_glyph_extents_t* extents);
     * }
     */
    public static int hb_font_get_glyph_extents_for_origin(MemorySegment font, int glyph, int direction, MemorySegment extents) {
        var mh$ = hb_font_get_glyph_extents_for_origin$MH();
        try {
            return (int)mh$.invokeExact(font, glyph, direction, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph_contour_point_for_origin$MH() {
        return RuntimeHelper.requireNonNull(constants$1501.const$2,"hb_font_get_glyph_contour_point_for_origin");
    }
    /**
     * {@snippet :
     * int hb_font_get_glyph_contour_point_for_origin(struct hb_font_t* font, unsigned int glyph, unsigned int point_index, enum hb_direction_t direction, int* x, int* y);
     * }
     */
    public static int hb_font_get_glyph_contour_point_for_origin(MemorySegment font, int glyph, int point_index, int direction, MemorySegment x, MemorySegment y) {
        var mh$ = hb_font_get_glyph_contour_point_for_origin$MH();
        try {
            return (int)mh$.invokeExact(font, glyph, point_index, direction, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_glyph_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1501.const$4,"hb_font_glyph_to_string");
    }
    /**
     * {@snippet :
     * void hb_font_glyph_to_string(struct hb_font_t* font, unsigned int glyph, char* s, unsigned int size);
     * }
     */
    public static void hb_font_glyph_to_string(MemorySegment font, int glyph, MemorySegment s, int size) {
        var mh$ = hb_font_glyph_to_string$MH();
        try {
            mh$.invokeExact(font, glyph, s, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_glyph_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1501.const$5,"hb_font_glyph_from_string");
    }
    /**
     * {@snippet :
     * int hb_font_glyph_from_string(struct hb_font_t* font, char* s, int len, unsigned int* glyph);
     * }
     */
    public static int hb_font_glyph_from_string(MemorySegment font, MemorySegment s, int len, MemorySegment glyph) {
        var mh$ = hb_font_glyph_from_string$MH();
        try {
            return (int)mh$.invokeExact(font, s, len, glyph);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1502.const$0,"hb_font_create");
    }
    /**
     * {@snippet :
     * struct hb_font_t* hb_font_create(struct hb_face_t* face);
     * }
     */
    public static MemorySegment hb_font_create(MemorySegment face) {
        var mh$ = hb_font_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_create_sub_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1502.const$1,"hb_font_create_sub_font");
    }
    /**
     * {@snippet :
     * struct hb_font_t* hb_font_create_sub_font(struct hb_font_t* parent);
     * }
     */
    public static MemorySegment hb_font_create_sub_font(MemorySegment parent) {
        var mh$ = hb_font_create_sub_font$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$1502.const$2,"hb_font_get_empty");
    }
    /**
     * {@snippet :
     * struct hb_font_t* hb_font_get_empty();
     * }
     */
    public static MemorySegment hb_font_get_empty() {
        var mh$ = hb_font_get_empty$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1502.const$3,"hb_font_reference");
    }
    /**
     * {@snippet :
     * struct hb_font_t* hb_font_reference(struct hb_font_t* font);
     * }
     */
    public static MemorySegment hb_font_reference(MemorySegment font) {
        var mh$ = hb_font_reference$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1502.const$4,"hb_font_destroy");
    }
    /**
     * {@snippet :
     * void hb_font_destroy(struct hb_font_t* font);
     * }
     */
    public static void hb_font_destroy(MemorySegment font) {
        var mh$ = hb_font_destroy$MH();
        try {
            mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1503.const$0,"hb_font_set_user_data");
    }
    /**
     * {@snippet :
     * int hb_font_set_user_data(struct hb_font_t* font, struct hb_user_data_key_t* key, void* data, void (*destroy)(void*), int replace);
     * }
     */
    public static int hb_font_set_user_data(MemorySegment font, MemorySegment key, MemorySegment data, MemorySegment destroy, int replace) {
        var mh$ = hb_font_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(font, key, data, destroy, replace);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1503.const$1,"hb_font_get_user_data");
    }
    /**
     * {@snippet :
     * void* hb_font_get_user_data(struct hb_font_t* font, struct hb_user_data_key_t* key);
     * }
     */
    public static MemorySegment hb_font_get_user_data(MemorySegment font, MemorySegment key) {
        var mh$ = hb_font_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_make_immutable$MH() {
        return RuntimeHelper.requireNonNull(constants$1503.const$2,"hb_font_make_immutable");
    }
    /**
     * {@snippet :
     * void hb_font_make_immutable(struct hb_font_t* font);
     * }
     */
    public static void hb_font_make_immutable(MemorySegment font) {
        var mh$ = hb_font_make_immutable$MH();
        try {
            mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_is_immutable$MH() {
        return RuntimeHelper.requireNonNull(constants$1503.const$3,"hb_font_is_immutable");
    }
    /**
     * {@snippet :
     * int hb_font_is_immutable(struct hb_font_t* font);
     * }
     */
    public static int hb_font_is_immutable(MemorySegment font) {
        var mh$ = hb_font_is_immutable$MH();
        try {
            return (int)mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$1503.const$4,"hb_font_get_serial");
    }
    /**
     * {@snippet :
     * unsigned int hb_font_get_serial(struct hb_font_t* font);
     * }
     */
    public static int hb_font_get_serial(MemorySegment font) {
        var mh$ = hb_font_get_serial$MH();
        try {
            return (int)mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$1503.const$5,"hb_font_changed");
    }
    /**
     * {@snippet :
     * void hb_font_changed(struct hb_font_t* font);
     * }
     */
    public static void hb_font_changed(MemorySegment font) {
        var mh$ = hb_font_changed$MH();
        try {
            mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_set_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1504.const$0,"hb_font_set_parent");
    }
    /**
     * {@snippet :
     * void hb_font_set_parent(struct hb_font_t* font, struct hb_font_t* parent);
     * }
     */
    public static void hb_font_set_parent(MemorySegment font, MemorySegment parent) {
        var mh$ = hb_font_set_parent$MH();
        try {
            mh$.invokeExact(font, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1504.const$1,"hb_font_get_parent");
    }
    /**
     * {@snippet :
     * struct hb_font_t* hb_font_get_parent(struct hb_font_t* font);
     * }
     */
    public static MemorySegment hb_font_get_parent(MemorySegment font) {
        var mh$ = hb_font_get_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_set_face$MH() {
        return RuntimeHelper.requireNonNull(constants$1504.const$2,"hb_font_set_face");
    }
    /**
     * {@snippet :
     * void hb_font_set_face(struct hb_font_t* font, struct hb_face_t* face);
     * }
     */
    public static void hb_font_set_face(MemorySegment font, MemorySegment face) {
        var mh$ = hb_font_set_face$MH();
        try {
            mh$.invokeExact(font, face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_face$MH() {
        return RuntimeHelper.requireNonNull(constants$1504.const$3,"hb_font_get_face");
    }
    /**
     * {@snippet :
     * struct hb_face_t* hb_font_get_face(struct hb_font_t* font);
     * }
     */
    public static MemorySegment hb_font_get_face(MemorySegment font) {
        var mh$ = hb_font_get_face$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_set_funcs$MH() {
        return RuntimeHelper.requireNonNull(constants$1504.const$5,"hb_font_set_funcs");
    }
    /**
     * {@snippet :
     * void hb_font_set_funcs(struct hb_font_t* font, struct hb_font_funcs_t* klass, void* font_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_set_funcs(MemorySegment font, MemorySegment klass, MemorySegment font_data, MemorySegment destroy) {
        var mh$ = hb_font_set_funcs$MH();
        try {
            mh$.invokeExact(font, klass, font_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_set_funcs_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1505.const$1,"hb_font_set_funcs_data");
    }
    /**
     * {@snippet :
     * void hb_font_set_funcs_data(struct hb_font_t* font, void* font_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_set_funcs_data(MemorySegment font, MemorySegment font_data, MemorySegment destroy) {
        var mh$ = hb_font_set_funcs_data$MH();
        try {
            mh$.invokeExact(font, font_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_set_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1505.const$2,"hb_font_set_scale");
    }
    /**
     * {@snippet :
     * void hb_font_set_scale(struct hb_font_t* font, int x_scale, int y_scale);
     * }
     */
    public static void hb_font_set_scale(MemorySegment font, int x_scale, int y_scale) {
        var mh$ = hb_font_set_scale$MH();
        try {
            mh$.invokeExact(font, x_scale, y_scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1505.const$3,"hb_font_get_scale");
    }
    /**
     * {@snippet :
     * void hb_font_get_scale(struct hb_font_t* font, int* x_scale, int* y_scale);
     * }
     */
    public static void hb_font_get_scale(MemorySegment font, MemorySegment x_scale, MemorySegment y_scale) {
        var mh$ = hb_font_get_scale$MH();
        try {
            mh$.invokeExact(font, x_scale, y_scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_set_ppem$MH() {
        return RuntimeHelper.requireNonNull(constants$1505.const$4,"hb_font_set_ppem");
    }
    /**
     * {@snippet :
     * void hb_font_set_ppem(struct hb_font_t* font, unsigned int x_ppem, unsigned int y_ppem);
     * }
     */
    public static void hb_font_set_ppem(MemorySegment font, int x_ppem, int y_ppem) {
        var mh$ = hb_font_set_ppem$MH();
        try {
            mh$.invokeExact(font, x_ppem, y_ppem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_ppem$MH() {
        return RuntimeHelper.requireNonNull(constants$1505.const$5,"hb_font_get_ppem");
    }
    /**
     * {@snippet :
     * void hb_font_get_ppem(struct hb_font_t* font, unsigned int* x_ppem, unsigned int* y_ppem);
     * }
     */
    public static void hb_font_get_ppem(MemorySegment font, MemorySegment x_ppem, MemorySegment y_ppem) {
        var mh$ = hb_font_get_ppem$MH();
        try {
            mh$.invokeExact(font, x_ppem, y_ppem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_set_ptem$MH() {
        return RuntimeHelper.requireNonNull(constants$1506.const$0,"hb_font_set_ptem");
    }
    /**
     * {@snippet :
     * void hb_font_set_ptem(struct hb_font_t* font, float ptem);
     * }
     */
    public static void hb_font_set_ptem(MemorySegment font, float ptem) {
        var mh$ = hb_font_set_ptem$MH();
        try {
            mh$.invokeExact(font, ptem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_ptem$MH() {
        return RuntimeHelper.requireNonNull(constants$1506.const$1,"hb_font_get_ptem");
    }
    /**
     * {@snippet :
     * float hb_font_get_ptem(struct hb_font_t* font);
     * }
     */
    public static float hb_font_get_ptem(MemorySegment font) {
        var mh$ = hb_font_get_ptem$MH();
        try {
            return (float)mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_set_synthetic_bold$MH() {
        return RuntimeHelper.requireNonNull(constants$1506.const$3,"hb_font_set_synthetic_bold");
    }
    /**
     * {@snippet :
     * void hb_font_set_synthetic_bold(struct hb_font_t* font, float x_embolden, float y_embolden, int in_place);
     * }
     */
    public static void hb_font_set_synthetic_bold(MemorySegment font, float x_embolden, float y_embolden, int in_place) {
        var mh$ = hb_font_set_synthetic_bold$MH();
        try {
            mh$.invokeExact(font, x_embolden, y_embolden, in_place);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_synthetic_bold$MH() {
        return RuntimeHelper.requireNonNull(constants$1506.const$4,"hb_font_get_synthetic_bold");
    }
    /**
     * {@snippet :
     * void hb_font_get_synthetic_bold(struct hb_font_t* font, float* x_embolden, float* y_embolden, int* in_place);
     * }
     */
    public static void hb_font_get_synthetic_bold(MemorySegment font, MemorySegment x_embolden, MemorySegment y_embolden, MemorySegment in_place) {
        var mh$ = hb_font_get_synthetic_bold$MH();
        try {
            mh$.invokeExact(font, x_embolden, y_embolden, in_place);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_set_synthetic_slant$MH() {
        return RuntimeHelper.requireNonNull(constants$1506.const$5,"hb_font_set_synthetic_slant");
    }
    /**
     * {@snippet :
     * void hb_font_set_synthetic_slant(struct hb_font_t* font, float slant);
     * }
     */
    public static void hb_font_set_synthetic_slant(MemorySegment font, float slant) {
        var mh$ = hb_font_set_synthetic_slant$MH();
        try {
            mh$.invokeExact(font, slant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_synthetic_slant$MH() {
        return RuntimeHelper.requireNonNull(constants$1507.const$0,"hb_font_get_synthetic_slant");
    }
    /**
     * {@snippet :
     * float hb_font_get_synthetic_slant(struct hb_font_t* font);
     * }
     */
    public static float hb_font_get_synthetic_slant(MemorySegment font) {
        var mh$ = hb_font_get_synthetic_slant$MH();
        try {
            return (float)mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_set_variations$MH() {
        return RuntimeHelper.requireNonNull(constants$1507.const$1,"hb_font_set_variations");
    }
    /**
     * {@snippet :
     * void hb_font_set_variations(struct hb_font_t* font, struct hb_variation_t* variations, unsigned int variations_length);
     * }
     */
    public static void hb_font_set_variations(MemorySegment font, MemorySegment variations, int variations_length) {
        var mh$ = hb_font_set_variations$MH();
        try {
            mh$.invokeExact(font, variations, variations_length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_set_variation$MH() {
        return RuntimeHelper.requireNonNull(constants$1507.const$3,"hb_font_set_variation");
    }
    /**
     * {@snippet :
     * void hb_font_set_variation(struct hb_font_t* font, unsigned int tag, float value);
     * }
     */
    public static void hb_font_set_variation(MemorySegment font, int tag, float value) {
        var mh$ = hb_font_set_variation$MH();
        try {
            mh$.invokeExact(font, tag, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_set_var_coords_design$MH() {
        return RuntimeHelper.requireNonNull(constants$1507.const$4,"hb_font_set_var_coords_design");
    }
    /**
     * {@snippet :
     * void hb_font_set_var_coords_design(struct hb_font_t* font, float* coords, unsigned int coords_length);
     * }
     */
    public static void hb_font_set_var_coords_design(MemorySegment font, MemorySegment coords, int coords_length) {
        var mh$ = hb_font_set_var_coords_design$MH();
        try {
            mh$.invokeExact(font, coords, coords_length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_var_coords_design$MH() {
        return RuntimeHelper.requireNonNull(constants$1507.const$5,"hb_font_get_var_coords_design");
    }
    /**
     * {@snippet :
     * float* hb_font_get_var_coords_design(struct hb_font_t* font, unsigned int* length);
     * }
     */
    public static MemorySegment hb_font_get_var_coords_design(MemorySegment font, MemorySegment length) {
        var mh$ = hb_font_get_var_coords_design$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_set_var_coords_normalized$MH() {
        return RuntimeHelper.requireNonNull(constants$1508.const$0,"hb_font_set_var_coords_normalized");
    }
    /**
     * {@snippet :
     * void hb_font_set_var_coords_normalized(struct hb_font_t* font, int* coords, unsigned int coords_length);
     * }
     */
    public static void hb_font_set_var_coords_normalized(MemorySegment font, MemorySegment coords, int coords_length) {
        var mh$ = hb_font_set_var_coords_normalized$MH();
        try {
            mh$.invokeExact(font, coords, coords_length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_var_coords_normalized$MH() {
        return RuntimeHelper.requireNonNull(constants$1508.const$1,"hb_font_get_var_coords_normalized");
    }
    /**
     * {@snippet :
     * int* hb_font_get_var_coords_normalized(struct hb_font_t* font, unsigned int* length);
     * }
     */
    public static MemorySegment hb_font_get_var_coords_normalized(MemorySegment font, MemorySegment length) {
        var mh$ = hb_font_get_var_coords_normalized$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_set_var_named_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$1508.const$2,"hb_font_set_var_named_instance");
    }
    /**
     * {@snippet :
     * void hb_font_set_var_named_instance(struct hb_font_t* font, unsigned int instance_index);
     * }
     */
    public static void hb_font_set_var_named_instance(MemorySegment font, int instance_index) {
        var mh$ = hb_font_set_var_named_instance$MH();
        try {
            mh$.invokeExact(font, instance_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_var_named_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$1508.const$3,"hb_font_get_var_named_instance");
    }
    /**
     * {@snippet :
     * unsigned int hb_font_get_var_named_instance(struct hb_font_t* font);
     * }
     */
    public static int hb_font_get_var_named_instance(MemorySegment font) {
        var mh$ = hb_font_get_var_named_instance$MH();
        try {
            return (int)mh$.invokeExact(font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum hb_glyph_flags_t.HB_GLYPH_FLAG_UNSAFE_TO_BREAK = 1;
     * }
     */
    public static int HB_GLYPH_FLAG_UNSAFE_TO_BREAK() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum hb_glyph_flags_t.HB_GLYPH_FLAG_UNSAFE_TO_CONCAT = 2;
     * }
     */
    public static int HB_GLYPH_FLAG_UNSAFE_TO_CONCAT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum hb_glyph_flags_t.HB_GLYPH_FLAG_SAFE_TO_INSERT_TATWEEL = 4;
     * }
     */
    public static int HB_GLYPH_FLAG_SAFE_TO_INSERT_TATWEEL() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum hb_glyph_flags_t.HB_GLYPH_FLAG_DEFINED = 7;
     * }
     */
    public static int HB_GLYPH_FLAG_DEFINED() {
        return (int)7L;
    }
    public static MethodHandle hb_glyph_info_get_glyph_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1509.const$2,"hb_glyph_info_get_glyph_flags");
    }
    /**
     * {@snippet :
     * enum hb_glyph_flags_t hb_glyph_info_get_glyph_flags(struct hb_glyph_info_t* info);
     * }
     */
    public static int hb_glyph_info_get_glyph_flags(MemorySegment info) {
        var mh$ = hb_glyph_info_get_glyph_flags$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_segment_properties_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1511.const$2,"hb_segment_properties_equal");
    }
    /**
     * {@snippet :
     * int hb_segment_properties_equal(struct hb_segment_properties_t* a, struct hb_segment_properties_t* b);
     * }
     */
    public static int hb_segment_properties_equal(MemorySegment a, MemorySegment b) {
        var mh$ = hb_segment_properties_equal$MH();
        try {
            return (int)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_segment_properties_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$1511.const$3,"hb_segment_properties_hash");
    }
    /**
     * {@snippet :
     * unsigned int hb_segment_properties_hash(struct hb_segment_properties_t* p);
     * }
     */
    public static int hb_segment_properties_hash(MemorySegment p) {
        var mh$ = hb_segment_properties_hash$MH();
        try {
            return (int)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_segment_properties_overlay$MH() {
        return RuntimeHelper.requireNonNull(constants$1511.const$4,"hb_segment_properties_overlay");
    }
    /**
     * {@snippet :
     * void hb_segment_properties_overlay(struct hb_segment_properties_t* p, struct hb_segment_properties_t* src);
     * }
     */
    public static void hb_segment_properties_overlay(MemorySegment p, MemorySegment src) {
        var mh$ = hb_segment_properties_overlay$MH();
        try {
            mh$.invokeExact(p, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1511.const$5,"hb_buffer_create");
    }
    /**
     * {@snippet :
     * struct hb_buffer_t* hb_buffer_create();
     * }
     */
    public static MemorySegment hb_buffer_create() {
        var mh$ = hb_buffer_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_create_similar$MH() {
        return RuntimeHelper.requireNonNull(constants$1512.const$0,"hb_buffer_create_similar");
    }
    /**
     * {@snippet :
     * struct hb_buffer_t* hb_buffer_create_similar(struct hb_buffer_t* src);
     * }
     */
    public static MemorySegment hb_buffer_create_similar(MemorySegment src) {
        var mh$ = hb_buffer_create_similar$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$1512.const$1,"hb_buffer_reset");
    }
    /**
     * {@snippet :
     * void hb_buffer_reset(struct hb_buffer_t* buffer);
     * }
     */
    public static void hb_buffer_reset(MemorySegment buffer) {
        var mh$ = hb_buffer_reset$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_get_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$1512.const$2,"hb_buffer_get_empty");
    }
    /**
     * {@snippet :
     * struct hb_buffer_t* hb_buffer_get_empty();
     * }
     */
    public static MemorySegment hb_buffer_get_empty() {
        var mh$ = hb_buffer_get_empty$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1512.const$3,"hb_buffer_reference");
    }
    /**
     * {@snippet :
     * struct hb_buffer_t* hb_buffer_reference(struct hb_buffer_t* buffer);
     * }
     */
    public static MemorySegment hb_buffer_reference(MemorySegment buffer) {
        var mh$ = hb_buffer_reference$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1512.const$4,"hb_buffer_destroy");
    }
    /**
     * {@snippet :
     * void hb_buffer_destroy(struct hb_buffer_t* buffer);
     * }
     */
    public static void hb_buffer_destroy(MemorySegment buffer) {
        var mh$ = hb_buffer_destroy$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1513.const$0,"hb_buffer_set_user_data");
    }
    /**
     * {@snippet :
     * int hb_buffer_set_user_data(struct hb_buffer_t* buffer, struct hb_user_data_key_t* key, void* data, void (*destroy)(void*), int replace);
     * }
     */
    public static int hb_buffer_set_user_data(MemorySegment buffer, MemorySegment key, MemorySegment data, MemorySegment destroy, int replace) {
        var mh$ = hb_buffer_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(buffer, key, data, destroy, replace);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1513.const$1,"hb_buffer_get_user_data");
    }
    /**
     * {@snippet :
     * void* hb_buffer_get_user_data(struct hb_buffer_t* buffer, struct hb_user_data_key_t* key);
     * }
     */
    public static MemorySegment hb_buffer_get_user_data(MemorySegment buffer, MemorySegment key) {
        var mh$ = hb_buffer_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum hb_buffer_content_type_t.HB_BUFFER_CONTENT_TYPE_INVALID = 0;
     * }
     */
    public static int HB_BUFFER_CONTENT_TYPE_INVALID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_content_type_t.HB_BUFFER_CONTENT_TYPE_UNICODE = 1;
     * }
     */
    public static int HB_BUFFER_CONTENT_TYPE_UNICODE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_content_type_t.HB_BUFFER_CONTENT_TYPE_GLYPHS = 2;
     * }
     */
    public static int HB_BUFFER_CONTENT_TYPE_GLYPHS() {
        return (int)2L;
    }
    public static MethodHandle hb_buffer_set_content_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1513.const$2,"hb_buffer_set_content_type");
    }
    /**
     * {@snippet :
     * void hb_buffer_set_content_type(struct hb_buffer_t* buffer, enum hb_buffer_content_type_t content_type);
     * }
     */
    public static void hb_buffer_set_content_type(MemorySegment buffer, int content_type) {
        var mh$ = hb_buffer_set_content_type$MH();
        try {
            mh$.invokeExact(buffer, content_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_get_content_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1513.const$3,"hb_buffer_get_content_type");
    }
    /**
     * {@snippet :
     * enum hb_buffer_content_type_t hb_buffer_get_content_type(struct hb_buffer_t* buffer);
     * }
     */
    public static int hb_buffer_get_content_type(MemorySegment buffer) {
        var mh$ = hb_buffer_get_content_type$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_set_unicode_funcs$MH() {
        return RuntimeHelper.requireNonNull(constants$1513.const$4,"hb_buffer_set_unicode_funcs");
    }
    /**
     * {@snippet :
     * void hb_buffer_set_unicode_funcs(struct hb_buffer_t* buffer, struct hb_unicode_funcs_t* unicode_funcs);
     * }
     */
    public static void hb_buffer_set_unicode_funcs(MemorySegment buffer, MemorySegment unicode_funcs) {
        var mh$ = hb_buffer_set_unicode_funcs$MH();
        try {
            mh$.invokeExact(buffer, unicode_funcs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_get_unicode_funcs$MH() {
        return RuntimeHelper.requireNonNull(constants$1513.const$5,"hb_buffer_get_unicode_funcs");
    }
    /**
     * {@snippet :
     * struct hb_unicode_funcs_t* hb_buffer_get_unicode_funcs(struct hb_buffer_t* buffer);
     * }
     */
    public static MemorySegment hb_buffer_get_unicode_funcs(MemorySegment buffer) {
        var mh$ = hb_buffer_get_unicode_funcs$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_set_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1514.const$0,"hb_buffer_set_direction");
    }
    /**
     * {@snippet :
     * void hb_buffer_set_direction(struct hb_buffer_t* buffer, enum hb_direction_t direction);
     * }
     */
    public static void hb_buffer_set_direction(MemorySegment buffer, int direction) {
        var mh$ = hb_buffer_set_direction$MH();
        try {
            mh$.invokeExact(buffer, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_get_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1514.const$1,"hb_buffer_get_direction");
    }
    /**
     * {@snippet :
     * enum hb_direction_t hb_buffer_get_direction(struct hb_buffer_t* buffer);
     * }
     */
    public static int hb_buffer_get_direction(MemorySegment buffer) {
        var mh$ = hb_buffer_get_direction$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_set_script$MH() {
        return RuntimeHelper.requireNonNull(constants$1514.const$2,"hb_buffer_set_script");
    }
    /**
     * {@snippet :
     * void hb_buffer_set_script(struct hb_buffer_t* buffer, enum hb_script_t script);
     * }
     */
    public static void hb_buffer_set_script(MemorySegment buffer, int script) {
        var mh$ = hb_buffer_set_script$MH();
        try {
            mh$.invokeExact(buffer, script);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_get_script$MH() {
        return RuntimeHelper.requireNonNull(constants$1514.const$3,"hb_buffer_get_script");
    }
    /**
     * {@snippet :
     * enum hb_script_t hb_buffer_get_script(struct hb_buffer_t* buffer);
     * }
     */
    public static int hb_buffer_get_script(MemorySegment buffer) {
        var mh$ = hb_buffer_get_script$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_set_language$MH() {
        return RuntimeHelper.requireNonNull(constants$1514.const$4,"hb_buffer_set_language");
    }
    /**
     * {@snippet :
     * void hb_buffer_set_language(struct hb_buffer_t* buffer, struct hb_language_impl_t* language);
     * }
     */
    public static void hb_buffer_set_language(MemorySegment buffer, MemorySegment language) {
        var mh$ = hb_buffer_set_language$MH();
        try {
            mh$.invokeExact(buffer, language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_get_language$MH() {
        return RuntimeHelper.requireNonNull(constants$1514.const$5,"hb_buffer_get_language");
    }
    /**
     * {@snippet :
     * struct hb_language_impl_t* hb_buffer_get_language(struct hb_buffer_t* buffer);
     * }
     */
    public static MemorySegment hb_buffer_get_language(MemorySegment buffer) {
        var mh$ = hb_buffer_get_language$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_set_segment_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.const$0,"hb_buffer_set_segment_properties");
    }
    /**
     * {@snippet :
     * void hb_buffer_set_segment_properties(struct hb_buffer_t* buffer, struct hb_segment_properties_t* props);
     * }
     */
    public static void hb_buffer_set_segment_properties(MemorySegment buffer, MemorySegment props) {
        var mh$ = hb_buffer_set_segment_properties$MH();
        try {
            mh$.invokeExact(buffer, props);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_get_segment_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.const$1,"hb_buffer_get_segment_properties");
    }
    /**
     * {@snippet :
     * void hb_buffer_get_segment_properties(struct hb_buffer_t* buffer, struct hb_segment_properties_t* props);
     * }
     */
    public static void hb_buffer_get_segment_properties(MemorySegment buffer, MemorySegment props) {
        var mh$ = hb_buffer_get_segment_properties$MH();
        try {
            mh$.invokeExact(buffer, props);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_guess_segment_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.const$2,"hb_buffer_guess_segment_properties");
    }
    /**
     * {@snippet :
     * void hb_buffer_guess_segment_properties(struct hb_buffer_t* buffer);
     * }
     */
    public static void hb_buffer_guess_segment_properties(MemorySegment buffer) {
        var mh$ = hb_buffer_guess_segment_properties$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum hb_buffer_flags_t.HB_BUFFER_FLAG_DEFAULT = 0;
     * }
     */
    public static int HB_BUFFER_FLAG_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_flags_t.HB_BUFFER_FLAG_BOT = 1;
     * }
     */
    public static int HB_BUFFER_FLAG_BOT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_flags_t.HB_BUFFER_FLAG_EOT = 2;
     * }
     */
    public static int HB_BUFFER_FLAG_EOT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_flags_t.HB_BUFFER_FLAG_PRESERVE_DEFAULT_IGNORABLES = 4;
     * }
     */
    public static int HB_BUFFER_FLAG_PRESERVE_DEFAULT_IGNORABLES() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_flags_t.HB_BUFFER_FLAG_REMOVE_DEFAULT_IGNORABLES = 8;
     * }
     */
    public static int HB_BUFFER_FLAG_REMOVE_DEFAULT_IGNORABLES() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_flags_t.HB_BUFFER_FLAG_DO_NOT_INSERT_DOTTED_CIRCLE = 16;
     * }
     */
    public static int HB_BUFFER_FLAG_DO_NOT_INSERT_DOTTED_CIRCLE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_flags_t.HB_BUFFER_FLAG_VERIFY = 32;
     * }
     */
    public static int HB_BUFFER_FLAG_VERIFY() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_flags_t.HB_BUFFER_FLAG_PRODUCE_UNSAFE_TO_CONCAT = 64;
     * }
     */
    public static int HB_BUFFER_FLAG_PRODUCE_UNSAFE_TO_CONCAT() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_flags_t.HB_BUFFER_FLAG_PRODUCE_SAFE_TO_INSERT_TATWEEL = 128;
     * }
     */
    public static int HB_BUFFER_FLAG_PRODUCE_SAFE_TO_INSERT_TATWEEL() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_flags_t.HB_BUFFER_FLAG_DEFINED = 255;
     * }
     */
    public static int HB_BUFFER_FLAG_DEFINED() {
        return (int)255L;
    }
    public static MethodHandle hb_buffer_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.const$3,"hb_buffer_set_flags");
    }
    /**
     * {@snippet :
     * void hb_buffer_set_flags(struct hb_buffer_t* buffer, enum hb_buffer_flags_t flags);
     * }
     */
    public static void hb_buffer_set_flags(MemorySegment buffer, int flags) {
        var mh$ = hb_buffer_set_flags$MH();
        try {
            mh$.invokeExact(buffer, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.const$4,"hb_buffer_get_flags");
    }
    /**
     * {@snippet :
     * enum hb_buffer_flags_t hb_buffer_get_flags(struct hb_buffer_t* buffer);
     * }
     */
    public static int hb_buffer_get_flags(MemorySegment buffer) {
        var mh$ = hb_buffer_get_flags$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum hb_buffer_cluster_level_t.HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES = 0;
     * }
     */
    public static int HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_cluster_level_t.HB_BUFFER_CLUSTER_LEVEL_MONOTONE_CHARACTERS = 1;
     * }
     */
    public static int HB_BUFFER_CLUSTER_LEVEL_MONOTONE_CHARACTERS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_cluster_level_t.HB_BUFFER_CLUSTER_LEVEL_CHARACTERS = 2;
     * }
     */
    public static int HB_BUFFER_CLUSTER_LEVEL_CHARACTERS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_cluster_level_t.HB_BUFFER_CLUSTER_LEVEL_DEFAULT = 0;
     * }
     */
    public static int HB_BUFFER_CLUSTER_LEVEL_DEFAULT() {
        return (int)0L;
    }
    public static MethodHandle hb_buffer_set_cluster_level$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.const$5,"hb_buffer_set_cluster_level");
    }
    /**
     * {@snippet :
     * void hb_buffer_set_cluster_level(struct hb_buffer_t* buffer, enum hb_buffer_cluster_level_t cluster_level);
     * }
     */
    public static void hb_buffer_set_cluster_level(MemorySegment buffer, int cluster_level) {
        var mh$ = hb_buffer_set_cluster_level$MH();
        try {
            mh$.invokeExact(buffer, cluster_level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_get_cluster_level$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.const$0,"hb_buffer_get_cluster_level");
    }
    /**
     * {@snippet :
     * enum hb_buffer_cluster_level_t hb_buffer_get_cluster_level(struct hb_buffer_t* buffer);
     * }
     */
    public static int hb_buffer_get_cluster_level(MemorySegment buffer) {
        var mh$ = hb_buffer_get_cluster_level$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_set_replacement_codepoint$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.const$1,"hb_buffer_set_replacement_codepoint");
    }
    /**
     * {@snippet :
     * void hb_buffer_set_replacement_codepoint(struct hb_buffer_t* buffer, unsigned int replacement);
     * }
     */
    public static void hb_buffer_set_replacement_codepoint(MemorySegment buffer, int replacement) {
        var mh$ = hb_buffer_set_replacement_codepoint$MH();
        try {
            mh$.invokeExact(buffer, replacement);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_get_replacement_codepoint$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.const$2,"hb_buffer_get_replacement_codepoint");
    }
    /**
     * {@snippet :
     * unsigned int hb_buffer_get_replacement_codepoint(struct hb_buffer_t* buffer);
     * }
     */
    public static int hb_buffer_get_replacement_codepoint(MemorySegment buffer) {
        var mh$ = hb_buffer_get_replacement_codepoint$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_set_invisible_glyph$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.const$3,"hb_buffer_set_invisible_glyph");
    }
    /**
     * {@snippet :
     * void hb_buffer_set_invisible_glyph(struct hb_buffer_t* buffer, unsigned int invisible);
     * }
     */
    public static void hb_buffer_set_invisible_glyph(MemorySegment buffer, int invisible) {
        var mh$ = hb_buffer_set_invisible_glyph$MH();
        try {
            mh$.invokeExact(buffer, invisible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_get_invisible_glyph$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.const$4,"hb_buffer_get_invisible_glyph");
    }
    /**
     * {@snippet :
     * unsigned int hb_buffer_get_invisible_glyph(struct hb_buffer_t* buffer);
     * }
     */
    public static int hb_buffer_get_invisible_glyph(MemorySegment buffer) {
        var mh$ = hb_buffer_get_invisible_glyph$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_set_not_found_glyph$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.const$5,"hb_buffer_set_not_found_glyph");
    }
    /**
     * {@snippet :
     * void hb_buffer_set_not_found_glyph(struct hb_buffer_t* buffer, unsigned int not_found);
     * }
     */
    public static void hb_buffer_set_not_found_glyph(MemorySegment buffer, int not_found) {
        var mh$ = hb_buffer_set_not_found_glyph$MH();
        try {
            mh$.invokeExact(buffer, not_found);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_get_not_found_glyph$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.const$0,"hb_buffer_get_not_found_glyph");
    }
    /**
     * {@snippet :
     * unsigned int hb_buffer_get_not_found_glyph(struct hb_buffer_t* buffer);
     * }
     */
    public static int hb_buffer_get_not_found_glyph(MemorySegment buffer) {
        var mh$ = hb_buffer_get_not_found_glyph$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_clear_contents$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.const$1,"hb_buffer_clear_contents");
    }
    /**
     * {@snippet :
     * void hb_buffer_clear_contents(struct hb_buffer_t* buffer);
     * }
     */
    public static void hb_buffer_clear_contents(MemorySegment buffer) {
        var mh$ = hb_buffer_clear_contents$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_pre_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.const$2,"hb_buffer_pre_allocate");
    }
    /**
     * {@snippet :
     * int hb_buffer_pre_allocate(struct hb_buffer_t* buffer, unsigned int size);
     * }
     */
    public static int hb_buffer_pre_allocate(MemorySegment buffer, int size) {
        var mh$ = hb_buffer_pre_allocate$MH();
        try {
            return (int)mh$.invokeExact(buffer, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_allocation_successful$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.const$3,"hb_buffer_allocation_successful");
    }
    /**
     * {@snippet :
     * int hb_buffer_allocation_successful(struct hb_buffer_t* buffer);
     * }
     */
    public static int hb_buffer_allocation_successful(MemorySegment buffer) {
        var mh$ = hb_buffer_allocation_successful$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_reverse$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.const$4,"hb_buffer_reverse");
    }
    /**
     * {@snippet :
     * void hb_buffer_reverse(struct hb_buffer_t* buffer);
     * }
     */
    public static void hb_buffer_reverse(MemorySegment buffer) {
        var mh$ = hb_buffer_reverse$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_reverse_range$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.const$5,"hb_buffer_reverse_range");
    }
    /**
     * {@snippet :
     * void hb_buffer_reverse_range(struct hb_buffer_t* buffer, unsigned int start, unsigned int end);
     * }
     */
    public static void hb_buffer_reverse_range(MemorySegment buffer, int start, int end) {
        var mh$ = hb_buffer_reverse_range$MH();
        try {
            mh$.invokeExact(buffer, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_reverse_clusters$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.const$0,"hb_buffer_reverse_clusters");
    }
    /**
     * {@snippet :
     * void hb_buffer_reverse_clusters(struct hb_buffer_t* buffer);
     * }
     */
    public static void hb_buffer_reverse_clusters(MemorySegment buffer) {
        var mh$ = hb_buffer_reverse_clusters$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_add$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.const$1,"hb_buffer_add");
    }
    /**
     * {@snippet :
     * void hb_buffer_add(struct hb_buffer_t* buffer, unsigned int codepoint, unsigned int cluster);
     * }
     */
    public static void hb_buffer_add(MemorySegment buffer, int codepoint, int cluster) {
        var mh$ = hb_buffer_add$MH();
        try {
            mh$.invokeExact(buffer, codepoint, cluster);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_add_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.const$3,"hb_buffer_add_utf8");
    }
    /**
     * {@snippet :
     * void hb_buffer_add_utf8(struct hb_buffer_t* buffer, char* text, int text_length, unsigned int item_offset, int item_length);
     * }
     */
    public static void hb_buffer_add_utf8(MemorySegment buffer, MemorySegment text, int text_length, int item_offset, int item_length) {
        var mh$ = hb_buffer_add_utf8$MH();
        try {
            mh$.invokeExact(buffer, text, text_length, item_offset, item_length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_add_utf16$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.const$4,"hb_buffer_add_utf16");
    }
    /**
     * {@snippet :
     * void hb_buffer_add_utf16(struct hb_buffer_t* buffer, unsigned short* text, int text_length, unsigned int item_offset, int item_length);
     * }
     */
    public static void hb_buffer_add_utf16(MemorySegment buffer, MemorySegment text, int text_length, int item_offset, int item_length) {
        var mh$ = hb_buffer_add_utf16$MH();
        try {
            mh$.invokeExact(buffer, text, text_length, item_offset, item_length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_add_utf32$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.const$5,"hb_buffer_add_utf32");
    }
    /**
     * {@snippet :
     * void hb_buffer_add_utf32(struct hb_buffer_t* buffer, unsigned int* text, int text_length, unsigned int item_offset, int item_length);
     * }
     */
    public static void hb_buffer_add_utf32(MemorySegment buffer, MemorySegment text, int text_length, int item_offset, int item_length) {
        var mh$ = hb_buffer_add_utf32$MH();
        try {
            mh$.invokeExact(buffer, text, text_length, item_offset, item_length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_add_latin1$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.const$0,"hb_buffer_add_latin1");
    }
    /**
     * {@snippet :
     * void hb_buffer_add_latin1(struct hb_buffer_t* buffer, unsigned char* text, int text_length, unsigned int item_offset, int item_length);
     * }
     */
    public static void hb_buffer_add_latin1(MemorySegment buffer, MemorySegment text, int text_length, int item_offset, int item_length) {
        var mh$ = hb_buffer_add_latin1$MH();
        try {
            mh$.invokeExact(buffer, text, text_length, item_offset, item_length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_add_codepoints$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.const$1,"hb_buffer_add_codepoints");
    }
    /**
     * {@snippet :
     * void hb_buffer_add_codepoints(struct hb_buffer_t* buffer, unsigned int* text, int text_length, unsigned int item_offset, int item_length);
     * }
     */
    public static void hb_buffer_add_codepoints(MemorySegment buffer, MemorySegment text, int text_length, int item_offset, int item_length) {
        var mh$ = hb_buffer_add_codepoints$MH();
        try {
            mh$.invokeExact(buffer, text, text_length, item_offset, item_length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_append$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.const$2,"hb_buffer_append");
    }
    /**
     * {@snippet :
     * void hb_buffer_append(struct hb_buffer_t* buffer, struct hb_buffer_t* source, unsigned int start, unsigned int end);
     * }
     */
    public static void hb_buffer_append(MemorySegment buffer, MemorySegment source, int start, int end) {
        var mh$ = hb_buffer_append$MH();
        try {
            mh$.invokeExact(buffer, source, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_set_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.const$3,"hb_buffer_set_length");
    }
    /**
     * {@snippet :
     * int hb_buffer_set_length(struct hb_buffer_t* buffer, unsigned int length);
     * }
     */
    public static int hb_buffer_set_length(MemorySegment buffer, int length) {
        var mh$ = hb_buffer_set_length$MH();
        try {
            return (int)mh$.invokeExact(buffer, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_get_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.const$4,"hb_buffer_get_length");
    }
    /**
     * {@snippet :
     * unsigned int hb_buffer_get_length(struct hb_buffer_t* buffer);
     * }
     */
    public static int hb_buffer_get_length(MemorySegment buffer) {
        var mh$ = hb_buffer_get_length$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_get_glyph_infos$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.const$5,"hb_buffer_get_glyph_infos");
    }
    /**
     * {@snippet :
     * struct hb_glyph_info_t* hb_buffer_get_glyph_infos(struct hb_buffer_t* buffer, unsigned int* length);
     * }
     */
    public static MemorySegment hb_buffer_get_glyph_infos(MemorySegment buffer, MemorySegment length) {
        var mh$ = hb_buffer_get_glyph_infos$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_get_glyph_positions$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.const$0,"hb_buffer_get_glyph_positions");
    }
    /**
     * {@snippet :
     * struct hb_glyph_position_t* hb_buffer_get_glyph_positions(struct hb_buffer_t* buffer, unsigned int* length);
     * }
     */
    public static MemorySegment hb_buffer_get_glyph_positions(MemorySegment buffer, MemorySegment length) {
        var mh$ = hb_buffer_get_glyph_positions$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_has_positions$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.const$1,"hb_buffer_has_positions");
    }
    /**
     * {@snippet :
     * int hb_buffer_has_positions(struct hb_buffer_t* buffer);
     * }
     */
    public static int hb_buffer_has_positions(MemorySegment buffer) {
        var mh$ = hb_buffer_has_positions$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_normalize_glyphs$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.const$2,"hb_buffer_normalize_glyphs");
    }
    /**
     * {@snippet :
     * void hb_buffer_normalize_glyphs(struct hb_buffer_t* buffer);
     * }
     */
    public static void hb_buffer_normalize_glyphs(MemorySegment buffer) {
        var mh$ = hb_buffer_normalize_glyphs$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum hb_buffer_serialize_flags_t.HB_BUFFER_SERIALIZE_FLAG_DEFAULT = 0;
     * }
     */
    public static int HB_BUFFER_SERIALIZE_FLAG_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_serialize_flags_t.HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS = 1;
     * }
     */
    public static int HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_serialize_flags_t.HB_BUFFER_SERIALIZE_FLAG_NO_POSITIONS = 2;
     * }
     */
    public static int HB_BUFFER_SERIALIZE_FLAG_NO_POSITIONS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_serialize_flags_t.HB_BUFFER_SERIALIZE_FLAG_NO_GLYPH_NAMES = 4;
     * }
     */
    public static int HB_BUFFER_SERIALIZE_FLAG_NO_GLYPH_NAMES() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_serialize_flags_t.HB_BUFFER_SERIALIZE_FLAG_GLYPH_EXTENTS = 8;
     * }
     */
    public static int HB_BUFFER_SERIALIZE_FLAG_GLYPH_EXTENTS() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_serialize_flags_t.HB_BUFFER_SERIALIZE_FLAG_GLYPH_FLAGS = 16;
     * }
     */
    public static int HB_BUFFER_SERIALIZE_FLAG_GLYPH_FLAGS() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_serialize_flags_t.HB_BUFFER_SERIALIZE_FLAG_NO_ADVANCES = 32;
     * }
     */
    public static int HB_BUFFER_SERIALIZE_FLAG_NO_ADVANCES() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_serialize_flags_t.HB_BUFFER_SERIALIZE_FLAG_DEFINED = 63;
     * }
     */
    public static int HB_BUFFER_SERIALIZE_FLAG_DEFINED() {
        return (int)63L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_serialize_format_t.HB_BUFFER_SERIALIZE_FORMAT_TEXT = 1413830740;
     * }
     */
    public static int HB_BUFFER_SERIALIZE_FORMAT_TEXT() {
        return (int)1413830740L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_serialize_format_t.HB_BUFFER_SERIALIZE_FORMAT_JSON = 1246973774;
     * }
     */
    public static int HB_BUFFER_SERIALIZE_FORMAT_JSON() {
        return (int)1246973774L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_serialize_format_t.HB_BUFFER_SERIALIZE_FORMAT_INVALID = 0;
     * }
     */
    public static int HB_BUFFER_SERIALIZE_FORMAT_INVALID() {
        return (int)0L;
    }
    public static MethodHandle hb_buffer_serialize_format_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.const$3,"hb_buffer_serialize_format_from_string");
    }
    /**
     * {@snippet :
     * enum hb_buffer_serialize_format_t hb_buffer_serialize_format_from_string(char* str, int len);
     * }
     */
    public static int hb_buffer_serialize_format_from_string(MemorySegment str, int len) {
        var mh$ = hb_buffer_serialize_format_from_string$MH();
        try {
            return (int)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_serialize_format_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.const$4,"hb_buffer_serialize_format_to_string");
    }
    /**
     * {@snippet :
     * char* hb_buffer_serialize_format_to_string(enum hb_buffer_serialize_format_t format);
     * }
     */
    public static MemorySegment hb_buffer_serialize_format_to_string(int format) {
        var mh$ = hb_buffer_serialize_format_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_serialize_list_formats$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.const$5,"hb_buffer_serialize_list_formats");
    }
    /**
     * {@snippet :
     * char** hb_buffer_serialize_list_formats();
     * }
     */
    public static MemorySegment hb_buffer_serialize_list_formats() {
        var mh$ = hb_buffer_serialize_list_formats$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_serialize_glyphs$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.const$1,"hb_buffer_serialize_glyphs");
    }
    /**
     * {@snippet :
     * unsigned int hb_buffer_serialize_glyphs(struct hb_buffer_t* buffer, unsigned int start, unsigned int end, char* buf, unsigned int buf_size, unsigned int* buf_consumed, struct hb_font_t* font, enum hb_buffer_serialize_format_t format, enum hb_buffer_serialize_flags_t flags);
     * }
     */
    public static int hb_buffer_serialize_glyphs(MemorySegment buffer, int start, int end, MemorySegment buf, int buf_size, MemorySegment buf_consumed, MemorySegment font, int format, int flags) {
        var mh$ = hb_buffer_serialize_glyphs$MH();
        try {
            return (int)mh$.invokeExact(buffer, start, end, buf, buf_size, buf_consumed, font, format, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_serialize_unicode$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.const$3,"hb_buffer_serialize_unicode");
    }
    /**
     * {@snippet :
     * unsigned int hb_buffer_serialize_unicode(struct hb_buffer_t* buffer, unsigned int start, unsigned int end, char* buf, unsigned int buf_size, unsigned int* buf_consumed, enum hb_buffer_serialize_format_t format, enum hb_buffer_serialize_flags_t flags);
     * }
     */
    public static int hb_buffer_serialize_unicode(MemorySegment buffer, int start, int end, MemorySegment buf, int buf_size, MemorySegment buf_consumed, int format, int flags) {
        var mh$ = hb_buffer_serialize_unicode$MH();
        try {
            return (int)mh$.invokeExact(buffer, start, end, buf, buf_size, buf_consumed, format, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_serialize$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.const$4,"hb_buffer_serialize");
    }
    /**
     * {@snippet :
     * unsigned int hb_buffer_serialize(struct hb_buffer_t* buffer, unsigned int start, unsigned int end, char* buf, unsigned int buf_size, unsigned int* buf_consumed, struct hb_font_t* font, enum hb_buffer_serialize_format_t format, enum hb_buffer_serialize_flags_t flags);
     * }
     */
    public static int hb_buffer_serialize(MemorySegment buffer, int start, int end, MemorySegment buf, int buf_size, MemorySegment buf_consumed, MemorySegment font, int format, int flags) {
        var mh$ = hb_buffer_serialize$MH();
        try {
            return (int)mh$.invokeExact(buffer, start, end, buf, buf_size, buf_consumed, font, format, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_deserialize_glyphs$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.const$6,"hb_buffer_deserialize_glyphs");
    }
    /**
     * {@snippet :
     * int hb_buffer_deserialize_glyphs(struct hb_buffer_t* buffer, char* buf, int buf_len, char** end_ptr, struct hb_font_t* font, enum hb_buffer_serialize_format_t format);
     * }
     */
    public static int hb_buffer_deserialize_glyphs(MemorySegment buffer, MemorySegment buf, int buf_len, MemorySegment end_ptr, MemorySegment font, int format) {
        var mh$ = hb_buffer_deserialize_glyphs$MH();
        try {
            return (int)mh$.invokeExact(buffer, buf, buf_len, end_ptr, font, format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_deserialize_unicode$MH() {
        return RuntimeHelper.requireNonNull(constants$1522.const$1,"hb_buffer_deserialize_unicode");
    }
    /**
     * {@snippet :
     * int hb_buffer_deserialize_unicode(struct hb_buffer_t* buffer, char* buf, int buf_len, char** end_ptr, enum hb_buffer_serialize_format_t format);
     * }
     */
    public static int hb_buffer_deserialize_unicode(MemorySegment buffer, MemorySegment buf, int buf_len, MemorySegment end_ptr, int format) {
        var mh$ = hb_buffer_deserialize_unicode$MH();
        try {
            return (int)mh$.invokeExact(buffer, buf, buf_len, end_ptr, format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum hb_buffer_diff_flags_t.HB_BUFFER_DIFF_FLAG_EQUAL = 0;
     * }
     */
    public static int HB_BUFFER_DIFF_FLAG_EQUAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_diff_flags_t.HB_BUFFER_DIFF_FLAG_CONTENT_TYPE_MISMATCH = 1;
     * }
     */
    public static int HB_BUFFER_DIFF_FLAG_CONTENT_TYPE_MISMATCH() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_diff_flags_t.HB_BUFFER_DIFF_FLAG_LENGTH_MISMATCH = 2;
     * }
     */
    public static int HB_BUFFER_DIFF_FLAG_LENGTH_MISMATCH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_diff_flags_t.HB_BUFFER_DIFF_FLAG_NOTDEF_PRESENT = 4;
     * }
     */
    public static int HB_BUFFER_DIFF_FLAG_NOTDEF_PRESENT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_diff_flags_t.HB_BUFFER_DIFF_FLAG_DOTTED_CIRCLE_PRESENT = 8;
     * }
     */
    public static int HB_BUFFER_DIFF_FLAG_DOTTED_CIRCLE_PRESENT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_diff_flags_t.HB_BUFFER_DIFF_FLAG_CODEPOINT_MISMATCH = 16;
     * }
     */
    public static int HB_BUFFER_DIFF_FLAG_CODEPOINT_MISMATCH() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_diff_flags_t.HB_BUFFER_DIFF_FLAG_CLUSTER_MISMATCH = 32;
     * }
     */
    public static int HB_BUFFER_DIFF_FLAG_CLUSTER_MISMATCH() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_diff_flags_t.HB_BUFFER_DIFF_FLAG_GLYPH_FLAGS_MISMATCH = 64;
     * }
     */
    public static int HB_BUFFER_DIFF_FLAG_GLYPH_FLAGS_MISMATCH() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum hb_buffer_diff_flags_t.HB_BUFFER_DIFF_FLAG_POSITION_MISMATCH = 128;
     * }
     */
    public static int HB_BUFFER_DIFF_FLAG_POSITION_MISMATCH() {
        return (int)128L;
    }
    public static MethodHandle hb_buffer_diff$MH() {
        return RuntimeHelper.requireNonNull(constants$1522.const$2,"hb_buffer_diff");
    }
    /**
     * {@snippet :
     * enum hb_buffer_diff_flags_t hb_buffer_diff(struct hb_buffer_t* buffer, struct hb_buffer_t* reference, unsigned int dottedcircle_glyph, unsigned int position_fuzz);
     * }
     */
    public static int hb_buffer_diff(MemorySegment buffer, MemorySegment reference, int dottedcircle_glyph, int position_fuzz) {
        var mh$ = hb_buffer_diff$MH();
        try {
            return (int)mh$.invokeExact(buffer, reference, dottedcircle_glyph, position_fuzz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_buffer_set_message_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.const$0,"hb_buffer_set_message_func");
    }
    /**
     * {@snippet :
     * void hb_buffer_set_message_func(struct hb_buffer_t* buffer, int (*func)(struct hb_buffer_t*,struct hb_font_t*,char*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_buffer_set_message_func(MemorySegment buffer, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_buffer_set_message_func$MH();
        try {
            mh$.invokeExact(buffer, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_glyph_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.const$4,"hb_font_funcs_set_glyph_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_glyph_func(struct hb_font_funcs_t* ffuncs, int (*func)(struct hb_font_t*,void*,unsigned int,unsigned int,unsigned int*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_glyph_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_glyph_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_funcs_set_eastasian_width_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1524.const$2,"hb_unicode_funcs_set_eastasian_width_func");
    }
    /**
     * {@snippet :
     * void hb_unicode_funcs_set_eastasian_width_func(struct hb_unicode_funcs_t* ufuncs, unsigned int (*func)(struct hb_unicode_funcs_t*,unsigned int,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_unicode_funcs_set_eastasian_width_func(MemorySegment ufuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_unicode_funcs_set_eastasian_width_func$MH();
        try {
            mh$.invokeExact(ufuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_eastasian_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1524.const$3,"hb_unicode_eastasian_width");
    }
    /**
     * {@snippet :
     * unsigned int hb_unicode_eastasian_width(struct hb_unicode_funcs_t* ufuncs, unsigned int unicode);
     * }
     */
    public static int hb_unicode_eastasian_width(MemorySegment ufuncs, int unicode) {
        var mh$ = hb_unicode_eastasian_width$MH();
        try {
            return (int)mh$.invokeExact(ufuncs, unicode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_funcs_set_decompose_compatibility_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1525.const$1,"hb_unicode_funcs_set_decompose_compatibility_func");
    }
    /**
     * {@snippet :
     * void hb_unicode_funcs_set_decompose_compatibility_func(struct hb_unicode_funcs_t* ufuncs, unsigned int (*func)(struct hb_unicode_funcs_t*,unsigned int,unsigned int*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_unicode_funcs_set_decompose_compatibility_func(MemorySegment ufuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_unicode_funcs_set_decompose_compatibility_func$MH();
        try {
            mh$.invokeExact(ufuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_unicode_decompose_compatibility$MH() {
        return RuntimeHelper.requireNonNull(constants$1525.const$2,"hb_unicode_decompose_compatibility");
    }
    /**
     * {@snippet :
     * unsigned int hb_unicode_decompose_compatibility(struct hb_unicode_funcs_t* ufuncs, unsigned int u, unsigned int* decomposed);
     * }
     */
    public static int hb_unicode_decompose_compatibility(MemorySegment ufuncs, int u, MemorySegment decomposed) {
        var mh$ = hb_unicode_decompose_compatibility$MH();
        try {
            return (int)mh$.invokeExact(ufuncs, u, decomposed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_glyph_v_kerning_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.const$0,"hb_font_funcs_set_glyph_v_kerning_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_glyph_v_kerning_func(struct hb_font_funcs_t* ffuncs, int (*func)(struct hb_font_t*,void*,unsigned int,unsigned int,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_glyph_v_kerning_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_glyph_v_kerning_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph_v_kerning$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.const$1,"hb_font_get_glyph_v_kerning");
    }
    /**
     * {@snippet :
     * int hb_font_get_glyph_v_kerning(struct hb_font_t* font, unsigned int top_glyph, unsigned int bottom_glyph);
     * }
     */
    public static int hb_font_get_glyph_v_kerning(MemorySegment font, int top_glyph, int bottom_glyph) {
        var mh$ = hb_font_get_glyph_v_kerning$MH();
        try {
            return (int)mh$.invokeExact(font, top_glyph, bottom_glyph);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_funcs_set_glyph_shape_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.const$5,"hb_font_funcs_set_glyph_shape_func");
    }
    /**
     * {@snippet :
     * void hb_font_funcs_set_glyph_shape_func(struct hb_font_funcs_t* ffuncs, void (*func)(struct hb_font_t*,void*,unsigned int,struct hb_draw_funcs_t*,void*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void hb_font_funcs_set_glyph_shape_func(MemorySegment ffuncs, MemorySegment func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = hb_font_funcs_set_glyph_shape_func$MH();
        try {
            mh$.invokeExact(ffuncs, func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_font_get_glyph_shape$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.const$0,"hb_font_get_glyph_shape");
    }
    /**
     * {@snippet :
     * void hb_font_get_glyph_shape(struct hb_font_t* font, unsigned int glyph, struct hb_draw_funcs_t* dfuncs, void* draw_data);
     * }
     */
    public static void hb_font_get_glyph_shape(MemorySegment font, int glyph, MemorySegment dfuncs, MemorySegment draw_data) {
        var mh$ = hb_font_get_glyph_shape$MH();
        try {
            mh$.invokeExact(font, glyph, dfuncs, draw_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_shape$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.const$1,"hb_shape");
    }
    /**
     * {@snippet :
     * void hb_shape(struct hb_font_t* font, struct hb_buffer_t* buffer, struct hb_feature_t* features, unsigned int num_features);
     * }
     */
    public static void hb_shape(MemorySegment font, MemorySegment buffer, MemorySegment features, int num_features) {
        var mh$ = hb_shape$MH();
        try {
            mh$.invokeExact(font, buffer, features, num_features);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_shape_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.const$2,"hb_shape_full");
    }
    /**
     * {@snippet :
     * int hb_shape_full(struct hb_font_t* font, struct hb_buffer_t* buffer, struct hb_feature_t* features, unsigned int num_features, char** shaper_list);
     * }
     */
    public static int hb_shape_full(MemorySegment font, MemorySegment buffer, MemorySegment features, int num_features, MemorySegment shaper_list) {
        var mh$ = hb_shape_full$MH();
        try {
            return (int)mh$.invokeExact(font, buffer, features, num_features, shaper_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_shape_justify$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.const$4,"hb_shape_justify");
    }
    /**
     * {@snippet :
     * int hb_shape_justify(struct hb_font_t* font, struct hb_buffer_t* buffer, struct hb_feature_t* features, unsigned int num_features, char** shaper_list, float min_target_advance, float max_target_advance, float* advance, unsigned int* var_tag, float* var_value);
     * }
     */
    public static int hb_shape_justify(MemorySegment font, MemorySegment buffer, MemorySegment features, int num_features, MemorySegment shaper_list, float min_target_advance, float max_target_advance, MemorySegment advance, MemorySegment var_tag, MemorySegment var_value) {
        var mh$ = hb_shape_justify$MH();
        try {
            return (int)mh$.invokeExact(font, buffer, features, num_features, shaper_list, min_target_advance, max_target_advance, advance, var_tag, var_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_shape_list_shapers$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.const$5,"hb_shape_list_shapers");
    }
    /**
     * {@snippet :
     * char** hb_shape_list_shapers();
     * }
     */
    public static MemorySegment hb_shape_list_shapers() {
        var mh$ = hb_shape_list_shapers$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_shape_plan_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.const$1,"hb_shape_plan_create");
    }
    /**
     * {@snippet :
     * struct hb_shape_plan_t* hb_shape_plan_create(struct hb_face_t* face, struct hb_segment_properties_t* props, struct hb_feature_t* user_features, unsigned int num_user_features, char** shaper_list);
     * }
     */
    public static MemorySegment hb_shape_plan_create(MemorySegment face, MemorySegment props, MemorySegment user_features, int num_user_features, MemorySegment shaper_list) {
        var mh$ = hb_shape_plan_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(face, props, user_features, num_user_features, shaper_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_shape_plan_create_cached$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.const$2,"hb_shape_plan_create_cached");
    }
    /**
     * {@snippet :
     * struct hb_shape_plan_t* hb_shape_plan_create_cached(struct hb_face_t* face, struct hb_segment_properties_t* props, struct hb_feature_t* user_features, unsigned int num_user_features, char** shaper_list);
     * }
     */
    public static MemorySegment hb_shape_plan_create_cached(MemorySegment face, MemorySegment props, MemorySegment user_features, int num_user_features, MemorySegment shaper_list) {
        var mh$ = hb_shape_plan_create_cached$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(face, props, user_features, num_user_features, shaper_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_shape_plan_create2$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.const$4,"hb_shape_plan_create2");
    }
    /**
     * {@snippet :
     * struct hb_shape_plan_t* hb_shape_plan_create2(struct hb_face_t* face, struct hb_segment_properties_t* props, struct hb_feature_t* user_features, unsigned int num_user_features, int* coords, unsigned int num_coords, char** shaper_list);
     * }
     */
    public static MemorySegment hb_shape_plan_create2(MemorySegment face, MemorySegment props, MemorySegment user_features, int num_user_features, MemorySegment coords, int num_coords, MemorySegment shaper_list) {
        var mh$ = hb_shape_plan_create2$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(face, props, user_features, num_user_features, coords, num_coords, shaper_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_shape_plan_create_cached2$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.const$5,"hb_shape_plan_create_cached2");
    }
    /**
     * {@snippet :
     * struct hb_shape_plan_t* hb_shape_plan_create_cached2(struct hb_face_t* face, struct hb_segment_properties_t* props, struct hb_feature_t* user_features, unsigned int num_user_features, int* coords, unsigned int num_coords, char** shaper_list);
     * }
     */
    public static MemorySegment hb_shape_plan_create_cached2(MemorySegment face, MemorySegment props, MemorySegment user_features, int num_user_features, MemorySegment coords, int num_coords, MemorySegment shaper_list) {
        var mh$ = hb_shape_plan_create_cached2$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(face, props, user_features, num_user_features, coords, num_coords, shaper_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_shape_plan_get_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.const$0,"hb_shape_plan_get_empty");
    }
    /**
     * {@snippet :
     * struct hb_shape_plan_t* hb_shape_plan_get_empty();
     * }
     */
    public static MemorySegment hb_shape_plan_get_empty() {
        var mh$ = hb_shape_plan_get_empty$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_shape_plan_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.const$1,"hb_shape_plan_reference");
    }
    /**
     * {@snippet :
     * struct hb_shape_plan_t* hb_shape_plan_reference(struct hb_shape_plan_t* shape_plan);
     * }
     */
    public static MemorySegment hb_shape_plan_reference(MemorySegment shape_plan) {
        var mh$ = hb_shape_plan_reference$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(shape_plan);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_shape_plan_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.const$2,"hb_shape_plan_destroy");
    }
    /**
     * {@snippet :
     * void hb_shape_plan_destroy(struct hb_shape_plan_t* shape_plan);
     * }
     */
    public static void hb_shape_plan_destroy(MemorySegment shape_plan) {
        var mh$ = hb_shape_plan_destroy$MH();
        try {
            mh$.invokeExact(shape_plan);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_shape_plan_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.const$4,"hb_shape_plan_set_user_data");
    }
    /**
     * {@snippet :
     * int hb_shape_plan_set_user_data(struct hb_shape_plan_t* shape_plan, struct hb_user_data_key_t* key, void* data, void (*destroy)(void*), int replace);
     * }
     */
    public static int hb_shape_plan_set_user_data(MemorySegment shape_plan, MemorySegment key, MemorySegment data, MemorySegment destroy, int replace) {
        var mh$ = hb_shape_plan_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(shape_plan, key, data, destroy, replace);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_shape_plan_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.const$5,"hb_shape_plan_get_user_data");
    }
    /**
     * {@snippet :
     * void* hb_shape_plan_get_user_data(struct hb_shape_plan_t* shape_plan, struct hb_user_data_key_t* key);
     * }
     */
    public static MemorySegment hb_shape_plan_get_user_data(MemorySegment shape_plan, MemorySegment key) {
        var mh$ = hb_shape_plan_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(shape_plan, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_shape_plan_execute$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.const$0,"hb_shape_plan_execute");
    }
    /**
     * {@snippet :
     * int hb_shape_plan_execute(struct hb_shape_plan_t* shape_plan, struct hb_font_t* font, struct hb_buffer_t* buffer, struct hb_feature_t* features, unsigned int num_features);
     * }
     */
    public static int hb_shape_plan_execute(MemorySegment shape_plan, MemorySegment font, MemorySegment buffer, MemorySegment features, int num_features) {
        var mh$ = hb_shape_plan_execute$MH();
        try {
            return (int)mh$.invokeExact(shape_plan, font, buffer, features, num_features);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_shape_plan_get_shaper$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.const$1,"hb_shape_plan_get_shaper");
    }
    /**
     * {@snippet :
     * char* hb_shape_plan_get_shaper(struct hb_shape_plan_t* shape_plan);
     * }
     */
    public static MemorySegment hb_shape_plan_get_shaper(MemorySegment shape_plan) {
        var mh$ = hb_shape_plan_get_shaper$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(shape_plan);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum hb_style_tag_t.HB_STYLE_TAG_ITALIC = 1769234796;
     * }
     */
    public static int HB_STYLE_TAG_ITALIC() {
        return (int)1769234796L;
    }
    /**
     * {@snippet :
     * enum hb_style_tag_t.HB_STYLE_TAG_OPTICAL_SIZE = 1869640570;
     * }
     */
    public static int HB_STYLE_TAG_OPTICAL_SIZE() {
        return (int)1869640570L;
    }
    /**
     * {@snippet :
     * enum hb_style_tag_t.HB_STYLE_TAG_SLANT_ANGLE = 1936486004;
     * }
     */
    public static int HB_STYLE_TAG_SLANT_ANGLE() {
        return (int)1936486004L;
    }
    /**
     * {@snippet :
     * enum hb_style_tag_t.HB_STYLE_TAG_SLANT_RATIO = 1399615092;
     * }
     */
    public static int HB_STYLE_TAG_SLANT_RATIO() {
        return (int)1399615092L;
    }
    /**
     * {@snippet :
     * enum hb_style_tag_t.HB_STYLE_TAG_WIDTH = 2003072104;
     * }
     */
    public static int HB_STYLE_TAG_WIDTH() {
        return (int)2003072104L;
    }
    /**
     * {@snippet :
     * enum hb_style_tag_t.HB_STYLE_TAG_WEIGHT = 2003265652;
     * }
     */
    public static int HB_STYLE_TAG_WEIGHT() {
        return (int)2003265652L;
    }
}


